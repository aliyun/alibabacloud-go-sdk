// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iListCheckRuleResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetCheckRules(v []*ListCheckRuleResponseBodyCheckRules) *ListCheckRuleResponseBody
	GetCheckRules() []*ListCheckRuleResponseBodyCheckRules
	SetPageInfo(v *ListCheckRuleResponseBodyPageInfo) *ListCheckRuleResponseBody
	GetPageInfo() *ListCheckRuleResponseBodyPageInfo
	SetRequestId(v string) *ListCheckRuleResponseBody
	GetRequestId() *string
}

type ListCheckRuleResponseBody struct {
	// Check rules.
	CheckRules []*ListCheckRuleResponseBodyCheckRules `json:"CheckRules,omitempty" xml:"CheckRules,omitempty" type:"Repeated"`
	// Pagination information.
	PageInfo *ListCheckRuleResponseBodyPageInfo `json:"PageInfo,omitempty" xml:"PageInfo,omitempty" type:"Struct"`
	// The ID of this request, which is a unique identifier generated by Alibaba Cloud for the request. It can be used for troubleshooting and problem localization.
	//
	// example:
	//
	// 52870893-48A7-5A9E-9E05-6253E5B6****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListCheckRuleResponseBody) String() string {
	return dara.Prettify(s)
}

func (s ListCheckRuleResponseBody) GoString() string {
	return s.String()
}

func (s *ListCheckRuleResponseBody) GetCheckRules() []*ListCheckRuleResponseBodyCheckRules {
	return s.CheckRules
}

func (s *ListCheckRuleResponseBody) GetPageInfo() *ListCheckRuleResponseBodyPageInfo {
	return s.PageInfo
}

func (s *ListCheckRuleResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *ListCheckRuleResponseBody) SetCheckRules(v []*ListCheckRuleResponseBodyCheckRules) *ListCheckRuleResponseBody {
	s.CheckRules = v
	return s
}

func (s *ListCheckRuleResponseBody) SetPageInfo(v *ListCheckRuleResponseBodyPageInfo) *ListCheckRuleResponseBody {
	s.PageInfo = v
	return s
}

func (s *ListCheckRuleResponseBody) SetRequestId(v string) *ListCheckRuleResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListCheckRuleResponseBody) Validate() error {
	return dara.Validate(s)
}

type ListCheckRuleResponseBodyCheckRules struct {
	// The UID of the current user.
	//
	// example:
	//
	// 176316827610****
	AliUid *int64 `json:"AliUid,omitempty" xml:"AliUid,omitempty"`
	// The subtype of the cloud product.
	//
	// > For specific meanings, refer to the [GetCloudAssetCriteria](~~GetCloudAssetCriteria~~) AssetSubType.
	//
	// example:
	//
	// 0
	AssetSubType *int32 `json:"AssetSubType,omitempty" xml:"AssetSubType,omitempty"`
	// The type of cloud asset.
	//
	// > For specific meanings, refer to the [GetCloudAssetCriteria](~~GetCloudAssetCriteria~~) AssetType.
	//
	// example:
	//
	// 1
	AssetType *int32 `json:"AssetType,omitempty" xml:"AssetType,omitempty"`
	// The ID of the check item.
	//
	// example:
	//
	// 77
	CheckId *int64 `json:"CheckId,omitempty" xml:"CheckId,omitempty"`
	// The display name of the check item section.
	CheckPolicies []*ListCheckRuleResponseBodyCheckRulesCheckPolicies `json:"CheckPolicies,omitempty" xml:"CheckPolicies,omitempty" type:"Repeated"`
	// The name of the check item.
	//
	// example:
	//
	// Check for IPS Whitelist on CEN (Enterprise Edition) Tab
	CheckShowName *string `json:"CheckShowName,omitempty" xml:"CheckShowName,omitempty"`
	// The sub-asset type of the cloud product.
	//
	// example:
	//
	// INSTANCE
	InstanceSubType *string `json:"InstanceSubType,omitempty" xml:"InstanceSubType,omitempty"`
	// The asset type of the cloud product.
	//
	// example:
	//
	// ecs
	InstanceType *string `json:"InstanceType,omitempty" xml:"InstanceType,omitempty"`
	// Remark.
	//
	// example:
	//
	// remark
	Remark *string `json:"Remark,omitempty" xml:"Remark,omitempty"`
	// The ID of the rule.
	//
	// example:
	//
	// 8000**
	RuleId *int64 `json:"RuleId,omitempty" xml:"RuleId,omitempty"`
	// The type of rule. Default is **WHITE**. Values:
	//
	// - **WHITE**: Add to whitelist
	//
	// example:
	//
	// WHITE
	RuleType *string `json:"RuleType,omitempty" xml:"RuleType,omitempty"`
	// The scope where the rule applies. Values:
	//
	// - **INSTNACE**: Instance
	//
	// - **ITEM**: Check item
	//
	// example:
	//
	// INSTANCE
	ScopeType *string `json:"ScopeType,omitempty" xml:"ScopeType,omitempty"`
	// The server vendor. Values:
	//
	// - **0**: Alibaba Cloud asset
	//
	// - **1**: Non-cloud asset
	//
	// - **2**: IDC asset
	//
	// - **3**, **4**, **5**, **7**: Other cloud assets
	//
	// example:
	//
	// 0
	Vendor *int32 `json:"Vendor,omitempty" xml:"Vendor,omitempty"`
	// The name of the server provider.
	//
	// example:
	//
	// ALIYUN
	VendorName *string `json:"VendorName,omitempty" xml:"VendorName,omitempty"`
}

func (s ListCheckRuleResponseBodyCheckRules) String() string {
	return dara.Prettify(s)
}

func (s ListCheckRuleResponseBodyCheckRules) GoString() string {
	return s.String()
}

func (s *ListCheckRuleResponseBodyCheckRules) GetAliUid() *int64 {
	return s.AliUid
}

func (s *ListCheckRuleResponseBodyCheckRules) GetAssetSubType() *int32 {
	return s.AssetSubType
}

func (s *ListCheckRuleResponseBodyCheckRules) GetAssetType() *int32 {
	return s.AssetType
}

func (s *ListCheckRuleResponseBodyCheckRules) GetCheckId() *int64 {
	return s.CheckId
}

func (s *ListCheckRuleResponseBodyCheckRules) GetCheckPolicies() []*ListCheckRuleResponseBodyCheckRulesCheckPolicies {
	return s.CheckPolicies
}

func (s *ListCheckRuleResponseBodyCheckRules) GetCheckShowName() *string {
	return s.CheckShowName
}

func (s *ListCheckRuleResponseBodyCheckRules) GetInstanceSubType() *string {
	return s.InstanceSubType
}

func (s *ListCheckRuleResponseBodyCheckRules) GetInstanceType() *string {
	return s.InstanceType
}

func (s *ListCheckRuleResponseBodyCheckRules) GetRemark() *string {
	return s.Remark
}

func (s *ListCheckRuleResponseBodyCheckRules) GetRuleId() *int64 {
	return s.RuleId
}

func (s *ListCheckRuleResponseBodyCheckRules) GetRuleType() *string {
	return s.RuleType
}

func (s *ListCheckRuleResponseBodyCheckRules) GetScopeType() *string {
	return s.ScopeType
}

func (s *ListCheckRuleResponseBodyCheckRules) GetVendor() *int32 {
	return s.Vendor
}

func (s *ListCheckRuleResponseBodyCheckRules) GetVendorName() *string {
	return s.VendorName
}

func (s *ListCheckRuleResponseBodyCheckRules) SetAliUid(v int64) *ListCheckRuleResponseBodyCheckRules {
	s.AliUid = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetAssetSubType(v int32) *ListCheckRuleResponseBodyCheckRules {
	s.AssetSubType = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetAssetType(v int32) *ListCheckRuleResponseBodyCheckRules {
	s.AssetType = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetCheckId(v int64) *ListCheckRuleResponseBodyCheckRules {
	s.CheckId = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetCheckPolicies(v []*ListCheckRuleResponseBodyCheckRulesCheckPolicies) *ListCheckRuleResponseBodyCheckRules {
	s.CheckPolicies = v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetCheckShowName(v string) *ListCheckRuleResponseBodyCheckRules {
	s.CheckShowName = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetInstanceSubType(v string) *ListCheckRuleResponseBodyCheckRules {
	s.InstanceSubType = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetInstanceType(v string) *ListCheckRuleResponseBodyCheckRules {
	s.InstanceType = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetRemark(v string) *ListCheckRuleResponseBodyCheckRules {
	s.Remark = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetRuleId(v int64) *ListCheckRuleResponseBodyCheckRules {
	s.RuleId = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetRuleType(v string) *ListCheckRuleResponseBodyCheckRules {
	s.RuleType = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetScopeType(v string) *ListCheckRuleResponseBodyCheckRules {
	s.ScopeType = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetVendor(v int32) *ListCheckRuleResponseBodyCheckRules {
	s.Vendor = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) SetVendorName(v string) *ListCheckRuleResponseBodyCheckRules {
	s.VendorName = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRules) Validate() error {
	return dara.Validate(s)
}

type ListCheckRuleResponseBodyCheckRulesCheckPolicies struct {
	// Display name of the item\\"s chapter.
	//
	// example:
	//
	// Access Control
	SectionShowName *string `json:"sectionShowName,omitempty" xml:"sectionShowName,omitempty"`
}

func (s ListCheckRuleResponseBodyCheckRulesCheckPolicies) String() string {
	return dara.Prettify(s)
}

func (s ListCheckRuleResponseBodyCheckRulesCheckPolicies) GoString() string {
	return s.String()
}

func (s *ListCheckRuleResponseBodyCheckRulesCheckPolicies) GetSectionShowName() *string {
	return s.SectionShowName
}

func (s *ListCheckRuleResponseBodyCheckRulesCheckPolicies) SetSectionShowName(v string) *ListCheckRuleResponseBodyCheckRulesCheckPolicies {
	s.SectionShowName = &v
	return s
}

func (s *ListCheckRuleResponseBodyCheckRulesCheckPolicies) Validate() error {
	return dara.Validate(s)
}

type ListCheckRuleResponseBodyPageInfo struct {
	// The number of data entries displayed on the current page.
	//
	// example:
	//
	// 10
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
	// The page number in a paginated query.
	//
	// example:
	//
	// 1
	CurrentPage *int32 `json:"CurrentPage,omitempty" xml:"CurrentPage,omitempty"`
	// The maximum number of data entries displayed per page in a paginated query.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// Total number of data entries.
	//
	// example:
	//
	// 10
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListCheckRuleResponseBodyPageInfo) String() string {
	return dara.Prettify(s)
}

func (s ListCheckRuleResponseBodyPageInfo) GoString() string {
	return s.String()
}

func (s *ListCheckRuleResponseBodyPageInfo) GetCount() *int32 {
	return s.Count
}

func (s *ListCheckRuleResponseBodyPageInfo) GetCurrentPage() *int32 {
	return s.CurrentPage
}

func (s *ListCheckRuleResponseBodyPageInfo) GetPageSize() *int32 {
	return s.PageSize
}

func (s *ListCheckRuleResponseBodyPageInfo) GetTotalCount() *int32 {
	return s.TotalCount
}

func (s *ListCheckRuleResponseBodyPageInfo) SetCount(v int32) *ListCheckRuleResponseBodyPageInfo {
	s.Count = &v
	return s
}

func (s *ListCheckRuleResponseBodyPageInfo) SetCurrentPage(v int32) *ListCheckRuleResponseBodyPageInfo {
	s.CurrentPage = &v
	return s
}

func (s *ListCheckRuleResponseBodyPageInfo) SetPageSize(v int32) *ListCheckRuleResponseBodyPageInfo {
	s.PageSize = &v
	return s
}

func (s *ListCheckRuleResponseBodyPageInfo) SetTotalCount(v int32) *ListCheckRuleResponseBodyPageInfo {
	s.TotalCount = &v
	return s
}

func (s *ListCheckRuleResponseBodyPageInfo) Validate() error {
	return dara.Validate(s)
}
