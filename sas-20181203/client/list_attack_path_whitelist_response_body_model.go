// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iListAttackPathWhitelistResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetAttackPathWhitelistList(v []*ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) *ListAttackPathWhitelistResponseBody
	GetAttackPathWhitelistList() []*ListAttackPathWhitelistResponseBodyAttackPathWhitelistList
	SetPageInfo(v *ListAttackPathWhitelistResponseBodyPageInfo) *ListAttackPathWhitelistResponseBody
	GetPageInfo() *ListAttackPathWhitelistResponseBodyPageInfo
	SetRequestId(v string) *ListAttackPathWhitelistResponseBody
	GetRequestId() *string
}

type ListAttackPathWhitelistResponseBody struct {
	// List of attack path whitelists.
	AttackPathWhitelistList []*ListAttackPathWhitelistResponseBodyAttackPathWhitelistList `json:"AttackPathWhitelistList,omitempty" xml:"AttackPathWhitelistList,omitempty" type:"Repeated"`
	// Page information for paginated queries.
	PageInfo *ListAttackPathWhitelistResponseBodyPageInfo `json:"PageInfo,omitempty" xml:"PageInfo,omitempty" type:"Struct"`
	// The ID of this request, which is a unique identifier generated by Alibaba Cloud for the request and can be used for troubleshooting and problem localization.
	//
	// example:
	//
	// 89AD16CC-97EE-50F3-9B12-9E28E5C8****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAttackPathWhitelistResponseBody) String() string {
	return dara.Prettify(s)
}

func (s ListAttackPathWhitelistResponseBody) GoString() string {
	return s.String()
}

func (s *ListAttackPathWhitelistResponseBody) GetAttackPathWhitelistList() []*ListAttackPathWhitelistResponseBodyAttackPathWhitelistList {
	return s.AttackPathWhitelistList
}

func (s *ListAttackPathWhitelistResponseBody) GetPageInfo() *ListAttackPathWhitelistResponseBodyPageInfo {
	return s.PageInfo
}

func (s *ListAttackPathWhitelistResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *ListAttackPathWhitelistResponseBody) SetAttackPathWhitelistList(v []*ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) *ListAttackPathWhitelistResponseBody {
	s.AttackPathWhitelistList = v
	return s
}

func (s *ListAttackPathWhitelistResponseBody) SetPageInfo(v *ListAttackPathWhitelistResponseBodyPageInfo) *ListAttackPathWhitelistResponseBody {
	s.PageInfo = v
	return s
}

func (s *ListAttackPathWhitelistResponseBody) SetRequestId(v string) *ListAttackPathWhitelistResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBody) Validate() error {
	return dara.Validate(s)
}

type ListAttackPathWhitelistResponseBodyAttackPathWhitelistList struct {
	// Attack path whitelist ID.
	//
	// example:
	//
	// apwl-b33dec0acf9b42aabde032d656c0****
	AttackPathWhitelistId *string `json:"AttackPathWhitelistId,omitempty" xml:"AttackPathWhitelistId,omitempty"`
	// Timestamp of the last modification, in milliseconds.
	//
	// example:
	//
	// 1731897750000
	LastModifiedTimestamp *int64 `json:"LastModifiedTimestamp,omitempty" xml:"LastModifiedTimestamp,omitempty"`
	// Path name.
	//
	// example:
	//
	// ecs_get_credential_by_create_login_profile
	PathName *string `json:"PathName,omitempty" xml:"PathName,omitempty"`
	// Path type.
	//
	// example:
	//
	// role_escalation
	PathType *string `json:"PathType,omitempty" xml:"PathType,omitempty"`
	// Remark.
	//
	// example:
	//
	// test
	Remark *string `json:"Remark,omitempty" xml:"Remark,omitempty"`
	// Whitelist name.
	//
	// example:
	//
	// test
	WhitelistName *string `json:"WhitelistName,omitempty" xml:"WhitelistName,omitempty"`
	// Whitelist type.
	//
	// example:
	//
	// PART_ASSET
	WhitelistType *string `json:"WhitelistType,omitempty" xml:"WhitelistType,omitempty"`
}

func (s ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) String() string {
	return dara.Prettify(s)
}

func (s ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) GoString() string {
	return s.String()
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) GetAttackPathWhitelistId() *string {
	return s.AttackPathWhitelistId
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) GetLastModifiedTimestamp() *int64 {
	return s.LastModifiedTimestamp
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) GetPathName() *string {
	return s.PathName
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) GetPathType() *string {
	return s.PathType
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) GetRemark() *string {
	return s.Remark
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) GetWhitelistName() *string {
	return s.WhitelistName
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) GetWhitelistType() *string {
	return s.WhitelistType
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) SetAttackPathWhitelistId(v string) *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList {
	s.AttackPathWhitelistId = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) SetLastModifiedTimestamp(v int64) *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList {
	s.LastModifiedTimestamp = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) SetPathName(v string) *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList {
	s.PathName = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) SetPathType(v string) *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList {
	s.PathType = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) SetRemark(v string) *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList {
	s.Remark = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) SetWhitelistName(v string) *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList {
	s.WhitelistName = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) SetWhitelistType(v string) *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList {
	s.WhitelistType = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyAttackPathWhitelistList) Validate() error {
	return dara.Validate(s)
}

type ListAttackPathWhitelistResponseBodyPageInfo struct {
	// Number of items displayed on the current page in a paginated query.
	//
	// example:
	//
	// 20
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
	// Current page number in a paginated query.
	//
	// example:
	//
	// 1
	CurrentPage *int32 `json:"CurrentPage,omitempty" xml:"CurrentPage,omitempty"`
	// Number of items per page in the returned data.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// Total number of items.
	//
	// example:
	//
	// 49
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListAttackPathWhitelistResponseBodyPageInfo) String() string {
	return dara.Prettify(s)
}

func (s ListAttackPathWhitelistResponseBodyPageInfo) GoString() string {
	return s.String()
}

func (s *ListAttackPathWhitelistResponseBodyPageInfo) GetCount() *int32 {
	return s.Count
}

func (s *ListAttackPathWhitelistResponseBodyPageInfo) GetCurrentPage() *int32 {
	return s.CurrentPage
}

func (s *ListAttackPathWhitelistResponseBodyPageInfo) GetPageSize() *int32 {
	return s.PageSize
}

func (s *ListAttackPathWhitelistResponseBodyPageInfo) GetTotalCount() *int32 {
	return s.TotalCount
}

func (s *ListAttackPathWhitelistResponseBodyPageInfo) SetCount(v int32) *ListAttackPathWhitelistResponseBodyPageInfo {
	s.Count = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyPageInfo) SetCurrentPage(v int32) *ListAttackPathWhitelistResponseBodyPageInfo {
	s.CurrentPage = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyPageInfo) SetPageSize(v int32) *ListAttackPathWhitelistResponseBodyPageInfo {
	s.PageSize = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyPageInfo) SetTotalCount(v int32) *ListAttackPathWhitelistResponseBodyPageInfo {
	s.TotalCount = &v
	return s
}

func (s *ListAttackPathWhitelistResponseBodyPageInfo) Validate() error {
	return dara.Validate(s)
}
