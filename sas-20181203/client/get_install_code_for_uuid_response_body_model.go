// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iGetInstallCodeForUuidResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetCode(v int32) *GetInstallCodeForUuidResponseBody
	GetCode() *int32
	SetHttpStatusCode(v int64) *GetInstallCodeForUuidResponseBody
	GetHttpStatusCode() *int64
	SetInstallCode(v *GetInstallCodeForUuidResponseBodyInstallCode) *GetInstallCodeForUuidResponseBody
	GetInstallCode() *GetInstallCodeForUuidResponseBodyInstallCode
	SetMessage(v string) *GetInstallCodeForUuidResponseBody
	GetMessage() *string
	SetRequestId(v string) *GetInstallCodeForUuidResponseBody
	GetRequestId() *string
	SetSuccess(v bool) *GetInstallCodeForUuidResponseBody
	GetSuccess() *bool
}

type GetInstallCodeForUuidResponseBody struct {
	// API status code.
	//
	// example:
	//
	// 200
	Code *int32 `json:"Code,omitempty" xml:"Code,omitempty"`
	// HTTP status code
	//
	// example:
	//
	// 200
	HttpStatusCode *int64 `json:"HttpStatusCode,omitempty" xml:"HttpStatusCode,omitempty"`
	// Client installation code.
	InstallCode *GetInstallCodeForUuidResponseBodyInstallCode `json:"InstallCode,omitempty" xml:"InstallCode,omitempty" type:"Struct"`
	// Response message from the request.
	//
	// example:
	//
	// successful
	Message *string `json:"Message,omitempty" xml:"Message,omitempty"`
	// The ID of the current request, a unique identifier generated by Alibaba Cloud for troubleshooting and issue localization.
	//
	// example:
	//
	// 7532B7EE-7CE7-5F4D-BF04-B12447DDCAE1
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The status of the returned query result. Values: - **true**: Success - **false**: Failure
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s GetInstallCodeForUuidResponseBody) String() string {
	return dara.Prettify(s)
}

func (s GetInstallCodeForUuidResponseBody) GoString() string {
	return s.String()
}

func (s *GetInstallCodeForUuidResponseBody) GetCode() *int32 {
	return s.Code
}

func (s *GetInstallCodeForUuidResponseBody) GetHttpStatusCode() *int64 {
	return s.HttpStatusCode
}

func (s *GetInstallCodeForUuidResponseBody) GetInstallCode() *GetInstallCodeForUuidResponseBodyInstallCode {
	return s.InstallCode
}

func (s *GetInstallCodeForUuidResponseBody) GetMessage() *string {
	return s.Message
}

func (s *GetInstallCodeForUuidResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *GetInstallCodeForUuidResponseBody) GetSuccess() *bool {
	return s.Success
}

func (s *GetInstallCodeForUuidResponseBody) SetCode(v int32) *GetInstallCodeForUuidResponseBody {
	s.Code = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBody) SetHttpStatusCode(v int64) *GetInstallCodeForUuidResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBody) SetInstallCode(v *GetInstallCodeForUuidResponseBodyInstallCode) *GetInstallCodeForUuidResponseBody {
	s.InstallCode = v
	return s
}

func (s *GetInstallCodeForUuidResponseBody) SetMessage(v string) *GetInstallCodeForUuidResponseBody {
	s.Message = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBody) SetRequestId(v string) *GetInstallCodeForUuidResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBody) SetSuccess(v bool) *GetInstallCodeForUuidResponseBody {
	s.Success = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBody) Validate() error {
	if s.InstallCode != nil {
		if err := s.InstallCode.Validate(); err != nil {
			return err
		}
	}
	return nil
}

type GetInstallCodeForUuidResponseBodyInstallCode struct {
	// Installation verification code for manually installing the Cloud Security Center client.
	//
	// example:
	//
	// AK1W**
	CaptchaCode *string `json:"CaptchaCode,omitempty" xml:"CaptchaCode,omitempty"`
	// Expiration date of the installation verification code. The format is a 13-digit timestamp.
	//
	// > The installation verification code can only be used within its validity period. Expired codes cannot be used.
	//
	// example:
	//
	// 1723860871689
	ExpiredDate *int64 `json:"ExpiredDate,omitempty" xml:"ExpiredDate,omitempty"`
	// Server group ID.
	//
	// example:
	//
	// 342710
	GroupId *int64 `json:"GroupId,omitempty" xml:"GroupId,omitempty"`
	// Server group name.
	//
	// example:
	//
	// TestGroup
	GroupName *string `json:"GroupName,omitempty" xml:"GroupName,omitempty"`
	// Operating system of the server. Values:
	//
	// - **linux**: Linux
	//
	// - **windows**: Windows
	//
	// example:
	//
	// linux
	Os *string `json:"Os,omitempty" xml:"Os,omitempty"`
	// Name of the server vendor.
	//
	// example:
	//
	// ALIYUN
	VendorName *string `json:"VendorName,omitempty" xml:"VendorName,omitempty"`
}

func (s GetInstallCodeForUuidResponseBodyInstallCode) String() string {
	return dara.Prettify(s)
}

func (s GetInstallCodeForUuidResponseBodyInstallCode) GoString() string {
	return s.String()
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) GetCaptchaCode() *string {
	return s.CaptchaCode
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) GetExpiredDate() *int64 {
	return s.ExpiredDate
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) GetGroupId() *int64 {
	return s.GroupId
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) GetGroupName() *string {
	return s.GroupName
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) GetOs() *string {
	return s.Os
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) GetVendorName() *string {
	return s.VendorName
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) SetCaptchaCode(v string) *GetInstallCodeForUuidResponseBodyInstallCode {
	s.CaptchaCode = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) SetExpiredDate(v int64) *GetInstallCodeForUuidResponseBodyInstallCode {
	s.ExpiredDate = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) SetGroupId(v int64) *GetInstallCodeForUuidResponseBodyInstallCode {
	s.GroupId = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) SetGroupName(v string) *GetInstallCodeForUuidResponseBodyInstallCode {
	s.GroupName = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) SetOs(v string) *GetInstallCodeForUuidResponseBodyInstallCode {
	s.Os = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) SetVendorName(v string) *GetInstallCodeForUuidResponseBodyInstallCode {
	s.VendorName = &v
	return s
}

func (s *GetInstallCodeForUuidResponseBodyInstallCode) Validate() error {
	return dara.Validate(s)
}
