// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iVerifyCheckCustomConfigResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetErrorCheckConfigs(v []*VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) *VerifyCheckCustomConfigResponseBody
	GetErrorCheckConfigs() []*VerifyCheckCustomConfigResponseBodyErrorCheckConfigs
	SetErrorCheckCustomConfig(v *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig) *VerifyCheckCustomConfigResponseBody
	GetErrorCheckCustomConfig() *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig
	SetErrorRepairConfigs(v []*VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) *VerifyCheckCustomConfigResponseBody
	GetErrorRepairConfigs() []*VerifyCheckCustomConfigResponseBodyErrorRepairConfigs
	SetRequestId(v string) *VerifyCheckCustomConfigResponseBody
	GetRequestId() *string
}

type VerifyCheckCustomConfigResponseBody struct {
	// List of check parameters with configuration errors.
	ErrorCheckConfigs []*VerifyCheckCustomConfigResponseBodyErrorCheckConfigs `json:"ErrorCheckConfigs,omitempty" xml:"ErrorCheckConfigs,omitempty" type:"Repeated"`
	// Check the error code returned by the custom check item.
	ErrorCheckCustomConfig *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig `json:"ErrorCheckCustomConfig,omitempty" xml:"ErrorCheckCustomConfig,omitempty" type:"Struct"`
	// List of repair parameters with configuration check errors.
	ErrorRepairConfigs []*VerifyCheckCustomConfigResponseBodyErrorRepairConfigs `json:"ErrorRepairConfigs,omitempty" xml:"ErrorRepairConfigs,omitempty" type:"Repeated"`
	// The ID of this call request, a unique identifier generated by Alibaba Cloud for the request, which can be used for troubleshooting and problem localization.
	//
	// example:
	//
	// 7532B7EE-7CE7-5F4D-BF04-B12447DD****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s VerifyCheckCustomConfigResponseBody) String() string {
	return dara.Prettify(s)
}

func (s VerifyCheckCustomConfigResponseBody) GoString() string {
	return s.String()
}

func (s *VerifyCheckCustomConfigResponseBody) GetErrorCheckConfigs() []*VerifyCheckCustomConfigResponseBodyErrorCheckConfigs {
	return s.ErrorCheckConfigs
}

func (s *VerifyCheckCustomConfigResponseBody) GetErrorCheckCustomConfig() *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig {
	return s.ErrorCheckCustomConfig
}

func (s *VerifyCheckCustomConfigResponseBody) GetErrorRepairConfigs() []*VerifyCheckCustomConfigResponseBodyErrorRepairConfigs {
	return s.ErrorRepairConfigs
}

func (s *VerifyCheckCustomConfigResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *VerifyCheckCustomConfigResponseBody) SetErrorCheckConfigs(v []*VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) *VerifyCheckCustomConfigResponseBody {
	s.ErrorCheckConfigs = v
	return s
}

func (s *VerifyCheckCustomConfigResponseBody) SetErrorCheckCustomConfig(v *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig) *VerifyCheckCustomConfigResponseBody {
	s.ErrorCheckCustomConfig = v
	return s
}

func (s *VerifyCheckCustomConfigResponseBody) SetErrorRepairConfigs(v []*VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) *VerifyCheckCustomConfigResponseBody {
	s.ErrorRepairConfigs = v
	return s
}

func (s *VerifyCheckCustomConfigResponseBody) SetRequestId(v string) *VerifyCheckCustomConfigResponseBody {
	s.RequestId = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBody) Validate() error {
	if s.ErrorCheckConfigs != nil {
		for _, item := range s.ErrorCheckConfigs {
			if item != nil {
				if err := item.Validate(); err != nil {
					return err
				}
			}
		}
	}
	if s.ErrorCheckCustomConfig != nil {
		if err := s.ErrorCheckCustomConfig.Validate(); err != nil {
			return err
		}
	}
	if s.ErrorRepairConfigs != nil {
		for _, item := range s.ErrorRepairConfigs {
			if item != nil {
				if err := item.Validate(); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

type VerifyCheckCustomConfigResponseBodyErrorCheckConfigs struct {
	// Error code.
	//
	// example:
	//
	// ConfigEqualIllegal
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Error message.
	//
	// example:
	//
	// Custom parameter is not equal to corresponding check parameter
	ErrorMsg *string `json:"ErrorMsg,omitempty" xml:"ErrorMsg,omitempty"`
	// Related configurations causing this error.
	LinkErrorConfigs []*VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs `json:"LinkErrorConfigs,omitempty" xml:"LinkErrorConfigs,omitempty" type:"Repeated"`
	// Name of the custom configuration item for the check item, unique within the same check item.
	//
	// example:
	//
	// IpList
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// Type of the erroneous parameter:
	//
	// - custom: Custom configuration parameter
	//
	// example:
	//
	// custom
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
	// User-configured value string for the custom configuration item of the check item.
	//
	// example:
	//
	// 10.12.4.XX
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) String() string {
	return dara.Prettify(s)
}

func (s VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) GoString() string {
	return s.String()
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) GetErrorCode() *string {
	return s.ErrorCode
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) GetErrorMsg() *string {
	return s.ErrorMsg
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) GetLinkErrorConfigs() []*VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs {
	return s.LinkErrorConfigs
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) GetName() *string {
	return s.Name
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) GetType() *string {
	return s.Type
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) GetValue() *string {
	return s.Value
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) SetErrorCode(v string) *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs {
	s.ErrorCode = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) SetErrorMsg(v string) *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs {
	s.ErrorMsg = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) SetLinkErrorConfigs(v []*VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs) *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs {
	s.LinkErrorConfigs = v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) SetName(v string) *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs {
	s.Name = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) SetType(v string) *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs {
	s.Type = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) SetValue(v string) *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs {
	s.Value = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigs) Validate() error {
	if s.LinkErrorConfigs != nil {
		for _, item := range s.LinkErrorConfigs {
			if item != nil {
				if err := item.Validate(); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

type VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs struct {
	// Name of the check item configuration, unique within the same check item.
	//
	// example:
	//
	// IpLists
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// Display name of the user\\"s check configuration.
	//
	// example:
	//
	// IP Lists
	ShowName *string `json:"ShowName,omitempty" xml:"ShowName,omitempty"`
	// The type of the parameter that caused the error:
	//
	// - repair: Repair parameter
	//
	// - custom: Custom configuration parameter
	//
	// example:
	//
	// repair
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
}

func (s VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs) String() string {
	return dara.Prettify(s)
}

func (s VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs) GoString() string {
	return s.String()
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs) GetName() *string {
	return s.Name
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs) GetShowName() *string {
	return s.ShowName
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs) GetType() *string {
	return s.Type
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs) SetName(v string) *VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs {
	s.Name = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs) SetShowName(v string) *VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs {
	s.ShowName = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs) SetType(v string) *VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs {
	s.Type = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckConfigsLinkErrorConfigs) Validate() error {
	return dara.Validate(s)
}

type VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig struct {
	// Error code when failed. This parameter is not returned upon success.
	//
	// - **CspmVerifyCheckCustomItemNoPass**: The asset did not pass the set custom rules.
	//
	// - **CspmVerifyCheckCustomItemError**: Verification error, there is an issue with the input rule.
	//
	// example:
	//
	// CspmVerifyCheckCustomItemNoPass
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Error message
	//
	// example:
	//
	// Creation verification failed.
	ErrorMsg *string `json:"ErrorMsg,omitempty" xml:"ErrorMsg,omitempty"`
}

func (s VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig) String() string {
	return dara.Prettify(s)
}

func (s VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig) GoString() string {
	return s.String()
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig) GetErrorCode() *string {
	return s.ErrorCode
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig) GetErrorMsg() *string {
	return s.ErrorMsg
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig) SetErrorCode(v string) *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig {
	s.ErrorCode = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig) SetErrorMsg(v string) *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig {
	s.ErrorMsg = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorCheckCustomConfig) Validate() error {
	return dara.Validate(s)
}

type VerifyCheckCustomConfigResponseBodyErrorRepairConfigs struct {
	// Error code.
	//
	// example:
	//
	// ConfigEqualIllegal
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Error message.
	//
	// example:
	//
	// Repair parameter is not equal to corresponding check parameter
	ErrorMsg *string `json:"ErrorMsg,omitempty" xml:"ErrorMsg,omitempty"`
	// Related configurations causing this error.
	LinkErrorConfigs []*VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs `json:"LinkErrorConfigs,omitempty" xml:"LinkErrorConfigs,omitempty" type:"Repeated"`
	// Name of the check item\\"s repair configuration, unique within the same check item.
	//
	// example:
	//
	// IpLists
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The type of the parameter that caused the error:
	//
	// - repair: Repair parameter
	//
	// example:
	//
	// repair
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
	// Name of the check item\\"s repair parameter, unique within the same check item.
	//
	// example:
	//
	// 172.26.49.XX
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) String() string {
	return dara.Prettify(s)
}

func (s VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) GoString() string {
	return s.String()
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) GetErrorCode() *string {
	return s.ErrorCode
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) GetErrorMsg() *string {
	return s.ErrorMsg
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) GetLinkErrorConfigs() []*VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs {
	return s.LinkErrorConfigs
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) GetName() *string {
	return s.Name
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) GetType() *string {
	return s.Type
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) GetValue() *string {
	return s.Value
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) SetErrorCode(v string) *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs {
	s.ErrorCode = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) SetErrorMsg(v string) *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs {
	s.ErrorMsg = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) SetLinkErrorConfigs(v []*VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs) *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs {
	s.LinkErrorConfigs = v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) SetName(v string) *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs {
	s.Name = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) SetType(v string) *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs {
	s.Type = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) SetValue(v string) *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs {
	s.Value = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigs) Validate() error {
	if s.LinkErrorConfigs != nil {
		for _, item := range s.LinkErrorConfigs {
			if item != nil {
				if err := item.Validate(); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

type VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs struct {
	// Name of the check item\\"s configuration, unique within the same check item.
	//
	// example:
	//
	// IpList
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// Display name of the user\\"s check configuration.
	//
	// example:
	//
	// Ip List
	ShowName *string `json:"ShowName,omitempty" xml:"ShowName,omitempty"`
	// The type of the parameter that caused the error:
	//
	// - repair: Repair parameter
	//
	// - custom: Custom configuration parameter
	//
	// example:
	//
	// custom
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
}

func (s VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs) String() string {
	return dara.Prettify(s)
}

func (s VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs) GoString() string {
	return s.String()
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs) GetName() *string {
	return s.Name
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs) GetShowName() *string {
	return s.ShowName
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs) GetType() *string {
	return s.Type
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs) SetName(v string) *VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs {
	s.Name = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs) SetShowName(v string) *VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs {
	s.ShowName = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs) SetType(v string) *VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs {
	s.Type = &v
	return s
}

func (s *VerifyCheckCustomConfigResponseBodyErrorRepairConfigsLinkErrorConfigs) Validate() error {
	return dara.Validate(s)
}
