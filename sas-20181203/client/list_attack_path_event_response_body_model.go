// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iListAttackPathEventResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetAttackPathEventList(v []*ListAttackPathEventResponseBodyAttackPathEventList) *ListAttackPathEventResponseBody
	GetAttackPathEventList() []*ListAttackPathEventResponseBodyAttackPathEventList
	SetPageInfo(v *ListAttackPathEventResponseBodyPageInfo) *ListAttackPathEventResponseBody
	GetPageInfo() *ListAttackPathEventResponseBodyPageInfo
	SetRequestId(v string) *ListAttackPathEventResponseBody
	GetRequestId() *string
}

type ListAttackPathEventResponseBody struct {
	// List of attack path events.
	AttackPathEventList []*ListAttackPathEventResponseBodyAttackPathEventList `json:"AttackPathEventList,omitempty" xml:"AttackPathEventList,omitempty" type:"Repeated"`
	// Pagination information.
	PageInfo *ListAttackPathEventResponseBodyPageInfo `json:"PageInfo,omitempty" xml:"PageInfo,omitempty" type:"Struct"`
	// The ID of this request, which is a unique identifier generated by Alibaba Cloud for the request. It can be used for troubleshooting and problem localization.
	//
	// example:
	//
	// 3956048F-9D73-5EDB-834B-4827BB48****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAttackPathEventResponseBody) String() string {
	return dara.Prettify(s)
}

func (s ListAttackPathEventResponseBody) GoString() string {
	return s.String()
}

func (s *ListAttackPathEventResponseBody) GetAttackPathEventList() []*ListAttackPathEventResponseBodyAttackPathEventList {
	return s.AttackPathEventList
}

func (s *ListAttackPathEventResponseBody) GetPageInfo() *ListAttackPathEventResponseBodyPageInfo {
	return s.PageInfo
}

func (s *ListAttackPathEventResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *ListAttackPathEventResponseBody) SetAttackPathEventList(v []*ListAttackPathEventResponseBodyAttackPathEventList) *ListAttackPathEventResponseBody {
	s.AttackPathEventList = v
	return s
}

func (s *ListAttackPathEventResponseBody) SetPageInfo(v *ListAttackPathEventResponseBodyPageInfo) *ListAttackPathEventResponseBody {
	s.PageInfo = v
	return s
}

func (s *ListAttackPathEventResponseBody) SetRequestId(v string) *ListAttackPathEventResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListAttackPathEventResponseBody) Validate() error {
	if s.AttackPathEventList != nil {
		for _, item := range s.AttackPathEventList {
			if item != nil {
				if err := item.Validate(); err != nil {
					return err
				}
			}
		}
	}
	if s.PageInfo != nil {
		if err := s.PageInfo.Validate(); err != nil {
			return err
		}
	}
	return nil
}

type ListAttackPathEventResponseBodyAttackPathEventList struct {
	// Destination asset.
	DstAsset *ListAttackPathEventResponseBodyAttackPathEventListDstAsset `json:"DstAsset,omitempty" xml:"DstAsset,omitempty" type:"Struct"`
	// The ID of the alert event.
	//
	// example:
	//
	// 123
	EventId *int64 `json:"EventId,omitempty" xml:"EventId,omitempty"`
	// Timestamp of the latest discovery. Unit: milliseconds.
	//
	// example:
	//
	// 1742869699000
	LastTime *int64 `json:"LastTime,omitempty" xml:"LastTime,omitempty"`
	// Path name.
	//
	// example:
	//
	// ecs_get_credential_by_create_login_profile
	PathName *string `json:"PathName,omitempty" xml:"PathName,omitempty"`
	// Description of the path name.
	//
	// example:
	//
	// ECS Instance Can Obtain Long-term Access Credential by Enabling Console Logon for RAM User
	PathNameDesc *string `json:"PathNameDesc,omitempty" xml:"PathNameDesc,omitempty"`
	// Path type.
	//
	// example:
	//
	// role_escalation
	PathType *string `json:"PathType,omitempty" xml:"PathType,omitempty"`
	// Description of the path type.
	//
	// example:
	//
	// Privilege Escalation by Role
	PathTypeDesc *string `json:"PathTypeDesc,omitempty" xml:"PathTypeDesc,omitempty"`
	// Risk level.
	//
	// example:
	//
	// suspicious
	RiskLevel *string `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// Source asset.
	SrcAsset *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset `json:"SrcAsset,omitempty" xml:"SrcAsset,omitempty" type:"Struct"`
}

func (s ListAttackPathEventResponseBodyAttackPathEventList) String() string {
	return dara.Prettify(s)
}

func (s ListAttackPathEventResponseBodyAttackPathEventList) GoString() string {
	return s.String()
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) GetDstAsset() *ListAttackPathEventResponseBodyAttackPathEventListDstAsset {
	return s.DstAsset
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) GetEventId() *int64 {
	return s.EventId
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) GetLastTime() *int64 {
	return s.LastTime
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) GetPathName() *string {
	return s.PathName
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) GetPathNameDesc() *string {
	return s.PathNameDesc
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) GetPathType() *string {
	return s.PathType
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) GetPathTypeDesc() *string {
	return s.PathTypeDesc
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) GetRiskLevel() *string {
	return s.RiskLevel
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) GetSrcAsset() *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset {
	return s.SrcAsset
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) SetDstAsset(v *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) *ListAttackPathEventResponseBodyAttackPathEventList {
	s.DstAsset = v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) SetEventId(v int64) *ListAttackPathEventResponseBodyAttackPathEventList {
	s.EventId = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) SetLastTime(v int64) *ListAttackPathEventResponseBodyAttackPathEventList {
	s.LastTime = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) SetPathName(v string) *ListAttackPathEventResponseBodyAttackPathEventList {
	s.PathName = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) SetPathNameDesc(v string) *ListAttackPathEventResponseBodyAttackPathEventList {
	s.PathNameDesc = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) SetPathType(v string) *ListAttackPathEventResponseBodyAttackPathEventList {
	s.PathType = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) SetPathTypeDesc(v string) *ListAttackPathEventResponseBodyAttackPathEventList {
	s.PathTypeDesc = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) SetRiskLevel(v string) *ListAttackPathEventResponseBodyAttackPathEventList {
	s.RiskLevel = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) SetSrcAsset(v *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) *ListAttackPathEventResponseBodyAttackPathEventList {
	s.SrcAsset = v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventList) Validate() error {
	if s.DstAsset != nil {
		if err := s.DstAsset.Validate(); err != nil {
			return err
		}
	}
	if s.SrcAsset != nil {
		if err := s.SrcAsset.Validate(); err != nil {
			return err
		}
	}
	return nil
}

type ListAttackPathEventResponseBodyAttackPathEventListDstAsset struct {
	// Subtype of the cloud product asset.
	//
	// example:
	//
	// 0
	AssetSubType *int32 `json:"AssetSubType,omitempty" xml:"AssetSubType,omitempty"`
	// Type of the cloud product asset.
	//
	// example:
	//
	// 1
	AssetType *int32 `json:"AssetType,omitempty" xml:"AssetType,omitempty"`
	// ID of the cloud product asset instance.
	//
	// example:
	//
	// i-uf6a1tt9umxwoxqn****
	InstanceId *string `json:"InstanceId,omitempty" xml:"InstanceId,omitempty"`
	// Instance name.
	//
	// example:
	//
	// test
	InstanceName *string `json:"InstanceName,omitempty" xml:"InstanceName,omitempty"`
	// ID of the region where the cloud product asset instance is located.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// Sensitive asset flag. Values:
	//
	// - **0**: Non-sensitive asset.
	//
	// - **1**: Sensitive asset.
	//
	// example:
	//
	// 1
	SensitiveAssetFlag *int32 `json:"SensitiveAssetFlag,omitempty" xml:"SensitiveAssetFlag,omitempty"`
	// Vendor of the cloud product asset.
	//
	// example:
	//
	// 0
	Vendor *int32 `json:"Vendor,omitempty" xml:"Vendor,omitempty"`
}

func (s ListAttackPathEventResponseBodyAttackPathEventListDstAsset) String() string {
	return dara.Prettify(s)
}

func (s ListAttackPathEventResponseBodyAttackPathEventListDstAsset) GoString() string {
	return s.String()
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) GetAssetSubType() *int32 {
	return s.AssetSubType
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) GetAssetType() *int32 {
	return s.AssetType
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) GetInstanceId() *string {
	return s.InstanceId
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) GetInstanceName() *string {
	return s.InstanceName
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) GetRegionId() *string {
	return s.RegionId
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) GetSensitiveAssetFlag() *int32 {
	return s.SensitiveAssetFlag
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) GetVendor() *int32 {
	return s.Vendor
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) SetAssetSubType(v int32) *ListAttackPathEventResponseBodyAttackPathEventListDstAsset {
	s.AssetSubType = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) SetAssetType(v int32) *ListAttackPathEventResponseBodyAttackPathEventListDstAsset {
	s.AssetType = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) SetInstanceId(v string) *ListAttackPathEventResponseBodyAttackPathEventListDstAsset {
	s.InstanceId = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) SetInstanceName(v string) *ListAttackPathEventResponseBodyAttackPathEventListDstAsset {
	s.InstanceName = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) SetRegionId(v string) *ListAttackPathEventResponseBodyAttackPathEventListDstAsset {
	s.RegionId = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) SetSensitiveAssetFlag(v int32) *ListAttackPathEventResponseBodyAttackPathEventListDstAsset {
	s.SensitiveAssetFlag = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) SetVendor(v int32) *ListAttackPathEventResponseBodyAttackPathEventListDstAsset {
	s.Vendor = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListDstAsset) Validate() error {
	return dara.Validate(s)
}

type ListAttackPathEventResponseBodyAttackPathEventListSrcAsset struct {
	// Subtype of the cloud product asset.
	//
	// example:
	//
	// 1
	AssetSubType *int32 `json:"AssetSubType,omitempty" xml:"AssetSubType,omitempty"`
	// Type of the cloud product asset.
	//
	// example:
	//
	// 0
	AssetType *int32 `json:"AssetType,omitempty" xml:"AssetType,omitempty"`
	// ID of the cloud product asset instance.
	//
	// example:
	//
	// i-bp18ifsr1tu1dx39****
	InstanceId *string `json:"InstanceId,omitempty" xml:"InstanceId,omitempty"`
	// Instance name.
	//
	// example:
	//
	// test
	InstanceName *string `json:"InstanceName,omitempty" xml:"InstanceName,omitempty"`
	// ID of the region where the cloud product asset instance is located.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// Sensitive asset flag. Values:
	//
	// - **0**: Non-sensitive asset.
	//
	// - **1**: Sensitive asset.
	//
	// example:
	//
	// 0
	SensitiveAssetFlag *int32 `json:"SensitiveAssetFlag,omitempty" xml:"SensitiveAssetFlag,omitempty"`
	// Vendor of the cloud product asset.
	//
	// example:
	//
	// 0
	Vendor *int32 `json:"Vendor,omitempty" xml:"Vendor,omitempty"`
}

func (s ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) String() string {
	return dara.Prettify(s)
}

func (s ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) GoString() string {
	return s.String()
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) GetAssetSubType() *int32 {
	return s.AssetSubType
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) GetAssetType() *int32 {
	return s.AssetType
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) GetInstanceId() *string {
	return s.InstanceId
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) GetInstanceName() *string {
	return s.InstanceName
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) GetRegionId() *string {
	return s.RegionId
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) GetSensitiveAssetFlag() *int32 {
	return s.SensitiveAssetFlag
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) GetVendor() *int32 {
	return s.Vendor
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) SetAssetSubType(v int32) *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset {
	s.AssetSubType = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) SetAssetType(v int32) *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset {
	s.AssetType = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) SetInstanceId(v string) *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset {
	s.InstanceId = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) SetInstanceName(v string) *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset {
	s.InstanceName = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) SetRegionId(v string) *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset {
	s.RegionId = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) SetSensitiveAssetFlag(v int32) *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset {
	s.SensitiveAssetFlag = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) SetVendor(v int32) *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset {
	s.Vendor = &v
	return s
}

func (s *ListAttackPathEventResponseBodyAttackPathEventListSrcAsset) Validate() error {
	return dara.Validate(s)
}

type ListAttackPathEventResponseBodyPageInfo struct {
	// The number of data entries displayed on the current page when performing a paginated query.
	//
	// example:
	//
	// 20
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
	// The page number displayed in the pagination query.
	//
	// example:
	//
	// 1
	CurrentPage *int32 `json:"CurrentPage,omitempty" xml:"CurrentPage,omitempty"`
	// The number of data items displayed per page.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The total number of data items.
	//
	// example:
	//
	// 30
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListAttackPathEventResponseBodyPageInfo) String() string {
	return dara.Prettify(s)
}

func (s ListAttackPathEventResponseBodyPageInfo) GoString() string {
	return s.String()
}

func (s *ListAttackPathEventResponseBodyPageInfo) GetCount() *int32 {
	return s.Count
}

func (s *ListAttackPathEventResponseBodyPageInfo) GetCurrentPage() *int32 {
	return s.CurrentPage
}

func (s *ListAttackPathEventResponseBodyPageInfo) GetPageSize() *int32 {
	return s.PageSize
}

func (s *ListAttackPathEventResponseBodyPageInfo) GetTotalCount() *int32 {
	return s.TotalCount
}

func (s *ListAttackPathEventResponseBodyPageInfo) SetCount(v int32) *ListAttackPathEventResponseBodyPageInfo {
	s.Count = &v
	return s
}

func (s *ListAttackPathEventResponseBodyPageInfo) SetCurrentPage(v int32) *ListAttackPathEventResponseBodyPageInfo {
	s.CurrentPage = &v
	return s
}

func (s *ListAttackPathEventResponseBodyPageInfo) SetPageSize(v int32) *ListAttackPathEventResponseBodyPageInfo {
	s.PageSize = &v
	return s
}

func (s *ListAttackPathEventResponseBodyPageInfo) SetTotalCount(v int32) *ListAttackPathEventResponseBodyPageInfo {
	s.TotalCount = &v
	return s
}

func (s *ListAttackPathEventResponseBodyPageInfo) Validate() error {
	return dara.Validate(s)
}
