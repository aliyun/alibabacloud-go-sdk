// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iDescribeIdcProbeListResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetIdcProbes(v []*DescribeIdcProbeListResponseBodyIdcProbes) *DescribeIdcProbeListResponseBody
	GetIdcProbes() []*DescribeIdcProbeListResponseBodyIdcProbes
	SetPageInfo(v *DescribeIdcProbeListResponseBodyPageInfo) *DescribeIdcProbeListResponseBody
	GetPageInfo() *DescribeIdcProbeListResponseBodyPageInfo
	SetRequestId(v string) *DescribeIdcProbeListResponseBody
	GetRequestId() *string
}

type DescribeIdcProbeListResponseBody struct {
	// IDC probe list.
	IdcProbes []*DescribeIdcProbeListResponseBodyIdcProbes `json:"IdcProbes,omitempty" xml:"IdcProbes,omitempty" type:"Repeated"`
	// Pagination information.
	PageInfo *DescribeIdcProbeListResponseBodyPageInfo `json:"PageInfo,omitempty" xml:"PageInfo,omitempty" type:"Struct"`
	// The ID of this call request, which is a unique identifier generated by Alibaba Cloud for the request and can be used for troubleshooting and problem localization.
	//
	// example:
	//
	// 0C8487EF-50C2-54BB-8634-10F8C35D****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DescribeIdcProbeListResponseBody) String() string {
	return dara.Prettify(s)
}

func (s DescribeIdcProbeListResponseBody) GoString() string {
	return s.String()
}

func (s *DescribeIdcProbeListResponseBody) GetIdcProbes() []*DescribeIdcProbeListResponseBodyIdcProbes {
	return s.IdcProbes
}

func (s *DescribeIdcProbeListResponseBody) GetPageInfo() *DescribeIdcProbeListResponseBodyPageInfo {
	return s.PageInfo
}

func (s *DescribeIdcProbeListResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *DescribeIdcProbeListResponseBody) SetIdcProbes(v []*DescribeIdcProbeListResponseBodyIdcProbes) *DescribeIdcProbeListResponseBody {
	s.IdcProbes = v
	return s
}

func (s *DescribeIdcProbeListResponseBody) SetPageInfo(v *DescribeIdcProbeListResponseBodyPageInfo) *DescribeIdcProbeListResponseBody {
	s.PageInfo = v
	return s
}

func (s *DescribeIdcProbeListResponseBody) SetRequestId(v string) *DescribeIdcProbeListResponseBody {
	s.RequestId = &v
	return s
}

func (s *DescribeIdcProbeListResponseBody) Validate() error {
	return dara.Validate(s)
}

type DescribeIdcProbeListResponseBodyIdcProbes struct {
	// IDC data center name.
	//
	// example:
	//
	// 3K IDC
	IdcName *string `json:"IdcName,omitempty" xml:"IdcName,omitempty"`
	// Region.
	//
	// example:
	//
	// cn-hangzhou
	IdcRegion *string `json:"IdcRegion,omitempty" xml:"IdcRegion,omitempty"`
	// Instance ID of the asset.
	//
	// example:
	//
	// i-xxxxx
	InstanceId *string `json:"InstanceId,omitempty" xml:"InstanceId,omitempty"`
	// Instance name.
	//
	// example:
	//
	// oraclexxx
	InstanceName *string `json:"InstanceName,omitempty" xml:"InstanceName,omitempty"`
	// Public IP address.
	//
	// example:
	//
	// 47.98.*.*
	InternetIp *string `json:"InternetIp,omitempty" xml:"InternetIp,omitempty"`
	// Scan period.
	//
	// example:
	//
	// 16
	IntervalPeriod *int32 `json:"IntervalPeriod,omitempty" xml:"IntervalPeriod,omitempty"`
	// Private IP of the instance.
	//
	// example:
	//
	// 10.68.*.*
	IntranetIp *string `json:"IntranetIp,omitempty" xml:"IntranetIp,omitempty"`
	// IP segment range.
	//
	// example:
	//
	// 192.168.1.0/24
	IpSegments *string `json:"IpSegments,omitempty" xml:"IpSegments,omitempty"`
	// Linux port.
	//
	// example:
	//
	// 22
	LinuxPort *string `json:"LinuxPort,omitempty" xml:"LinuxPort,omitempty"`
	// The unit of the scan period, with values:
	//
	// - **day**: day.
	//
	// - **hour**: hour.
	//
	// example:
	//
	// day
	PeriodUnit *string `json:"PeriodUnit,omitempty" xml:"PeriodUnit,omitempty"`
	// Probe service status. Values:
	//
	// - **0**: Active
	//
	// - **1**: Inactive
	//
	// example:
	//
	// 0
	ServiceStatus *int32 `json:"ServiceStatus,omitempty" xml:"ServiceStatus,omitempty"`
	// Probe status. Values:
	//
	// - **0**: Enabled
	//
	// - **1**: Disabled
	//
	// example:
	//
	// 0
	Status *int32 `json:"Status,omitempty" xml:"Status,omitempty"`
	// Server UUID.
	//
	// example:
	//
	// inet-eae02b9a-1dbd-44a6-844c-69072b27****
	Uuid *string `json:"Uuid,omitempty" xml:"Uuid,omitempty"`
	// Windows port.
	//
	// example:
	//
	// 3389
	WinPort *string `json:"WinPort,omitempty" xml:"WinPort,omitempty"`
}

func (s DescribeIdcProbeListResponseBodyIdcProbes) String() string {
	return dara.Prettify(s)
}

func (s DescribeIdcProbeListResponseBodyIdcProbes) GoString() string {
	return s.String()
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetIdcName() *string {
	return s.IdcName
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetIdcRegion() *string {
	return s.IdcRegion
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetInstanceId() *string {
	return s.InstanceId
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetInstanceName() *string {
	return s.InstanceName
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetInternetIp() *string {
	return s.InternetIp
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetIntervalPeriod() *int32 {
	return s.IntervalPeriod
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetIntranetIp() *string {
	return s.IntranetIp
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetIpSegments() *string {
	return s.IpSegments
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetLinuxPort() *string {
	return s.LinuxPort
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetPeriodUnit() *string {
	return s.PeriodUnit
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetServiceStatus() *int32 {
	return s.ServiceStatus
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetStatus() *int32 {
	return s.Status
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetUuid() *string {
	return s.Uuid
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) GetWinPort() *string {
	return s.WinPort
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetIdcName(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.IdcName = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetIdcRegion(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.IdcRegion = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetInstanceId(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.InstanceId = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetInstanceName(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.InstanceName = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetInternetIp(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.InternetIp = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetIntervalPeriod(v int32) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.IntervalPeriod = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetIntranetIp(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.IntranetIp = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetIpSegments(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.IpSegments = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetLinuxPort(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.LinuxPort = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetPeriodUnit(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.PeriodUnit = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetServiceStatus(v int32) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.ServiceStatus = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetStatus(v int32) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.Status = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetUuid(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.Uuid = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) SetWinPort(v string) *DescribeIdcProbeListResponseBodyIdcProbes {
	s.WinPort = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyIdcProbes) Validate() error {
	return dara.Validate(s)
}

type DescribeIdcProbeListResponseBodyPageInfo struct {
	// The number of data entries displayed on the current page in a paginated query.
	//
	// example:
	//
	// 17
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
	// The page number in a paginated query.
	//
	// example:
	//
	// 1
	CurrentPage *int32 `json:"CurrentPage,omitempty" xml:"CurrentPage,omitempty"`
	// The maximum number of data entries to display per page in a paginated query.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// Total number of entries.
	//
	// example:
	//
	// 30
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s DescribeIdcProbeListResponseBodyPageInfo) String() string {
	return dara.Prettify(s)
}

func (s DescribeIdcProbeListResponseBodyPageInfo) GoString() string {
	return s.String()
}

func (s *DescribeIdcProbeListResponseBodyPageInfo) GetCount() *int32 {
	return s.Count
}

func (s *DescribeIdcProbeListResponseBodyPageInfo) GetCurrentPage() *int32 {
	return s.CurrentPage
}

func (s *DescribeIdcProbeListResponseBodyPageInfo) GetPageSize() *int32 {
	return s.PageSize
}

func (s *DescribeIdcProbeListResponseBodyPageInfo) GetTotalCount() *int32 {
	return s.TotalCount
}

func (s *DescribeIdcProbeListResponseBodyPageInfo) SetCount(v int32) *DescribeIdcProbeListResponseBodyPageInfo {
	s.Count = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyPageInfo) SetCurrentPage(v int32) *DescribeIdcProbeListResponseBodyPageInfo {
	s.CurrentPage = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyPageInfo) SetPageSize(v int32) *DescribeIdcProbeListResponseBodyPageInfo {
	s.PageSize = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyPageInfo) SetTotalCount(v int32) *DescribeIdcProbeListResponseBodyPageInfo {
	s.TotalCount = &v
	return s
}

func (s *DescribeIdcProbeListResponseBodyPageInfo) Validate() error {
	return dara.Validate(s)
}
