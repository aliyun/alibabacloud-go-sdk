// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iListInterceptionHistoryResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetInterceptionHistoryList(v []*ListInterceptionHistoryResponseBodyInterceptionHistoryList) *ListInterceptionHistoryResponseBody
	GetInterceptionHistoryList() []*ListInterceptionHistoryResponseBodyInterceptionHistoryList
	SetPageInfo(v *ListInterceptionHistoryResponseBodyPageInfo) *ListInterceptionHistoryResponseBody
	GetPageInfo() *ListInterceptionHistoryResponseBodyPageInfo
	SetRequestId(v string) *ListInterceptionHistoryResponseBody
	GetRequestId() *string
}

type ListInterceptionHistoryResponseBody struct {
	// An array that consists of the alerts generated by defense rules.
	InterceptionHistoryList []*ListInterceptionHistoryResponseBodyInterceptionHistoryList `json:"InterceptionHistoryList,omitempty" xml:"InterceptionHistoryList,omitempty" type:"Repeated"`
	// The pagination information.
	PageInfo *ListInterceptionHistoryResponseBodyPageInfo `json:"PageInfo,omitempty" xml:"PageInfo,omitempty" type:"Struct"`
	// The ID of the request, which is used to locate and troubleshoot issues.
	//
	// example:
	//
	// D81DD78E-E006-5C65-A171-C8CB0904****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListInterceptionHistoryResponseBody) String() string {
	return dara.Prettify(s)
}

func (s ListInterceptionHistoryResponseBody) GoString() string {
	return s.String()
}

func (s *ListInterceptionHistoryResponseBody) GetInterceptionHistoryList() []*ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	return s.InterceptionHistoryList
}

func (s *ListInterceptionHistoryResponseBody) GetPageInfo() *ListInterceptionHistoryResponseBodyPageInfo {
	return s.PageInfo
}

func (s *ListInterceptionHistoryResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *ListInterceptionHistoryResponseBody) SetInterceptionHistoryList(v []*ListInterceptionHistoryResponseBodyInterceptionHistoryList) *ListInterceptionHistoryResponseBody {
	s.InterceptionHistoryList = v
	return s
}

func (s *ListInterceptionHistoryResponseBody) SetPageInfo(v *ListInterceptionHistoryResponseBodyPageInfo) *ListInterceptionHistoryResponseBody {
	s.PageInfo = v
	return s
}

func (s *ListInterceptionHistoryResponseBody) SetRequestId(v string) *ListInterceptionHistoryResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListInterceptionHistoryResponseBody) Validate() error {
	if s.InterceptionHistoryList != nil {
		for _, item := range s.InterceptionHistoryList {
			if item != nil {
				if err := item.Validate(); err != nil {
					return err
				}
			}
		}
	}
	if s.PageInfo != nil {
		if err := s.PageInfo.Validate(); err != nil {
			return err
		}
	}
	return nil
}

type ListInterceptionHistoryResponseBodyInterceptionHistoryList struct {
	// The ID of the container cluster.
	//
	// example:
	//
	// c556c8133b5ad4378b7fc533ddbda****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The name of the cluster.
	//
	// example:
	//
	// opa-terway-nonet****
	ClusterName *string `json:"ClusterName,omitempty" xml:"ClusterName,omitempty"`
	// The name of the destination application.
	//
	// example:
	//
	// sas-web****
	DstAppName *string `json:"DstAppName,omitempty" xml:"DstAppName,omitempty"`
	// The destination namespace.
	//
	// example:
	//
	// service****
	DstNamespace *string `json:"DstNamespace,omitempty" xml:"DstNamespace,omitempty"`
	// The destination port range configured for the defense rule.
	//
	// example:
	//
	// 33
	DstPort *int64 `json:"DstPort,omitempty" xml:"DstPort,omitempty"`
	// The name of the destination network object.
	//
	// example:
	//
	// sas-web****
	DstRuleTargetName *string `json:"DstRuleTargetName,omitempty" xml:"DstRuleTargetName,omitempty"`
	// The timestamp when the alert was first generated on the current day.
	//
	// example:
	//
	// 1639718858000
	FirstTime *int64 `json:"FirstTime,omitempty" xml:"FirstTime,omitempty"`
	// The ID of the alert.
	//
	// example:
	//
	// 1126
	Id *int64 `json:"Id,omitempty" xml:"Id,omitempty"`
	// The name of the alert.
	//
	// example:
	//
	// Abnormal access
	InterceptionName *int64 `json:"InterceptionName,omitempty" xml:"InterceptionName,omitempty"`
	// The handling type. Valid values:
	//
	// 	- **0**: monitor
	//
	// 	- **1**: intercept
	//
	// 	- **2**: generate alert
	//
	// 	- **3**: allow
	//
	// example:
	//
	// 0
	InterceptionType *int32 `json:"InterceptionType,omitempty" xml:"InterceptionType,omitempty"`
	// The timestamp when the alert was last generated on the current day.
	//
	// example:
	//
	// 1639731078000
	LastTime *int64 `json:"LastTime,omitempty" xml:"LastTime,omitempty"`
	// The name of the destination application.
	//
	// example:
	//
	// sas-service****
	RealDstAppName *string `json:"RealDstAppName,omitempty" xml:"RealDstAppName,omitempty"`
	// The name of the destination image.
	//
	// example:
	//
	// sas-servi****
	RealDstImageName *string `json:"RealDstImageName,omitempty" xml:"RealDstImageName,omitempty"`
	// The destination namespace.
	//
	// example:
	//
	// service****
	RealDstNamespace *string `json:"RealDstNamespace,omitempty" xml:"RealDstNamespace,omitempty"`
	// The destination pod.
	//
	// example:
	//
	// sas-web-84cc7dd9****
	RealDstPodName *string `json:"RealDstPodName,omitempty" xml:"RealDstPodName,omitempty"`
	// The handling type of actual hits. Valid values:
	//
	// 	- **0**: monitor
	//
	// 	- **1**: intercept
	//
	// 	- **2**: generate alert
	//
	// 	- **3**: allow
	//
	// example:
	//
	// 0
	RealInterceptionType *int32 `json:"RealInterceptionType,omitempty" xml:"RealInterceptionType,omitempty"`
	// The name of the source application.
	//
	// example:
	//
	// sas-service****
	RealSrcAppName *string `json:"RealSrcAppName,omitempty" xml:"RealSrcAppName,omitempty"`
	// The name of the source image.
	//
	// example:
	//
	// sas-servi****
	RealSrcImageName *string `json:"RealSrcImageName,omitempty" xml:"RealSrcImageName,omitempty"`
	// The source namespace.
	//
	// example:
	//
	// service****
	RealSrcNamespace *string `json:"RealSrcNamespace,omitempty" xml:"RealSrcNamespace,omitempty"`
	// The source pod.
	//
	// example:
	//
	// sas-service-757b9d****
	RealSrcPodName *string `json:"RealSrcPodName,omitempty" xml:"RealSrcPodName,omitempty"`
	// The risk level. Valid values:
	//
	// 	- **-1**: unknown
	//
	// 	- **0**: none
	//
	// 	- **1**: low
	//
	// 	- **2**: medium
	//
	// 	- **3**: high
	//
	// example:
	//
	// 1
	RiskLevel *int64 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The ID of the defense rule based on which the alert was generated.
	//
	// example:
	//
	// 136
	RuleId *int64 `json:"RuleId,omitempty" xml:"RuleId,omitempty"`
	// The name of the defense rule.
	//
	// example:
	//
	// all****
	RuleName *string `json:"RuleName,omitempty" xml:"RuleName,omitempty"`
	// The name of the source application.
	//
	// example:
	//
	// sas-web****
	SrcAppName *string `json:"SrcAppName,omitempty" xml:"SrcAppName,omitempty"`
	// The source namespace.
	//
	// example:
	//
	// service****
	SrcNamespace *string `json:"SrcNamespace,omitempty" xml:"SrcNamespace,omitempty"`
	// The name of the source network object.
	//
	// example:
	//
	// sas-web****
	SrcRuleTargetName *string `json:"SrcRuleTargetName,omitempty" xml:"SrcRuleTargetName,omitempty"`
	// The handling status. Valid values:
	//
	// 	- **0**: unhandled
	//
	// 	- **1**: handled
	//
	// 	- **2**: manually handled
	//
	// 	- **3**: ignored
	//
	// example:
	//
	// 1
	Status *int64 `json:"Status,omitempty" xml:"Status,omitempty"`
	// The number of attempts.
	//
	// example:
	//
	// 34
	TryCount *int32 `json:"TryCount,omitempty" xml:"TryCount,omitempty"`
}

func (s ListInterceptionHistoryResponseBodyInterceptionHistoryList) String() string {
	return dara.Prettify(s)
}

func (s ListInterceptionHistoryResponseBodyInterceptionHistoryList) GoString() string {
	return s.String()
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetClusterId() *string {
	return s.ClusterId
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetClusterName() *string {
	return s.ClusterName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetDstAppName() *string {
	return s.DstAppName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetDstNamespace() *string {
	return s.DstNamespace
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetDstPort() *int64 {
	return s.DstPort
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetDstRuleTargetName() *string {
	return s.DstRuleTargetName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetFirstTime() *int64 {
	return s.FirstTime
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetId() *int64 {
	return s.Id
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetInterceptionName() *int64 {
	return s.InterceptionName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetInterceptionType() *int32 {
	return s.InterceptionType
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetLastTime() *int64 {
	return s.LastTime
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRealDstAppName() *string {
	return s.RealDstAppName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRealDstImageName() *string {
	return s.RealDstImageName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRealDstNamespace() *string {
	return s.RealDstNamespace
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRealDstPodName() *string {
	return s.RealDstPodName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRealInterceptionType() *int32 {
	return s.RealInterceptionType
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRealSrcAppName() *string {
	return s.RealSrcAppName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRealSrcImageName() *string {
	return s.RealSrcImageName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRealSrcNamespace() *string {
	return s.RealSrcNamespace
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRealSrcPodName() *string {
	return s.RealSrcPodName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRiskLevel() *int64 {
	return s.RiskLevel
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRuleId() *int64 {
	return s.RuleId
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetRuleName() *string {
	return s.RuleName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetSrcAppName() *string {
	return s.SrcAppName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetSrcNamespace() *string {
	return s.SrcNamespace
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetSrcRuleTargetName() *string {
	return s.SrcRuleTargetName
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetStatus() *int64 {
	return s.Status
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) GetTryCount() *int32 {
	return s.TryCount
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetClusterId(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.ClusterId = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetClusterName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.ClusterName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetDstAppName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.DstAppName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetDstNamespace(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.DstNamespace = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetDstPort(v int64) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.DstPort = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetDstRuleTargetName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.DstRuleTargetName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetFirstTime(v int64) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.FirstTime = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetId(v int64) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.Id = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetInterceptionName(v int64) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.InterceptionName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetInterceptionType(v int32) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.InterceptionType = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetLastTime(v int64) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.LastTime = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRealDstAppName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RealDstAppName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRealDstImageName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RealDstImageName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRealDstNamespace(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RealDstNamespace = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRealDstPodName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RealDstPodName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRealInterceptionType(v int32) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RealInterceptionType = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRealSrcAppName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RealSrcAppName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRealSrcImageName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RealSrcImageName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRealSrcNamespace(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RealSrcNamespace = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRealSrcPodName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RealSrcPodName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRiskLevel(v int64) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RiskLevel = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRuleId(v int64) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RuleId = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetRuleName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.RuleName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetSrcAppName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.SrcAppName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetSrcNamespace(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.SrcNamespace = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetSrcRuleTargetName(v string) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.SrcRuleTargetName = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetStatus(v int64) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.Status = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) SetTryCount(v int32) *ListInterceptionHistoryResponseBodyInterceptionHistoryList {
	s.TryCount = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyInterceptionHistoryList) Validate() error {
	return dara.Validate(s)
}

type ListInterceptionHistoryResponseBodyPageInfo struct {
	// The number of entries returned on the current page.
	//
	// example:
	//
	// 10
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
	// The page number of the returned page.
	//
	// example:
	//
	// 1
	CurrentPage *int32 `json:"CurrentPage,omitempty" xml:"CurrentPage,omitempty"`
	// The number of entries returned per page.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 45
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListInterceptionHistoryResponseBodyPageInfo) String() string {
	return dara.Prettify(s)
}

func (s ListInterceptionHistoryResponseBodyPageInfo) GoString() string {
	return s.String()
}

func (s *ListInterceptionHistoryResponseBodyPageInfo) GetCount() *int32 {
	return s.Count
}

func (s *ListInterceptionHistoryResponseBodyPageInfo) GetCurrentPage() *int32 {
	return s.CurrentPage
}

func (s *ListInterceptionHistoryResponseBodyPageInfo) GetPageSize() *int32 {
	return s.PageSize
}

func (s *ListInterceptionHistoryResponseBodyPageInfo) GetTotalCount() *int32 {
	return s.TotalCount
}

func (s *ListInterceptionHistoryResponseBodyPageInfo) SetCount(v int32) *ListInterceptionHistoryResponseBodyPageInfo {
	s.Count = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyPageInfo) SetCurrentPage(v int32) *ListInterceptionHistoryResponseBodyPageInfo {
	s.CurrentPage = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyPageInfo) SetPageSize(v int32) *ListInterceptionHistoryResponseBodyPageInfo {
	s.PageSize = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyPageInfo) SetTotalCount(v int32) *ListInterceptionHistoryResponseBodyPageInfo {
	s.TotalCount = &v
	return s
}

func (s *ListInterceptionHistoryResponseBodyPageInfo) Validate() error {
	return dara.Validate(s)
}
