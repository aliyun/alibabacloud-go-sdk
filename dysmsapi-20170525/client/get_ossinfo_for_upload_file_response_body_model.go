// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iGetOSSInfoForUploadFileResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetCode(v string) *GetOSSInfoForUploadFileResponseBody
	GetCode() *string
	SetMessage(v string) *GetOSSInfoForUploadFileResponseBody
	GetMessage() *string
	SetModel(v *GetOSSInfoForUploadFileResponseBodyModel) *GetOSSInfoForUploadFileResponseBody
	GetModel() *GetOSSInfoForUploadFileResponseBodyModel
	SetRequestId(v string) *GetOSSInfoForUploadFileResponseBody
	GetRequestId() *string
	SetSuccess(v bool) *GetOSSInfoForUploadFileResponseBody
	GetSuccess() *bool
}

type GetOSSInfoForUploadFileResponseBody struct {
	// Request status code.
	//
	// - OK return represents a successful request.
	//
	// - For other error codes, please refer to the [Error Code List](https://help.aliyun.com/document_detail/101346.htm).
	//
	// example:
	//
	// OK
	Code *string `json:"Code,omitempty" xml:"Code,omitempty"`
	// Description of the status code.
	//
	// example:
	//
	// OK
	Message *string `json:"Message,omitempty" xml:"Message,omitempty"`
	// Return result.
	Model *GetOSSInfoForUploadFileResponseBodyModel `json:"Model,omitempty" xml:"Model,omitempty" type:"Struct"`
	// The ID of this call request, which is a unique identifier generated by Alibaba Cloud for the request, can be used for troubleshooting and issue定位.
	//
	// example:
	//
	// A90E4451-FED7-49D2-87C8-00700EDCFD0D
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Indicates success. Values:
	//
	// - **true**
	//
	// - **false**
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s GetOSSInfoForUploadFileResponseBody) String() string {
	return dara.Prettify(s)
}

func (s GetOSSInfoForUploadFileResponseBody) GoString() string {
	return s.String()
}

func (s *GetOSSInfoForUploadFileResponseBody) GetCode() *string {
	return s.Code
}

func (s *GetOSSInfoForUploadFileResponseBody) GetMessage() *string {
	return s.Message
}

func (s *GetOSSInfoForUploadFileResponseBody) GetModel() *GetOSSInfoForUploadFileResponseBodyModel {
	return s.Model
}

func (s *GetOSSInfoForUploadFileResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *GetOSSInfoForUploadFileResponseBody) GetSuccess() *bool {
	return s.Success
}

func (s *GetOSSInfoForUploadFileResponseBody) SetCode(v string) *GetOSSInfoForUploadFileResponseBody {
	s.Code = &v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBody) SetMessage(v string) *GetOSSInfoForUploadFileResponseBody {
	s.Message = &v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBody) SetModel(v *GetOSSInfoForUploadFileResponseBodyModel) *GetOSSInfoForUploadFileResponseBody {
	s.Model = v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBody) SetRequestId(v string) *GetOSSInfoForUploadFileResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBody) SetSuccess(v bool) *GetOSSInfoForUploadFileResponseBody {
	s.Success = &v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBody) Validate() error {
	return dara.Validate(s)
}

type GetOSSInfoForUploadFileResponseBodyModel struct {
	// AccessKey ID used for signing.
	//
	// example:
	//
	// LTAIxetqt1Dg****
	AccessKeyId *string `json:"AccessKeyId,omitempty" xml:"AccessKeyId,omitempty"`
	// Expiration time.
	//
	// example:
	//
	// 1719297445
	ExpireTime *string `json:"ExpireTime,omitempty" xml:"ExpireTime,omitempty"`
	// Host address.
	//
	// example:
	//
	// https://alicom-fc-media.oss-cn-zhangjiakou.aliyuncs.com
	Host *string `json:"Host,omitempty" xml:"Host,omitempty"`
	// Signature policy.
	//
	// example:
	//
	// eyJleHBpcmF0aW9uIjoiMjAyN***Ni0yNVQwNjozNzoyNS45NzBaI**iY29uZGl0aW9ucyI6W1siY29udGVudC1sZW5ndGgtcmFuZ2UiLDAsMTA0ODU3NjAwMF0sWyJzdGFydHMtd2l0***sIiRrZXkiLCIiXV19
	Policy *string `json:"Policy,omitempty" xml:"Policy,omitempty"`
	// Signature information calculated based on **AccessKey Secret*	- and **Policy**. When calling the OSS API, OSS verifies this signature information to confirm the legitimacy of the Post request.
	//
	// example:
	//
	// BXnwCWPrhVb*****aoZHZfli5KE=
	Signature *string `json:"Signature,omitempty" xml:"Signature,omitempty"`
	// Policy path.
	//
	// example:
	//
	// 123456
	StartPath *string `json:"StartPath,omitempty" xml:"StartPath,omitempty"`
}

func (s GetOSSInfoForUploadFileResponseBodyModel) String() string {
	return dara.Prettify(s)
}

func (s GetOSSInfoForUploadFileResponseBodyModel) GoString() string {
	return s.String()
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) GetAccessKeyId() *string {
	return s.AccessKeyId
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) GetExpireTime() *string {
	return s.ExpireTime
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) GetHost() *string {
	return s.Host
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) GetPolicy() *string {
	return s.Policy
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) GetSignature() *string {
	return s.Signature
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) GetStartPath() *string {
	return s.StartPath
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) SetAccessKeyId(v string) *GetOSSInfoForUploadFileResponseBodyModel {
	s.AccessKeyId = &v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) SetExpireTime(v string) *GetOSSInfoForUploadFileResponseBodyModel {
	s.ExpireTime = &v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) SetHost(v string) *GetOSSInfoForUploadFileResponseBodyModel {
	s.Host = &v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) SetPolicy(v string) *GetOSSInfoForUploadFileResponseBodyModel {
	s.Policy = &v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) SetSignature(v string) *GetOSSInfoForUploadFileResponseBodyModel {
	s.Signature = &v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) SetStartPath(v string) *GetOSSInfoForUploadFileResponseBodyModel {
	s.StartPath = &v
	return s
}

func (s *GetOSSInfoForUploadFileResponseBodyModel) Validate() error {
	return dara.Validate(s)
}
