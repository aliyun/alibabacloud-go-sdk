// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iGetAsyncTaskResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetCode(v string) *GetAsyncTaskResponseBody
	GetCode() *string
	SetData(v *GetAsyncTaskResponseBodyData) *GetAsyncTaskResponseBody
	GetData() *GetAsyncTaskResponseBodyData
	SetRequestId(v string) *GetAsyncTaskResponseBody
	GetRequestId() *string
	SetSuccess(v string) *GetAsyncTaskResponseBody
	GetSuccess() *string
}

type GetAsyncTaskResponseBody struct {
	// The operation result. If the request was successful, a success message is returned. If the request failed, an error message is returned.
	//
	// example:
	//
	// success
	Code *string `json:"Code,omitempty" xml:"Code,omitempty"`
	// The data information.
	Data *GetAsyncTaskResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 1CBAFFAB-B697-4049-A9B1-67E1FC5F****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// example:
	//
	// true
	Success *string `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s GetAsyncTaskResponseBody) String() string {
	return dara.Prettify(s)
}

func (s GetAsyncTaskResponseBody) GoString() string {
	return s.String()
}

func (s *GetAsyncTaskResponseBody) GetCode() *string {
	return s.Code
}

func (s *GetAsyncTaskResponseBody) GetData() *GetAsyncTaskResponseBodyData {
	return s.Data
}

func (s *GetAsyncTaskResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *GetAsyncTaskResponseBody) GetSuccess() *string {
	return s.Success
}

func (s *GetAsyncTaskResponseBody) SetCode(v string) *GetAsyncTaskResponseBody {
	s.Code = &v
	return s
}

func (s *GetAsyncTaskResponseBody) SetData(v *GetAsyncTaskResponseBodyData) *GetAsyncTaskResponseBody {
	s.Data = v
	return s
}

func (s *GetAsyncTaskResponseBody) SetRequestId(v string) *GetAsyncTaskResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetAsyncTaskResponseBody) SetSuccess(v string) *GetAsyncTaskResponseBody {
	s.Success = &v
	return s
}

func (s *GetAsyncTaskResponseBody) Validate() error {
	if s.Data != nil {
		if err := s.Data.Validate(); err != nil {
			return err
		}
	}
	return nil
}

type GetAsyncTaskResponseBodyData struct {
	// The asynchronous task ID.
	//
	// example:
	//
	// 000e89fb-cf8f-11e9-8ab4-b6e98080****
	AsyncTaskId *string `json:"AsyncTaskId,omitempty" xml:"AsyncTaskId,omitempty"`
	// The total number of asynchronous tasks that are processed. Example: the number of files that are packaged and downloaded on the server.
	//
	// example:
	//
	// 100
	ConsumedProcess *string `json:"ConsumedProcess,omitempty" xml:"ConsumedProcess,omitempty"`
	// The error code of the asynchronous task.
	//
	// example:
	//
	// InternalError
	ErrCode *int64 `json:"ErrCode,omitempty" xml:"ErrCode,omitempty"`
	// The error message of the asynchronous task.
	//
	// example:
	//
	// The request has been failed due to some unknown error. Please try again later.
	Message *string `json:"Message,omitempty" xml:"Message,omitempty"`
	// The task status.
	//
	// Valid values:
	//
	// 	- Failed: The task failed.
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// 	- Running: The task was running.
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// 	- PartialSucceed: The task did not completely succeed.
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// 	- Succeed: The task succeeded.
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// example:
	//
	// Failed
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The total number of asynchronous tasks to be processed, such as the amount of files to be downloaded and packaged on the server.
	//
	// example:
	//
	// 1000
	TotalProcess *int64 `json:"TotalProcess,omitempty" xml:"TotalProcess,omitempty"`
	// The URL to download data generated by the asynchronous task. Example: the URL to package and download tasks on the server.
	//
	// example:
	//
	// https://data.aliyunpds.com/hz22%2F5d5b986facbec311ef844c25954f96821497b383%2F5d5b986f955410dd991646bb87c6b4e899eff525?Expires=xxx&OSSAccessKeyId=xxx&Signature=xxx
	Url *string `json:"Url,omitempty" xml:"Url,omitempty"`
}

func (s GetAsyncTaskResponseBodyData) String() string {
	return dara.Prettify(s)
}

func (s GetAsyncTaskResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetAsyncTaskResponseBodyData) GetAsyncTaskId() *string {
	return s.AsyncTaskId
}

func (s *GetAsyncTaskResponseBodyData) GetConsumedProcess() *string {
	return s.ConsumedProcess
}

func (s *GetAsyncTaskResponseBodyData) GetErrCode() *int64 {
	return s.ErrCode
}

func (s *GetAsyncTaskResponseBodyData) GetMessage() *string {
	return s.Message
}

func (s *GetAsyncTaskResponseBodyData) GetStatus() *string {
	return s.Status
}

func (s *GetAsyncTaskResponseBodyData) GetTotalProcess() *int64 {
	return s.TotalProcess
}

func (s *GetAsyncTaskResponseBodyData) GetUrl() *string {
	return s.Url
}

func (s *GetAsyncTaskResponseBodyData) SetAsyncTaskId(v string) *GetAsyncTaskResponseBodyData {
	s.AsyncTaskId = &v
	return s
}

func (s *GetAsyncTaskResponseBodyData) SetConsumedProcess(v string) *GetAsyncTaskResponseBodyData {
	s.ConsumedProcess = &v
	return s
}

func (s *GetAsyncTaskResponseBodyData) SetErrCode(v int64) *GetAsyncTaskResponseBodyData {
	s.ErrCode = &v
	return s
}

func (s *GetAsyncTaskResponseBodyData) SetMessage(v string) *GetAsyncTaskResponseBodyData {
	s.Message = &v
	return s
}

func (s *GetAsyncTaskResponseBodyData) SetStatus(v string) *GetAsyncTaskResponseBodyData {
	s.Status = &v
	return s
}

func (s *GetAsyncTaskResponseBodyData) SetTotalProcess(v int64) *GetAsyncTaskResponseBodyData {
	s.TotalProcess = &v
	return s
}

func (s *GetAsyncTaskResponseBodyData) SetUrl(v string) *GetAsyncTaskResponseBodyData {
	s.Url = &v
	return s
}

func (s *GetAsyncTaskResponseBodyData) Validate() error {
	return dara.Validate(s)
}
