// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iModifyADConnectorDirectoryRequest interface {
	dara.Model
	String() string
	GoString() string
	SetAdHostname(v string) *ModifyADConnectorDirectoryRequest
	GetAdHostname() *string
	SetDirectoryId(v string) *ModifyADConnectorDirectoryRequest
	GetDirectoryId() *string
	SetDirectoryName(v string) *ModifyADConnectorDirectoryRequest
	GetDirectoryName() *string
	SetDnsAddress(v []*string) *ModifyADConnectorDirectoryRequest
	GetDnsAddress() []*string
	SetDomainName(v string) *ModifyADConnectorDirectoryRequest
	GetDomainName() *string
	SetDomainPassword(v string) *ModifyADConnectorDirectoryRequest
	GetDomainPassword() *string
	SetDomainUserName(v string) *ModifyADConnectorDirectoryRequest
	GetDomainUserName() *string
	SetMfaEnabled(v bool) *ModifyADConnectorDirectoryRequest
	GetMfaEnabled() *bool
	SetOUName(v string) *ModifyADConnectorDirectoryRequest
	GetOUName() *string
	SetRegionId(v string) *ModifyADConnectorDirectoryRequest
	GetRegionId() *string
	SetSubDomainDnsAddress(v []*string) *ModifyADConnectorDirectoryRequest
	GetSubDomainDnsAddress() []*string
	SetSubDomainName(v string) *ModifyADConnectorDirectoryRequest
	GetSubDomainName() *string
}

type ModifyADConnectorDirectoryRequest struct {
	// The hostname of the domain controller. The hostname must comply with the naming conventions for hostnames in Windows.
	//
	// example:
	//
	// cnshsv21hmcdc01
	AdHostname *string `json:"AdHostname,omitempty" xml:"AdHostname,omitempty"`
	// The ID of the directory.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou+dir-gx2x1dhsmu52rd****
	DirectoryId *string `json:"DirectoryId,omitempty" xml:"DirectoryId,omitempty"`
	// The name of the AD directory.
	//
	// example:
	//
	// testDirectoryName
	DirectoryName *string `json:"DirectoryName,omitempty" xml:"DirectoryName,omitempty"`
	// The IP address of the DNS server corresponding to the enterprise AD. You can specify only one IP address. Make sure that the specified IP address is accessible in the network of the selected vSwitch.
	//
	// example:
	//
	// ``127.0.**.**``
	DnsAddress []*string `json:"DnsAddress,omitempty" xml:"DnsAddress,omitempty" type:"Repeated"`
	// The domain name. The name must be 2 to 255 characters in length and must be in the two-part domain name format, such as `example.com`. You can register each domain name only once.
	//
	// example:
	//
	// example.com
	DomainName *string `json:"DomainName,omitempty" xml:"DomainName,omitempty"`
	// The password of the domain administrator. The username can be up to 64 characters in length.
	//
	// example:
	//
	// testPassword
	DomainPassword *string `json:"DomainPassword,omitempty" xml:"DomainPassword,omitempty"`
	// The username of the domain administrator. The username can be up to 64 characters in length.
	//
	// example:
	//
	// sAMAccountName
	DomainUserName *string `json:"DomainUserName,omitempty" xml:"DomainUserName,omitempty"`
	// Specifies whether to enable Multi-Factor Authentication (MFA). After you enable MFA, all AD users in the directory must enter a dynamic verification code generated by the virtual MFA device in addition to a correct password when they log on to a cloud computer.
	//
	// >  When end users log on to a cloud computer for the first time, they must bind an MFA device.
	//
	// Valid values:
	//
	// 	- true
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// 	- <!-- -->
	//
	//     false (default)
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// example:
	//
	// false
	MfaEnabled *bool `json:"MfaEnabled,omitempty" xml:"MfaEnabled,omitempty"`
	// The name of the organizational unit (OU) in the AD domain. You can call the ListUserAdOrganizationUnits operation to obtain the name of the OU.
	//
	// example:
	//
	// example.com/Domain Controllers
	OUName *string `json:"OUName,omitempty" xml:"OUName,omitempty"`
	// The region ID. You can call the [DescribeRegions](https://help.aliyun.com/document_detail/196646.html) operation to query the most recent region list.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The DNS address of the existing AD subdomain.\\
	//
	// If you specify the `SubDomainName` parameter but you do not specify this parameter, the DNS address of the subdomain is the same as the DNS address of the parent domain.
	//
	// example:
	//
	// ``127.0.**.**``
	SubDomainDnsAddress []*string `json:"SubDomainDnsAddress,omitempty" xml:"SubDomainDnsAddress,omitempty" type:"Repeated"`
	// The domain name of the existing AD subdomain.
	//
	// example:
	//
	// childexample.com
	SubDomainName *string `json:"SubDomainName,omitempty" xml:"SubDomainName,omitempty"`
}

func (s ModifyADConnectorDirectoryRequest) String() string {
	return dara.Prettify(s)
}

func (s ModifyADConnectorDirectoryRequest) GoString() string {
	return s.String()
}

func (s *ModifyADConnectorDirectoryRequest) GetAdHostname() *string {
	return s.AdHostname
}

func (s *ModifyADConnectorDirectoryRequest) GetDirectoryId() *string {
	return s.DirectoryId
}

func (s *ModifyADConnectorDirectoryRequest) GetDirectoryName() *string {
	return s.DirectoryName
}

func (s *ModifyADConnectorDirectoryRequest) GetDnsAddress() []*string {
	return s.DnsAddress
}

func (s *ModifyADConnectorDirectoryRequest) GetDomainName() *string {
	return s.DomainName
}

func (s *ModifyADConnectorDirectoryRequest) GetDomainPassword() *string {
	return s.DomainPassword
}

func (s *ModifyADConnectorDirectoryRequest) GetDomainUserName() *string {
	return s.DomainUserName
}

func (s *ModifyADConnectorDirectoryRequest) GetMfaEnabled() *bool {
	return s.MfaEnabled
}

func (s *ModifyADConnectorDirectoryRequest) GetOUName() *string {
	return s.OUName
}

func (s *ModifyADConnectorDirectoryRequest) GetRegionId() *string {
	return s.RegionId
}

func (s *ModifyADConnectorDirectoryRequest) GetSubDomainDnsAddress() []*string {
	return s.SubDomainDnsAddress
}

func (s *ModifyADConnectorDirectoryRequest) GetSubDomainName() *string {
	return s.SubDomainName
}

func (s *ModifyADConnectorDirectoryRequest) SetAdHostname(v string) *ModifyADConnectorDirectoryRequest {
	s.AdHostname = &v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetDirectoryId(v string) *ModifyADConnectorDirectoryRequest {
	s.DirectoryId = &v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetDirectoryName(v string) *ModifyADConnectorDirectoryRequest {
	s.DirectoryName = &v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetDnsAddress(v []*string) *ModifyADConnectorDirectoryRequest {
	s.DnsAddress = v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetDomainName(v string) *ModifyADConnectorDirectoryRequest {
	s.DomainName = &v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetDomainPassword(v string) *ModifyADConnectorDirectoryRequest {
	s.DomainPassword = &v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetDomainUserName(v string) *ModifyADConnectorDirectoryRequest {
	s.DomainUserName = &v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetMfaEnabled(v bool) *ModifyADConnectorDirectoryRequest {
	s.MfaEnabled = &v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetOUName(v string) *ModifyADConnectorDirectoryRequest {
	s.OUName = &v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetRegionId(v string) *ModifyADConnectorDirectoryRequest {
	s.RegionId = &v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetSubDomainDnsAddress(v []*string) *ModifyADConnectorDirectoryRequest {
	s.SubDomainDnsAddress = v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) SetSubDomainName(v string) *ModifyADConnectorDirectoryRequest {
	s.SubDomainName = &v
	return s
}

func (s *ModifyADConnectorDirectoryRequest) Validate() error {
	return dara.Validate(s)
}
