// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iDescribeVulnerabilityProtectedListResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetRequestId(v string) *DescribeVulnerabilityProtectedListResponseBody
	GetRequestId() *string
	SetTotalCount(v int32) *DescribeVulnerabilityProtectedListResponseBody
	GetTotalCount() *int32
	SetVulnList(v []*DescribeVulnerabilityProtectedListResponseBodyVulnList) *DescribeVulnerabilityProtectedListResponseBody
	GetVulnList() []*DescribeVulnerabilityProtectedListResponseBodyVulnList
	SetZeroResourceCount(v int32) *DescribeVulnerabilityProtectedListResponseBody
	GetZeroResourceCount() *int32
}

type DescribeVulnerabilityProtectedListResponseBody struct {
	// The ID of the request.
	//
	// example:
	//
	// D355C631-1537-59C5-A56E-F6C5037B99E5
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of vulnerabilities that are detected by Cloud Firewall.
	//
	// example:
	//
	// 5
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
	// The vulnerabilities.
	VulnList []*DescribeVulnerabilityProtectedListResponseBodyVulnList `json:"VulnList,omitempty" xml:"VulnList,omitempty" type:"Repeated"`
	// The number of assets on which no vulnerabilities are detected.
	//
	// example:
	//
	// 1
	ZeroResourceCount *int32 `json:"ZeroResourceCount,omitempty" xml:"ZeroResourceCount,omitempty"`
}

func (s DescribeVulnerabilityProtectedListResponseBody) String() string {
	return dara.Prettify(s)
}

func (s DescribeVulnerabilityProtectedListResponseBody) GoString() string {
	return s.String()
}

func (s *DescribeVulnerabilityProtectedListResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *DescribeVulnerabilityProtectedListResponseBody) GetTotalCount() *int32 {
	return s.TotalCount
}

func (s *DescribeVulnerabilityProtectedListResponseBody) GetVulnList() []*DescribeVulnerabilityProtectedListResponseBodyVulnList {
	return s.VulnList
}

func (s *DescribeVulnerabilityProtectedListResponseBody) GetZeroResourceCount() *int32 {
	return s.ZeroResourceCount
}

func (s *DescribeVulnerabilityProtectedListResponseBody) SetRequestId(v string) *DescribeVulnerabilityProtectedListResponseBody {
	s.RequestId = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBody) SetTotalCount(v int32) *DescribeVulnerabilityProtectedListResponseBody {
	s.TotalCount = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBody) SetVulnList(v []*DescribeVulnerabilityProtectedListResponseBodyVulnList) *DescribeVulnerabilityProtectedListResponseBody {
	s.VulnList = v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBody) SetZeroResourceCount(v int32) *DescribeVulnerabilityProtectedListResponseBody {
	s.ZeroResourceCount = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBody) Validate() error {
	if s.VulnList != nil {
		for _, item := range s.VulnList {
			if item != nil {
				if err := item.Validate(); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

type DescribeVulnerabilityProtectedListResponseBodyVulnList struct {
	// The number of vulnerability attacks.
	//
	// example:
	//
	// 0
	AttackCnt *int32 `json:"AttackCnt,omitempty" xml:"AttackCnt,omitempty"`
	// The attack type of the vulnerability prevention event. Valid values:
	//
	// 	- **1**: suspicious connection
	//
	// 	- **2**: command execution
	//
	// 	- **3**: brute-force attack
	//
	// 	- **4**: scanning
	//
	// 	- **5**: others
	//
	// 	- **6**: information leakage
	//
	// 	- **7**: DoS attack
	//
	// 	- **8**: buffer overflow attack
	//
	// 	- **9**: web attack
	//
	// 	- **10**: webshell
	//
	// 	- **11**: computer worm
	//
	// 	- **12**: mining
	//
	// 	- **13**: reverse shell
	//
	// example:
	//
	// 13
	AttackType *int32 `json:"AttackType,omitempty" xml:"AttackType,omitempty"`
	// The IDs of associated basic protection policies.
	//
	// example:
	//
	// 12,12
	BasicRuleIds *string `json:"BasicRuleIds,omitempty" xml:"BasicRuleIds,omitempty"`
	// The CVE IDs.
	//
	// example:
	//
	// 12112131123, 1231123112
	CveId *string `json:"CveId,omitempty" xml:"CveId,omitempty"`
	// The time when the first attack was launched.
	//
	// example:
	//
	// 1608687364
	FirstTime *int64 `json:"FirstTime,omitempty" xml:"FirstTime,omitempty"`
	// Indicates whether you need to pay special attention to the vulnerability. Valid values:
	//
	// 	- **0**: no
	//
	// 	- **1**: yes
	//
	// example:
	//
	// 0
	HighlightTag *int32 `json:"HighlightTag,omitempty" xml:"HighlightTag,omitempty"`
	// The time when the last attack was launched.
	//
	// example:
	//
	// 1608687364
	LastTime *int64 `json:"LastTime,omitempty" xml:"LastTime,omitempty"`
	// The UID of the member that is managed by your Alibaba Cloud account.
	//
	// example:
	//
	// 119384235299****
	MemberUid *string `json:"MemberUid,omitempty" xml:"MemberUid,omitempty"`
	// Indicates whether the basic protection policy that related to the vulnerability is enabled. Valid values:
	//
	// 	- **true**
	//
	// 	- **false**
	//
	// >  If the value of this parameter is true, you must set the action of the basic protection policy related to the vulnerability to Block.
	//
	// example:
	//
	// false
	NeedOpenBasicRule *bool `json:"NeedOpenBasicRule,omitempty" xml:"NeedOpenBasicRule,omitempty"`
	// The UUIDs of the basic protection policies for which the action needs to be changed to Block.
	//
	// example:
	//
	// UUID-1231231
	NeedOpenBasicRuleUuids *string `json:"NeedOpenBasicRuleUuids,omitempty" xml:"NeedOpenBasicRuleUuids,omitempty"`
	// Indicates whether Threat Engine Mode needs to be configured when you enable protection. Valid values:
	//
	// 	- **true**
	//
	// 	- **false**
	//
	// example:
	//
	// true
	NeedOpenRunMode *bool `json:"NeedOpenRunMode,omitempty" xml:"NeedOpenRunMode,omitempty"`
	// Indicates whether the virtual patching policy that related to the vulnerability is enabled. Valid values:
	//
	// 	- **true**
	//
	// 	- **false**
	//
	// >  If the value of this parameter is true, you must set the action of the virtual patching policy that related to the vulnerability to Block.
	//
	// example:
	//
	// true
	NeedOpenVirtualPatche *bool `json:"NeedOpenVirtualPatche,omitempty" xml:"NeedOpenVirtualPatche,omitempty"`
	// The UUIDs of the virtual patching policies for which the action needs to be changed to Block.
	//
	// example:
	//
	// UUID-1231231234
	NeedOpenVirtualPatcheUuids *string `json:"NeedOpenVirtualPatcheUuids,omitempty" xml:"NeedOpenVirtualPatcheUuids,omitempty"`
	// The type of the rule group. Valid values:
	//
	// 	- **1*	- (default): loose
	//
	// 	- **2**: medium
	//
	// 	- **3**: strict
	//
	// example:
	//
	// 1
	NeedRuleClass *int32 `json:"NeedRuleClass,omitempty" xml:"NeedRuleClass,omitempty"`
	// The number of assets on which vulnerabilities are detected.
	//
	// example:
	//
	// 0
	ResourceCnt *int32 `json:"ResourceCnt,omitempty" xml:"ResourceCnt,omitempty"`
	// The assets on which the vulnerability is detected.
	ResourceList []*DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList `json:"ResourceList,omitempty" xml:"ResourceList,omitempty" type:"Repeated"`
	RuleTag      *string                                                               `json:"RuleTag,omitempty" xml:"RuleTag,omitempty"`
	// The IDs of associated virtual patching policies.
	//
	// example:
	//
	// 13,13
	VirtualPatcheIds *string `json:"VirtualPatcheIds,omitempty" xml:"VirtualPatcheIds,omitempty"`
	// The code of the vulnerability.
	//
	// example:
	//
	// dedecms-archive.helper.php-vul
	VulnKey *string `json:"VulnKey,omitempty" xml:"VulnKey,omitempty"`
	// The risk level of the vulnerability. Valid values:
	//
	// 	- **high**
	//
	// 	- **medium**
	//
	// 	- **low**
	//
	// example:
	//
	// high
	VulnLevel *string `json:"VulnLevel,omitempty" xml:"VulnLevel,omitempty"`
	// The name of the vulnerability.
	//
	// example:
	//
	// Deserialization vulnerability of arbitrary code execution in Fastjson 1.2.80 and earlier versions
	VulnName *string `json:"VulnName,omitempty" xml:"VulnName,omitempty"`
	// The status of the vulnerability prevention feature. Valid values:
	//
	// 	- **partProtected**: enabled for partial assets
	//
	// 	- **protected**: enabled
	//
	// 	- **unProtected**: disabled
	//
	// example:
	//
	// protected
	VulnStatus *string `json:"VulnStatus,omitempty" xml:"VulnStatus,omitempty"`
	// The type of the vulnerability. Valid values:
	//
	// 	- **emg**: urgent vulnerability
	//
	// 	- **webcms**: Web-CMS vulnerability
	//
	// 	- **app**: application vulnerability
	//
	// example:
	//
	// emg
	VulnType *string `json:"VulnType,omitempty" xml:"VulnType,omitempty"`
}

func (s DescribeVulnerabilityProtectedListResponseBodyVulnList) String() string {
	return dara.Prettify(s)
}

func (s DescribeVulnerabilityProtectedListResponseBodyVulnList) GoString() string {
	return s.String()
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetAttackCnt() *int32 {
	return s.AttackCnt
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetAttackType() *int32 {
	return s.AttackType
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetBasicRuleIds() *string {
	return s.BasicRuleIds
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetCveId() *string {
	return s.CveId
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetFirstTime() *int64 {
	return s.FirstTime
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetHighlightTag() *int32 {
	return s.HighlightTag
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetLastTime() *int64 {
	return s.LastTime
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetMemberUid() *string {
	return s.MemberUid
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetNeedOpenBasicRule() *bool {
	return s.NeedOpenBasicRule
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetNeedOpenBasicRuleUuids() *string {
	return s.NeedOpenBasicRuleUuids
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetNeedOpenRunMode() *bool {
	return s.NeedOpenRunMode
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetNeedOpenVirtualPatche() *bool {
	return s.NeedOpenVirtualPatche
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetNeedOpenVirtualPatcheUuids() *string {
	return s.NeedOpenVirtualPatcheUuids
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetNeedRuleClass() *int32 {
	return s.NeedRuleClass
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetResourceCnt() *int32 {
	return s.ResourceCnt
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetResourceList() []*DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList {
	return s.ResourceList
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetRuleTag() *string {
	return s.RuleTag
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetVirtualPatcheIds() *string {
	return s.VirtualPatcheIds
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetVulnKey() *string {
	return s.VulnKey
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetVulnLevel() *string {
	return s.VulnLevel
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetVulnName() *string {
	return s.VulnName
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetVulnStatus() *string {
	return s.VulnStatus
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) GetVulnType() *string {
	return s.VulnType
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetAttackCnt(v int32) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.AttackCnt = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetAttackType(v int32) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.AttackType = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetBasicRuleIds(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.BasicRuleIds = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetCveId(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.CveId = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetFirstTime(v int64) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.FirstTime = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetHighlightTag(v int32) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.HighlightTag = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetLastTime(v int64) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.LastTime = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetMemberUid(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.MemberUid = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetNeedOpenBasicRule(v bool) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.NeedOpenBasicRule = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetNeedOpenBasicRuleUuids(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.NeedOpenBasicRuleUuids = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetNeedOpenRunMode(v bool) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.NeedOpenRunMode = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetNeedOpenVirtualPatche(v bool) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.NeedOpenVirtualPatche = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetNeedOpenVirtualPatcheUuids(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.NeedOpenVirtualPatcheUuids = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetNeedRuleClass(v int32) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.NeedRuleClass = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetResourceCnt(v int32) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.ResourceCnt = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetResourceList(v []*DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.ResourceList = v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetRuleTag(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.RuleTag = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetVirtualPatcheIds(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.VirtualPatcheIds = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetVulnKey(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.VulnKey = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetVulnLevel(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.VulnLevel = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetVulnName(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.VulnName = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetVulnStatus(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.VulnStatus = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) SetVulnType(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnList {
	s.VulnType = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnList) Validate() error {
	if s.ResourceList != nil {
		for _, item := range s.ResourceList {
			if item != nil {
				if err := item.Validate(); err != nil {
					return err
				}
			}
		}
	}
	return nil
}

type DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList struct {
	// The elastic IP address (EIP) that is associated with the instance.
	//
	// example:
	//
	// 203.107.XX.XX
	Eip *string `json:"Eip,omitempty" xml:"Eip,omitempty"`
	// The public IP address of the instance.
	//
	// example:
	//
	// 47.96.XX.XX
	InternetIp *string `json:"InternetIp,omitempty" xml:"InternetIp,omitempty"`
	// The private IP address of the instance.
	//
	// example:
	//
	// 192.168.XX.XX
	IntranetIp *string `json:"IntranetIp,omitempty" xml:"IntranetIp,omitempty"`
	// The region ID of your Cloud Firewall.
	//
	// >  For more information about Cloud Firewall supported regions, see [Supported regions](https://help.aliyun.com/document_detail/195657.html).
	//
	// example:
	//
	// cn-beijing
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The ID of the instance.
	//
	// example:
	//
	// vfw-m5e7dbc4y****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The name of the instance.
	//
	// example:
	//
	// ECS
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The type of the asset. Valid values:
	//
	// 	- **SLB**
	//
	// 	- **EIP**
	//
	// 	- **ECS**
	//
	// example:
	//
	// EIP
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The status of the vulnerability prevention feature. Valid values:
	//
	// 	- **partProtected**: enabled for partial assets
	//
	// 	- **protected**: enabled
	//
	// 	- **unProtected**: disabled
	//
	// example:
	//
	// protected
	VulnStatus *string `json:"VulnStatus,omitempty" xml:"VulnStatus,omitempty"`
}

func (s DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) String() string {
	return dara.Prettify(s)
}

func (s DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) GoString() string {
	return s.String()
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) GetEip() *string {
	return s.Eip
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) GetInternetIp() *string {
	return s.InternetIp
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) GetIntranetIp() *string {
	return s.IntranetIp
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) GetRegionId() *string {
	return s.RegionId
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) GetResourceId() *string {
	return s.ResourceId
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) GetResourceName() *string {
	return s.ResourceName
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) GetResourceType() *string {
	return s.ResourceType
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) GetVulnStatus() *string {
	return s.VulnStatus
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) SetEip(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList {
	s.Eip = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) SetInternetIp(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList {
	s.InternetIp = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) SetIntranetIp(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList {
	s.IntranetIp = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) SetRegionId(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList {
	s.RegionId = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) SetResourceId(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList {
	s.ResourceId = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) SetResourceName(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList {
	s.ResourceName = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) SetResourceType(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList {
	s.ResourceType = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) SetVulnStatus(v string) *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList {
	s.VulnStatus = &v
	return s
}

func (s *DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList) Validate() error {
	return dara.Validate(s)
}
