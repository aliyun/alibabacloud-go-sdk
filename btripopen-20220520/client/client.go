// This file is auto-generated, don't edit it. Thanks.
package client

import (
	openapi "github.com/alibabacloud-go/darabonba-openapi/v2/client"
	endpointutil "github.com/alibabacloud-go/endpoint-util/service"
	openapiutil "github.com/alibabacloud-go/openapi-util/service"
	util "github.com/alibabacloud-go/tea-utils/v2/service"
	"github.com/alibabacloud-go/tea/tea"
)

type KeywordSuggestInfo struct {
	Address              *string             `json:"address,omitempty" xml:"address,omitempty"`
	BusinessAreaWithCity *KeywordSuggestInfo `json:"business_area_with_city,omitempty" xml:"business_area_with_city,omitempty"`
	// example:
	//
	// 300100
	CityCode *int32 `json:"city_code,omitempty" xml:"city_code,omitempty"`
	// example:
	//
	// 杭州
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 杭州东站
	DisplayName *string `json:"display_name,omitempty" xml:"display_name,omitempty"`
	// example:
	//
	// 53853318
	HotelId *string `json:"hotel_id,omitempty" xml:"hotel_id,omitempty"`
	Icon    *string `json:"icon,omitempty" xml:"icon,omitempty"`
	// example:
	//
	// 4.8分
	Point *string `json:"point,omitempty" xml:"point,omitempty"`
	// example:
	//
	// 524
	Price *string `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 0
	Region *int32 `json:"region,omitempty" xml:"region,omitempty"`
	Type   *int32 `json:"type,omitempty" xml:"type,omitempty"`
	// example:
	//
	// 景点
	TypeDesc *string `json:"type_desc,omitempty" xml:"type_desc,omitempty"`
}

func (s KeywordSuggestInfo) String() string {
	return tea.Prettify(s)
}

func (s KeywordSuggestInfo) GoString() string {
	return s.String()
}

func (s *KeywordSuggestInfo) SetAddress(v string) *KeywordSuggestInfo {
	s.Address = &v
	return s
}

func (s *KeywordSuggestInfo) SetBusinessAreaWithCity(v *KeywordSuggestInfo) *KeywordSuggestInfo {
	s.BusinessAreaWithCity = v
	return s
}

func (s *KeywordSuggestInfo) SetCityCode(v int32) *KeywordSuggestInfo {
	s.CityCode = &v
	return s
}

func (s *KeywordSuggestInfo) SetCityName(v string) *KeywordSuggestInfo {
	s.CityName = &v
	return s
}

func (s *KeywordSuggestInfo) SetDisplayName(v string) *KeywordSuggestInfo {
	s.DisplayName = &v
	return s
}

func (s *KeywordSuggestInfo) SetHotelId(v string) *KeywordSuggestInfo {
	s.HotelId = &v
	return s
}

func (s *KeywordSuggestInfo) SetIcon(v string) *KeywordSuggestInfo {
	s.Icon = &v
	return s
}

func (s *KeywordSuggestInfo) SetPoint(v string) *KeywordSuggestInfo {
	s.Point = &v
	return s
}

func (s *KeywordSuggestInfo) SetPrice(v string) *KeywordSuggestInfo {
	s.Price = &v
	return s
}

func (s *KeywordSuggestInfo) SetRegion(v int32) *KeywordSuggestInfo {
	s.Region = &v
	return s
}

func (s *KeywordSuggestInfo) SetType(v int32) *KeywordSuggestInfo {
	s.Type = &v
	return s
}

func (s *KeywordSuggestInfo) SetTypeDesc(v string) *KeywordSuggestInfo {
	s.TypeDesc = &v
	return s
}

type ModuleFlightItemListBestPriceItemFlightRuleInfosValue struct {
	RefundChangeRuleDesc *string `json:"refund_change_rule_desc,omitempty" xml:"refund_change_rule_desc,omitempty"`
	BaggageDesc          *string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemFlightRuleInfosValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemFlightRuleInfosValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemFlightRuleInfosValue) SetRefundChangeRuleDesc(v string) *ModuleFlightItemListBestPriceItemFlightRuleInfosValue {
	s.RefundChangeRuleDesc = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemFlightRuleInfosValue) SetBaggageDesc(v string) *ModuleFlightItemListBestPriceItemFlightRuleInfosValue {
	s.BaggageDesc = &v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValue struct {
	CabinQuantityList []*ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityList `json:"cabin_quantity_list,omitempty" xml:"cabin_quantity_list,omitempty" type:"Repeated"`
	SearchPrice       *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice         `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
	SegmentPriceList  []*ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceList  `json:"segment_price_list,omitempty" xml:"segment_price_list,omitempty" type:"Repeated"`
	// id
	//
	// example:
	//
	// ADT07df0bd9-f803-4a50-8449-f4bd675d9939
	Id            *string                                                                             `json:"id,omitempty" xml:"id,omitempty"`
	CabinQuantity map[string]*ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue `json:"cabin_quantity,omitempty" xml:"cabin_quantity,omitempty"`
	SegmentPrice  map[string]*ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue  `json:"segment_price,omitempty" xml:"segment_price,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValue) SetCabinQuantityList(v []*ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityList) *ModuleFlightItemListBestPriceItemShoppingItemMapValue {
	s.CabinQuantityList = v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValue) SetSearchPrice(v *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) *ModuleFlightItemListBestPriceItemShoppingItemMapValue {
	s.SearchPrice = v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValue) SetSegmentPriceList(v []*ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceList) *ModuleFlightItemListBestPriceItemShoppingItemMapValue {
	s.SegmentPriceList = v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValue) SetId(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValue {
	s.Id = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValue) SetCabinQuantity(v map[string]*ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) *ModuleFlightItemListBestPriceItemShoppingItemMapValue {
	s.CabinQuantity = v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValue) SetSegmentPrice(v map[string]*ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) *ModuleFlightItemListBestPriceItemShoppingItemMapValue {
	s.SegmentPrice = v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityList struct {
	SegmentPosition *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
	Cabin           *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin           `json:"cabin,omitempty" xml:"cabin,omitempty" type:"Struct"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityList) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityList) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityList) SetSegmentPosition(v *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListSegmentPosition) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityList {
	s.SegmentPosition = v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityList) SetCabin(v *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityList {
	s.Cabin = v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListSegmentPosition struct {
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListSegmentPosition) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListSegmentPosition) SetSegmentIndex(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListSegmentPosition {
	s.SegmentIndex = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListSegmentPosition) SetJourneyIndex(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListSegmentPosition {
	s.JourneyIndex = &v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin struct {
	// example:
	//
	// Y
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	// example:
	//
	// A
	Quantity *string `json:"quantity,omitempty" xml:"quantity,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin) SetCabin(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin {
	s.Cabin = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin) SetCabinClass(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin {
	s.CabinClass = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin) SetCabinClassName(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin {
	s.CabinClassName = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin) SetQuantity(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityListCabin {
	s.Quantity = &v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice          *int32   `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice           *int32   `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice         *int32   `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice     *int32   `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum            *int32   `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice          *float64 `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice   *int32   `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice *int32   `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	// example:
	//
	// 17400
	MinBeforeControlPriceOfNormal *int32                                                                         `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetFloorPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.FloorPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetTicketPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetSellPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetOriginalSellPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetBaseTotalPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetBeforeControlPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetTax(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.Tax = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetSupplyPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetBasicCabinPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetBuildPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.BuildPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetOilPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.OilPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetFirstStandardPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetBusinessStandardPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetCommonStandardPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetInterTicketPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetSubtractedPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetOriginCommonPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetDynamicPromotionPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetInstallmentNum(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetInstallmentPrice(v float64) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetCompetitionDynamicPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetCompetitionPromotionPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetMinBeforeControlPriceOfNormal(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice) SetPriceShowInfo(v *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPrice {
	s.PriceShowInfo = v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountInfo(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountNum(v float64) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo) SetShowTicketPrice(v bool) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSearchPricePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceList struct {
	SegmentPosition *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
	SearchPrice     *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice     `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceList) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceList) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceList) SetSegmentPosition(v *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSegmentPosition) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceList {
	s.SegmentPosition = v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceList) SetSearchPrice(v *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceList {
	s.SearchPrice = v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSegmentPosition struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSegmentPosition) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSegmentPosition) SetJourneyIndex(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSegmentPosition) SetSegmentIndex(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice struct {
	// example:
	//
	// 120000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 120000
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 6000
	Tax *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice) SetTicketPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice) SetSellPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice) SetTax(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceListSearchPrice {
	s.Tax = &v
	return s
}

type ModuleFlightItemListBestPriceItemSubItemPositionMapValue struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemSubItemPositionMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemSubItemPositionMapValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemSubItemPositionMapValue) SetJourneyIndex(v int32) *ModuleFlightItemListBestPriceItemSubItemPositionMapValue {
	s.JourneyIndex = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemPositionMapValue) SetSegmentIndex(v int32) *ModuleFlightItemListBestPriceItemSubItemPositionMapValue {
	s.SegmentIndex = &v
	return s
}

type ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue struct {
	// id
	//
	// example:
	//
	// ADT07df0bd9-f803-4a50-8449-f4bd675d9939
	Id            *string                                                                                     `json:"id,omitempty" xml:"id,omitempty"`
	CabinQuantity map[string]*ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue `json:"cabin_quantity,omitempty" xml:"cabin_quantity,omitempty"`
	SearchPrice   *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice                   `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
	SegmentPrice  map[string]*ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue  `json:"segment_price,omitempty" xml:"segment_price,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue) SetId(v string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue {
	s.Id = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue) SetCabinQuantity(v map[string]*ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue {
	s.CabinQuantity = v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue) SetSearchPrice(v *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue {
	s.SearchPrice = v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue) SetSegmentPrice(v map[string]*ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue {
	s.SegmentPrice = v
	return s
}

type ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice          *int32   `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice           *int32   `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice         *int32   `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice     *int32   `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum            *int32   `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice          *float64 `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice   *int32   `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice *int32   `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	// example:
	//
	// 17400
	MinBeforeControlPriceOfNormal *int32                                                                                 `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetFloorPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.FloorPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetTicketPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetSellPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetOriginalSellPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetBaseTotalPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetBeforeControlPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetTax(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.Tax = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetSupplyPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetBasicCabinPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetBuildPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.BuildPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetOilPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.OilPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetFirstStandardPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetBusinessStandardPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetCommonStandardPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetInterTicketPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetSubtractedPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetOriginCommonPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetDynamicPromotionPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetInstallmentNum(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetInstallmentPrice(v float64) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetCompetitionDynamicPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetCompetitionPromotionPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetMinBeforeControlPriceOfNormal(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice) SetPriceShowInfo(v *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPrice {
	s.PriceShowInfo = v
	return s
}

type ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountInfo(v string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountNum(v float64) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo) SetShowTicketPrice(v bool) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSearchPricePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleFlightItemListItemListFlightRuleInfosValue struct {
	RefundChangeRuleDesc *string `json:"refund_change_rule_desc,omitempty" xml:"refund_change_rule_desc,omitempty"`
	BaggageDesc          *string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
}

func (s ModuleFlightItemListItemListFlightRuleInfosValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListFlightRuleInfosValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListFlightRuleInfosValue) SetRefundChangeRuleDesc(v string) *ModuleFlightItemListItemListFlightRuleInfosValue {
	s.RefundChangeRuleDesc = &v
	return s
}

func (s *ModuleFlightItemListItemListFlightRuleInfosValue) SetBaggageDesc(v string) *ModuleFlightItemListItemListFlightRuleInfosValue {
	s.BaggageDesc = &v
	return s
}

type ModuleFlightItemListItemListShoppingItemMapValue struct {
	// id
	//
	// example:
	//
	// ADT07df0bd9-f803-4a50-8449-f4bd675d9939
	Id            *string                                                                        `json:"id,omitempty" xml:"id,omitempty"`
	CabinQuantity map[string]*ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue `json:"cabin_quantity,omitempty" xml:"cabin_quantity,omitempty"`
	SearchPrice   *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice                   `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
	SegmentPrice  map[string]*ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue  `json:"segment_price,omitempty" xml:"segment_price,omitempty"`
}

func (s ModuleFlightItemListItemListShoppingItemMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListShoppingItemMapValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListShoppingItemMapValue) SetId(v string) *ModuleFlightItemListItemListShoppingItemMapValue {
	s.Id = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValue) SetCabinQuantity(v map[string]*ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) *ModuleFlightItemListItemListShoppingItemMapValue {
	s.CabinQuantity = v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValue) SetSearchPrice(v *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) *ModuleFlightItemListItemListShoppingItemMapValue {
	s.SearchPrice = v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValue) SetSegmentPrice(v map[string]*ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) *ModuleFlightItemListItemListShoppingItemMapValue {
	s.SegmentPrice = v
	return s
}

type ModuleFlightItemListItemListShoppingItemMapValueSearchPrice struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice          *int32   `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice           *int32   `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice         *int32   `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice     *int32   `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum            *int32   `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice          *float64 `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice   *int32   `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice *int32   `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	// example:
	//
	// 17400
	MinBeforeControlPriceOfNormal *int32                                                                    `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetFloorPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.FloorPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetTicketPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetSellPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetOriginalSellPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetBaseTotalPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetBeforeControlPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetTax(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.Tax = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetSupplyPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetBasicCabinPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetBuildPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.BuildPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetOilPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.OilPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetFirstStandardPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetBusinessStandardPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetCommonStandardPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetInterTicketPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetSubtractedPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetOriginCommonPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetDynamicPromotionPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetInstallmentNum(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetInstallmentPrice(v float64) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetCompetitionDynamicPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetCompetitionPromotionPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetMinBeforeControlPriceOfNormal(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice) SetPriceShowInfo(v *ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo) *ModuleFlightItemListItemListShoppingItemMapValueSearchPrice {
	s.PriceShowInfo = v
	return s
}

type ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountInfo(v string) *ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountNum(v float64) *ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo) SetShowTicketPrice(v bool) *ModuleFlightItemListItemListShoppingItemMapValueSearchPricePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleFlightItemListItemListSubItemPositionMapValue struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s ModuleFlightItemListItemListSubItemPositionMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListSubItemPositionMapValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListSubItemPositionMapValue) SetJourneyIndex(v int32) *ModuleFlightItemListItemListSubItemPositionMapValue {
	s.JourneyIndex = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemPositionMapValue) SetSegmentIndex(v int32) *ModuleFlightItemListItemListSubItemPositionMapValue {
	s.SegmentIndex = &v
	return s
}

type ModuleFlightItemListItemListSubItemsShoppingItemMapValue struct {
	// id
	//
	// example:
	//
	// ADT07df0bd9-f803-4a50-8449-f4bd675d9939
	Id            *string                                                                                `json:"id,omitempty" xml:"id,omitempty"`
	CabinQuantity map[string]*ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue `json:"cabin_quantity,omitempty" xml:"cabin_quantity,omitempty"`
	SearchPrice   *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice                   `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
	SegmentPrice  map[string]*ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue  `json:"segment_price,omitempty" xml:"segment_price,omitempty"`
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValue) SetId(v string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValue {
	s.Id = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValue) SetCabinQuantity(v map[string]*ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) *ModuleFlightItemListItemListSubItemsShoppingItemMapValue {
	s.CabinQuantity = v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValue) SetSearchPrice(v *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) *ModuleFlightItemListItemListSubItemsShoppingItemMapValue {
	s.SearchPrice = v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValue) SetSegmentPrice(v map[string]*ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) *ModuleFlightItemListItemListSubItemsShoppingItemMapValue {
	s.SegmentPrice = v
	return s
}

type ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice          *int32   `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice           *int32   `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice         *int32   `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice     *int32   `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum            *int32   `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice          *float64 `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice   *int32   `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice *int32   `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	// example:
	//
	// 17400
	MinBeforeControlPriceOfNormal *int32                                                                            `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetFloorPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.FloorPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetTicketPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetSellPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetOriginalSellPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetBaseTotalPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetBeforeControlPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetTax(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.Tax = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetSupplyPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetBasicCabinPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetBuildPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.BuildPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetOilPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.OilPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetFirstStandardPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetBusinessStandardPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetCommonStandardPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetInterTicketPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetSubtractedPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetOriginCommonPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetDynamicPromotionPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetInstallmentNum(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetInstallmentPrice(v float64) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetCompetitionDynamicPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetCompetitionPromotionPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetMinBeforeControlPriceOfNormal(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice) SetPriceShowInfo(v *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPrice {
	s.PriceShowInfo = v
	return s
}

type ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountInfo(v string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountNum(v float64) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) SetShowTicketPrice(v bool) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleAgentInfosAttributeShowInfoMapValue struct {
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
	Text *string `json:"text,omitempty" xml:"text,omitempty"`
}

func (s ModuleAgentInfosAttributeShowInfoMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleAgentInfosAttributeShowInfoMapValue) GoString() string {
	return s.String()
}

func (s *ModuleAgentInfosAttributeShowInfoMapValue) SetCode(v string) *ModuleAgentInfosAttributeShowInfoMapValue {
	s.Code = &v
	return s
}

func (s *ModuleAgentInfosAttributeShowInfoMapValue) SetName(v string) *ModuleAgentInfosAttributeShowInfoMapValue {
	s.Name = &v
	return s
}

func (s *ModuleAgentInfosAttributeShowInfoMapValue) SetText(v string) *ModuleAgentInfosAttributeShowInfoMapValue {
	s.Text = &v
	return s
}

type ModuleAgentInfoAttributeShowInfoMapValue struct {
	// example:
	//
	// FIRST_BAGGAGE
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
	Text *string `json:"text,omitempty" xml:"text,omitempty"`
}

func (s ModuleAgentInfoAttributeShowInfoMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleAgentInfoAttributeShowInfoMapValue) GoString() string {
	return s.String()
}

func (s *ModuleAgentInfoAttributeShowInfoMapValue) SetCode(v string) *ModuleAgentInfoAttributeShowInfoMapValue {
	s.Code = &v
	return s
}

func (s *ModuleAgentInfoAttributeShowInfoMapValue) SetName(v string) *ModuleAgentInfoAttributeShowInfoMapValue {
	s.Name = &v
	return s
}

func (s *ModuleAgentInfoAttributeShowInfoMapValue) SetText(v string) *ModuleAgentInfoAttributeShowInfoMapValue {
	s.Text = &v
	return s
}

type ModuleItemListFlightRuleInfosValue struct {
	RefundChangeRuleDesc *string `json:"refund_change_rule_desc,omitempty" xml:"refund_change_rule_desc,omitempty"`
	BaggageDesc          *string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
}

func (s ModuleItemListFlightRuleInfosValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListFlightRuleInfosValue) GoString() string {
	return s.String()
}

func (s *ModuleItemListFlightRuleInfosValue) SetRefundChangeRuleDesc(v string) *ModuleItemListFlightRuleInfosValue {
	s.RefundChangeRuleDesc = &v
	return s
}

func (s *ModuleItemListFlightRuleInfosValue) SetBaggageDesc(v string) *ModuleItemListFlightRuleInfosValue {
	s.BaggageDesc = &v
	return s
}

type ModuleItemListShoppingItemMapValue struct {
	CabinQuantityList []*ModuleItemListShoppingItemMapValueCabinQuantityList `json:"cabin_quantity_list,omitempty" xml:"cabin_quantity_list,omitempty" type:"Repeated"`
	SearchPrice       *ModuleItemListShoppingItemMapValueSearchPrice         `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
	SegmentPriceList  []*ModuleItemListShoppingItemMapValueSegmentPriceList  `json:"segment_price_list,omitempty" xml:"segment_price_list,omitempty" type:"Repeated"`
	// id
	//
	// example:
	//
	// ADT07df0bd9-f803-4a50-8449-f4bd675d9939
	Id            *string                                                          `json:"id,omitempty" xml:"id,omitempty"`
	CabinQuantity map[string]*ModuleItemListShoppingItemMapValueCabinQuantityValue `json:"cabin_quantity,omitempty" xml:"cabin_quantity,omitempty"`
	SegmentPrice  map[string]*ModuleItemListShoppingItemMapValueSegmentPriceValue  `json:"segment_price,omitempty" xml:"segment_price,omitempty"`
}

func (s ModuleItemListShoppingItemMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValue) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValue) SetCabinQuantityList(v []*ModuleItemListShoppingItemMapValueCabinQuantityList) *ModuleItemListShoppingItemMapValue {
	s.CabinQuantityList = v
	return s
}

func (s *ModuleItemListShoppingItemMapValue) SetSearchPrice(v *ModuleItemListShoppingItemMapValueSearchPrice) *ModuleItemListShoppingItemMapValue {
	s.SearchPrice = v
	return s
}

func (s *ModuleItemListShoppingItemMapValue) SetSegmentPriceList(v []*ModuleItemListShoppingItemMapValueSegmentPriceList) *ModuleItemListShoppingItemMapValue {
	s.SegmentPriceList = v
	return s
}

func (s *ModuleItemListShoppingItemMapValue) SetId(v string) *ModuleItemListShoppingItemMapValue {
	s.Id = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValue) SetCabinQuantity(v map[string]*ModuleItemListShoppingItemMapValueCabinQuantityValue) *ModuleItemListShoppingItemMapValue {
	s.CabinQuantity = v
	return s
}

func (s *ModuleItemListShoppingItemMapValue) SetSegmentPrice(v map[string]*ModuleItemListShoppingItemMapValueSegmentPriceValue) *ModuleItemListShoppingItemMapValue {
	s.SegmentPrice = v
	return s
}

type ModuleItemListShoppingItemMapValueCabinQuantityList struct {
	SegmentPosition *ModuleItemListShoppingItemMapValueCabinQuantityListSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
	Cabin           *ModuleItemListShoppingItemMapValueCabinQuantityListCabin           `json:"cabin,omitempty" xml:"cabin,omitempty" type:"Struct"`
}

func (s ModuleItemListShoppingItemMapValueCabinQuantityList) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueCabinQuantityList) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityList) SetSegmentPosition(v *ModuleItemListShoppingItemMapValueCabinQuantityListSegmentPosition) *ModuleItemListShoppingItemMapValueCabinQuantityList {
	s.SegmentPosition = v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityList) SetCabin(v *ModuleItemListShoppingItemMapValueCabinQuantityListCabin) *ModuleItemListShoppingItemMapValueCabinQuantityList {
	s.Cabin = v
	return s
}

type ModuleItemListShoppingItemMapValueCabinQuantityListSegmentPosition struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s ModuleItemListShoppingItemMapValueCabinQuantityListSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueCabinQuantityListSegmentPosition) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityListSegmentPosition) SetJourneyIndex(v int32) *ModuleItemListShoppingItemMapValueCabinQuantityListSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityListSegmentPosition) SetSegmentIndex(v int32) *ModuleItemListShoppingItemMapValueCabinQuantityListSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type ModuleItemListShoppingItemMapValueCabinQuantityListCabin struct {
	// example:
	//
	// Y
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	// example:
	//
	// A
	Quantity *string `json:"quantity,omitempty" xml:"quantity,omitempty"`
}

func (s ModuleItemListShoppingItemMapValueCabinQuantityListCabin) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueCabinQuantityListCabin) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityListCabin) SetCabin(v string) *ModuleItemListShoppingItemMapValueCabinQuantityListCabin {
	s.Cabin = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityListCabin) SetCabinClass(v string) *ModuleItemListShoppingItemMapValueCabinQuantityListCabin {
	s.CabinClass = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityListCabin) SetCabinClassName(v string) *ModuleItemListShoppingItemMapValueCabinQuantityListCabin {
	s.CabinClassName = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityListCabin) SetQuantity(v string) *ModuleItemListShoppingItemMapValueCabinQuantityListCabin {
	s.Quantity = &v
	return s
}

type ModuleItemListShoppingItemMapValueSearchPrice struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice          *int32   `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice           *int32   `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice         *int32   `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice     *int32   `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum            *int32   `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice          *float64 `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice   *int32   `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice *int32   `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	// example:
	//
	// 17400
	MinBeforeControlPriceOfNormal *int32                                                      `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleItemListShoppingItemMapValueSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetFloorPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.FloorPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetTicketPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetSellPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetOriginalSellPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetBaseTotalPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetBeforeControlPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetTax(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.Tax = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetSupplyPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetBasicCabinPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetBuildPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.BuildPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetOilPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.OilPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetFirstStandardPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetBusinessStandardPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetCommonStandardPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetInterTicketPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetSubtractedPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetOriginCommonPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetDynamicPromotionPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetInstallmentNum(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetInstallmentPrice(v float64) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetCompetitionDynamicPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetCompetitionPromotionPrice(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetMinBeforeControlPriceOfNormal(v int32) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPrice) SetPriceShowInfo(v *ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo) *ModuleItemListShoppingItemMapValueSearchPrice {
	s.PriceShowInfo = v
	return s
}

type ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountInfo(v string) *ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountNum(v float64) *ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo) SetShowTicketPrice(v bool) *ModuleItemListShoppingItemMapValueSearchPricePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleItemListShoppingItemMapValueSegmentPriceList struct {
	SegmentPosition *ModuleItemListShoppingItemMapValueSegmentPriceListSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
	SearchPrice     *ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice     `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
}

func (s ModuleItemListShoppingItemMapValueSegmentPriceList) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueSegmentPriceList) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceList) SetSegmentPosition(v *ModuleItemListShoppingItemMapValueSegmentPriceListSegmentPosition) *ModuleItemListShoppingItemMapValueSegmentPriceList {
	s.SegmentPosition = v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceList) SetSearchPrice(v *ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice) *ModuleItemListShoppingItemMapValueSegmentPriceList {
	s.SearchPrice = v
	return s
}

type ModuleItemListShoppingItemMapValueSegmentPriceListSegmentPosition struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s ModuleItemListShoppingItemMapValueSegmentPriceListSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueSegmentPriceListSegmentPosition) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceListSegmentPosition) SetJourneyIndex(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceListSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceListSegmentPosition) SetSegmentIndex(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceListSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice struct {
	// example:
	//
	// 120000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 120000
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 6000
	Tax *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
}

func (s ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice) SetTicketPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice) SetSellPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice) SetTax(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceListSearchPrice {
	s.Tax = &v
	return s
}

type ModuleItemListSubItemPositionMapValue struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s ModuleItemListSubItemPositionMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListSubItemPositionMapValue) GoString() string {
	return s.String()
}

func (s *ModuleItemListSubItemPositionMapValue) SetJourneyIndex(v int32) *ModuleItemListSubItemPositionMapValue {
	s.JourneyIndex = &v
	return s
}

func (s *ModuleItemListSubItemPositionMapValue) SetSegmentIndex(v int32) *ModuleItemListSubItemPositionMapValue {
	s.SegmentIndex = &v
	return s
}

type ModuleItemListSubItemsShoppingItemMapValue struct {
	SearchPrice *ModuleItemListSubItemsShoppingItemMapValueSearchPrice `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
	// id
	//
	// example:
	//
	// ADT07df0bd9-f803-4a50-8449-f4bd675d9939
	Id            *string                                                                  `json:"id,omitempty" xml:"id,omitempty"`
	CabinQuantity map[string]*ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue `json:"cabin_quantity,omitempty" xml:"cabin_quantity,omitempty"`
	SegmentPrice  map[string]*ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue  `json:"segment_price,omitempty" xml:"segment_price,omitempty"`
}

func (s ModuleItemListSubItemsShoppingItemMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListSubItemsShoppingItemMapValue) GoString() string {
	return s.String()
}

func (s *ModuleItemListSubItemsShoppingItemMapValue) SetSearchPrice(v *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) *ModuleItemListSubItemsShoppingItemMapValue {
	s.SearchPrice = v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValue) SetId(v string) *ModuleItemListSubItemsShoppingItemMapValue {
	s.Id = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValue) SetCabinQuantity(v map[string]*ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) *ModuleItemListSubItemsShoppingItemMapValue {
	s.CabinQuantity = v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValue) SetSegmentPrice(v map[string]*ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) *ModuleItemListSubItemsShoppingItemMapValue {
	s.SegmentPrice = v
	return s
}

type ModuleItemListSubItemsShoppingItemMapValueSearchPrice struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice          *int32   `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice           *int32   `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice         *int32   `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice     *int32   `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum            *int32   `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice          *float64 `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice   *int32   `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice *int32   `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	// example:
	//
	// 17400
	MinBeforeControlPriceOfNormal *int32                                                              `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleItemListSubItemsShoppingItemMapValueSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListSubItemsShoppingItemMapValueSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetFloorPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.FloorPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetTicketPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetSellPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetOriginalSellPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetBaseTotalPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetBeforeControlPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetTax(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.Tax = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetSupplyPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetBasicCabinPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetBuildPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.BuildPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetOilPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.OilPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetFirstStandardPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetBusinessStandardPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetCommonStandardPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetInterTicketPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetSubtractedPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetOriginCommonPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetDynamicPromotionPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetInstallmentNum(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetInstallmentPrice(v float64) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetCompetitionDynamicPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetCompetitionPromotionPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetMinBeforeControlPriceOfNormal(v int32) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPrice) SetPriceShowInfo(v *ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) *ModuleItemListSubItemsShoppingItemMapValueSearchPrice {
	s.PriceShowInfo = v
	return s
}

type ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountInfo(v string) *ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) SetDiscountNum(v float64) *ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo) SetShowTicketPrice(v bool) *ModuleItemListSubItemsShoppingItemMapValueSearchPricePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleOrderItemListBaggageRuleBaggageInfoMapValue struct {
	// example:
	//
	// 1
	CarryFreepc *int32 `json:"carry_freepc,omitempty" xml:"carry_freepc,omitempty"`
	// example:
	//
	// 10
	CarryBagWeight *int32 `json:"carry_bag_weight,omitempty" xml:"carry_bag_weight,omitempty"`
	// example:
	//
	// 10
	CarryBagSize *string `json:"carry_bag_size,omitempty" xml:"carry_bag_size,omitempty"`
	// example:
	//
	// false
	IsAllCarryBagWeight *bool `json:"is_all_carry_bag_weight,omitempty" xml:"is_all_carry_bag_weight,omitempty"`
	// example:
	//
	// CZ
	Airline *string `json:"airline,omitempty" xml:"airline,omitempty"`
	// example:
	//
	// PKX
	StartAirport *string `json:"start_airport,omitempty" xml:"start_airport,omitempty"`
	// example:
	//
	// CAN
	EndAirport *string `json:"end_airport,omitempty" xml:"end_airport,omitempty"`
	// example:
	//
	// BJS
	StartCityCode *string `json:"start_city_code,omitempty" xml:"start_city_code,omitempty"`
	// example:
	//
	// CAN
	EndCityCode *string `json:"end_city_code,omitempty" xml:"end_city_code,omitempty"`
	// example:
	//
	// 1
	FreePcs *int64 `json:"free_pcs,omitempty" xml:"free_pcs,omitempty"`
	// example:
	//
	// 10
	BaggageWeight *int64 `json:"baggage_weight,omitempty" xml:"baggage_weight,omitempty"`
	// example:
	//
	// kg
	BaggageUnit *string `json:"baggage_unit,omitempty" xml:"baggage_unit,omitempty"`
	// example:
	//
	// 10
	BaggageSize *string `json:"baggage_size,omitempty" xml:"baggage_size,omitempty"`
	// example:
	//
	// false
	AllWeight *bool `json:"all_weight,omitempty" xml:"all_weight,omitempty"`
	// example:
	//
	// 1
	TotalPcs *int64 `json:"total_pcs,omitempty" xml:"total_pcs,omitempty"`
	// example:
	//
	// 10
	TotalWeight *int64 `json:"total_weight,omitempty" xml:"total_weight,omitempty"`
}

func (s ModuleOrderItemListBaggageRuleBaggageInfoMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleOrderItemListBaggageRuleBaggageInfoMapValue) GoString() string {
	return s.String()
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetCarryFreepc(v int32) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.CarryFreepc = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetCarryBagWeight(v int32) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.CarryBagWeight = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetCarryBagSize(v string) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.CarryBagSize = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetIsAllCarryBagWeight(v bool) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.IsAllCarryBagWeight = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetAirline(v string) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.Airline = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetStartAirport(v string) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.StartAirport = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetEndAirport(v string) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.EndAirport = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetStartCityCode(v string) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.StartCityCode = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetEndCityCode(v string) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.EndCityCode = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetFreePcs(v int64) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.FreePcs = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetBaggageWeight(v int64) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.BaggageWeight = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetBaggageUnit(v string) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.BaggageUnit = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetBaggageSize(v string) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.BaggageSize = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetAllWeight(v bool) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.AllWeight = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetTotalPcs(v int64) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.TotalPcs = &v
	return s
}

func (s *ModuleOrderItemListBaggageRuleBaggageInfoMapValue) SetTotalWeight(v int64) *ModuleOrderItemListBaggageRuleBaggageInfoMapValue {
	s.TotalWeight = &v
	return s
}

type ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue struct {
	// example:
	//
	// true
	Struct *bool `json:"struct,omitempty" xml:"struct,omitempty"`
	// example:
	//
	// true
	CancelFeeInd *bool `json:"cancel_fee_ind,omitempty" xml:"cancel_fee_ind,omitempty"`
	// example:
	//
	// false
	ChangeFeeInd *bool `json:"change_fee_ind,omitempty" xml:"change_fee_ind,omitempty"`
	// example:
	//
	// false
	UpgradeFeeInd *bool `json:"upgrade_fee_ind,omitempty" xml:"upgrade_fee_ind,omitempty"`
	// example:
	//
	// false
	ReissueInd *bool `json:"reissue_ind,omitempty" xml:"reissue_ind,omitempty"`
	// example:
	//
	// 0
	PenaltyTypeCode *int32 `json:"penalty_type_code,omitempty" xml:"penalty_type_code,omitempty"`
	// example:
	//
	// 1
	PenaltyApplyRangeCode *int32 `json:"penalty_apply_range_code,omitempty" xml:"penalty_apply_range_code,omitempty"`
	// example:
	//
	// 0
	PenaltyChargeTypeCode *int32 `json:"penalty_charge_type_code,omitempty" xml:"penalty_charge_type_code,omitempty"`
	// example:
	//
	// 1
	Fee *float64 `json:"fee,omitempty" xml:"fee,omitempty"`
	// example:
	//
	// CNY
	Currency *string `json:"currency,omitempty" xml:"currency,omitempty"`
	// example:
	//
	// 0
	PenaltyPercent *float64 `json:"penalty_percent,omitempty" xml:"penalty_percent,omitempty"`
	// example:
	//
	// 1
	StartTime *int32 `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// 10
	EndTime *int32 `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 0
	TimeUnitCode *int32  `json:"time_unit_code,omitempty" xml:"time_unit_code,omitempty"`
	Title        *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) GoString() string {
	return s.String()
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetStruct(v bool) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.Struct = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetCancelFeeInd(v bool) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.CancelFeeInd = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetChangeFeeInd(v bool) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.ChangeFeeInd = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetUpgradeFeeInd(v bool) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.UpgradeFeeInd = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetReissueInd(v bool) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.ReissueInd = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyTypeCode(v int32) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyTypeCode = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyApplyRangeCode(v int32) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyApplyRangeCode = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyChargeTypeCode(v int32) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyChargeTypeCode = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetFee(v float64) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.Fee = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetCurrency(v string) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.Currency = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyPercent(v float64) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyPercent = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetStartTime(v int32) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.StartTime = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetEndTime(v int32) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.EndTime = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetTimeUnitCode(v int32) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.TimeUnitCode = &v
	return s
}

func (s *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) SetTitle(v string) *ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue {
	s.Title = &v
	return s
}

type ModuleGroupItemShoppingItemMapValue struct {
	CabinQuantityList []*ModuleGroupItemShoppingItemMapValueCabinQuantityList `json:"cabin_quantity_list,omitempty" xml:"cabin_quantity_list,omitempty" type:"Repeated"`
	SearchPrice       *ModuleGroupItemShoppingItemMapValueSearchPrice         `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
	SegmentPriceList  []*ModuleGroupItemShoppingItemMapValueSegmentPriceList  `json:"segment_price_list,omitempty" xml:"segment_price_list,omitempty" type:"Repeated"`
}

func (s ModuleGroupItemShoppingItemMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemShoppingItemMapValue) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemShoppingItemMapValue) SetCabinQuantityList(v []*ModuleGroupItemShoppingItemMapValueCabinQuantityList) *ModuleGroupItemShoppingItemMapValue {
	s.CabinQuantityList = v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValue) SetSearchPrice(v *ModuleGroupItemShoppingItemMapValueSearchPrice) *ModuleGroupItemShoppingItemMapValue {
	s.SearchPrice = v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValue) SetSegmentPriceList(v []*ModuleGroupItemShoppingItemMapValueSegmentPriceList) *ModuleGroupItemShoppingItemMapValue {
	s.SegmentPriceList = v
	return s
}

type ModuleGroupItemShoppingItemMapValueCabinQuantityList struct {
	SegmentPosition *ModuleGroupItemShoppingItemMapValueCabinQuantityListSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
	Cabin           *ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin           `json:"cabin,omitempty" xml:"cabin,omitempty" type:"Struct"`
}

func (s ModuleGroupItemShoppingItemMapValueCabinQuantityList) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemShoppingItemMapValueCabinQuantityList) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemShoppingItemMapValueCabinQuantityList) SetSegmentPosition(v *ModuleGroupItemShoppingItemMapValueCabinQuantityListSegmentPosition) *ModuleGroupItemShoppingItemMapValueCabinQuantityList {
	s.SegmentPosition = v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueCabinQuantityList) SetCabin(v *ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin) *ModuleGroupItemShoppingItemMapValueCabinQuantityList {
	s.Cabin = v
	return s
}

type ModuleGroupItemShoppingItemMapValueCabinQuantityListSegmentPosition struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s ModuleGroupItemShoppingItemMapValueCabinQuantityListSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemShoppingItemMapValueCabinQuantityListSegmentPosition) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemShoppingItemMapValueCabinQuantityListSegmentPosition) SetJourneyIndex(v int32) *ModuleGroupItemShoppingItemMapValueCabinQuantityListSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueCabinQuantityListSegmentPosition) SetSegmentIndex(v int32) *ModuleGroupItemShoppingItemMapValueCabinQuantityListSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin struct {
	// example:
	//
	// Y
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	// example:
	//
	// A
	Quantity *string `json:"quantity,omitempty" xml:"quantity,omitempty"`
}

func (s ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin) SetCabin(v string) *ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin {
	s.Cabin = &v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin) SetCabinClass(v string) *ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin {
	s.CabinClass = &v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin) SetCabinClassName(v string) *ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin {
	s.CabinClassName = &v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin) SetQuantity(v string) *ModuleGroupItemShoppingItemMapValueCabinQuantityListCabin {
	s.Quantity = &v
	return s
}

type ModuleGroupItemShoppingItemMapValueSearchPrice struct {
	// example:
	//
	// 120000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 120000
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 6000
	Tax *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
}

func (s ModuleGroupItemShoppingItemMapValueSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemShoppingItemMapValueSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemShoppingItemMapValueSearchPrice) SetTicketPrice(v int32) *ModuleGroupItemShoppingItemMapValueSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueSearchPrice) SetSellPrice(v int32) *ModuleGroupItemShoppingItemMapValueSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueSearchPrice) SetTax(v int32) *ModuleGroupItemShoppingItemMapValueSearchPrice {
	s.Tax = &v
	return s
}

type ModuleGroupItemShoppingItemMapValueSegmentPriceList struct {
	SegmentPosition *ModuleGroupItemShoppingItemMapValueSegmentPriceListSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
	SearchPrice     *ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice     `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
}

func (s ModuleGroupItemShoppingItemMapValueSegmentPriceList) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemShoppingItemMapValueSegmentPriceList) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemShoppingItemMapValueSegmentPriceList) SetSegmentPosition(v *ModuleGroupItemShoppingItemMapValueSegmentPriceListSegmentPosition) *ModuleGroupItemShoppingItemMapValueSegmentPriceList {
	s.SegmentPosition = v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueSegmentPriceList) SetSearchPrice(v *ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice) *ModuleGroupItemShoppingItemMapValueSegmentPriceList {
	s.SearchPrice = v
	return s
}

type ModuleGroupItemShoppingItemMapValueSegmentPriceListSegmentPosition struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s ModuleGroupItemShoppingItemMapValueSegmentPriceListSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemShoppingItemMapValueSegmentPriceListSegmentPosition) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemShoppingItemMapValueSegmentPriceListSegmentPosition) SetJourneyIndex(v int32) *ModuleGroupItemShoppingItemMapValueSegmentPriceListSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueSegmentPriceListSegmentPosition) SetSegmentIndex(v int32) *ModuleGroupItemShoppingItemMapValueSegmentPriceListSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice struct {
	// example:
	//
	// 120000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 120000
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 6000
	Tax *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
}

func (s ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice) SetTicketPrice(v int32) *ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice) SetSellPrice(v int32) *ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice) SetTax(v int32) *ModuleGroupItemShoppingItemMapValueSegmentPriceListSearchPrice {
	s.Tax = &v
	return s
}

type ModuleGroupItemSubItemPositionMapValue struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s ModuleGroupItemSubItemPositionMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemSubItemPositionMapValue) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemSubItemPositionMapValue) SetJourneyIndex(v int32) *ModuleGroupItemSubItemPositionMapValue {
	s.JourneyIndex = &v
	return s
}

func (s *ModuleGroupItemSubItemPositionMapValue) SetSegmentIndex(v int32) *ModuleGroupItemSubItemPositionMapValue {
	s.SegmentIndex = &v
	return s
}

type ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue struct {
	// example:
	//
	// 1
	CarryFreepc *int32 `json:"carry_freepc,omitempty" xml:"carry_freepc,omitempty"`
	// example:
	//
	// 10
	CarryBagWeight *int32 `json:"carry_bag_weight,omitempty" xml:"carry_bag_weight,omitempty"`
	// example:
	//
	// 20*20
	CarryBagSize *string `json:"carry_bag_size,omitempty" xml:"carry_bag_size,omitempty"`
	// example:
	//
	// false
	IsAllCarryBagWeight *bool `json:"is_all_carry_bag_weight,omitempty" xml:"is_all_carry_bag_weight,omitempty"`
	// example:
	//
	// CA
	Airline *string `json:"airline,omitempty" xml:"airline,omitempty"`
	// example:
	//
	// BJS
	StartAirport *string `json:"start_airport,omitempty" xml:"start_airport,omitempty"`
	// example:
	//
	// HGH
	EndAirport *string `json:"end_airport,omitempty" xml:"end_airport,omitempty"`
	// example:
	//
	// BJS
	StartCityCode *string `json:"start_city_code,omitempty" xml:"start_city_code,omitempty"`
	// example:
	//
	// HGH
	EndCityCode *string `json:"end_city_code,omitempty" xml:"end_city_code,omitempty"`
	// example:
	//
	// 1
	FreePcs *int64 `json:"free_pcs,omitempty" xml:"free_pcs,omitempty"`
	// example:
	//
	// 30
	BaggageWeight *int64 `json:"baggage_weight,omitempty" xml:"baggage_weight,omitempty"`
	// example:
	//
	// KG
	BaggageUnit *string `json:"baggage_unit,omitempty" xml:"baggage_unit,omitempty"`
	// example:
	//
	// 40*50
	BaggageSize *string `json:"baggage_size,omitempty" xml:"baggage_size,omitempty"`
	// example:
	//
	// false
	AllWeight *bool `json:"all_weight,omitempty" xml:"all_weight,omitempty"`
}

func (s ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetCarryFreepc(v int32) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.CarryFreepc = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetCarryBagWeight(v int32) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.CarryBagWeight = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetCarryBagSize(v string) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.CarryBagSize = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetIsAllCarryBagWeight(v bool) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.IsAllCarryBagWeight = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetAirline(v string) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.Airline = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetStartAirport(v string) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.StartAirport = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetEndAirport(v string) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.EndAirport = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetStartCityCode(v string) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.StartCityCode = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetEndCityCode(v string) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.EndCityCode = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetFreePcs(v int64) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.FreePcs = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetBaggageWeight(v int64) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.BaggageWeight = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetBaggageUnit(v string) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.BaggageUnit = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetBaggageSize(v string) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.BaggageSize = &v
	return s
}

func (s *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) SetAllWeight(v bool) *ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue {
	s.AllWeight = &v
	return s
}

type ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue struct {
	// example:
	//
	// true
	Struct *bool `json:"struct,omitempty" xml:"struct,omitempty"`
	// example:
	//
	// true
	CancelFeeInd *bool `json:"cancel_fee_ind,omitempty" xml:"cancel_fee_ind,omitempty"`
	// example:
	//
	// true
	ChangeFeeInd *bool `json:"change_fee_ind,omitempty" xml:"change_fee_ind,omitempty"`
	// example:
	//
	// true
	UpgradeFeeInd *bool `json:"upgrade_fee_ind,omitempty" xml:"upgrade_fee_ind,omitempty"`
	// example:
	//
	// true
	ReissueInd *bool `json:"reissue_ind,omitempty" xml:"reissue_ind,omitempty"`
	// example:
	//
	// 1
	PenaltyTypeCode *int32 `json:"penalty_type_code,omitempty" xml:"penalty_type_code,omitempty"`
	// example:
	//
	// 0
	PenaltyApplyRangeCode *int32 `json:"penalty_apply_range_code,omitempty" xml:"penalty_apply_range_code,omitempty"`
	// example:
	//
	// 1
	PenaltyChargeTypeCode *int32 `json:"penalty_charge_type_code,omitempty" xml:"penalty_charge_type_code,omitempty"`
	// example:
	//
	// 300
	Fee *float64 `json:"fee,omitempty" xml:"fee,omitempty"`
	// example:
	//
	// CNY
	Currency *string `json:"currency,omitempty" xml:"currency,omitempty"`
	// example:
	//
	// 30
	PenaltyPercent *float64 `json:"penalty_percent,omitempty" xml:"penalty_percent,omitempty"`
	// example:
	//
	// 48
	StartTime *int32 `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// 0
	EndTime *int32 `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 0
	TimeUnitCode *int32 `json:"time_unit_code,omitempty" xml:"time_unit_code,omitempty"`
}

func (s ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetStruct(v bool) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.Struct = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetCancelFeeInd(v bool) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.CancelFeeInd = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetChangeFeeInd(v bool) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.ChangeFeeInd = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetUpgradeFeeInd(v bool) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.UpgradeFeeInd = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetReissueInd(v bool) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.ReissueInd = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyTypeCode(v int32) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyTypeCode = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyApplyRangeCode(v int32) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyApplyRangeCode = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyChargeTypeCode(v int32) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyChargeTypeCode = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetFee(v float64) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.Fee = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetCurrency(v string) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.Currency = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyPercent(v float64) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyPercent = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetStartTime(v int32) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.StartTime = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetEndTime(v int32) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.EndTime = &v
	return s
}

func (s *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetTimeUnitCode(v int32) *ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.TimeUnitCode = &v
	return s
}

type ModuleGroupItemSubItemsShoppingItemMapValue struct {
	SearchPrice *ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice `json:"search_price,omitempty" xml:"search_price,omitempty" type:"Struct"`
}

func (s ModuleGroupItemSubItemsShoppingItemMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemSubItemsShoppingItemMapValue) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemSubItemsShoppingItemMapValue) SetSearchPrice(v *ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice) *ModuleGroupItemSubItemsShoppingItemMapValue {
	s.SearchPrice = v
	return s
}

type ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice struct {
	// example:
	//
	// 120000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 120000
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 6000
	Tax *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
}

func (s ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice) String() string {
	return tea.Prettify(s)
}

func (s ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice) GoString() string {
	return s.String()
}

func (s *ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice) SetTicketPrice(v int32) *ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice {
	s.TicketPrice = &v
	return s
}

func (s *ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice) SetSellPrice(v int32) *ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice {
	s.SellPrice = &v
	return s
}

func (s *ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice) SetTax(v int32) *ModuleGroupItemSubItemsShoppingItemMapValueSearchPrice {
	s.Tax = &v
	return s
}

type ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue struct {
	// example:
	//
	// 1
	CarryFreepc *int32 `json:"carry_freepc,omitempty" xml:"carry_freepc,omitempty"`
	// example:
	//
	// 10
	CarryBagWeight *int32 `json:"carry_bag_weight,omitempty" xml:"carry_bag_weight,omitempty"`
	// example:
	//
	// 20*20
	CarryBagSize *string `json:"carry_bag_size,omitempty" xml:"carry_bag_size,omitempty"`
	// example:
	//
	// false
	IsAllCarryBagWeight *bool `json:"is_all_carry_bag_weight,omitempty" xml:"is_all_carry_bag_weight,omitempty"`
	// example:
	//
	// CA
	Airline *string `json:"airline,omitempty" xml:"airline,omitempty"`
	// example:
	//
	// BJS
	StartAirport *string `json:"start_airport,omitempty" xml:"start_airport,omitempty"`
	// example:
	//
	// HGH
	EndAirport *string `json:"end_airport,omitempty" xml:"end_airport,omitempty"`
	// example:
	//
	// BJS
	StartCityCode *string `json:"start_city_code,omitempty" xml:"start_city_code,omitempty"`
	// example:
	//
	// HGH
	EndCityCode *string `json:"end_city_code,omitempty" xml:"end_city_code,omitempty"`
	// example:
	//
	// 1
	FreePcs *int64 `json:"free_pcs,omitempty" xml:"free_pcs,omitempty"`
	// example:
	//
	// 30
	BaggageWeight *int64 `json:"baggage_weight,omitempty" xml:"baggage_weight,omitempty"`
	// example:
	//
	// KG
	BaggageUnit *string `json:"baggage_unit,omitempty" xml:"baggage_unit,omitempty"`
	// example:
	//
	// 40*50
	BaggageSize *string `json:"baggage_size,omitempty" xml:"baggage_size,omitempty"`
	// example:
	//
	// false
	AllWeight *bool `json:"all_weight,omitempty" xml:"all_weight,omitempty"`
}

func (s ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) GoString() string {
	return s.String()
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetCarryFreepc(v int32) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.CarryFreepc = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetCarryBagWeight(v int32) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.CarryBagWeight = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetCarryBagSize(v string) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.CarryBagSize = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetIsAllCarryBagWeight(v bool) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.IsAllCarryBagWeight = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetAirline(v string) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.Airline = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetStartAirport(v string) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.StartAirport = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetEndAirport(v string) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.EndAirport = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetStartCityCode(v string) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.StartCityCode = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetEndCityCode(v string) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.EndCityCode = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetFreePcs(v int64) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.FreePcs = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetBaggageWeight(v int64) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.BaggageWeight = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetBaggageUnit(v string) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.BaggageUnit = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetBaggageSize(v string) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.BaggageSize = &v
	return s
}

func (s *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) SetAllWeight(v bool) *ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue {
	s.AllWeight = &v
	return s
}

type ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue struct {
	// example:
	//
	// true
	Struct *bool `json:"struct,omitempty" xml:"struct,omitempty"`
	// example:
	//
	// true
	CancelFeeInd *bool `json:"cancel_fee_ind,omitempty" xml:"cancel_fee_ind,omitempty"`
	// example:
	//
	// true
	ChangeFeeInd *bool `json:"change_fee_ind,omitempty" xml:"change_fee_ind,omitempty"`
	// example:
	//
	// true
	UpgradeFeeInd *bool `json:"upgrade_fee_ind,omitempty" xml:"upgrade_fee_ind,omitempty"`
	// example:
	//
	// false
	ReissueInd *bool `json:"reissue_ind,omitempty" xml:"reissue_ind,omitempty"`
	// example:
	//
	// 0
	PenaltyTypeCode *int32 `json:"penalty_type_code,omitempty" xml:"penalty_type_code,omitempty"`
	// example:
	//
	// 1
	PenaltyApplyRangeCode *int32 `json:"penalty_apply_range_code,omitempty" xml:"penalty_apply_range_code,omitempty"`
	// example:
	//
	// 0
	PenaltyChargeTypeCode *int32 `json:"penalty_charge_type_code,omitempty" xml:"penalty_charge_type_code,omitempty"`
	// example:
	//
	// 300
	Fee *float64 `json:"fee,omitempty" xml:"fee,omitempty"`
	// example:
	//
	// CNY
	Currency *string `json:"currency,omitempty" xml:"currency,omitempty"`
	// example:
	//
	// 30
	PenaltyPercent *float64 `json:"penalty_percent,omitempty" xml:"penalty_percent,omitempty"`
	// example:
	//
	// 48
	StartTime *int32 `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// 0
	EndTime *int32 `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 0
	TimeUnitCode *int32 `json:"time_unit_code,omitempty" xml:"time_unit_code,omitempty"`
}

func (s ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) GoString() string {
	return s.String()
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetStruct(v bool) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.Struct = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetCancelFeeInd(v bool) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.CancelFeeInd = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetChangeFeeInd(v bool) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.ChangeFeeInd = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetUpgradeFeeInd(v bool) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.UpgradeFeeInd = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetReissueInd(v bool) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.ReissueInd = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyTypeCode(v int32) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyTypeCode = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyApplyRangeCode(v int32) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyApplyRangeCode = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyChargeTypeCode(v int32) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyChargeTypeCode = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetFee(v float64) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.Fee = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetCurrency(v string) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.Currency = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetPenaltyPercent(v float64) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.PenaltyPercent = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetStartTime(v int32) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.StartTime = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetEndTime(v int32) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.EndTime = &v
	return s
}

func (s *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) SetTimeUnitCode(v int32) *ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue {
	s.TimeUnitCode = &v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue struct {
	// example:
	//
	// R
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	CabinClassMemo *string `json:"cabin_class_memo,omitempty" xml:"cabin_class_memo,omitempty"`
	Specification  *string `json:"specification,omitempty" xml:"specification,omitempty"`
	// example:
	//
	// A
	Quantity   *string   `json:"quantity,omitempty" xml:"quantity,omitempty"`
	LinkCabins []*string `json:"link_cabins,omitempty" xml:"link_cabins,omitempty" type:"Repeated"`
	// example:
	//
	// false
	ReshopChangeCabin *bool   `json:"reshop_change_cabin,omitempty" xml:"reshop_change_cabin,omitempty"`
	ChildCabinType    *int32  `json:"child_cabin_type,omitempty" xml:"child_cabin_type,omitempty"`
	InfantBasicCabin  *string `json:"infant_basic_cabin,omitempty" xml:"infant_basic_cabin,omitempty"`
	// example:
	//
	// 2
	InnerCabinClass *int32 `json:"inner_cabin_class,omitempty" xml:"inner_cabin_class,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetCabin(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.Cabin = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetCabinClass(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.CabinClass = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetCabinClassName(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.CabinClassName = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetCabinClassMemo(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.CabinClassMemo = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetSpecification(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.Specification = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetQuantity(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.Quantity = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetLinkCabins(v []*string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.LinkCabins = v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetReshopChangeCabin(v bool) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.ReshopChangeCabin = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetChildCabinType(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.ChildCabinType = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetInfantBasicCabin(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.InfantBasicCabin = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue) SetInnerCabinClass(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueCabinQuantityValue {
	s.InnerCabinClass = &v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice              *int32                                                                               `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice               *int32                                                                               `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice             *int32                                                                               `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice         *int32                                                                               `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum                *int32                                                                               `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice              *float64                                                                             `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice       *int32                                                                               `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice     *int32                                                                               `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	MinBeforeControlPriceOfNormal *int32                                                                               `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetFloorPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.FloorPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetTicketPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.TicketPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetSellPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.SellPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetOriginalSellPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetBaseTotalPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetBeforeControlPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetTax(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.Tax = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetSupplyPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetBasicCabinPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetBuildPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.BuildPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetOilPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.OilPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetFirstStandardPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetBusinessStandardPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetCommonStandardPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetInterTicketPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetSubtractedPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetOriginCommonPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetDynamicPromotionPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetInstallmentNum(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetInstallmentPrice(v float64) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetCompetitionDynamicPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetCompetitionPromotionPrice(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetMinBeforeControlPriceOfNormal(v int32) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue) SetPriceShowInfo(v *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValue {
	s.PriceShowInfo = v
	return s
}

type ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountInfo(v string) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountNum(v float64) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetShowTicketPrice(v bool) *ModuleFlightItemListBestPriceItemShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue struct {
	// example:
	//
	// R
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	CabinClassMemo *string `json:"cabin_class_memo,omitempty" xml:"cabin_class_memo,omitempty"`
	Specification  *string `json:"specification,omitempty" xml:"specification,omitempty"`
	// example:
	//
	// A
	Quantity   *string   `json:"quantity,omitempty" xml:"quantity,omitempty"`
	LinkCabins []*string `json:"link_cabins,omitempty" xml:"link_cabins,omitempty" type:"Repeated"`
	// example:
	//
	// false
	ReshopChangeCabin *bool   `json:"reshop_change_cabin,omitempty" xml:"reshop_change_cabin,omitempty"`
	ChildCabinType    *int32  `json:"child_cabin_type,omitempty" xml:"child_cabin_type,omitempty"`
	InfantBasicCabin  *string `json:"infant_basic_cabin,omitempty" xml:"infant_basic_cabin,omitempty"`
	// example:
	//
	// 2
	InnerCabinClass *int32 `json:"inner_cabin_class,omitempty" xml:"inner_cabin_class,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetCabin(v string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.Cabin = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetCabinClass(v string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.CabinClass = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetCabinClassName(v string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.CabinClassName = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetCabinClassMemo(v string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.CabinClassMemo = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetSpecification(v string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.Specification = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetQuantity(v string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.Quantity = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetLinkCabins(v []*string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.LinkCabins = v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetReshopChangeCabin(v bool) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.ReshopChangeCabin = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetChildCabinType(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.ChildCabinType = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetInfantBasicCabin(v string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.InfantBasicCabin = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue) SetInnerCabinClass(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueCabinQuantityValue {
	s.InnerCabinClass = &v
	return s
}

type ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice              *int32                                                                                       `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice               *int32                                                                                       `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice             *int32                                                                                       `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice         *int32                                                                                       `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum                *int32                                                                                       `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice              *float64                                                                                     `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice       *int32                                                                                       `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice     *int32                                                                                       `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	MinBeforeControlPriceOfNormal *int32                                                                                       `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetFloorPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.FloorPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetTicketPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.TicketPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetSellPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.SellPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetOriginalSellPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetBaseTotalPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetBeforeControlPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetTax(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.Tax = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetSupplyPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetBasicCabinPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetBuildPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BuildPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetOilPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.OilPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetFirstStandardPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetBusinessStandardPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetCommonStandardPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetInterTicketPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetSubtractedPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetOriginCommonPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetDynamicPromotionPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetInstallmentNum(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetInstallmentPrice(v float64) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetCompetitionDynamicPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetCompetitionPromotionPrice(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetMinBeforeControlPriceOfNormal(v int32) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue) SetPriceShowInfo(v *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValue {
	s.PriceShowInfo = v
	return s
}

type ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountInfo(v string) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountNum(v float64) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetShowTicketPrice(v bool) *ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue struct {
	// example:
	//
	// R
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	CabinClassMemo *string `json:"cabin_class_memo,omitempty" xml:"cabin_class_memo,omitempty"`
	Specification  *string `json:"specification,omitempty" xml:"specification,omitempty"`
	// example:
	//
	// A
	Quantity   *string   `json:"quantity,omitempty" xml:"quantity,omitempty"`
	LinkCabins []*string `json:"link_cabins,omitempty" xml:"link_cabins,omitempty" type:"Repeated"`
	// example:
	//
	// false
	ReshopChangeCabin *bool   `json:"reshop_change_cabin,omitempty" xml:"reshop_change_cabin,omitempty"`
	ChildCabinType    *int32  `json:"child_cabin_type,omitempty" xml:"child_cabin_type,omitempty"`
	InfantBasicCabin  *string `json:"infant_basic_cabin,omitempty" xml:"infant_basic_cabin,omitempty"`
	// example:
	//
	// 2
	InnerCabinClass *int32 `json:"inner_cabin_class,omitempty" xml:"inner_cabin_class,omitempty"`
}

func (s ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetCabin(v string) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.Cabin = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetCabinClass(v string) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.CabinClass = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetCabinClassName(v string) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.CabinClassName = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetCabinClassMemo(v string) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.CabinClassMemo = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetSpecification(v string) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.Specification = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetQuantity(v string) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.Quantity = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetLinkCabins(v []*string) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.LinkCabins = v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetReshopChangeCabin(v bool) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.ReshopChangeCabin = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetChildCabinType(v int32) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.ChildCabinType = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetInfantBasicCabin(v string) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.InfantBasicCabin = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue) SetInnerCabinClass(v int32) *ModuleFlightItemListItemListShoppingItemMapValueCabinQuantityValue {
	s.InnerCabinClass = &v
	return s
}

type ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice              *int32                                                                          `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice               *int32                                                                          `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice             *int32                                                                          `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice         *int32                                                                          `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum                *int32                                                                          `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice              *float64                                                                        `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice       *int32                                                                          `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice     *int32                                                                          `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	MinBeforeControlPriceOfNormal *int32                                                                          `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetFloorPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.FloorPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetTicketPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.TicketPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetSellPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.SellPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetOriginalSellPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetBaseTotalPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetBeforeControlPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetTax(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.Tax = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetSupplyPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetBasicCabinPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetBuildPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.BuildPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetOilPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.OilPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetFirstStandardPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetBusinessStandardPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetCommonStandardPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetInterTicketPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetSubtractedPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetOriginCommonPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetDynamicPromotionPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetInstallmentNum(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetInstallmentPrice(v float64) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetCompetitionDynamicPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetCompetitionPromotionPrice(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetMinBeforeControlPriceOfNormal(v int32) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue) SetPriceShowInfo(v *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValue {
	s.PriceShowInfo = v
	return s
}

type ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountInfo(v string) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountNum(v float64) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetShowTicketPrice(v bool) *ModuleFlightItemListItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue struct {
	// example:
	//
	// R
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	CabinClassMemo *string `json:"cabin_class_memo,omitempty" xml:"cabin_class_memo,omitempty"`
	Specification  *string `json:"specification,omitempty" xml:"specification,omitempty"`
	// example:
	//
	// A
	Quantity   *string   `json:"quantity,omitempty" xml:"quantity,omitempty"`
	LinkCabins []*string `json:"link_cabins,omitempty" xml:"link_cabins,omitempty" type:"Repeated"`
	// example:
	//
	// false
	ReshopChangeCabin *bool   `json:"reshop_change_cabin,omitempty" xml:"reshop_change_cabin,omitempty"`
	ChildCabinType    *int32  `json:"child_cabin_type,omitempty" xml:"child_cabin_type,omitempty"`
	InfantBasicCabin  *string `json:"infant_basic_cabin,omitempty" xml:"infant_basic_cabin,omitempty"`
	// example:
	//
	// 2
	InnerCabinClass *int32 `json:"inner_cabin_class,omitempty" xml:"inner_cabin_class,omitempty"`
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetCabin(v string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.Cabin = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetCabinClass(v string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.CabinClass = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetCabinClassName(v string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.CabinClassName = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetCabinClassMemo(v string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.CabinClassMemo = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetSpecification(v string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.Specification = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetQuantity(v string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.Quantity = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetLinkCabins(v []*string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.LinkCabins = v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetReshopChangeCabin(v bool) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.ReshopChangeCabin = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetChildCabinType(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.ChildCabinType = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetInfantBasicCabin(v string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.InfantBasicCabin = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetInnerCabinClass(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.InnerCabinClass = &v
	return s
}

type ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice              *int32                                                                                  `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice               *int32                                                                                  `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice             *int32                                                                                  `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice         *int32                                                                                  `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum                *int32                                                                                  `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice              *float64                                                                                `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice       *int32                                                                                  `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice     *int32                                                                                  `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	MinBeforeControlPriceOfNormal *int32                                                                                  `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetFloorPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.FloorPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetTicketPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.TicketPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetSellPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.SellPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetOriginalSellPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetBaseTotalPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetBeforeControlPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetTax(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.Tax = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetSupplyPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetBasicCabinPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetBuildPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BuildPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetOilPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.OilPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetFirstStandardPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetBusinessStandardPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetCommonStandardPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetInterTicketPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetSubtractedPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetOriginCommonPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetDynamicPromotionPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetInstallmentNum(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetInstallmentPrice(v float64) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetCompetitionDynamicPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetCompetitionPromotionPrice(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetMinBeforeControlPriceOfNormal(v int32) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetPriceShowInfo(v *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.PriceShowInfo = v
	return s
}

type ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountInfo(v string) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountNum(v float64) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetShowTicketPrice(v bool) *ModuleFlightItemListItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleItemListShoppingItemMapValueCabinQuantityValue struct {
	// example:
	//
	// R
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	CabinClassMemo *string `json:"cabin_class_memo,omitempty" xml:"cabin_class_memo,omitempty"`
	Specification  *string `json:"specification,omitempty" xml:"specification,omitempty"`
	// example:
	//
	// A
	Quantity   *string   `json:"quantity,omitempty" xml:"quantity,omitempty"`
	LinkCabins []*string `json:"link_cabins,omitempty" xml:"link_cabins,omitempty" type:"Repeated"`
	// example:
	//
	// false
	ReshopChangeCabin *bool   `json:"reshop_change_cabin,omitempty" xml:"reshop_change_cabin,omitempty"`
	ChildCabinType    *int32  `json:"child_cabin_type,omitempty" xml:"child_cabin_type,omitempty"`
	InfantBasicCabin  *string `json:"infant_basic_cabin,omitempty" xml:"infant_basic_cabin,omitempty"`
	// example:
	//
	// 2
	InnerCabinClass *int32 `json:"inner_cabin_class,omitempty" xml:"inner_cabin_class,omitempty"`
}

func (s ModuleItemListShoppingItemMapValueCabinQuantityValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueCabinQuantityValue) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetCabin(v string) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.Cabin = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetCabinClass(v string) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.CabinClass = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetCabinClassName(v string) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.CabinClassName = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetCabinClassMemo(v string) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.CabinClassMemo = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetSpecification(v string) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.Specification = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetQuantity(v string) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.Quantity = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetLinkCabins(v []*string) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.LinkCabins = v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetReshopChangeCabin(v bool) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.ReshopChangeCabin = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetChildCabinType(v int32) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.ChildCabinType = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetInfantBasicCabin(v string) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.InfantBasicCabin = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueCabinQuantityValue) SetInnerCabinClass(v int32) *ModuleItemListShoppingItemMapValueCabinQuantityValue {
	s.InnerCabinClass = &v
	return s
}

type ModuleItemListShoppingItemMapValueSegmentPriceValue struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice              *int32                                                            `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice               *int32                                                            `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice             *int32                                                            `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice         *int32                                                            `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum                *int32                                                            `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice              *float64                                                          `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice       *int32                                                            `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice     *int32                                                            `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	MinBeforeControlPriceOfNormal *int32                                                            `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleItemListShoppingItemMapValueSegmentPriceValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueSegmentPriceValue) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetFloorPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.FloorPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetTicketPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.TicketPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetSellPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.SellPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetOriginalSellPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetBaseTotalPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetBeforeControlPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetTax(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.Tax = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetSupplyPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetBasicCabinPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetBuildPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.BuildPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetOilPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.OilPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetFirstStandardPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetBusinessStandardPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetCommonStandardPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetInterTicketPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetSubtractedPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetOriginCommonPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetDynamicPromotionPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetInstallmentNum(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetInstallmentPrice(v float64) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetCompetitionDynamicPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetCompetitionPromotionPrice(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetMinBeforeControlPriceOfNormal(v int32) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValue) SetPriceShowInfo(v *ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) *ModuleItemListShoppingItemMapValueSegmentPriceValue {
	s.PriceShowInfo = v
	return s
}

type ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountInfo(v string) *ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountNum(v float64) *ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetShowTicketPrice(v bool) *ModuleItemListShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue struct {
	// example:
	//
	// R
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	CabinClassMemo *string `json:"cabin_class_memo,omitempty" xml:"cabin_class_memo,omitempty"`
	Specification  *string `json:"specification,omitempty" xml:"specification,omitempty"`
	// example:
	//
	// A
	Quantity   *string   `json:"quantity,omitempty" xml:"quantity,omitempty"`
	LinkCabins []*string `json:"link_cabins,omitempty" xml:"link_cabins,omitempty" type:"Repeated"`
	// example:
	//
	// false
	ReshopChangeCabin *bool   `json:"reshop_change_cabin,omitempty" xml:"reshop_change_cabin,omitempty"`
	ChildCabinType    *int32  `json:"child_cabin_type,omitempty" xml:"child_cabin_type,omitempty"`
	InfantBasicCabin  *string `json:"infant_basic_cabin,omitempty" xml:"infant_basic_cabin,omitempty"`
	// example:
	//
	// 2
	InnerCabinClass *int32 `json:"inner_cabin_class,omitempty" xml:"inner_cabin_class,omitempty"`
}

func (s ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) GoString() string {
	return s.String()
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetCabin(v string) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.Cabin = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetCabinClass(v string) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.CabinClass = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetCabinClassName(v string) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.CabinClassName = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetCabinClassMemo(v string) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.CabinClassMemo = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetSpecification(v string) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.Specification = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetQuantity(v string) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.Quantity = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetLinkCabins(v []*string) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.LinkCabins = v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetReshopChangeCabin(v bool) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.ReshopChangeCabin = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetChildCabinType(v int32) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.ChildCabinType = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetInfantBasicCabin(v string) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.InfantBasicCabin = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue) SetInnerCabinClass(v int32) *ModuleItemListSubItemsShoppingItemMapValueCabinQuantityValue {
	s.InnerCabinClass = &v
	return s
}

type ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue struct {
	// example:
	//
	// 17400
	FloorPrice *int32 `json:"floor_price,omitempty" xml:"floor_price,omitempty"`
	// example:
	//
	// 121000
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 17400
	SellPrice *int32 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 17400
	OriginalSellPrice *int32 `json:"original_sell_price,omitempty" xml:"original_sell_price,omitempty"`
	BaseTotalPrice    *int32 `json:"base_total_price,omitempty" xml:"base_total_price,omitempty"`
	// example:
	//
	// 17400
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 11000
	Tax         *int32 `json:"tax,omitempty" xml:"tax,omitempty"`
	SupplyPrice *int32 `json:"supply_price,omitempty" xml:"supply_price,omitempty"`
	// example:
	//
	// 242000
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 5000
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 6000
	OilPrice              *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	FirstStandardPrice    *int32 `json:"first_standard_price,omitempty" xml:"first_standard_price,omitempty"`
	BusinessStandardPrice *int32 `json:"business_standard_price,omitempty" xml:"business_standard_price,omitempty"`
	// example:
	//
	// 242000
	CommonStandardPrice *int32 `json:"common_standard_price,omitempty" xml:"common_standard_price,omitempty"`
	// fdPrice
	//
	// example:
	//
	// fdPrice
	InterTicketPrice              *int32                                                                    `json:"inter_ticket_price,omitempty" xml:"inter_ticket_price,omitempty"`
	SubtractedPrice               *int32                                                                    `json:"subtracted_price,omitempty" xml:"subtracted_price,omitempty"`
	OriginCommonPrice             *int32                                                                    `json:"origin_common_price,omitempty" xml:"origin_common_price,omitempty"`
	DynamicPromotionPrice         *int32                                                                    `json:"dynamic_promotion_price,omitempty" xml:"dynamic_promotion_price,omitempty"`
	InstallmentNum                *int32                                                                    `json:"installment_num,omitempty" xml:"installment_num,omitempty"`
	InstallmentPrice              *float64                                                                  `json:"installment_price,omitempty" xml:"installment_price,omitempty"`
	CompetitionDynamicPrice       *int32                                                                    `json:"competition_dynamic_price,omitempty" xml:"competition_dynamic_price,omitempty"`
	CompetitionPromotionPrice     *int32                                                                    `json:"competition_promotion_price,omitempty" xml:"competition_promotion_price,omitempty"`
	MinBeforeControlPriceOfNormal *int32                                                                    `json:"min_before_control_price_of_normal,omitempty" xml:"min_before_control_price_of_normal,omitempty"`
	PriceShowInfo                 *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo `json:"price_show_info,omitempty" xml:"price_show_info,omitempty" type:"Struct"`
}

func (s ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) GoString() string {
	return s.String()
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetFloorPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.FloorPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetTicketPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.TicketPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetSellPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.SellPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetOriginalSellPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.OriginalSellPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetBaseTotalPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BaseTotalPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetBeforeControlPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BeforeControlPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetTax(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.Tax = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetSupplyPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.SupplyPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetBasicCabinPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BasicCabinPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetBuildPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BuildPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetOilPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.OilPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetFirstStandardPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.FirstStandardPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetBusinessStandardPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.BusinessStandardPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetCommonStandardPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.CommonStandardPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetInterTicketPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.InterTicketPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetSubtractedPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.SubtractedPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetOriginCommonPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.OriginCommonPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetDynamicPromotionPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.DynamicPromotionPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetInstallmentNum(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.InstallmentNum = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetInstallmentPrice(v float64) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.InstallmentPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetCompetitionDynamicPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.CompetitionDynamicPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetCompetitionPromotionPrice(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.CompetitionPromotionPrice = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetMinBeforeControlPriceOfNormal(v int32) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.MinBeforeControlPriceOfNormal = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue) SetPriceShowInfo(v *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValue {
	s.PriceShowInfo = v
	return s
}

type ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo struct {
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0.8
	DiscountNum *float64 `json:"discount_num,omitempty" xml:"discount_num,omitempty"`
	// example:
	//
	// false
	ShowTicketPrice *bool `json:"show_ticket_price,omitempty" xml:"show_ticket_price,omitempty"`
}

func (s ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) String() string {
	return tea.Prettify(s)
}

func (s ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) GoString() string {
	return s.String()
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountInfo(v string) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountInfo = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetDiscountNum(v float64) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.DiscountNum = &v
	return s
}

func (s *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo) SetShowTicketPrice(v bool) *ModuleItemListSubItemsShoppingItemMapValueSegmentPriceValuePriceShowInfo {
	s.ShowTicketPrice = &v
	return s
}

type AccessTokenRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// ggZADkghsadgogeDxdaD
	AppSecret *string `json:"app_secret,omitempty" xml:"app_secret,omitempty"`
}

func (s AccessTokenRequest) String() string {
	return tea.Prettify(s)
}

func (s AccessTokenRequest) GoString() string {
	return s.String()
}

func (s *AccessTokenRequest) SetAppSecret(v string) *AccessTokenRequest {
	s.AppSecret = &v
	return s
}

type AccessTokenResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                        `json:"code,omitempty" xml:"code,omitempty"`
	Data    *AccessTokenResponseBodyData   `json:"data,omitempty" xml:"data,omitempty" type:"Struct"`
	Message *string                        `json:"message,omitempty" xml:"message,omitempty"`
	Module  *AccessTokenResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// 成功标识
	//
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s AccessTokenResponseBody) String() string {
	return tea.Prettify(s)
}

func (s AccessTokenResponseBody) GoString() string {
	return s.String()
}

func (s *AccessTokenResponseBody) SetCode(v string) *AccessTokenResponseBody {
	s.Code = &v
	return s
}

func (s *AccessTokenResponseBody) SetData(v *AccessTokenResponseBodyData) *AccessTokenResponseBody {
	s.Data = v
	return s
}

func (s *AccessTokenResponseBody) SetMessage(v string) *AccessTokenResponseBody {
	s.Message = &v
	return s
}

func (s *AccessTokenResponseBody) SetModule(v *AccessTokenResponseBodyModule) *AccessTokenResponseBody {
	s.Module = v
	return s
}

func (s *AccessTokenResponseBody) SetRequestId(v string) *AccessTokenResponseBody {
	s.RequestId = &v
	return s
}

func (s *AccessTokenResponseBody) SetSuccess(v bool) *AccessTokenResponseBody {
	s.Success = &v
	return s
}

func (s *AccessTokenResponseBody) SetTraceId(v string) *AccessTokenResponseBody {
	s.TraceId = &v
	return s
}

type AccessTokenResponseBodyData struct {
	// example:
	//
	// 70000
	Expire *int64 `json:"expire,omitempty" xml:"expire,omitempty"`
	// example:
	//
	// 37j76df
	Token *string `json:"token,omitempty" xml:"token,omitempty"`
}

func (s AccessTokenResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s AccessTokenResponseBodyData) GoString() string {
	return s.String()
}

func (s *AccessTokenResponseBodyData) SetExpire(v int64) *AccessTokenResponseBodyData {
	s.Expire = &v
	return s
}

func (s *AccessTokenResponseBodyData) SetToken(v string) *AccessTokenResponseBodyData {
	s.Token = &v
	return s
}

type AccessTokenResponseBodyModule struct {
	// example:
	//
	// 70000
	Expire *int64 `json:"expire,omitempty" xml:"expire,omitempty"`
	// example:
	//
	// 1652410740914
	Start *int64 `json:"start,omitempty" xml:"start,omitempty"`
	// example:
	//
	// 37j76df
	Token *string `json:"token,omitempty" xml:"token,omitempty"`
}

func (s AccessTokenResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s AccessTokenResponseBodyModule) GoString() string {
	return s.String()
}

func (s *AccessTokenResponseBodyModule) SetExpire(v int64) *AccessTokenResponseBodyModule {
	s.Expire = &v
	return s
}

func (s *AccessTokenResponseBodyModule) SetStart(v int64) *AccessTokenResponseBodyModule {
	s.Start = &v
	return s
}

func (s *AccessTokenResponseBodyModule) SetToken(v string) *AccessTokenResponseBodyModule {
	s.Token = &v
	return s
}

type AccessTokenResponse struct {
	Headers    map[string]*string       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *AccessTokenResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s AccessTokenResponse) String() string {
	return tea.Prettify(s)
}

func (s AccessTokenResponse) GoString() string {
	return s.String()
}

func (s *AccessTokenResponse) SetHeaders(v map[string]*string) *AccessTokenResponse {
	s.Headers = v
	return s
}

func (s *AccessTokenResponse) SetStatusCode(v int32) *AccessTokenResponse {
	s.StatusCode = &v
	return s
}

func (s *AccessTokenResponse) SetBody(v *AccessTokenResponseBody) *AccessTokenResponse {
	s.Body = v
	return s
}

type AddDepartmentHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s AddDepartmentHeaders) String() string {
	return tea.Prettify(s)
}

func (s AddDepartmentHeaders) GoString() string {
	return s.String()
}

func (s *AddDepartmentHeaders) SetCommonHeaders(v map[string]*string) *AddDepartmentHeaders {
	s.CommonHeaders = v
	return s
}

func (s *AddDepartmentHeaders) SetXAcsBtripCorpToken(v string) *AddDepartmentHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type AddDepartmentRequest struct {
	// This parameter is required.
	DeptName              *string   `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	ManagerEmployeeIdList []*string `json:"manager_employee_id_list,omitempty" xml:"manager_employee_id_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// dept123
	OutDeptId *string `json:"out_dept_id,omitempty" xml:"out_dept_id,omitempty"`
	// example:
	//
	// dept456
	OutDeptPid *string `json:"out_dept_pid,omitempty" xml:"out_dept_pid,omitempty"`
}

func (s AddDepartmentRequest) String() string {
	return tea.Prettify(s)
}

func (s AddDepartmentRequest) GoString() string {
	return s.String()
}

func (s *AddDepartmentRequest) SetDeptName(v string) *AddDepartmentRequest {
	s.DeptName = &v
	return s
}

func (s *AddDepartmentRequest) SetManagerEmployeeIdList(v []*string) *AddDepartmentRequest {
	s.ManagerEmployeeIdList = v
	return s
}

func (s *AddDepartmentRequest) SetOutDeptId(v string) *AddDepartmentRequest {
	s.OutDeptId = &v
	return s
}

func (s *AddDepartmentRequest) SetOutDeptPid(v string) *AddDepartmentRequest {
	s.OutDeptPid = &v
	return s
}

type AddDepartmentShrinkRequest struct {
	// This parameter is required.
	DeptName                    *string `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	ManagerEmployeeIdListShrink *string `json:"manager_employee_id_list,omitempty" xml:"manager_employee_id_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dept123
	OutDeptId *string `json:"out_dept_id,omitempty" xml:"out_dept_id,omitempty"`
	// example:
	//
	// dept456
	OutDeptPid *string `json:"out_dept_pid,omitempty" xml:"out_dept_pid,omitempty"`
}

func (s AddDepartmentShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s AddDepartmentShrinkRequest) GoString() string {
	return s.String()
}

func (s *AddDepartmentShrinkRequest) SetDeptName(v string) *AddDepartmentShrinkRequest {
	s.DeptName = &v
	return s
}

func (s *AddDepartmentShrinkRequest) SetManagerEmployeeIdListShrink(v string) *AddDepartmentShrinkRequest {
	s.ManagerEmployeeIdListShrink = &v
	return s
}

func (s *AddDepartmentShrinkRequest) SetOutDeptId(v string) *AddDepartmentShrinkRequest {
	s.OutDeptId = &v
	return s
}

func (s *AddDepartmentShrinkRequest) SetOutDeptPid(v string) *AddDepartmentShrinkRequest {
	s.OutDeptPid = &v
	return s
}

type AddDepartmentResponseBody struct {
	// example:
	//
	// SUCCESS
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 200
	HttpStatusCode *int32  `json:"httpStatusCode,omitempty" xml:"httpStatusCode,omitempty"`
	Message        *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s AddDepartmentResponseBody) String() string {
	return tea.Prettify(s)
}

func (s AddDepartmentResponseBody) GoString() string {
	return s.String()
}

func (s *AddDepartmentResponseBody) SetCode(v string) *AddDepartmentResponseBody {
	s.Code = &v
	return s
}

func (s *AddDepartmentResponseBody) SetHttpStatusCode(v int32) *AddDepartmentResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *AddDepartmentResponseBody) SetMessage(v string) *AddDepartmentResponseBody {
	s.Message = &v
	return s
}

func (s *AddDepartmentResponseBody) SetRequestId(v string) *AddDepartmentResponseBody {
	s.RequestId = &v
	return s
}

func (s *AddDepartmentResponseBody) SetSuccess(v bool) *AddDepartmentResponseBody {
	s.Success = &v
	return s
}

func (s *AddDepartmentResponseBody) SetTraceId(v string) *AddDepartmentResponseBody {
	s.TraceId = &v
	return s
}

type AddDepartmentResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *AddDepartmentResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s AddDepartmentResponse) String() string {
	return tea.Prettify(s)
}

func (s AddDepartmentResponse) GoString() string {
	return s.String()
}

func (s *AddDepartmentResponse) SetHeaders(v map[string]*string) *AddDepartmentResponse {
	s.Headers = v
	return s
}

func (s *AddDepartmentResponse) SetStatusCode(v int32) *AddDepartmentResponse {
	s.StatusCode = &v
	return s
}

func (s *AddDepartmentResponse) SetBody(v *AddDepartmentResponseBody) *AddDepartmentResponse {
	s.Body = v
	return s
}

type AddEmployeeHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s AddEmployeeHeaders) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeeHeaders) GoString() string {
	return s.String()
}

func (s *AddEmployeeHeaders) SetCommonHeaders(v map[string]*string) *AddEmployeeHeaders {
	s.CommonHeaders = v
	return s
}

func (s *AddEmployeeHeaders) SetXAcsBtripCorpToken(v string) *AddEmployeeHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type AddEmployeeRequest struct {
	// example:
	//
	// https://static-legacy.dingtalk.com/media/lADPF8XMoxJeUkbNA2LNA5s_923_866.jpg
	Avatar           *string   `json:"avatar,omitempty" xml:"avatar,omitempty"`
	BaseCityCodeList []*string `json:"base_city_code_list,omitempty" xml:"base_city_code_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2000-01-02
	Birthday           *string                       `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertList           []*AddEmployeeRequestCertList `json:"cert_list,omitempty" xml:"cert_list,omitempty" type:"Repeated"`
	CustomRoleCodeList []*string                     `json:"custom_role_code_list,omitempty" xml:"custom_role_code_list,omitempty" type:"Repeated"`
	// example:
	//
	// 123@163.com
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// F
	Gender *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// false
	IsAdmin *bool `json:"is_admin,omitempty" xml:"is_admin,omitempty"`
	// example:
	//
	// false
	IsBoss *bool `json:"is_boss,omitempty" xml:"is_boss,omitempty"`
	// example:
	//
	// false
	IsDeptLeader *bool `json:"is_dept_leader,omitempty" xml:"is_dept_leader,omitempty"`
	// example:
	//
	// 1001
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// user456
	ManagerUserId *string   `json:"manager_user_id,omitempty" xml:"manager_user_id,omitempty"`
	OutDeptIdList []*string `json:"out_dept_id_list,omitempty" xml:"out_dept_id_list,omitempty" type:"Repeated"`
	// example:
	//
	// 13111111111
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// M4
	PositionLevel *string `json:"position_level,omitempty" xml:"position_level,omitempty"`
	RealName      *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// John/Wilson
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	// example:
	//
	// union123
	UnionId *string `json:"union_id,omitempty" xml:"union_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// user123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	// This parameter is required.
	UserNick *string `json:"user_nick,omitempty" xml:"user_nick,omitempty"`
}

func (s AddEmployeeRequest) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeeRequest) GoString() string {
	return s.String()
}

func (s *AddEmployeeRequest) SetAvatar(v string) *AddEmployeeRequest {
	s.Avatar = &v
	return s
}

func (s *AddEmployeeRequest) SetBaseCityCodeList(v []*string) *AddEmployeeRequest {
	s.BaseCityCodeList = v
	return s
}

func (s *AddEmployeeRequest) SetBirthday(v string) *AddEmployeeRequest {
	s.Birthday = &v
	return s
}

func (s *AddEmployeeRequest) SetCertList(v []*AddEmployeeRequestCertList) *AddEmployeeRequest {
	s.CertList = v
	return s
}

func (s *AddEmployeeRequest) SetCustomRoleCodeList(v []*string) *AddEmployeeRequest {
	s.CustomRoleCodeList = v
	return s
}

func (s *AddEmployeeRequest) SetEmail(v string) *AddEmployeeRequest {
	s.Email = &v
	return s
}

func (s *AddEmployeeRequest) SetGender(v string) *AddEmployeeRequest {
	s.Gender = &v
	return s
}

func (s *AddEmployeeRequest) SetIsAdmin(v bool) *AddEmployeeRequest {
	s.IsAdmin = &v
	return s
}

func (s *AddEmployeeRequest) SetIsBoss(v bool) *AddEmployeeRequest {
	s.IsBoss = &v
	return s
}

func (s *AddEmployeeRequest) SetIsDeptLeader(v bool) *AddEmployeeRequest {
	s.IsDeptLeader = &v
	return s
}

func (s *AddEmployeeRequest) SetJobNo(v string) *AddEmployeeRequest {
	s.JobNo = &v
	return s
}

func (s *AddEmployeeRequest) SetManagerUserId(v string) *AddEmployeeRequest {
	s.ManagerUserId = &v
	return s
}

func (s *AddEmployeeRequest) SetOutDeptIdList(v []*string) *AddEmployeeRequest {
	s.OutDeptIdList = v
	return s
}

func (s *AddEmployeeRequest) SetPhone(v string) *AddEmployeeRequest {
	s.Phone = &v
	return s
}

func (s *AddEmployeeRequest) SetPositionLevel(v string) *AddEmployeeRequest {
	s.PositionLevel = &v
	return s
}

func (s *AddEmployeeRequest) SetRealName(v string) *AddEmployeeRequest {
	s.RealName = &v
	return s
}

func (s *AddEmployeeRequest) SetRealNameEn(v string) *AddEmployeeRequest {
	s.RealNameEn = &v
	return s
}

func (s *AddEmployeeRequest) SetUnionId(v string) *AddEmployeeRequest {
	s.UnionId = &v
	return s
}

func (s *AddEmployeeRequest) SetUserId(v string) *AddEmployeeRequest {
	s.UserId = &v
	return s
}

func (s *AddEmployeeRequest) SetUserNick(v string) *AddEmployeeRequest {
	s.UserNick = &v
	return s
}

type AddEmployeeRequestCertList struct {
	// example:
	//
	// 2000-01-02
	Birthday *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	// example:
	//
	// 2099-03-12
	CertExpiredTime *string `json:"cert_expired_time,omitempty" xml:"cert_expired_time,omitempty"`
	// example:
	//
	// CN
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// example:
	//
	// 123
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 0
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// F
	Gender *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// CN
	Nationality *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
	// example:
	//
	// 13111111111
	Phone    *string `json:"phone,omitempty" xml:"phone,omitempty"`
	RealName *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// John/Wilson
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
}

func (s AddEmployeeRequestCertList) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeeRequestCertList) GoString() string {
	return s.String()
}

func (s *AddEmployeeRequestCertList) SetBirthday(v string) *AddEmployeeRequestCertList {
	s.Birthday = &v
	return s
}

func (s *AddEmployeeRequestCertList) SetCertExpiredTime(v string) *AddEmployeeRequestCertList {
	s.CertExpiredTime = &v
	return s
}

func (s *AddEmployeeRequestCertList) SetCertNation(v string) *AddEmployeeRequestCertList {
	s.CertNation = &v
	return s
}

func (s *AddEmployeeRequestCertList) SetCertNo(v string) *AddEmployeeRequestCertList {
	s.CertNo = &v
	return s
}

func (s *AddEmployeeRequestCertList) SetCertType(v int32) *AddEmployeeRequestCertList {
	s.CertType = &v
	return s
}

func (s *AddEmployeeRequestCertList) SetGender(v string) *AddEmployeeRequestCertList {
	s.Gender = &v
	return s
}

func (s *AddEmployeeRequestCertList) SetNationality(v string) *AddEmployeeRequestCertList {
	s.Nationality = &v
	return s
}

func (s *AddEmployeeRequestCertList) SetPhone(v string) *AddEmployeeRequestCertList {
	s.Phone = &v
	return s
}

func (s *AddEmployeeRequestCertList) SetRealName(v string) *AddEmployeeRequestCertList {
	s.RealName = &v
	return s
}

func (s *AddEmployeeRequestCertList) SetRealNameEn(v string) *AddEmployeeRequestCertList {
	s.RealNameEn = &v
	return s
}

type AddEmployeeShrinkRequest struct {
	// example:
	//
	// https://static-legacy.dingtalk.com/media/lADPF8XMoxJeUkbNA2LNA5s_923_866.jpg
	Avatar                 *string `json:"avatar,omitempty" xml:"avatar,omitempty"`
	BaseCityCodeListShrink *string `json:"base_city_code_list,omitempty" xml:"base_city_code_list,omitempty"`
	// example:
	//
	// 2000-01-02
	Birthday                 *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertListShrink           *string `json:"cert_list,omitempty" xml:"cert_list,omitempty"`
	CustomRoleCodeListShrink *string `json:"custom_role_code_list,omitempty" xml:"custom_role_code_list,omitempty"`
	// example:
	//
	// 123@163.com
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// F
	Gender *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// false
	IsAdmin *bool `json:"is_admin,omitempty" xml:"is_admin,omitempty"`
	// example:
	//
	// false
	IsBoss *bool `json:"is_boss,omitempty" xml:"is_boss,omitempty"`
	// example:
	//
	// false
	IsDeptLeader *bool `json:"is_dept_leader,omitempty" xml:"is_dept_leader,omitempty"`
	// example:
	//
	// 1001
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// user456
	ManagerUserId       *string `json:"manager_user_id,omitempty" xml:"manager_user_id,omitempty"`
	OutDeptIdListShrink *string `json:"out_dept_id_list,omitempty" xml:"out_dept_id_list,omitempty"`
	// example:
	//
	// 13111111111
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// M4
	PositionLevel *string `json:"position_level,omitempty" xml:"position_level,omitempty"`
	RealName      *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// John/Wilson
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	// example:
	//
	// union123
	UnionId *string `json:"union_id,omitempty" xml:"union_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// user123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	// This parameter is required.
	UserNick *string `json:"user_nick,omitempty" xml:"user_nick,omitempty"`
}

func (s AddEmployeeShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeeShrinkRequest) GoString() string {
	return s.String()
}

func (s *AddEmployeeShrinkRequest) SetAvatar(v string) *AddEmployeeShrinkRequest {
	s.Avatar = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetBaseCityCodeListShrink(v string) *AddEmployeeShrinkRequest {
	s.BaseCityCodeListShrink = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetBirthday(v string) *AddEmployeeShrinkRequest {
	s.Birthday = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetCertListShrink(v string) *AddEmployeeShrinkRequest {
	s.CertListShrink = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetCustomRoleCodeListShrink(v string) *AddEmployeeShrinkRequest {
	s.CustomRoleCodeListShrink = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetEmail(v string) *AddEmployeeShrinkRequest {
	s.Email = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetGender(v string) *AddEmployeeShrinkRequest {
	s.Gender = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetIsAdmin(v bool) *AddEmployeeShrinkRequest {
	s.IsAdmin = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetIsBoss(v bool) *AddEmployeeShrinkRequest {
	s.IsBoss = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetIsDeptLeader(v bool) *AddEmployeeShrinkRequest {
	s.IsDeptLeader = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetJobNo(v string) *AddEmployeeShrinkRequest {
	s.JobNo = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetManagerUserId(v string) *AddEmployeeShrinkRequest {
	s.ManagerUserId = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetOutDeptIdListShrink(v string) *AddEmployeeShrinkRequest {
	s.OutDeptIdListShrink = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetPhone(v string) *AddEmployeeShrinkRequest {
	s.Phone = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetPositionLevel(v string) *AddEmployeeShrinkRequest {
	s.PositionLevel = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetRealName(v string) *AddEmployeeShrinkRequest {
	s.RealName = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetRealNameEn(v string) *AddEmployeeShrinkRequest {
	s.RealNameEn = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetUnionId(v string) *AddEmployeeShrinkRequest {
	s.UnionId = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetUserId(v string) *AddEmployeeShrinkRequest {
	s.UserId = &v
	return s
}

func (s *AddEmployeeShrinkRequest) SetUserNick(v string) *AddEmployeeShrinkRequest {
	s.UserNick = &v
	return s
}

type AddEmployeeResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s AddEmployeeResponseBody) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeeResponseBody) GoString() string {
	return s.String()
}

func (s *AddEmployeeResponseBody) SetCode(v string) *AddEmployeeResponseBody {
	s.Code = &v
	return s
}

func (s *AddEmployeeResponseBody) SetMessage(v string) *AddEmployeeResponseBody {
	s.Message = &v
	return s
}

func (s *AddEmployeeResponseBody) SetRequestId(v string) *AddEmployeeResponseBody {
	s.RequestId = &v
	return s
}

func (s *AddEmployeeResponseBody) SetSuccess(v bool) *AddEmployeeResponseBody {
	s.Success = &v
	return s
}

func (s *AddEmployeeResponseBody) SetTraceId(v string) *AddEmployeeResponseBody {
	s.TraceId = &v
	return s
}

type AddEmployeeResponse struct {
	Headers    map[string]*string       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *AddEmployeeResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s AddEmployeeResponse) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeeResponse) GoString() string {
	return s.String()
}

func (s *AddEmployeeResponse) SetHeaders(v map[string]*string) *AddEmployeeResponse {
	s.Headers = v
	return s
}

func (s *AddEmployeeResponse) SetStatusCode(v int32) *AddEmployeeResponse {
	s.StatusCode = &v
	return s
}

func (s *AddEmployeeResponse) SetBody(v *AddEmployeeResponseBody) *AddEmployeeResponse {
	s.Body = v
	return s
}

type AddEmployeesToCustomRoleHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s AddEmployeesToCustomRoleHeaders) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeesToCustomRoleHeaders) GoString() string {
	return s.String()
}

func (s *AddEmployeesToCustomRoleHeaders) SetCommonHeaders(v map[string]*string) *AddEmployeesToCustomRoleHeaders {
	s.CommonHeaders = v
	return s
}

func (s *AddEmployeesToCustomRoleHeaders) SetXAcsBtripCorpToken(v string) *AddEmployeesToCustomRoleHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type AddEmployeesToCustomRoleRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	RoleId *string `json:"role_id,omitempty" xml:"role_id,omitempty"`
	// This parameter is required.
	//
	// if can be null:
	// false
	UserIdList []*string `json:"user_id_list,omitempty" xml:"user_id_list,omitempty" type:"Repeated"`
}

func (s AddEmployeesToCustomRoleRequest) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeesToCustomRoleRequest) GoString() string {
	return s.String()
}

func (s *AddEmployeesToCustomRoleRequest) SetRoleId(v string) *AddEmployeesToCustomRoleRequest {
	s.RoleId = &v
	return s
}

func (s *AddEmployeesToCustomRoleRequest) SetUserIdList(v []*string) *AddEmployeesToCustomRoleRequest {
	s.UserIdList = v
	return s
}

type AddEmployeesToCustomRoleShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	RoleId *string `json:"role_id,omitempty" xml:"role_id,omitempty"`
	// This parameter is required.
	//
	// if can be null:
	// false
	UserIdListShrink *string `json:"user_id_list,omitempty" xml:"user_id_list,omitempty"`
}

func (s AddEmployeesToCustomRoleShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeesToCustomRoleShrinkRequest) GoString() string {
	return s.String()
}

func (s *AddEmployeesToCustomRoleShrinkRequest) SetRoleId(v string) *AddEmployeesToCustomRoleShrinkRequest {
	s.RoleId = &v
	return s
}

func (s *AddEmployeesToCustomRoleShrinkRequest) SetUserIdListShrink(v string) *AddEmployeesToCustomRoleShrinkRequest {
	s.UserIdListShrink = &v
	return s
}

type AddEmployeesToCustomRoleResponseBody struct {
	// example:
	//
	// SUCCESS
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 200
	HttpStatusCode *int32  `json:"httpStatusCode,omitempty" xml:"httpStatusCode,omitempty"`
	Message        *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s AddEmployeesToCustomRoleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeesToCustomRoleResponseBody) GoString() string {
	return s.String()
}

func (s *AddEmployeesToCustomRoleResponseBody) SetCode(v string) *AddEmployeesToCustomRoleResponseBody {
	s.Code = &v
	return s
}

func (s *AddEmployeesToCustomRoleResponseBody) SetHttpStatusCode(v int32) *AddEmployeesToCustomRoleResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *AddEmployeesToCustomRoleResponseBody) SetMessage(v string) *AddEmployeesToCustomRoleResponseBody {
	s.Message = &v
	return s
}

func (s *AddEmployeesToCustomRoleResponseBody) SetRequestId(v string) *AddEmployeesToCustomRoleResponseBody {
	s.RequestId = &v
	return s
}

func (s *AddEmployeesToCustomRoleResponseBody) SetSuccess(v bool) *AddEmployeesToCustomRoleResponseBody {
	s.Success = &v
	return s
}

func (s *AddEmployeesToCustomRoleResponseBody) SetTraceId(v string) *AddEmployeesToCustomRoleResponseBody {
	s.TraceId = &v
	return s
}

type AddEmployeesToCustomRoleResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *AddEmployeesToCustomRoleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s AddEmployeesToCustomRoleResponse) String() string {
	return tea.Prettify(s)
}

func (s AddEmployeesToCustomRoleResponse) GoString() string {
	return s.String()
}

func (s *AddEmployeesToCustomRoleResponse) SetHeaders(v map[string]*string) *AddEmployeesToCustomRoleResponse {
	s.Headers = v
	return s
}

func (s *AddEmployeesToCustomRoleResponse) SetStatusCode(v int32) *AddEmployeesToCustomRoleResponse {
	s.StatusCode = &v
	return s
}

func (s *AddEmployeesToCustomRoleResponse) SetBody(v *AddEmployeesToCustomRoleResponseBody) *AddEmployeesToCustomRoleResponse {
	s.Body = v
	return s
}

type AddInvoiceEntityHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s AddInvoiceEntityHeaders) String() string {
	return tea.Prettify(s)
}

func (s AddInvoiceEntityHeaders) GoString() string {
	return s.String()
}

func (s *AddInvoiceEntityHeaders) SetCommonHeaders(v map[string]*string) *AddInvoiceEntityHeaders {
	s.CommonHeaders = v
	return s
}

func (s *AddInvoiceEntityHeaders) SetXAcsBtripCorpToken(v string) *AddInvoiceEntityHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type AddInvoiceEntityRequest struct {
	// This parameter is required.
	Entities []*AddInvoiceEntityRequestEntities `json:"entities,omitempty" xml:"entities,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 4854821
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s AddInvoiceEntityRequest) String() string {
	return tea.Prettify(s)
}

func (s AddInvoiceEntityRequest) GoString() string {
	return s.String()
}

func (s *AddInvoiceEntityRequest) SetEntities(v []*AddInvoiceEntityRequestEntities) *AddInvoiceEntityRequest {
	s.Entities = v
	return s
}

func (s *AddInvoiceEntityRequest) SetThirdPartId(v string) *AddInvoiceEntityRequest {
	s.ThirdPartId = &v
	return s
}

type AddInvoiceEntityRequestEntities struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	EntityId *string `json:"entity_id,omitempty" xml:"entity_id,omitempty"`
	// This parameter is required.
	EntityName *string `json:"entity_name,omitempty" xml:"entity_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	EntityType *string `json:"entity_type,omitempty" xml:"entity_type,omitempty"`
}

func (s AddInvoiceEntityRequestEntities) String() string {
	return tea.Prettify(s)
}

func (s AddInvoiceEntityRequestEntities) GoString() string {
	return s.String()
}

func (s *AddInvoiceEntityRequestEntities) SetEntityId(v string) *AddInvoiceEntityRequestEntities {
	s.EntityId = &v
	return s
}

func (s *AddInvoiceEntityRequestEntities) SetEntityName(v string) *AddInvoiceEntityRequestEntities {
	s.EntityName = &v
	return s
}

func (s *AddInvoiceEntityRequestEntities) SetEntityType(v string) *AddInvoiceEntityRequestEntities {
	s.EntityType = &v
	return s
}

type AddInvoiceEntityShrinkRequest struct {
	// This parameter is required.
	EntitiesShrink *string `json:"entities,omitempty" xml:"entities,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 4854821
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s AddInvoiceEntityShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s AddInvoiceEntityShrinkRequest) GoString() string {
	return s.String()
}

func (s *AddInvoiceEntityShrinkRequest) SetEntitiesShrink(v string) *AddInvoiceEntityShrinkRequest {
	s.EntitiesShrink = &v
	return s
}

func (s *AddInvoiceEntityShrinkRequest) SetThirdPartId(v string) *AddInvoiceEntityShrinkRequest {
	s.ThirdPartId = &v
	return s
}

type AddInvoiceEntityResponseBody struct {
	// example:
	//
	// 200
	Code    *string                             `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                             `json:"message,omitempty" xml:"message,omitempty"`
	Module  *AddInvoiceEntityResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s AddInvoiceEntityResponseBody) String() string {
	return tea.Prettify(s)
}

func (s AddInvoiceEntityResponseBody) GoString() string {
	return s.String()
}

func (s *AddInvoiceEntityResponseBody) SetCode(v string) *AddInvoiceEntityResponseBody {
	s.Code = &v
	return s
}

func (s *AddInvoiceEntityResponseBody) SetMessage(v string) *AddInvoiceEntityResponseBody {
	s.Message = &v
	return s
}

func (s *AddInvoiceEntityResponseBody) SetModule(v *AddInvoiceEntityResponseBodyModule) *AddInvoiceEntityResponseBody {
	s.Module = v
	return s
}

func (s *AddInvoiceEntityResponseBody) SetRequestId(v string) *AddInvoiceEntityResponseBody {
	s.RequestId = &v
	return s
}

func (s *AddInvoiceEntityResponseBody) SetSuccess(v bool) *AddInvoiceEntityResponseBody {
	s.Success = &v
	return s
}

func (s *AddInvoiceEntityResponseBody) SetTraceId(v string) *AddInvoiceEntityResponseBody {
	s.TraceId = &v
	return s
}

type AddInvoiceEntityResponseBodyModule struct {
	// example:
	//
	// 1
	AddNum *int32 `json:"add_num,omitempty" xml:"add_num,omitempty"`
	// example:
	//
	// 2
	SelectedUserNum *int32 `json:"selected_user_num,omitempty" xml:"selected_user_num,omitempty"`
}

func (s AddInvoiceEntityResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s AddInvoiceEntityResponseBodyModule) GoString() string {
	return s.String()
}

func (s *AddInvoiceEntityResponseBodyModule) SetAddNum(v int32) *AddInvoiceEntityResponseBodyModule {
	s.AddNum = &v
	return s
}

func (s *AddInvoiceEntityResponseBodyModule) SetSelectedUserNum(v int32) *AddInvoiceEntityResponseBodyModule {
	s.SelectedUserNum = &v
	return s
}

type AddInvoiceEntityResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *AddInvoiceEntityResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s AddInvoiceEntityResponse) String() string {
	return tea.Prettify(s)
}

func (s AddInvoiceEntityResponse) GoString() string {
	return s.String()
}

func (s *AddInvoiceEntityResponse) SetHeaders(v map[string]*string) *AddInvoiceEntityResponse {
	s.Headers = v
	return s
}

func (s *AddInvoiceEntityResponse) SetStatusCode(v int32) *AddInvoiceEntityResponse {
	s.StatusCode = &v
	return s
}

func (s *AddInvoiceEntityResponse) SetBody(v *AddInvoiceEntityResponseBody) *AddInvoiceEntityResponse {
	s.Body = v
	return s
}

type AddressGetHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s AddressGetHeaders) String() string {
	return tea.Prettify(s)
}

func (s AddressGetHeaders) GoString() string {
	return s.String()
}

func (s *AddressGetHeaders) SetCommonHeaders(v map[string]*string) *AddressGetHeaders {
	s.CommonHeaders = v
	return s
}

func (s *AddressGetHeaders) SetXAcsBtripSoCorpToken(v string) *AddressGetHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type AddressGetRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1
	ActionType    *int32  `json:"action_type,omitempty" xml:"action_type,omitempty"`
	ArrCityCode   *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName   *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	CarScenesCode *string `json:"car_scenes_code,omitempty" xml:"car_scenes_code,omitempty"`
	DepCityCode   *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName   *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	DepDate       *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 460e254b5a5b4bd0801744a2790e5d78
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	OrderId     *string `json:"order_Id,omitempty" xml:"order_Id,omitempty"`
	Phone       *string `json:"phone,omitempty" xml:"phone,omitempty"`
	SubCorpId   *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
	// example:
	//
	// https://alibtrip.open.com
	TaobaoCallbackUrl *string `json:"taobao_callback_url,omitempty" xml:"taobao_callback_url,omitempty"`
	TravelerId        *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	// example:
	//
	// 1
	Type            *int32 `json:"type,omitempty" xml:"type,omitempty"`
	UseBookingProxy *int32 `json:"use_booking_proxy,omitempty" xml:"use_booking_proxy,omitempty"`
	// This parameter is required.
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s AddressGetRequest) String() string {
	return tea.Prettify(s)
}

func (s AddressGetRequest) GoString() string {
	return s.String()
}

func (s *AddressGetRequest) SetActionType(v int32) *AddressGetRequest {
	s.ActionType = &v
	return s
}

func (s *AddressGetRequest) SetArrCityCode(v string) *AddressGetRequest {
	s.ArrCityCode = &v
	return s
}

func (s *AddressGetRequest) SetArrCityName(v string) *AddressGetRequest {
	s.ArrCityName = &v
	return s
}

func (s *AddressGetRequest) SetCarScenesCode(v string) *AddressGetRequest {
	s.CarScenesCode = &v
	return s
}

func (s *AddressGetRequest) SetDepCityCode(v string) *AddressGetRequest {
	s.DepCityCode = &v
	return s
}

func (s *AddressGetRequest) SetDepCityName(v string) *AddressGetRequest {
	s.DepCityName = &v
	return s
}

func (s *AddressGetRequest) SetDepDate(v string) *AddressGetRequest {
	s.DepDate = &v
	return s
}

func (s *AddressGetRequest) SetItineraryId(v string) *AddressGetRequest {
	s.ItineraryId = &v
	return s
}

func (s *AddressGetRequest) SetOrderId(v string) *AddressGetRequest {
	s.OrderId = &v
	return s
}

func (s *AddressGetRequest) SetPhone(v string) *AddressGetRequest {
	s.Phone = &v
	return s
}

func (s *AddressGetRequest) SetSubCorpId(v string) *AddressGetRequest {
	s.SubCorpId = &v
	return s
}

func (s *AddressGetRequest) SetTaobaoCallbackUrl(v string) *AddressGetRequest {
	s.TaobaoCallbackUrl = &v
	return s
}

func (s *AddressGetRequest) SetTravelerId(v string) *AddressGetRequest {
	s.TravelerId = &v
	return s
}

func (s *AddressGetRequest) SetType(v int32) *AddressGetRequest {
	s.Type = &v
	return s
}

func (s *AddressGetRequest) SetUseBookingProxy(v int32) *AddressGetRequest {
	s.UseBookingProxy = &v
	return s
}

func (s *AddressGetRequest) SetUserId(v string) *AddressGetRequest {
	s.UserId = &v
	return s
}

type AddressGetResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                       `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                       `json:"message,omitempty" xml:"message,omitempty"`
	Module  *AddressGetResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210bcc3a16583004579056128d33d7
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s AddressGetResponseBody) String() string {
	return tea.Prettify(s)
}

func (s AddressGetResponseBody) GoString() string {
	return s.String()
}

func (s *AddressGetResponseBody) SetCode(v string) *AddressGetResponseBody {
	s.Code = &v
	return s
}

func (s *AddressGetResponseBody) SetMessage(v string) *AddressGetResponseBody {
	s.Message = &v
	return s
}

func (s *AddressGetResponseBody) SetModule(v *AddressGetResponseBodyModule) *AddressGetResponseBody {
	s.Module = v
	return s
}

func (s *AddressGetResponseBody) SetRequestId(v string) *AddressGetResponseBody {
	s.RequestId = &v
	return s
}

func (s *AddressGetResponseBody) SetSuccess(v bool) *AddressGetResponseBody {
	s.Success = &v
	return s
}

func (s *AddressGetResponseBody) SetTraceId(v string) *AddressGetResponseBody {
	s.TraceId = &v
	return s
}

type AddressGetResponseBodyModule struct {
	// example:
	//
	// https://trip-hisv.taobao.com/ding/trustLogin.htm?redirectUrl=https%3A%2F%2Fmarket.m.taobao.com%2Fapp%2Fbtrip-fe%2Frx-alitrip-main%2Fhome.html%3Ffpt%3DbIdentify%2528dingtalk.isv.h5.home%2529%26corpId%3Dding3f9797e277423f14a1320dcb25e91351%26dingUserId%3Dmanager9302%26dingAppId%3D1692%26fit%3Dtrue&token=b73e0b9e-d25a-40f0-aff8-2c2e58da659b
	Url *string `json:"url,omitempty" xml:"url,omitempty"`
}

func (s AddressGetResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s AddressGetResponseBodyModule) GoString() string {
	return s.String()
}

func (s *AddressGetResponseBodyModule) SetUrl(v string) *AddressGetResponseBodyModule {
	s.Url = &v
	return s
}

type AddressGetResponse struct {
	Headers    map[string]*string      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *AddressGetResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s AddressGetResponse) String() string {
	return tea.Prettify(s)
}

func (s AddressGetResponse) GoString() string {
	return s.String()
}

func (s *AddressGetResponse) SetHeaders(v map[string]*string) *AddressGetResponse {
	s.Headers = v
	return s
}

func (s *AddressGetResponse) SetStatusCode(v int32) *AddressGetResponse {
	s.StatusCode = &v
	return s
}

func (s *AddressGetResponse) SetBody(v *AddressGetResponseBody) *AddressGetResponse {
	s.Body = v
	return s
}

type AirportSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s AirportSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s AirportSearchHeaders) GoString() string {
	return s.String()
}

func (s *AirportSearchHeaders) SetCommonHeaders(v map[string]*string) *AirportSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *AirportSearchHeaders) SetXAcsBtripSoCorpToken(v string) *AirportSearchHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type AirportSearchRequest struct {
	// This parameter is required.
	Keyword *string `json:"keyword,omitempty" xml:"keyword,omitempty"`
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s AirportSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s AirportSearchRequest) GoString() string {
	return s.String()
}

func (s *AirportSearchRequest) SetKeyword(v string) *AirportSearchRequest {
	s.Keyword = &v
	return s
}

func (s *AirportSearchRequest) SetType(v int32) *AirportSearchRequest {
	s.Type = &v
	return s
}

type AirportSearchResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	Module *AirportSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f07f316603757445272547d959f
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s AirportSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s AirportSearchResponseBody) GoString() string {
	return s.String()
}

func (s *AirportSearchResponseBody) SetCode(v string) *AirportSearchResponseBody {
	s.Code = &v
	return s
}

func (s *AirportSearchResponseBody) SetMessage(v string) *AirportSearchResponseBody {
	s.Message = &v
	return s
}

func (s *AirportSearchResponseBody) SetModule(v *AirportSearchResponseBodyModule) *AirportSearchResponseBody {
	s.Module = v
	return s
}

func (s *AirportSearchResponseBody) SetRequestId(v string) *AirportSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *AirportSearchResponseBody) SetSuccess(v bool) *AirportSearchResponseBody {
	s.Success = &v
	return s
}

func (s *AirportSearchResponseBody) SetTraceId(v string) *AirportSearchResponseBody {
	s.TraceId = &v
	return s
}

type AirportSearchResponseBodyModule struct {
	Cities []*AirportSearchResponseBodyModuleCities `json:"cities,omitempty" xml:"cities,omitempty" type:"Repeated"`
	// example:
	//
	// false
	Nearby *bool `json:"nearby,omitempty" xml:"nearby,omitempty"`
}

func (s AirportSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s AirportSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *AirportSearchResponseBodyModule) SetCities(v []*AirportSearchResponseBodyModuleCities) *AirportSearchResponseBodyModule {
	s.Cities = v
	return s
}

func (s *AirportSearchResponseBodyModule) SetNearby(v bool) *AirportSearchResponseBodyModule {
	s.Nearby = &v
	return s
}

type AirportSearchResponseBodyModuleCities struct {
	// example:
	//
	// HGH
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 100
	Distance *int32  `json:"distance,omitempty" xml:"distance,omitempty"`
	Name     *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// 上海
	TravelName *string `json:"travel_name,omitempty" xml:"travel_name,omitempty"`
}

func (s AirportSearchResponseBodyModuleCities) String() string {
	return tea.Prettify(s)
}

func (s AirportSearchResponseBodyModuleCities) GoString() string {
	return s.String()
}

func (s *AirportSearchResponseBodyModuleCities) SetCode(v string) *AirportSearchResponseBodyModuleCities {
	s.Code = &v
	return s
}

func (s *AirportSearchResponseBodyModuleCities) SetDistance(v int32) *AirportSearchResponseBodyModuleCities {
	s.Distance = &v
	return s
}

func (s *AirportSearchResponseBodyModuleCities) SetName(v string) *AirportSearchResponseBodyModuleCities {
	s.Name = &v
	return s
}

func (s *AirportSearchResponseBodyModuleCities) SetTravelName(v string) *AirportSearchResponseBodyModuleCities {
	s.TravelName = &v
	return s
}

type AirportSearchResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *AirportSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s AirportSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s AirportSearchResponse) GoString() string {
	return s.String()
}

func (s *AirportSearchResponse) SetHeaders(v map[string]*string) *AirportSearchResponse {
	s.Headers = v
	return s
}

func (s *AirportSearchResponse) SetStatusCode(v int32) *AirportSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *AirportSearchResponse) SetBody(v *AirportSearchResponseBody) *AirportSearchResponse {
	s.Body = v
	return s
}

type AllBaseCityInfoQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripAccessToken *string `json:"x-acs-btrip-access-token,omitempty" xml:"x-acs-btrip-access-token,omitempty"`
}

func (s AllBaseCityInfoQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s AllBaseCityInfoQueryHeaders) GoString() string {
	return s.String()
}

func (s *AllBaseCityInfoQueryHeaders) SetCommonHeaders(v map[string]*string) *AllBaseCityInfoQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *AllBaseCityInfoQueryHeaders) SetXAcsBtripAccessToken(v string) *AllBaseCityInfoQueryHeaders {
	s.XAcsBtripAccessToken = &v
	return s
}

type AllBaseCityInfoQueryResponseBody struct {
	// example:
	//
	// success
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// demo
	Message *string                                 `json:"message,omitempty" xml:"message,omitempty"`
	Module  *AllBaseCityInfoQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s AllBaseCityInfoQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s AllBaseCityInfoQueryResponseBody) GoString() string {
	return s.String()
}

func (s *AllBaseCityInfoQueryResponseBody) SetCode(v string) *AllBaseCityInfoQueryResponseBody {
	s.Code = &v
	return s
}

func (s *AllBaseCityInfoQueryResponseBody) SetMessage(v string) *AllBaseCityInfoQueryResponseBody {
	s.Message = &v
	return s
}

func (s *AllBaseCityInfoQueryResponseBody) SetModule(v *AllBaseCityInfoQueryResponseBodyModule) *AllBaseCityInfoQueryResponseBody {
	s.Module = v
	return s
}

func (s *AllBaseCityInfoQueryResponseBody) SetRequestId(v string) *AllBaseCityInfoQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *AllBaseCityInfoQueryResponseBody) SetSuccess(v bool) *AllBaseCityInfoQueryResponseBody {
	s.Success = &v
	return s
}

func (s *AllBaseCityInfoQueryResponseBody) SetTraceId(v string) *AllBaseCityInfoQueryResponseBody {
	s.TraceId = &v
	return s
}

type AllBaseCityInfoQueryResponseBodyModule struct {
	AllCityBaseInfoList []*AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList `json:"all_city_base_info_list,omitempty" xml:"all_city_base_info_list,omitempty" type:"Repeated"`
}

func (s AllBaseCityInfoQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s AllBaseCityInfoQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *AllBaseCityInfoQueryResponseBodyModule) SetAllCityBaseInfoList(v []*AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList) *AllBaseCityInfoQueryResponseBodyModule {
	s.AllCityBaseInfoList = v
	return s
}

type AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList struct {
	// example:
	//
	// 330122
	Adcode *string `json:"adcode,omitempty" xml:"adcode,omitempty"`
	// example:
	//
	// 0571
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	// example:
	//
	// 3
	CityLevel *string `json:"city_level,omitempty" xml:"city_level,omitempty"`
	// example:
	//
	// 桐庐
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 中国，浙江省，杭州市，桐庐
	CnNameTree *string `json:"cn_name_tree,omitempty" xml:"cn_name_tree,omitempty"`
	// example:
	//
	// 1
	Id            *int64    `json:"id,omitempty" xml:"id,omitempty"`
	OtherNameList []*string `json:"other_name_list,omitempty" xml:"other_name_list,omitempty" type:"Repeated"`
}

func (s AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList) String() string {
	return tea.Prettify(s)
}

func (s AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList) GoString() string {
	return s.String()
}

func (s *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList) SetAdcode(v string) *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList {
	s.Adcode = &v
	return s
}

func (s *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList) SetCityCode(v string) *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList {
	s.CityCode = &v
	return s
}

func (s *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList) SetCityLevel(v string) *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList {
	s.CityLevel = &v
	return s
}

func (s *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList) SetCityName(v string) *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList {
	s.CityName = &v
	return s
}

func (s *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList) SetCnNameTree(v string) *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList {
	s.CnNameTree = &v
	return s
}

func (s *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList) SetId(v int64) *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList {
	s.Id = &v
	return s
}

func (s *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList) SetOtherNameList(v []*string) *AllBaseCityInfoQueryResponseBodyModuleAllCityBaseInfoList {
	s.OtherNameList = v
	return s
}

type AllBaseCityInfoQueryResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *AllBaseCityInfoQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s AllBaseCityInfoQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s AllBaseCityInfoQueryResponse) GoString() string {
	return s.String()
}

func (s *AllBaseCityInfoQueryResponse) SetHeaders(v map[string]*string) *AllBaseCityInfoQueryResponse {
	s.Headers = v
	return s
}

func (s *AllBaseCityInfoQueryResponse) SetStatusCode(v int32) *AllBaseCityInfoQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *AllBaseCityInfoQueryResponse) SetBody(v *AllBaseCityInfoQueryResponseBody) *AllBaseCityInfoQueryResponse {
	s.Body = v
	return s
}

type ApplyAddHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ApplyAddHeaders) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddHeaders) GoString() string {
	return s.String()
}

func (s *ApplyAddHeaders) SetCommonHeaders(v map[string]*string) *ApplyAddHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ApplyAddHeaders) SetXAcsBtripSoCorpToken(v string) *ApplyAddHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ApplyAddRequest struct {
	// example:
	//
	// 4000
	Budget *int64 `json:"budget,omitempty" xml:"budget,omitempty"`
	// example:
	//
	// 1
	BudgetMerge     *int32                          `json:"budget_merge,omitempty" xml:"budget_merge,omitempty"`
	CarRule         *ApplyAddRequestCarRule         `json:"car_rule,omitempty" xml:"car_rule,omitempty" type:"Struct"`
	CorpName        *string                         `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	DefaultStandard *ApplyAddRequestDefaultStandard `json:"default_standard,omitempty" xml:"default_standard,omitempty" type:"Struct"`
	// example:
	//
	// departId01
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// 可将补充描述传入此字段，账单中将会体现此字段的值。可以用于企业的统计和对账
	//
	// example:
	//
	// {"cost_center":"成本中心"}
	ExtendField              *string                                  `json:"extend_field,omitempty" xml:"extend_field,omitempty"`
	ExternalTravelerList     []*ApplyAddRequestExternalTravelerList   `json:"external_traveler_list,omitempty" xml:"external_traveler_list,omitempty" type:"Repeated"`
	ExternalTravelerStandard *ApplyAddRequestExternalTravelerStandard `json:"external_traveler_standard,omitempty" xml:"external_traveler_standard,omitempty" type:"Struct"`
	// example:
	//
	// 1000
	FlightBudget *int64 `json:"flight_budget,omitempty" xml:"flight_budget,omitempty"`
	// example:
	//
	// 1000
	HotelBudget               *int64                          `json:"hotel_budget,omitempty" xml:"hotel_budget,omitempty"`
	HotelShare                *ApplyAddRequestHotelShare      `json:"hotel_share,omitempty" xml:"hotel_share,omitempty" type:"Struct"`
	InternationalFlightCabins *string                         `json:"international_flight_cabins,omitempty" xml:"international_flight_cabins,omitempty"`
	ItineraryList             []*ApplyAddRequestItineraryList `json:"itinerary_list,omitempty" xml:"itinerary_list,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	ItineraryRule    *int32                             `json:"itinerary_rule,omitempty" xml:"itinerary_rule,omitempty"`
	ItinerarySetList []*ApplyAddRequestItinerarySetList `json:"itinerary_set_list,omitempty" xml:"itinerary_set_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	LimitTraveler         *int32  `json:"limit_traveler,omitempty" xml:"limit_traveler,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 0
	Status    *int32  `json:"status,omitempty" xml:"status,omitempty"`
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12345
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 00714131
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	ThirdpartDepartId   *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	// example:
	//
	// 1
	TogetherBookRule *int32 `json:"together_book_rule,omitempty" xml:"together_book_rule,omitempty"`
	// example:
	//
	// 1000
	TrainBudget      *int64                             `json:"train_budget,omitempty" xml:"train_budget,omitempty"`
	TravelerList     []*ApplyAddRequestTravelerList     `json:"traveler_list,omitempty" xml:"traveler_list,omitempty" type:"Repeated"`
	TravelerStandard []*ApplyAddRequestTravelerStandard `json:"traveler_standard,omitempty" xml:"traveler_standard,omitempty" type:"Repeated"`
	// This parameter is required.
	TripCause *string `json:"trip_cause,omitempty" xml:"trip_cause,omitempty"`
	// example:
	//
	// 1
	TripDay *int32 `json:"trip_day,omitempty" xml:"trip_day,omitempty"`
	// This parameter is required.
	TripTitle *string `json:"trip_title,omitempty" xml:"trip_title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
	// example:
	//
	// union001
	UnionNo *string `json:"union_no,omitempty" xml:"union_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// thridpart12138
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	// example:
	//
	// 1000
	VehicleBudget *int64 `json:"vehicle_budget,omitempty" xml:"vehicle_budget,omitempty"`
}

func (s ApplyAddRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequest) GoString() string {
	return s.String()
}

func (s *ApplyAddRequest) SetBudget(v int64) *ApplyAddRequest {
	s.Budget = &v
	return s
}

func (s *ApplyAddRequest) SetBudgetMerge(v int32) *ApplyAddRequest {
	s.BudgetMerge = &v
	return s
}

func (s *ApplyAddRequest) SetCarRule(v *ApplyAddRequestCarRule) *ApplyAddRequest {
	s.CarRule = v
	return s
}

func (s *ApplyAddRequest) SetCorpName(v string) *ApplyAddRequest {
	s.CorpName = &v
	return s
}

func (s *ApplyAddRequest) SetDefaultStandard(v *ApplyAddRequestDefaultStandard) *ApplyAddRequest {
	s.DefaultStandard = v
	return s
}

func (s *ApplyAddRequest) SetDepartId(v string) *ApplyAddRequest {
	s.DepartId = &v
	return s
}

func (s *ApplyAddRequest) SetDepartName(v string) *ApplyAddRequest {
	s.DepartName = &v
	return s
}

func (s *ApplyAddRequest) SetExtendField(v string) *ApplyAddRequest {
	s.ExtendField = &v
	return s
}

func (s *ApplyAddRequest) SetExternalTravelerList(v []*ApplyAddRequestExternalTravelerList) *ApplyAddRequest {
	s.ExternalTravelerList = v
	return s
}

func (s *ApplyAddRequest) SetExternalTravelerStandard(v *ApplyAddRequestExternalTravelerStandard) *ApplyAddRequest {
	s.ExternalTravelerStandard = v
	return s
}

func (s *ApplyAddRequest) SetFlightBudget(v int64) *ApplyAddRequest {
	s.FlightBudget = &v
	return s
}

func (s *ApplyAddRequest) SetHotelBudget(v int64) *ApplyAddRequest {
	s.HotelBudget = &v
	return s
}

func (s *ApplyAddRequest) SetHotelShare(v *ApplyAddRequestHotelShare) *ApplyAddRequest {
	s.HotelShare = v
	return s
}

func (s *ApplyAddRequest) SetInternationalFlightCabins(v string) *ApplyAddRequest {
	s.InternationalFlightCabins = &v
	return s
}

func (s *ApplyAddRequest) SetItineraryList(v []*ApplyAddRequestItineraryList) *ApplyAddRequest {
	s.ItineraryList = v
	return s
}

func (s *ApplyAddRequest) SetItineraryRule(v int32) *ApplyAddRequest {
	s.ItineraryRule = &v
	return s
}

func (s *ApplyAddRequest) SetItinerarySetList(v []*ApplyAddRequestItinerarySetList) *ApplyAddRequest {
	s.ItinerarySetList = v
	return s
}

func (s *ApplyAddRequest) SetLimitTraveler(v int32) *ApplyAddRequest {
	s.LimitTraveler = &v
	return s
}

func (s *ApplyAddRequest) SetPaymentDepartmentId(v string) *ApplyAddRequest {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyAddRequest) SetPaymentDepartmentName(v string) *ApplyAddRequest {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyAddRequest) SetStatus(v int32) *ApplyAddRequest {
	s.Status = &v
	return s
}

func (s *ApplyAddRequest) SetSubCorpId(v string) *ApplyAddRequest {
	s.SubCorpId = &v
	return s
}

func (s *ApplyAddRequest) SetThirdpartApplyId(v string) *ApplyAddRequest {
	s.ThirdpartApplyId = &v
	return s
}

func (s *ApplyAddRequest) SetThirdpartBusinessId(v string) *ApplyAddRequest {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *ApplyAddRequest) SetThirdpartDepartId(v string) *ApplyAddRequest {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyAddRequest) SetTogetherBookRule(v int32) *ApplyAddRequest {
	s.TogetherBookRule = &v
	return s
}

func (s *ApplyAddRequest) SetTrainBudget(v int64) *ApplyAddRequest {
	s.TrainBudget = &v
	return s
}

func (s *ApplyAddRequest) SetTravelerList(v []*ApplyAddRequestTravelerList) *ApplyAddRequest {
	s.TravelerList = v
	return s
}

func (s *ApplyAddRequest) SetTravelerStandard(v []*ApplyAddRequestTravelerStandard) *ApplyAddRequest {
	s.TravelerStandard = v
	return s
}

func (s *ApplyAddRequest) SetTripCause(v string) *ApplyAddRequest {
	s.TripCause = &v
	return s
}

func (s *ApplyAddRequest) SetTripDay(v int32) *ApplyAddRequest {
	s.TripDay = &v
	return s
}

func (s *ApplyAddRequest) SetTripTitle(v string) *ApplyAddRequest {
	s.TripTitle = &v
	return s
}

func (s *ApplyAddRequest) SetType(v int32) *ApplyAddRequest {
	s.Type = &v
	return s
}

func (s *ApplyAddRequest) SetUnionNo(v string) *ApplyAddRequest {
	s.UnionNo = &v
	return s
}

func (s *ApplyAddRequest) SetUserId(v string) *ApplyAddRequest {
	s.UserId = &v
	return s
}

func (s *ApplyAddRequest) SetUserName(v string) *ApplyAddRequest {
	s.UserName = &v
	return s
}

func (s *ApplyAddRequest) SetVehicleBudget(v int64) *ApplyAddRequest {
	s.VehicleBudget = &v
	return s
}

type ApplyAddRequestCarRule struct {
	ScenarioTemplateId   *string `json:"scenario_template_id,omitempty" xml:"scenario_template_id,omitempty"`
	ScenarioTemplateName *string `json:"scenario_template_name,omitempty" xml:"scenario_template_name,omitempty"`
}

func (s ApplyAddRequestCarRule) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestCarRule) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestCarRule) SetScenarioTemplateId(v string) *ApplyAddRequestCarRule {
	s.ScenarioTemplateId = &v
	return s
}

func (s *ApplyAddRequestCarRule) SetScenarioTemplateName(v string) *ApplyAddRequestCarRule {
	s.ScenarioTemplateName = &v
	return s
}

type ApplyAddRequestDefaultStandard struct {
	BusinessDiscount   *int32                                          `json:"business_discount,omitempty" xml:"business_discount,omitempty"`
	EconomyDiscount    *int32                                          `json:"economy_discount,omitempty" xml:"economy_discount,omitempty"`
	FirstDiscount      *int32                                          `json:"first_discount,omitempty" xml:"first_discount,omitempty"`
	FlightCabins       *string                                         `json:"flight_cabins,omitempty" xml:"flight_cabins,omitempty"`
	FlightIntlRuleCode *int64                                          `json:"flight_intl_rule_code,omitempty" xml:"flight_intl_rule_code,omitempty"`
	FlightRuleCode     *int64                                          `json:"flight_rule_code,omitempty" xml:"flight_rule_code,omitempty"`
	HotelCitys         []*ApplyAddRequestDefaultStandardHotelCitys     `json:"hotel_citys,omitempty" xml:"hotel_citys,omitempty" type:"Repeated"`
	HotelIntlCitys     []*ApplyAddRequestDefaultStandardHotelIntlCitys `json:"hotel_intl_citys,omitempty" xml:"hotel_intl_citys,omitempty" type:"Repeated"`
	HotelIntlRuleCode  *int64                                          `json:"hotel_intl_rule_code,omitempty" xml:"hotel_intl_rule_code,omitempty"`
	HotelRuleCode      *int64                                          `json:"hotel_rule_code,omitempty" xml:"hotel_rule_code,omitempty"`
	// example:
	//
	// F
	InternationalFlightCabins *string `json:"international_flight_cabins,omitempty" xml:"international_flight_cabins,omitempty"`
	PremiumEconomyDiscount    *int32  `json:"premium_economy_discount,omitempty" xml:"premium_economy_discount,omitempty"`
	ReserveType               *int32  `json:"reserve_type,omitempty" xml:"reserve_type,omitempty"`
	TrainRuleCode             *int64  `json:"train_rule_code,omitempty" xml:"train_rule_code,omitempty"`
	TrainSeats                *string `json:"train_seats,omitempty" xml:"train_seats,omitempty"`
}

func (s ApplyAddRequestDefaultStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestDefaultStandard) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestDefaultStandard) SetBusinessDiscount(v int32) *ApplyAddRequestDefaultStandard {
	s.BusinessDiscount = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetEconomyDiscount(v int32) *ApplyAddRequestDefaultStandard {
	s.EconomyDiscount = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetFirstDiscount(v int32) *ApplyAddRequestDefaultStandard {
	s.FirstDiscount = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetFlightCabins(v string) *ApplyAddRequestDefaultStandard {
	s.FlightCabins = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetFlightIntlRuleCode(v int64) *ApplyAddRequestDefaultStandard {
	s.FlightIntlRuleCode = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetFlightRuleCode(v int64) *ApplyAddRequestDefaultStandard {
	s.FlightRuleCode = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetHotelCitys(v []*ApplyAddRequestDefaultStandardHotelCitys) *ApplyAddRequestDefaultStandard {
	s.HotelCitys = v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetHotelIntlCitys(v []*ApplyAddRequestDefaultStandardHotelIntlCitys) *ApplyAddRequestDefaultStandard {
	s.HotelIntlCitys = v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetHotelIntlRuleCode(v int64) *ApplyAddRequestDefaultStandard {
	s.HotelIntlRuleCode = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetHotelRuleCode(v int64) *ApplyAddRequestDefaultStandard {
	s.HotelRuleCode = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetInternationalFlightCabins(v string) *ApplyAddRequestDefaultStandard {
	s.InternationalFlightCabins = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetPremiumEconomyDiscount(v int32) *ApplyAddRequestDefaultStandard {
	s.PremiumEconomyDiscount = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetReserveType(v int32) *ApplyAddRequestDefaultStandard {
	s.ReserveType = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetTrainRuleCode(v int64) *ApplyAddRequestDefaultStandard {
	s.TrainRuleCode = &v
	return s
}

func (s *ApplyAddRequestDefaultStandard) SetTrainSeats(v string) *ApplyAddRequestDefaultStandard {
	s.TrainSeats = &v
	return s
}

type ApplyAddRequestDefaultStandardHotelCitys struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Fee      *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyAddRequestDefaultStandardHotelCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestDefaultStandardHotelCitys) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestDefaultStandardHotelCitys) SetCityCode(v string) *ApplyAddRequestDefaultStandardHotelCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyAddRequestDefaultStandardHotelCitys) SetCityName(v string) *ApplyAddRequestDefaultStandardHotelCitys {
	s.CityName = &v
	return s
}

func (s *ApplyAddRequestDefaultStandardHotelCitys) SetFee(v int64) *ApplyAddRequestDefaultStandardHotelCitys {
	s.Fee = &v
	return s
}

type ApplyAddRequestDefaultStandardHotelIntlCitys struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Fee      *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyAddRequestDefaultStandardHotelIntlCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestDefaultStandardHotelIntlCitys) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestDefaultStandardHotelIntlCitys) SetCityCode(v string) *ApplyAddRequestDefaultStandardHotelIntlCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyAddRequestDefaultStandardHotelIntlCitys) SetCityName(v string) *ApplyAddRequestDefaultStandardHotelIntlCitys {
	s.CityName = &v
	return s
}

func (s *ApplyAddRequestDefaultStandardHotelIntlCitys) SetFee(v int64) *ApplyAddRequestDefaultStandardHotelIntlCitys {
	s.Fee = &v
	return s
}

type ApplyAddRequestExternalTravelerList struct {
	Attribute             *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	CostCenterId          *int64  `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	InvoiceId             *int64  `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	ProjectCode           *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle          *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdPartInvoiceId    *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	ThirdpartDepartId     *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	UserName              *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	UserNameEn            *string `json:"user_name_en,omitempty" xml:"user_name_en,omitempty"`
}

func (s ApplyAddRequestExternalTravelerList) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestExternalTravelerList) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestExternalTravelerList) SetAttribute(v string) *ApplyAddRequestExternalTravelerList {
	s.Attribute = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetCostCenterId(v int64) *ApplyAddRequestExternalTravelerList {
	s.CostCenterId = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetInvoiceId(v int64) *ApplyAddRequestExternalTravelerList {
	s.InvoiceId = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetPaymentDepartmentId(v string) *ApplyAddRequestExternalTravelerList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetPaymentDepartmentName(v string) *ApplyAddRequestExternalTravelerList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetProjectCode(v string) *ApplyAddRequestExternalTravelerList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetProjectTitle(v string) *ApplyAddRequestExternalTravelerList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetThirdPartInvoiceId(v string) *ApplyAddRequestExternalTravelerList {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetThirdpartCostCenterId(v string) *ApplyAddRequestExternalTravelerList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetThirdpartDepartId(v string) *ApplyAddRequestExternalTravelerList {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetUserName(v string) *ApplyAddRequestExternalTravelerList {
	s.UserName = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerList) SetUserNameEn(v string) *ApplyAddRequestExternalTravelerList {
	s.UserNameEn = &v
	return s
}

type ApplyAddRequestExternalTravelerStandard struct {
	// example:
	//
	// 1
	BusinessDiscount *int32 `json:"business_discount,omitempty" xml:"business_discount,omitempty"`
	// example:
	//
	// 1
	EconomyDiscount *int32 `json:"economy_discount,omitempty" xml:"economy_discount,omitempty"`
	// example:
	//
	// 1
	FirstDiscount *int32 `json:"first_discount,omitempty" xml:"first_discount,omitempty"`
	// example:
	//
	// F
	FlightCabins       *string                                                  `json:"flight_cabins,omitempty" xml:"flight_cabins,omitempty"`
	FlightIntlRuleCode *int64                                                   `json:"flight_intl_rule_code,omitempty" xml:"flight_intl_rule_code,omitempty"`
	FlightRuleCode     *int64                                                   `json:"flight_rule_code,omitempty" xml:"flight_rule_code,omitempty"`
	HotelCitys         []*ApplyAddRequestExternalTravelerStandardHotelCitys     `json:"hotel_citys,omitempty" xml:"hotel_citys,omitempty" type:"Repeated"`
	HotelIntlCitys     []*ApplyAddRequestExternalTravelerStandardHotelIntlCitys `json:"hotel_intl_citys,omitempty" xml:"hotel_intl_citys,omitempty" type:"Repeated"`
	HotelIntlRuleCode  *int64                                                   `json:"hotel_intl_rule_code,omitempty" xml:"hotel_intl_rule_code,omitempty"`
	HotelRuleCode      *int64                                                   `json:"hotel_rule_code,omitempty" xml:"hotel_rule_code,omitempty"`
	// example:
	//
	// F
	InternationalFlightCabins *string `json:"international_flight_cabins,omitempty" xml:"international_flight_cabins,omitempty"`
	// example:
	//
	// 1
	PremiumEconomyDiscount *int32 `json:"premium_economy_discount,omitempty" xml:"premium_economy_discount,omitempty"`
	// example:
	//
	// 0
	ReserveType   *int32 `json:"reserve_type,omitempty" xml:"reserve_type,omitempty"`
	TrainRuleCode *int64 `json:"train_rule_code,omitempty" xml:"train_rule_code,omitempty"`
	// example:
	//
	// 0
	TrainSeats *string `json:"train_seats,omitempty" xml:"train_seats,omitempty"`
}

func (s ApplyAddRequestExternalTravelerStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestExternalTravelerStandard) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestExternalTravelerStandard) SetBusinessDiscount(v int32) *ApplyAddRequestExternalTravelerStandard {
	s.BusinessDiscount = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetEconomyDiscount(v int32) *ApplyAddRequestExternalTravelerStandard {
	s.EconomyDiscount = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetFirstDiscount(v int32) *ApplyAddRequestExternalTravelerStandard {
	s.FirstDiscount = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetFlightCabins(v string) *ApplyAddRequestExternalTravelerStandard {
	s.FlightCabins = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetFlightIntlRuleCode(v int64) *ApplyAddRequestExternalTravelerStandard {
	s.FlightIntlRuleCode = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetFlightRuleCode(v int64) *ApplyAddRequestExternalTravelerStandard {
	s.FlightRuleCode = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetHotelCitys(v []*ApplyAddRequestExternalTravelerStandardHotelCitys) *ApplyAddRequestExternalTravelerStandard {
	s.HotelCitys = v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetHotelIntlCitys(v []*ApplyAddRequestExternalTravelerStandardHotelIntlCitys) *ApplyAddRequestExternalTravelerStandard {
	s.HotelIntlCitys = v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetHotelIntlRuleCode(v int64) *ApplyAddRequestExternalTravelerStandard {
	s.HotelIntlRuleCode = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetHotelRuleCode(v int64) *ApplyAddRequestExternalTravelerStandard {
	s.HotelRuleCode = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetInternationalFlightCabins(v string) *ApplyAddRequestExternalTravelerStandard {
	s.InternationalFlightCabins = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetPremiumEconomyDiscount(v int32) *ApplyAddRequestExternalTravelerStandard {
	s.PremiumEconomyDiscount = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetReserveType(v int32) *ApplyAddRequestExternalTravelerStandard {
	s.ReserveType = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetTrainRuleCode(v int64) *ApplyAddRequestExternalTravelerStandard {
	s.TrainRuleCode = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandard) SetTrainSeats(v string) *ApplyAddRequestExternalTravelerStandard {
	s.TrainSeats = &v
	return s
}

type ApplyAddRequestExternalTravelerStandardHotelCitys struct {
	// example:
	//
	// 0
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 1009
	Fee *int64 `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyAddRequestExternalTravelerStandardHotelCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestExternalTravelerStandardHotelCitys) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestExternalTravelerStandardHotelCitys) SetCityCode(v string) *ApplyAddRequestExternalTravelerStandardHotelCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandardHotelCitys) SetCityName(v string) *ApplyAddRequestExternalTravelerStandardHotelCitys {
	s.CityName = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandardHotelCitys) SetFee(v int64) *ApplyAddRequestExternalTravelerStandardHotelCitys {
	s.Fee = &v
	return s
}

type ApplyAddRequestExternalTravelerStandardHotelIntlCitys struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Fee      *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyAddRequestExternalTravelerStandardHotelIntlCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestExternalTravelerStandardHotelIntlCitys) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestExternalTravelerStandardHotelIntlCitys) SetCityCode(v string) *ApplyAddRequestExternalTravelerStandardHotelIntlCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandardHotelIntlCitys) SetCityName(v string) *ApplyAddRequestExternalTravelerStandardHotelIntlCitys {
	s.CityName = &v
	return s
}

func (s *ApplyAddRequestExternalTravelerStandardHotelIntlCitys) SetFee(v int64) *ApplyAddRequestExternalTravelerStandardHotelIntlCitys {
	s.Fee = &v
	return s
}

type ApplyAddRequestHotelShare struct {
	// example:
	//
	// 70
	Param *string `json:"param,omitempty" xml:"param,omitempty"`
	// example:
	//
	// 1
	Type *string `json:"type,omitempty" xml:"type,omitempty"`
}

func (s ApplyAddRequestHotelShare) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestHotelShare) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestHotelShare) SetParam(v string) *ApplyAddRequestHotelShare {
	s.Param = &v
	return s
}

func (s *ApplyAddRequestHotelShare) SetType(v string) *ApplyAddRequestHotelShare {
	s.Type = &v
	return s
}

type ApplyAddRequestItineraryList struct {
	// This parameter is required.
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// This parameter is required.
	ArrDate   *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	Attribute *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	// example:
	//
	// 12138
	CostCenterId *int64 `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	// This parameter is required.
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2017-01-01 00:00:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 34711
	InvoiceId *int64 `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	ItineraryId             *string                                              `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	ItineraryTravelStandard *ApplyAddRequestItineraryListItineraryTravelStandard `json:"itinerary_travel_standard,omitempty" xml:"itinerary_travel_standard,omitempty" type:"Struct"`
	// example:
	//
	// true
	NeedHotel *bool `json:"need_hotel,omitempty" xml:"need_hotel,omitempty"`
	// example:
	//
	// true
	NeedTraffic *bool `json:"need_traffic,omitempty" xml:"need_traffic,omitempty"`
	// example:
	//
	// projecttow
	ProjectCode               *string   `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle              *string   `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ProvinceTravelCityAdcodes []*string `json:"province_travel_city_adcodes,omitempty" xml:"province_travel_city_adcodes,omitempty" type:"Repeated"`
	// example:
	//
	// thirdpart34711
	ThirdPartInvoiceId *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	// example:
	//
	// thridpart12138
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	TrafficType *int32 `json:"traffic_type,omitempty" xml:"traffic_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	TripWay *int32 `json:"trip_way,omitempty" xml:"trip_way,omitempty"`
}

func (s ApplyAddRequestItineraryList) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestItineraryList) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestItineraryList) SetArrCity(v string) *ApplyAddRequestItineraryList {
	s.ArrCity = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetArrCityCode(v string) *ApplyAddRequestItineraryList {
	s.ArrCityCode = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetArrDate(v string) *ApplyAddRequestItineraryList {
	s.ArrDate = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetAttribute(v string) *ApplyAddRequestItineraryList {
	s.Attribute = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetCostCenterId(v int64) *ApplyAddRequestItineraryList {
	s.CostCenterId = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetDepCity(v string) *ApplyAddRequestItineraryList {
	s.DepCity = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetDepCityCode(v string) *ApplyAddRequestItineraryList {
	s.DepCityCode = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetDepDate(v string) *ApplyAddRequestItineraryList {
	s.DepDate = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetInvoiceId(v int64) *ApplyAddRequestItineraryList {
	s.InvoiceId = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetItineraryId(v string) *ApplyAddRequestItineraryList {
	s.ItineraryId = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetItineraryTravelStandard(v *ApplyAddRequestItineraryListItineraryTravelStandard) *ApplyAddRequestItineraryList {
	s.ItineraryTravelStandard = v
	return s
}

func (s *ApplyAddRequestItineraryList) SetNeedHotel(v bool) *ApplyAddRequestItineraryList {
	s.NeedHotel = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetNeedTraffic(v bool) *ApplyAddRequestItineraryList {
	s.NeedTraffic = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetProjectCode(v string) *ApplyAddRequestItineraryList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetProjectTitle(v string) *ApplyAddRequestItineraryList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetProvinceTravelCityAdcodes(v []*string) *ApplyAddRequestItineraryList {
	s.ProvinceTravelCityAdcodes = v
	return s
}

func (s *ApplyAddRequestItineraryList) SetThirdPartInvoiceId(v string) *ApplyAddRequestItineraryList {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetThirdpartCostCenterId(v string) *ApplyAddRequestItineraryList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetTrafficType(v int32) *ApplyAddRequestItineraryList {
	s.TrafficType = &v
	return s
}

func (s *ApplyAddRequestItineraryList) SetTripWay(v int32) *ApplyAddRequestItineraryList {
	s.TripWay = &v
	return s
}

type ApplyAddRequestItineraryListItineraryTravelStandard struct {
	HotelAvailableNightsPerDay *int32 `json:"hotel_available_nights_per_day,omitempty" xml:"hotel_available_nights_per_day,omitempty"`
}

func (s ApplyAddRequestItineraryListItineraryTravelStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestItineraryListItineraryTravelStandard) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestItineraryListItineraryTravelStandard) SetHotelAvailableNightsPerDay(v int32) *ApplyAddRequestItineraryListItineraryTravelStandard {
	s.HotelAvailableNightsPerDay = &v
	return s
}

type ApplyAddRequestItinerarySetList struct {
	// This parameter is required.
	//
	// example:
	//
	// 2017-01-01 00:00:00
	ArrDate   *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	Attribute *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BJS,HGH
	CityCodeSet *string `json:"city_code_set,omitempty" xml:"city_code_set,omitempty"`
	// This parameter is required.
	CitySet *string `json:"city_set,omitempty" xml:"city_set,omitempty"`
	// example:
	//
	// 12345
	CostCenterId *int64 `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2017-01-01 00:00:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 12345
	InvoiceId *int64 `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	ItineraryId             *string                                                 `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	ItineraryTravelStandard *ApplyAddRequestItinerarySetListItineraryTravelStandard `json:"itinerary_travel_standard,omitempty" xml:"itinerary_travel_standard,omitempty" type:"Struct"`
	// example:
	//
	// projecttow
	ProjectCode               *string   `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle              *string   `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ProvinceTravelCityAdcodes []*string `json:"province_travel_city_adcodes,omitempty" xml:"province_travel_city_adcodes,omitempty" type:"Repeated"`
	// example:
	//
	// thridpart12138
	ThirdPartInvoiceId *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	// example:
	//
	// thridpart12138
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	TrafficType *int32 `json:"traffic_type,omitempty" xml:"traffic_type,omitempty"`
}

func (s ApplyAddRequestItinerarySetList) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestItinerarySetList) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestItinerarySetList) SetArrDate(v string) *ApplyAddRequestItinerarySetList {
	s.ArrDate = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetAttribute(v string) *ApplyAddRequestItinerarySetList {
	s.Attribute = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetCityCodeSet(v string) *ApplyAddRequestItinerarySetList {
	s.CityCodeSet = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetCitySet(v string) *ApplyAddRequestItinerarySetList {
	s.CitySet = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetCostCenterId(v int64) *ApplyAddRequestItinerarySetList {
	s.CostCenterId = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetDepDate(v string) *ApplyAddRequestItinerarySetList {
	s.DepDate = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetInvoiceId(v int64) *ApplyAddRequestItinerarySetList {
	s.InvoiceId = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetItineraryId(v string) *ApplyAddRequestItinerarySetList {
	s.ItineraryId = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetItineraryTravelStandard(v *ApplyAddRequestItinerarySetListItineraryTravelStandard) *ApplyAddRequestItinerarySetList {
	s.ItineraryTravelStandard = v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetProjectCode(v string) *ApplyAddRequestItinerarySetList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetProjectTitle(v string) *ApplyAddRequestItinerarySetList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetProvinceTravelCityAdcodes(v []*string) *ApplyAddRequestItinerarySetList {
	s.ProvinceTravelCityAdcodes = v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetThirdPartInvoiceId(v string) *ApplyAddRequestItinerarySetList {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetThirdpartCostCenterId(v string) *ApplyAddRequestItinerarySetList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyAddRequestItinerarySetList) SetTrafficType(v int32) *ApplyAddRequestItinerarySetList {
	s.TrafficType = &v
	return s
}

type ApplyAddRequestItinerarySetListItineraryTravelStandard struct {
	HotelAvailableNightsPerDay *int32 `json:"hotel_available_nights_per_day,omitempty" xml:"hotel_available_nights_per_day,omitempty"`
}

func (s ApplyAddRequestItinerarySetListItineraryTravelStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestItinerarySetListItineraryTravelStandard) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestItinerarySetListItineraryTravelStandard) SetHotelAvailableNightsPerDay(v int32) *ApplyAddRequestItinerarySetListItineraryTravelStandard {
	s.HotelAvailableNightsPerDay = &v
	return s
}

type ApplyAddRequestTravelerList struct {
	Attribute             *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	CostCenterId          *int64  `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	InvoiceId             *int64  `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	ProjectCode           *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle          *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdPartInvoiceId    *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	ThirdpartDepartId     *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	// example:
	//
	// wu51531
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyAddRequestTravelerList) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestTravelerList) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestTravelerList) SetAttribute(v string) *ApplyAddRequestTravelerList {
	s.Attribute = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetCostCenterId(v int64) *ApplyAddRequestTravelerList {
	s.CostCenterId = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetInvoiceId(v int64) *ApplyAddRequestTravelerList {
	s.InvoiceId = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetPaymentDepartmentId(v string) *ApplyAddRequestTravelerList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetPaymentDepartmentName(v string) *ApplyAddRequestTravelerList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetProjectCode(v string) *ApplyAddRequestTravelerList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetProjectTitle(v string) *ApplyAddRequestTravelerList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetThirdPartInvoiceId(v string) *ApplyAddRequestTravelerList {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetThirdpartCostCenterId(v string) *ApplyAddRequestTravelerList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetThirdpartDepartId(v string) *ApplyAddRequestTravelerList {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetUserId(v string) *ApplyAddRequestTravelerList {
	s.UserId = &v
	return s
}

func (s *ApplyAddRequestTravelerList) SetUserName(v string) *ApplyAddRequestTravelerList {
	s.UserName = &v
	return s
}

type ApplyAddRequestTravelerStandard struct {
	// example:
	//
	// 1
	BusinessDiscount *int32                                       `json:"business_discount,omitempty" xml:"business_discount,omitempty"`
	CarCitySet       []*ApplyAddRequestTravelerStandardCarCitySet `json:"car_city_set,omitempty" xml:"car_city_set,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	EconomyDiscount *int32 `json:"economy_discount,omitempty" xml:"economy_discount,omitempty"`
	// example:
	//
	// 1
	FirstDiscount *int32 `json:"first_discount,omitempty" xml:"first_discount,omitempty"`
	// example:
	//
	// Y
	FlightCabins       *string                                          `json:"flight_cabins,omitempty" xml:"flight_cabins,omitempty"`
	FlightIntlRuleCode *int64                                           `json:"flight_intl_rule_code,omitempty" xml:"flight_intl_rule_code,omitempty"`
	FlightRuleCode     *int64                                           `json:"flight_rule_code,omitempty" xml:"flight_rule_code,omitempty"`
	HotelCitys         []*ApplyAddRequestTravelerStandardHotelCitys     `json:"hotel_citys,omitempty" xml:"hotel_citys,omitempty" type:"Repeated"`
	HotelIntlCitys     []*ApplyAddRequestTravelerStandardHotelIntlCitys `json:"hotel_intl_citys,omitempty" xml:"hotel_intl_citys,omitempty" type:"Repeated"`
	HotelIntlRuleCode  *int64                                           `json:"hotel_intl_rule_code,omitempty" xml:"hotel_intl_rule_code,omitempty"`
	HotelRuleCode      *int64                                           `json:"hotel_rule_code,omitempty" xml:"hotel_rule_code,omitempty"`
	// example:
	//
	// F
	InternationalFlightCabins *string `json:"international_flight_cabins,omitempty" xml:"international_flight_cabins,omitempty"`
	// example:
	//
	// 1
	PremiumEconomyDiscount *int32 `json:"premium_economy_discount,omitempty" xml:"premium_economy_discount,omitempty"`
	// example:
	//
	// 0
	ReserveType   *int32 `json:"reserve_type,omitempty" xml:"reserve_type,omitempty"`
	TrainRuleCode *int64 `json:"train_rule_code,omitempty" xml:"train_rule_code,omitempty"`
	// example:
	//
	// 1
	TrainSeats *string `json:"train_seats,omitempty" xml:"train_seats,omitempty"`
	// example:
	//
	// wfffeng
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s ApplyAddRequestTravelerStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestTravelerStandard) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestTravelerStandard) SetBusinessDiscount(v int32) *ApplyAddRequestTravelerStandard {
	s.BusinessDiscount = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetCarCitySet(v []*ApplyAddRequestTravelerStandardCarCitySet) *ApplyAddRequestTravelerStandard {
	s.CarCitySet = v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetEconomyDiscount(v int32) *ApplyAddRequestTravelerStandard {
	s.EconomyDiscount = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetFirstDiscount(v int32) *ApplyAddRequestTravelerStandard {
	s.FirstDiscount = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetFlightCabins(v string) *ApplyAddRequestTravelerStandard {
	s.FlightCabins = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetFlightIntlRuleCode(v int64) *ApplyAddRequestTravelerStandard {
	s.FlightIntlRuleCode = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetFlightRuleCode(v int64) *ApplyAddRequestTravelerStandard {
	s.FlightRuleCode = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetHotelCitys(v []*ApplyAddRequestTravelerStandardHotelCitys) *ApplyAddRequestTravelerStandard {
	s.HotelCitys = v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetHotelIntlCitys(v []*ApplyAddRequestTravelerStandardHotelIntlCitys) *ApplyAddRequestTravelerStandard {
	s.HotelIntlCitys = v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetHotelIntlRuleCode(v int64) *ApplyAddRequestTravelerStandard {
	s.HotelIntlRuleCode = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetHotelRuleCode(v int64) *ApplyAddRequestTravelerStandard {
	s.HotelRuleCode = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetInternationalFlightCabins(v string) *ApplyAddRequestTravelerStandard {
	s.InternationalFlightCabins = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetPremiumEconomyDiscount(v int32) *ApplyAddRequestTravelerStandard {
	s.PremiumEconomyDiscount = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetReserveType(v int32) *ApplyAddRequestTravelerStandard {
	s.ReserveType = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetTrainRuleCode(v int64) *ApplyAddRequestTravelerStandard {
	s.TrainRuleCode = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetTrainSeats(v string) *ApplyAddRequestTravelerStandard {
	s.TrainSeats = &v
	return s
}

func (s *ApplyAddRequestTravelerStandard) SetUserId(v string) *ApplyAddRequestTravelerStandard {
	s.UserId = &v
	return s
}

type ApplyAddRequestTravelerStandardCarCitySet struct {
	// This parameter is required.
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	// This parameter is required.
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
}

func (s ApplyAddRequestTravelerStandardCarCitySet) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestTravelerStandardCarCitySet) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestTravelerStandardCarCitySet) SetCityCode(v string) *ApplyAddRequestTravelerStandardCarCitySet {
	s.CityCode = &v
	return s
}

func (s *ApplyAddRequestTravelerStandardCarCitySet) SetCityName(v string) *ApplyAddRequestTravelerStandardCarCitySet {
	s.CityName = &v
	return s
}

type ApplyAddRequestTravelerStandardHotelCitys struct {
	// example:
	//
	// 0
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 1009
	Fee *int64 `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyAddRequestTravelerStandardHotelCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestTravelerStandardHotelCitys) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestTravelerStandardHotelCitys) SetCityCode(v string) *ApplyAddRequestTravelerStandardHotelCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyAddRequestTravelerStandardHotelCitys) SetCityName(v string) *ApplyAddRequestTravelerStandardHotelCitys {
	s.CityName = &v
	return s
}

func (s *ApplyAddRequestTravelerStandardHotelCitys) SetFee(v int64) *ApplyAddRequestTravelerStandardHotelCitys {
	s.Fee = &v
	return s
}

type ApplyAddRequestTravelerStandardHotelIntlCitys struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Fee      *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyAddRequestTravelerStandardHotelIntlCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddRequestTravelerStandardHotelIntlCitys) GoString() string {
	return s.String()
}

func (s *ApplyAddRequestTravelerStandardHotelIntlCitys) SetCityCode(v string) *ApplyAddRequestTravelerStandardHotelIntlCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyAddRequestTravelerStandardHotelIntlCitys) SetCityName(v string) *ApplyAddRequestTravelerStandardHotelIntlCitys {
	s.CityName = &v
	return s
}

func (s *ApplyAddRequestTravelerStandardHotelIntlCitys) SetFee(v int64) *ApplyAddRequestTravelerStandardHotelIntlCitys {
	s.Fee = &v
	return s
}

type ApplyAddShrinkRequest struct {
	// example:
	//
	// 4000
	Budget *int64 `json:"budget,omitempty" xml:"budget,omitempty"`
	// example:
	//
	// 1
	BudgetMerge           *int32  `json:"budget_merge,omitempty" xml:"budget_merge,omitempty"`
	CarRuleShrink         *string `json:"car_rule,omitempty" xml:"car_rule,omitempty"`
	CorpName              *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	DefaultStandardShrink *string `json:"default_standard,omitempty" xml:"default_standard,omitempty"`
	// example:
	//
	// departId01
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// 可将补充描述传入此字段，账单中将会体现此字段的值。可以用于企业的统计和对账
	//
	// example:
	//
	// {"cost_center":"成本中心"}
	ExtendField                    *string `json:"extend_field,omitempty" xml:"extend_field,omitempty"`
	ExternalTravelerListShrink     *string `json:"external_traveler_list,omitempty" xml:"external_traveler_list,omitempty"`
	ExternalTravelerStandardShrink *string `json:"external_traveler_standard,omitempty" xml:"external_traveler_standard,omitempty"`
	// example:
	//
	// 1000
	FlightBudget *int64 `json:"flight_budget,omitempty" xml:"flight_budget,omitempty"`
	// example:
	//
	// 1000
	HotelBudget               *int64  `json:"hotel_budget,omitempty" xml:"hotel_budget,omitempty"`
	HotelShareShrink          *string `json:"hotel_share,omitempty" xml:"hotel_share,omitempty"`
	InternationalFlightCabins *string `json:"international_flight_cabins,omitempty" xml:"international_flight_cabins,omitempty"`
	ItineraryListShrink       *string `json:"itinerary_list,omitempty" xml:"itinerary_list,omitempty"`
	// example:
	//
	// 0
	ItineraryRule          *int32  `json:"itinerary_rule,omitempty" xml:"itinerary_rule,omitempty"`
	ItinerarySetListShrink *string `json:"itinerary_set_list,omitempty" xml:"itinerary_set_list,omitempty"`
	// example:
	//
	// 1
	LimitTraveler         *int32  `json:"limit_traveler,omitempty" xml:"limit_traveler,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 0
	Status    *int32  `json:"status,omitempty" xml:"status,omitempty"`
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12345
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 00714131
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	ThirdpartDepartId   *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	// example:
	//
	// 1
	TogetherBookRule *int32 `json:"together_book_rule,omitempty" xml:"together_book_rule,omitempty"`
	// example:
	//
	// 1000
	TrainBudget            *int64  `json:"train_budget,omitempty" xml:"train_budget,omitempty"`
	TravelerListShrink     *string `json:"traveler_list,omitempty" xml:"traveler_list,omitempty"`
	TravelerStandardShrink *string `json:"traveler_standard,omitempty" xml:"traveler_standard,omitempty"`
	// This parameter is required.
	TripCause *string `json:"trip_cause,omitempty" xml:"trip_cause,omitempty"`
	// example:
	//
	// 1
	TripDay *int32 `json:"trip_day,omitempty" xml:"trip_day,omitempty"`
	// This parameter is required.
	TripTitle *string `json:"trip_title,omitempty" xml:"trip_title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
	// example:
	//
	// union001
	UnionNo *string `json:"union_no,omitempty" xml:"union_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// thridpart12138
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	// example:
	//
	// 1000
	VehicleBudget *int64 `json:"vehicle_budget,omitempty" xml:"vehicle_budget,omitempty"`
}

func (s ApplyAddShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddShrinkRequest) GoString() string {
	return s.String()
}

func (s *ApplyAddShrinkRequest) SetBudget(v int64) *ApplyAddShrinkRequest {
	s.Budget = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetBudgetMerge(v int32) *ApplyAddShrinkRequest {
	s.BudgetMerge = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetCarRuleShrink(v string) *ApplyAddShrinkRequest {
	s.CarRuleShrink = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetCorpName(v string) *ApplyAddShrinkRequest {
	s.CorpName = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetDefaultStandardShrink(v string) *ApplyAddShrinkRequest {
	s.DefaultStandardShrink = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetDepartId(v string) *ApplyAddShrinkRequest {
	s.DepartId = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetDepartName(v string) *ApplyAddShrinkRequest {
	s.DepartName = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetExtendField(v string) *ApplyAddShrinkRequest {
	s.ExtendField = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetExternalTravelerListShrink(v string) *ApplyAddShrinkRequest {
	s.ExternalTravelerListShrink = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetExternalTravelerStandardShrink(v string) *ApplyAddShrinkRequest {
	s.ExternalTravelerStandardShrink = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetFlightBudget(v int64) *ApplyAddShrinkRequest {
	s.FlightBudget = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetHotelBudget(v int64) *ApplyAddShrinkRequest {
	s.HotelBudget = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetHotelShareShrink(v string) *ApplyAddShrinkRequest {
	s.HotelShareShrink = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetInternationalFlightCabins(v string) *ApplyAddShrinkRequest {
	s.InternationalFlightCabins = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetItineraryListShrink(v string) *ApplyAddShrinkRequest {
	s.ItineraryListShrink = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetItineraryRule(v int32) *ApplyAddShrinkRequest {
	s.ItineraryRule = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetItinerarySetListShrink(v string) *ApplyAddShrinkRequest {
	s.ItinerarySetListShrink = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetLimitTraveler(v int32) *ApplyAddShrinkRequest {
	s.LimitTraveler = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetPaymentDepartmentId(v string) *ApplyAddShrinkRequest {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetPaymentDepartmentName(v string) *ApplyAddShrinkRequest {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetStatus(v int32) *ApplyAddShrinkRequest {
	s.Status = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetSubCorpId(v string) *ApplyAddShrinkRequest {
	s.SubCorpId = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetThirdpartApplyId(v string) *ApplyAddShrinkRequest {
	s.ThirdpartApplyId = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetThirdpartBusinessId(v string) *ApplyAddShrinkRequest {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetThirdpartDepartId(v string) *ApplyAddShrinkRequest {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetTogetherBookRule(v int32) *ApplyAddShrinkRequest {
	s.TogetherBookRule = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetTrainBudget(v int64) *ApplyAddShrinkRequest {
	s.TrainBudget = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetTravelerListShrink(v string) *ApplyAddShrinkRequest {
	s.TravelerListShrink = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetTravelerStandardShrink(v string) *ApplyAddShrinkRequest {
	s.TravelerStandardShrink = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetTripCause(v string) *ApplyAddShrinkRequest {
	s.TripCause = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetTripDay(v int32) *ApplyAddShrinkRequest {
	s.TripDay = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetTripTitle(v string) *ApplyAddShrinkRequest {
	s.TripTitle = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetType(v int32) *ApplyAddShrinkRequest {
	s.Type = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetUnionNo(v string) *ApplyAddShrinkRequest {
	s.UnionNo = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetUserId(v string) *ApplyAddShrinkRequest {
	s.UserId = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetUserName(v string) *ApplyAddShrinkRequest {
	s.UserName = &v
	return s
}

func (s *ApplyAddShrinkRequest) SetVehicleBudget(v int64) *ApplyAddShrinkRequest {
	s.VehicleBudget = &v
	return s
}

type ApplyAddResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	Module *ApplyAddResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ApplyAddResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddResponseBody) GoString() string {
	return s.String()
}

func (s *ApplyAddResponseBody) SetCode(v string) *ApplyAddResponseBody {
	s.Code = &v
	return s
}

func (s *ApplyAddResponseBody) SetMessage(v string) *ApplyAddResponseBody {
	s.Message = &v
	return s
}

func (s *ApplyAddResponseBody) SetModule(v *ApplyAddResponseBodyModule) *ApplyAddResponseBody {
	s.Module = v
	return s
}

func (s *ApplyAddResponseBody) SetRequestId(v string) *ApplyAddResponseBody {
	s.RequestId = &v
	return s
}

func (s *ApplyAddResponseBody) SetSuccess(v bool) *ApplyAddResponseBody {
	s.Success = &v
	return s
}

func (s *ApplyAddResponseBody) SetTraceId(v string) *ApplyAddResponseBody {
	s.TraceId = &v
	return s
}

type ApplyAddResponseBodyModule struct {
	// example:
	//
	// thirdpart12132
	ApplyId *int64 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// thirdpart12132
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 20220702001
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
}

func (s ApplyAddResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddResponseBodyModule) GoString() string {
	return s.String()
}

func (s *ApplyAddResponseBodyModule) SetApplyId(v int64) *ApplyAddResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *ApplyAddResponseBodyModule) SetThirdpartApplyId(v string) *ApplyAddResponseBodyModule {
	s.ThirdpartApplyId = &v
	return s
}

func (s *ApplyAddResponseBodyModule) SetThirdpartBusinessId(v string) *ApplyAddResponseBodyModule {
	s.ThirdpartBusinessId = &v
	return s
}

type ApplyAddResponse struct {
	Headers    map[string]*string    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ApplyAddResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ApplyAddResponse) String() string {
	return tea.Prettify(s)
}

func (s ApplyAddResponse) GoString() string {
	return s.String()
}

func (s *ApplyAddResponse) SetHeaders(v map[string]*string) *ApplyAddResponse {
	s.Headers = v
	return s
}

func (s *ApplyAddResponse) SetStatusCode(v int32) *ApplyAddResponse {
	s.StatusCode = &v
	return s
}

func (s *ApplyAddResponse) SetBody(v *ApplyAddResponseBody) *ApplyAddResponse {
	s.Body = v
	return s
}

type ApplyApproveHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ApplyApproveHeaders) String() string {
	return tea.Prettify(s)
}

func (s ApplyApproveHeaders) GoString() string {
	return s.String()
}

func (s *ApplyApproveHeaders) SetCommonHeaders(v map[string]*string) *ApplyApproveHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ApplyApproveHeaders) SetXAcsBtripSoCorpToken(v string) *ApplyApproveHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ApplyApproveRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// sdfg
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	Note    *string `json:"note,omitempty" xml:"note,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-07-12 16:12:53
	OperateTime *string `json:"operate_time,omitempty" xml:"operate_time,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// btrip123
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// thirdpart12138
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyApproveRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyApproveRequest) GoString() string {
	return s.String()
}

func (s *ApplyApproveRequest) SetApplyId(v string) *ApplyApproveRequest {
	s.ApplyId = &v
	return s
}

func (s *ApplyApproveRequest) SetNote(v string) *ApplyApproveRequest {
	s.Note = &v
	return s
}

func (s *ApplyApproveRequest) SetOperateTime(v string) *ApplyApproveRequest {
	s.OperateTime = &v
	return s
}

func (s *ApplyApproveRequest) SetStatus(v int32) *ApplyApproveRequest {
	s.Status = &v
	return s
}

func (s *ApplyApproveRequest) SetSubCorpId(v string) *ApplyApproveRequest {
	s.SubCorpId = &v
	return s
}

func (s *ApplyApproveRequest) SetUserId(v string) *ApplyApproveRequest {
	s.UserId = &v
	return s
}

func (s *ApplyApproveRequest) SetUserName(v string) *ApplyApproveRequest {
	s.UserName = &v
	return s
}

type ApplyApproveResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	//
	// example:
	//
	// module
	Module *string `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ApplyApproveResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ApplyApproveResponseBody) GoString() string {
	return s.String()
}

func (s *ApplyApproveResponseBody) SetCode(v string) *ApplyApproveResponseBody {
	s.Code = &v
	return s
}

func (s *ApplyApproveResponseBody) SetMessage(v string) *ApplyApproveResponseBody {
	s.Message = &v
	return s
}

func (s *ApplyApproveResponseBody) SetModule(v string) *ApplyApproveResponseBody {
	s.Module = &v
	return s
}

func (s *ApplyApproveResponseBody) SetRequestId(v string) *ApplyApproveResponseBody {
	s.RequestId = &v
	return s
}

func (s *ApplyApproveResponseBody) SetSuccess(v bool) *ApplyApproveResponseBody {
	s.Success = &v
	return s
}

func (s *ApplyApproveResponseBody) SetTraceId(v string) *ApplyApproveResponseBody {
	s.TraceId = &v
	return s
}

type ApplyApproveResponse struct {
	Headers    map[string]*string        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ApplyApproveResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ApplyApproveResponse) String() string {
	return tea.Prettify(s)
}

func (s ApplyApproveResponse) GoString() string {
	return s.String()
}

func (s *ApplyApproveResponse) SetHeaders(v map[string]*string) *ApplyApproveResponse {
	s.Headers = v
	return s
}

func (s *ApplyApproveResponse) SetStatusCode(v int32) *ApplyApproveResponse {
	s.StatusCode = &v
	return s
}

func (s *ApplyApproveResponse) SetBody(v *ApplyApproveResponseBody) *ApplyApproveResponse {
	s.Body = v
	return s
}

type ApplyExternalNodeStatusUpdateHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s ApplyExternalNodeStatusUpdateHeaders) String() string {
	return tea.Prettify(s)
}

func (s ApplyExternalNodeStatusUpdateHeaders) GoString() string {
	return s.String()
}

func (s *ApplyExternalNodeStatusUpdateHeaders) SetCommonHeaders(v map[string]*string) *ApplyExternalNodeStatusUpdateHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ApplyExternalNodeStatusUpdateHeaders) SetXAcsBtripCorpToken(v string) *ApplyExternalNodeStatusUpdateHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type ApplyExternalNodeStatusUpdateRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 123
	NodeId           *string                                                 `json:"node_id,omitempty" xml:"node_id,omitempty"`
	OperationRecords []*ApplyExternalNodeStatusUpdateRequestOperationRecords `json:"operation_records,omitempty" xml:"operation_records,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// PROCESS_AGREE
	ProcessActionResult *string `json:"process_action_result,omitempty" xml:"process_action_result,omitempty"`
}

func (s ApplyExternalNodeStatusUpdateRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyExternalNodeStatusUpdateRequest) GoString() string {
	return s.String()
}

func (s *ApplyExternalNodeStatusUpdateRequest) SetNodeId(v string) *ApplyExternalNodeStatusUpdateRequest {
	s.NodeId = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateRequest) SetOperationRecords(v []*ApplyExternalNodeStatusUpdateRequestOperationRecords) *ApplyExternalNodeStatusUpdateRequest {
	s.OperationRecords = v
	return s
}

func (s *ApplyExternalNodeStatusUpdateRequest) SetProcessActionResult(v string) *ApplyExternalNodeStatusUpdateRequest {
	s.ProcessActionResult = &v
	return s
}

type ApplyExternalNodeStatusUpdateRequestOperationRecords struct {
	Comment *string `json:"comment,omitempty" xml:"comment,omitempty"`
	// example:
	//
	// 2023-05-28 11:33:28
	OperateTime  *string `json:"operate_time,omitempty" xml:"operate_time,omitempty"`
	OperatorName *string `json:"operator_name,omitempty" xml:"operator_name,omitempty"`
	// example:
	//
	// AGREE
	Result *string `json:"result,omitempty" xml:"result,omitempty"`
	// example:
	//
	// PROCESS_APPROVE
	Type *string `json:"type,omitempty" xml:"type,omitempty"`
}

func (s ApplyExternalNodeStatusUpdateRequestOperationRecords) String() string {
	return tea.Prettify(s)
}

func (s ApplyExternalNodeStatusUpdateRequestOperationRecords) GoString() string {
	return s.String()
}

func (s *ApplyExternalNodeStatusUpdateRequestOperationRecords) SetComment(v string) *ApplyExternalNodeStatusUpdateRequestOperationRecords {
	s.Comment = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateRequestOperationRecords) SetOperateTime(v string) *ApplyExternalNodeStatusUpdateRequestOperationRecords {
	s.OperateTime = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateRequestOperationRecords) SetOperatorName(v string) *ApplyExternalNodeStatusUpdateRequestOperationRecords {
	s.OperatorName = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateRequestOperationRecords) SetResult(v string) *ApplyExternalNodeStatusUpdateRequestOperationRecords {
	s.Result = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateRequestOperationRecords) SetType(v string) *ApplyExternalNodeStatusUpdateRequestOperationRecords {
	s.Type = &v
	return s
}

type ApplyExternalNodeStatusUpdateShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 123
	NodeId                 *string `json:"node_id,omitempty" xml:"node_id,omitempty"`
	OperationRecordsShrink *string `json:"operation_records,omitempty" xml:"operation_records,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// PROCESS_AGREE
	ProcessActionResult *string `json:"process_action_result,omitempty" xml:"process_action_result,omitempty"`
}

func (s ApplyExternalNodeStatusUpdateShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyExternalNodeStatusUpdateShrinkRequest) GoString() string {
	return s.String()
}

func (s *ApplyExternalNodeStatusUpdateShrinkRequest) SetNodeId(v string) *ApplyExternalNodeStatusUpdateShrinkRequest {
	s.NodeId = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateShrinkRequest) SetOperationRecordsShrink(v string) *ApplyExternalNodeStatusUpdateShrinkRequest {
	s.OperationRecordsShrink = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateShrinkRequest) SetProcessActionResult(v string) *ApplyExternalNodeStatusUpdateShrinkRequest {
	s.ProcessActionResult = &v
	return s
}

type ApplyExternalNodeStatusUpdateResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// true
	Module *bool `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210f079416784321627628333de4ab
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ApplyExternalNodeStatusUpdateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ApplyExternalNodeStatusUpdateResponseBody) GoString() string {
	return s.String()
}

func (s *ApplyExternalNodeStatusUpdateResponseBody) SetCode(v string) *ApplyExternalNodeStatusUpdateResponseBody {
	s.Code = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateResponseBody) SetMessage(v string) *ApplyExternalNodeStatusUpdateResponseBody {
	s.Message = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateResponseBody) SetModule(v bool) *ApplyExternalNodeStatusUpdateResponseBody {
	s.Module = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateResponseBody) SetRequestId(v string) *ApplyExternalNodeStatusUpdateResponseBody {
	s.RequestId = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateResponseBody) SetSuccess(v bool) *ApplyExternalNodeStatusUpdateResponseBody {
	s.Success = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateResponseBody) SetTraceId(v string) *ApplyExternalNodeStatusUpdateResponseBody {
	s.TraceId = &v
	return s
}

type ApplyExternalNodeStatusUpdateResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ApplyExternalNodeStatusUpdateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ApplyExternalNodeStatusUpdateResponse) String() string {
	return tea.Prettify(s)
}

func (s ApplyExternalNodeStatusUpdateResponse) GoString() string {
	return s.String()
}

func (s *ApplyExternalNodeStatusUpdateResponse) SetHeaders(v map[string]*string) *ApplyExternalNodeStatusUpdateResponse {
	s.Headers = v
	return s
}

func (s *ApplyExternalNodeStatusUpdateResponse) SetStatusCode(v int32) *ApplyExternalNodeStatusUpdateResponse {
	s.StatusCode = &v
	return s
}

func (s *ApplyExternalNodeStatusUpdateResponse) SetBody(v *ApplyExternalNodeStatusUpdateResponseBody) *ApplyExternalNodeStatusUpdateResponse {
	s.Body = v
	return s
}

type ApplyInvoiceTaskHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ApplyInvoiceTaskHeaders) String() string {
	return tea.Prettify(s)
}

func (s ApplyInvoiceTaskHeaders) GoString() string {
	return s.String()
}

func (s *ApplyInvoiceTaskHeaders) SetCommonHeaders(v map[string]*string) *ApplyInvoiceTaskHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ApplyInvoiceTaskHeaders) SetXAcsBtripSoCorpToken(v string) *ApplyInvoiceTaskHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ApplyInvoiceTaskRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 2022-12-01
	BillDate *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
	// This parameter is required.
	InvoiceTaskList []*ApplyInvoiceTaskRequestInvoiceTaskList `json:"invoice_task_list,omitempty" xml:"invoice_task_list,omitempty" type:"Repeated"`
}

func (s ApplyInvoiceTaskRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyInvoiceTaskRequest) GoString() string {
	return s.String()
}

func (s *ApplyInvoiceTaskRequest) SetBillDate(v string) *ApplyInvoiceTaskRequest {
	s.BillDate = &v
	return s
}

func (s *ApplyInvoiceTaskRequest) SetInvoiceTaskList(v []*ApplyInvoiceTaskRequestInvoiceTaskList) *ApplyInvoiceTaskRequest {
	s.InvoiceTaskList = v
	return s
}

type ApplyInvoiceTaskRequestInvoiceTaskList struct {
	Contact *string `json:"contact,omitempty" xml:"contact,omitempty"`
	Email   *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// 0
	FlightInvoiceFee *string `json:"flight_invoice_fee,omitempty" xml:"flight_invoice_fee,omitempty"`
	// example:
	//
	// 3.12
	FuPointInvoiceFee *string `json:"fu_point_invoice_fee,omitempty" xml:"fu_point_invoice_fee,omitempty"`
	// example:
	//
	// 0
	HotelNormalInvoiceFee *string `json:"hotel_normal_invoice_fee,omitempty" xml:"hotel_normal_invoice_fee,omitempty"`
	// example:
	//
	// 100
	HotelSpecialInvoiceFee *string `json:"hotel_special_invoice_fee,omitempty" xml:"hotel_special_invoice_fee,omitempty"`
	// example:
	//
	// 0
	InternationalFlightInvoiceFee *string `json:"international_flight_invoice_fee,omitempty" xml:"international_flight_invoice_fee,omitempty"`
	InternationalHotelInvoiceFee  *string `json:"international_hotel_invoice_fee,omitempty" xml:"international_hotel_invoice_fee,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	InvoiceThirdPartId   *string `json:"invoice_third_part_id,omitempty" xml:"invoice_third_part_id,omitempty"`
	InvoiceType          *int32  `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	MailAddress          *string `json:"mail_address,omitempty" xml:"mail_address,omitempty"`
	MailCity             *string `json:"mail_city,omitempty" xml:"mail_city,omitempty"`
	MailFullAddress      *string `json:"mail_full_address,omitempty" xml:"mail_full_address,omitempty"`
	MailProvince         *string `json:"mail_province,omitempty" xml:"mail_province,omitempty"`
	MealNormalInvoiceFee *string `json:"meal_normal_invoice_fee,omitempty" xml:"meal_normal_invoice_fee,omitempty"`
	// example:
	//
	// 0
	PenaltyFee *string `json:"penalty_fee,omitempty" xml:"penalty_fee,omitempty"`
	Remark     *string `json:"remark,omitempty" xml:"remark,omitempty"`
	// example:
	//
	// 1.02
	ServiceFee *string `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 1234567890
	Telephone                          *string `json:"telephone,omitempty" xml:"telephone,omitempty"`
	TrainAccelerationPackageInvoiceFee *string `json:"train_acceleration_package_invoice_fee,omitempty" xml:"train_acceleration_package_invoice_fee,omitempty"`
	// example:
	//
	// 0
	TrainInvoiceFee *string `json:"train_invoice_fee,omitempty" xml:"train_invoice_fee,omitempty"`
	// example:
	//
	// 100
	VehicleInvoiceFee *string `json:"vehicle_invoice_fee,omitempty" xml:"vehicle_invoice_fee,omitempty"`
}

func (s ApplyInvoiceTaskRequestInvoiceTaskList) String() string {
	return tea.Prettify(s)
}

func (s ApplyInvoiceTaskRequestInvoiceTaskList) GoString() string {
	return s.String()
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetContact(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.Contact = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetEmail(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.Email = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetFlightInvoiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.FlightInvoiceFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetFuPointInvoiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.FuPointInvoiceFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetHotelNormalInvoiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.HotelNormalInvoiceFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetHotelSpecialInvoiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.HotelSpecialInvoiceFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetInternationalFlightInvoiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.InternationalFlightInvoiceFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetInternationalHotelInvoiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.InternationalHotelInvoiceFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetInvoiceThirdPartId(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.InvoiceThirdPartId = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetInvoiceType(v int32) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.InvoiceType = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetMailAddress(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.MailAddress = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetMailCity(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.MailCity = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetMailFullAddress(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.MailFullAddress = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetMailProvince(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.MailProvince = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetMealNormalInvoiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.MealNormalInvoiceFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetPenaltyFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.PenaltyFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetRemark(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.Remark = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetServiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.ServiceFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetTelephone(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.Telephone = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetTrainAccelerationPackageInvoiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.TrainAccelerationPackageInvoiceFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetTrainInvoiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.TrainInvoiceFee = &v
	return s
}

func (s *ApplyInvoiceTaskRequestInvoiceTaskList) SetVehicleInvoiceFee(v string) *ApplyInvoiceTaskRequestInvoiceTaskList {
	s.VehicleInvoiceFee = &v
	return s
}

type ApplyInvoiceTaskShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 2022-12-01
	BillDate *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
	// This parameter is required.
	InvoiceTaskListShrink *string `json:"invoice_task_list,omitempty" xml:"invoice_task_list,omitempty"`
}

func (s ApplyInvoiceTaskShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyInvoiceTaskShrinkRequest) GoString() string {
	return s.String()
}

func (s *ApplyInvoiceTaskShrinkRequest) SetBillDate(v string) *ApplyInvoiceTaskShrinkRequest {
	s.BillDate = &v
	return s
}

func (s *ApplyInvoiceTaskShrinkRequest) SetInvoiceTaskListShrink(v string) *ApplyInvoiceTaskShrinkRequest {
	s.InvoiceTaskListShrink = &v
	return s
}

type ApplyInvoiceTaskResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// requestId
	//
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ApplyInvoiceTaskResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ApplyInvoiceTaskResponseBody) GoString() string {
	return s.String()
}

func (s *ApplyInvoiceTaskResponseBody) SetCode(v string) *ApplyInvoiceTaskResponseBody {
	s.Code = &v
	return s
}

func (s *ApplyInvoiceTaskResponseBody) SetMessage(v string) *ApplyInvoiceTaskResponseBody {
	s.Message = &v
	return s
}

func (s *ApplyInvoiceTaskResponseBody) SetRequestId(v string) *ApplyInvoiceTaskResponseBody {
	s.RequestId = &v
	return s
}

func (s *ApplyInvoiceTaskResponseBody) SetSuccess(v bool) *ApplyInvoiceTaskResponseBody {
	s.Success = &v
	return s
}

func (s *ApplyInvoiceTaskResponseBody) SetTraceId(v string) *ApplyInvoiceTaskResponseBody {
	s.TraceId = &v
	return s
}

type ApplyInvoiceTaskResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ApplyInvoiceTaskResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ApplyInvoiceTaskResponse) String() string {
	return tea.Prettify(s)
}

func (s ApplyInvoiceTaskResponse) GoString() string {
	return s.String()
}

func (s *ApplyInvoiceTaskResponse) SetHeaders(v map[string]*string) *ApplyInvoiceTaskResponse {
	s.Headers = v
	return s
}

func (s *ApplyInvoiceTaskResponse) SetStatusCode(v int32) *ApplyInvoiceTaskResponse {
	s.StatusCode = &v
	return s
}

func (s *ApplyInvoiceTaskResponse) SetBody(v *ApplyInvoiceTaskResponseBody) *ApplyInvoiceTaskResponse {
	s.Body = v
	return s
}

type ApplyListQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ApplyListQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryHeaders) GoString() string {
	return s.String()
}

func (s *ApplyListQueryHeaders) SetCommonHeaders(v map[string]*string) *ApplyListQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ApplyListQueryHeaders) SetXAcsBtripSoCorpToken(v string) *ApplyListQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ApplyListQueryRequest struct {
	// example:
	//
	// true
	AllApply *bool `json:"all_apply,omitempty" xml:"all_apply,omitempty"`
	// example:
	//
	// dept1
	DepartId *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	// example:
	//
	// 2017-05-01 00:00:00
	EndTime *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 2018-05-01 00:00:00
	GmtModified *string `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	// example:
	//
	// false
	OnlyShangLvApply *bool `json:"only_shang_lv_apply,omitempty" xml:"only_shang_lv_apply,omitempty"`
	// example:
	//
	// 1
	Page *int32 `json:"page,omitempty" xml:"page,omitempty"`
	// example:
	//
	// 10
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 2017-05-01 00:00:00
	StartTime *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// btrip123
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
	// example:
	//
	// 2
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
	// example:
	//
	// abs123
	UnionNo *string `json:"union_no,omitempty" xml:"union_no,omitempty"`
	// example:
	//
	// user1
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s ApplyListQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryRequest) GoString() string {
	return s.String()
}

func (s *ApplyListQueryRequest) SetAllApply(v bool) *ApplyListQueryRequest {
	s.AllApply = &v
	return s
}

func (s *ApplyListQueryRequest) SetDepartId(v string) *ApplyListQueryRequest {
	s.DepartId = &v
	return s
}

func (s *ApplyListQueryRequest) SetEndTime(v string) *ApplyListQueryRequest {
	s.EndTime = &v
	return s
}

func (s *ApplyListQueryRequest) SetGmtModified(v string) *ApplyListQueryRequest {
	s.GmtModified = &v
	return s
}

func (s *ApplyListQueryRequest) SetOnlyShangLvApply(v bool) *ApplyListQueryRequest {
	s.OnlyShangLvApply = &v
	return s
}

func (s *ApplyListQueryRequest) SetPage(v int32) *ApplyListQueryRequest {
	s.Page = &v
	return s
}

func (s *ApplyListQueryRequest) SetPageSize(v int32) *ApplyListQueryRequest {
	s.PageSize = &v
	return s
}

func (s *ApplyListQueryRequest) SetStartTime(v string) *ApplyListQueryRequest {
	s.StartTime = &v
	return s
}

func (s *ApplyListQueryRequest) SetSubCorpId(v string) *ApplyListQueryRequest {
	s.SubCorpId = &v
	return s
}

func (s *ApplyListQueryRequest) SetType(v int32) *ApplyListQueryRequest {
	s.Type = &v
	return s
}

func (s *ApplyListQueryRequest) SetUnionNo(v string) *ApplyListQueryRequest {
	s.UnionNo = &v
	return s
}

func (s *ApplyListQueryRequest) SetUserId(v string) *ApplyListQueryRequest {
	s.UserId = &v
	return s
}

type ApplyListQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code       *string                                 `json:"code,omitempty" xml:"code,omitempty"`
	Message    *string                                 `json:"message,omitempty" xml:"message,omitempty"`
	ModuleList []*ApplyListQueryResponseBodyModuleList `json:"module_list,omitempty" xml:"module_list,omitempty" type:"Repeated"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ApplyListQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryResponseBody) GoString() string {
	return s.String()
}

func (s *ApplyListQueryResponseBody) SetCode(v string) *ApplyListQueryResponseBody {
	s.Code = &v
	return s
}

func (s *ApplyListQueryResponseBody) SetMessage(v string) *ApplyListQueryResponseBody {
	s.Message = &v
	return s
}

func (s *ApplyListQueryResponseBody) SetModuleList(v []*ApplyListQueryResponseBodyModuleList) *ApplyListQueryResponseBody {
	s.ModuleList = v
	return s
}

func (s *ApplyListQueryResponseBody) SetRequestId(v string) *ApplyListQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *ApplyListQueryResponseBody) SetSuccess(v bool) *ApplyListQueryResponseBody {
	s.Success = &v
	return s
}

func (s *ApplyListQueryResponseBody) SetTraceId(v string) *ApplyListQueryResponseBody {
	s.TraceId = &v
	return s
}

type ApplyListQueryResponseBodyModuleList struct {
	// example:
	//
	// 201710111505000464651
	ApplyShowId  *string                                             `json:"apply_show_id,omitempty" xml:"apply_show_id,omitempty"`
	ApproverList []*ApplyListQueryResponseBodyModuleListApproverList `json:"approver_list,omitempty" xml:"approver_list,omitempty" type:"Repeated"`
	CarRule      *ApplyListQueryResponseBodyModuleListCarRule        `json:"car_rule,omitempty" xml:"car_rule,omitempty" type:"Struct"`
	// example:
	//
	// corp1
	CorpId *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	// example:
	//
	// abc
	CorpName *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	// example:
	//
	// depart1
	DepartId             *string                                                     `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName           *string                                                     `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	ExternalTravelerList []*ApplyListQueryResponseBodyModuleListExternalTravelerList `json:"external_traveler_list,omitempty" xml:"external_traveler_list,omitempty" type:"Repeated"`
	// example:
	//
	// abc1234
	FlowCode *string `json:"flow_code,omitempty" xml:"flow_code,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	GmtModified *string `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	// example:
	//
	// 1476
	Id            *int64                                               `json:"id,omitempty" xml:"id,omitempty"`
	ItineraryList []*ApplyListQueryResponseBodyModuleListItineraryList `json:"itinerary_list,omitempty" xml:"itinerary_list,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	ItineraryRule         *int32                                                  `json:"itinerary_rule,omitempty" xml:"itinerary_rule,omitempty"`
	ItinerarySetList      []*ApplyListQueryResponseBodyModuleListItinerarySetList `json:"itinerary_set_list,omitempty" xml:"itinerary_set_list,omitempty" type:"Repeated"`
	JobNo                 *string                                                 `json:"job_no,omitempty" xml:"job_no,omitempty"`
	PaymentDepartmentId   *string                                                 `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string                                                 `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 1
	Status     *int32  `json:"status,omitempty" xml:"status,omitempty"`
	StatusDesc *string `json:"status_desc,omitempty" xml:"status_desc,omitempty"`
	// example:
	//
	// abc
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	// example:
	//
	// abc
	ThirdpartId  *string                                             `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
	TravelerList []*ApplyListQueryResponseBodyModuleListTravelerList `json:"traveler_list,omitempty" xml:"traveler_list,omitempty" type:"Repeated"`
	TripCause    *string                                             `json:"trip_cause,omitempty" xml:"trip_cause,omitempty"`
	// example:
	//
	// 1
	TripDay   *int32  `json:"trip_day,omitempty" xml:"trip_day,omitempty"`
	TripTitle *string `json:"trip_title,omitempty" xml:"trip_title,omitempty"`
	// example:
	//
	// 2
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
	// example:
	//
	// abc
	UnionNo *string `json:"union_no,omitempty" xml:"union_no,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyListQueryResponseBodyModuleList) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryResponseBodyModuleList) GoString() string {
	return s.String()
}

func (s *ApplyListQueryResponseBodyModuleList) SetApplyShowId(v string) *ApplyListQueryResponseBodyModuleList {
	s.ApplyShowId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetApproverList(v []*ApplyListQueryResponseBodyModuleListApproverList) *ApplyListQueryResponseBodyModuleList {
	s.ApproverList = v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetCarRule(v *ApplyListQueryResponseBodyModuleListCarRule) *ApplyListQueryResponseBodyModuleList {
	s.CarRule = v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetCorpId(v string) *ApplyListQueryResponseBodyModuleList {
	s.CorpId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetCorpName(v string) *ApplyListQueryResponseBodyModuleList {
	s.CorpName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetDepartId(v string) *ApplyListQueryResponseBodyModuleList {
	s.DepartId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetDepartName(v string) *ApplyListQueryResponseBodyModuleList {
	s.DepartName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetExternalTravelerList(v []*ApplyListQueryResponseBodyModuleListExternalTravelerList) *ApplyListQueryResponseBodyModuleList {
	s.ExternalTravelerList = v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetFlowCode(v string) *ApplyListQueryResponseBodyModuleList {
	s.FlowCode = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetGmtCreate(v string) *ApplyListQueryResponseBodyModuleList {
	s.GmtCreate = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetGmtModified(v string) *ApplyListQueryResponseBodyModuleList {
	s.GmtModified = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetId(v int64) *ApplyListQueryResponseBodyModuleList {
	s.Id = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetItineraryList(v []*ApplyListQueryResponseBodyModuleListItineraryList) *ApplyListQueryResponseBodyModuleList {
	s.ItineraryList = v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetItineraryRule(v int32) *ApplyListQueryResponseBodyModuleList {
	s.ItineraryRule = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetItinerarySetList(v []*ApplyListQueryResponseBodyModuleListItinerarySetList) *ApplyListQueryResponseBodyModuleList {
	s.ItinerarySetList = v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetJobNo(v string) *ApplyListQueryResponseBodyModuleList {
	s.JobNo = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetPaymentDepartmentId(v string) *ApplyListQueryResponseBodyModuleList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetPaymentDepartmentName(v string) *ApplyListQueryResponseBodyModuleList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetStatus(v int32) *ApplyListQueryResponseBodyModuleList {
	s.Status = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetStatusDesc(v string) *ApplyListQueryResponseBodyModuleList {
	s.StatusDesc = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetThirdpartBusinessId(v string) *ApplyListQueryResponseBodyModuleList {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetThirdpartId(v string) *ApplyListQueryResponseBodyModuleList {
	s.ThirdpartId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetTravelerList(v []*ApplyListQueryResponseBodyModuleListTravelerList) *ApplyListQueryResponseBodyModuleList {
	s.TravelerList = v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetTripCause(v string) *ApplyListQueryResponseBodyModuleList {
	s.TripCause = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetTripDay(v int32) *ApplyListQueryResponseBodyModuleList {
	s.TripDay = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetTripTitle(v string) *ApplyListQueryResponseBodyModuleList {
	s.TripTitle = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetType(v int32) *ApplyListQueryResponseBodyModuleList {
	s.Type = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetUnionNo(v string) *ApplyListQueryResponseBodyModuleList {
	s.UnionNo = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetUserId(v string) *ApplyListQueryResponseBodyModuleList {
	s.UserId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleList) SetUserName(v string) *ApplyListQueryResponseBodyModuleList {
	s.UserName = &v
	return s
}

type ApplyListQueryResponseBodyModuleListApproverList struct {
	Note *string `json:"note,omitempty" xml:"note,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	OperateTime *string `json:"operate_time,omitempty" xml:"operate_time,omitempty"`
	// example:
	//
	// 1
	Order *int32 `json:"order,omitempty" xml:"order,omitempty"`
	// example:
	//
	// 1
	Status     *int32  `json:"status,omitempty" xml:"status,omitempty"`
	StatusDesc *string `json:"status_desc,omitempty" xml:"status_desc,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyListQueryResponseBodyModuleListApproverList) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryResponseBodyModuleListApproverList) GoString() string {
	return s.String()
}

func (s *ApplyListQueryResponseBodyModuleListApproverList) SetNote(v string) *ApplyListQueryResponseBodyModuleListApproverList {
	s.Note = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListApproverList) SetOperateTime(v string) *ApplyListQueryResponseBodyModuleListApproverList {
	s.OperateTime = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListApproverList) SetOrder(v int32) *ApplyListQueryResponseBodyModuleListApproverList {
	s.Order = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListApproverList) SetStatus(v int32) *ApplyListQueryResponseBodyModuleListApproverList {
	s.Status = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListApproverList) SetStatusDesc(v string) *ApplyListQueryResponseBodyModuleListApproverList {
	s.StatusDesc = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListApproverList) SetUserId(v string) *ApplyListQueryResponseBodyModuleListApproverList {
	s.UserId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListApproverList) SetUserName(v string) *ApplyListQueryResponseBodyModuleListApproverList {
	s.UserName = &v
	return s
}

type ApplyListQueryResponseBodyModuleListCarRule struct {
	ScenarioTemplateId   *string `json:"scenario_template_id,omitempty" xml:"scenario_template_id,omitempty"`
	ScenarioTemplateName *string `json:"scenario_template_name,omitempty" xml:"scenario_template_name,omitempty"`
}

func (s ApplyListQueryResponseBodyModuleListCarRule) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryResponseBodyModuleListCarRule) GoString() string {
	return s.String()
}

func (s *ApplyListQueryResponseBodyModuleListCarRule) SetScenarioTemplateId(v string) *ApplyListQueryResponseBodyModuleListCarRule {
	s.ScenarioTemplateId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListCarRule) SetScenarioTemplateName(v string) *ApplyListQueryResponseBodyModuleListCarRule {
	s.ScenarioTemplateName = &v
	return s
}

type ApplyListQueryResponseBodyModuleListExternalTravelerList struct {
	Attribute             *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	CostCenterName        *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	DepartId              *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	InvoiceName           *string `json:"invoice_name,omitempty" xml:"invoice_name,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	ProjectCode           *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle          *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdpartDepartId     *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	UserName              *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyListQueryResponseBodyModuleListExternalTravelerList) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryResponseBodyModuleListExternalTravelerList) GoString() string {
	return s.String()
}

func (s *ApplyListQueryResponseBodyModuleListExternalTravelerList) SetAttribute(v string) *ApplyListQueryResponseBodyModuleListExternalTravelerList {
	s.Attribute = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListExternalTravelerList) SetCostCenterName(v string) *ApplyListQueryResponseBodyModuleListExternalTravelerList {
	s.CostCenterName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListExternalTravelerList) SetDepartId(v string) *ApplyListQueryResponseBodyModuleListExternalTravelerList {
	s.DepartId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListExternalTravelerList) SetInvoiceName(v string) *ApplyListQueryResponseBodyModuleListExternalTravelerList {
	s.InvoiceName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListExternalTravelerList) SetPaymentDepartmentName(v string) *ApplyListQueryResponseBodyModuleListExternalTravelerList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListExternalTravelerList) SetProjectCode(v string) *ApplyListQueryResponseBodyModuleListExternalTravelerList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListExternalTravelerList) SetProjectTitle(v string) *ApplyListQueryResponseBodyModuleListExternalTravelerList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListExternalTravelerList) SetThirdpartDepartId(v string) *ApplyListQueryResponseBodyModuleListExternalTravelerList {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListExternalTravelerList) SetUserName(v string) *ApplyListQueryResponseBodyModuleListExternalTravelerList {
	s.UserName = &v
	return s
}

type ApplyListQueryResponseBodyModuleListItineraryList struct {
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	ArrDate        *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	DepCity        *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	DepDate     *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	InvoiceName *string `json:"invoice_name,omitempty" xml:"invoice_name,omitempty"`
	// example:
	//
	// abcd
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	// example:
	//
	// xm1
	ProjectCode           *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle          *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	ThirdpartInvoiceId    *string `json:"thirdpart_invoice_id,omitempty" xml:"thirdpart_invoice_id,omitempty"`
	ThirdpartItineraryId  *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// 0
	TrafficType *int32 `json:"traffic_type,omitempty" xml:"traffic_type,omitempty"`
	// example:
	//
	// 1
	TripWay *int32 `json:"trip_way,omitempty" xml:"trip_way,omitempty"`
}

func (s ApplyListQueryResponseBodyModuleListItineraryList) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryResponseBodyModuleListItineraryList) GoString() string {
	return s.String()
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetArrCity(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.ArrCity = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetArrDate(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.ArrDate = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetCostCenterName(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.CostCenterName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetDepCity(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.DepCity = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetDepDate(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.DepDate = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetInvoiceName(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.InvoiceName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetItineraryId(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.ItineraryId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetProjectCode(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetProjectTitle(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetThirdpartCostCenterId(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetThirdpartInvoiceId(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.ThirdpartInvoiceId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetThirdpartItineraryId(v string) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetTrafficType(v int32) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.TrafficType = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItineraryList) SetTripWay(v int32) *ApplyListQueryResponseBodyModuleListItineraryList {
	s.TripWay = &v
	return s
}

type ApplyListQueryResponseBodyModuleListItinerarySetList struct {
	// example:
	//
	// 2018-09-19T14:03Z
	ArrDate *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	// example:
	//
	// BJS，HGH
	CityCodeSet    *string `json:"city_code_set,omitempty" xml:"city_code_set,omitempty"`
	CitySet        *string `json:"city_set,omitempty" xml:"city_set,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	DepDate     *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	InvoiceName *string `json:"invoice_name,omitempty" xml:"invoice_name,omitempty"`
	// example:
	//
	// abcd
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	// example:
	//
	// 12345
	ProjectCode           *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle          *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	ThirdpartInvoiceId    *string `json:"thirdpart_invoice_id,omitempty" xml:"thirdpart_invoice_id,omitempty"`
	ThirdpartItineraryId  *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// 0
	TrafficType *int32 `json:"traffic_type,omitempty" xml:"traffic_type,omitempty"`
}

func (s ApplyListQueryResponseBodyModuleListItinerarySetList) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryResponseBodyModuleListItinerarySetList) GoString() string {
	return s.String()
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetArrDate(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.ArrDate = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetCityCodeSet(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.CityCodeSet = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetCitySet(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.CitySet = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetCostCenterName(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.CostCenterName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetDepDate(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.DepDate = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetInvoiceName(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.InvoiceName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetItineraryId(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.ItineraryId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetProjectCode(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetProjectTitle(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetThirdpartCostCenterId(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetThirdpartInvoiceId(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.ThirdpartInvoiceId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetThirdpartItineraryId(v string) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListItinerarySetList) SetTrafficType(v int32) *ApplyListQueryResponseBodyModuleListItinerarySetList {
	s.TrafficType = &v
	return s
}

type ApplyListQueryResponseBodyModuleListTravelerList struct {
	Attribute             *string                                                       `json:"attribute,omitempty" xml:"attribute,omitempty"`
	CarCitySet            []*ApplyListQueryResponseBodyModuleListTravelerListCarCitySet `json:"car_city_set,omitempty" xml:"car_city_set,omitempty" type:"Repeated"`
	CostCenterName        *string                                                       `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	DepartId              *string                                                       `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	InvoiceName           *string                                                       `json:"invoice_name,omitempty" xml:"invoice_name,omitempty"`
	JobNo                 *string                                                       `json:"job_no,omitempty" xml:"job_no,omitempty"`
	PaymentDepartmentName *string                                                       `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	ProjectCode           *string                                                       `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle          *string                                                       `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdpartDepartId     *string                                                       `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyListQueryResponseBodyModuleListTravelerList) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryResponseBodyModuleListTravelerList) GoString() string {
	return s.String()
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetAttribute(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.Attribute = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetCarCitySet(v []*ApplyListQueryResponseBodyModuleListTravelerListCarCitySet) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.CarCitySet = v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetCostCenterName(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.CostCenterName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetDepartId(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.DepartId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetInvoiceName(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.InvoiceName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetJobNo(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.JobNo = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetPaymentDepartmentName(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetProjectCode(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetProjectTitle(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetThirdpartDepartId(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetUserId(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.UserId = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerList) SetUserName(v string) *ApplyListQueryResponseBodyModuleListTravelerList {
	s.UserName = &v
	return s
}

type ApplyListQueryResponseBodyModuleListTravelerListCarCitySet struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
}

func (s ApplyListQueryResponseBodyModuleListTravelerListCarCitySet) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryResponseBodyModuleListTravelerListCarCitySet) GoString() string {
	return s.String()
}

func (s *ApplyListQueryResponseBodyModuleListTravelerListCarCitySet) SetCityCode(v string) *ApplyListQueryResponseBodyModuleListTravelerListCarCitySet {
	s.CityCode = &v
	return s
}

func (s *ApplyListQueryResponseBodyModuleListTravelerListCarCitySet) SetCityName(v string) *ApplyListQueryResponseBodyModuleListTravelerListCarCitySet {
	s.CityName = &v
	return s
}

type ApplyListQueryResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ApplyListQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ApplyListQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s ApplyListQueryResponse) GoString() string {
	return s.String()
}

func (s *ApplyListQueryResponse) SetHeaders(v map[string]*string) *ApplyListQueryResponse {
	s.Headers = v
	return s
}

func (s *ApplyListQueryResponse) SetStatusCode(v int32) *ApplyListQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *ApplyListQueryResponse) SetBody(v *ApplyListQueryResponseBody) *ApplyListQueryResponse {
	s.Body = v
	return s
}

type ApplyModifyHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ApplyModifyHeaders) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyHeaders) GoString() string {
	return s.String()
}

func (s *ApplyModifyHeaders) SetCommonHeaders(v map[string]*string) *ApplyModifyHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ApplyModifyHeaders) SetXAcsBtripSoCorpToken(v string) *ApplyModifyHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ApplyModifyRequest struct {
	// example:
	//
	// 4000
	Budget *int64 `json:"budget,omitempty" xml:"budget,omitempty"`
	// example:
	//
	// 1
	BudgetMerge     *int32                             `json:"budget_merge,omitempty" xml:"budget_merge,omitempty"`
	CarRule         *ApplyModifyRequestCarRule         `json:"car_rule,omitempty" xml:"car_rule,omitempty" type:"Struct"`
	CorpName        *string                            `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	DefaultStandard *ApplyModifyRequestDefaultStandard `json:"default_standard,omitempty" xml:"default_standard,omitempty" type:"Struct"`
	// example:
	//
	// 001
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// 可将补充描述传入此字段，账单中将会体现此字段的值。可以用于企业的统计和对账
	//
	// example:
	//
	// {"cost_center":"成本中心"}
	ExtendField              *string                                     `json:"extend_field,omitempty" xml:"extend_field,omitempty"`
	ExternalTravelerList     []*ApplyModifyRequestExternalTravelerList   `json:"external_traveler_list,omitempty" xml:"external_traveler_list,omitempty" type:"Repeated"`
	ExternalTravelerStandard *ApplyModifyRequestExternalTravelerStandard `json:"external_traveler_standard,omitempty" xml:"external_traveler_standard,omitempty" type:"Struct"`
	// example:
	//
	// 1000
	FlightBudget *int64 `json:"flight_budget,omitempty" xml:"flight_budget,omitempty"`
	// example:
	//
	// 1000
	HotelBudget *int64                        `json:"hotel_budget,omitempty" xml:"hotel_budget,omitempty"`
	HotelShare  *ApplyModifyRequestHotelShare `json:"hotel_share,omitempty" xml:"hotel_share,omitempty" type:"Struct"`
	// example:
	//
	// 0
	ItineraryList []*ApplyModifyRequestItineraryList `json:"itinerary_list,omitempty" xml:"itinerary_list,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	ItineraryRule    *int32                                `json:"itinerary_rule,omitempty" xml:"itinerary_rule,omitempty"`
	ItinerarySetList []*ApplyModifyRequestItinerarySetList `json:"itinerary_set_list,omitempty" xml:"itinerary_set_list,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	LimitTraveler         *int32  `json:"limit_traveler,omitempty" xml:"limit_traveler,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// 子企业Id
	//
	// example:
	//
	// btrip123
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0001A1100000007EX08O
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 202201413141
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	ThirdpartDepartId   *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	// example:
	//
	// 1
	TogetherBookRule *int32 `json:"together_book_rule,omitempty" xml:"together_book_rule,omitempty"`
	// example:
	//
	// 1000
	TrainBudget      *int64                                `json:"train_budget,omitempty" xml:"train_budget,omitempty"`
	TravelerList     []*ApplyModifyRequestTravelerList     `json:"traveler_list,omitempty" xml:"traveler_list,omitempty" type:"Repeated"`
	TravelerStandard []*ApplyModifyRequestTravelerStandard `json:"traveler_standard,omitempty" xml:"traveler_standard,omitempty" type:"Repeated"`
	// This parameter is required.
	TripCause *string `json:"trip_cause,omitempty" xml:"trip_cause,omitempty"`
	// example:
	//
	// 1
	TripDay *int32 `json:"trip_day,omitempty" xml:"trip_day,omitempty"`
	// This parameter is required.
	TripTitle *string `json:"trip_title,omitempty" xml:"trip_title,omitempty"`
	// example:
	//
	// union51415
	UnionNo *string `json:"union_no,omitempty" xml:"union_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// thirdpart12138
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	// example:
	//
	// 1000
	VehicleBudget *int64 `json:"vehicle_budget,omitempty" xml:"vehicle_budget,omitempty"`
}

func (s ApplyModifyRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequest) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequest) SetBudget(v int64) *ApplyModifyRequest {
	s.Budget = &v
	return s
}

func (s *ApplyModifyRequest) SetBudgetMerge(v int32) *ApplyModifyRequest {
	s.BudgetMerge = &v
	return s
}

func (s *ApplyModifyRequest) SetCarRule(v *ApplyModifyRequestCarRule) *ApplyModifyRequest {
	s.CarRule = v
	return s
}

func (s *ApplyModifyRequest) SetCorpName(v string) *ApplyModifyRequest {
	s.CorpName = &v
	return s
}

func (s *ApplyModifyRequest) SetDefaultStandard(v *ApplyModifyRequestDefaultStandard) *ApplyModifyRequest {
	s.DefaultStandard = v
	return s
}

func (s *ApplyModifyRequest) SetDepartId(v string) *ApplyModifyRequest {
	s.DepartId = &v
	return s
}

func (s *ApplyModifyRequest) SetDepartName(v string) *ApplyModifyRequest {
	s.DepartName = &v
	return s
}

func (s *ApplyModifyRequest) SetExtendField(v string) *ApplyModifyRequest {
	s.ExtendField = &v
	return s
}

func (s *ApplyModifyRequest) SetExternalTravelerList(v []*ApplyModifyRequestExternalTravelerList) *ApplyModifyRequest {
	s.ExternalTravelerList = v
	return s
}

func (s *ApplyModifyRequest) SetExternalTravelerStandard(v *ApplyModifyRequestExternalTravelerStandard) *ApplyModifyRequest {
	s.ExternalTravelerStandard = v
	return s
}

func (s *ApplyModifyRequest) SetFlightBudget(v int64) *ApplyModifyRequest {
	s.FlightBudget = &v
	return s
}

func (s *ApplyModifyRequest) SetHotelBudget(v int64) *ApplyModifyRequest {
	s.HotelBudget = &v
	return s
}

func (s *ApplyModifyRequest) SetHotelShare(v *ApplyModifyRequestHotelShare) *ApplyModifyRequest {
	s.HotelShare = v
	return s
}

func (s *ApplyModifyRequest) SetItineraryList(v []*ApplyModifyRequestItineraryList) *ApplyModifyRequest {
	s.ItineraryList = v
	return s
}

func (s *ApplyModifyRequest) SetItineraryRule(v int32) *ApplyModifyRequest {
	s.ItineraryRule = &v
	return s
}

func (s *ApplyModifyRequest) SetItinerarySetList(v []*ApplyModifyRequestItinerarySetList) *ApplyModifyRequest {
	s.ItinerarySetList = v
	return s
}

func (s *ApplyModifyRequest) SetLimitTraveler(v int32) *ApplyModifyRequest {
	s.LimitTraveler = &v
	return s
}

func (s *ApplyModifyRequest) SetPaymentDepartmentId(v string) *ApplyModifyRequest {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyModifyRequest) SetPaymentDepartmentName(v string) *ApplyModifyRequest {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyModifyRequest) SetStatus(v int32) *ApplyModifyRequest {
	s.Status = &v
	return s
}

func (s *ApplyModifyRequest) SetSubCorpId(v string) *ApplyModifyRequest {
	s.SubCorpId = &v
	return s
}

func (s *ApplyModifyRequest) SetThirdpartApplyId(v string) *ApplyModifyRequest {
	s.ThirdpartApplyId = &v
	return s
}

func (s *ApplyModifyRequest) SetThirdpartBusinessId(v string) *ApplyModifyRequest {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *ApplyModifyRequest) SetThirdpartDepartId(v string) *ApplyModifyRequest {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyModifyRequest) SetTogetherBookRule(v int32) *ApplyModifyRequest {
	s.TogetherBookRule = &v
	return s
}

func (s *ApplyModifyRequest) SetTrainBudget(v int64) *ApplyModifyRequest {
	s.TrainBudget = &v
	return s
}

func (s *ApplyModifyRequest) SetTravelerList(v []*ApplyModifyRequestTravelerList) *ApplyModifyRequest {
	s.TravelerList = v
	return s
}

func (s *ApplyModifyRequest) SetTravelerStandard(v []*ApplyModifyRequestTravelerStandard) *ApplyModifyRequest {
	s.TravelerStandard = v
	return s
}

func (s *ApplyModifyRequest) SetTripCause(v string) *ApplyModifyRequest {
	s.TripCause = &v
	return s
}

func (s *ApplyModifyRequest) SetTripDay(v int32) *ApplyModifyRequest {
	s.TripDay = &v
	return s
}

func (s *ApplyModifyRequest) SetTripTitle(v string) *ApplyModifyRequest {
	s.TripTitle = &v
	return s
}

func (s *ApplyModifyRequest) SetUnionNo(v string) *ApplyModifyRequest {
	s.UnionNo = &v
	return s
}

func (s *ApplyModifyRequest) SetUserId(v string) *ApplyModifyRequest {
	s.UserId = &v
	return s
}

func (s *ApplyModifyRequest) SetUserName(v string) *ApplyModifyRequest {
	s.UserName = &v
	return s
}

func (s *ApplyModifyRequest) SetVehicleBudget(v int64) *ApplyModifyRequest {
	s.VehicleBudget = &v
	return s
}

type ApplyModifyRequestCarRule struct {
	ScenarioTemplateId   *string `json:"scenario_template_id,omitempty" xml:"scenario_template_id,omitempty"`
	ScenarioTemplateName *string `json:"scenario_template_name,omitempty" xml:"scenario_template_name,omitempty"`
}

func (s ApplyModifyRequestCarRule) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestCarRule) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestCarRule) SetScenarioTemplateId(v string) *ApplyModifyRequestCarRule {
	s.ScenarioTemplateId = &v
	return s
}

func (s *ApplyModifyRequestCarRule) SetScenarioTemplateName(v string) *ApplyModifyRequestCarRule {
	s.ScenarioTemplateName = &v
	return s
}

type ApplyModifyRequestDefaultStandard struct {
	BusinessDiscount       *int32                                             `json:"business_discount,omitempty" xml:"business_discount,omitempty"`
	EconomyDiscount        *int32                                             `json:"economy_discount,omitempty" xml:"economy_discount,omitempty"`
	FirstDiscount          *int32                                             `json:"first_discount,omitempty" xml:"first_discount,omitempty"`
	FlightCabins           *string                                            `json:"flight_cabins,omitempty" xml:"flight_cabins,omitempty"`
	FlightIntlRuleCode     *int64                                             `json:"flight_intl_rule_code,omitempty" xml:"flight_intl_rule_code,omitempty"`
	FlightRuleCode         *int64                                             `json:"flight_rule_code,omitempty" xml:"flight_rule_code,omitempty"`
	HotelCitys             []*ApplyModifyRequestDefaultStandardHotelCitys     `json:"hotel_citys,omitempty" xml:"hotel_citys,omitempty" type:"Repeated"`
	HotelIntlCitys         []*ApplyModifyRequestDefaultStandardHotelIntlCitys `json:"hotel_intl_citys,omitempty" xml:"hotel_intl_citys,omitempty" type:"Repeated"`
	HotelIntlRuleCode      *int64                                             `json:"hotel_intl_rule_code,omitempty" xml:"hotel_intl_rule_code,omitempty"`
	HotelRuleCode          *int64                                             `json:"hotel_rule_code,omitempty" xml:"hotel_rule_code,omitempty"`
	PremiumEconomyDiscount *int32                                             `json:"premium_economy_discount,omitempty" xml:"premium_economy_discount,omitempty"`
	ReserveType            *int32                                             `json:"reserve_type,omitempty" xml:"reserve_type,omitempty"`
	TrainRuleCode          *int64                                             `json:"train_rule_code,omitempty" xml:"train_rule_code,omitempty"`
	TrainSeats             *string                                            `json:"train_seats,omitempty" xml:"train_seats,omitempty"`
}

func (s ApplyModifyRequestDefaultStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestDefaultStandard) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestDefaultStandard) SetBusinessDiscount(v int32) *ApplyModifyRequestDefaultStandard {
	s.BusinessDiscount = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetEconomyDiscount(v int32) *ApplyModifyRequestDefaultStandard {
	s.EconomyDiscount = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetFirstDiscount(v int32) *ApplyModifyRequestDefaultStandard {
	s.FirstDiscount = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetFlightCabins(v string) *ApplyModifyRequestDefaultStandard {
	s.FlightCabins = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetFlightIntlRuleCode(v int64) *ApplyModifyRequestDefaultStandard {
	s.FlightIntlRuleCode = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetFlightRuleCode(v int64) *ApplyModifyRequestDefaultStandard {
	s.FlightRuleCode = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetHotelCitys(v []*ApplyModifyRequestDefaultStandardHotelCitys) *ApplyModifyRequestDefaultStandard {
	s.HotelCitys = v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetHotelIntlCitys(v []*ApplyModifyRequestDefaultStandardHotelIntlCitys) *ApplyModifyRequestDefaultStandard {
	s.HotelIntlCitys = v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetHotelIntlRuleCode(v int64) *ApplyModifyRequestDefaultStandard {
	s.HotelIntlRuleCode = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetHotelRuleCode(v int64) *ApplyModifyRequestDefaultStandard {
	s.HotelRuleCode = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetPremiumEconomyDiscount(v int32) *ApplyModifyRequestDefaultStandard {
	s.PremiumEconomyDiscount = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetReserveType(v int32) *ApplyModifyRequestDefaultStandard {
	s.ReserveType = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetTrainRuleCode(v int64) *ApplyModifyRequestDefaultStandard {
	s.TrainRuleCode = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandard) SetTrainSeats(v string) *ApplyModifyRequestDefaultStandard {
	s.TrainSeats = &v
	return s
}

type ApplyModifyRequestDefaultStandardHotelCitys struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Fee      *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyModifyRequestDefaultStandardHotelCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestDefaultStandardHotelCitys) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestDefaultStandardHotelCitys) SetCityCode(v string) *ApplyModifyRequestDefaultStandardHotelCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandardHotelCitys) SetCityName(v string) *ApplyModifyRequestDefaultStandardHotelCitys {
	s.CityName = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandardHotelCitys) SetFee(v int64) *ApplyModifyRequestDefaultStandardHotelCitys {
	s.Fee = &v
	return s
}

type ApplyModifyRequestDefaultStandardHotelIntlCitys struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Fee      *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyModifyRequestDefaultStandardHotelIntlCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestDefaultStandardHotelIntlCitys) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestDefaultStandardHotelIntlCitys) SetCityCode(v string) *ApplyModifyRequestDefaultStandardHotelIntlCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandardHotelIntlCitys) SetCityName(v string) *ApplyModifyRequestDefaultStandardHotelIntlCitys {
	s.CityName = &v
	return s
}

func (s *ApplyModifyRequestDefaultStandardHotelIntlCitys) SetFee(v int64) *ApplyModifyRequestDefaultStandardHotelIntlCitys {
	s.Fee = &v
	return s
}

type ApplyModifyRequestExternalTravelerList struct {
	Attribute             *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	CostCenterId          *int64  `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	InvoiceId             *int64  `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	ProjectCode           *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle          *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdPartInvoiceId    *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	ThirdpartDepartId     *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	UserName              *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	UserNameEn            *string `json:"user_name_en,omitempty" xml:"user_name_en,omitempty"`
}

func (s ApplyModifyRequestExternalTravelerList) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestExternalTravelerList) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestExternalTravelerList) SetAttribute(v string) *ApplyModifyRequestExternalTravelerList {
	s.Attribute = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetCostCenterId(v int64) *ApplyModifyRequestExternalTravelerList {
	s.CostCenterId = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetInvoiceId(v int64) *ApplyModifyRequestExternalTravelerList {
	s.InvoiceId = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetPaymentDepartmentId(v string) *ApplyModifyRequestExternalTravelerList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetPaymentDepartmentName(v string) *ApplyModifyRequestExternalTravelerList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetProjectCode(v string) *ApplyModifyRequestExternalTravelerList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetProjectTitle(v string) *ApplyModifyRequestExternalTravelerList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetThirdPartInvoiceId(v string) *ApplyModifyRequestExternalTravelerList {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetThirdpartCostCenterId(v string) *ApplyModifyRequestExternalTravelerList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetThirdpartDepartId(v string) *ApplyModifyRequestExternalTravelerList {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetUserName(v string) *ApplyModifyRequestExternalTravelerList {
	s.UserName = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerList) SetUserNameEn(v string) *ApplyModifyRequestExternalTravelerList {
	s.UserNameEn = &v
	return s
}

type ApplyModifyRequestExternalTravelerStandard struct {
	// example:
	//
	// 1
	BusinessDiscount *int32 `json:"business_discount,omitempty" xml:"business_discount,omitempty"`
	// example:
	//
	// 1
	EconomyDiscount *int32 `json:"economy_discount,omitempty" xml:"economy_discount,omitempty"`
	// example:
	//
	// 1
	FirstDiscount *int32 `json:"first_discount,omitempty" xml:"first_discount,omitempty"`
	// example:
	//
	// Y
	FlightCabins       *string                                                     `json:"flight_cabins,omitempty" xml:"flight_cabins,omitempty"`
	FlightIntlRuleCode *int64                                                      `json:"flight_intl_rule_code,omitempty" xml:"flight_intl_rule_code,omitempty"`
	FlightRuleCode     *int64                                                      `json:"flight_rule_code,omitempty" xml:"flight_rule_code,omitempty"`
	HotelCitys         []*ApplyModifyRequestExternalTravelerStandardHotelCitys     `json:"hotel_citys,omitempty" xml:"hotel_citys,omitempty" type:"Repeated"`
	HotelIntlCitys     []*ApplyModifyRequestExternalTravelerStandardHotelIntlCitys `json:"hotel_intl_citys,omitempty" xml:"hotel_intl_citys,omitempty" type:"Repeated"`
	HotelIntlRuleCode  *int64                                                      `json:"hotel_intl_rule_code,omitempty" xml:"hotel_intl_rule_code,omitempty"`
	HotelRuleCode      *int64                                                      `json:"hotel_rule_code,omitempty" xml:"hotel_rule_code,omitempty"`
	// 超级经济舱折扣。1到10的整数
	//
	// example:
	//
	// 1
	PremiumEconomyDiscount *int32 `json:"premium_economy_discount,omitempty" xml:"premium_economy_discount,omitempty"`
	// example:
	//
	// 0
	ReserveType   *int32 `json:"reserve_type,omitempty" xml:"reserve_type,omitempty"`
	TrainRuleCode *int64 `json:"train_rule_code,omitempty" xml:"train_rule_code,omitempty"`
	// example:
	//
	// 1
	TrainSeats *string `json:"train_seats,omitempty" xml:"train_seats,omitempty"`
}

func (s ApplyModifyRequestExternalTravelerStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestExternalTravelerStandard) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetBusinessDiscount(v int32) *ApplyModifyRequestExternalTravelerStandard {
	s.BusinessDiscount = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetEconomyDiscount(v int32) *ApplyModifyRequestExternalTravelerStandard {
	s.EconomyDiscount = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetFirstDiscount(v int32) *ApplyModifyRequestExternalTravelerStandard {
	s.FirstDiscount = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetFlightCabins(v string) *ApplyModifyRequestExternalTravelerStandard {
	s.FlightCabins = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetFlightIntlRuleCode(v int64) *ApplyModifyRequestExternalTravelerStandard {
	s.FlightIntlRuleCode = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetFlightRuleCode(v int64) *ApplyModifyRequestExternalTravelerStandard {
	s.FlightRuleCode = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetHotelCitys(v []*ApplyModifyRequestExternalTravelerStandardHotelCitys) *ApplyModifyRequestExternalTravelerStandard {
	s.HotelCitys = v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetHotelIntlCitys(v []*ApplyModifyRequestExternalTravelerStandardHotelIntlCitys) *ApplyModifyRequestExternalTravelerStandard {
	s.HotelIntlCitys = v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetHotelIntlRuleCode(v int64) *ApplyModifyRequestExternalTravelerStandard {
	s.HotelIntlRuleCode = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetHotelRuleCode(v int64) *ApplyModifyRequestExternalTravelerStandard {
	s.HotelRuleCode = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetPremiumEconomyDiscount(v int32) *ApplyModifyRequestExternalTravelerStandard {
	s.PremiumEconomyDiscount = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetReserveType(v int32) *ApplyModifyRequestExternalTravelerStandard {
	s.ReserveType = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetTrainRuleCode(v int64) *ApplyModifyRequestExternalTravelerStandard {
	s.TrainRuleCode = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandard) SetTrainSeats(v string) *ApplyModifyRequestExternalTravelerStandard {
	s.TrainSeats = &v
	return s
}

type ApplyModifyRequestExternalTravelerStandardHotelCitys struct {
	// example:
	//
	// 0
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 1001
	Fee *int64 `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyModifyRequestExternalTravelerStandardHotelCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestExternalTravelerStandardHotelCitys) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestExternalTravelerStandardHotelCitys) SetCityCode(v string) *ApplyModifyRequestExternalTravelerStandardHotelCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandardHotelCitys) SetCityName(v string) *ApplyModifyRequestExternalTravelerStandardHotelCitys {
	s.CityName = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandardHotelCitys) SetFee(v int64) *ApplyModifyRequestExternalTravelerStandardHotelCitys {
	s.Fee = &v
	return s
}

type ApplyModifyRequestExternalTravelerStandardHotelIntlCitys struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Fee      *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyModifyRequestExternalTravelerStandardHotelIntlCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestExternalTravelerStandardHotelIntlCitys) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestExternalTravelerStandardHotelIntlCitys) SetCityCode(v string) *ApplyModifyRequestExternalTravelerStandardHotelIntlCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandardHotelIntlCitys) SetCityName(v string) *ApplyModifyRequestExternalTravelerStandardHotelIntlCitys {
	s.CityName = &v
	return s
}

func (s *ApplyModifyRequestExternalTravelerStandardHotelIntlCitys) SetFee(v int64) *ApplyModifyRequestExternalTravelerStandardHotelIntlCitys {
	s.Fee = &v
	return s
}

type ApplyModifyRequestHotelShare struct {
	// example:
	//
	// 70
	Param *string `json:"param,omitempty" xml:"param,omitempty"`
	// example:
	//
	// 1
	Type *string `json:"type,omitempty" xml:"type,omitempty"`
}

func (s ApplyModifyRequestHotelShare) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestHotelShare) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestHotelShare) SetParam(v string) *ApplyModifyRequestHotelShare {
	s.Param = &v
	return s
}

func (s *ApplyModifyRequestHotelShare) SetType(v string) *ApplyModifyRequestHotelShare {
	s.Type = &v
	return s
}

type ApplyModifyRequestItineraryList struct {
	// This parameter is required.
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-07-12 00:00:00
	ArrDate   *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	Attribute *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	// example:
	//
	// 2021413
	CostCenterId *int64 `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	// This parameter is required.
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-07-12 00:00:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 614141
	InvoiceId *int64 `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2000131
	ItineraryId             *string                                                 `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	ItineraryTravelStandard *ApplyModifyRequestItineraryListItineraryTravelStandard `json:"itinerary_travel_standard,omitempty" xml:"itinerary_travel_standard,omitempty" type:"Struct"`
	// example:
	//
	// true
	NeedHotel *bool `json:"need_hotel,omitempty" xml:"need_hotel,omitempty"`
	// example:
	//
	// true
	NeedTraffic *bool `json:"need_traffic,omitempty" xml:"need_traffic,omitempty"`
	// example:
	//
	// projectone
	ProjectCode               *string   `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle              *string   `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ProvinceTravelCityAdcodes []*string `json:"province_travel_city_adcodes,omitempty" xml:"province_travel_city_adcodes,omitempty" type:"Repeated"`
	// example:
	//
	// ZG14131
	ThirdPartInvoiceId *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	// example:
	//
	// thirdpart5151
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	TrafficType *int32 `json:"traffic_type,omitempty" xml:"traffic_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	TripWay *int32 `json:"trip_way,omitempty" xml:"trip_way,omitempty"`
}

func (s ApplyModifyRequestItineraryList) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestItineraryList) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestItineraryList) SetArrCity(v string) *ApplyModifyRequestItineraryList {
	s.ArrCity = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetArrCityCode(v string) *ApplyModifyRequestItineraryList {
	s.ArrCityCode = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetArrDate(v string) *ApplyModifyRequestItineraryList {
	s.ArrDate = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetAttribute(v string) *ApplyModifyRequestItineraryList {
	s.Attribute = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetCostCenterId(v int64) *ApplyModifyRequestItineraryList {
	s.CostCenterId = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetDepCity(v string) *ApplyModifyRequestItineraryList {
	s.DepCity = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetDepCityCode(v string) *ApplyModifyRequestItineraryList {
	s.DepCityCode = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetDepDate(v string) *ApplyModifyRequestItineraryList {
	s.DepDate = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetInvoiceId(v int64) *ApplyModifyRequestItineraryList {
	s.InvoiceId = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetItineraryId(v string) *ApplyModifyRequestItineraryList {
	s.ItineraryId = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetItineraryTravelStandard(v *ApplyModifyRequestItineraryListItineraryTravelStandard) *ApplyModifyRequestItineraryList {
	s.ItineraryTravelStandard = v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetNeedHotel(v bool) *ApplyModifyRequestItineraryList {
	s.NeedHotel = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetNeedTraffic(v bool) *ApplyModifyRequestItineraryList {
	s.NeedTraffic = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetProjectCode(v string) *ApplyModifyRequestItineraryList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetProjectTitle(v string) *ApplyModifyRequestItineraryList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetProvinceTravelCityAdcodes(v []*string) *ApplyModifyRequestItineraryList {
	s.ProvinceTravelCityAdcodes = v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetThirdPartInvoiceId(v string) *ApplyModifyRequestItineraryList {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetThirdpartCostCenterId(v string) *ApplyModifyRequestItineraryList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetTrafficType(v int32) *ApplyModifyRequestItineraryList {
	s.TrafficType = &v
	return s
}

func (s *ApplyModifyRequestItineraryList) SetTripWay(v int32) *ApplyModifyRequestItineraryList {
	s.TripWay = &v
	return s
}

type ApplyModifyRequestItineraryListItineraryTravelStandard struct {
	HotelAvailableNightsPerDay *int32 `json:"hotel_available_nights_per_day,omitempty" xml:"hotel_available_nights_per_day,omitempty"`
}

func (s ApplyModifyRequestItineraryListItineraryTravelStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestItineraryListItineraryTravelStandard) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestItineraryListItineraryTravelStandard) SetHotelAvailableNightsPerDay(v int32) *ApplyModifyRequestItineraryListItineraryTravelStandard {
	s.HotelAvailableNightsPerDay = &v
	return s
}

type ApplyModifyRequestItinerarySetList struct {
	// example:
	//
	// 2017-01-01 00:00:00
	ArrDate   *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	Attribute *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	// example:
	//
	// BJS,SHA
	CityCodeSet *string `json:"city_code_set,omitempty" xml:"city_code_set,omitempty"`
	CitySet     *string `json:"city_set,omitempty" xml:"city_set,omitempty"`
	// example:
	//
	// 123455
	CostCenterId *int64 `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	// example:
	//
	// 2017-01-01 00:00:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 12344
	InvoiceId *int64 `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	// example:
	//
	// 20220722001
	ItineraryId             *string                                                    `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	ItineraryTravelStandard *ApplyModifyRequestItinerarySetListItineraryTravelStandard `json:"itinerary_travel_standard,omitempty" xml:"itinerary_travel_standard,omitempty" type:"Struct"`
	// example:
	//
	// projecttow
	ProjectCode               *string   `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle              *string   `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ProvinceTravelCityAdcodes []*string `json:"province_travel_city_adcodes,omitempty" xml:"province_travel_city_adcodes,omitempty" type:"Repeated"`
	// example:
	//
	// thridpart12138
	ThirdPartInvoiceId *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	// example:
	//
	// thridpart12138
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	// example:
	//
	// 0
	TrafficType *int32 `json:"traffic_type,omitempty" xml:"traffic_type,omitempty"`
}

func (s ApplyModifyRequestItinerarySetList) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestItinerarySetList) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestItinerarySetList) SetArrDate(v string) *ApplyModifyRequestItinerarySetList {
	s.ArrDate = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetAttribute(v string) *ApplyModifyRequestItinerarySetList {
	s.Attribute = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetCityCodeSet(v string) *ApplyModifyRequestItinerarySetList {
	s.CityCodeSet = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetCitySet(v string) *ApplyModifyRequestItinerarySetList {
	s.CitySet = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetCostCenterId(v int64) *ApplyModifyRequestItinerarySetList {
	s.CostCenterId = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetDepDate(v string) *ApplyModifyRequestItinerarySetList {
	s.DepDate = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetInvoiceId(v int64) *ApplyModifyRequestItinerarySetList {
	s.InvoiceId = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetItineraryId(v string) *ApplyModifyRequestItinerarySetList {
	s.ItineraryId = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetItineraryTravelStandard(v *ApplyModifyRequestItinerarySetListItineraryTravelStandard) *ApplyModifyRequestItinerarySetList {
	s.ItineraryTravelStandard = v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetProjectCode(v string) *ApplyModifyRequestItinerarySetList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetProjectTitle(v string) *ApplyModifyRequestItinerarySetList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetProvinceTravelCityAdcodes(v []*string) *ApplyModifyRequestItinerarySetList {
	s.ProvinceTravelCityAdcodes = v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetThirdPartInvoiceId(v string) *ApplyModifyRequestItinerarySetList {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetThirdpartCostCenterId(v string) *ApplyModifyRequestItinerarySetList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyModifyRequestItinerarySetList) SetTrafficType(v int32) *ApplyModifyRequestItinerarySetList {
	s.TrafficType = &v
	return s
}

type ApplyModifyRequestItinerarySetListItineraryTravelStandard struct {
	HotelAvailableNightsPerDay *int32 `json:"hotel_available_nights_per_day,omitempty" xml:"hotel_available_nights_per_day,omitempty"`
}

func (s ApplyModifyRequestItinerarySetListItineraryTravelStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestItinerarySetListItineraryTravelStandard) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestItinerarySetListItineraryTravelStandard) SetHotelAvailableNightsPerDay(v int32) *ApplyModifyRequestItinerarySetListItineraryTravelStandard {
	s.HotelAvailableNightsPerDay = &v
	return s
}

type ApplyModifyRequestTravelerList struct {
	Attribute             *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	CostCenterId          *int64  `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	InvoiceId             *int64  `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	ProjectCode           *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle          *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdPartInvoiceId    *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	ThirdpartDepartId     *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	// example:
	//
	// GS641312
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyModifyRequestTravelerList) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestTravelerList) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestTravelerList) SetAttribute(v string) *ApplyModifyRequestTravelerList {
	s.Attribute = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetCostCenterId(v int64) *ApplyModifyRequestTravelerList {
	s.CostCenterId = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetInvoiceId(v int64) *ApplyModifyRequestTravelerList {
	s.InvoiceId = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetPaymentDepartmentId(v string) *ApplyModifyRequestTravelerList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetPaymentDepartmentName(v string) *ApplyModifyRequestTravelerList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetProjectCode(v string) *ApplyModifyRequestTravelerList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetProjectTitle(v string) *ApplyModifyRequestTravelerList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetThirdPartInvoiceId(v string) *ApplyModifyRequestTravelerList {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetThirdpartCostCenterId(v string) *ApplyModifyRequestTravelerList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetThirdpartDepartId(v string) *ApplyModifyRequestTravelerList {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetUserId(v string) *ApplyModifyRequestTravelerList {
	s.UserId = &v
	return s
}

func (s *ApplyModifyRequestTravelerList) SetUserName(v string) *ApplyModifyRequestTravelerList {
	s.UserName = &v
	return s
}

type ApplyModifyRequestTravelerStandard struct {
	// example:
	//
	// 1
	BusinessDiscount *int32                                          `json:"business_discount,omitempty" xml:"business_discount,omitempty"`
	CarCitySet       []*ApplyModifyRequestTravelerStandardCarCitySet `json:"car_city_set,omitempty" xml:"car_city_set,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	EconomyDiscount *int32 `json:"economy_discount,omitempty" xml:"economy_discount,omitempty"`
	// example:
	//
	// 1
	FirstDiscount *int32 `json:"first_discount,omitempty" xml:"first_discount,omitempty"`
	// example:
	//
	// Y
	FlightCabins       *string                                             `json:"flight_cabins,omitempty" xml:"flight_cabins,omitempty"`
	FlightIntlRuleCode *int64                                              `json:"flight_intl_rule_code,omitempty" xml:"flight_intl_rule_code,omitempty"`
	FlightRuleCode     *int64                                              `json:"flight_rule_code,omitempty" xml:"flight_rule_code,omitempty"`
	HotelCitys         []*ApplyModifyRequestTravelerStandardHotelCitys     `json:"hotel_citys,omitempty" xml:"hotel_citys,omitempty" type:"Repeated"`
	HotelIntlCitys     []*ApplyModifyRequestTravelerStandardHotelIntlCitys `json:"hotel_intl_citys,omitempty" xml:"hotel_intl_citys,omitempty" type:"Repeated"`
	HotelIntlRuleCode  *int64                                              `json:"hotel_intl_rule_code,omitempty" xml:"hotel_intl_rule_code,omitempty"`
	HotelRuleCode      *int64                                              `json:"hotel_rule_code,omitempty" xml:"hotel_rule_code,omitempty"`
	// 超级经济舱折扣。1到10的整数
	//
	// example:
	//
	// 1
	PremiumEconomyDiscount *int32 `json:"premium_economy_discount,omitempty" xml:"premium_economy_discount,omitempty"`
	// example:
	//
	// 0
	ReserveType   *int32 `json:"reserve_type,omitempty" xml:"reserve_type,omitempty"`
	TrainRuleCode *int64 `json:"train_rule_code,omitempty" xml:"train_rule_code,omitempty"`
	// example:
	//
	// 1
	TrainSeats *string `json:"train_seats,omitempty" xml:"train_seats,omitempty"`
	// example:
	//
	// thirdpart12138
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s ApplyModifyRequestTravelerStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestTravelerStandard) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestTravelerStandard) SetBusinessDiscount(v int32) *ApplyModifyRequestTravelerStandard {
	s.BusinessDiscount = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetCarCitySet(v []*ApplyModifyRequestTravelerStandardCarCitySet) *ApplyModifyRequestTravelerStandard {
	s.CarCitySet = v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetEconomyDiscount(v int32) *ApplyModifyRequestTravelerStandard {
	s.EconomyDiscount = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetFirstDiscount(v int32) *ApplyModifyRequestTravelerStandard {
	s.FirstDiscount = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetFlightCabins(v string) *ApplyModifyRequestTravelerStandard {
	s.FlightCabins = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetFlightIntlRuleCode(v int64) *ApplyModifyRequestTravelerStandard {
	s.FlightIntlRuleCode = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetFlightRuleCode(v int64) *ApplyModifyRequestTravelerStandard {
	s.FlightRuleCode = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetHotelCitys(v []*ApplyModifyRequestTravelerStandardHotelCitys) *ApplyModifyRequestTravelerStandard {
	s.HotelCitys = v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetHotelIntlCitys(v []*ApplyModifyRequestTravelerStandardHotelIntlCitys) *ApplyModifyRequestTravelerStandard {
	s.HotelIntlCitys = v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetHotelIntlRuleCode(v int64) *ApplyModifyRequestTravelerStandard {
	s.HotelIntlRuleCode = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetHotelRuleCode(v int64) *ApplyModifyRequestTravelerStandard {
	s.HotelRuleCode = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetPremiumEconomyDiscount(v int32) *ApplyModifyRequestTravelerStandard {
	s.PremiumEconomyDiscount = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetReserveType(v int32) *ApplyModifyRequestTravelerStandard {
	s.ReserveType = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetTrainRuleCode(v int64) *ApplyModifyRequestTravelerStandard {
	s.TrainRuleCode = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetTrainSeats(v string) *ApplyModifyRequestTravelerStandard {
	s.TrainSeats = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandard) SetUserId(v string) *ApplyModifyRequestTravelerStandard {
	s.UserId = &v
	return s
}

type ApplyModifyRequestTravelerStandardCarCitySet struct {
	// This parameter is required.
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	// This parameter is required.
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
}

func (s ApplyModifyRequestTravelerStandardCarCitySet) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestTravelerStandardCarCitySet) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestTravelerStandardCarCitySet) SetCityCode(v string) *ApplyModifyRequestTravelerStandardCarCitySet {
	s.CityCode = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandardCarCitySet) SetCityName(v string) *ApplyModifyRequestTravelerStandardCarCitySet {
	s.CityName = &v
	return s
}

type ApplyModifyRequestTravelerStandardHotelCitys struct {
	// example:
	//
	// 0
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 1014
	Fee *int64 `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyModifyRequestTravelerStandardHotelCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestTravelerStandardHotelCitys) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestTravelerStandardHotelCitys) SetCityCode(v string) *ApplyModifyRequestTravelerStandardHotelCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandardHotelCitys) SetCityName(v string) *ApplyModifyRequestTravelerStandardHotelCitys {
	s.CityName = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandardHotelCitys) SetFee(v int64) *ApplyModifyRequestTravelerStandardHotelCitys {
	s.Fee = &v
	return s
}

type ApplyModifyRequestTravelerStandardHotelIntlCitys struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Fee      *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyModifyRequestTravelerStandardHotelIntlCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyRequestTravelerStandardHotelIntlCitys) GoString() string {
	return s.String()
}

func (s *ApplyModifyRequestTravelerStandardHotelIntlCitys) SetCityCode(v string) *ApplyModifyRequestTravelerStandardHotelIntlCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandardHotelIntlCitys) SetCityName(v string) *ApplyModifyRequestTravelerStandardHotelIntlCitys {
	s.CityName = &v
	return s
}

func (s *ApplyModifyRequestTravelerStandardHotelIntlCitys) SetFee(v int64) *ApplyModifyRequestTravelerStandardHotelIntlCitys {
	s.Fee = &v
	return s
}

type ApplyModifyShrinkRequest struct {
	// example:
	//
	// 4000
	Budget *int64 `json:"budget,omitempty" xml:"budget,omitempty"`
	// example:
	//
	// 1
	BudgetMerge           *int32  `json:"budget_merge,omitempty" xml:"budget_merge,omitempty"`
	CarRuleShrink         *string `json:"car_rule,omitempty" xml:"car_rule,omitempty"`
	CorpName              *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	DefaultStandardShrink *string `json:"default_standard,omitempty" xml:"default_standard,omitempty"`
	// example:
	//
	// 001
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// 可将补充描述传入此字段，账单中将会体现此字段的值。可以用于企业的统计和对账
	//
	// example:
	//
	// {"cost_center":"成本中心"}
	ExtendField                    *string `json:"extend_field,omitempty" xml:"extend_field,omitempty"`
	ExternalTravelerListShrink     *string `json:"external_traveler_list,omitempty" xml:"external_traveler_list,omitempty"`
	ExternalTravelerStandardShrink *string `json:"external_traveler_standard,omitempty" xml:"external_traveler_standard,omitempty"`
	// example:
	//
	// 1000
	FlightBudget *int64 `json:"flight_budget,omitempty" xml:"flight_budget,omitempty"`
	// example:
	//
	// 1000
	HotelBudget      *int64  `json:"hotel_budget,omitempty" xml:"hotel_budget,omitempty"`
	HotelShareShrink *string `json:"hotel_share,omitempty" xml:"hotel_share,omitempty"`
	// example:
	//
	// 0
	ItineraryListShrink *string `json:"itinerary_list,omitempty" xml:"itinerary_list,omitempty"`
	// example:
	//
	// 0
	ItineraryRule          *int32  `json:"itinerary_rule,omitempty" xml:"itinerary_rule,omitempty"`
	ItinerarySetListShrink *string `json:"itinerary_set_list,omitempty" xml:"itinerary_set_list,omitempty"`
	// example:
	//
	// 0
	LimitTraveler         *int32  `json:"limit_traveler,omitempty" xml:"limit_traveler,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// 子企业Id
	//
	// example:
	//
	// btrip123
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0001A1100000007EX08O
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 202201413141
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	ThirdpartDepartId   *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	// example:
	//
	// 1
	TogetherBookRule *int32 `json:"together_book_rule,omitempty" xml:"together_book_rule,omitempty"`
	// example:
	//
	// 1000
	TrainBudget            *int64  `json:"train_budget,omitempty" xml:"train_budget,omitempty"`
	TravelerListShrink     *string `json:"traveler_list,omitempty" xml:"traveler_list,omitempty"`
	TravelerStandardShrink *string `json:"traveler_standard,omitempty" xml:"traveler_standard,omitempty"`
	// This parameter is required.
	TripCause *string `json:"trip_cause,omitempty" xml:"trip_cause,omitempty"`
	// example:
	//
	// 1
	TripDay *int32 `json:"trip_day,omitempty" xml:"trip_day,omitempty"`
	// This parameter is required.
	TripTitle *string `json:"trip_title,omitempty" xml:"trip_title,omitempty"`
	// example:
	//
	// union51415
	UnionNo *string `json:"union_no,omitempty" xml:"union_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// thirdpart12138
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	// example:
	//
	// 1000
	VehicleBudget *int64 `json:"vehicle_budget,omitempty" xml:"vehicle_budget,omitempty"`
}

func (s ApplyModifyShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyShrinkRequest) GoString() string {
	return s.String()
}

func (s *ApplyModifyShrinkRequest) SetBudget(v int64) *ApplyModifyShrinkRequest {
	s.Budget = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetBudgetMerge(v int32) *ApplyModifyShrinkRequest {
	s.BudgetMerge = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetCarRuleShrink(v string) *ApplyModifyShrinkRequest {
	s.CarRuleShrink = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetCorpName(v string) *ApplyModifyShrinkRequest {
	s.CorpName = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetDefaultStandardShrink(v string) *ApplyModifyShrinkRequest {
	s.DefaultStandardShrink = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetDepartId(v string) *ApplyModifyShrinkRequest {
	s.DepartId = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetDepartName(v string) *ApplyModifyShrinkRequest {
	s.DepartName = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetExtendField(v string) *ApplyModifyShrinkRequest {
	s.ExtendField = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetExternalTravelerListShrink(v string) *ApplyModifyShrinkRequest {
	s.ExternalTravelerListShrink = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetExternalTravelerStandardShrink(v string) *ApplyModifyShrinkRequest {
	s.ExternalTravelerStandardShrink = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetFlightBudget(v int64) *ApplyModifyShrinkRequest {
	s.FlightBudget = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetHotelBudget(v int64) *ApplyModifyShrinkRequest {
	s.HotelBudget = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetHotelShareShrink(v string) *ApplyModifyShrinkRequest {
	s.HotelShareShrink = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetItineraryListShrink(v string) *ApplyModifyShrinkRequest {
	s.ItineraryListShrink = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetItineraryRule(v int32) *ApplyModifyShrinkRequest {
	s.ItineraryRule = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetItinerarySetListShrink(v string) *ApplyModifyShrinkRequest {
	s.ItinerarySetListShrink = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetLimitTraveler(v int32) *ApplyModifyShrinkRequest {
	s.LimitTraveler = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetPaymentDepartmentId(v string) *ApplyModifyShrinkRequest {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetPaymentDepartmentName(v string) *ApplyModifyShrinkRequest {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetStatus(v int32) *ApplyModifyShrinkRequest {
	s.Status = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetSubCorpId(v string) *ApplyModifyShrinkRequest {
	s.SubCorpId = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetThirdpartApplyId(v string) *ApplyModifyShrinkRequest {
	s.ThirdpartApplyId = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetThirdpartBusinessId(v string) *ApplyModifyShrinkRequest {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetThirdpartDepartId(v string) *ApplyModifyShrinkRequest {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetTogetherBookRule(v int32) *ApplyModifyShrinkRequest {
	s.TogetherBookRule = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetTrainBudget(v int64) *ApplyModifyShrinkRequest {
	s.TrainBudget = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetTravelerListShrink(v string) *ApplyModifyShrinkRequest {
	s.TravelerListShrink = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetTravelerStandardShrink(v string) *ApplyModifyShrinkRequest {
	s.TravelerStandardShrink = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetTripCause(v string) *ApplyModifyShrinkRequest {
	s.TripCause = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetTripDay(v int32) *ApplyModifyShrinkRequest {
	s.TripDay = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetTripTitle(v string) *ApplyModifyShrinkRequest {
	s.TripTitle = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetUnionNo(v string) *ApplyModifyShrinkRequest {
	s.UnionNo = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetUserId(v string) *ApplyModifyShrinkRequest {
	s.UserId = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetUserName(v string) *ApplyModifyShrinkRequest {
	s.UserName = &v
	return s
}

func (s *ApplyModifyShrinkRequest) SetVehicleBudget(v int64) *ApplyModifyShrinkRequest {
	s.VehicleBudget = &v
	return s
}

type ApplyModifyResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	Module *ApplyModifyResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ApplyModifyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyResponseBody) GoString() string {
	return s.String()
}

func (s *ApplyModifyResponseBody) SetCode(v string) *ApplyModifyResponseBody {
	s.Code = &v
	return s
}

func (s *ApplyModifyResponseBody) SetMessage(v string) *ApplyModifyResponseBody {
	s.Message = &v
	return s
}

func (s *ApplyModifyResponseBody) SetModule(v *ApplyModifyResponseBodyModule) *ApplyModifyResponseBody {
	s.Module = v
	return s
}

func (s *ApplyModifyResponseBody) SetRequestId(v string) *ApplyModifyResponseBody {
	s.RequestId = &v
	return s
}

func (s *ApplyModifyResponseBody) SetSuccess(v bool) *ApplyModifyResponseBody {
	s.Success = &v
	return s
}

func (s *ApplyModifyResponseBody) SetTraceId(v string) *ApplyModifyResponseBody {
	s.TraceId = &v
	return s
}

type ApplyModifyResponseBodyModule struct {
	// example:
	//
	// 118526587
	ApplyId *int64 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// thirdpart12132
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 20220702001
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
}

func (s ApplyModifyResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyResponseBodyModule) GoString() string {
	return s.String()
}

func (s *ApplyModifyResponseBodyModule) SetApplyId(v int64) *ApplyModifyResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *ApplyModifyResponseBodyModule) SetThirdpartApplyId(v string) *ApplyModifyResponseBodyModule {
	s.ThirdpartApplyId = &v
	return s
}

func (s *ApplyModifyResponseBodyModule) SetThirdpartBusinessId(v string) *ApplyModifyResponseBodyModule {
	s.ThirdpartBusinessId = &v
	return s
}

type ApplyModifyResponse struct {
	Headers    map[string]*string       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ApplyModifyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ApplyModifyResponse) String() string {
	return tea.Prettify(s)
}

func (s ApplyModifyResponse) GoString() string {
	return s.String()
}

func (s *ApplyModifyResponse) SetHeaders(v map[string]*string) *ApplyModifyResponse {
	s.Headers = v
	return s
}

func (s *ApplyModifyResponse) SetStatusCode(v int32) *ApplyModifyResponse {
	s.StatusCode = &v
	return s
}

func (s *ApplyModifyResponse) SetBody(v *ApplyModifyResponseBody) *ApplyModifyResponse {
	s.Body = v
	return s
}

type ApplyQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ApplyQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryHeaders) GoString() string {
	return s.String()
}

func (s *ApplyQueryHeaders) SetCommonHeaders(v map[string]*string) *ApplyQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ApplyQueryHeaders) SetXAcsBtripSoCorpToken(v string) *ApplyQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ApplyQueryRequest struct {
	// example:
	//
	// 123
	ApplyId *int32 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 201710111505000464651
	ApplyShowId *string `json:"apply_show_id,omitempty" xml:"apply_show_id,omitempty"`
	// example:
	//
	// btrip123
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
	// example:
	//
	// adczd
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s ApplyQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryRequest) GoString() string {
	return s.String()
}

func (s *ApplyQueryRequest) SetApplyId(v int32) *ApplyQueryRequest {
	s.ApplyId = &v
	return s
}

func (s *ApplyQueryRequest) SetApplyShowId(v string) *ApplyQueryRequest {
	s.ApplyShowId = &v
	return s
}

func (s *ApplyQueryRequest) SetSubCorpId(v string) *ApplyQueryRequest {
	s.SubCorpId = &v
	return s
}

func (s *ApplyQueryRequest) SetThirdpartApplyId(v string) *ApplyQueryRequest {
	s.ThirdpartApplyId = &v
	return s
}

func (s *ApplyQueryRequest) SetType(v int32) *ApplyQueryRequest {
	s.Type = &v
	return s
}

type ApplyQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                       `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                       `json:"message,omitempty" xml:"message,omitempty"`
	Module  *ApplyQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ApplyQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBody) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBody) SetCode(v string) *ApplyQueryResponseBody {
	s.Code = &v
	return s
}

func (s *ApplyQueryResponseBody) SetMessage(v string) *ApplyQueryResponseBody {
	s.Message = &v
	return s
}

func (s *ApplyQueryResponseBody) SetModule(v *ApplyQueryResponseBodyModule) *ApplyQueryResponseBody {
	s.Module = v
	return s
}

func (s *ApplyQueryResponseBody) SetRequestId(v string) *ApplyQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *ApplyQueryResponseBody) SetSuccess(v bool) *ApplyQueryResponseBody {
	s.Success = &v
	return s
}

func (s *ApplyQueryResponseBody) SetTraceId(v string) *ApplyQueryResponseBody {
	s.TraceId = &v
	return s
}

type ApplyQueryResponseBodyModule struct {
	// example:
	//
	// 201710111505000464651
	ApplyShowId  *string                                     `json:"apply_show_id,omitempty" xml:"apply_show_id,omitempty"`
	ApproverList []*ApplyQueryResponseBodyModuleApproverList `json:"approver_list,omitempty" xml:"approver_list,omitempty" type:"Repeated"`
	// example:
	//
	// 100000
	Budget *int64 `json:"budget,omitempty" xml:"budget,omitempty"`
	// example:
	//
	// 1
	BudgetMerge *int32                               `json:"budget_merge,omitempty" xml:"budget_merge,omitempty"`
	CarRule     *ApplyQueryResponseBodyModuleCarRule `json:"car_rule,omitempty" xml:"car_rule,omitempty" type:"Struct"`
	// example:
	//
	// corpid
	CorpId   *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	// example:
	//
	// dept1
	DepartId *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	// example:
	//
	// adv
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// 补充描述，账单中将会体现此字段的值。可以用于企业的统计和对账
	//
	// example:
	//
	// {"cost_center":"成本中心"}
	ExtendField          *string                                             `json:"extend_field,omitempty" xml:"extend_field,omitempty"`
	ExternalTravelerList []*ApplyQueryResponseBodyModuleExternalTravelerList `json:"external_traveler_list,omitempty" xml:"external_traveler_list,omitempty" type:"Repeated"`
	// example:
	//
	// 10000
	FlightBudget *int64 `json:"flight_budget,omitempty" xml:"flight_budget,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	GmtModified *string `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	// example:
	//
	// 100000
	HotelBudget *int64                                  `json:"hotel_budget,omitempty" xml:"hotel_budget,omitempty"`
	HotelShare  *ApplyQueryResponseBodyModuleHotelShare `json:"hotel_share,omitempty" xml:"hotel_share,omitempty" type:"Struct"`
	// example:
	//
	// 3298
	Id            *int64                                       `json:"id,omitempty" xml:"id,omitempty"`
	ItineraryList []*ApplyQueryResponseBodyModuleItineraryList `json:"itinerary_list,omitempty" xml:"itinerary_list,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	ItineraryRule    *int32                                          `json:"itinerary_rule,omitempty" xml:"itinerary_rule,omitempty"`
	ItinerarySetList []*ApplyQueryResponseBodyModuleItinerarySetList `json:"itinerary_set_list,omitempty" xml:"itinerary_set_list,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	LimitTraveler         *int32  `json:"limit_traveler,omitempty" xml:"limit_traveler,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 1
	Status     *int32  `json:"status,omitempty" xml:"status,omitempty"`
	StatusDesc *string `json:"status_desc,omitempty" xml:"status_desc,omitempty"`
	// example:
	//
	// 1213
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	// example:
	//
	// 1214254
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
	// example:
	//
	// 1
	TogetherBookRule *int32 `json:"together_book_rule,omitempty" xml:"together_book_rule,omitempty"`
	// example:
	//
	// 10000
	TrainBudget  *int64                                      `json:"train_budget,omitempty" xml:"train_budget,omitempty"`
	TravelerList []*ApplyQueryResponseBodyModuleTravelerList `json:"traveler_list,omitempty" xml:"traveler_list,omitempty" type:"Repeated"`
	TripCause    *string                                     `json:"trip_cause,omitempty" xml:"trip_cause,omitempty"`
	// example:
	//
	// 2
	TripDay   *int32  `json:"trip_day,omitempty" xml:"trip_day,omitempty"`
	TripTitle *string `json:"trip_title,omitempty" xml:"trip_title,omitempty"`
	// example:
	//
	// 2
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
	// example:
	//
	// abd123
	UnionNo *string `json:"union_no,omitempty" xml:"union_no,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	// example:
	//
	// 10000
	VehicleBudget *int64 `json:"vehicle_budget,omitempty" xml:"vehicle_budget,omitempty"`
}

func (s ApplyQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModule) SetApplyShowId(v string) *ApplyQueryResponseBodyModule {
	s.ApplyShowId = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetApproverList(v []*ApplyQueryResponseBodyModuleApproverList) *ApplyQueryResponseBodyModule {
	s.ApproverList = v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetBudget(v int64) *ApplyQueryResponseBodyModule {
	s.Budget = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetBudgetMerge(v int32) *ApplyQueryResponseBodyModule {
	s.BudgetMerge = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetCarRule(v *ApplyQueryResponseBodyModuleCarRule) *ApplyQueryResponseBodyModule {
	s.CarRule = v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetCorpId(v string) *ApplyQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetCorpName(v string) *ApplyQueryResponseBodyModule {
	s.CorpName = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetDepartId(v string) *ApplyQueryResponseBodyModule {
	s.DepartId = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetDepartName(v string) *ApplyQueryResponseBodyModule {
	s.DepartName = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetExtendField(v string) *ApplyQueryResponseBodyModule {
	s.ExtendField = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetExternalTravelerList(v []*ApplyQueryResponseBodyModuleExternalTravelerList) *ApplyQueryResponseBodyModule {
	s.ExternalTravelerList = v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetFlightBudget(v int64) *ApplyQueryResponseBodyModule {
	s.FlightBudget = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetGmtCreate(v string) *ApplyQueryResponseBodyModule {
	s.GmtCreate = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetGmtModified(v string) *ApplyQueryResponseBodyModule {
	s.GmtModified = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetHotelBudget(v int64) *ApplyQueryResponseBodyModule {
	s.HotelBudget = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetHotelShare(v *ApplyQueryResponseBodyModuleHotelShare) *ApplyQueryResponseBodyModule {
	s.HotelShare = v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetId(v int64) *ApplyQueryResponseBodyModule {
	s.Id = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetItineraryList(v []*ApplyQueryResponseBodyModuleItineraryList) *ApplyQueryResponseBodyModule {
	s.ItineraryList = v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetItineraryRule(v int32) *ApplyQueryResponseBodyModule {
	s.ItineraryRule = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetItinerarySetList(v []*ApplyQueryResponseBodyModuleItinerarySetList) *ApplyQueryResponseBodyModule {
	s.ItinerarySetList = v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetLimitTraveler(v int32) *ApplyQueryResponseBodyModule {
	s.LimitTraveler = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetPaymentDepartmentId(v string) *ApplyQueryResponseBodyModule {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetPaymentDepartmentName(v string) *ApplyQueryResponseBodyModule {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetStatus(v int32) *ApplyQueryResponseBodyModule {
	s.Status = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetStatusDesc(v string) *ApplyQueryResponseBodyModule {
	s.StatusDesc = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetThirdpartBusinessId(v string) *ApplyQueryResponseBodyModule {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetThirdpartId(v string) *ApplyQueryResponseBodyModule {
	s.ThirdpartId = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetTogetherBookRule(v int32) *ApplyQueryResponseBodyModule {
	s.TogetherBookRule = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetTrainBudget(v int64) *ApplyQueryResponseBodyModule {
	s.TrainBudget = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetTravelerList(v []*ApplyQueryResponseBodyModuleTravelerList) *ApplyQueryResponseBodyModule {
	s.TravelerList = v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetTripCause(v string) *ApplyQueryResponseBodyModule {
	s.TripCause = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetTripDay(v int32) *ApplyQueryResponseBodyModule {
	s.TripDay = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetTripTitle(v string) *ApplyQueryResponseBodyModule {
	s.TripTitle = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetType(v int32) *ApplyQueryResponseBodyModule {
	s.Type = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetUnionNo(v string) *ApplyQueryResponseBodyModule {
	s.UnionNo = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetUserId(v string) *ApplyQueryResponseBodyModule {
	s.UserId = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetUserName(v string) *ApplyQueryResponseBodyModule {
	s.UserName = &v
	return s
}

func (s *ApplyQueryResponseBodyModule) SetVehicleBudget(v int64) *ApplyQueryResponseBodyModule {
	s.VehicleBudget = &v
	return s
}

type ApplyQueryResponseBodyModuleApproverList struct {
	Note *string `json:"note,omitempty" xml:"note,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	OperateTime *string `json:"operate_time,omitempty" xml:"operate_time,omitempty"`
	// example:
	//
	// 1
	Order *int32 `json:"order,omitempty" xml:"order,omitempty"`
	// example:
	//
	// 0
	Status     *int32  `json:"status,omitempty" xml:"status,omitempty"`
	StatusDesc *string `json:"status_desc,omitempty" xml:"status_desc,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyQueryResponseBodyModuleApproverList) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleApproverList) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleApproverList) SetNote(v string) *ApplyQueryResponseBodyModuleApproverList {
	s.Note = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleApproverList) SetOperateTime(v string) *ApplyQueryResponseBodyModuleApproverList {
	s.OperateTime = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleApproverList) SetOrder(v int32) *ApplyQueryResponseBodyModuleApproverList {
	s.Order = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleApproverList) SetStatus(v int32) *ApplyQueryResponseBodyModuleApproverList {
	s.Status = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleApproverList) SetStatusDesc(v string) *ApplyQueryResponseBodyModuleApproverList {
	s.StatusDesc = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleApproverList) SetUserId(v string) *ApplyQueryResponseBodyModuleApproverList {
	s.UserId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleApproverList) SetUserName(v string) *ApplyQueryResponseBodyModuleApproverList {
	s.UserName = &v
	return s
}

type ApplyQueryResponseBodyModuleCarRule struct {
	ScenarioTemplateId   *string `json:"scenario_template_id,omitempty" xml:"scenario_template_id,omitempty"`
	ScenarioTemplateName *string `json:"scenario_template_name,omitempty" xml:"scenario_template_name,omitempty"`
}

func (s ApplyQueryResponseBodyModuleCarRule) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleCarRule) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleCarRule) SetScenarioTemplateId(v string) *ApplyQueryResponseBodyModuleCarRule {
	s.ScenarioTemplateId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleCarRule) SetScenarioTemplateName(v string) *ApplyQueryResponseBodyModuleCarRule {
	s.ScenarioTemplateName = &v
	return s
}

type ApplyQueryResponseBodyModuleExternalTravelerList struct {
	Attribute *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	// example:
	//
	// 1
	BusinessDiscount *int32  `json:"business_discount,omitempty" xml:"business_discount,omitempty"`
	CostCenterName   *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	DepartId         *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	// example:
	//
	// 1
	EconomyDiscount *int32 `json:"economy_discount,omitempty" xml:"economy_discount,omitempty"`
	// example:
	//
	// 1
	FirstDiscount *int32 `json:"first_discount,omitempty" xml:"first_discount,omitempty"`
	// example:
	//
	// F
	FlightCabins          *string                                                           `json:"flight_cabins,omitempty" xml:"flight_cabins,omitempty"`
	FlightIntlRuleCode    *int64                                                            `json:"flight_intl_rule_code,omitempty" xml:"flight_intl_rule_code,omitempty"`
	FlightRuleCode        *int64                                                            `json:"flight_rule_code,omitempty" xml:"flight_rule_code,omitempty"`
	HotelCitys            []*ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys     `json:"hotel_citys,omitempty" xml:"hotel_citys,omitempty" type:"Repeated"`
	HotelIntlCitys        []*ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys `json:"hotel_intl_citys,omitempty" xml:"hotel_intl_citys,omitempty" type:"Repeated"`
	HotelIntlRuleCode     *int64                                                            `json:"hotel_intl_rule_code,omitempty" xml:"hotel_intl_rule_code,omitempty"`
	HotelRuleCode         *int64                                                            `json:"hotel_rule_code,omitempty" xml:"hotel_rule_code,omitempty"`
	InvoiceName           *string                                                           `json:"invoice_name,omitempty" xml:"invoice_name,omitempty"`
	PaymentDepartmentId   *string                                                           `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string                                                           `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 1
	PremiumEconomyDiscount *int32  `json:"premium_economy_discount,omitempty" xml:"premium_economy_discount,omitempty"`
	ProjectCode            *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle           *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// example:
	//
	// 1
	ReserveType           *int32  `json:"reserve_type,omitempty" xml:"reserve_type,omitempty"`
	ThirdPartInvoiceId    *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	ThirdpartDepartId     *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	TrainRuleCode         *int64  `json:"train_rule_code,omitempty" xml:"train_rule_code,omitempty"`
	// example:
	//
	// 1
	TrainSeats *string `json:"train_seats,omitempty" xml:"train_seats,omitempty"`
	UserName   *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyQueryResponseBodyModuleExternalTravelerList) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleExternalTravelerList) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetAttribute(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.Attribute = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetBusinessDiscount(v int32) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.BusinessDiscount = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetCostCenterName(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.CostCenterName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetDepartId(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.DepartId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetEconomyDiscount(v int32) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.EconomyDiscount = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetFirstDiscount(v int32) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.FirstDiscount = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetFlightCabins(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.FlightCabins = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetFlightIntlRuleCode(v int64) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.FlightIntlRuleCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetFlightRuleCode(v int64) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.FlightRuleCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetHotelCitys(v []*ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.HotelCitys = v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetHotelIntlCitys(v []*ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.HotelIntlCitys = v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetHotelIntlRuleCode(v int64) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.HotelIntlRuleCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetHotelRuleCode(v int64) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.HotelRuleCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetInvoiceName(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.InvoiceName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetPaymentDepartmentId(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetPaymentDepartmentName(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetPremiumEconomyDiscount(v int32) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.PremiumEconomyDiscount = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetProjectCode(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetProjectTitle(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetReserveType(v int32) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.ReserveType = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetThirdPartInvoiceId(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetThirdpartCostCenterId(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetThirdpartDepartId(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetTrainRuleCode(v int64) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.TrainRuleCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetTrainSeats(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.TrainSeats = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerList) SetUserName(v string) *ApplyQueryResponseBodyModuleExternalTravelerList {
	s.UserName = &v
	return s
}

type ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys struct {
	// example:
	//
	// 0
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 100000
	Fee *int64 `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys) SetCityCode(v string) *ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys) SetCityName(v string) *ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys {
	s.CityName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys) SetFee(v int64) *ApplyQueryResponseBodyModuleExternalTravelerListHotelCitys {
	s.Fee = &v
	return s
}

type ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Fee      *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys) SetCityCode(v string) *ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys) SetCityName(v string) *ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys {
	s.CityName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys) SetFee(v int64) *ApplyQueryResponseBodyModuleExternalTravelerListHotelIntlCitys {
	s.Fee = &v
	return s
}

type ApplyQueryResponseBodyModuleHotelShare struct {
	// example:
	//
	// 70
	Param *string `json:"param,omitempty" xml:"param,omitempty"`
	// example:
	//
	// 1
	Type *string `json:"type,omitempty" xml:"type,omitempty"`
}

func (s ApplyQueryResponseBodyModuleHotelShare) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleHotelShare) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleHotelShare) SetParam(v string) *ApplyQueryResponseBodyModuleHotelShare {
	s.Param = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleHotelShare) SetType(v string) *ApplyQueryResponseBodyModuleHotelShare {
	s.Type = &v
	return s
}

type ApplyQueryResponseBodyModuleItineraryList struct {
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// 330100
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	ArrDate   *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	Attribute *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	// example:
	//
	// accac
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	DepCity        *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// 330100
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	DepDate                 *string                                                           `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	InvoiceName             *string                                                           `json:"invoice_name,omitempty" xml:"invoice_name,omitempty"`
	ItineraryId             *string                                                           `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	ItineraryTravelStandard *ApplyQueryResponseBodyModuleItineraryListItineraryTravelStandard `json:"itinerary_travel_standard,omitempty" xml:"itinerary_travel_standard,omitempty" type:"Struct"`
	// example:
	//
	// xm1
	ProjectCode           *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle          *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	ThirdpartInvoiceId    *string `json:"thirdpart_invoice_id,omitempty" xml:"thirdpart_invoice_id,omitempty"`
	ThirdpartItineraryId  *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// 1
	TrafficType *int32 `json:"traffic_type,omitempty" xml:"traffic_type,omitempty"`
	// example:
	//
	// 1
	TripWay *int32 `json:"trip_way,omitempty" xml:"trip_way,omitempty"`
}

func (s ApplyQueryResponseBodyModuleItineraryList) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleItineraryList) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetArrCity(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.ArrCity = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetArrCityCode(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.ArrCityCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetArrDate(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.ArrDate = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetAttribute(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.Attribute = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetCostCenterName(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.CostCenterName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetDepCity(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.DepCity = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetDepCityCode(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.DepCityCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetDepDate(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.DepDate = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetInvoiceName(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.InvoiceName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetItineraryId(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.ItineraryId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetItineraryTravelStandard(v *ApplyQueryResponseBodyModuleItineraryListItineraryTravelStandard) *ApplyQueryResponseBodyModuleItineraryList {
	s.ItineraryTravelStandard = v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetProjectCode(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetProjectTitle(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetThirdpartCostCenterId(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetThirdpartInvoiceId(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.ThirdpartInvoiceId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetThirdpartItineraryId(v string) *ApplyQueryResponseBodyModuleItineraryList {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetTrafficType(v int32) *ApplyQueryResponseBodyModuleItineraryList {
	s.TrafficType = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItineraryList) SetTripWay(v int32) *ApplyQueryResponseBodyModuleItineraryList {
	s.TripWay = &v
	return s
}

type ApplyQueryResponseBodyModuleItineraryListItineraryTravelStandard struct {
	HotelAvailableNightsPerDay *int32 `json:"hotel_available_nights_per_day,omitempty" xml:"hotel_available_nights_per_day,omitempty"`
}

func (s ApplyQueryResponseBodyModuleItineraryListItineraryTravelStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleItineraryListItineraryTravelStandard) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleItineraryListItineraryTravelStandard) SetHotelAvailableNightsPerDay(v int32) *ApplyQueryResponseBodyModuleItineraryListItineraryTravelStandard {
	s.HotelAvailableNightsPerDay = &v
	return s
}

type ApplyQueryResponseBodyModuleItinerarySetList struct {
	// example:
	//
	// 2018-09-19T14:03Z
	ArrDate   *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	Attribute *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	// example:
	//
	// BJS，HGH
	CityCodeSet    *string `json:"city_code_set,omitempty" xml:"city_code_set,omitempty"`
	CitySet        *string `json:"city_set,omitempty" xml:"city_set,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// 2018-09-19T14:03Z
	DepDate     *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	InvoiceName *string `json:"invoice_name,omitempty" xml:"invoice_name,omitempty"`
	// example:
	//
	// 12345
	ItineraryId             *string                                                              `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	ItineraryTravelStandard *ApplyQueryResponseBodyModuleItinerarySetListItineraryTravelStandard `json:"itinerary_travel_standard,omitempty" xml:"itinerary_travel_standard,omitempty" type:"Struct"`
	// example:
	//
	// projecttow
	ProjectCode           *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle          *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	ThirdpartInvoiceId    *string `json:"thirdpart_invoice_id,omitempty" xml:"thirdpart_invoice_id,omitempty"`
	ThirdpartItineraryId  *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// 0
	TrafficType *int32 `json:"traffic_type,omitempty" xml:"traffic_type,omitempty"`
}

func (s ApplyQueryResponseBodyModuleItinerarySetList) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleItinerarySetList) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetArrDate(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.ArrDate = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetAttribute(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.Attribute = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetCityCodeSet(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.CityCodeSet = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetCitySet(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.CitySet = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetCostCenterName(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.CostCenterName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetDepDate(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.DepDate = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetInvoiceName(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.InvoiceName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetItineraryId(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.ItineraryId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetItineraryTravelStandard(v *ApplyQueryResponseBodyModuleItinerarySetListItineraryTravelStandard) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.ItineraryTravelStandard = v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetProjectCode(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetProjectTitle(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetThirdpartCostCenterId(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetThirdpartInvoiceId(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.ThirdpartInvoiceId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetThirdpartItineraryId(v string) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleItinerarySetList) SetTrafficType(v int32) *ApplyQueryResponseBodyModuleItinerarySetList {
	s.TrafficType = &v
	return s
}

type ApplyQueryResponseBodyModuleItinerarySetListItineraryTravelStandard struct {
	HotelAvailableNightsPerDay *int32 `json:"hotel_available_nights_per_day,omitempty" xml:"hotel_available_nights_per_day,omitempty"`
}

func (s ApplyQueryResponseBodyModuleItinerarySetListItineraryTravelStandard) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleItinerarySetListItineraryTravelStandard) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleItinerarySetListItineraryTravelStandard) SetHotelAvailableNightsPerDay(v int32) *ApplyQueryResponseBodyModuleItinerarySetListItineraryTravelStandard {
	s.HotelAvailableNightsPerDay = &v
	return s
}

type ApplyQueryResponseBodyModuleTravelerList struct {
	Attribute *string `json:"attribute,omitempty" xml:"attribute,omitempty"`
	// example:
	//
	// 1
	BusinessDiscount *int32                                                `json:"business_discount,omitempty" xml:"business_discount,omitempty"`
	CarCitySet       []*ApplyQueryResponseBodyModuleTravelerListCarCitySet `json:"car_city_set,omitempty" xml:"car_city_set,omitempty" type:"Repeated"`
	CostCenterName   *string                                               `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	DepartId         *string                                               `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	// example:
	//
	// 1
	EconomyDiscount *int32 `json:"economy_discount,omitempty" xml:"economy_discount,omitempty"`
	// example:
	//
	// 1
	FirstDiscount *int32 `json:"first_discount,omitempty" xml:"first_discount,omitempty"`
	// example:
	//
	// F
	FlightCabins          *string                                                   `json:"flight_cabins,omitempty" xml:"flight_cabins,omitempty"`
	FlightIntlRuleCode    *int64                                                    `json:"flight_intl_rule_code,omitempty" xml:"flight_intl_rule_code,omitempty"`
	FlightRuleCode        *int64                                                    `json:"flight_rule_code,omitempty" xml:"flight_rule_code,omitempty"`
	HotelCitys            []*ApplyQueryResponseBodyModuleTravelerListHotelCitys     `json:"hotel_citys,omitempty" xml:"hotel_citys,omitempty" type:"Repeated"`
	HotelIntlCitys        []*ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys `json:"hotel_intl_citys,omitempty" xml:"hotel_intl_citys,omitempty" type:"Repeated"`
	HotelIntlRuleCode     *int64                                                    `json:"hotel_intl_rule_code,omitempty" xml:"hotel_intl_rule_code,omitempty"`
	HotelRuleCode         *int64                                                    `json:"hotel_rule_code,omitempty" xml:"hotel_rule_code,omitempty"`
	InvoiceName           *string                                                   `json:"invoice_name,omitempty" xml:"invoice_name,omitempty"`
	PaymentDepartmentId   *string                                                   `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string                                                   `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 1
	PremiumEconomyDiscount *int32  `json:"premium_economy_discount,omitempty" xml:"premium_economy_discount,omitempty"`
	ProjectCode            *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle           *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// example:
	//
	// 1
	ReserveType           *int32  `json:"reserve_type,omitempty" xml:"reserve_type,omitempty"`
	ThirdPartInvoiceId    *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	ThirdpartDepartId     *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	TrainRuleCode         *int64  `json:"train_rule_code,omitempty" xml:"train_rule_code,omitempty"`
	// example:
	//
	// 1
	TrainSeats *string `json:"train_seats,omitempty" xml:"train_seats,omitempty"`
	// example:
	//
	// 3423
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyQueryResponseBodyModuleTravelerList) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleTravelerList) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetAttribute(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.Attribute = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetBusinessDiscount(v int32) *ApplyQueryResponseBodyModuleTravelerList {
	s.BusinessDiscount = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetCarCitySet(v []*ApplyQueryResponseBodyModuleTravelerListCarCitySet) *ApplyQueryResponseBodyModuleTravelerList {
	s.CarCitySet = v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetCostCenterName(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.CostCenterName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetDepartId(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.DepartId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetEconomyDiscount(v int32) *ApplyQueryResponseBodyModuleTravelerList {
	s.EconomyDiscount = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetFirstDiscount(v int32) *ApplyQueryResponseBodyModuleTravelerList {
	s.FirstDiscount = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetFlightCabins(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.FlightCabins = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetFlightIntlRuleCode(v int64) *ApplyQueryResponseBodyModuleTravelerList {
	s.FlightIntlRuleCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetFlightRuleCode(v int64) *ApplyQueryResponseBodyModuleTravelerList {
	s.FlightRuleCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetHotelCitys(v []*ApplyQueryResponseBodyModuleTravelerListHotelCitys) *ApplyQueryResponseBodyModuleTravelerList {
	s.HotelCitys = v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetHotelIntlCitys(v []*ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys) *ApplyQueryResponseBodyModuleTravelerList {
	s.HotelIntlCitys = v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetHotelIntlRuleCode(v int64) *ApplyQueryResponseBodyModuleTravelerList {
	s.HotelIntlRuleCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetHotelRuleCode(v int64) *ApplyQueryResponseBodyModuleTravelerList {
	s.HotelRuleCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetInvoiceName(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.InvoiceName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetPaymentDepartmentId(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetPaymentDepartmentName(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetPremiumEconomyDiscount(v int32) *ApplyQueryResponseBodyModuleTravelerList {
	s.PremiumEconomyDiscount = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetProjectCode(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.ProjectCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetProjectTitle(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.ProjectTitle = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetReserveType(v int32) *ApplyQueryResponseBodyModuleTravelerList {
	s.ReserveType = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetThirdPartInvoiceId(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetThirdpartCostCenterId(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetThirdpartDepartId(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.ThirdpartDepartId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetTrainRuleCode(v int64) *ApplyQueryResponseBodyModuleTravelerList {
	s.TrainRuleCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetTrainSeats(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.TrainSeats = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetUserId(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.UserId = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerList) SetUserName(v string) *ApplyQueryResponseBodyModuleTravelerList {
	s.UserName = &v
	return s
}

type ApplyQueryResponseBodyModuleTravelerListCarCitySet struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
}

func (s ApplyQueryResponseBodyModuleTravelerListCarCitySet) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleTravelerListCarCitySet) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleTravelerListCarCitySet) SetCityCode(v string) *ApplyQueryResponseBodyModuleTravelerListCarCitySet {
	s.CityCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerListCarCitySet) SetCityName(v string) *ApplyQueryResponseBodyModuleTravelerListCarCitySet {
	s.CityName = &v
	return s
}

type ApplyQueryResponseBodyModuleTravelerListHotelCitys struct {
	// example:
	//
	// 0
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 100000
	Fee *int64 `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyQueryResponseBodyModuleTravelerListHotelCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleTravelerListHotelCitys) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleTravelerListHotelCitys) SetCityCode(v string) *ApplyQueryResponseBodyModuleTravelerListHotelCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerListHotelCitys) SetCityName(v string) *ApplyQueryResponseBodyModuleTravelerListHotelCitys {
	s.CityName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerListHotelCitys) SetFee(v int64) *ApplyQueryResponseBodyModuleTravelerListHotelCitys {
	s.Fee = &v
	return s
}

type ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Fee      *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
}

func (s ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys) SetCityCode(v string) *ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys {
	s.CityCode = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys) SetCityName(v string) *ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys {
	s.CityName = &v
	return s
}

func (s *ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys) SetFee(v int64) *ApplyQueryResponseBodyModuleTravelerListHotelIntlCitys {
	s.Fee = &v
	return s
}

type ApplyQueryResponse struct {
	Headers    map[string]*string      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ApplyQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ApplyQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s ApplyQueryResponse) GoString() string {
	return s.String()
}

func (s *ApplyQueryResponse) SetHeaders(v map[string]*string) *ApplyQueryResponse {
	s.Headers = v
	return s
}

func (s *ApplyQueryResponse) SetStatusCode(v int32) *ApplyQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *ApplyQueryResponse) SetBody(v *ApplyQueryResponseBody) *ApplyQueryResponse {
	s.Body = v
	return s
}

type ApplyTripTaskExecuteHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ApplyTripTaskExecuteHeaders) String() string {
	return tea.Prettify(s)
}

func (s ApplyTripTaskExecuteHeaders) GoString() string {
	return s.String()
}

func (s *ApplyTripTaskExecuteHeaders) SetCommonHeaders(v map[string]*string) *ApplyTripTaskExecuteHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ApplyTripTaskExecuteHeaders) SetXAcsBtripSoCorpToken(v string) *ApplyTripTaskExecuteHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ApplyTripTaskExecuteRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// open
	ActionFrom *string `json:"action_from,omitempty" xml:"action_from,omitempty"`
	Comment    *string `json:"comment,omitempty" xml:"comment,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// agree
	TaskAction *string `json:"task_action,omitempty" xml:"task_action,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12345
	TaskId *int64 `json:"task_id,omitempty" xml:"task_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// thirdpart12138
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s ApplyTripTaskExecuteRequest) String() string {
	return tea.Prettify(s)
}

func (s ApplyTripTaskExecuteRequest) GoString() string {
	return s.String()
}

func (s *ApplyTripTaskExecuteRequest) SetActionFrom(v string) *ApplyTripTaskExecuteRequest {
	s.ActionFrom = &v
	return s
}

func (s *ApplyTripTaskExecuteRequest) SetComment(v string) *ApplyTripTaskExecuteRequest {
	s.Comment = &v
	return s
}

func (s *ApplyTripTaskExecuteRequest) SetTaskAction(v string) *ApplyTripTaskExecuteRequest {
	s.TaskAction = &v
	return s
}

func (s *ApplyTripTaskExecuteRequest) SetTaskId(v int64) *ApplyTripTaskExecuteRequest {
	s.TaskId = &v
	return s
}

func (s *ApplyTripTaskExecuteRequest) SetUserId(v string) *ApplyTripTaskExecuteRequest {
	s.UserId = &v
	return s
}

func (s *ApplyTripTaskExecuteRequest) SetUserName(v string) *ApplyTripTaskExecuteRequest {
	s.UserName = &v
	return s
}

type ApplyTripTaskExecuteResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// true
	Module *bool `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// 2FB0D7A8-BA41-5D04-BEFC-CADA5481AC53
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210bc56016876728084104176d2c35
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ApplyTripTaskExecuteResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ApplyTripTaskExecuteResponseBody) GoString() string {
	return s.String()
}

func (s *ApplyTripTaskExecuteResponseBody) SetCode(v string) *ApplyTripTaskExecuteResponseBody {
	s.Code = &v
	return s
}

func (s *ApplyTripTaskExecuteResponseBody) SetMessage(v string) *ApplyTripTaskExecuteResponseBody {
	s.Message = &v
	return s
}

func (s *ApplyTripTaskExecuteResponseBody) SetModule(v bool) *ApplyTripTaskExecuteResponseBody {
	s.Module = &v
	return s
}

func (s *ApplyTripTaskExecuteResponseBody) SetRequestId(v string) *ApplyTripTaskExecuteResponseBody {
	s.RequestId = &v
	return s
}

func (s *ApplyTripTaskExecuteResponseBody) SetSuccess(v bool) *ApplyTripTaskExecuteResponseBody {
	s.Success = &v
	return s
}

func (s *ApplyTripTaskExecuteResponseBody) SetTraceId(v string) *ApplyTripTaskExecuteResponseBody {
	s.TraceId = &v
	return s
}

type ApplyTripTaskExecuteResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ApplyTripTaskExecuteResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ApplyTripTaskExecuteResponse) String() string {
	return tea.Prettify(s)
}

func (s ApplyTripTaskExecuteResponse) GoString() string {
	return s.String()
}

func (s *ApplyTripTaskExecuteResponse) SetHeaders(v map[string]*string) *ApplyTripTaskExecuteResponse {
	s.Headers = v
	return s
}

func (s *ApplyTripTaskExecuteResponse) SetStatusCode(v int32) *ApplyTripTaskExecuteResponse {
	s.StatusCode = &v
	return s
}

func (s *ApplyTripTaskExecuteResponse) SetBody(v *ApplyTripTaskExecuteResponseBody) *ApplyTripTaskExecuteResponse {
	s.Body = v
	return s
}

type BaseCityInfoSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripAccessToken *string `json:"x-acs-btrip-access-token,omitempty" xml:"x-acs-btrip-access-token,omitempty"`
}

func (s BaseCityInfoSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s BaseCityInfoSearchHeaders) GoString() string {
	return s.String()
}

func (s *BaseCityInfoSearchHeaders) SetCommonHeaders(v map[string]*string) *BaseCityInfoSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *BaseCityInfoSearchHeaders) SetXAcsBtripAccessToken(v string) *BaseCityInfoSearchHeaders {
	s.XAcsBtripAccessToken = &v
	return s
}

type BaseCityInfoSearchRequest struct {
	// This parameter is required.
	Keyword *string `json:"keyword,omitempty" xml:"keyword,omitempty"`
	// This parameter is required.
	//
	// if can be null:
	// false
	//
	// example:
	//
	// 0
	Region *string `json:"region,omitempty" xml:"region,omitempty"`
}

func (s BaseCityInfoSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s BaseCityInfoSearchRequest) GoString() string {
	return s.String()
}

func (s *BaseCityInfoSearchRequest) SetKeyword(v string) *BaseCityInfoSearchRequest {
	s.Keyword = &v
	return s
}

func (s *BaseCityInfoSearchRequest) SetRegion(v string) *BaseCityInfoSearchRequest {
	s.Region = &v
	return s
}

type BaseCityInfoSearchResponseBody struct {
	// example:
	//
	// 0
	Code    *string                                 `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                 `json:"message,omitempty" xml:"message,omitempty"`
	Module  []*BaseCityInfoSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s BaseCityInfoSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s BaseCityInfoSearchResponseBody) GoString() string {
	return s.String()
}

func (s *BaseCityInfoSearchResponseBody) SetCode(v string) *BaseCityInfoSearchResponseBody {
	s.Code = &v
	return s
}

func (s *BaseCityInfoSearchResponseBody) SetMessage(v string) *BaseCityInfoSearchResponseBody {
	s.Message = &v
	return s
}

func (s *BaseCityInfoSearchResponseBody) SetModule(v []*BaseCityInfoSearchResponseBodyModule) *BaseCityInfoSearchResponseBody {
	s.Module = v
	return s
}

func (s *BaseCityInfoSearchResponseBody) SetRequestId(v string) *BaseCityInfoSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *BaseCityInfoSearchResponseBody) SetSuccess(v bool) *BaseCityInfoSearchResponseBody {
	s.Success = &v
	return s
}

func (s *BaseCityInfoSearchResponseBody) SetTraceId(v string) *BaseCityInfoSearchResponseBody {
	s.TraceId = &v
	return s
}

type BaseCityInfoSearchResponseBodyModule struct {
	// example:
	//
	// 330100
	Code     *string `json:"code,omitempty" xml:"code,omitempty"`
	Name     *string `json:"name,omitempty" xml:"name,omitempty"`
	NameTree *string `json:"nameTree,omitempty" xml:"nameTree,omitempty"`
	// example:
	//
	// 0
	Region *string `json:"region,omitempty" xml:"region,omitempty"`
}

func (s BaseCityInfoSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s BaseCityInfoSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *BaseCityInfoSearchResponseBodyModule) SetCode(v string) *BaseCityInfoSearchResponseBodyModule {
	s.Code = &v
	return s
}

func (s *BaseCityInfoSearchResponseBodyModule) SetName(v string) *BaseCityInfoSearchResponseBodyModule {
	s.Name = &v
	return s
}

func (s *BaseCityInfoSearchResponseBodyModule) SetNameTree(v string) *BaseCityInfoSearchResponseBodyModule {
	s.NameTree = &v
	return s
}

func (s *BaseCityInfoSearchResponseBodyModule) SetRegion(v string) *BaseCityInfoSearchResponseBodyModule {
	s.Region = &v
	return s
}

type BaseCityInfoSearchResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *BaseCityInfoSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s BaseCityInfoSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s BaseCityInfoSearchResponse) GoString() string {
	return s.String()
}

func (s *BaseCityInfoSearchResponse) SetHeaders(v map[string]*string) *BaseCityInfoSearchResponse {
	s.Headers = v
	return s
}

func (s *BaseCityInfoSearchResponse) SetStatusCode(v int32) *BaseCityInfoSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *BaseCityInfoSearchResponse) SetBody(v *BaseCityInfoSearchResponseBody) *BaseCityInfoSearchResponse {
	s.Body = v
	return s
}

type BtripBillInfoAdjustHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s BtripBillInfoAdjustHeaders) String() string {
	return tea.Prettify(s)
}

func (s BtripBillInfoAdjustHeaders) GoString() string {
	return s.String()
}

func (s *BtripBillInfoAdjustHeaders) SetCommonHeaders(v map[string]*string) *BtripBillInfoAdjustHeaders {
	s.CommonHeaders = v
	return s
}

func (s *BtripBillInfoAdjustHeaders) SetXAcsBtripCorpToken(v string) *BtripBillInfoAdjustHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type BtripBillInfoAdjustRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 123456
	PrimaryId *int64 `json:"primary_id,omitempty" xml:"primary_id,omitempty"`
	// example:
	//
	// GA15131
	ThirdPartCostCenterId *string `json:"third_part_cost_center_id,omitempty" xml:"third_part_cost_center_id,omitempty"`
	// example:
	//
	// GA15131
	ThirdPartDepartmentId *string `json:"third_part_department_id,omitempty" xml:"third_part_department_id,omitempty"`
	// example:
	//
	// GA15131
	ThirdPartInvoiceId *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	// example:
	//
	// GA15131
	ThirdPartProjectId *string `json:"third_part_project_id,omitempty" xml:"third_part_project_id,omitempty"`
	// example:
	//
	// 123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s BtripBillInfoAdjustRequest) String() string {
	return tea.Prettify(s)
}

func (s BtripBillInfoAdjustRequest) GoString() string {
	return s.String()
}

func (s *BtripBillInfoAdjustRequest) SetPrimaryId(v int64) *BtripBillInfoAdjustRequest {
	s.PrimaryId = &v
	return s
}

func (s *BtripBillInfoAdjustRequest) SetThirdPartCostCenterId(v string) *BtripBillInfoAdjustRequest {
	s.ThirdPartCostCenterId = &v
	return s
}

func (s *BtripBillInfoAdjustRequest) SetThirdPartDepartmentId(v string) *BtripBillInfoAdjustRequest {
	s.ThirdPartDepartmentId = &v
	return s
}

func (s *BtripBillInfoAdjustRequest) SetThirdPartInvoiceId(v string) *BtripBillInfoAdjustRequest {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *BtripBillInfoAdjustRequest) SetThirdPartProjectId(v string) *BtripBillInfoAdjustRequest {
	s.ThirdPartProjectId = &v
	return s
}

func (s *BtripBillInfoAdjustRequest) SetUserId(v string) *BtripBillInfoAdjustRequest {
	s.UserId = &v
	return s
}

type BtripBillInfoAdjustResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s BtripBillInfoAdjustResponseBody) String() string {
	return tea.Prettify(s)
}

func (s BtripBillInfoAdjustResponseBody) GoString() string {
	return s.String()
}

func (s *BtripBillInfoAdjustResponseBody) SetCode(v string) *BtripBillInfoAdjustResponseBody {
	s.Code = &v
	return s
}

func (s *BtripBillInfoAdjustResponseBody) SetMessage(v string) *BtripBillInfoAdjustResponseBody {
	s.Message = &v
	return s
}

func (s *BtripBillInfoAdjustResponseBody) SetRequestId(v string) *BtripBillInfoAdjustResponseBody {
	s.RequestId = &v
	return s
}

func (s *BtripBillInfoAdjustResponseBody) SetSuccess(v bool) *BtripBillInfoAdjustResponseBody {
	s.Success = &v
	return s
}

func (s *BtripBillInfoAdjustResponseBody) SetTraceId(v string) *BtripBillInfoAdjustResponseBody {
	s.TraceId = &v
	return s
}

type BtripBillInfoAdjustResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *BtripBillInfoAdjustResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s BtripBillInfoAdjustResponse) String() string {
	return tea.Prettify(s)
}

func (s BtripBillInfoAdjustResponse) GoString() string {
	return s.String()
}

func (s *BtripBillInfoAdjustResponse) SetHeaders(v map[string]*string) *BtripBillInfoAdjustResponse {
	s.Headers = v
	return s
}

func (s *BtripBillInfoAdjustResponse) SetStatusCode(v int32) *BtripBillInfoAdjustResponse {
	s.StatusCode = &v
	return s
}

func (s *BtripBillInfoAdjustResponse) SetBody(v *BtripBillInfoAdjustResponseBody) *BtripBillInfoAdjustResponse {
	s.Body = v
	return s
}

type CarApplyAddHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CarApplyAddHeaders) String() string {
	return tea.Prettify(s)
}

func (s CarApplyAddHeaders) GoString() string {
	return s.String()
}

func (s *CarApplyAddHeaders) SetCommonHeaders(v map[string]*string) *CarApplyAddHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CarApplyAddHeaders) SetXAcsBtripSoCorpToken(v string) *CarApplyAddHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CarApplyAddRequest struct {
	// This parameter is required.
	Cause *string `json:"cause,omitempty" xml:"cause,omitempty"`
	// This parameter is required.
	City        *string `json:"city,omitempty" xml:"city,omitempty"`
	CityCodeSet *string `json:"city_code_set,omitempty" xml:"city_code_set,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-07-12 14:52:52
	Date *string `json:"date,omitempty" xml:"date,omitempty"`
	// example:
	//
	// 2022-07-12 18:51:25
	FinishedDate *string `json:"finished_date,omitempty" xml:"finished_date,omitempty"`
	// example:
	//
	// project1413
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// IRGS1413
	ThirdPartApplyId *string `json:"third_part_apply_id,omitempty" xml:"third_part_apply_id,omitempty"`
	// example:
	//
	// QA1411
	ThirdPartCostCenterId *string `json:"third_part_cost_center_id,omitempty" xml:"third_part_cost_center_id,omitempty"`
	// example:
	//
	// GA15131
	ThirdPartInvoiceId *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TimesTotal *int32 `json:"times_total,omitempty" xml:"times_total,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TimesType *int32 `json:"times_type,omitempty" xml:"times_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TimesUsed *int32 `json:"times_used,omitempty" xml:"times_used,omitempty"`
	// This parameter is required.
	Title            *string                               `json:"title,omitempty" xml:"title,omitempty"`
	TravelerStandard []*CarApplyAddRequestTravelerStandard `json:"traveler_standard,omitempty" xml:"traveler_standard,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// OPEN1415614
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CarApplyAddRequest) String() string {
	return tea.Prettify(s)
}

func (s CarApplyAddRequest) GoString() string {
	return s.String()
}

func (s *CarApplyAddRequest) SetCause(v string) *CarApplyAddRequest {
	s.Cause = &v
	return s
}

func (s *CarApplyAddRequest) SetCity(v string) *CarApplyAddRequest {
	s.City = &v
	return s
}

func (s *CarApplyAddRequest) SetCityCodeSet(v string) *CarApplyAddRequest {
	s.CityCodeSet = &v
	return s
}

func (s *CarApplyAddRequest) SetDate(v string) *CarApplyAddRequest {
	s.Date = &v
	return s
}

func (s *CarApplyAddRequest) SetFinishedDate(v string) *CarApplyAddRequest {
	s.FinishedDate = &v
	return s
}

func (s *CarApplyAddRequest) SetProjectCode(v string) *CarApplyAddRequest {
	s.ProjectCode = &v
	return s
}

func (s *CarApplyAddRequest) SetProjectName(v string) *CarApplyAddRequest {
	s.ProjectName = &v
	return s
}

func (s *CarApplyAddRequest) SetStatus(v int32) *CarApplyAddRequest {
	s.Status = &v
	return s
}

func (s *CarApplyAddRequest) SetThirdPartApplyId(v string) *CarApplyAddRequest {
	s.ThirdPartApplyId = &v
	return s
}

func (s *CarApplyAddRequest) SetThirdPartCostCenterId(v string) *CarApplyAddRequest {
	s.ThirdPartCostCenterId = &v
	return s
}

func (s *CarApplyAddRequest) SetThirdPartInvoiceId(v string) *CarApplyAddRequest {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *CarApplyAddRequest) SetTimesTotal(v int32) *CarApplyAddRequest {
	s.TimesTotal = &v
	return s
}

func (s *CarApplyAddRequest) SetTimesType(v int32) *CarApplyAddRequest {
	s.TimesType = &v
	return s
}

func (s *CarApplyAddRequest) SetTimesUsed(v int32) *CarApplyAddRequest {
	s.TimesUsed = &v
	return s
}

func (s *CarApplyAddRequest) SetTitle(v string) *CarApplyAddRequest {
	s.Title = &v
	return s
}

func (s *CarApplyAddRequest) SetTravelerStandard(v []*CarApplyAddRequestTravelerStandard) *CarApplyAddRequest {
	s.TravelerStandard = v
	return s
}

func (s *CarApplyAddRequest) SetUserId(v string) *CarApplyAddRequest {
	s.UserId = &v
	return s
}

type CarApplyAddRequestTravelerStandard struct {
	CarCitySet []*CarApplyAddRequestTravelerStandardCarCitySet `json:"car_city_set,omitempty" xml:"car_city_set,omitempty" type:"Repeated"`
	// This parameter is required.
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CarApplyAddRequestTravelerStandard) String() string {
	return tea.Prettify(s)
}

func (s CarApplyAddRequestTravelerStandard) GoString() string {
	return s.String()
}

func (s *CarApplyAddRequestTravelerStandard) SetCarCitySet(v []*CarApplyAddRequestTravelerStandardCarCitySet) *CarApplyAddRequestTravelerStandard {
	s.CarCitySet = v
	return s
}

func (s *CarApplyAddRequestTravelerStandard) SetUserId(v string) *CarApplyAddRequestTravelerStandard {
	s.UserId = &v
	return s
}

type CarApplyAddRequestTravelerStandardCarCitySet struct {
	// This parameter is required.
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	// This parameter is required.
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
}

func (s CarApplyAddRequestTravelerStandardCarCitySet) String() string {
	return tea.Prettify(s)
}

func (s CarApplyAddRequestTravelerStandardCarCitySet) GoString() string {
	return s.String()
}

func (s *CarApplyAddRequestTravelerStandardCarCitySet) SetCityCode(v string) *CarApplyAddRequestTravelerStandardCarCitySet {
	s.CityCode = &v
	return s
}

func (s *CarApplyAddRequestTravelerStandardCarCitySet) SetCityName(v string) *CarApplyAddRequestTravelerStandardCarCitySet {
	s.CityName = &v
	return s
}

type CarApplyAddShrinkRequest struct {
	// This parameter is required.
	Cause *string `json:"cause,omitempty" xml:"cause,omitempty"`
	// This parameter is required.
	City        *string `json:"city,omitempty" xml:"city,omitempty"`
	CityCodeSet *string `json:"city_code_set,omitempty" xml:"city_code_set,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-07-12 14:52:52
	Date *string `json:"date,omitempty" xml:"date,omitempty"`
	// example:
	//
	// 2022-07-12 18:51:25
	FinishedDate *string `json:"finished_date,omitempty" xml:"finished_date,omitempty"`
	// example:
	//
	// project1413
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// IRGS1413
	ThirdPartApplyId *string `json:"third_part_apply_id,omitempty" xml:"third_part_apply_id,omitempty"`
	// example:
	//
	// QA1411
	ThirdPartCostCenterId *string `json:"third_part_cost_center_id,omitempty" xml:"third_part_cost_center_id,omitempty"`
	// example:
	//
	// GA15131
	ThirdPartInvoiceId *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TimesTotal *int32 `json:"times_total,omitempty" xml:"times_total,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TimesType *int32 `json:"times_type,omitempty" xml:"times_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TimesUsed *int32 `json:"times_used,omitempty" xml:"times_used,omitempty"`
	// This parameter is required.
	Title                  *string `json:"title,omitempty" xml:"title,omitempty"`
	TravelerStandardShrink *string `json:"traveler_standard,omitempty" xml:"traveler_standard,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// OPEN1415614
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CarApplyAddShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s CarApplyAddShrinkRequest) GoString() string {
	return s.String()
}

func (s *CarApplyAddShrinkRequest) SetCause(v string) *CarApplyAddShrinkRequest {
	s.Cause = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetCity(v string) *CarApplyAddShrinkRequest {
	s.City = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetCityCodeSet(v string) *CarApplyAddShrinkRequest {
	s.CityCodeSet = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetDate(v string) *CarApplyAddShrinkRequest {
	s.Date = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetFinishedDate(v string) *CarApplyAddShrinkRequest {
	s.FinishedDate = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetProjectCode(v string) *CarApplyAddShrinkRequest {
	s.ProjectCode = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetProjectName(v string) *CarApplyAddShrinkRequest {
	s.ProjectName = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetStatus(v int32) *CarApplyAddShrinkRequest {
	s.Status = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetThirdPartApplyId(v string) *CarApplyAddShrinkRequest {
	s.ThirdPartApplyId = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetThirdPartCostCenterId(v string) *CarApplyAddShrinkRequest {
	s.ThirdPartCostCenterId = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetThirdPartInvoiceId(v string) *CarApplyAddShrinkRequest {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetTimesTotal(v int32) *CarApplyAddShrinkRequest {
	s.TimesTotal = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetTimesType(v int32) *CarApplyAddShrinkRequest {
	s.TimesType = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetTimesUsed(v int32) *CarApplyAddShrinkRequest {
	s.TimesUsed = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetTitle(v string) *CarApplyAddShrinkRequest {
	s.Title = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetTravelerStandardShrink(v string) *CarApplyAddShrinkRequest {
	s.TravelerStandardShrink = &v
	return s
}

func (s *CarApplyAddShrinkRequest) SetUserId(v string) *CarApplyAddShrinkRequest {
	s.UserId = &v
	return s
}

type CarApplyAddResponseBody struct {
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 1002923002
	Module *int64 `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CarApplyAddResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CarApplyAddResponseBody) GoString() string {
	return s.String()
}

func (s *CarApplyAddResponseBody) SetCode(v string) *CarApplyAddResponseBody {
	s.Code = &v
	return s
}

func (s *CarApplyAddResponseBody) SetMessage(v string) *CarApplyAddResponseBody {
	s.Message = &v
	return s
}

func (s *CarApplyAddResponseBody) SetModule(v int64) *CarApplyAddResponseBody {
	s.Module = &v
	return s
}

func (s *CarApplyAddResponseBody) SetRequestId(v string) *CarApplyAddResponseBody {
	s.RequestId = &v
	return s
}

func (s *CarApplyAddResponseBody) SetSuccess(v bool) *CarApplyAddResponseBody {
	s.Success = &v
	return s
}

func (s *CarApplyAddResponseBody) SetTraceId(v string) *CarApplyAddResponseBody {
	s.TraceId = &v
	return s
}

type CarApplyAddResponse struct {
	Headers    map[string]*string       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CarApplyAddResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CarApplyAddResponse) String() string {
	return tea.Prettify(s)
}

func (s CarApplyAddResponse) GoString() string {
	return s.String()
}

func (s *CarApplyAddResponse) SetHeaders(v map[string]*string) *CarApplyAddResponse {
	s.Headers = v
	return s
}

func (s *CarApplyAddResponse) SetStatusCode(v int32) *CarApplyAddResponse {
	s.StatusCode = &v
	return s
}

func (s *CarApplyAddResponse) SetBody(v *CarApplyAddResponseBody) *CarApplyAddResponse {
	s.Body = v
	return s
}

type CarApplyModifyHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CarApplyModifyHeaders) String() string {
	return tea.Prettify(s)
}

func (s CarApplyModifyHeaders) GoString() string {
	return s.String()
}

func (s *CarApplyModifyHeaders) SetCommonHeaders(v map[string]*string) *CarApplyModifyHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CarApplyModifyHeaders) SetXAcsBtripSoCorpToken(v string) *CarApplyModifyHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CarApplyModifyRequest struct {
	// example:
	//
	// 2022-07-12 16:12:53
	OperateTime *string `json:"operate_time,omitempty" xml:"operate_time,omitempty"`
	Remark      *string `json:"remark,omitempty" xml:"remark,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// IRGS1413
	ThirdPartApplyId *string `json:"third_part_apply_id,omitempty" xml:"third_part_apply_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// open62141
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CarApplyModifyRequest) String() string {
	return tea.Prettify(s)
}

func (s CarApplyModifyRequest) GoString() string {
	return s.String()
}

func (s *CarApplyModifyRequest) SetOperateTime(v string) *CarApplyModifyRequest {
	s.OperateTime = &v
	return s
}

func (s *CarApplyModifyRequest) SetRemark(v string) *CarApplyModifyRequest {
	s.Remark = &v
	return s
}

func (s *CarApplyModifyRequest) SetStatus(v int32) *CarApplyModifyRequest {
	s.Status = &v
	return s
}

func (s *CarApplyModifyRequest) SetThirdPartApplyId(v string) *CarApplyModifyRequest {
	s.ThirdPartApplyId = &v
	return s
}

func (s *CarApplyModifyRequest) SetUserId(v string) *CarApplyModifyRequest {
	s.UserId = &v
	return s
}

type CarApplyModifyResponseBody struct {
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	//
	// example:
	//
	// {\\"list\\": [], \\"pageSize\\": 20, \\"pageNo\\": 1}
	Module *bool `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CarApplyModifyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CarApplyModifyResponseBody) GoString() string {
	return s.String()
}

func (s *CarApplyModifyResponseBody) SetCode(v string) *CarApplyModifyResponseBody {
	s.Code = &v
	return s
}

func (s *CarApplyModifyResponseBody) SetMessage(v string) *CarApplyModifyResponseBody {
	s.Message = &v
	return s
}

func (s *CarApplyModifyResponseBody) SetModule(v bool) *CarApplyModifyResponseBody {
	s.Module = &v
	return s
}

func (s *CarApplyModifyResponseBody) SetRequestId(v string) *CarApplyModifyResponseBody {
	s.RequestId = &v
	return s
}

func (s *CarApplyModifyResponseBody) SetSuccess(v bool) *CarApplyModifyResponseBody {
	s.Success = &v
	return s
}

func (s *CarApplyModifyResponseBody) SetTraceId(v string) *CarApplyModifyResponseBody {
	s.TraceId = &v
	return s
}

type CarApplyModifyResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CarApplyModifyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CarApplyModifyResponse) String() string {
	return tea.Prettify(s)
}

func (s CarApplyModifyResponse) GoString() string {
	return s.String()
}

func (s *CarApplyModifyResponse) SetHeaders(v map[string]*string) *CarApplyModifyResponse {
	s.Headers = v
	return s
}

func (s *CarApplyModifyResponse) SetStatusCode(v int32) *CarApplyModifyResponse {
	s.StatusCode = &v
	return s
}

func (s *CarApplyModifyResponse) SetBody(v *CarApplyModifyResponseBody) *CarApplyModifyResponse {
	s.Body = v
	return s
}

type CarApplyQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CarApplyQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s CarApplyQueryHeaders) GoString() string {
	return s.String()
}

func (s *CarApplyQueryHeaders) SetCommonHeaders(v map[string]*string) *CarApplyQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CarApplyQueryHeaders) SetXAcsBtripSoCorpToken(v string) *CarApplyQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CarApplyQueryRequest struct {
	// example:
	//
	// 2021-03-18 20:26:56
	CreatedEndAt *string `json:"created_end_at,omitempty" xml:"created_end_at,omitempty"`
	// example:
	//
	// 2021-03-18 20:26:56
	CreatedStartAt *string `json:"created_start_at,omitempty" xml:"created_start_at,omitempty"`
	// example:
	//
	// 1
	PageNumber *int32 `json:"page_number,omitempty" xml:"page_number,omitempty"`
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// apply1
	ThirdPartApplyId *string `json:"third_part_apply_id,omitempty" xml:"third_part_apply_id,omitempty"`
	// example:
	//
	// userid
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CarApplyQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s CarApplyQueryRequest) GoString() string {
	return s.String()
}

func (s *CarApplyQueryRequest) SetCreatedEndAt(v string) *CarApplyQueryRequest {
	s.CreatedEndAt = &v
	return s
}

func (s *CarApplyQueryRequest) SetCreatedStartAt(v string) *CarApplyQueryRequest {
	s.CreatedStartAt = &v
	return s
}

func (s *CarApplyQueryRequest) SetPageNumber(v int32) *CarApplyQueryRequest {
	s.PageNumber = &v
	return s
}

func (s *CarApplyQueryRequest) SetPageSize(v int32) *CarApplyQueryRequest {
	s.PageSize = &v
	return s
}

func (s *CarApplyQueryRequest) SetThirdPartApplyId(v string) *CarApplyQueryRequest {
	s.ThirdPartApplyId = &v
	return s
}

func (s *CarApplyQueryRequest) SetUserId(v string) *CarApplyQueryRequest {
	s.UserId = &v
	return s
}

type CarApplyQueryResponseBody struct {
	ApplyList []*CarApplyQueryResponseBodyApplyList `json:"apply_list,omitempty" xml:"apply_list,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// True
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 6
	Total *int32 `json:"total,omitempty" xml:"total,omitempty"`
	// example:
	//
	// 210bcc3a16583004579056128d33d7
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CarApplyQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CarApplyQueryResponseBody) GoString() string {
	return s.String()
}

func (s *CarApplyQueryResponseBody) SetApplyList(v []*CarApplyQueryResponseBodyApplyList) *CarApplyQueryResponseBody {
	s.ApplyList = v
	return s
}

func (s *CarApplyQueryResponseBody) SetCode(v string) *CarApplyQueryResponseBody {
	s.Code = &v
	return s
}

func (s *CarApplyQueryResponseBody) SetMessage(v string) *CarApplyQueryResponseBody {
	s.Message = &v
	return s
}

func (s *CarApplyQueryResponseBody) SetRequestId(v string) *CarApplyQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *CarApplyQueryResponseBody) SetSuccess(v bool) *CarApplyQueryResponseBody {
	s.Success = &v
	return s
}

func (s *CarApplyQueryResponseBody) SetTotal(v int32) *CarApplyQueryResponseBody {
	s.Total = &v
	return s
}

func (s *CarApplyQueryResponseBody) SetTraceId(v string) *CarApplyQueryResponseBody {
	s.TraceId = &v
	return s
}

type CarApplyQueryResponseBodyApplyList struct {
	ApproverList []*CarApplyQueryResponseBodyApplyListApproverList `json:"approver_list,omitempty" xml:"approver_list,omitempty" type:"Repeated"`
	BusinessType *string                                           `json:"business_type,omitempty" xml:"business_type,omitempty"`
	// example:
	//
	// depart1
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// example:
	//
	// 2021-03-18T20:26Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2021-03-18T20:26Z
	GmtModified         *string                                            `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	ItineraryList       []*CarApplyQueryResponseBodyApplyListItineraryList `json:"itinerary_list,omitempty" xml:"itinerary_list,omitempty" type:"Repeated"`
	OrderId             *int64                                             `json:"order_id,omitempty" xml:"order_id,omitempty"`
	RelatedThirdApplyId *string                                            `json:"related_third_apply_id,omitempty" xml:"related_third_apply_id,omitempty"`
	// example:
	//
	// 2
	Status     *int32  `json:"status,omitempty" xml:"status,omitempty"`
	StatusDesc *string `json:"status_desc,omitempty" xml:"status_desc,omitempty"`
	// example:
	//
	// 1
	ThirdpartId      *string                                               `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
	TravelerStandard []*CarApplyQueryResponseBodyApplyListTravelerStandard `json:"traveler_standard,omitempty" xml:"traveler_standard,omitempty" type:"Repeated"`
	TripCause        *string                                               `json:"trip_cause,omitempty" xml:"trip_cause,omitempty"`
	TripTitle        *string                                               `json:"trip_title,omitempty" xml:"trip_title,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s CarApplyQueryResponseBodyApplyList) String() string {
	return tea.Prettify(s)
}

func (s CarApplyQueryResponseBodyApplyList) GoString() string {
	return s.String()
}

func (s *CarApplyQueryResponseBodyApplyList) SetApproverList(v []*CarApplyQueryResponseBodyApplyListApproverList) *CarApplyQueryResponseBodyApplyList {
	s.ApproverList = v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetBusinessType(v string) *CarApplyQueryResponseBodyApplyList {
	s.BusinessType = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetDepartId(v string) *CarApplyQueryResponseBodyApplyList {
	s.DepartId = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetDepartName(v string) *CarApplyQueryResponseBodyApplyList {
	s.DepartName = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetGmtCreate(v string) *CarApplyQueryResponseBodyApplyList {
	s.GmtCreate = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetGmtModified(v string) *CarApplyQueryResponseBodyApplyList {
	s.GmtModified = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetItineraryList(v []*CarApplyQueryResponseBodyApplyListItineraryList) *CarApplyQueryResponseBodyApplyList {
	s.ItineraryList = v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetOrderId(v int64) *CarApplyQueryResponseBodyApplyList {
	s.OrderId = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetRelatedThirdApplyId(v string) *CarApplyQueryResponseBodyApplyList {
	s.RelatedThirdApplyId = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetStatus(v int32) *CarApplyQueryResponseBodyApplyList {
	s.Status = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetStatusDesc(v string) *CarApplyQueryResponseBodyApplyList {
	s.StatusDesc = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetThirdpartId(v string) *CarApplyQueryResponseBodyApplyList {
	s.ThirdpartId = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetTravelerStandard(v []*CarApplyQueryResponseBodyApplyListTravelerStandard) *CarApplyQueryResponseBodyApplyList {
	s.TravelerStandard = v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetTripCause(v string) *CarApplyQueryResponseBodyApplyList {
	s.TripCause = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetTripTitle(v string) *CarApplyQueryResponseBodyApplyList {
	s.TripTitle = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetUserId(v string) *CarApplyQueryResponseBodyApplyList {
	s.UserId = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyList) SetUserName(v string) *CarApplyQueryResponseBodyApplyList {
	s.UserName = &v
	return s
}

type CarApplyQueryResponseBodyApplyListApproverList struct {
	Note *string `json:"note,omitempty" xml:"note,omitempty"`
	// example:
	//
	// 2021-03-18T20:26Z
	OperateTime *string `json:"operate_time,omitempty" xml:"operate_time,omitempty"`
	// example:
	//
	// 1
	Order *int32 `json:"order,omitempty" xml:"order,omitempty"`
	// example:
	//
	// 1
	Status     *int32  `json:"status,omitempty" xml:"status,omitempty"`
	StatusDesc *string `json:"status_desc,omitempty" xml:"status_desc,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s CarApplyQueryResponseBodyApplyListApproverList) String() string {
	return tea.Prettify(s)
}

func (s CarApplyQueryResponseBodyApplyListApproverList) GoString() string {
	return s.String()
}

func (s *CarApplyQueryResponseBodyApplyListApproverList) SetNote(v string) *CarApplyQueryResponseBodyApplyListApproverList {
	s.Note = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListApproverList) SetOperateTime(v string) *CarApplyQueryResponseBodyApplyListApproverList {
	s.OperateTime = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListApproverList) SetOrder(v int32) *CarApplyQueryResponseBodyApplyListApproverList {
	s.Order = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListApproverList) SetStatus(v int32) *CarApplyQueryResponseBodyApplyListApproverList {
	s.Status = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListApproverList) SetStatusDesc(v string) *CarApplyQueryResponseBodyApplyListApproverList {
	s.StatusDesc = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListApproverList) SetUserId(v string) *CarApplyQueryResponseBodyApplyListApproverList {
	s.UserId = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListApproverList) SetUserName(v string) *CarApplyQueryResponseBodyApplyListApproverList {
	s.UserName = &v
	return s
}

type CarApplyQueryResponseBodyApplyListItineraryList struct {
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 2021-03-18T20:26Z
	ArrDate *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	// example:
	//
	// 1
	CostCenterId   *int64  `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	DepCity        *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// HGH
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2021-03-18T20:26Z
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 1
	InvoiceId   *int64  `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	InvoiceName *string `json:"invoice_name,omitempty" xml:"invoice_name,omitempty"`
	// example:
	//
	// 1
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	// example:
	//
	// xm1
	ProjectCode  *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// example:
	//
	// 4
	TrafficType *int32 `json:"traffic_type,omitempty" xml:"traffic_type,omitempty"`
}

func (s CarApplyQueryResponseBodyApplyListItineraryList) String() string {
	return tea.Prettify(s)
}

func (s CarApplyQueryResponseBodyApplyListItineraryList) GoString() string {
	return s.String()
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetArrCity(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.ArrCity = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetArrCityCode(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.ArrCityCode = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetArrDate(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.ArrDate = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetCostCenterId(v int64) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.CostCenterId = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetCostCenterName(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.CostCenterName = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetDepCity(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.DepCity = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetDepCityCode(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.DepCityCode = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetDepDate(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.DepDate = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetInvoiceId(v int64) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.InvoiceId = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetInvoiceName(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.InvoiceName = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetItineraryId(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.ItineraryId = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetProjectCode(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.ProjectCode = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetProjectTitle(v string) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.ProjectTitle = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListItineraryList) SetTrafficType(v int32) *CarApplyQueryResponseBodyApplyListItineraryList {
	s.TrafficType = &v
	return s
}

type CarApplyQueryResponseBodyApplyListTravelerStandard struct {
	CarCitySet []*CarApplyQueryResponseBodyApplyListTravelerStandardCarCitySet `json:"car_city_set,omitempty" xml:"car_city_set,omitempty" type:"Repeated"`
	UserId     *string                                                         `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CarApplyQueryResponseBodyApplyListTravelerStandard) String() string {
	return tea.Prettify(s)
}

func (s CarApplyQueryResponseBodyApplyListTravelerStandard) GoString() string {
	return s.String()
}

func (s *CarApplyQueryResponseBodyApplyListTravelerStandard) SetCarCitySet(v []*CarApplyQueryResponseBodyApplyListTravelerStandardCarCitySet) *CarApplyQueryResponseBodyApplyListTravelerStandard {
	s.CarCitySet = v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListTravelerStandard) SetUserId(v string) *CarApplyQueryResponseBodyApplyListTravelerStandard {
	s.UserId = &v
	return s
}

type CarApplyQueryResponseBodyApplyListTravelerStandardCarCitySet struct {
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
}

func (s CarApplyQueryResponseBodyApplyListTravelerStandardCarCitySet) String() string {
	return tea.Prettify(s)
}

func (s CarApplyQueryResponseBodyApplyListTravelerStandardCarCitySet) GoString() string {
	return s.String()
}

func (s *CarApplyQueryResponseBodyApplyListTravelerStandardCarCitySet) SetCityCode(v string) *CarApplyQueryResponseBodyApplyListTravelerStandardCarCitySet {
	s.CityCode = &v
	return s
}

func (s *CarApplyQueryResponseBodyApplyListTravelerStandardCarCitySet) SetCityName(v string) *CarApplyQueryResponseBodyApplyListTravelerStandardCarCitySet {
	s.CityName = &v
	return s
}

type CarApplyQueryResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CarApplyQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CarApplyQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s CarApplyQueryResponse) GoString() string {
	return s.String()
}

func (s *CarApplyQueryResponse) SetHeaders(v map[string]*string) *CarApplyQueryResponse {
	s.Headers = v
	return s
}

func (s *CarApplyQueryResponse) SetStatusCode(v int32) *CarApplyQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *CarApplyQueryResponse) SetBody(v *CarApplyQueryResponseBody) *CarApplyQueryResponse {
	s.Body = v
	return s
}

type CarBillSettlementQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CarBillSettlementQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s CarBillSettlementQueryHeaders) GoString() string {
	return s.String()
}

func (s *CarBillSettlementQueryHeaders) SetCommonHeaders(v map[string]*string) *CarBillSettlementQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CarBillSettlementQueryHeaders) SetXAcsBtripSoCorpToken(v string) *CarBillSettlementQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CarBillSettlementQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 30
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-07-01
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-07-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
}

func (s CarBillSettlementQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s CarBillSettlementQueryRequest) GoString() string {
	return s.String()
}

func (s *CarBillSettlementQueryRequest) SetPageNo(v int32) *CarBillSettlementQueryRequest {
	s.PageNo = &v
	return s
}

func (s *CarBillSettlementQueryRequest) SetPageSize(v int32) *CarBillSettlementQueryRequest {
	s.PageSize = &v
	return s
}

func (s *CarBillSettlementQueryRequest) SetPeriodEnd(v string) *CarBillSettlementQueryRequest {
	s.PeriodEnd = &v
	return s
}

func (s *CarBillSettlementQueryRequest) SetPeriodStart(v string) *CarBillSettlementQueryRequest {
	s.PeriodStart = &v
	return s
}

type CarBillSettlementQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                   `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                   `json:"message,omitempty" xml:"message,omitempty"`
	Module  *CarBillSettlementQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CarBillSettlementQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CarBillSettlementQueryResponseBody) GoString() string {
	return s.String()
}

func (s *CarBillSettlementQueryResponseBody) SetCode(v string) *CarBillSettlementQueryResponseBody {
	s.Code = &v
	return s
}

func (s *CarBillSettlementQueryResponseBody) SetMessage(v string) *CarBillSettlementQueryResponseBody {
	s.Message = &v
	return s
}

func (s *CarBillSettlementQueryResponseBody) SetModule(v *CarBillSettlementQueryResponseBodyModule) *CarBillSettlementQueryResponseBody {
	s.Module = v
	return s
}

func (s *CarBillSettlementQueryResponseBody) SetRequestId(v string) *CarBillSettlementQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBody) SetSuccess(v bool) *CarBillSettlementQueryResponseBody {
	s.Success = &v
	return s
}

func (s *CarBillSettlementQueryResponseBody) SetTraceId(v string) *CarBillSettlementQueryResponseBody {
	s.TraceId = &v
	return s
}

type CarBillSettlementQueryResponseBodyModule struct {
	// example:
	//
	// 4
	Category *int32                                              `json:"category,omitempty" xml:"category,omitempty"`
	CorpId   *string                                             `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	DataList []*CarBillSettlementQueryResponseBodyModuleDataList `json:"data_list,omitempty" xml:"data_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2021-10-14
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// example:
	//
	// 2021-10-13
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
	// example:
	//
	// 2695
	TotalNum *int64 `json:"total_num,omitempty" xml:"total_num,omitempty"`
}

func (s CarBillSettlementQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CarBillSettlementQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CarBillSettlementQueryResponseBodyModule) SetCategory(v int32) *CarBillSettlementQueryResponseBodyModule {
	s.Category = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModule) SetCorpId(v string) *CarBillSettlementQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModule) SetDataList(v []*CarBillSettlementQueryResponseBodyModuleDataList) *CarBillSettlementQueryResponseBodyModule {
	s.DataList = v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModule) SetPeriodEnd(v string) *CarBillSettlementQueryResponseBodyModule {
	s.PeriodEnd = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModule) SetPeriodStart(v string) *CarBillSettlementQueryResponseBodyModule {
	s.PeriodStart = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModule) SetTotalNum(v int64) *CarBillSettlementQueryResponseBodyModule {
	s.TotalNum = &v
	return s
}

type CarBillSettlementQueryResponseBodyModuleDataList struct {
	// example:
	//
	// 34534543545345
	AlipayTradeNo    *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	ApplyArrCityCode *string `json:"apply_arr_city_code,omitempty" xml:"apply_arr_city_code,omitempty"`
	ApplyArrCityName *string `json:"apply_arr_city_name,omitempty" xml:"apply_arr_city_name,omitempty"`
	ApplyDepCityCode *string `json:"apply_dep_city_code,omitempty" xml:"apply_dep_city_code,omitempty"`
	ApplyDepCityName *string `json:"apply_dep_city_name,omitempty" xml:"apply_dep_city_name,omitempty"`
	// 审批扩展自定义字段
	ApplyExtendField *string `json:"apply_extend_field,omitempty" xml:"apply_extend_field,omitempty"`
	ApplyId          *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ArrCity          *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrCityCode      *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 2022-07-02
	ArrDate     *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	ArrLocation *string `json:"arr_location,omitempty" xml:"arr_location,omitempty"`
	// example:
	//
	// 13:51:43
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	BillRecordTime *string `json:"bill_record_time,omitempty" xml:"bill_record_time,omitempty"`
	BookModel      *string `json:"book_model,omitempty" xml:"book_model,omitempty"`
	// example:
	//
	// 2022-05-15 22:27:00
	BookTime *string `json:"book_time,omitempty" xml:"book_time,omitempty"`
	BookerId *string `json:"booker_id,omitempty" xml:"booker_id,omitempty"`
	// example:
	//
	// 70022164
	BookerJobNo      *string `json:"booker_job_no,omitempty" xml:"booker_job_no,omitempty"`
	BookerName       *string `json:"booker_name,omitempty" xml:"booker_name,omitempty"`
	BusinessCategory *string `json:"business_category,omitempty" xml:"business_category,omitempty"`
	// example:
	//
	// 1
	CapitalDirection  *string `json:"capital_direction,omitempty" xml:"capital_direction,omitempty"`
	CarLevel          *string `json:"car_level,omitempty" xml:"car_level,omitempty"`
	CascadeDepartment *string `json:"cascade_department,omitempty" xml:"cascade_department,omitempty"`
	CostCenter        *string `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	// example:
	//
	// 2391-CN90.150
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// 1
	Coupon *float64 `json:"coupon,omitempty" xml:"coupon,omitempty"`
	// example:
	//
	// 12.7
	CouponPrice  *float64 `json:"coupon_price,omitempty" xml:"coupon_price,omitempty"`
	DepCityCode  *string  `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	Department   *string  `json:"department,omitempty" xml:"department,omitempty"`
	DepartmentId *string  `json:"department_id,omitempty" xml:"department_id,omitempty"`
	DeptCity     *string  `json:"dept_city,omitempty" xml:"dept_city,omitempty"`
	// example:
	//
	// 2021-10-13
	DeptDate     *string `json:"dept_date,omitempty" xml:"dept_date,omitempty"`
	DeptLocation *string `json:"dept_location,omitempty" xml:"dept_location,omitempty"`
	// example:
	//
	// 13:46:05
	DeptTime        *string  `json:"dept_time,omitempty" xml:"dept_time,omitempty"`
	DriverAddDetail *string  `json:"driver_add_detail,omitempty" xml:"driver_add_detail,omitempty"`
	DriverAddFee    *float64 `json:"driver_add_fee,omitempty" xml:"driver_add_fee,omitempty"`
	// example:
	//
	// 29.07
	EstimateDriveDistance *string `json:"estimate_drive_distance,omitempty" xml:"estimate_drive_distance,omitempty"`
	// example:
	//
	// 69
	EstimatePrice *float64 `json:"estimate_price,omitempty" xml:"estimate_price,omitempty"`
	// example:
	//
	// 40107
	FeeType *string `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	// example:
	//
	// 4988580
	Index        *string `json:"index,omitempty" xml:"index,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	LevelName    *string `json:"level_name,omitempty" xml:"level_name,omitempty"`
	Memo         *string `json:"memo,omitempty" xml:"memo,omitempty"`
	// example:
	//
	// 110285961234324
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 12.7
	OrderPrice *float64 `json:"order_price,omitempty" xml:"order_price,omitempty"`
	// example:
	//
	// 34535465346
	OverApplyId           *string `json:"over_apply_id,omitempty" xml:"over_apply_id,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 0
	PersonSettleFee *float64 `json:"person_settle_fee,omitempty" xml:"person_settle_fee,omitempty"`
	// example:
	//
	// 4988580
	PrimaryId *int64 `json:"primary_id,omitempty" xml:"primary_id,omitempty"`
	// example:
	//
	// 23423432423
	ProjectCode  *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName  *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	ProviderName *string `json:"provider_name,omitempty" xml:"provider_name,omitempty"`
	// example:
	//
	// 0.00
	RealDriveDistance *string `json:"real_drive_distance,omitempty" xml:"real_drive_distance,omitempty"`
	RealFromAddr      *string `json:"real_from_addr,omitempty" xml:"real_from_addr,omitempty"`
	RealToAddr        *string `json:"real_to_addr,omitempty" xml:"real_to_addr,omitempty"`
	Remark            *string `json:"remark,omitempty" xml:"remark,omitempty"`
	// example:
	//
	// 12.7
	ServiceFee *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 5
	SettlementFee *float64 `json:"settlement_fee,omitempty" xml:"settlement_fee,omitempty"`
	// example:
	//
	// 6.11
	SettlementGrantFee *float64 `json:"settlement_grant_fee,omitempty" xml:"settlement_grant_fee,omitempty"`
	// example:
	//
	// 2022-05-15 22:27:00
	SettlementTime *string `json:"settlement_time,omitempty" xml:"settlement_time,omitempty"`
	// example:
	//
	// 4
	SettlementType *string `json:"settlement_type,omitempty" xml:"settlement_type,omitempty"`
	SpecialOrder   *string `json:"special_order,omitempty" xml:"special_order,omitempty"`
	SpecialReason  *string `json:"special_reason,omitempty" xml:"special_reason,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 123123232
	SubOrderId        *string `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
	SupplementApplyId *string `json:"supplement_apply_id,omitempty" xml:"supplement_apply_id,omitempty"`
	// 税率
	//
	// example:
	//
	// 6%
	TaxRate          *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	ThirdItineraryId *string `json:"third_itinerary_id,omitempty" xml:"third_itinerary_id,omitempty"`
	TimeType         *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	TravelerId       *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	// example:
	//
	// 70022164
	TravelerJobNo          *string `json:"traveler_job_no,omitempty" xml:"traveler_job_no,omitempty"`
	TravelerMemberTypeName *string `json:"traveler_member_type_name,omitempty" xml:"traveler_member_type_name,omitempty"`
	TravelerName           *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
	UserConfirmDesc        *string `json:"user_confirm_desc,omitempty" xml:"user_confirm_desc,omitempty"`
	// example:
	//
	// 11
	VoucherType *int32 `json:"voucher_type,omitempty" xml:"voucher_type,omitempty"`
}

func (s CarBillSettlementQueryResponseBodyModuleDataList) String() string {
	return tea.Prettify(s)
}

func (s CarBillSettlementQueryResponseBodyModuleDataList) GoString() string {
	return s.String()
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetAlipayTradeNo(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.AlipayTradeNo = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityCode(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityCode = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityName(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityName = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityCode(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityCode = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityName(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityName = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetApplyExtendField(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyExtendField = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetApplyId(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetArrCity(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ArrCity = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetArrCityCode(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ArrCityCode = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetArrDate(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ArrDate = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetArrLocation(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ArrLocation = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetArrTime(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ArrTime = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetBillRecordTime(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.BillRecordTime = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetBookModel(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.BookModel = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetBookTime(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.BookTime = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetBookerId(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.BookerId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetBookerJobNo(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.BookerJobNo = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetBookerName(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.BookerName = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetBusinessCategory(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.BusinessCategory = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetCapitalDirection(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.CapitalDirection = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetCarLevel(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.CarLevel = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetCascadeDepartment(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.CascadeDepartment = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetCostCenter(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenter = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetCostCenterNumber(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenterNumber = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetCoupon(v float64) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.Coupon = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetCouponPrice(v float64) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.CouponPrice = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetDepCityCode(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.DepCityCode = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetDepartment(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.Department = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetDepartmentId(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.DepartmentId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetDeptCity(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.DeptCity = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetDeptDate(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.DeptDate = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetDeptLocation(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.DeptLocation = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetDeptTime(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.DeptTime = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetDriverAddDetail(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.DriverAddDetail = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetDriverAddFee(v float64) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.DriverAddFee = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetEstimateDriveDistance(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.EstimateDriveDistance = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetEstimatePrice(v float64) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.EstimatePrice = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetFeeType(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.FeeType = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetIndex(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.Index = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetInvoiceTitle(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.InvoiceTitle = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetLevelName(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.LevelName = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetMemo(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.Memo = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetOrderId(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.OrderId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetOrderPrice(v float64) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.OrderPrice = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetOverApplyId(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.OverApplyId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentId(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentName(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetPersonSettleFee(v float64) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.PersonSettleFee = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetPrimaryId(v int64) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.PrimaryId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetProjectCode(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectCode = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetProjectName(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectName = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetProviderName(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ProviderName = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetRealDriveDistance(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.RealDriveDistance = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetRealFromAddr(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.RealFromAddr = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetRealToAddr(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.RealToAddr = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetRemark(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.Remark = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetServiceFee(v float64) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ServiceFee = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetSettlementFee(v float64) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementFee = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetSettlementGrantFee(v float64) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementGrantFee = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetSettlementTime(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementTime = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetSettlementType(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementType = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetSpecialOrder(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.SpecialOrder = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetSpecialReason(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.SpecialReason = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetStatus(v int32) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.Status = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetSubOrderId(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.SubOrderId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetSupplementApplyId(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.SupplementApplyId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetTaxRate(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.TaxRate = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetThirdItineraryId(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.ThirdItineraryId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetTimeType(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.TimeType = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetTravelerId(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerId = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetTravelerJobNo(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerJobNo = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetTravelerMemberTypeName(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerMemberTypeName = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetTravelerName(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerName = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetUserConfirmDesc(v string) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.UserConfirmDesc = &v
	return s
}

func (s *CarBillSettlementQueryResponseBodyModuleDataList) SetVoucherType(v int32) *CarBillSettlementQueryResponseBodyModuleDataList {
	s.VoucherType = &v
	return s
}

type CarBillSettlementQueryResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CarBillSettlementQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CarBillSettlementQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s CarBillSettlementQueryResponse) GoString() string {
	return s.String()
}

func (s *CarBillSettlementQueryResponse) SetHeaders(v map[string]*string) *CarBillSettlementQueryResponse {
	s.Headers = v
	return s
}

func (s *CarBillSettlementQueryResponse) SetStatusCode(v int32) *CarBillSettlementQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *CarBillSettlementQueryResponse) SetBody(v *CarBillSettlementQueryResponseBody) *CarBillSettlementQueryResponse {
	s.Body = v
	return s
}

type CarOrderListQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CarOrderListQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s CarOrderListQueryHeaders) GoString() string {
	return s.String()
}

func (s *CarOrderListQueryHeaders) SetCommonHeaders(v map[string]*string) *CarOrderListQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CarOrderListQueryHeaders) SetXAcsBtripSoCorpToken(v string) *CarOrderListQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CarOrderListQueryRequest struct {
	// example:
	//
	// false
	AllApply *bool `json:"all_apply,omitempty" xml:"all_apply,omitempty"`
	// example:
	//
	// 117429516
	ApplyId *int64 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// departId
	DepartId *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	EndTime *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 1
	Page *int32 `json:"page,omitempty" xml:"page,omitempty"`
	// example:
	//
	// 10
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	StartTime *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// cs2NH_n1QTC3R6hB9m-BAQ08221658314273
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	UpdateEndTime *string `json:"update_end_time,omitempty" xml:"update_end_time,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	UpdateStartTime *string `json:"update_start_time,omitempty" xml:"update_start_time,omitempty"`
	// example:
	//
	// userId
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CarOrderListQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s CarOrderListQueryRequest) GoString() string {
	return s.String()
}

func (s *CarOrderListQueryRequest) SetAllApply(v bool) *CarOrderListQueryRequest {
	s.AllApply = &v
	return s
}

func (s *CarOrderListQueryRequest) SetApplyId(v int64) *CarOrderListQueryRequest {
	s.ApplyId = &v
	return s
}

func (s *CarOrderListQueryRequest) SetDepartId(v string) *CarOrderListQueryRequest {
	s.DepartId = &v
	return s
}

func (s *CarOrderListQueryRequest) SetEndTime(v string) *CarOrderListQueryRequest {
	s.EndTime = &v
	return s
}

func (s *CarOrderListQueryRequest) SetPage(v int32) *CarOrderListQueryRequest {
	s.Page = &v
	return s
}

func (s *CarOrderListQueryRequest) SetPageSize(v int32) *CarOrderListQueryRequest {
	s.PageSize = &v
	return s
}

func (s *CarOrderListQueryRequest) SetStartTime(v string) *CarOrderListQueryRequest {
	s.StartTime = &v
	return s
}

func (s *CarOrderListQueryRequest) SetThirdpartApplyId(v string) *CarOrderListQueryRequest {
	s.ThirdpartApplyId = &v
	return s
}

func (s *CarOrderListQueryRequest) SetUpdateEndTime(v string) *CarOrderListQueryRequest {
	s.UpdateEndTime = &v
	return s
}

func (s *CarOrderListQueryRequest) SetUpdateStartTime(v string) *CarOrderListQueryRequest {
	s.UpdateStartTime = &v
	return s
}

func (s *CarOrderListQueryRequest) SetUserId(v string) *CarOrderListQueryRequest {
	s.UserId = &v
	return s
}

type CarOrderListQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code     *string                                `json:"code,omitempty" xml:"code,omitempty"`
	Message  *string                                `json:"message,omitempty" xml:"message,omitempty"`
	Module   []*CarOrderListQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	PageInfo *CarOrderListQueryResponseBodyPageInfo `json:"page_info,omitempty" xml:"page_info,omitempty" type:"Struct"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CarOrderListQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CarOrderListQueryResponseBody) GoString() string {
	return s.String()
}

func (s *CarOrderListQueryResponseBody) SetCode(v string) *CarOrderListQueryResponseBody {
	s.Code = &v
	return s
}

func (s *CarOrderListQueryResponseBody) SetMessage(v string) *CarOrderListQueryResponseBody {
	s.Message = &v
	return s
}

func (s *CarOrderListQueryResponseBody) SetModule(v []*CarOrderListQueryResponseBodyModule) *CarOrderListQueryResponseBody {
	s.Module = v
	return s
}

func (s *CarOrderListQueryResponseBody) SetPageInfo(v *CarOrderListQueryResponseBodyPageInfo) *CarOrderListQueryResponseBody {
	s.PageInfo = v
	return s
}

func (s *CarOrderListQueryResponseBody) SetRequestId(v string) *CarOrderListQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *CarOrderListQueryResponseBody) SetSuccess(v bool) *CarOrderListQueryResponseBody {
	s.Success = &v
	return s
}

func (s *CarOrderListQueryResponseBody) SetTraceId(v string) *CarOrderListQueryResponseBody {
	s.TraceId = &v
	return s
}

type CarOrderListQueryResponseBodyModule struct {
	// example:
	//
	// 117429516
	ApplyId *int64 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 201802031353000525653
	ApplyShowId *string `json:"apply_show_id,omitempty" xml:"apply_show_id,omitempty"`
	BtripTitle  *string `json:"btrip_title,omitempty" xml:"btrip_title,omitempty"`
	// example:
	//
	// TRAVEL
	BusinessCategory *string `json:"business_category,omitempty" xml:"business_category,omitempty"`
	// example:
	//
	// 2022-07-04T16:13Z
	CancelTime *string `json:"cancel_time,omitempty" xml:"cancel_time,omitempty"`
	CarInfo    *string `json:"car_info,omitempty" xml:"car_info,omitempty"`
	// example:
	//
	// 1
	CarLevel *int32  `json:"car_level,omitempty" xml:"car_level,omitempty"`
	CorpId   *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	// example:
	//
	// 11376
	CostCenterId   *int64  `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// CT-134JHK
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	DeptId           *int64  `json:"dept_id,omitempty" xml:"dept_id,omitempty"`
	DeptName         *string `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	// example:
	//
	// 2022-07-04T16:13Z
	DriverConfirmTime *string `json:"driver_confirm_time,omitempty" xml:"driver_confirm_time,omitempty"`
	// example:
	//
	// 100
	EstimatePrice  *float64 `json:"estimate_price,omitempty" xml:"estimate_price,omitempty"`
	FromAddress    *string  `json:"from_address,omitempty" xml:"from_address,omitempty"`
	FromCityAdCode *string  `json:"from_city_ad_code,omitempty" xml:"from_city_ad_code,omitempty"`
	FromCityName   *string  `json:"from_city_name,omitempty" xml:"from_city_name,omitempty"`
	// example:
	//
	// 2022-07-04T16:13Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-07-04T16:13Z
	GmtModified *string `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	// example:
	//
	// 3615085
	Id *int64 `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// 11876
	InvoiceId    *int64  `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// true
	IsSpecial     *bool   `json:"is_special,omitempty" xml:"is_special,omitempty"`
	Memo          *string `json:"memo,omitempty" xml:"memo,omitempty"`
	OrderStatus   *int32  `json:"order_status,omitempty" xml:"order_status,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 2022-07-04T16:13Z
	PayTime       *string                                             `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	PriceInfoList []*CarOrderListQueryResponseBodyModulePriceInfoList `json:"price_info_list,omitempty" xml:"price_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// P- JI87KK
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	// example:
	//
	// 11546
	ProjectId    *int64  `json:"project_id,omitempty" xml:"project_id,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// example:
	//
	// 2
	Provider *int32 `json:"provider,omitempty" xml:"provider,omitempty"`
	// example:
	//
	// 2022-07-04T16:13Z
	PublishTime        *string `json:"publish_time,omitempty" xml:"publish_time,omitempty"`
	RealFromAddress    *string `json:"real_from_address,omitempty" xml:"real_from_address,omitempty"`
	RealFromCityAdCode *string `json:"real_from_city_ad_code,omitempty" xml:"real_from_city_ad_code,omitempty"`
	RealFromCityName   *string `json:"real_from_city_name,omitempty" xml:"real_from_city_name,omitempty"`
	RealToAddress      *string `json:"real_to_address,omitempty" xml:"real_to_address,omitempty"`
	RealToCityAdCode   *string `json:"real_to_city_ad_code,omitempty" xml:"real_to_city_ad_code,omitempty"`
	RealToCityName     *string `json:"real_to_city_name,omitempty" xml:"real_to_city_name,omitempty"`
	// example:
	//
	// 1
	ServiceType  *int32    `json:"service_type,omitempty" xml:"service_type,omitempty"`
	SpecialTypes []*string `json:"special_types,omitempty" xml:"special_types,omitempty" type:"Repeated"`
	// example:
	//
	// 2022-07-04T16:13Z
	TakenTime *string `json:"taken_time,omitempty" xml:"taken_time,omitempty"`
	// example:
	//
	// CS-OIPK34H
	ThirdpartApplyId    *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	// example:
	//
	// CS-112JKDF
	ThirdpartItineraryId *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	ToAddress            *string `json:"to_address,omitempty" xml:"to_address,omitempty"`
	ToCityAdCode         *string `json:"to_city_ad_code,omitempty" xml:"to_city_ad_code,omitempty"`
	ToCityName           *string `json:"to_city_name,omitempty" xml:"to_city_name,omitempty"`
	// example:
	//
	// 1.2
	TravelDistance    *float64                                                `json:"travel_distance,omitempty" xml:"travel_distance,omitempty"`
	UserAffiliateList []*CarOrderListQueryResponseBodyModuleUserAffiliateList `json:"user_affiliate_list,omitempty" xml:"user_affiliate_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	UserConfirm *int32  `json:"user_confirm,omitempty" xml:"user_confirm,omitempty"`
	UserId      *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName    *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s CarOrderListQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CarOrderListQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CarOrderListQueryResponseBodyModule) SetApplyId(v int64) *CarOrderListQueryResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetApplyShowId(v string) *CarOrderListQueryResponseBodyModule {
	s.ApplyShowId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetBtripTitle(v string) *CarOrderListQueryResponseBodyModule {
	s.BtripTitle = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetBusinessCategory(v string) *CarOrderListQueryResponseBodyModule {
	s.BusinessCategory = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetCancelTime(v string) *CarOrderListQueryResponseBodyModule {
	s.CancelTime = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetCarInfo(v string) *CarOrderListQueryResponseBodyModule {
	s.CarInfo = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetCarLevel(v int32) *CarOrderListQueryResponseBodyModule {
	s.CarLevel = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetCorpId(v string) *CarOrderListQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetCorpName(v string) *CarOrderListQueryResponseBodyModule {
	s.CorpName = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetCostCenterId(v int64) *CarOrderListQueryResponseBodyModule {
	s.CostCenterId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetCostCenterName(v string) *CarOrderListQueryResponseBodyModule {
	s.CostCenterName = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetCostCenterNumber(v string) *CarOrderListQueryResponseBodyModule {
	s.CostCenterNumber = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetDeptId(v int64) *CarOrderListQueryResponseBodyModule {
	s.DeptId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetDeptName(v string) *CarOrderListQueryResponseBodyModule {
	s.DeptName = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetDriverConfirmTime(v string) *CarOrderListQueryResponseBodyModule {
	s.DriverConfirmTime = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetEstimatePrice(v float64) *CarOrderListQueryResponseBodyModule {
	s.EstimatePrice = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetFromAddress(v string) *CarOrderListQueryResponseBodyModule {
	s.FromAddress = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetFromCityAdCode(v string) *CarOrderListQueryResponseBodyModule {
	s.FromCityAdCode = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetFromCityName(v string) *CarOrderListQueryResponseBodyModule {
	s.FromCityName = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetGmtCreate(v string) *CarOrderListQueryResponseBodyModule {
	s.GmtCreate = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetGmtModified(v string) *CarOrderListQueryResponseBodyModule {
	s.GmtModified = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetId(v int64) *CarOrderListQueryResponseBodyModule {
	s.Id = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetInvoiceId(v int64) *CarOrderListQueryResponseBodyModule {
	s.InvoiceId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetInvoiceTitle(v string) *CarOrderListQueryResponseBodyModule {
	s.InvoiceTitle = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetIsSpecial(v bool) *CarOrderListQueryResponseBodyModule {
	s.IsSpecial = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetMemo(v string) *CarOrderListQueryResponseBodyModule {
	s.Memo = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetOrderStatus(v int32) *CarOrderListQueryResponseBodyModule {
	s.OrderStatus = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetPassengerName(v string) *CarOrderListQueryResponseBodyModule {
	s.PassengerName = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetPayTime(v string) *CarOrderListQueryResponseBodyModule {
	s.PayTime = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetPriceInfoList(v []*CarOrderListQueryResponseBodyModulePriceInfoList) *CarOrderListQueryResponseBodyModule {
	s.PriceInfoList = v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetProjectCode(v string) *CarOrderListQueryResponseBodyModule {
	s.ProjectCode = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetProjectId(v int64) *CarOrderListQueryResponseBodyModule {
	s.ProjectId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetProjectTitle(v string) *CarOrderListQueryResponseBodyModule {
	s.ProjectTitle = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetProvider(v int32) *CarOrderListQueryResponseBodyModule {
	s.Provider = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetPublishTime(v string) *CarOrderListQueryResponseBodyModule {
	s.PublishTime = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetRealFromAddress(v string) *CarOrderListQueryResponseBodyModule {
	s.RealFromAddress = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetRealFromCityAdCode(v string) *CarOrderListQueryResponseBodyModule {
	s.RealFromCityAdCode = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetRealFromCityName(v string) *CarOrderListQueryResponseBodyModule {
	s.RealFromCityName = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetRealToAddress(v string) *CarOrderListQueryResponseBodyModule {
	s.RealToAddress = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetRealToCityAdCode(v string) *CarOrderListQueryResponseBodyModule {
	s.RealToCityAdCode = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetRealToCityName(v string) *CarOrderListQueryResponseBodyModule {
	s.RealToCityName = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetServiceType(v int32) *CarOrderListQueryResponseBodyModule {
	s.ServiceType = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetSpecialTypes(v []*string) *CarOrderListQueryResponseBodyModule {
	s.SpecialTypes = v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetTakenTime(v string) *CarOrderListQueryResponseBodyModule {
	s.TakenTime = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetThirdpartApplyId(v string) *CarOrderListQueryResponseBodyModule {
	s.ThirdpartApplyId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetThirdpartBusinessId(v string) *CarOrderListQueryResponseBodyModule {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetThirdpartItineraryId(v string) *CarOrderListQueryResponseBodyModule {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetToAddress(v string) *CarOrderListQueryResponseBodyModule {
	s.ToAddress = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetToCityAdCode(v string) *CarOrderListQueryResponseBodyModule {
	s.ToCityAdCode = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetToCityName(v string) *CarOrderListQueryResponseBodyModule {
	s.ToCityName = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetTravelDistance(v float64) *CarOrderListQueryResponseBodyModule {
	s.TravelDistance = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetUserAffiliateList(v []*CarOrderListQueryResponseBodyModuleUserAffiliateList) *CarOrderListQueryResponseBodyModule {
	s.UserAffiliateList = v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetUserConfirm(v int32) *CarOrderListQueryResponseBodyModule {
	s.UserConfirm = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetUserId(v string) *CarOrderListQueryResponseBodyModule {
	s.UserId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModule) SetUserName(v string) *CarOrderListQueryResponseBodyModule {
	s.UserName = &v
	return s
}

type CarOrderListQueryResponseBodyModulePriceInfoList struct {
	// example:
	//
	// 1
	CategoryCode *int32 `json:"category_code,omitempty" xml:"category_code,omitempty"`
	// example:
	//
	// 1
	CategoryType *int32 `json:"category_type,omitempty" xml:"category_type,omitempty"`
	// example:
	//
	// 2022-07-04T16:13Z
	GmtCreate     *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 1
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 100
	PersonPrice *float64 `json:"person_price,omitempty" xml:"person_price,omitempty"`
	// example:
	//
	// 100
	Price *float64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 8908076767
	TradeId *string `json:"trade_id,omitempty" xml:"trade_id,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s CarOrderListQueryResponseBodyModulePriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s CarOrderListQueryResponseBodyModulePriceInfoList) GoString() string {
	return s.String()
}

func (s *CarOrderListQueryResponseBodyModulePriceInfoList) SetCategoryCode(v int32) *CarOrderListQueryResponseBodyModulePriceInfoList {
	s.CategoryCode = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModulePriceInfoList) SetCategoryType(v int32) *CarOrderListQueryResponseBodyModulePriceInfoList {
	s.CategoryType = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModulePriceInfoList) SetGmtCreate(v string) *CarOrderListQueryResponseBodyModulePriceInfoList {
	s.GmtCreate = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModulePriceInfoList) SetPassengerName(v string) *CarOrderListQueryResponseBodyModulePriceInfoList {
	s.PassengerName = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModulePriceInfoList) SetPayType(v int32) *CarOrderListQueryResponseBodyModulePriceInfoList {
	s.PayType = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModulePriceInfoList) SetPersonPrice(v float64) *CarOrderListQueryResponseBodyModulePriceInfoList {
	s.PersonPrice = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModulePriceInfoList) SetPrice(v float64) *CarOrderListQueryResponseBodyModulePriceInfoList {
	s.Price = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModulePriceInfoList) SetTradeId(v string) *CarOrderListQueryResponseBodyModulePriceInfoList {
	s.TradeId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModulePriceInfoList) SetType(v int32) *CarOrderListQueryResponseBodyModulePriceInfoList {
	s.Type = &v
	return s
}

type CarOrderListQueryResponseBodyModuleUserAffiliateList struct {
	// example:
	//
	// 11342
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s CarOrderListQueryResponseBodyModuleUserAffiliateList) String() string {
	return tea.Prettify(s)
}

func (s CarOrderListQueryResponseBodyModuleUserAffiliateList) GoString() string {
	return s.String()
}

func (s *CarOrderListQueryResponseBodyModuleUserAffiliateList) SetUserId(v string) *CarOrderListQueryResponseBodyModuleUserAffiliateList {
	s.UserId = &v
	return s
}

func (s *CarOrderListQueryResponseBodyModuleUserAffiliateList) SetUserName(v string) *CarOrderListQueryResponseBodyModuleUserAffiliateList {
	s.UserName = &v
	return s
}

type CarOrderListQueryResponseBodyPageInfo struct {
	// example:
	//
	// 1
	Page *int32 `json:"page,omitempty" xml:"page,omitempty"`
	// example:
	//
	// 10
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 1000
	TotalNumber *int32 `json:"total_number,omitempty" xml:"total_number,omitempty"`
}

func (s CarOrderListQueryResponseBodyPageInfo) String() string {
	return tea.Prettify(s)
}

func (s CarOrderListQueryResponseBodyPageInfo) GoString() string {
	return s.String()
}

func (s *CarOrderListQueryResponseBodyPageInfo) SetPage(v int32) *CarOrderListQueryResponseBodyPageInfo {
	s.Page = &v
	return s
}

func (s *CarOrderListQueryResponseBodyPageInfo) SetPageSize(v int32) *CarOrderListQueryResponseBodyPageInfo {
	s.PageSize = &v
	return s
}

func (s *CarOrderListQueryResponseBodyPageInfo) SetTotalNumber(v int32) *CarOrderListQueryResponseBodyPageInfo {
	s.TotalNumber = &v
	return s
}

type CarOrderListQueryResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CarOrderListQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CarOrderListQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s CarOrderListQueryResponse) GoString() string {
	return s.String()
}

func (s *CarOrderListQueryResponse) SetHeaders(v map[string]*string) *CarOrderListQueryResponse {
	s.Headers = v
	return s
}

func (s *CarOrderListQueryResponse) SetStatusCode(v int32) *CarOrderListQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *CarOrderListQueryResponse) SetBody(v *CarOrderListQueryResponseBody) *CarOrderListQueryResponse {
	s.Body = v
	return s
}

type CarOrderQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CarOrderQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s CarOrderQueryHeaders) GoString() string {
	return s.String()
}

func (s *CarOrderQueryHeaders) SetCommonHeaders(v map[string]*string) *CarOrderQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CarOrderQueryHeaders) SetXAcsBtripSoCorpToken(v string) *CarOrderQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CarOrderQueryRequest struct {
	// example:
	//
	// 1012000000000000
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1000000
	SubOrderId *int64 `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
}

func (s CarOrderQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s CarOrderQueryRequest) GoString() string {
	return s.String()
}

func (s *CarOrderQueryRequest) SetOrderId(v int64) *CarOrderQueryRequest {
	s.OrderId = &v
	return s
}

func (s *CarOrderQueryRequest) SetSubOrderId(v int64) *CarOrderQueryRequest {
	s.SubOrderId = &v
	return s
}

type CarOrderQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                          `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                          `json:"message,omitempty" xml:"message,omitempty"`
	Module  *CarOrderQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CarOrderQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CarOrderQueryResponseBody) GoString() string {
	return s.String()
}

func (s *CarOrderQueryResponseBody) SetCode(v string) *CarOrderQueryResponseBody {
	s.Code = &v
	return s
}

func (s *CarOrderQueryResponseBody) SetMessage(v string) *CarOrderQueryResponseBody {
	s.Message = &v
	return s
}

func (s *CarOrderQueryResponseBody) SetModule(v *CarOrderQueryResponseBodyModule) *CarOrderQueryResponseBody {
	s.Module = v
	return s
}

func (s *CarOrderQueryResponseBody) SetRequestId(v string) *CarOrderQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *CarOrderQueryResponseBody) SetSuccess(v bool) *CarOrderQueryResponseBody {
	s.Success = &v
	return s
}

func (s *CarOrderQueryResponseBody) SetTraceId(v string) *CarOrderQueryResponseBody {
	s.TraceId = &v
	return s
}

type CarOrderQueryResponseBodyModule struct {
	CarInfo       *CarOrderQueryResponseBodyModuleCarInfo         `json:"car_info,omitempty" xml:"car_info,omitempty" type:"Struct"`
	InvoiceInfo   *CarOrderQueryResponseBodyModuleInvoiceInfo     `json:"invoice_info,omitempty" xml:"invoice_info,omitempty" type:"Struct"`
	OrderBaseInfo *CarOrderQueryResponseBodyModuleOrderBaseInfo   `json:"order_base_info,omitempty" xml:"order_base_info,omitempty" type:"Struct"`
	PassengerList []*CarOrderQueryResponseBodyModulePassengerList `json:"passenger_list,omitempty" xml:"passenger_list,omitempty" type:"Repeated"`
	PriceInfoList []*CarOrderQueryResponseBodyModulePriceInfoList `json:"price_info_list,omitempty" xml:"price_info_list,omitempty" type:"Repeated"`
}

func (s CarOrderQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CarOrderQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CarOrderQueryResponseBodyModule) SetCarInfo(v *CarOrderQueryResponseBodyModuleCarInfo) *CarOrderQueryResponseBodyModule {
	s.CarInfo = v
	return s
}

func (s *CarOrderQueryResponseBodyModule) SetInvoiceInfo(v *CarOrderQueryResponseBodyModuleInvoiceInfo) *CarOrderQueryResponseBodyModule {
	s.InvoiceInfo = v
	return s
}

func (s *CarOrderQueryResponseBodyModule) SetOrderBaseInfo(v *CarOrderQueryResponseBodyModuleOrderBaseInfo) *CarOrderQueryResponseBodyModule {
	s.OrderBaseInfo = v
	return s
}

func (s *CarOrderQueryResponseBodyModule) SetPassengerList(v []*CarOrderQueryResponseBodyModulePassengerList) *CarOrderQueryResponseBodyModule {
	s.PassengerList = v
	return s
}

func (s *CarOrderQueryResponseBodyModule) SetPriceInfoList(v []*CarOrderQueryResponseBodyModulePriceInfoList) *CarOrderQueryResponseBodyModule {
	s.PriceInfoList = v
	return s
}

type CarOrderQueryResponseBodyModuleCarInfo struct {
	// example:
	//
	// TRAVEL
	BusinessCategory *string `json:"business_category,omitempty" xml:"business_category,omitempty"`
	// example:
	//
	// 1669274251000
	CancelTime *int64  `json:"cancel_time,omitempty" xml:"cancel_time,omitempty"`
	CarInfo    *string `json:"car_info,omitempty" xml:"car_info,omitempty"`
	// example:
	//
	// 601
	CarLevel   *int32  `json:"car_level,omitempty" xml:"car_level,omitempty"`
	DriverCard *string `json:"driver_card,omitempty" xml:"driver_card,omitempty"`
	// example:
	//
	// 1669274251000
	DriverConfirmTime *int64  `json:"driver_confirm_time,omitempty" xml:"driver_confirm_time,omitempty"`
	DriverName        *string `json:"driver_name,omitempty" xml:"driver_name,omitempty"`
	// example:
	//
	// 2900
	EstimatePrice  *int64  `json:"estimate_price,omitempty" xml:"estimate_price,omitempty"`
	FromAddress    *string `json:"from_address,omitempty" xml:"from_address,omitempty"`
	FromCityAdCode *string `json:"from_city_ad_code,omitempty" xml:"from_city_ad_code,omitempty"`
	FromCityName   *string `json:"from_city_name,omitempty" xml:"from_city_name,omitempty"`
	// example:
	//
	// true
	IsSpecial *bool   `json:"is_special,omitempty" xml:"is_special,omitempty"`
	Memo      *string `json:"memo,omitempty" xml:"memo,omitempty"`
	// example:
	//
	// 1669274251000
	PayTime *int64 `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	// example:
	//
	// 1669274251000
	PublishTime        *int64  `json:"publish_time,omitempty" xml:"publish_time,omitempty"`
	RealFromAddress    *string `json:"real_from_address,omitempty" xml:"real_from_address,omitempty"`
	RealFromCityAdCode *string `json:"real_from_city_ad_code,omitempty" xml:"real_from_city_ad_code,omitempty"`
	RealFromCityName   *string `json:"real_from_city_name,omitempty" xml:"real_from_city_name,omitempty"`
	RealToAddress      *string `json:"real_to_address,omitempty" xml:"real_to_address,omitempty"`
	RealToCityAdCode   *string `json:"real_to_city_ad_code,omitempty" xml:"real_to_city_ad_code,omitempty"`
	RealToCityName     *string `json:"real_to_city_name,omitempty" xml:"real_to_city_name,omitempty"`
	// example:
	//
	// 3
	ServiceType *int32 `json:"service_type,omitempty" xml:"service_type,omitempty"`
	// example:
	//
	// v_sp_t_1,v_sp_t_2,v_sp_t_3,v_sp_t_4,v_sp_t_5
	SpecialTypes *string `json:"special_types,omitempty" xml:"special_types,omitempty"`
	// example:
	//
	// 1669274251000
	TakenTime    *int64  `json:"taken_time,omitempty" xml:"taken_time,omitempty"`
	ToAddress    *string `json:"to_address,omitempty" xml:"to_address,omitempty"`
	ToCityAdCode *string `json:"to_city_ad_code,omitempty" xml:"to_city_ad_code,omitempty"`
	ToCityName   *string `json:"to_city_name,omitempty" xml:"to_city_name,omitempty"`
	// example:
	//
	// 12
	TravelDistance *string `json:"travel_distance,omitempty" xml:"travel_distance,omitempty"`
}

func (s CarOrderQueryResponseBodyModuleCarInfo) String() string {
	return tea.Prettify(s)
}

func (s CarOrderQueryResponseBodyModuleCarInfo) GoString() string {
	return s.String()
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetBusinessCategory(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.BusinessCategory = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetCancelTime(v int64) *CarOrderQueryResponseBodyModuleCarInfo {
	s.CancelTime = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetCarInfo(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.CarInfo = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetCarLevel(v int32) *CarOrderQueryResponseBodyModuleCarInfo {
	s.CarLevel = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetDriverCard(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.DriverCard = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetDriverConfirmTime(v int64) *CarOrderQueryResponseBodyModuleCarInfo {
	s.DriverConfirmTime = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetDriverName(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.DriverName = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetEstimatePrice(v int64) *CarOrderQueryResponseBodyModuleCarInfo {
	s.EstimatePrice = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetFromAddress(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.FromAddress = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetFromCityAdCode(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.FromCityAdCode = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetFromCityName(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.FromCityName = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetIsSpecial(v bool) *CarOrderQueryResponseBodyModuleCarInfo {
	s.IsSpecial = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetMemo(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.Memo = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetPayTime(v int64) *CarOrderQueryResponseBodyModuleCarInfo {
	s.PayTime = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetPublishTime(v int64) *CarOrderQueryResponseBodyModuleCarInfo {
	s.PublishTime = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetRealFromAddress(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.RealFromAddress = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetRealFromCityAdCode(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.RealFromCityAdCode = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetRealFromCityName(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.RealFromCityName = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetRealToAddress(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.RealToAddress = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetRealToCityAdCode(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.RealToCityAdCode = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetRealToCityName(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.RealToCityName = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetServiceType(v int32) *CarOrderQueryResponseBodyModuleCarInfo {
	s.ServiceType = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetSpecialTypes(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.SpecialTypes = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetTakenTime(v int64) *CarOrderQueryResponseBodyModuleCarInfo {
	s.TakenTime = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetToAddress(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.ToAddress = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetToCityAdCode(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.ToCityAdCode = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetToCityName(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.ToCityName = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleCarInfo) SetTravelDistance(v string) *CarOrderQueryResponseBodyModuleCarInfo {
	s.TravelDistance = &v
	return s
}

type CarOrderQueryResponseBodyModuleInvoiceInfo struct {
	// example:
	//
	// 1
	Id *int64 `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// xxxx
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s CarOrderQueryResponseBodyModuleInvoiceInfo) String() string {
	return tea.Prettify(s)
}

func (s CarOrderQueryResponseBodyModuleInvoiceInfo) GoString() string {
	return s.String()
}

func (s *CarOrderQueryResponseBodyModuleInvoiceInfo) SetId(v int64) *CarOrderQueryResponseBodyModuleInvoiceInfo {
	s.Id = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleInvoiceInfo) SetTitle(v string) *CarOrderQueryResponseBodyModuleInvoiceInfo {
	s.Title = &v
	return s
}

type CarOrderQueryResponseBodyModuleOrderBaseInfo struct {
	// example:
	//
	// xxxxx
	ApplyId    *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	BtripCause *string `json:"btrip_cause,omitempty" xml:"btrip_cause,omitempty"`
	BtripTitle *string `json:"btrip_title,omitempty" xml:"btrip_title,omitempty"`
	// example:
	//
	// xxxxxxxx
	CorpId   *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	// example:
	//
	// 10101010
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// example:
	//
	// 1669274251000
	GmtCreate *int64 `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 1669274251000
	GmtModified *int64 `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	// example:
	//
	// xxxxx
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	// example:
	//
	// 1012000000000000
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 5
	OrderStatus *int32 `json:"order_status,omitempty" xml:"order_status,omitempty"`
	// example:
	//
	// 100000
	SubOrderId *int64 `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
	// example:
	//
	// thirdpart_1010101010
	ThirdDepartId *string `json:"third_depart_id,omitempty" xml:"third_depart_id,omitempty"`
	// example:
	//
	// xxxxx
	ThirdpartApplyId    *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	// example:
	//
	// xxxxx
	ThirdpartItineraryId *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// xxxxxxxx
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s CarOrderQueryResponseBodyModuleOrderBaseInfo) String() string {
	return tea.Prettify(s)
}

func (s CarOrderQueryResponseBodyModuleOrderBaseInfo) GoString() string {
	return s.String()
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetApplyId(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ApplyId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetBtripCause(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.BtripCause = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetBtripTitle(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.BtripTitle = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetCorpId(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.CorpId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetCorpName(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.CorpName = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetDepartId(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.DepartId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetDepartName(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.DepartName = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetGmtCreate(v int64) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.GmtCreate = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetGmtModified(v int64) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.GmtModified = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetItineraryId(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ItineraryId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetOrderId(v int64) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.OrderId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetOrderStatus(v int32) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.OrderStatus = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetSubOrderId(v int64) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.SubOrderId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdDepartId(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdDepartId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartApplyId(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartApplyId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartBusinessId(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartItineraryId(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetUserId(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.UserId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModuleOrderBaseInfo) SetUserName(v string) *CarOrderQueryResponseBodyModuleOrderBaseInfo {
	s.UserName = &v
	return s
}

type CarOrderQueryResponseBodyModulePassengerList struct {
	// example:
	//
	// costId
	CostCenterId *int64 `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	// example:
	//
	// costName
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// costNumber
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// projectCode1
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	// example:
	//
	// projectId
	ProjectId    *int64  `json:"project_id,omitempty" xml:"project_id,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// example:
	//
	// thirdpartCostId
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	// example:
	//
	// thirdpartProjectId
	ThirdpartProjectId *string `json:"thirdpart_project_id,omitempty" xml:"thirdpart_project_id,omitempty"`
	// example:
	//
	// userId
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	// example:
	//
	// 1
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s CarOrderQueryResponseBodyModulePassengerList) String() string {
	return tea.Prettify(s)
}

func (s CarOrderQueryResponseBodyModulePassengerList) GoString() string {
	return s.String()
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetCostCenterId(v int64) *CarOrderQueryResponseBodyModulePassengerList {
	s.CostCenterId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetCostCenterName(v string) *CarOrderQueryResponseBodyModulePassengerList {
	s.CostCenterName = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetCostCenterNumber(v string) *CarOrderQueryResponseBodyModulePassengerList {
	s.CostCenterNumber = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetProjectCode(v string) *CarOrderQueryResponseBodyModulePassengerList {
	s.ProjectCode = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetProjectId(v int64) *CarOrderQueryResponseBodyModulePassengerList {
	s.ProjectId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetProjectTitle(v string) *CarOrderQueryResponseBodyModulePassengerList {
	s.ProjectTitle = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetThirdpartCostCenterId(v string) *CarOrderQueryResponseBodyModulePassengerList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetThirdpartProjectId(v string) *CarOrderQueryResponseBodyModulePassengerList {
	s.ThirdpartProjectId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetUserId(v string) *CarOrderQueryResponseBodyModulePassengerList {
	s.UserId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetUserName(v string) *CarOrderQueryResponseBodyModulePassengerList {
	s.UserName = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePassengerList) SetUserType(v int32) *CarOrderQueryResponseBodyModulePassengerList {
	s.UserType = &v
	return s
}

type CarOrderQueryResponseBodyModulePriceInfoList struct {
	// example:
	//
	// 1
	CategoryCode *int32 `json:"category_code,omitempty" xml:"category_code,omitempty"`
	// example:
	//
	// 1669274251000
	GmtCreate *int64 `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 4
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 1000
	PersonPrice *int64 `json:"person_price,omitempty" xml:"person_price,omitempty"`
	// example:
	//
	// 2000
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 1012000000001
	TradeId *string `json:"trade_id,omitempty" xml:"trade_id,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s CarOrderQueryResponseBodyModulePriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s CarOrderQueryResponseBodyModulePriceInfoList) GoString() string {
	return s.String()
}

func (s *CarOrderQueryResponseBodyModulePriceInfoList) SetCategoryCode(v int32) *CarOrderQueryResponseBodyModulePriceInfoList {
	s.CategoryCode = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePriceInfoList) SetGmtCreate(v int64) *CarOrderQueryResponseBodyModulePriceInfoList {
	s.GmtCreate = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePriceInfoList) SetPayType(v int32) *CarOrderQueryResponseBodyModulePriceInfoList {
	s.PayType = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePriceInfoList) SetPersonPrice(v int64) *CarOrderQueryResponseBodyModulePriceInfoList {
	s.PersonPrice = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePriceInfoList) SetPrice(v int64) *CarOrderQueryResponseBodyModulePriceInfoList {
	s.Price = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePriceInfoList) SetTradeId(v string) *CarOrderQueryResponseBodyModulePriceInfoList {
	s.TradeId = &v
	return s
}

func (s *CarOrderQueryResponseBodyModulePriceInfoList) SetType(v int32) *CarOrderQueryResponseBodyModulePriceInfoList {
	s.Type = &v
	return s
}

type CarOrderQueryResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CarOrderQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CarOrderQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s CarOrderQueryResponse) GoString() string {
	return s.String()
}

func (s *CarOrderQueryResponse) SetHeaders(v map[string]*string) *CarOrderQueryResponse {
	s.Headers = v
	return s
}

func (s *CarOrderQueryResponse) SetStatusCode(v int32) *CarOrderQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *CarOrderQueryResponse) SetBody(v *CarOrderQueryResponseBody) *CarOrderQueryResponse {
	s.Body = v
	return s
}

type CarSceneQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s CarSceneQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s CarSceneQueryHeaders) GoString() string {
	return s.String()
}

func (s *CarSceneQueryHeaders) SetCommonHeaders(v map[string]*string) *CarSceneQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CarSceneQueryHeaders) SetXAcsBtripCorpToken(v string) *CarSceneQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type CarSceneQueryResponseBody struct {
	// example:
	//
	// 0
	Code    *string                            `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                            `json:"message,omitempty" xml:"message,omitempty"`
	Module  []*CarSceneQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CarSceneQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CarSceneQueryResponseBody) GoString() string {
	return s.String()
}

func (s *CarSceneQueryResponseBody) SetCode(v string) *CarSceneQueryResponseBody {
	s.Code = &v
	return s
}

func (s *CarSceneQueryResponseBody) SetMessage(v string) *CarSceneQueryResponseBody {
	s.Message = &v
	return s
}

func (s *CarSceneQueryResponseBody) SetModule(v []*CarSceneQueryResponseBodyModule) *CarSceneQueryResponseBody {
	s.Module = v
	return s
}

func (s *CarSceneQueryResponseBody) SetRequestId(v string) *CarSceneQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *CarSceneQueryResponseBody) SetSuccess(v bool) *CarSceneQueryResponseBody {
	s.Success = &v
	return s
}

func (s *CarSceneQueryResponseBody) SetTraceId(v string) *CarSceneQueryResponseBody {
	s.TraceId = &v
	return s
}

type CarSceneQueryResponseBodyModule struct {
	// example:
	//
	// travel
	ScenarioTemplateId   *string `json:"scenarioTemplateId,omitempty" xml:"scenarioTemplateId,omitempty"`
	ScenarioTemplateName *string `json:"scenarioTemplateName,omitempty" xml:"scenarioTemplateName,omitempty"`
	// example:
	//
	// ACTIVATE
	State *string `json:"state,omitempty" xml:"state,omitempty"`
}

func (s CarSceneQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CarSceneQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CarSceneQueryResponseBodyModule) SetScenarioTemplateId(v string) *CarSceneQueryResponseBodyModule {
	s.ScenarioTemplateId = &v
	return s
}

func (s *CarSceneQueryResponseBodyModule) SetScenarioTemplateName(v string) *CarSceneQueryResponseBodyModule {
	s.ScenarioTemplateName = &v
	return s
}

func (s *CarSceneQueryResponseBodyModule) SetState(v string) *CarSceneQueryResponseBodyModule {
	s.State = &v
	return s
}

type CarSceneQueryResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CarSceneQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CarSceneQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s CarSceneQueryResponse) GoString() string {
	return s.String()
}

func (s *CarSceneQueryResponse) SetHeaders(v map[string]*string) *CarSceneQueryResponse {
	s.Headers = v
	return s
}

func (s *CarSceneQueryResponse) SetStatusCode(v int32) *CarSceneQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *CarSceneQueryResponse) SetBody(v *CarSceneQueryResponseBody) *CarSceneQueryResponse {
	s.Body = v
	return s
}

type ChannelCorpCreateHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// aqfrefd2321
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s ChannelCorpCreateHeaders) String() string {
	return tea.Prettify(s)
}

func (s ChannelCorpCreateHeaders) GoString() string {
	return s.String()
}

func (s *ChannelCorpCreateHeaders) SetCommonHeaders(v map[string]*string) *ChannelCorpCreateHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ChannelCorpCreateHeaders) SetXAcsBtripCorpToken(v string) *ChannelCorpCreateHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type ChannelCorpCreateRequest struct {
	// This parameter is required.
	AdministratorName *string `json:"administrator_name,omitempty" xml:"administrator_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 18378889782
	AdministratorPhone *string `json:"administrator_phone,omitempty" xml:"administrator_phone,omitempty"`
	City               *string `json:"city,omitempty" xml:"city,omitempty"`
	// This parameter is required.
	CorpName *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	Province *string `json:"province,omitempty" xml:"province,omitempty"`
	// example:
	//
	// 1
	Scope *int32 `json:"scope,omitempty" xml:"scope,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 00001
	ThirdCorpId *string `json:"third_corp_id,omitempty" xml:"third_corp_id,omitempty"`
	UserId      *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s ChannelCorpCreateRequest) String() string {
	return tea.Prettify(s)
}

func (s ChannelCorpCreateRequest) GoString() string {
	return s.String()
}

func (s *ChannelCorpCreateRequest) SetAdministratorName(v string) *ChannelCorpCreateRequest {
	s.AdministratorName = &v
	return s
}

func (s *ChannelCorpCreateRequest) SetAdministratorPhone(v string) *ChannelCorpCreateRequest {
	s.AdministratorPhone = &v
	return s
}

func (s *ChannelCorpCreateRequest) SetCity(v string) *ChannelCorpCreateRequest {
	s.City = &v
	return s
}

func (s *ChannelCorpCreateRequest) SetCorpName(v string) *ChannelCorpCreateRequest {
	s.CorpName = &v
	return s
}

func (s *ChannelCorpCreateRequest) SetProvince(v string) *ChannelCorpCreateRequest {
	s.Province = &v
	return s
}

func (s *ChannelCorpCreateRequest) SetScope(v int32) *ChannelCorpCreateRequest {
	s.Scope = &v
	return s
}

func (s *ChannelCorpCreateRequest) SetThirdCorpId(v string) *ChannelCorpCreateRequest {
	s.ThirdCorpId = &v
	return s
}

func (s *ChannelCorpCreateRequest) SetUserId(v string) *ChannelCorpCreateRequest {
	s.UserId = &v
	return s
}

type ChannelCorpCreateResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  *ChannelCorpCreateResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ChannelCorpCreateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ChannelCorpCreateResponseBody) GoString() string {
	return s.String()
}

func (s *ChannelCorpCreateResponseBody) SetCode(v string) *ChannelCorpCreateResponseBody {
	s.Code = &v
	return s
}

func (s *ChannelCorpCreateResponseBody) SetMessage(v string) *ChannelCorpCreateResponseBody {
	s.Message = &v
	return s
}

func (s *ChannelCorpCreateResponseBody) SetModule(v *ChannelCorpCreateResponseBodyModule) *ChannelCorpCreateResponseBody {
	s.Module = v
	return s
}

func (s *ChannelCorpCreateResponseBody) SetRequestId(v string) *ChannelCorpCreateResponseBody {
	s.RequestId = &v
	return s
}

func (s *ChannelCorpCreateResponseBody) SetSuccess(v bool) *ChannelCorpCreateResponseBody {
	s.Success = &v
	return s
}

func (s *ChannelCorpCreateResponseBody) SetTraceId(v string) *ChannelCorpCreateResponseBody {
	s.TraceId = &v
	return s
}

type ChannelCorpCreateResponseBodyModule struct {
	AdministratorName *string `json:"administrator_name,omitempty" xml:"administrator_name,omitempty"`
	// example:
	//
	// 18378889782
	AdministratorPhone *string `json:"administrator_phone,omitempty" xml:"administrator_phone,omitempty"`
	// example:
	//
	// dingaa15ca45cba9ee744a5
	CorpId   *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	// example:
	//
	// open12mplkebufu8701012jq
	OpenAgentId *string `json:"open_agent_id,omitempty" xml:"open_agent_id,omitempty"`
	UserId      *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s ChannelCorpCreateResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s ChannelCorpCreateResponseBodyModule) GoString() string {
	return s.String()
}

func (s *ChannelCorpCreateResponseBodyModule) SetAdministratorName(v string) *ChannelCorpCreateResponseBodyModule {
	s.AdministratorName = &v
	return s
}

func (s *ChannelCorpCreateResponseBodyModule) SetAdministratorPhone(v string) *ChannelCorpCreateResponseBodyModule {
	s.AdministratorPhone = &v
	return s
}

func (s *ChannelCorpCreateResponseBodyModule) SetCorpId(v string) *ChannelCorpCreateResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *ChannelCorpCreateResponseBodyModule) SetCorpName(v string) *ChannelCorpCreateResponseBodyModule {
	s.CorpName = &v
	return s
}

func (s *ChannelCorpCreateResponseBodyModule) SetOpenAgentId(v string) *ChannelCorpCreateResponseBodyModule {
	s.OpenAgentId = &v
	return s
}

func (s *ChannelCorpCreateResponseBodyModule) SetUserId(v string) *ChannelCorpCreateResponseBodyModule {
	s.UserId = &v
	return s
}

type ChannelCorpCreateResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ChannelCorpCreateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ChannelCorpCreateResponse) String() string {
	return tea.Prettify(s)
}

func (s ChannelCorpCreateResponse) GoString() string {
	return s.String()
}

func (s *ChannelCorpCreateResponse) SetHeaders(v map[string]*string) *ChannelCorpCreateResponse {
	s.Headers = v
	return s
}

func (s *ChannelCorpCreateResponse) SetStatusCode(v int32) *ChannelCorpCreateResponse {
	s.StatusCode = &v
	return s
}

func (s *ChannelCorpCreateResponse) SetBody(v *ChannelCorpCreateResponseBody) *ChannelCorpCreateResponse {
	s.Body = v
	return s
}

type CitySearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CitySearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s CitySearchHeaders) GoString() string {
	return s.String()
}

func (s *CitySearchHeaders) SetCommonHeaders(v map[string]*string) *CitySearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CitySearchHeaders) SetXAcsBtripSoCorpToken(v string) *CitySearchHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CitySearchRequest struct {
	// This parameter is required.
	Keyword *string `json:"keyword,omitempty" xml:"keyword,omitempty"`
}

func (s CitySearchRequest) String() string {
	return tea.Prettify(s)
}

func (s CitySearchRequest) GoString() string {
	return s.String()
}

func (s *CitySearchRequest) SetKeyword(v string) *CitySearchRequest {
	s.Keyword = &v
	return s
}

type CitySearchResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *CitySearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CitySearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CitySearchResponseBody) GoString() string {
	return s.String()
}

func (s *CitySearchResponseBody) SetCode(v string) *CitySearchResponseBody {
	s.Code = &v
	return s
}

func (s *CitySearchResponseBody) SetMessage(v string) *CitySearchResponseBody {
	s.Message = &v
	return s
}

func (s *CitySearchResponseBody) SetModule(v *CitySearchResponseBodyModule) *CitySearchResponseBody {
	s.Module = v
	return s
}

func (s *CitySearchResponseBody) SetRequestId(v string) *CitySearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *CitySearchResponseBody) SetSuccess(v bool) *CitySearchResponseBody {
	s.Success = &v
	return s
}

func (s *CitySearchResponseBody) SetTraceId(v string) *CitySearchResponseBody {
	s.TraceId = &v
	return s
}

type CitySearchResponseBodyModule struct {
	Cities []*CitySearchResponseBodyModuleCities `json:"cities,omitempty" xml:"cities,omitempty" type:"Repeated"`
}

func (s CitySearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CitySearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CitySearchResponseBodyModule) SetCities(v []*CitySearchResponseBodyModuleCities) *CitySearchResponseBodyModule {
	s.Cities = v
	return s
}

type CitySearchResponseBodyModuleCities struct {
	// example:
	//
	// 330100
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// 0
	Region *int32 `json:"region,omitempty" xml:"region,omitempty"`
}

func (s CitySearchResponseBodyModuleCities) String() string {
	return tea.Prettify(s)
}

func (s CitySearchResponseBodyModuleCities) GoString() string {
	return s.String()
}

func (s *CitySearchResponseBodyModuleCities) SetCode(v string) *CitySearchResponseBodyModuleCities {
	s.Code = &v
	return s
}

func (s *CitySearchResponseBodyModuleCities) SetName(v string) *CitySearchResponseBodyModuleCities {
	s.Name = &v
	return s
}

func (s *CitySearchResponseBodyModuleCities) SetRegion(v int32) *CitySearchResponseBodyModuleCities {
	s.Region = &v
	return s
}

type CitySearchResponse struct {
	Headers    map[string]*string      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CitySearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CitySearchResponse) String() string {
	return tea.Prettify(s)
}

func (s CitySearchResponse) GoString() string {
	return s.String()
}

func (s *CitySearchResponse) SetHeaders(v map[string]*string) *CitySearchResponse {
	s.Headers = v
	return s
}

func (s *CitySearchResponse) SetStatusCode(v int32) *CitySearchResponse {
	s.StatusCode = &v
	return s
}

func (s *CitySearchResponse) SetBody(v *CitySearchResponseBody) *CitySearchResponse {
	s.Body = v
	return s
}

type CommonApplyQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CommonApplyQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s CommonApplyQueryHeaders) GoString() string {
	return s.String()
}

func (s *CommonApplyQueryHeaders) SetCommonHeaders(v map[string]*string) *CommonApplyQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CommonApplyQueryHeaders) SetXAcsBtripSoCorpToken(v string) *CommonApplyQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CommonApplyQueryRequest struct {
	// example:
	//
	// 1003366164
	ApplyId *int64 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 3
	BizCategory        *int32  `json:"biz_category,omitempty" xml:"biz_category,omitempty"`
	BusinessInstanceId *string `json:"business_instance_id,omitempty" xml:"business_instance_id,omitempty"`
	UserId             *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CommonApplyQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s CommonApplyQueryRequest) GoString() string {
	return s.String()
}

func (s *CommonApplyQueryRequest) SetApplyId(v int64) *CommonApplyQueryRequest {
	s.ApplyId = &v
	return s
}

func (s *CommonApplyQueryRequest) SetBizCategory(v int32) *CommonApplyQueryRequest {
	s.BizCategory = &v
	return s
}

func (s *CommonApplyQueryRequest) SetBusinessInstanceId(v string) *CommonApplyQueryRequest {
	s.BusinessInstanceId = &v
	return s
}

func (s *CommonApplyQueryRequest) SetUserId(v string) *CommonApplyQueryRequest {
	s.UserId = &v
	return s
}

type CommonApplyQueryResponseBody struct {
	// example:
	//
	// 0
	Code    *string                             `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                             `json:"message,omitempty" xml:"message,omitempty"`
	Module  *CommonApplyQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CommonApplyQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CommonApplyQueryResponseBody) GoString() string {
	return s.String()
}

func (s *CommonApplyQueryResponseBody) SetCode(v string) *CommonApplyQueryResponseBody {
	s.Code = &v
	return s
}

func (s *CommonApplyQueryResponseBody) SetMessage(v string) *CommonApplyQueryResponseBody {
	s.Message = &v
	return s
}

func (s *CommonApplyQueryResponseBody) SetModule(v *CommonApplyQueryResponseBodyModule) *CommonApplyQueryResponseBody {
	s.Module = v
	return s
}

func (s *CommonApplyQueryResponseBody) SetRequestId(v string) *CommonApplyQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *CommonApplyQueryResponseBody) SetSuccess(v bool) *CommonApplyQueryResponseBody {
	s.Success = &v
	return s
}

func (s *CommonApplyQueryResponseBody) SetTraceId(v string) *CommonApplyQueryResponseBody {
	s.TraceId = &v
	return s
}

type CommonApplyQueryResponseBodyModule struct {
	// example:
	//
	// 123
	ApplyId *int64 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 5
	BizCategory *int32  `json:"biz_category,omitempty" xml:"biz_category,omitempty"`
	Cause       *string `json:"cause,omitempty" xml:"cause,omitempty"`
	// example:
	//
	// 0001A1100000007EX08O
	CorpId      *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	ExtendValue *string `json:"extend_value,omitempty" xml:"extend_value,omitempty"`
	// example:
	//
	// 2021-03-18T20:26Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 0
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 1233
	ThirdpartCorpId *string `json:"thirdpart_corp_id,omitempty" xml:"thirdpart_corp_id,omitempty"`
	// example:
	//
	// 12344
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
	TripCause   *string `json:"trip_cause,omitempty" xml:"trip_cause,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s CommonApplyQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CommonApplyQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CommonApplyQueryResponseBodyModule) SetApplyId(v int64) *CommonApplyQueryResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetBizCategory(v int32) *CommonApplyQueryResponseBodyModule {
	s.BizCategory = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetCause(v string) *CommonApplyQueryResponseBodyModule {
	s.Cause = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetCorpId(v string) *CommonApplyQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetExtendValue(v string) *CommonApplyQueryResponseBodyModule {
	s.ExtendValue = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetGmtCreate(v string) *CommonApplyQueryResponseBodyModule {
	s.GmtCreate = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetStatus(v int32) *CommonApplyQueryResponseBodyModule {
	s.Status = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetThirdpartCorpId(v string) *CommonApplyQueryResponseBodyModule {
	s.ThirdpartCorpId = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetThirdpartId(v string) *CommonApplyQueryResponseBodyModule {
	s.ThirdpartId = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetTripCause(v string) *CommonApplyQueryResponseBodyModule {
	s.TripCause = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetUserId(v string) *CommonApplyQueryResponseBodyModule {
	s.UserId = &v
	return s
}

func (s *CommonApplyQueryResponseBodyModule) SetUserName(v string) *CommonApplyQueryResponseBodyModule {
	s.UserName = &v
	return s
}

type CommonApplyQueryResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CommonApplyQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CommonApplyQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s CommonApplyQueryResponse) GoString() string {
	return s.String()
}

func (s *CommonApplyQueryResponse) SetHeaders(v map[string]*string) *CommonApplyQueryResponse {
	s.Headers = v
	return s
}

func (s *CommonApplyQueryResponse) SetStatusCode(v int32) *CommonApplyQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *CommonApplyQueryResponse) SetBody(v *CommonApplyQueryResponseBody) *CommonApplyQueryResponse {
	s.Body = v
	return s
}

type CommonApplySyncHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CommonApplySyncHeaders) String() string {
	return tea.Prettify(s)
}

func (s CommonApplySyncHeaders) GoString() string {
	return s.String()
}

func (s *CommonApplySyncHeaders) SetCommonHeaders(v map[string]*string) *CommonApplySyncHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CommonApplySyncHeaders) SetXAcsBtripSoCorpToken(v string) *CommonApplySyncHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CommonApplySyncRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1003366164
	ApplyId *int64 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 3
	BizCategory *int32  `json:"biz_category,omitempty" xml:"biz_category,omitempty"`
	Remark      *string `json:"remark,omitempty" xml:"remark,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// asfa
	ThirdpartyFlowId *string `json:"thirdparty_flow_id,omitempty" xml:"thirdparty_flow_id,omitempty"`
	// This parameter is required.
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CommonApplySyncRequest) String() string {
	return tea.Prettify(s)
}

func (s CommonApplySyncRequest) GoString() string {
	return s.String()
}

func (s *CommonApplySyncRequest) SetApplyId(v int64) *CommonApplySyncRequest {
	s.ApplyId = &v
	return s
}

func (s *CommonApplySyncRequest) SetBizCategory(v int32) *CommonApplySyncRequest {
	s.BizCategory = &v
	return s
}

func (s *CommonApplySyncRequest) SetRemark(v string) *CommonApplySyncRequest {
	s.Remark = &v
	return s
}

func (s *CommonApplySyncRequest) SetStatus(v int32) *CommonApplySyncRequest {
	s.Status = &v
	return s
}

func (s *CommonApplySyncRequest) SetThirdpartyFlowId(v string) *CommonApplySyncRequest {
	s.ThirdpartyFlowId = &v
	return s
}

func (s *CommonApplySyncRequest) SetUserId(v string) *CommonApplySyncRequest {
	s.UserId = &v
	return s
}

type CommonApplySyncResponseBody struct {
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	//
	// example:
	//
	// {\\"list\\": [], \\"pageSize\\": 20, \\"pageNo\\": 1}
	Module *bool `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CommonApplySyncResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CommonApplySyncResponseBody) GoString() string {
	return s.String()
}

func (s *CommonApplySyncResponseBody) SetCode(v string) *CommonApplySyncResponseBody {
	s.Code = &v
	return s
}

func (s *CommonApplySyncResponseBody) SetMessage(v string) *CommonApplySyncResponseBody {
	s.Message = &v
	return s
}

func (s *CommonApplySyncResponseBody) SetModule(v bool) *CommonApplySyncResponseBody {
	s.Module = &v
	return s
}

func (s *CommonApplySyncResponseBody) SetRequestId(v string) *CommonApplySyncResponseBody {
	s.RequestId = &v
	return s
}

func (s *CommonApplySyncResponseBody) SetSuccess(v bool) *CommonApplySyncResponseBody {
	s.Success = &v
	return s
}

func (s *CommonApplySyncResponseBody) SetTraceId(v string) *CommonApplySyncResponseBody {
	s.TraceId = &v
	return s
}

type CommonApplySyncResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CommonApplySyncResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CommonApplySyncResponse) String() string {
	return tea.Prettify(s)
}

func (s CommonApplySyncResponse) GoString() string {
	return s.String()
}

func (s *CommonApplySyncResponse) SetHeaders(v map[string]*string) *CommonApplySyncResponse {
	s.Headers = v
	return s
}

func (s *CommonApplySyncResponse) SetStatusCode(v int32) *CommonApplySyncResponse {
	s.StatusCode = &v
	return s
}

func (s *CommonApplySyncResponse) SetBody(v *CommonApplySyncResponseBody) *CommonApplySyncResponse {
	s.Body = v
	return s
}

type CooperatorFlightBillSettlementQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s CooperatorFlightBillSettlementQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s CooperatorFlightBillSettlementQueryHeaders) GoString() string {
	return s.String()
}

func (s *CooperatorFlightBillSettlementQueryHeaders) SetCommonHeaders(v map[string]*string) *CooperatorFlightBillSettlementQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CooperatorFlightBillSettlementQueryHeaders) SetXAcsBtripCorpToken(v string) *CooperatorFlightBillSettlementQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type CooperatorFlightBillSettlementQueryRequest struct {
	// example:
	//
	// cooperator_alibtrip
	CooperatorId *string `json:"cooperator_id,omitempty" xml:"cooperator_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-02
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
}

func (s CooperatorFlightBillSettlementQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s CooperatorFlightBillSettlementQueryRequest) GoString() string {
	return s.String()
}

func (s *CooperatorFlightBillSettlementQueryRequest) SetCooperatorId(v string) *CooperatorFlightBillSettlementQueryRequest {
	s.CooperatorId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryRequest) SetPageNo(v int32) *CooperatorFlightBillSettlementQueryRequest {
	s.PageNo = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryRequest) SetPageSize(v int32) *CooperatorFlightBillSettlementQueryRequest {
	s.PageSize = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryRequest) SetPeriodEnd(v string) *CooperatorFlightBillSettlementQueryRequest {
	s.PeriodEnd = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryRequest) SetPeriodStart(v string) *CooperatorFlightBillSettlementQueryRequest {
	s.PeriodStart = &v
	return s
}

type CooperatorFlightBillSettlementQueryResponseBody struct {
	// example:
	//
	// 0
	Code    *string                                                `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                                `json:"message,omitempty" xml:"message,omitempty"`
	Module  *CooperatorFlightBillSettlementQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 2103ad1216872266815642815d7e03
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// trace_id
	//
	// example:
	//
	// 213e20c816937929648732715e16f1
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CooperatorFlightBillSettlementQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CooperatorFlightBillSettlementQueryResponseBody) GoString() string {
	return s.String()
}

func (s *CooperatorFlightBillSettlementQueryResponseBody) SetCode(v string) *CooperatorFlightBillSettlementQueryResponseBody {
	s.Code = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBody) SetMessage(v string) *CooperatorFlightBillSettlementQueryResponseBody {
	s.Message = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBody) SetModule(v *CooperatorFlightBillSettlementQueryResponseBodyModule) *CooperatorFlightBillSettlementQueryResponseBody {
	s.Module = v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBody) SetRequestId(v string) *CooperatorFlightBillSettlementQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBody) SetSuccess(v bool) *CooperatorFlightBillSettlementQueryResponseBody {
	s.Success = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBody) SetTraceId(v string) *CooperatorFlightBillSettlementQueryResponseBody {
	s.TraceId = &v
	return s
}

type CooperatorFlightBillSettlementQueryResponseBodyModule struct {
	// example:
	//
	// 1
	Category *int32 `json:"category,omitempty" xml:"category,omitempty"`
	// example:
	//
	// 123
	CorpId *string                                                       `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	Items  []*CooperatorFlightBillSettlementQueryResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
	// example:
	//
	// 2022-11-02
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// example:
	//
	// 2021-10-13
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
	// example:
	//
	// 30
	TotalSize *int64 `json:"total_size,omitempty" xml:"total_size,omitempty"`
}

func (s CooperatorFlightBillSettlementQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CooperatorFlightBillSettlementQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModule) SetCategory(v int32) *CooperatorFlightBillSettlementQueryResponseBodyModule {
	s.Category = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModule) SetCorpId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModule) SetItems(v []*CooperatorFlightBillSettlementQueryResponseBodyModuleItems) *CooperatorFlightBillSettlementQueryResponseBodyModule {
	s.Items = v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModule) SetPeriodEnd(v string) *CooperatorFlightBillSettlementQueryResponseBodyModule {
	s.PeriodEnd = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModule) SetPeriodStart(v string) *CooperatorFlightBillSettlementQueryResponseBodyModule {
	s.PeriodStart = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModule) SetTotalSize(v int64) *CooperatorFlightBillSettlementQueryResponseBodyModule {
	s.TotalSize = &v
	return s
}

type CooperatorFlightBillSettlementQueryResponseBodyModuleItems struct {
	// example:
	//
	// 1
	AdvanceDay *int32 `json:"advance_day,omitempty" xml:"advance_day,omitempty"`
	// example:
	//
	// AB
	AirlineCorpCode *string `json:"airline_corp_code,omitempty" xml:"airline_corp_code,omitempty"`
	AirlineCorpName *string `json:"airline_corp_name,omitempty" xml:"airline_corp_name,omitempty"`
	// example:
	//
	// 123aaa
	AlipayId *string `json:"alipay_id,omitempty" xml:"alipay_id,omitempty"`
	// example:
	//
	// a123
	AlipayTradeNo *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	// example:
	//
	// CD
	ApplyArrCityCode *string `json:"apply_arr_city_code,omitempty" xml:"apply_arr_city_code,omitempty"`
	ApplyArrCityName *string `json:"apply_arr_city_name,omitempty" xml:"apply_arr_city_name,omitempty"`
	// example:
	//
	// AB
	ApplyDepCityCode *string `json:"apply_dep_city_code,omitempty" xml:"apply_dep_city_code,omitempty"`
	ApplyDepCityName *string `json:"apply_dep_city_name,omitempty" xml:"apply_dep_city_name,omitempty"`
	ApplyExtendField *string `json:"apply_extend_field,omitempty" xml:"apply_extend_field,omitempty"`
	// example:
	//
	// 1004430880
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// CKG
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrCity        *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// CKG
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 2023-01-01
	ArrDate    *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	ArrStation *string `json:"arr_station,omitempty" xml:"arr_station,omitempty"`
	// example:
	//
	// 12:00:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 2023-01-01 00:00:00
	BillRecordTime *string `json:"bill_record_time,omitempty" xml:"bill_record_time,omitempty"`
	BookMode       *string `json:"book_mode,omitempty" xml:"book_mode,omitempty"`
	// example:
	//
	// 2023-01-01 00:00:00
	BookTime *string `json:"book_time,omitempty" xml:"book_time,omitempty"`
	// example:
	//
	// 1234
	BookerId *string `json:"booker_id,omitempty" xml:"booker_id,omitempty"`
	// example:
	//
	// A1234
	BookerJobNo *string `json:"booker_job_no,omitempty" xml:"booker_job_no,omitempty"`
	BookerName  *string `json:"booker_name,omitempty" xml:"booker_name,omitempty"`
	// example:
	//
	// 100.0
	BtripCouponFee *float64 `json:"btrip_coupon_fee,omitempty" xml:"btrip_coupon_fee,omitempty"`
	// example:
	//
	// 50.0
	BuildFee           *float64 `json:"build_fee,omitempty" xml:"build_fee,omitempty"`
	BusinessTripResult *string  `json:"business_trip_result,omitempty" xml:"business_trip_result,omitempty"`
	// example:
	//
	// A
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// YS
	CabinClass        *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CapitalDirection  *string `json:"capital_direction,omitempty" xml:"capital_direction,omitempty"`
	CascadeDepartment *string `json:"cascade_department,omitempty" xml:"cascade_department,omitempty"`
	// example:
	//
	// 100.0
	ChangeFee    *float64 `json:"change_fee,omitempty" xml:"change_fee,omitempty"`
	ChangeResult *string  `json:"change_result,omitempty" xml:"change_result,omitempty"`
	// example:
	//
	// IN240102113438277278
	CooperatorBillCode *string `json:"cooperator_bill_code,omitempty" xml:"cooperator_bill_code,omitempty"`
	CooperatorName     *string `json:"cooperator_name,omitempty" xml:"cooperator_name,omitempty"`
	// example:
	//
	// DF24020163776907739
	CooperatorOrderId *string `json:"cooperator_order_id,omitempty" xml:"cooperator_order_id,omitempty"`
	// example:
	//
	// 100.0
	CorpPayOrderFee *float64 `json:"corp_pay_order_fee,omitempty" xml:"corp_pay_order_fee,omitempty"`
	// example:
	//
	// 100.0
	CorpSettlePrice *float64 `json:"corp_settle_price,omitempty" xml:"corp_settle_price,omitempty"`
	CostCenter      *string  `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	// example:
	//
	// cs1
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// 0.0
	Coupon *float64 `json:"coupon,omitempty" xml:"coupon,omitempty"`
	// example:
	//
	// JHG
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	// example:
	//
	// TAO
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	Department  *string `json:"department,omitempty" xml:"department,omitempty"`
	// example:
	//
	// 1112
	DepartmentId *string `json:"department_id,omitempty" xml:"department_id,omitempty"`
	DeptCity     *string `json:"dept_city,omitempty" xml:"dept_city,omitempty"`
	// example:
	//
	// 2023-01-01
	DeptDate    *string `json:"dept_date,omitempty" xml:"dept_date,omitempty"`
	DeptStation *string `json:"dept_station,omitempty" xml:"dept_station,omitempty"`
	// example:
	//
	// 09:30:00
	DeptTime *string `json:"dept_time,omitempty" xml:"dept_time,omitempty"`
	// example:
	//
	// 1
	Discount     *string `json:"discount,omitempty" xml:"discount,omitempty"`
	ExceedReason *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	FeeType      *string `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	// example:
	//
	// CZ3590
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// 1
	Index *string `json:"index,omitempty" xml:"index,omitempty"`
	// example:
	//
	// 111
	InsOrderId *string `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	// example:
	//
	// 0.0
	InsuranceFee *float64 `json:"insurance_fee,omitempty" xml:"insurance_fee,omitempty"`
	// example:
	//
	// 1234A
	InsuranceNumber *string `json:"insurance_number,omitempty" xml:"insurance_number,omitempty"`
	InvoiceTitle    *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	ItemType        *string `json:"item_type,omitempty" xml:"item_type,omitempty"`
	// example:
	//
	// 6666666666
	ItineraryNum *string `json:"itinerary_num,omitempty" xml:"itinerary_num,omitempty"`
	// example:
	//
	// 100.0
	ItineraryPrice *float64 `json:"itinerary_price,omitempty" xml:"itinerary_price,omitempty"`
	// example:
	//
	// 100
	Mileage *int32 `json:"mileage,omitempty" xml:"mileage,omitempty"`
	// example:
	//
	// 2023-01-01 00:00:00
	MostDifferenceDeptTime *string `json:"most_difference_dept_time,omitempty" xml:"most_difference_dept_time,omitempty"`
	// example:
	//
	// 1
	MostDifferenceDiscount *string `json:"most_difference_discount,omitempty" xml:"most_difference_discount,omitempty"`
	// example:
	//
	// 123
	MostDifferenceFlightNo *string `json:"most_difference_flight_no,omitempty" xml:"most_difference_flight_no,omitempty"`
	// example:
	//
	// 100.0
	MostDifferencePrice  *float64 `json:"most_difference_price,omitempty" xml:"most_difference_price,omitempty"`
	MostDifferenceReason *string  `json:"most_difference_reason,omitempty" xml:"most_difference_reason,omitempty"`
	// example:
	//
	// 100.0
	MostPrice *float64 `json:"most_price,omitempty" xml:"most_price,omitempty"`
	// example:
	//
	// 0.0
	NegotiationCouponFee *float64 `json:"negotiation_coupon_fee,omitempty" xml:"negotiation_coupon_fee,omitempty"`
	// example:
	//
	// 30.0
	OilFee *float64 `json:"oil_fee,omitempty" xml:"oil_fee,omitempty"`
	// example:
	//
	// 3137168772101111000
	OrderId         *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	OrderStatusDesc *string `json:"order_status_desc,omitempty" xml:"order_status_desc,omitempty"`
	// example:
	//
	// 123
	OverApplyId *string `json:"over_apply_id,omitempty" xml:"over_apply_id,omitempty"`
	// example:
	//
	// 123
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 100.0
	PersonSettlePrice *float64 `json:"person_settle_price,omitempty" xml:"person_settle_price,omitempty"`
	PreBookTip        *string  `json:"pre_book_tip,omitempty" xml:"pre_book_tip,omitempty"`
	// example:
	//
	// 60399513
	PrimaryId *int64 `json:"primary_id,omitempty" xml:"primary_id,omitempty"`
	// example:
	//
	// acs
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	// example:
	//
	// 100.0
	RefundFee    *float64 `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	RefundResult *string  `json:"refund_result,omitempty" xml:"refund_result,omitempty"`
	// example:
	//
	// 20.0
	RefundUpgradeCost *float64 `json:"refund_upgrade_cost,omitempty" xml:"refund_upgrade_cost,omitempty"`
	Remark            *string  `json:"remark,omitempty" xml:"remark,omitempty"`
	RepeatRefund      *string  `json:"repeat_refund,omitempty" xml:"repeat_refund,omitempty"`
	// example:
	//
	// 100.0
	SealPrice *float64 `json:"seal_price,omitempty" xml:"seal_price,omitempty"`
	// example:
	//
	// 0.0
	ServiceFee *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 200.0
	SettlementFee *float64 `json:"settlement_fee,omitempty" xml:"settlement_fee,omitempty"`
	// example:
	//
	// 0.0
	SettlementGrantFee *float64 `json:"settlement_grant_fee,omitempty" xml:"settlement_grant_fee,omitempty"`
	// example:
	//
	// 2023-01-01 00:00:00
	SettlementTime *string `json:"settlement_time,omitempty" xml:"settlement_time,omitempty"`
	SettlementType *string `json:"settlement_type,omitempty" xml:"settlement_type,omitempty"`
	// example:
	//
	// 0
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 169551103
	SubOrderId *string `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
	// example:
	//
	// 9%
	TaxRate *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	// example:
	//
	// cs2
	ThirdInvoiceId *string `json:"third_invoice_id,omitempty" xml:"third_invoice_id,omitempty"`
	// example:
	//
	// 11
	ThirdItineraryId *string `json:"third_itinerary_id,omitempty" xml:"third_itinerary_id,omitempty"`
	// example:
	//
	// 123-2345
	TicketId *string `json:"ticket_id,omitempty" xml:"ticket_id,omitempty"`
	// example:
	//
	// 1
	Trade *string `json:"trade,omitempty" xml:"trade,omitempty"`
	// example:
	//
	// A1234
	TravelerId *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	// example:
	//
	// A1234
	TravelerJobNo          *string `json:"traveler_job_no,omitempty" xml:"traveler_job_no,omitempty"`
	TravelerMemberType     *string `json:"traveler_member_type,omitempty" xml:"traveler_member_type,omitempty"`
	TravelerMemberTypeName *string `json:"traveler_member_type_name,omitempty" xml:"traveler_member_type_name,omitempty"`
	TravelerName           *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
	// example:
	//
	// 100.0
	UpgradeCost *float64 `json:"upgrade_cost,omitempty" xml:"upgrade_cost,omitempty"`
	// example:
	//
	// 11
	VoucherType *int32  `json:"voucher_type,omitempty" xml:"voucher_type,omitempty"`
	VoyageName  *string `json:"voyage_name,omitempty" xml:"voyage_name,omitempty"`
}

func (s CooperatorFlightBillSettlementQueryResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s CooperatorFlightBillSettlementQueryResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetAdvanceDay(v int32) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.AdvanceDay = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetAirlineCorpCode(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.AirlineCorpCode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetAirlineCorpName(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.AirlineCorpName = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetAlipayId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.AlipayId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetAlipayTradeNo(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.AlipayTradeNo = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetApplyArrCityCode(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ApplyArrCityCode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetApplyArrCityName(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ApplyArrCityName = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetApplyDepCityCode(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ApplyDepCityCode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetApplyDepCityName(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ApplyDepCityName = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetApplyExtendField(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ApplyExtendField = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetApplyId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ApplyId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetArrAirportCode(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ArrAirportCode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetArrCity(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ArrCity = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetArrCityCode(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ArrCityCode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetArrDate(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ArrDate = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetArrStation(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ArrStation = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetArrTime(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ArrTime = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetBillRecordTime(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.BillRecordTime = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetBookMode(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.BookMode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetBookTime(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.BookTime = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetBookerId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.BookerId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetBookerJobNo(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.BookerJobNo = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetBookerName(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.BookerName = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetBtripCouponFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.BtripCouponFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetBuildFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.BuildFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetBusinessTripResult(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.BusinessTripResult = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCabin(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.Cabin = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCabinClass(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.CabinClass = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCapitalDirection(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.CapitalDirection = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCascadeDepartment(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.CascadeDepartment = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetChangeFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ChangeFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetChangeResult(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ChangeResult = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCooperatorBillCode(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.CooperatorBillCode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCooperatorName(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.CooperatorName = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCooperatorOrderId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.CooperatorOrderId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCorpPayOrderFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.CorpPayOrderFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCorpSettlePrice(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.CorpSettlePrice = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCostCenter(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.CostCenter = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCostCenterNumber(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.CostCenterNumber = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetCoupon(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.Coupon = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetDepAirportCode(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.DepAirportCode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetDepCityCode(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.DepCityCode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetDepartment(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.Department = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetDepartmentId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.DepartmentId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetDeptCity(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.DeptCity = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetDeptDate(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.DeptDate = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetDeptStation(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.DeptStation = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetDeptTime(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.DeptTime = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetDiscount(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.Discount = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetExceedReason(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ExceedReason = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetFeeType(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.FeeType = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetFlightNo(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.FlightNo = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetIndex(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.Index = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetInsOrderId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.InsOrderId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetInsuranceFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.InsuranceFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetInsuranceNumber(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.InsuranceNumber = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetInvoiceTitle(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.InvoiceTitle = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetItemType(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ItemType = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetItineraryNum(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ItineraryNum = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetItineraryPrice(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ItineraryPrice = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetMileage(v int32) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.Mileage = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetMostDifferenceDeptTime(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.MostDifferenceDeptTime = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetMostDifferenceDiscount(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.MostDifferenceDiscount = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetMostDifferenceFlightNo(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.MostDifferenceFlightNo = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetMostDifferencePrice(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.MostDifferencePrice = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetMostDifferenceReason(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.MostDifferenceReason = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetMostPrice(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.MostPrice = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetNegotiationCouponFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.NegotiationCouponFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetOilFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.OilFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetOrderId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.OrderId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetOrderStatusDesc(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.OrderStatusDesc = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetOverApplyId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.OverApplyId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetPaymentDepartmentId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.PaymentDepartmentId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetPaymentDepartmentName(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.PaymentDepartmentName = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetPersonSettlePrice(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.PersonSettlePrice = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetPreBookTip(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.PreBookTip = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetPrimaryId(v int64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.PrimaryId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetProjectCode(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ProjectCode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetProjectName(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ProjectName = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetRefundFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.RefundFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetRefundResult(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.RefundResult = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetRefundUpgradeCost(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.RefundUpgradeCost = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetRemark(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.Remark = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetRepeatRefund(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.RepeatRefund = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetSealPrice(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.SealPrice = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetServiceFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ServiceFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetSettlementFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.SettlementFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetSettlementGrantFee(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.SettlementGrantFee = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetSettlementTime(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.SettlementTime = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetSettlementType(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.SettlementType = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetStatus(v int32) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.Status = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetSubOrderId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.SubOrderId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetTaxRate(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.TaxRate = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetThirdInvoiceId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ThirdInvoiceId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetThirdItineraryId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.ThirdItineraryId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetTicketId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.TicketId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetTrade(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.Trade = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetTravelerId(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.TravelerId = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetTravelerJobNo(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.TravelerJobNo = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetTravelerMemberType(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.TravelerMemberType = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetTravelerMemberTypeName(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.TravelerMemberTypeName = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetTravelerName(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.TravelerName = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetUpgradeCost(v float64) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.UpgradeCost = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetVoucherType(v int32) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.VoucherType = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponseBodyModuleItems) SetVoyageName(v string) *CooperatorFlightBillSettlementQueryResponseBodyModuleItems {
	s.VoyageName = &v
	return s
}

type CooperatorFlightBillSettlementQueryResponse struct {
	Headers    map[string]*string                               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CooperatorFlightBillSettlementQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CooperatorFlightBillSettlementQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s CooperatorFlightBillSettlementQueryResponse) GoString() string {
	return s.String()
}

func (s *CooperatorFlightBillSettlementQueryResponse) SetHeaders(v map[string]*string) *CooperatorFlightBillSettlementQueryResponse {
	s.Headers = v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponse) SetStatusCode(v int32) *CooperatorFlightBillSettlementQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *CooperatorFlightBillSettlementQueryResponse) SetBody(v *CooperatorFlightBillSettlementQueryResponseBody) *CooperatorFlightBillSettlementQueryResponse {
	s.Body = v
	return s
}

type CooperatorHotelBillSettlementQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s CooperatorHotelBillSettlementQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s CooperatorHotelBillSettlementQueryHeaders) GoString() string {
	return s.String()
}

func (s *CooperatorHotelBillSettlementQueryHeaders) SetCommonHeaders(v map[string]*string) *CooperatorHotelBillSettlementQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CooperatorHotelBillSettlementQueryHeaders) SetXAcsBtripCorpToken(v string) *CooperatorHotelBillSettlementQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type CooperatorHotelBillSettlementQueryRequest struct {
	// example:
	//
	// cooperator_alibtrip
	CooperatorId *string `json:"cooperator_id,omitempty" xml:"cooperator_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-02
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// example:
	//
	// 2021-10-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
}

func (s CooperatorHotelBillSettlementQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s CooperatorHotelBillSettlementQueryRequest) GoString() string {
	return s.String()
}

func (s *CooperatorHotelBillSettlementQueryRequest) SetCooperatorId(v string) *CooperatorHotelBillSettlementQueryRequest {
	s.CooperatorId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryRequest) SetPageNo(v int32) *CooperatorHotelBillSettlementQueryRequest {
	s.PageNo = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryRequest) SetPageSize(v int32) *CooperatorHotelBillSettlementQueryRequest {
	s.PageSize = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryRequest) SetPeriodEnd(v string) *CooperatorHotelBillSettlementQueryRequest {
	s.PeriodEnd = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryRequest) SetPeriodStart(v string) *CooperatorHotelBillSettlementQueryRequest {
	s.PeriodStart = &v
	return s
}

type CooperatorHotelBillSettlementQueryResponseBody struct {
	// example:
	//
	// 0
	Code    *string                                               `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                               `json:"message,omitempty" xml:"message,omitempty"`
	Module  *CooperatorHotelBillSettlementQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CooperatorHotelBillSettlementQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CooperatorHotelBillSettlementQueryResponseBody) GoString() string {
	return s.String()
}

func (s *CooperatorHotelBillSettlementQueryResponseBody) SetCode(v string) *CooperatorHotelBillSettlementQueryResponseBody {
	s.Code = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBody) SetMessage(v string) *CooperatorHotelBillSettlementQueryResponseBody {
	s.Message = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBody) SetModule(v *CooperatorHotelBillSettlementQueryResponseBodyModule) *CooperatorHotelBillSettlementQueryResponseBody {
	s.Module = v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBody) SetRequestId(v string) *CooperatorHotelBillSettlementQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBody) SetSuccess(v bool) *CooperatorHotelBillSettlementQueryResponseBody {
	s.Success = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBody) SetTraceId(v string) *CooperatorHotelBillSettlementQueryResponseBody {
	s.TraceId = &v
	return s
}

type CooperatorHotelBillSettlementQueryResponseBodyModule struct {
	// example:
	//
	// 2
	Category *int32 `json:"category,omitempty" xml:"category,omitempty"`
	// example:
	//
	// open12ilgngll7us7v10Bm5UlMg700
	CorpId *string                                                      `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	Items  []*CooperatorHotelBillSettlementQueryResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
	// example:
	//
	// 2021-10-14
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// example:
	//
	// 2021-10-13
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
	// example:
	//
	// 30
	TotalSize *int64 `json:"total_size,omitempty" xml:"total_size,omitempty"`
}

func (s CooperatorHotelBillSettlementQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CooperatorHotelBillSettlementQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModule) SetCategory(v int32) *CooperatorHotelBillSettlementQueryResponseBodyModule {
	s.Category = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModule) SetCorpId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModule) SetItems(v []*CooperatorHotelBillSettlementQueryResponseBodyModuleItems) *CooperatorHotelBillSettlementQueryResponseBodyModule {
	s.Items = v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModule) SetPeriodEnd(v string) *CooperatorHotelBillSettlementQueryResponseBodyModule {
	s.PeriodEnd = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModule) SetPeriodStart(v string) *CooperatorHotelBillSettlementQueryResponseBodyModule {
	s.PeriodStart = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModule) SetTotalSize(v int64) *CooperatorHotelBillSettlementQueryResponseBodyModule {
	s.TotalSize = &v
	return s
}

type CooperatorHotelBillSettlementQueryResponseBodyModuleItems struct {
	// example:
	//
	// 124
	AlipayTradeNo *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	// example:
	//
	// 123
	ApplyArrCityCode *string `json:"apply_arr_city_code,omitempty" xml:"apply_arr_city_code,omitempty"`
	ApplyArrCityName *string `json:"apply_arr_city_name,omitempty" xml:"apply_arr_city_name,omitempty"`
	// example:
	//
	// 123
	ApplyDepCityCode *string `json:"apply_dep_city_code,omitempty" xml:"apply_dep_city_code,omitempty"`
	ApplyDepCityName *string `json:"apply_dep_city_name,omitempty" xml:"apply_dep_city_name,omitempty"`
	ApplyExtendField *string `json:"apply_extend_field,omitempty" xml:"apply_extend_field,omitempty"`
	// example:
	//
	// sdasdas123324
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 1.0
	AverageNights *float64 `json:"average_nights,omitempty" xml:"average_nights,omitempty"`
	// example:
	//
	// 2023-01-01 00:00:00
	BillRecordTime *string `json:"bill_record_time,omitempty" xml:"bill_record_time,omitempty"`
	BookMode       *string `json:"book_mode,omitempty" xml:"book_mode,omitempty"`
	BookReason     *string `json:"book_reason,omitempty" xml:"book_reason,omitempty"`
	// example:
	//
	// 2023-01-01 00:00:00
	BookTime *string `json:"book_time,omitempty" xml:"book_time,omitempty"`
	// example:
	//
	// 123
	BookerId *string `json:"booker_id,omitempty" xml:"booker_id,omitempty"`
	// example:
	//
	// zs123
	BookerJobNo        *string `json:"booker_job_no,omitempty" xml:"booker_job_no,omitempty"`
	BookerName         *string `json:"booker_name,omitempty" xml:"booker_name,omitempty"`
	BrandGroup         *string `json:"brand_group,omitempty" xml:"brand_group,omitempty"`
	BrandName          *string `json:"brand_name,omitempty" xml:"brand_name,omitempty"`
	BusinessTripResult *string `json:"business_trip_result,omitempty" xml:"business_trip_result,omitempty"`
	CapitalDirection   *string `json:"capital_direction,omitempty" xml:"capital_direction,omitempty"`
	CascadeDepartment  *string `json:"cascade_department,omitempty" xml:"cascade_department,omitempty"`
	// example:
	//
	// 2024-02-13
	CheckInDate *string `json:"check_in_date,omitempty" xml:"check_in_date,omitempty"`
	// example:
	//
	// 2024-02-15
	CheckoutDate *string `json:"checkout_date,omitempty" xml:"checkout_date,omitempty"`
	City         *string `json:"city,omitempty" xml:"city,omitempty"`
	// example:
	//
	// 330100
	CityCode   *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityCounty *string `json:"city_county,omitempty" xml:"city_county,omitempty"`
	// example:
	//
	// 330100
	CityCountyCode *int32 `json:"city_county_code,omitempty" xml:"city_county_code,omitempty"`
	// example:
	//
	// IN240102113438277278
	CooperatorBillCode *string `json:"cooperator_bill_code,omitempty" xml:"cooperator_bill_code,omitempty"`
	CooperatorName     *string `json:"cooperator_name,omitempty" xml:"cooperator_name,omitempty"`
	// example:
	//
	// HO20240125162800280928
	CooperatorOrderId *string `json:"cooperator_order_id,omitempty" xml:"cooperator_order_id,omitempty"`
	// example:
	//
	// 0.1
	CorpRefundFee *float64 `json:"corp_refund_fee,omitempty" xml:"corp_refund_fee,omitempty"`
	// example:
	//
	// 100.0
	CorpTotalFee *float64 `json:"corp_total_fee,omitempty" xml:"corp_total_fee,omitempty"`
	CostCenter   *string  `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	// example:
	//
	// 123
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	Department       *string `json:"department,omitempty" xml:"department,omitempty"`
	// example:
	//
	// 123
	DepartmentId *string `json:"department_id,omitempty" xml:"department_id,omitempty"`
	ExceedReason *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	FeeType      *string `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	// example:
	//
	// 10.0
	Fees *float64 `json:"fees,omitempty" xml:"fees,omitempty"`
	// example:
	//
	// 1.0
	Fines *float64 `json:"fines,omitempty" xml:"fines,omitempty"`
	// example:
	//
	// 10.0
	FuPointFee *float64 `json:"fu_point_fee,omitempty" xml:"fu_point_fee,omitempty"`
	HotelName  *string  `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	// example:
	//
	// 1
	Index            *string `json:"index,omitempty" xml:"index,omitempty"`
	InvoiceTitle     *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	IsEarlyDeparture *string `json:"is_early_departure,omitempty" xml:"is_early_departure,omitempty"`
	IsNegotiation    *string `json:"is_negotiation,omitempty" xml:"is_negotiation,omitempty"`
	IsShareStr       *string `json:"is_share_str,omitempty" xml:"is_share_str,omitempty"`
	// example:
	//
	// 2
	Nights *int32 `json:"nights,omitempty" xml:"nights,omitempty"`
	// example:
	//
	// 3137168772101111000
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 100.0
	OrderPrice      *float64 `json:"order_price,omitempty" xml:"order_price,omitempty"`
	OrderStatusDesc *string  `json:"order_status_desc,omitempty" xml:"order_status_desc,omitempty"`
	OrderType       *string  `json:"order_type,omitempty" xml:"order_type,omitempty"`
	// example:
	//
	// 123
	OverApplyId *string `json:"over_apply_id,omitempty" xml:"over_apply_id,omitempty"`
	// example:
	//
	// 123
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 0.1
	PersonRefundFee *float64 `json:"person_refund_fee,omitempty" xml:"person_refund_fee,omitempty"`
	// example:
	//
	// 10.0
	PersonSettlePrice *float64 `json:"person_settle_price,omitempty" xml:"person_settle_price,omitempty"`
	// example:
	//
	// 72328485
	PrimaryId *int64 `json:"primary_id,omitempty" xml:"primary_id,omitempty"`
	// example:
	//
	// acs
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	// example:
	//
	// 0.0
	PromotionFee *float64 `json:"promotion_fee,omitempty" xml:"promotion_fee,omitempty"`
	Remark       *string  `json:"remark,omitempty" xml:"remark,omitempty"`
	// example:
	//
	// 10
	ReserveRule *int32  `json:"reserve_rule,omitempty" xml:"reserve_rule,omitempty"`
	RoomNo      *string `json:"room_no,omitempty" xml:"room_no,omitempty"`
	// example:
	//
	// 1
	RoomNumber *int32 `json:"room_number,omitempty" xml:"room_number,omitempty"`
	// example:
	//
	// 105.0
	RoomPrice *float64 `json:"room_price,omitempty" xml:"room_price,omitempty"`
	RoomType  *string  `json:"room_type,omitempty" xml:"room_type,omitempty"`
	// example:
	//
	// 5.0
	ServiceFee *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 110.0
	SettlementFee *float64 `json:"settlement_fee,omitempty" xml:"settlement_fee,omitempty"`
	// example:
	//
	// 0.0
	SettlementGrantFee *float64 `json:"settlement_grant_fee,omitempty" xml:"settlement_grant_fee,omitempty"`
	// example:
	//
	// 2023-01-01 00:00:00
	SettlementTime *string `json:"settlement_time,omitempty" xml:"settlement_time,omitempty"`
	SettlementType *string `json:"settlement_type,omitempty" xml:"settlement_type,omitempty"`
	Star           *string `json:"star,omitempty" xml:"star,omitempty"`
	// example:
	//
	// 2
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 166564408
	SubOrderId *string `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
	// example:
	//
	// 9%
	TaxRate *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	// example:
	//
	// 1
	ThirdInvoiceId *string `json:"third_invoice_id,omitempty" xml:"third_invoice_id,omitempty"`
	// example:
	//
	// 123
	ThirdItineraryId *string `json:"third_itinerary_id,omitempty" xml:"third_itinerary_id,omitempty"`
	// example:
	//
	// 2
	TotalNights *int32 `json:"total_nights,omitempty" xml:"total_nights,omitempty"`
	// example:
	//
	// 123
	TravelerId *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	// example:
	//
	// zs123
	TravelerJobNo          *string `json:"traveler_job_no,omitempty" xml:"traveler_job_no,omitempty"`
	TravelerMemberType     *string `json:"traveler_member_type,omitempty" xml:"traveler_member_type,omitempty"`
	TravelerMemberTypeName *string `json:"traveler_member_type_name,omitempty" xml:"traveler_member_type_name,omitempty"`
	TravelerName           *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
	// example:
	//
	// 1
	VoucherType *int32 `json:"voucher_type,omitempty" xml:"voucher_type,omitempty"`
}

func (s CooperatorHotelBillSettlementQueryResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s CooperatorHotelBillSettlementQueryResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetAlipayTradeNo(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.AlipayTradeNo = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetApplyArrCityCode(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ApplyArrCityCode = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetApplyArrCityName(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ApplyArrCityName = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetApplyDepCityCode(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ApplyDepCityCode = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetApplyDepCityName(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ApplyDepCityName = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetApplyExtendField(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ApplyExtendField = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetApplyId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ApplyId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetAverageNights(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.AverageNights = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetBillRecordTime(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.BillRecordTime = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetBookMode(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.BookMode = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetBookReason(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.BookReason = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetBookTime(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.BookTime = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetBookerId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.BookerId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetBookerJobNo(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.BookerJobNo = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetBookerName(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.BookerName = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetBrandGroup(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.BrandGroup = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetBrandName(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.BrandName = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetBusinessTripResult(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.BusinessTripResult = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCapitalDirection(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CapitalDirection = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCascadeDepartment(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CascadeDepartment = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCheckInDate(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CheckInDate = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCheckoutDate(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CheckoutDate = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCity(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.City = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCityCode(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CityCode = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCityCounty(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CityCounty = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCityCountyCode(v int32) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CityCountyCode = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCooperatorBillCode(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CooperatorBillCode = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCooperatorName(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CooperatorName = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCooperatorOrderId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CooperatorOrderId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCorpRefundFee(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CorpRefundFee = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCorpTotalFee(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CorpTotalFee = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCostCenter(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CostCenter = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetCostCenterNumber(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.CostCenterNumber = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetDepartment(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.Department = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetDepartmentId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.DepartmentId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetExceedReason(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ExceedReason = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetFeeType(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.FeeType = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetFees(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.Fees = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetFines(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.Fines = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetFuPointFee(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.FuPointFee = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetHotelName(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.HotelName = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetIndex(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.Index = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetInvoiceTitle(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.InvoiceTitle = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetIsEarlyDeparture(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.IsEarlyDeparture = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetIsNegotiation(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.IsNegotiation = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetIsShareStr(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.IsShareStr = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetNights(v int32) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.Nights = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetOrderId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.OrderId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetOrderPrice(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.OrderPrice = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetOrderStatusDesc(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.OrderStatusDesc = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetOrderType(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.OrderType = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetOverApplyId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.OverApplyId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetPaymentDepartmentId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.PaymentDepartmentId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetPaymentDepartmentName(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.PaymentDepartmentName = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetPersonRefundFee(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.PersonRefundFee = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetPersonSettlePrice(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.PersonSettlePrice = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetPrimaryId(v int64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.PrimaryId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetProjectCode(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ProjectCode = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetProjectName(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ProjectName = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetPromotionFee(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.PromotionFee = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetRemark(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.Remark = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetReserveRule(v int32) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ReserveRule = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetRoomNo(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.RoomNo = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetRoomNumber(v int32) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.RoomNumber = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetRoomPrice(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.RoomPrice = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetRoomType(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.RoomType = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetServiceFee(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ServiceFee = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetSettlementFee(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.SettlementFee = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetSettlementGrantFee(v float64) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.SettlementGrantFee = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetSettlementTime(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.SettlementTime = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetSettlementType(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.SettlementType = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetStar(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.Star = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetStatus(v int32) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.Status = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetSubOrderId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.SubOrderId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetTaxRate(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.TaxRate = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetThirdInvoiceId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ThirdInvoiceId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetThirdItineraryId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.ThirdItineraryId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetTotalNights(v int32) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.TotalNights = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetTravelerId(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.TravelerId = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetTravelerJobNo(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.TravelerJobNo = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetTravelerMemberType(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.TravelerMemberType = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetTravelerMemberTypeName(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.TravelerMemberTypeName = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetTravelerName(v string) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.TravelerName = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponseBodyModuleItems) SetVoucherType(v int32) *CooperatorHotelBillSettlementQueryResponseBodyModuleItems {
	s.VoucherType = &v
	return s
}

type CooperatorHotelBillSettlementQueryResponse struct {
	Headers    map[string]*string                              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CooperatorHotelBillSettlementQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CooperatorHotelBillSettlementQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s CooperatorHotelBillSettlementQueryResponse) GoString() string {
	return s.String()
}

func (s *CooperatorHotelBillSettlementQueryResponse) SetHeaders(v map[string]*string) *CooperatorHotelBillSettlementQueryResponse {
	s.Headers = v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponse) SetStatusCode(v int32) *CooperatorHotelBillSettlementQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *CooperatorHotelBillSettlementQueryResponse) SetBody(v *CooperatorHotelBillSettlementQueryResponseBody) *CooperatorHotelBillSettlementQueryResponse {
	s.Body = v
	return s
}

type CorpAuthLinkInfoQueryResponseBody struct {
	Code      *string                                  `json:"code,omitempty" xml:"code,omitempty"`
	Message   *string                                  `json:"message,omitempty" xml:"message,omitempty"`
	Module    *CorpAuthLinkInfoQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	RequestId *string                                  `json:"requestId,omitempty" xml:"requestId,omitempty"`
	TraceId   *string                                  `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CorpAuthLinkInfoQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CorpAuthLinkInfoQueryResponseBody) GoString() string {
	return s.String()
}

func (s *CorpAuthLinkInfoQueryResponseBody) SetCode(v string) *CorpAuthLinkInfoQueryResponseBody {
	s.Code = &v
	return s
}

func (s *CorpAuthLinkInfoQueryResponseBody) SetMessage(v string) *CorpAuthLinkInfoQueryResponseBody {
	s.Message = &v
	return s
}

func (s *CorpAuthLinkInfoQueryResponseBody) SetModule(v *CorpAuthLinkInfoQueryResponseBodyModule) *CorpAuthLinkInfoQueryResponseBody {
	s.Module = v
	return s
}

func (s *CorpAuthLinkInfoQueryResponseBody) SetRequestId(v string) *CorpAuthLinkInfoQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *CorpAuthLinkInfoQueryResponseBody) SetTraceId(v string) *CorpAuthLinkInfoQueryResponseBody {
	s.TraceId = &v
	return s
}

type CorpAuthLinkInfoQueryResponseBodyModule struct {
	LinkCorps []*CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps `json:"link_corps,omitempty" xml:"link_corps,omitempty" type:"Repeated"`
	OrgCorp   *CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp     `json:"org_corp,omitempty" xml:"org_corp,omitempty" type:"Struct"`
}

func (s CorpAuthLinkInfoQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CorpAuthLinkInfoQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CorpAuthLinkInfoQueryResponseBodyModule) SetLinkCorps(v []*CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps) *CorpAuthLinkInfoQueryResponseBodyModule {
	s.LinkCorps = v
	return s
}

func (s *CorpAuthLinkInfoQueryResponseBodyModule) SetOrgCorp(v *CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp) *CorpAuthLinkInfoQueryResponseBodyModule {
	s.OrgCorp = v
	return s
}

type CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps struct {
	CorpName   *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	OpenCorpId *string `json:"open_corp_id,omitempty" xml:"open_corp_id,omitempty"`
	TrueCorpId *string `json:"true_corp_id,omitempty" xml:"true_corp_id,omitempty"`
}

func (s CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps) String() string {
	return tea.Prettify(s)
}

func (s CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps) GoString() string {
	return s.String()
}

func (s *CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps) SetCorpName(v string) *CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps {
	s.CorpName = &v
	return s
}

func (s *CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps) SetOpenCorpId(v string) *CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps {
	s.OpenCorpId = &v
	return s
}

func (s *CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps) SetTrueCorpId(v string) *CorpAuthLinkInfoQueryResponseBodyModuleLinkCorps {
	s.TrueCorpId = &v
	return s
}

type CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp struct {
	CorpName   *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	OpenCorpId *string `json:"open_corp_id,omitempty" xml:"open_corp_id,omitempty"`
	TrueCorpId *string `json:"true_corp_id,omitempty" xml:"true_corp_id,omitempty"`
}

func (s CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp) String() string {
	return tea.Prettify(s)
}

func (s CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp) GoString() string {
	return s.String()
}

func (s *CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp) SetCorpName(v string) *CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp {
	s.CorpName = &v
	return s
}

func (s *CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp) SetOpenCorpId(v string) *CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp {
	s.OpenCorpId = &v
	return s
}

func (s *CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp) SetTrueCorpId(v string) *CorpAuthLinkInfoQueryResponseBodyModuleOrgCorp {
	s.TrueCorpId = &v
	return s
}

type CorpAuthLinkInfoQueryResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CorpAuthLinkInfoQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CorpAuthLinkInfoQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s CorpAuthLinkInfoQueryResponse) GoString() string {
	return s.String()
}

func (s *CorpAuthLinkInfoQueryResponse) SetHeaders(v map[string]*string) *CorpAuthLinkInfoQueryResponse {
	s.Headers = v
	return s
}

func (s *CorpAuthLinkInfoQueryResponse) SetStatusCode(v int32) *CorpAuthLinkInfoQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *CorpAuthLinkInfoQueryResponse) SetBody(v *CorpAuthLinkInfoQueryResponseBody) *CorpAuthLinkInfoQueryResponse {
	s.Body = v
	return s
}

type CorpTokenHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// vf9_bvla0qs
	XAcsBtripAccessToken *string `json:"x-acs-btrip-access-token,omitempty" xml:"x-acs-btrip-access-token,omitempty"`
}

func (s CorpTokenHeaders) String() string {
	return tea.Prettify(s)
}

func (s CorpTokenHeaders) GoString() string {
	return s.String()
}

func (s *CorpTokenHeaders) SetCommonHeaders(v map[string]*string) *CorpTokenHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CorpTokenHeaders) SetXAcsBtripAccessToken(v string) *CorpTokenHeaders {
	s.XAcsBtripAccessToken = &v
	return s
}

type CorpTokenRequest struct {
	// example:
	//
	// Z2FyYmE1YTZjMDAwTixJU1M5LnZlLXtMO3FKbiYqJSM
	AppSecret *string `json:"app_secret,omitempty" xml:"app_secret,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// open324dfsdafsgcxvxv
	CorpId *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s CorpTokenRequest) String() string {
	return tea.Prettify(s)
}

func (s CorpTokenRequest) GoString() string {
	return s.String()
}

func (s *CorpTokenRequest) SetAppSecret(v string) *CorpTokenRequest {
	s.AppSecret = &v
	return s
}

func (s *CorpTokenRequest) SetCorpId(v string) *CorpTokenRequest {
	s.CorpId = &v
	return s
}

func (s *CorpTokenRequest) SetType(v int32) *CorpTokenRequest {
	s.Type = &v
	return s
}

type CorpTokenResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                      `json:"code,omitempty" xml:"code,omitempty"`
	Data    *CorpTokenResponseBodyData   `json:"data,omitempty" xml:"data,omitempty" type:"Struct"`
	Message *string                      `json:"message,omitempty" xml:"message,omitempty"`
	Module  *CorpTokenResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// 是否成功
	//
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CorpTokenResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CorpTokenResponseBody) GoString() string {
	return s.String()
}

func (s *CorpTokenResponseBody) SetCode(v string) *CorpTokenResponseBody {
	s.Code = &v
	return s
}

func (s *CorpTokenResponseBody) SetData(v *CorpTokenResponseBodyData) *CorpTokenResponseBody {
	s.Data = v
	return s
}

func (s *CorpTokenResponseBody) SetMessage(v string) *CorpTokenResponseBody {
	s.Message = &v
	return s
}

func (s *CorpTokenResponseBody) SetModule(v *CorpTokenResponseBodyModule) *CorpTokenResponseBody {
	s.Module = v
	return s
}

func (s *CorpTokenResponseBody) SetRequestId(v string) *CorpTokenResponseBody {
	s.RequestId = &v
	return s
}

func (s *CorpTokenResponseBody) SetSuccess(v bool) *CorpTokenResponseBody {
	s.Success = &v
	return s
}

func (s *CorpTokenResponseBody) SetTraceId(v string) *CorpTokenResponseBody {
	s.TraceId = &v
	return s
}

type CorpTokenResponseBodyData struct {
	// example:
	//
	// 70000
	Expire *int64 `json:"expire,omitempty" xml:"expire,omitempty"`
	// example:
	//
	// 37j76df
	Token *string `json:"token,omitempty" xml:"token,omitempty"`
}

func (s CorpTokenResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s CorpTokenResponseBodyData) GoString() string {
	return s.String()
}

func (s *CorpTokenResponseBodyData) SetExpire(v int64) *CorpTokenResponseBodyData {
	s.Expire = &v
	return s
}

func (s *CorpTokenResponseBodyData) SetToken(v string) *CorpTokenResponseBodyData {
	s.Token = &v
	return s
}

type CorpTokenResponseBodyModule struct {
	// example:
	//
	// 70000
	Expire *int64 `json:"expire,omitempty" xml:"expire,omitempty"`
	// example:
	//
	// 1635744378301
	Start *int64 `json:"start,omitempty" xml:"start,omitempty"`
	// example:
	//
	// 37j76df
	Token *string `json:"token,omitempty" xml:"token,omitempty"`
}

func (s CorpTokenResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CorpTokenResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CorpTokenResponseBodyModule) SetExpire(v int64) *CorpTokenResponseBodyModule {
	s.Expire = &v
	return s
}

func (s *CorpTokenResponseBodyModule) SetStart(v int64) *CorpTokenResponseBodyModule {
	s.Start = &v
	return s
}

func (s *CorpTokenResponseBodyModule) SetToken(v string) *CorpTokenResponseBodyModule {
	s.Token = &v
	return s
}

type CorpTokenResponse struct {
	Headers    map[string]*string     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CorpTokenResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CorpTokenResponse) String() string {
	return tea.Prettify(s)
}

func (s CorpTokenResponse) GoString() string {
	return s.String()
}

func (s *CorpTokenResponse) SetHeaders(v map[string]*string) *CorpTokenResponse {
	s.Headers = v
	return s
}

func (s *CorpTokenResponse) SetStatusCode(v int32) *CorpTokenResponse {
	s.StatusCode = &v
	return s
}

func (s *CorpTokenResponse) SetBody(v *CorpTokenResponseBody) *CorpTokenResponse {
	s.Body = v
	return s
}

type CostCenterDeleteHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CostCenterDeleteHeaders) String() string {
	return tea.Prettify(s)
}

func (s CostCenterDeleteHeaders) GoString() string {
	return s.String()
}

func (s *CostCenterDeleteHeaders) SetCommonHeaders(v map[string]*string) *CostCenterDeleteHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CostCenterDeleteHeaders) SetXAcsBtripSoCorpToken(v string) *CostCenterDeleteHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CostCenterDeleteRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
}

func (s CostCenterDeleteRequest) String() string {
	return tea.Prettify(s)
}

func (s CostCenterDeleteRequest) GoString() string {
	return s.String()
}

func (s *CostCenterDeleteRequest) SetThirdpartId(v string) *CostCenterDeleteRequest {
	s.ThirdpartId = &v
	return s
}

type CostCenterDeleteResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CostCenterDeleteResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CostCenterDeleteResponseBody) GoString() string {
	return s.String()
}

func (s *CostCenterDeleteResponseBody) SetCode(v string) *CostCenterDeleteResponseBody {
	s.Code = &v
	return s
}

func (s *CostCenterDeleteResponseBody) SetMessage(v string) *CostCenterDeleteResponseBody {
	s.Message = &v
	return s
}

func (s *CostCenterDeleteResponseBody) SetRequestId(v string) *CostCenterDeleteResponseBody {
	s.RequestId = &v
	return s
}

func (s *CostCenterDeleteResponseBody) SetSuccess(v bool) *CostCenterDeleteResponseBody {
	s.Success = &v
	return s
}

func (s *CostCenterDeleteResponseBody) SetTraceId(v string) *CostCenterDeleteResponseBody {
	s.TraceId = &v
	return s
}

type CostCenterDeleteResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CostCenterDeleteResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CostCenterDeleteResponse) String() string {
	return tea.Prettify(s)
}

func (s CostCenterDeleteResponse) GoString() string {
	return s.String()
}

func (s *CostCenterDeleteResponse) SetHeaders(v map[string]*string) *CostCenterDeleteResponse {
	s.Headers = v
	return s
}

func (s *CostCenterDeleteResponse) SetStatusCode(v int32) *CostCenterDeleteResponse {
	s.StatusCode = &v
	return s
}

func (s *CostCenterDeleteResponse) SetBody(v *CostCenterDeleteResponseBody) *CostCenterDeleteResponse {
	s.Body = v
	return s
}

type CostCenterModifyHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CostCenterModifyHeaders) String() string {
	return tea.Prettify(s)
}

func (s CostCenterModifyHeaders) GoString() string {
	return s.String()
}

func (s *CostCenterModifyHeaders) SetCommonHeaders(v map[string]*string) *CostCenterModifyHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CostCenterModifyHeaders) SetXAcsBtripSoCorpToken(v string) *CostCenterModifyHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CostCenterModifyRequest struct {
	// example:
	//
	// a@alipay.com
	AlipayNo *string `json:"alipay_no,omitempty" xml:"alipay_no,omitempty"`
	Disable  *int64  `json:"disable,omitempty" xml:"disable,omitempty"`
	// example:
	//
	// 12345
	Number *string `json:"number,omitempty" xml:"number,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Scope *int64 `json:"scope,omitempty" xml:"scope,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
	// This parameter is required.
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s CostCenterModifyRequest) String() string {
	return tea.Prettify(s)
}

func (s CostCenterModifyRequest) GoString() string {
	return s.String()
}

func (s *CostCenterModifyRequest) SetAlipayNo(v string) *CostCenterModifyRequest {
	s.AlipayNo = &v
	return s
}

func (s *CostCenterModifyRequest) SetDisable(v int64) *CostCenterModifyRequest {
	s.Disable = &v
	return s
}

func (s *CostCenterModifyRequest) SetNumber(v string) *CostCenterModifyRequest {
	s.Number = &v
	return s
}

func (s *CostCenterModifyRequest) SetScope(v int64) *CostCenterModifyRequest {
	s.Scope = &v
	return s
}

func (s *CostCenterModifyRequest) SetThirdpartId(v string) *CostCenterModifyRequest {
	s.ThirdpartId = &v
	return s
}

func (s *CostCenterModifyRequest) SetTitle(v string) *CostCenterModifyRequest {
	s.Title = &v
	return s
}

type CostCenterModifyResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CostCenterModifyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CostCenterModifyResponseBody) GoString() string {
	return s.String()
}

func (s *CostCenterModifyResponseBody) SetCode(v string) *CostCenterModifyResponseBody {
	s.Code = &v
	return s
}

func (s *CostCenterModifyResponseBody) SetMessage(v string) *CostCenterModifyResponseBody {
	s.Message = &v
	return s
}

func (s *CostCenterModifyResponseBody) SetRequestId(v string) *CostCenterModifyResponseBody {
	s.RequestId = &v
	return s
}

func (s *CostCenterModifyResponseBody) SetSuccess(v bool) *CostCenterModifyResponseBody {
	s.Success = &v
	return s
}

func (s *CostCenterModifyResponseBody) SetTraceId(v string) *CostCenterModifyResponseBody {
	s.TraceId = &v
	return s
}

type CostCenterModifyResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CostCenterModifyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CostCenterModifyResponse) String() string {
	return tea.Prettify(s)
}

func (s CostCenterModifyResponse) GoString() string {
	return s.String()
}

func (s *CostCenterModifyResponse) SetHeaders(v map[string]*string) *CostCenterModifyResponse {
	s.Headers = v
	return s
}

func (s *CostCenterModifyResponse) SetStatusCode(v int32) *CostCenterModifyResponse {
	s.StatusCode = &v
	return s
}

func (s *CostCenterModifyResponse) SetBody(v *CostCenterModifyResponseBody) *CostCenterModifyResponse {
	s.Body = v
	return s
}

type CostCenterQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CostCenterQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s CostCenterQueryHeaders) GoString() string {
	return s.String()
}

func (s *CostCenterQueryHeaders) SetCommonHeaders(v map[string]*string) *CostCenterQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CostCenterQueryHeaders) SetXAcsBtripSoCorpToken(v string) *CostCenterQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CostCenterQueryRequest struct {
	Disable *int64 `json:"disable,omitempty" xml:"disable,omitempty"`
	// example:
	//
	// false
	NeedOrgEntity *bool `json:"need_org_entity,omitempty" xml:"need_org_entity,omitempty"`
	// example:
	//
	// cost1
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
	Title       *string `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// user1
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CostCenterQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s CostCenterQueryRequest) GoString() string {
	return s.String()
}

func (s *CostCenterQueryRequest) SetDisable(v int64) *CostCenterQueryRequest {
	s.Disable = &v
	return s
}

func (s *CostCenterQueryRequest) SetNeedOrgEntity(v bool) *CostCenterQueryRequest {
	s.NeedOrgEntity = &v
	return s
}

func (s *CostCenterQueryRequest) SetThirdpartId(v string) *CostCenterQueryRequest {
	s.ThirdpartId = &v
	return s
}

func (s *CostCenterQueryRequest) SetTitle(v string) *CostCenterQueryRequest {
	s.Title = &v
	return s
}

func (s *CostCenterQueryRequest) SetUserId(v string) *CostCenterQueryRequest {
	s.UserId = &v
	return s
}

type CostCenterQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  []*CostCenterQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// example:
	//
	// true
	MorePage *bool `json:"more_page,omitempty" xml:"more_page,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CostCenterQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CostCenterQueryResponseBody) GoString() string {
	return s.String()
}

func (s *CostCenterQueryResponseBody) SetCode(v string) *CostCenterQueryResponseBody {
	s.Code = &v
	return s
}

func (s *CostCenterQueryResponseBody) SetMessage(v string) *CostCenterQueryResponseBody {
	s.Message = &v
	return s
}

func (s *CostCenterQueryResponseBody) SetModule(v []*CostCenterQueryResponseBodyModule) *CostCenterQueryResponseBody {
	s.Module = v
	return s
}

func (s *CostCenterQueryResponseBody) SetMorePage(v bool) *CostCenterQueryResponseBody {
	s.MorePage = &v
	return s
}

func (s *CostCenterQueryResponseBody) SetRequestId(v string) *CostCenterQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *CostCenterQueryResponseBody) SetSuccess(v bool) *CostCenterQueryResponseBody {
	s.Success = &v
	return s
}

func (s *CostCenterQueryResponseBody) SetTraceId(v string) *CostCenterQueryResponseBody {
	s.TraceId = &v
	return s
}

type CostCenterQueryResponseBodyModule struct {
	// example:
	//
	// a@alipay.com
	AlipayNo *string `json:"alipay_no,omitempty" xml:"alipay_no,omitempty"`
	// example:
	//
	// ding12345678
	CorpId    *string                                       `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	Disable   *int64                                        `json:"disable,omitempty" xml:"disable,omitempty"`
	EntityDOS []*CostCenterQueryResponseBodyModuleEntityDOS `json:"entity_d_o_s,omitempty" xml:"entity_d_o_s,omitempty" type:"Repeated"`
	// example:
	//
	// 7232
	Id *int64 `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// 123456
	Number *string `json:"number,omitempty" xml:"number,omitempty"`
	// rule code
	//
	// example:
	//
	// 500578154
	RuleCode *int64 `json:"rule_code,omitempty" xml:"rule_code,omitempty"`
	// example:
	//
	// 1
	Scope *int64 `json:"scope,omitempty" xml:"scope,omitempty"`
	// example:
	//
	// 1
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
	Title       *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s CostCenterQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CostCenterQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CostCenterQueryResponseBodyModule) SetAlipayNo(v string) *CostCenterQueryResponseBodyModule {
	s.AlipayNo = &v
	return s
}

func (s *CostCenterQueryResponseBodyModule) SetCorpId(v string) *CostCenterQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *CostCenterQueryResponseBodyModule) SetDisable(v int64) *CostCenterQueryResponseBodyModule {
	s.Disable = &v
	return s
}

func (s *CostCenterQueryResponseBodyModule) SetEntityDOS(v []*CostCenterQueryResponseBodyModuleEntityDOS) *CostCenterQueryResponseBodyModule {
	s.EntityDOS = v
	return s
}

func (s *CostCenterQueryResponseBodyModule) SetId(v int64) *CostCenterQueryResponseBodyModule {
	s.Id = &v
	return s
}

func (s *CostCenterQueryResponseBodyModule) SetNumber(v string) *CostCenterQueryResponseBodyModule {
	s.Number = &v
	return s
}

func (s *CostCenterQueryResponseBodyModule) SetRuleCode(v int64) *CostCenterQueryResponseBodyModule {
	s.RuleCode = &v
	return s
}

func (s *CostCenterQueryResponseBodyModule) SetScope(v int64) *CostCenterQueryResponseBodyModule {
	s.Scope = &v
	return s
}

func (s *CostCenterQueryResponseBodyModule) SetThirdpartId(v string) *CostCenterQueryResponseBodyModule {
	s.ThirdpartId = &v
	return s
}

func (s *CostCenterQueryResponseBodyModule) SetTitle(v string) *CostCenterQueryResponseBodyModule {
	s.Title = &v
	return s
}

type CostCenterQueryResponseBodyModuleEntityDOS struct {
	// example:
	//
	// ding1234567
	CorpId *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	// example:
	//
	// 12345
	EntityId *string `json:"entity_id,omitempty" xml:"entity_id,omitempty"`
	// example:
	//
	// 1
	EntityType *string `json:"entity_type,omitempty" xml:"entity_type,omitempty"`
	// example:
	//
	// default_bus
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// 10
	UserNum *int32 `json:"user_num,omitempty" xml:"user_num,omitempty"`
}

func (s CostCenterQueryResponseBodyModuleEntityDOS) String() string {
	return tea.Prettify(s)
}

func (s CostCenterQueryResponseBodyModuleEntityDOS) GoString() string {
	return s.String()
}

func (s *CostCenterQueryResponseBodyModuleEntityDOS) SetCorpId(v string) *CostCenterQueryResponseBodyModuleEntityDOS {
	s.CorpId = &v
	return s
}

func (s *CostCenterQueryResponseBodyModuleEntityDOS) SetEntityId(v string) *CostCenterQueryResponseBodyModuleEntityDOS {
	s.EntityId = &v
	return s
}

func (s *CostCenterQueryResponseBodyModuleEntityDOS) SetEntityType(v string) *CostCenterQueryResponseBodyModuleEntityDOS {
	s.EntityType = &v
	return s
}

func (s *CostCenterQueryResponseBodyModuleEntityDOS) SetName(v string) *CostCenterQueryResponseBodyModuleEntityDOS {
	s.Name = &v
	return s
}

func (s *CostCenterQueryResponseBodyModuleEntityDOS) SetUserNum(v int32) *CostCenterQueryResponseBodyModuleEntityDOS {
	s.UserNum = &v
	return s
}

type CostCenterQueryResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CostCenterQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CostCenterQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s CostCenterQueryResponse) GoString() string {
	return s.String()
}

func (s *CostCenterQueryResponse) SetHeaders(v map[string]*string) *CostCenterQueryResponse {
	s.Headers = v
	return s
}

func (s *CostCenterQueryResponse) SetStatusCode(v int32) *CostCenterQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *CostCenterQueryResponse) SetBody(v *CostCenterQueryResponseBody) *CostCenterQueryResponse {
	s.Body = v
	return s
}

type CostCenterSaveHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s CostCenterSaveHeaders) String() string {
	return tea.Prettify(s)
}

func (s CostCenterSaveHeaders) GoString() string {
	return s.String()
}

func (s *CostCenterSaveHeaders) SetCommonHeaders(v map[string]*string) *CostCenterSaveHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CostCenterSaveHeaders) SetXAcsBtripSoCorpToken(v string) *CostCenterSaveHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type CostCenterSaveRequest struct {
	// example:
	//
	// a@alipay.com
	AlipayNo *string `json:"alipay_no,omitempty" xml:"alipay_no,omitempty"`
	Disable  *int64  `json:"disable,omitempty" xml:"disable,omitempty"`
	// example:
	//
	// 12345
	Number *string `json:"number,omitempty" xml:"number,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Scope *int64 `json:"scope,omitempty" xml:"scope,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
	// This parameter is required.
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s CostCenterSaveRequest) String() string {
	return tea.Prettify(s)
}

func (s CostCenterSaveRequest) GoString() string {
	return s.String()
}

func (s *CostCenterSaveRequest) SetAlipayNo(v string) *CostCenterSaveRequest {
	s.AlipayNo = &v
	return s
}

func (s *CostCenterSaveRequest) SetDisable(v int64) *CostCenterSaveRequest {
	s.Disable = &v
	return s
}

func (s *CostCenterSaveRequest) SetNumber(v string) *CostCenterSaveRequest {
	s.Number = &v
	return s
}

func (s *CostCenterSaveRequest) SetScope(v int64) *CostCenterSaveRequest {
	s.Scope = &v
	return s
}

func (s *CostCenterSaveRequest) SetThirdpartId(v string) *CostCenterSaveRequest {
	s.ThirdpartId = &v
	return s
}

func (s *CostCenterSaveRequest) SetTitle(v string) *CostCenterSaveRequest {
	s.Title = &v
	return s
}

type CostCenterSaveResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                           `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                           `json:"message,omitempty" xml:"message,omitempty"`
	Module  *CostCenterSaveResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CostCenterSaveResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CostCenterSaveResponseBody) GoString() string {
	return s.String()
}

func (s *CostCenterSaveResponseBody) SetCode(v string) *CostCenterSaveResponseBody {
	s.Code = &v
	return s
}

func (s *CostCenterSaveResponseBody) SetMessage(v string) *CostCenterSaveResponseBody {
	s.Message = &v
	return s
}

func (s *CostCenterSaveResponseBody) SetModule(v *CostCenterSaveResponseBodyModule) *CostCenterSaveResponseBody {
	s.Module = v
	return s
}

func (s *CostCenterSaveResponseBody) SetRequestId(v string) *CostCenterSaveResponseBody {
	s.RequestId = &v
	return s
}

func (s *CostCenterSaveResponseBody) SetSuccess(v bool) *CostCenterSaveResponseBody {
	s.Success = &v
	return s
}

func (s *CostCenterSaveResponseBody) SetTraceId(v string) *CostCenterSaveResponseBody {
	s.TraceId = &v
	return s
}

type CostCenterSaveResponseBodyModule struct {
	// example:
	//
	// 17690
	Id *int64 `json:"id,omitempty" xml:"id,omitempty"`
}

func (s CostCenterSaveResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CostCenterSaveResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CostCenterSaveResponseBodyModule) SetId(v int64) *CostCenterSaveResponseBodyModule {
	s.Id = &v
	return s
}

type CostCenterSaveResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CostCenterSaveResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CostCenterSaveResponse) String() string {
	return tea.Prettify(s)
}

func (s CostCenterSaveResponse) GoString() string {
	return s.String()
}

func (s *CostCenterSaveResponse) SetHeaders(v map[string]*string) *CostCenterSaveResponse {
	s.Headers = v
	return s
}

func (s *CostCenterSaveResponse) SetStatusCode(v int32) *CostCenterSaveResponse {
	s.StatusCode = &v
	return s
}

func (s *CostCenterSaveResponse) SetBody(v *CostCenterSaveResponseBody) *CostCenterSaveResponse {
	s.Body = v
	return s
}

type CreateCustomRoleHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s CreateCustomRoleHeaders) String() string {
	return tea.Prettify(s)
}

func (s CreateCustomRoleHeaders) GoString() string {
	return s.String()
}

func (s *CreateCustomRoleHeaders) SetCommonHeaders(v map[string]*string) *CreateCustomRoleHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CreateCustomRoleHeaders) SetXAcsBtripCorpToken(v string) *CreateCustomRoleHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type CreateCustomRoleRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 123abc
	RoleId *string `json:"role_id,omitempty" xml:"role_id,omitempty"`
	// This parameter is required.
	RoleName *string `json:"role_name,omitempty" xml:"role_name,omitempty"`
}

func (s CreateCustomRoleRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateCustomRoleRequest) GoString() string {
	return s.String()
}

func (s *CreateCustomRoleRequest) SetRoleId(v string) *CreateCustomRoleRequest {
	s.RoleId = &v
	return s
}

func (s *CreateCustomRoleRequest) SetRoleName(v string) *CreateCustomRoleRequest {
	s.RoleName = &v
	return s
}

type CreateCustomRoleResponseBody struct {
	// example:
	//
	// SUCCESS
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 200
	HttpStatusCode *int32  `json:"httpStatusCode,omitempty" xml:"httpStatusCode,omitempty"`
	Message        *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CreateCustomRoleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateCustomRoleResponseBody) GoString() string {
	return s.String()
}

func (s *CreateCustomRoleResponseBody) SetCode(v string) *CreateCustomRoleResponseBody {
	s.Code = &v
	return s
}

func (s *CreateCustomRoleResponseBody) SetHttpStatusCode(v int32) *CreateCustomRoleResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *CreateCustomRoleResponseBody) SetMessage(v string) *CreateCustomRoleResponseBody {
	s.Message = &v
	return s
}

func (s *CreateCustomRoleResponseBody) SetRequestId(v string) *CreateCustomRoleResponseBody {
	s.RequestId = &v
	return s
}

func (s *CreateCustomRoleResponseBody) SetSuccess(v bool) *CreateCustomRoleResponseBody {
	s.Success = &v
	return s
}

func (s *CreateCustomRoleResponseBody) SetTraceId(v string) *CreateCustomRoleResponseBody {
	s.TraceId = &v
	return s
}

type CreateCustomRoleResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateCustomRoleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateCustomRoleResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateCustomRoleResponse) GoString() string {
	return s.String()
}

func (s *CreateCustomRoleResponse) SetHeaders(v map[string]*string) *CreateCustomRoleResponse {
	s.Headers = v
	return s
}

func (s *CreateCustomRoleResponse) SetStatusCode(v int32) *CreateCustomRoleResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateCustomRoleResponse) SetBody(v *CreateCustomRoleResponseBody) *CreateCustomRoleResponse {
	s.Body = v
	return s
}

type CreateSubCorpHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s CreateSubCorpHeaders) String() string {
	return tea.Prettify(s)
}

func (s CreateSubCorpHeaders) GoString() string {
	return s.String()
}

func (s *CreateSubCorpHeaders) SetCommonHeaders(v map[string]*string) *CreateSubCorpHeaders {
	s.CommonHeaders = v
	return s
}

func (s *CreateSubCorpHeaders) SetXAcsBtripCorpToken(v string) *CreateSubCorpHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type CreateSubCorpRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// corp123
	OuterCorpId *string `json:"outer_corp_id,omitempty" xml:"outer_corp_id,omitempty"`
	// This parameter is required.
	OuterCorpName *string `json:"outer_corp_name,omitempty" xml:"outer_corp_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s CreateSubCorpRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateSubCorpRequest) GoString() string {
	return s.String()
}

func (s *CreateSubCorpRequest) SetOuterCorpId(v string) *CreateSubCorpRequest {
	s.OuterCorpId = &v
	return s
}

func (s *CreateSubCorpRequest) SetOuterCorpName(v string) *CreateSubCorpRequest {
	s.OuterCorpName = &v
	return s
}

func (s *CreateSubCorpRequest) SetUserId(v string) *CreateSubCorpRequest {
	s.UserId = &v
	return s
}

type CreateSubCorpResponseBody struct {
	// example:
	//
	// 0
	Code    *string                          `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                          `json:"message,omitempty" xml:"message,omitempty"`
	Module  *CreateSubCorpResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s CreateSubCorpResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateSubCorpResponseBody) GoString() string {
	return s.String()
}

func (s *CreateSubCorpResponseBody) SetCode(v string) *CreateSubCorpResponseBody {
	s.Code = &v
	return s
}

func (s *CreateSubCorpResponseBody) SetMessage(v string) *CreateSubCorpResponseBody {
	s.Message = &v
	return s
}

func (s *CreateSubCorpResponseBody) SetModule(v *CreateSubCorpResponseBodyModule) *CreateSubCorpResponseBody {
	s.Module = v
	return s
}

func (s *CreateSubCorpResponseBody) SetRequestId(v string) *CreateSubCorpResponseBody {
	s.RequestId = &v
	return s
}

func (s *CreateSubCorpResponseBody) SetSuccess(v bool) *CreateSubCorpResponseBody {
	s.Success = &v
	return s
}

func (s *CreateSubCorpResponseBody) SetTraceId(v string) *CreateSubCorpResponseBody {
	s.TraceId = &v
	return s
}

type CreateSubCorpResponseBodyModule struct {
	// example:
	//
	// btrip123
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
}

func (s CreateSubCorpResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s CreateSubCorpResponseBodyModule) GoString() string {
	return s.String()
}

func (s *CreateSubCorpResponseBodyModule) SetSubCorpId(v string) *CreateSubCorpResponseBodyModule {
	s.SubCorpId = &v
	return s
}

type CreateSubCorpResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateSubCorpResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateSubCorpResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateSubCorpResponse) GoString() string {
	return s.String()
}

func (s *CreateSubCorpResponse) SetHeaders(v map[string]*string) *CreateSubCorpResponse {
	s.Headers = v
	return s
}

func (s *CreateSubCorpResponse) SetStatusCode(v int32) *CreateSubCorpResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateSubCorpResponse) SetBody(v *CreateSubCorpResponseBody) *CreateSubCorpResponse {
	s.Body = v
	return s
}

type DeleteCustomRoleHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s DeleteCustomRoleHeaders) String() string {
	return tea.Prettify(s)
}

func (s DeleteCustomRoleHeaders) GoString() string {
	return s.String()
}

func (s *DeleteCustomRoleHeaders) SetCommonHeaders(v map[string]*string) *DeleteCustomRoleHeaders {
	s.CommonHeaders = v
	return s
}

func (s *DeleteCustomRoleHeaders) SetXAcsBtripCorpToken(v string) *DeleteCustomRoleHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type DeleteCustomRoleRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	RoleId *string `json:"role_id,omitempty" xml:"role_id,omitempty"`
}

func (s DeleteCustomRoleRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteCustomRoleRequest) GoString() string {
	return s.String()
}

func (s *DeleteCustomRoleRequest) SetRoleId(v string) *DeleteCustomRoleRequest {
	s.RoleId = &v
	return s
}

type DeleteCustomRoleResponseBody struct {
	// example:
	//
	// SUCCESS
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 200
	HttpStatusCode *int32  `json:"httpStatusCode,omitempty" xml:"httpStatusCode,omitempty"`
	Message        *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s DeleteCustomRoleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteCustomRoleResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteCustomRoleResponseBody) SetCode(v string) *DeleteCustomRoleResponseBody {
	s.Code = &v
	return s
}

func (s *DeleteCustomRoleResponseBody) SetHttpStatusCode(v int32) *DeleteCustomRoleResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *DeleteCustomRoleResponseBody) SetMessage(v string) *DeleteCustomRoleResponseBody {
	s.Message = &v
	return s
}

func (s *DeleteCustomRoleResponseBody) SetRequestId(v string) *DeleteCustomRoleResponseBody {
	s.RequestId = &v
	return s
}

func (s *DeleteCustomRoleResponseBody) SetSuccess(v bool) *DeleteCustomRoleResponseBody {
	s.Success = &v
	return s
}

func (s *DeleteCustomRoleResponseBody) SetTraceId(v string) *DeleteCustomRoleResponseBody {
	s.TraceId = &v
	return s
}

type DeleteCustomRoleResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteCustomRoleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteCustomRoleResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteCustomRoleResponse) GoString() string {
	return s.String()
}

func (s *DeleteCustomRoleResponse) SetHeaders(v map[string]*string) *DeleteCustomRoleResponse {
	s.Headers = v
	return s
}

func (s *DeleteCustomRoleResponse) SetStatusCode(v int32) *DeleteCustomRoleResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteCustomRoleResponse) SetBody(v *DeleteCustomRoleResponseBody) *DeleteCustomRoleResponse {
	s.Body = v
	return s
}

type DeleteDepartmentHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s DeleteDepartmentHeaders) String() string {
	return tea.Prettify(s)
}

func (s DeleteDepartmentHeaders) GoString() string {
	return s.String()
}

func (s *DeleteDepartmentHeaders) SetCommonHeaders(v map[string]*string) *DeleteDepartmentHeaders {
	s.CommonHeaders = v
	return s
}

func (s *DeleteDepartmentHeaders) SetXAcsBtripCorpToken(v string) *DeleteDepartmentHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type DeleteDepartmentRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// dept123
	OutDeptId *string `json:"out_dept_id,omitempty" xml:"out_dept_id,omitempty"`
}

func (s DeleteDepartmentRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteDepartmentRequest) GoString() string {
	return s.String()
}

func (s *DeleteDepartmentRequest) SetOutDeptId(v string) *DeleteDepartmentRequest {
	s.OutDeptId = &v
	return s
}

type DeleteDepartmentResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210e847f16611516748613869de4f6
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s DeleteDepartmentResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteDepartmentResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteDepartmentResponseBody) SetCode(v string) *DeleteDepartmentResponseBody {
	s.Code = &v
	return s
}

func (s *DeleteDepartmentResponseBody) SetMessage(v string) *DeleteDepartmentResponseBody {
	s.Message = &v
	return s
}

func (s *DeleteDepartmentResponseBody) SetRequestId(v string) *DeleteDepartmentResponseBody {
	s.RequestId = &v
	return s
}

func (s *DeleteDepartmentResponseBody) SetSuccess(v bool) *DeleteDepartmentResponseBody {
	s.Success = &v
	return s
}

func (s *DeleteDepartmentResponseBody) SetTraceId(v string) *DeleteDepartmentResponseBody {
	s.TraceId = &v
	return s
}

type DeleteDepartmentResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteDepartmentResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteDepartmentResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteDepartmentResponse) GoString() string {
	return s.String()
}

func (s *DeleteDepartmentResponse) SetHeaders(v map[string]*string) *DeleteDepartmentResponse {
	s.Headers = v
	return s
}

func (s *DeleteDepartmentResponse) SetStatusCode(v int32) *DeleteDepartmentResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteDepartmentResponse) SetBody(v *DeleteDepartmentResponseBody) *DeleteDepartmentResponse {
	s.Body = v
	return s
}

type DeleteEmployeesFromCustomRoleHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s DeleteEmployeesFromCustomRoleHeaders) String() string {
	return tea.Prettify(s)
}

func (s DeleteEmployeesFromCustomRoleHeaders) GoString() string {
	return s.String()
}

func (s *DeleteEmployeesFromCustomRoleHeaders) SetCommonHeaders(v map[string]*string) *DeleteEmployeesFromCustomRoleHeaders {
	s.CommonHeaders = v
	return s
}

func (s *DeleteEmployeesFromCustomRoleHeaders) SetXAcsBtripCorpToken(v string) *DeleteEmployeesFromCustomRoleHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type DeleteEmployeesFromCustomRoleRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	RoleId *string `json:"role_id,omitempty" xml:"role_id,omitempty"`
	// This parameter is required.
	UserIdList []*string `json:"user_id_list,omitempty" xml:"user_id_list,omitempty" type:"Repeated"`
}

func (s DeleteEmployeesFromCustomRoleRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteEmployeesFromCustomRoleRequest) GoString() string {
	return s.String()
}

func (s *DeleteEmployeesFromCustomRoleRequest) SetRoleId(v string) *DeleteEmployeesFromCustomRoleRequest {
	s.RoleId = &v
	return s
}

func (s *DeleteEmployeesFromCustomRoleRequest) SetUserIdList(v []*string) *DeleteEmployeesFromCustomRoleRequest {
	s.UserIdList = v
	return s
}

type DeleteEmployeesFromCustomRoleShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	RoleId *string `json:"role_id,omitempty" xml:"role_id,omitempty"`
	// This parameter is required.
	UserIdListShrink *string `json:"user_id_list,omitempty" xml:"user_id_list,omitempty"`
}

func (s DeleteEmployeesFromCustomRoleShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteEmployeesFromCustomRoleShrinkRequest) GoString() string {
	return s.String()
}

func (s *DeleteEmployeesFromCustomRoleShrinkRequest) SetRoleId(v string) *DeleteEmployeesFromCustomRoleShrinkRequest {
	s.RoleId = &v
	return s
}

func (s *DeleteEmployeesFromCustomRoleShrinkRequest) SetUserIdListShrink(v string) *DeleteEmployeesFromCustomRoleShrinkRequest {
	s.UserIdListShrink = &v
	return s
}

type DeleteEmployeesFromCustomRoleResponseBody struct {
	// example:
	//
	// SUCCESS
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 200
	HttpStatusCode *int32  `json:"httpStatusCode,omitempty" xml:"httpStatusCode,omitempty"`
	Message        *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s DeleteEmployeesFromCustomRoleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteEmployeesFromCustomRoleResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteEmployeesFromCustomRoleResponseBody) SetCode(v string) *DeleteEmployeesFromCustomRoleResponseBody {
	s.Code = &v
	return s
}

func (s *DeleteEmployeesFromCustomRoleResponseBody) SetHttpStatusCode(v int32) *DeleteEmployeesFromCustomRoleResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *DeleteEmployeesFromCustomRoleResponseBody) SetMessage(v string) *DeleteEmployeesFromCustomRoleResponseBody {
	s.Message = &v
	return s
}

func (s *DeleteEmployeesFromCustomRoleResponseBody) SetRequestId(v string) *DeleteEmployeesFromCustomRoleResponseBody {
	s.RequestId = &v
	return s
}

func (s *DeleteEmployeesFromCustomRoleResponseBody) SetSuccess(v bool) *DeleteEmployeesFromCustomRoleResponseBody {
	s.Success = &v
	return s
}

func (s *DeleteEmployeesFromCustomRoleResponseBody) SetTraceId(v string) *DeleteEmployeesFromCustomRoleResponseBody {
	s.TraceId = &v
	return s
}

type DeleteEmployeesFromCustomRoleResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteEmployeesFromCustomRoleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteEmployeesFromCustomRoleResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteEmployeesFromCustomRoleResponse) GoString() string {
	return s.String()
}

func (s *DeleteEmployeesFromCustomRoleResponse) SetHeaders(v map[string]*string) *DeleteEmployeesFromCustomRoleResponse {
	s.Headers = v
	return s
}

func (s *DeleteEmployeesFromCustomRoleResponse) SetStatusCode(v int32) *DeleteEmployeesFromCustomRoleResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteEmployeesFromCustomRoleResponse) SetBody(v *DeleteEmployeesFromCustomRoleResponseBody) *DeleteEmployeesFromCustomRoleResponse {
	s.Body = v
	return s
}

type DeleteInvoiceEntityHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s DeleteInvoiceEntityHeaders) String() string {
	return tea.Prettify(s)
}

func (s DeleteInvoiceEntityHeaders) GoString() string {
	return s.String()
}

func (s *DeleteInvoiceEntityHeaders) SetCommonHeaders(v map[string]*string) *DeleteInvoiceEntityHeaders {
	s.CommonHeaders = v
	return s
}

func (s *DeleteInvoiceEntityHeaders) SetXAcsBtripCorpToken(v string) *DeleteInvoiceEntityHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type DeleteInvoiceEntityRequest struct {
	// example:
	//
	// false
	DelAll   *bool                                 `json:"del_all,omitempty" xml:"del_all,omitempty"`
	Entities []*DeleteInvoiceEntityRequestEntities `json:"entities,omitempty" xml:"entities,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s DeleteInvoiceEntityRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteInvoiceEntityRequest) GoString() string {
	return s.String()
}

func (s *DeleteInvoiceEntityRequest) SetDelAll(v bool) *DeleteInvoiceEntityRequest {
	s.DelAll = &v
	return s
}

func (s *DeleteInvoiceEntityRequest) SetEntities(v []*DeleteInvoiceEntityRequestEntities) *DeleteInvoiceEntityRequest {
	s.Entities = v
	return s
}

func (s *DeleteInvoiceEntityRequest) SetThirdPartId(v string) *DeleteInvoiceEntityRequest {
	s.ThirdPartId = &v
	return s
}

type DeleteInvoiceEntityRequestEntities struct {
	// example:
	//
	// 12345
	EntityId *string `json:"entity_id,omitempty" xml:"entity_id,omitempty"`
	// example:
	//
	// 1
	EntityType *string `json:"entity_type,omitempty" xml:"entity_type,omitempty"`
}

func (s DeleteInvoiceEntityRequestEntities) String() string {
	return tea.Prettify(s)
}

func (s DeleteInvoiceEntityRequestEntities) GoString() string {
	return s.String()
}

func (s *DeleteInvoiceEntityRequestEntities) SetEntityId(v string) *DeleteInvoiceEntityRequestEntities {
	s.EntityId = &v
	return s
}

func (s *DeleteInvoiceEntityRequestEntities) SetEntityType(v string) *DeleteInvoiceEntityRequestEntities {
	s.EntityType = &v
	return s
}

type DeleteInvoiceEntityShrinkRequest struct {
	// example:
	//
	// false
	DelAll         *bool   `json:"del_all,omitempty" xml:"del_all,omitempty"`
	EntitiesShrink *string `json:"entities,omitempty" xml:"entities,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s DeleteInvoiceEntityShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteInvoiceEntityShrinkRequest) GoString() string {
	return s.String()
}

func (s *DeleteInvoiceEntityShrinkRequest) SetDelAll(v bool) *DeleteInvoiceEntityShrinkRequest {
	s.DelAll = &v
	return s
}

func (s *DeleteInvoiceEntityShrinkRequest) SetEntitiesShrink(v string) *DeleteInvoiceEntityShrinkRequest {
	s.EntitiesShrink = &v
	return s
}

func (s *DeleteInvoiceEntityShrinkRequest) SetThirdPartId(v string) *DeleteInvoiceEntityShrinkRequest {
	s.ThirdPartId = &v
	return s
}

type DeleteInvoiceEntityResponseBody struct {
	// example:
	//
	// 200
	Code    *string                                `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                `json:"message,omitempty" xml:"message,omitempty"`
	Module  *DeleteInvoiceEntityResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s DeleteInvoiceEntityResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteInvoiceEntityResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteInvoiceEntityResponseBody) SetCode(v string) *DeleteInvoiceEntityResponseBody {
	s.Code = &v
	return s
}

func (s *DeleteInvoiceEntityResponseBody) SetMessage(v string) *DeleteInvoiceEntityResponseBody {
	s.Message = &v
	return s
}

func (s *DeleteInvoiceEntityResponseBody) SetModule(v *DeleteInvoiceEntityResponseBodyModule) *DeleteInvoiceEntityResponseBody {
	s.Module = v
	return s
}

func (s *DeleteInvoiceEntityResponseBody) SetRequestId(v string) *DeleteInvoiceEntityResponseBody {
	s.RequestId = &v
	return s
}

func (s *DeleteInvoiceEntityResponseBody) SetSuccess(v bool) *DeleteInvoiceEntityResponseBody {
	s.Success = &v
	return s
}

func (s *DeleteInvoiceEntityResponseBody) SetTraceId(v string) *DeleteInvoiceEntityResponseBody {
	s.TraceId = &v
	return s
}

type DeleteInvoiceEntityResponseBodyModule struct {
	// example:
	//
	// 1
	RemoveNum *int32 `json:"remove_num,omitempty" xml:"remove_num,omitempty"`
	// example:
	//
	// 2
	SelectedUserNum *int32 `json:"selected_user_num,omitempty" xml:"selected_user_num,omitempty"`
}

func (s DeleteInvoiceEntityResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s DeleteInvoiceEntityResponseBodyModule) GoString() string {
	return s.String()
}

func (s *DeleteInvoiceEntityResponseBodyModule) SetRemoveNum(v int32) *DeleteInvoiceEntityResponseBodyModule {
	s.RemoveNum = &v
	return s
}

func (s *DeleteInvoiceEntityResponseBodyModule) SetSelectedUserNum(v int32) *DeleteInvoiceEntityResponseBodyModule {
	s.SelectedUserNum = &v
	return s
}

type DeleteInvoiceEntityResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteInvoiceEntityResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteInvoiceEntityResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteInvoiceEntityResponse) GoString() string {
	return s.String()
}

func (s *DeleteInvoiceEntityResponse) SetHeaders(v map[string]*string) *DeleteInvoiceEntityResponse {
	s.Headers = v
	return s
}

func (s *DeleteInvoiceEntityResponse) SetStatusCode(v int32) *DeleteInvoiceEntityResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteInvoiceEntityResponse) SetBody(v *DeleteInvoiceEntityResponseBody) *DeleteInvoiceEntityResponse {
	s.Body = v
	return s
}

type DepartmentSaveHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s DepartmentSaveHeaders) String() string {
	return tea.Prettify(s)
}

func (s DepartmentSaveHeaders) GoString() string {
	return s.String()
}

func (s *DepartmentSaveHeaders) SetCommonHeaders(v map[string]*string) *DepartmentSaveHeaders {
	s.CommonHeaders = v
	return s
}

func (s *DepartmentSaveHeaders) SetXAcsBtripSoCorpToken(v string) *DepartmentSaveHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type DepartmentSaveRequest struct {
	DepartList []*DepartmentSaveRequestDepartList `json:"depart_list,omitempty" xml:"depart_list,omitempty" type:"Repeated"`
}

func (s DepartmentSaveRequest) String() string {
	return tea.Prettify(s)
}

func (s DepartmentSaveRequest) GoString() string {
	return s.String()
}

func (s *DepartmentSaveRequest) SetDepartList(v []*DepartmentSaveRequestDepartList) *DepartmentSaveRequest {
	s.DepartList = v
	return s
}

type DepartmentSaveRequestDepartList struct {
	// example:
	//
	// 10
	DepartId *int64 `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	// This parameter is required.
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// example:
	//
	// 10
	DepartPid *int64 `json:"depart_pid,omitempty" xml:"depart_pid,omitempty"`
	// example:
	//
	// 001|002|003
	ManagerIds *string `json:"manager_ids,omitempty" xml:"manager_ids,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// testdepartid001
	ThirdDepartId *string `json:"third_depart_id,omitempty" xml:"third_depart_id,omitempty"`
	// example:
	//
	// testdepartpid001
	ThirdDepartPid *string `json:"third_depart_pid,omitempty" xml:"third_depart_pid,omitempty"`
}

func (s DepartmentSaveRequestDepartList) String() string {
	return tea.Prettify(s)
}

func (s DepartmentSaveRequestDepartList) GoString() string {
	return s.String()
}

func (s *DepartmentSaveRequestDepartList) SetDepartId(v int64) *DepartmentSaveRequestDepartList {
	s.DepartId = &v
	return s
}

func (s *DepartmentSaveRequestDepartList) SetDepartName(v string) *DepartmentSaveRequestDepartList {
	s.DepartName = &v
	return s
}

func (s *DepartmentSaveRequestDepartList) SetDepartPid(v int64) *DepartmentSaveRequestDepartList {
	s.DepartPid = &v
	return s
}

func (s *DepartmentSaveRequestDepartList) SetManagerIds(v string) *DepartmentSaveRequestDepartList {
	s.ManagerIds = &v
	return s
}

func (s *DepartmentSaveRequestDepartList) SetStatus(v int32) *DepartmentSaveRequestDepartList {
	s.Status = &v
	return s
}

func (s *DepartmentSaveRequestDepartList) SetThirdDepartId(v string) *DepartmentSaveRequestDepartList {
	s.ThirdDepartId = &v
	return s
}

func (s *DepartmentSaveRequestDepartList) SetThirdDepartPid(v string) *DepartmentSaveRequestDepartList {
	s.ThirdDepartPid = &v
	return s
}

type DepartmentSaveShrinkRequest struct {
	DepartListShrink *string `json:"depart_list,omitempty" xml:"depart_list,omitempty"`
}

func (s DepartmentSaveShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s DepartmentSaveShrinkRequest) GoString() string {
	return s.String()
}

func (s *DepartmentSaveShrinkRequest) SetDepartListShrink(v string) *DepartmentSaveShrinkRequest {
	s.DepartListShrink = &v
	return s
}

type DepartmentSaveResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	Module  *string `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210e847516614936690356047dde07
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s DepartmentSaveResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DepartmentSaveResponseBody) GoString() string {
	return s.String()
}

func (s *DepartmentSaveResponseBody) SetCode(v string) *DepartmentSaveResponseBody {
	s.Code = &v
	return s
}

func (s *DepartmentSaveResponseBody) SetMessage(v string) *DepartmentSaveResponseBody {
	s.Message = &v
	return s
}

func (s *DepartmentSaveResponseBody) SetModule(v string) *DepartmentSaveResponseBody {
	s.Module = &v
	return s
}

func (s *DepartmentSaveResponseBody) SetRequestId(v string) *DepartmentSaveResponseBody {
	s.RequestId = &v
	return s
}

func (s *DepartmentSaveResponseBody) SetSuccess(v bool) *DepartmentSaveResponseBody {
	s.Success = &v
	return s
}

func (s *DepartmentSaveResponseBody) SetTraceId(v string) *DepartmentSaveResponseBody {
	s.TraceId = &v
	return s
}

type DepartmentSaveResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DepartmentSaveResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DepartmentSaveResponse) String() string {
	return tea.Prettify(s)
}

func (s DepartmentSaveResponse) GoString() string {
	return s.String()
}

func (s *DepartmentSaveResponse) SetHeaders(v map[string]*string) *DepartmentSaveResponse {
	s.Headers = v
	return s
}

func (s *DepartmentSaveResponse) SetStatusCode(v int32) *DepartmentSaveResponse {
	s.StatusCode = &v
	return s
}

func (s *DepartmentSaveResponse) SetBody(v *DepartmentSaveResponseBody) *DepartmentSaveResponse {
	s.Body = v
	return s
}

type EntityAddHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s EntityAddHeaders) String() string {
	return tea.Prettify(s)
}

func (s EntityAddHeaders) GoString() string {
	return s.String()
}

func (s *EntityAddHeaders) SetCommonHeaders(v map[string]*string) *EntityAddHeaders {
	s.CommonHeaders = v
	return s
}

func (s *EntityAddHeaders) SetXAcsBtripSoCorpToken(v string) *EntityAddHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type EntityAddRequest struct {
	EntityDOList []*EntityAddRequestEntityDOList `json:"entity_d_o_list,omitempty" xml:"entity_d_o_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
}

func (s EntityAddRequest) String() string {
	return tea.Prettify(s)
}

func (s EntityAddRequest) GoString() string {
	return s.String()
}

func (s *EntityAddRequest) SetEntityDOList(v []*EntityAddRequestEntityDOList) *EntityAddRequest {
	s.EntityDOList = v
	return s
}

func (s *EntityAddRequest) SetThirdpartId(v string) *EntityAddRequest {
	s.ThirdpartId = &v
	return s
}

type EntityAddRequestEntityDOList struct {
	// example:
	//
	// 12345
	EntityId *string `json:"entity_id,omitempty" xml:"entity_id,omitempty"`
	// example:
	//
	// 1
	EntityType *string `json:"entity_type,omitempty" xml:"entity_type,omitempty"`
}

func (s EntityAddRequestEntityDOList) String() string {
	return tea.Prettify(s)
}

func (s EntityAddRequestEntityDOList) GoString() string {
	return s.String()
}

func (s *EntityAddRequestEntityDOList) SetEntityId(v string) *EntityAddRequestEntityDOList {
	s.EntityId = &v
	return s
}

func (s *EntityAddRequestEntityDOList) SetEntityType(v string) *EntityAddRequestEntityDOList {
	s.EntityType = &v
	return s
}

type EntityAddShrinkRequest struct {
	EntityDOListShrink *string `json:"entity_d_o_list,omitempty" xml:"entity_d_o_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
}

func (s EntityAddShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s EntityAddShrinkRequest) GoString() string {
	return s.String()
}

func (s *EntityAddShrinkRequest) SetEntityDOListShrink(v string) *EntityAddShrinkRequest {
	s.EntityDOListShrink = &v
	return s
}

func (s *EntityAddShrinkRequest) SetThirdpartId(v string) *EntityAddShrinkRequest {
	s.ThirdpartId = &v
	return s
}

type EntityAddResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                      `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                      `json:"message,omitempty" xml:"message,omitempty"`
	Module  *EntityAddResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s EntityAddResponseBody) String() string {
	return tea.Prettify(s)
}

func (s EntityAddResponseBody) GoString() string {
	return s.String()
}

func (s *EntityAddResponseBody) SetCode(v string) *EntityAddResponseBody {
	s.Code = &v
	return s
}

func (s *EntityAddResponseBody) SetMessage(v string) *EntityAddResponseBody {
	s.Message = &v
	return s
}

func (s *EntityAddResponseBody) SetModule(v *EntityAddResponseBodyModule) *EntityAddResponseBody {
	s.Module = v
	return s
}

func (s *EntityAddResponseBody) SetRequestId(v string) *EntityAddResponseBody {
	s.RequestId = &v
	return s
}

func (s *EntityAddResponseBody) SetSuccess(v bool) *EntityAddResponseBody {
	s.Success = &v
	return s
}

func (s *EntityAddResponseBody) SetTraceId(v string) *EntityAddResponseBody {
	s.TraceId = &v
	return s
}

type EntityAddResponseBodyModule struct {
	// example:
	//
	// 1
	AddNum *int32 `json:"add_num,omitempty" xml:"add_num,omitempty"`
	// example:
	//
	// 2
	SelectedUserNum *int32 `json:"selected_user_num,omitempty" xml:"selected_user_num,omitempty"`
}

func (s EntityAddResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s EntityAddResponseBodyModule) GoString() string {
	return s.String()
}

func (s *EntityAddResponseBodyModule) SetAddNum(v int32) *EntityAddResponseBodyModule {
	s.AddNum = &v
	return s
}

func (s *EntityAddResponseBodyModule) SetSelectedUserNum(v int32) *EntityAddResponseBodyModule {
	s.SelectedUserNum = &v
	return s
}

type EntityAddResponse struct {
	Headers    map[string]*string     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *EntityAddResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s EntityAddResponse) String() string {
	return tea.Prettify(s)
}

func (s EntityAddResponse) GoString() string {
	return s.String()
}

func (s *EntityAddResponse) SetHeaders(v map[string]*string) *EntityAddResponse {
	s.Headers = v
	return s
}

func (s *EntityAddResponse) SetStatusCode(v int32) *EntityAddResponse {
	s.StatusCode = &v
	return s
}

func (s *EntityAddResponse) SetBody(v *EntityAddResponseBody) *EntityAddResponse {
	s.Body = v
	return s
}

type EntityDeleteHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s EntityDeleteHeaders) String() string {
	return tea.Prettify(s)
}

func (s EntityDeleteHeaders) GoString() string {
	return s.String()
}

func (s *EntityDeleteHeaders) SetCommonHeaders(v map[string]*string) *EntityDeleteHeaders {
	s.CommonHeaders = v
	return s
}

func (s *EntityDeleteHeaders) SetXAcsBtripSoCorpToken(v string) *EntityDeleteHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type EntityDeleteRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// true
	DelAll       *bool                              `json:"del_all,omitempty" xml:"del_all,omitempty"`
	EntityDOList []*EntityDeleteRequestEntityDOList `json:"entity_d_o_list,omitempty" xml:"entity_d_o_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 12345
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
}

func (s EntityDeleteRequest) String() string {
	return tea.Prettify(s)
}

func (s EntityDeleteRequest) GoString() string {
	return s.String()
}

func (s *EntityDeleteRequest) SetDelAll(v bool) *EntityDeleteRequest {
	s.DelAll = &v
	return s
}

func (s *EntityDeleteRequest) SetEntityDOList(v []*EntityDeleteRequestEntityDOList) *EntityDeleteRequest {
	s.EntityDOList = v
	return s
}

func (s *EntityDeleteRequest) SetThirdpartId(v string) *EntityDeleteRequest {
	s.ThirdpartId = &v
	return s
}

type EntityDeleteRequestEntityDOList struct {
	// This parameter is required.
	//
	// example:
	//
	// 123
	EntityId *string `json:"entity_id,omitempty" xml:"entity_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	EntityType *string `json:"entity_type,omitempty" xml:"entity_type,omitempty"`
}

func (s EntityDeleteRequestEntityDOList) String() string {
	return tea.Prettify(s)
}

func (s EntityDeleteRequestEntityDOList) GoString() string {
	return s.String()
}

func (s *EntityDeleteRequestEntityDOList) SetEntityId(v string) *EntityDeleteRequestEntityDOList {
	s.EntityId = &v
	return s
}

func (s *EntityDeleteRequestEntityDOList) SetEntityType(v string) *EntityDeleteRequestEntityDOList {
	s.EntityType = &v
	return s
}

type EntityDeleteShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// true
	DelAll             *bool   `json:"del_all,omitempty" xml:"del_all,omitempty"`
	EntityDOListShrink *string `json:"entity_d_o_list,omitempty" xml:"entity_d_o_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12345
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
}

func (s EntityDeleteShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s EntityDeleteShrinkRequest) GoString() string {
	return s.String()
}

func (s *EntityDeleteShrinkRequest) SetDelAll(v bool) *EntityDeleteShrinkRequest {
	s.DelAll = &v
	return s
}

func (s *EntityDeleteShrinkRequest) SetEntityDOListShrink(v string) *EntityDeleteShrinkRequest {
	s.EntityDOListShrink = &v
	return s
}

func (s *EntityDeleteShrinkRequest) SetThirdpartId(v string) *EntityDeleteShrinkRequest {
	s.ThirdpartId = &v
	return s
}

type EntityDeleteResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                         `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                         `json:"message,omitempty" xml:"message,omitempty"`
	Module  *EntityDeleteResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// true
	MorePage *bool `json:"more_page,omitempty" xml:"more_page,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s EntityDeleteResponseBody) String() string {
	return tea.Prettify(s)
}

func (s EntityDeleteResponseBody) GoString() string {
	return s.String()
}

func (s *EntityDeleteResponseBody) SetCode(v string) *EntityDeleteResponseBody {
	s.Code = &v
	return s
}

func (s *EntityDeleteResponseBody) SetMessage(v string) *EntityDeleteResponseBody {
	s.Message = &v
	return s
}

func (s *EntityDeleteResponseBody) SetModule(v *EntityDeleteResponseBodyModule) *EntityDeleteResponseBody {
	s.Module = v
	return s
}

func (s *EntityDeleteResponseBody) SetMorePage(v bool) *EntityDeleteResponseBody {
	s.MorePage = &v
	return s
}

func (s *EntityDeleteResponseBody) SetRequestId(v string) *EntityDeleteResponseBody {
	s.RequestId = &v
	return s
}

func (s *EntityDeleteResponseBody) SetSuccess(v bool) *EntityDeleteResponseBody {
	s.Success = &v
	return s
}

func (s *EntityDeleteResponseBody) SetTraceId(v string) *EntityDeleteResponseBody {
	s.TraceId = &v
	return s
}

type EntityDeleteResponseBodyModule struct {
	// example:
	//
	// 1
	RemoveNum *int32 `json:"remove_num,omitempty" xml:"remove_num,omitempty"`
	// example:
	//
	// 1
	SelectedUserNum *int32 `json:"selected_user_num,omitempty" xml:"selected_user_num,omitempty"`
}

func (s EntityDeleteResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s EntityDeleteResponseBodyModule) GoString() string {
	return s.String()
}

func (s *EntityDeleteResponseBodyModule) SetRemoveNum(v int32) *EntityDeleteResponseBodyModule {
	s.RemoveNum = &v
	return s
}

func (s *EntityDeleteResponseBodyModule) SetSelectedUserNum(v int32) *EntityDeleteResponseBodyModule {
	s.SelectedUserNum = &v
	return s
}

type EntityDeleteResponse struct {
	Headers    map[string]*string        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *EntityDeleteResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s EntityDeleteResponse) String() string {
	return tea.Prettify(s)
}

func (s EntityDeleteResponse) GoString() string {
	return s.String()
}

func (s *EntityDeleteResponse) SetHeaders(v map[string]*string) *EntityDeleteResponse {
	s.Headers = v
	return s
}

func (s *EntityDeleteResponse) SetStatusCode(v int32) *EntityDeleteResponse {
	s.StatusCode = &v
	return s
}

func (s *EntityDeleteResponse) SetBody(v *EntityDeleteResponseBody) *EntityDeleteResponse {
	s.Body = v
	return s
}

type EntitySetHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s EntitySetHeaders) String() string {
	return tea.Prettify(s)
}

func (s EntitySetHeaders) GoString() string {
	return s.String()
}

func (s *EntitySetHeaders) SetCommonHeaders(v map[string]*string) *EntitySetHeaders {
	s.CommonHeaders = v
	return s
}

func (s *EntitySetHeaders) SetXAcsBtripSoCorpToken(v string) *EntitySetHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type EntitySetRequest struct {
	EntityDOList []*EntitySetRequestEntityDOList `json:"entity_d_o_list,omitempty" xml:"entity_d_o_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
}

func (s EntitySetRequest) String() string {
	return tea.Prettify(s)
}

func (s EntitySetRequest) GoString() string {
	return s.String()
}

func (s *EntitySetRequest) SetEntityDOList(v []*EntitySetRequestEntityDOList) *EntitySetRequest {
	s.EntityDOList = v
	return s
}

func (s *EntitySetRequest) SetThirdpartId(v string) *EntitySetRequest {
	s.ThirdpartId = &v
	return s
}

type EntitySetRequestEntityDOList struct {
	// This parameter is required.
	//
	// example:
	//
	// 123
	EntityId *string `json:"entity_id,omitempty" xml:"entity_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	EntityType *string `json:"entity_type,omitempty" xml:"entity_type,omitempty"`
}

func (s EntitySetRequestEntityDOList) String() string {
	return tea.Prettify(s)
}

func (s EntitySetRequestEntityDOList) GoString() string {
	return s.String()
}

func (s *EntitySetRequestEntityDOList) SetEntityId(v string) *EntitySetRequestEntityDOList {
	s.EntityId = &v
	return s
}

func (s *EntitySetRequestEntityDOList) SetEntityType(v string) *EntitySetRequestEntityDOList {
	s.EntityType = &v
	return s
}

type EntitySetShrinkRequest struct {
	EntityDOListShrink *string `json:"entity_d_o_list,omitempty" xml:"entity_d_o_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdpartId *string `json:"thirdpart_id,omitempty" xml:"thirdpart_id,omitempty"`
}

func (s EntitySetShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s EntitySetShrinkRequest) GoString() string {
	return s.String()
}

func (s *EntitySetShrinkRequest) SetEntityDOListShrink(v string) *EntitySetShrinkRequest {
	s.EntityDOListShrink = &v
	return s
}

func (s *EntitySetShrinkRequest) SetThirdpartId(v string) *EntitySetShrinkRequest {
	s.ThirdpartId = &v
	return s
}

type EntitySetResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                      `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                      `json:"message,omitempty" xml:"message,omitempty"`
	Module  *EntitySetResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// true
	MorePage *bool `json:"more_page,omitempty" xml:"more_page,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s EntitySetResponseBody) String() string {
	return tea.Prettify(s)
}

func (s EntitySetResponseBody) GoString() string {
	return s.String()
}

func (s *EntitySetResponseBody) SetCode(v string) *EntitySetResponseBody {
	s.Code = &v
	return s
}

func (s *EntitySetResponseBody) SetMessage(v string) *EntitySetResponseBody {
	s.Message = &v
	return s
}

func (s *EntitySetResponseBody) SetModule(v *EntitySetResponseBodyModule) *EntitySetResponseBody {
	s.Module = v
	return s
}

func (s *EntitySetResponseBody) SetMorePage(v bool) *EntitySetResponseBody {
	s.MorePage = &v
	return s
}

func (s *EntitySetResponseBody) SetRequestId(v string) *EntitySetResponseBody {
	s.RequestId = &v
	return s
}

func (s *EntitySetResponseBody) SetSuccess(v bool) *EntitySetResponseBody {
	s.Success = &v
	return s
}

func (s *EntitySetResponseBody) SetTraceId(v string) *EntitySetResponseBody {
	s.TraceId = &v
	return s
}

type EntitySetResponseBodyModule struct {
	// example:
	//
	// 1
	AddNum *int32 `json:"add_num,omitempty" xml:"add_num,omitempty"`
	// example:
	//
	// 1
	RemoveNum *int32 `json:"remove_num,omitempty" xml:"remove_num,omitempty"`
	// example:
	//
	// 1
	SelectedUserNum *int32 `json:"selected_user_num,omitempty" xml:"selected_user_num,omitempty"`
}

func (s EntitySetResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s EntitySetResponseBodyModule) GoString() string {
	return s.String()
}

func (s *EntitySetResponseBodyModule) SetAddNum(v int32) *EntitySetResponseBodyModule {
	s.AddNum = &v
	return s
}

func (s *EntitySetResponseBodyModule) SetRemoveNum(v int32) *EntitySetResponseBodyModule {
	s.RemoveNum = &v
	return s
}

func (s *EntitySetResponseBodyModule) SetSelectedUserNum(v int32) *EntitySetResponseBodyModule {
	s.SelectedUserNum = &v
	return s
}

type EntitySetResponse struct {
	Headers    map[string]*string     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *EntitySetResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s EntitySetResponse) String() string {
	return tea.Prettify(s)
}

func (s EntitySetResponse) GoString() string {
	return s.String()
}

func (s *EntitySetResponse) SetHeaders(v map[string]*string) *EntitySetResponse {
	s.Headers = v
	return s
}

func (s *EntitySetResponse) SetStatusCode(v int32) *EntitySetResponse {
	s.StatusCode = &v
	return s
}

func (s *EntitySetResponse) SetBody(v *EntitySetResponseBody) *EntitySetResponse {
	s.Body = v
	return s
}

type EstimatedPriceQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s EstimatedPriceQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s EstimatedPriceQueryHeaders) GoString() string {
	return s.String()
}

func (s *EstimatedPriceQueryHeaders) SetCommonHeaders(v map[string]*string) *EstimatedPriceQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *EstimatedPriceQueryHeaders) SetXAcsBtripSoCorpToken(v string) *EstimatedPriceQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type EstimatedPriceQueryRequest struct {
	// This parameter is required.
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// flight
	Category *string `json:"category,omitempty" xml:"category,omitempty"`
	// This parameter is required.
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1670601600000
	EndTime *int64 `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 1245
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1670428800000
	StartTime *int64 `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// btrip123
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12345678910
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s EstimatedPriceQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s EstimatedPriceQueryRequest) GoString() string {
	return s.String()
}

func (s *EstimatedPriceQueryRequest) SetArrCity(v string) *EstimatedPriceQueryRequest {
	s.ArrCity = &v
	return s
}

func (s *EstimatedPriceQueryRequest) SetCategory(v string) *EstimatedPriceQueryRequest {
	s.Category = &v
	return s
}

func (s *EstimatedPriceQueryRequest) SetDepCity(v string) *EstimatedPriceQueryRequest {
	s.DepCity = &v
	return s
}

func (s *EstimatedPriceQueryRequest) SetEndTime(v int64) *EstimatedPriceQueryRequest {
	s.EndTime = &v
	return s
}

func (s *EstimatedPriceQueryRequest) SetItineraryId(v string) *EstimatedPriceQueryRequest {
	s.ItineraryId = &v
	return s
}

func (s *EstimatedPriceQueryRequest) SetStartTime(v int64) *EstimatedPriceQueryRequest {
	s.StartTime = &v
	return s
}

func (s *EstimatedPriceQueryRequest) SetSubCorpId(v string) *EstimatedPriceQueryRequest {
	s.SubCorpId = &v
	return s
}

func (s *EstimatedPriceQueryRequest) SetUserId(v string) *EstimatedPriceQueryRequest {
	s.UserId = &v
	return s
}

type EstimatedPriceQueryResponseBody struct {
	// example:
	//
	// 0
	Code *int32 `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// demo
	Message *string                                `json:"message,omitempty" xml:"message,omitempty"`
	Module  *EstimatedPriceQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s EstimatedPriceQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s EstimatedPriceQueryResponseBody) GoString() string {
	return s.String()
}

func (s *EstimatedPriceQueryResponseBody) SetCode(v int32) *EstimatedPriceQueryResponseBody {
	s.Code = &v
	return s
}

func (s *EstimatedPriceQueryResponseBody) SetMessage(v string) *EstimatedPriceQueryResponseBody {
	s.Message = &v
	return s
}

func (s *EstimatedPriceQueryResponseBody) SetModule(v *EstimatedPriceQueryResponseBodyModule) *EstimatedPriceQueryResponseBody {
	s.Module = v
	return s
}

func (s *EstimatedPriceQueryResponseBody) SetRequestId(v string) *EstimatedPriceQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *EstimatedPriceQueryResponseBody) SetSuccess(v bool) *EstimatedPriceQueryResponseBody {
	s.Success = &v
	return s
}

func (s *EstimatedPriceQueryResponseBody) SetTraceId(v string) *EstimatedPriceQueryResponseBody {
	s.TraceId = &v
	return s
}

type EstimatedPriceQueryResponseBodyModule struct {
	HotelFeeDetail []*EstimatedPriceQueryResponseBodyModuleHotelFeeDetail `json:"hotel_fee_detail,omitempty" xml:"hotel_fee_detail,omitempty" type:"Repeated"`
	// 酒店费用总额，单位为元
	//
	// example:
	//
	// 500
	TotalHotelFee *int64                                           `json:"total_hotel_fee,omitempty" xml:"total_hotel_fee,omitempty"`
	TrafficFee    *EstimatedPriceQueryResponseBodyModuleTrafficFee `json:"traffic_fee,omitempty" xml:"traffic_fee,omitempty" type:"Struct"`
}

func (s EstimatedPriceQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s EstimatedPriceQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *EstimatedPriceQueryResponseBodyModule) SetHotelFeeDetail(v []*EstimatedPriceQueryResponseBodyModuleHotelFeeDetail) *EstimatedPriceQueryResponseBodyModule {
	s.HotelFeeDetail = v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModule) SetTotalHotelFee(v int64) *EstimatedPriceQueryResponseBodyModule {
	s.TotalHotelFee = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModule) SetTrafficFee(v *EstimatedPriceQueryResponseBodyModuleTrafficFee) *EstimatedPriceQueryResponseBodyModule {
	s.TrafficFee = v
	return s
}

type EstimatedPriceQueryResponseBodyModuleHotelFeeDetail struct {
	City *string `json:"city,omitempty" xml:"city,omitempty"`
	// example:
	//
	// 6
	Criterion *int64 `json:"criterion,omitempty" xml:"criterion,omitempty"`
	// example:
	//
	// 1245
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	// example:
	//
	// 6
	Total *int64 `json:"total,omitempty" xml:"total,omitempty"`
	// example:
	//
	// 1
	TripDays *int32 `json:"trip_days,omitempty" xml:"trip_days,omitempty"`
}

func (s EstimatedPriceQueryResponseBodyModuleHotelFeeDetail) String() string {
	return tea.Prettify(s)
}

func (s EstimatedPriceQueryResponseBodyModuleHotelFeeDetail) GoString() string {
	return s.String()
}

func (s *EstimatedPriceQueryResponseBodyModuleHotelFeeDetail) SetCity(v string) *EstimatedPriceQueryResponseBodyModuleHotelFeeDetail {
	s.City = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleHotelFeeDetail) SetCriterion(v int64) *EstimatedPriceQueryResponseBodyModuleHotelFeeDetail {
	s.Criterion = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleHotelFeeDetail) SetItineraryId(v string) *EstimatedPriceQueryResponseBodyModuleHotelFeeDetail {
	s.ItineraryId = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleHotelFeeDetail) SetTotal(v int64) *EstimatedPriceQueryResponseBodyModuleHotelFeeDetail {
	s.Total = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleHotelFeeDetail) SetTripDays(v int32) *EstimatedPriceQueryResponseBodyModuleHotelFeeDetail {
	s.TripDays = &v
	return s
}

type EstimatedPriceQueryResponseBodyModuleTrafficFee struct {
	BtripRoutes []*EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes `json:"btrip_routes,omitempty" xml:"btrip_routes,omitempty" type:"Repeated"`
	// example:
	//
	// demo
	ErrMsg *string `json:"err_msg,omitempty" xml:"err_msg,omitempty"`
	// example:
	//
	// 265000
	MaxFee *int64 `json:"max_fee,omitempty" xml:"max_fee,omitempty"`
	// example:
	//
	// 30100
	MinFee *int64 `json:"min_fee,omitempty" xml:"min_fee,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
}

func (s EstimatedPriceQueryResponseBodyModuleTrafficFee) String() string {
	return tea.Prettify(s)
}

func (s EstimatedPriceQueryResponseBodyModuleTrafficFee) GoString() string {
	return s.String()
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFee) SetBtripRoutes(v []*EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) *EstimatedPriceQueryResponseBodyModuleTrafficFee {
	s.BtripRoutes = v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFee) SetErrMsg(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFee {
	s.ErrMsg = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFee) SetMaxFee(v int64) *EstimatedPriceQueryResponseBodyModuleTrafficFee {
	s.MaxFee = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFee) SetMinFee(v int64) *EstimatedPriceQueryResponseBodyModuleTrafficFee {
	s.MinFee = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFee) SetSuccess(v bool) *EstimatedPriceQueryResponseBodyModuleTrafficFee {
	s.Success = &v
	return s
}

type EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes struct {
	ArrCity  *string                                                             `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrDate  *int64                                                              `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	Cheapest *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest `json:"cheapest,omitempty" xml:"cheapest,omitempty" type:"Struct"`
	DepCity  *string                                                             `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	DepDate  *int64                                                              `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// demo
	ErrMsg *string `json:"err_msg,omitempty" xml:"err_msg,omitempty"`
	// example:
	//
	// 1245
	ItineraryId   *string                                                                  `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	MostExpensive *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive `json:"most_expensive,omitempty" xml:"most_expensive,omitempty" type:"Struct"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
}

func (s EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) String() string {
	return tea.Prettify(s)
}

func (s EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) GoString() string {
	return s.String()
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) SetArrCity(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes {
	s.ArrCity = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) SetArrDate(v int64) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes {
	s.ArrDate = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) SetCheapest(v *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes {
	s.Cheapest = v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) SetDepCity(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes {
	s.DepCity = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) SetDepDate(v int64) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes {
	s.DepDate = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) SetErrMsg(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes {
	s.ErrMsg = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) SetItineraryId(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes {
	s.ItineraryId = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) SetMostExpensive(v *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes {
	s.MostExpensive = v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes) SetSuccess(v bool) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutes {
	s.Success = &v
	return s
}

type EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest struct {
	// example:
	//
	// 00:40
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 22:20
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 30100
	Fee       *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
	SeatGrade *string `json:"seat_grade,omitempty" xml:"seat_grade,omitempty"`
	// example:
	//
	// MU9668
	VehicleNo *string `json:"vehicle_no,omitempty" xml:"vehicle_no,omitempty"`
}

func (s EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest) String() string {
	return tea.Prettify(s)
}

func (s EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest) GoString() string {
	return s.String()
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest) SetArrTime(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest {
	s.ArrTime = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest) SetDepTime(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest {
	s.DepTime = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest) SetFee(v int64) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest {
	s.Fee = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest) SetSeatGrade(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest {
	s.SeatGrade = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest) SetVehicleNo(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesCheapest {
	s.VehicleNo = &v
	return s
}

type EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive struct {
	// example:
	//
	// 19:20
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 17:00
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 265000
	Fee       *int64  `json:"fee,omitempty" xml:"fee,omitempty"`
	SeatGrade *string `json:"seat_grade,omitempty" xml:"seat_grade,omitempty"`
	// example:
	//
	// CA1721
	VehicleNo *string `json:"vehicle_no,omitempty" xml:"vehicle_no,omitempty"`
}

func (s EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive) String() string {
	return tea.Prettify(s)
}

func (s EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive) GoString() string {
	return s.String()
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive) SetArrTime(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive {
	s.ArrTime = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive) SetDepTime(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive {
	s.DepTime = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive) SetFee(v int64) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive {
	s.Fee = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive) SetSeatGrade(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive {
	s.SeatGrade = &v
	return s
}

func (s *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive) SetVehicleNo(v string) *EstimatedPriceQueryResponseBodyModuleTrafficFeeBtripRoutesMostExpensive {
	s.VehicleNo = &v
	return s
}

type EstimatedPriceQueryResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *EstimatedPriceQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s EstimatedPriceQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s EstimatedPriceQueryResponse) GoString() string {
	return s.String()
}

func (s *EstimatedPriceQueryResponse) SetHeaders(v map[string]*string) *EstimatedPriceQueryResponse {
	s.Headers = v
	return s
}

func (s *EstimatedPriceQueryResponse) SetStatusCode(v int32) *EstimatedPriceQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *EstimatedPriceQueryResponse) SetBody(v *EstimatedPriceQueryResponseBody) *EstimatedPriceQueryResponse {
	s.Body = v
	return s
}

type ExceedApplySyncHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ExceedApplySyncHeaders) String() string {
	return tea.Prettify(s)
}

func (s ExceedApplySyncHeaders) GoString() string {
	return s.String()
}

func (s *ExceedApplySyncHeaders) SetCommonHeaders(v map[string]*string) *ExceedApplySyncHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ExceedApplySyncHeaders) SetXAcsBtripSoCorpToken(v string) *ExceedApplySyncHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ExceedApplySyncRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 823744
	ApplyId *int64 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 3
	BizCategory *int32  `json:"biz_category,omitempty" xml:"biz_category,omitempty"`
	Remark      *string `json:"remark,omitempty" xml:"remark,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 123421
	ThirdpartyFlowId *string `json:"thirdparty_flow_id,omitempty" xml:"thirdparty_flow_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// open5145141
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s ExceedApplySyncRequest) String() string {
	return tea.Prettify(s)
}

func (s ExceedApplySyncRequest) GoString() string {
	return s.String()
}

func (s *ExceedApplySyncRequest) SetApplyId(v int64) *ExceedApplySyncRequest {
	s.ApplyId = &v
	return s
}

func (s *ExceedApplySyncRequest) SetBizCategory(v int32) *ExceedApplySyncRequest {
	s.BizCategory = &v
	return s
}

func (s *ExceedApplySyncRequest) SetRemark(v string) *ExceedApplySyncRequest {
	s.Remark = &v
	return s
}

func (s *ExceedApplySyncRequest) SetStatus(v int32) *ExceedApplySyncRequest {
	s.Status = &v
	return s
}

func (s *ExceedApplySyncRequest) SetThirdpartyFlowId(v string) *ExceedApplySyncRequest {
	s.ThirdpartyFlowId = &v
	return s
}

func (s *ExceedApplySyncRequest) SetUserId(v string) *ExceedApplySyncRequest {
	s.UserId = &v
	return s
}

type ExceedApplySyncResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	//
	// example:
	//
	// {\\"list\\": [], \\"pageSize\\": 20, \\"pageNo\\": 1}
	Module *bool `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ExceedApplySyncResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ExceedApplySyncResponseBody) GoString() string {
	return s.String()
}

func (s *ExceedApplySyncResponseBody) SetCode(v string) *ExceedApplySyncResponseBody {
	s.Code = &v
	return s
}

func (s *ExceedApplySyncResponseBody) SetMessage(v string) *ExceedApplySyncResponseBody {
	s.Message = &v
	return s
}

func (s *ExceedApplySyncResponseBody) SetModule(v bool) *ExceedApplySyncResponseBody {
	s.Module = &v
	return s
}

func (s *ExceedApplySyncResponseBody) SetRequestId(v string) *ExceedApplySyncResponseBody {
	s.RequestId = &v
	return s
}

func (s *ExceedApplySyncResponseBody) SetSuccess(v bool) *ExceedApplySyncResponseBody {
	s.Success = &v
	return s
}

func (s *ExceedApplySyncResponseBody) SetTraceId(v string) *ExceedApplySyncResponseBody {
	s.TraceId = &v
	return s
}

type ExceedApplySyncResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ExceedApplySyncResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ExceedApplySyncResponse) String() string {
	return tea.Prettify(s)
}

func (s ExceedApplySyncResponse) GoString() string {
	return s.String()
}

func (s *ExceedApplySyncResponse) SetHeaders(v map[string]*string) *ExceedApplySyncResponse {
	s.Headers = v
	return s
}

func (s *ExceedApplySyncResponse) SetStatusCode(v int32) *ExceedApplySyncResponse {
	s.StatusCode = &v
	return s
}

func (s *ExceedApplySyncResponse) SetBody(v *ExceedApplySyncResponseBody) *ExceedApplySyncResponse {
	s.Body = v
	return s
}

type ExternalUserAddHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s ExternalUserAddHeaders) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserAddHeaders) GoString() string {
	return s.String()
}

func (s *ExternalUserAddHeaders) SetCommonHeaders(v map[string]*string) *ExternalUserAddHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ExternalUserAddHeaders) SetXAcsBtripCorpToken(v string) *ExternalUserAddHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type ExternalUserAddRequest struct {
	// example:
	//
	// 2000-01-02
	Birthday        *string                                  `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertRequestList []*ExternalUserAddRequestCertRequestList `json:"cert_request_list,omitempty" xml:"cert_request_list,omitempty" type:"Repeated"`
	// example:
	//
	// zhangsan@alibaba-inc.com
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0012
	ExternalUserId *string `json:"external_user_id,omitempty" xml:"external_user_id,omitempty"`
	// example:
	//
	// 13438009765
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// This parameter is required.
	RealName *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// zhang/san
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s ExternalUserAddRequest) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserAddRequest) GoString() string {
	return s.String()
}

func (s *ExternalUserAddRequest) SetBirthday(v string) *ExternalUserAddRequest {
	s.Birthday = &v
	return s
}

func (s *ExternalUserAddRequest) SetCertRequestList(v []*ExternalUserAddRequestCertRequestList) *ExternalUserAddRequest {
	s.CertRequestList = v
	return s
}

func (s *ExternalUserAddRequest) SetEmail(v string) *ExternalUserAddRequest {
	s.Email = &v
	return s
}

func (s *ExternalUserAddRequest) SetExternalUserId(v string) *ExternalUserAddRequest {
	s.ExternalUserId = &v
	return s
}

func (s *ExternalUserAddRequest) SetPhone(v string) *ExternalUserAddRequest {
	s.Phone = &v
	return s
}

func (s *ExternalUserAddRequest) SetRealName(v string) *ExternalUserAddRequest {
	s.RealName = &v
	return s
}

func (s *ExternalUserAddRequest) SetRealNameEn(v string) *ExternalUserAddRequest {
	s.RealNameEn = &v
	return s
}

func (s *ExternalUserAddRequest) SetUserType(v int32) *ExternalUserAddRequest {
	s.UserType = &v
	return s
}

type ExternalUserAddRequestCertRequestList struct {
	// example:
	//
	// 2034-10-01
	CertExpiredTime *string `json:"cert_expired_time,omitempty" xml:"cert_expired_time,omitempty"`
	// example:
	//
	// CN
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 330101199010010213
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// CN
	Nationality *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
}

func (s ExternalUserAddRequestCertRequestList) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserAddRequestCertRequestList) GoString() string {
	return s.String()
}

func (s *ExternalUserAddRequestCertRequestList) SetCertExpiredTime(v string) *ExternalUserAddRequestCertRequestList {
	s.CertExpiredTime = &v
	return s
}

func (s *ExternalUserAddRequestCertRequestList) SetCertNation(v string) *ExternalUserAddRequestCertRequestList {
	s.CertNation = &v
	return s
}

func (s *ExternalUserAddRequestCertRequestList) SetCertNo(v string) *ExternalUserAddRequestCertRequestList {
	s.CertNo = &v
	return s
}

func (s *ExternalUserAddRequestCertRequestList) SetCertType(v int32) *ExternalUserAddRequestCertRequestList {
	s.CertType = &v
	return s
}

func (s *ExternalUserAddRequestCertRequestList) SetNationality(v string) *ExternalUserAddRequestCertRequestList {
	s.Nationality = &v
	return s
}

type ExternalUserAddShrinkRequest struct {
	// example:
	//
	// 2000-01-02
	Birthday              *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertRequestListShrink *string `json:"cert_request_list,omitempty" xml:"cert_request_list,omitempty"`
	// example:
	//
	// zhangsan@alibaba-inc.com
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0012
	ExternalUserId *string `json:"external_user_id,omitempty" xml:"external_user_id,omitempty"`
	// example:
	//
	// 13438009765
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// This parameter is required.
	RealName *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// zhang/san
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s ExternalUserAddShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserAddShrinkRequest) GoString() string {
	return s.String()
}

func (s *ExternalUserAddShrinkRequest) SetBirthday(v string) *ExternalUserAddShrinkRequest {
	s.Birthday = &v
	return s
}

func (s *ExternalUserAddShrinkRequest) SetCertRequestListShrink(v string) *ExternalUserAddShrinkRequest {
	s.CertRequestListShrink = &v
	return s
}

func (s *ExternalUserAddShrinkRequest) SetEmail(v string) *ExternalUserAddShrinkRequest {
	s.Email = &v
	return s
}

func (s *ExternalUserAddShrinkRequest) SetExternalUserId(v string) *ExternalUserAddShrinkRequest {
	s.ExternalUserId = &v
	return s
}

func (s *ExternalUserAddShrinkRequest) SetPhone(v string) *ExternalUserAddShrinkRequest {
	s.Phone = &v
	return s
}

func (s *ExternalUserAddShrinkRequest) SetRealName(v string) *ExternalUserAddShrinkRequest {
	s.RealName = &v
	return s
}

func (s *ExternalUserAddShrinkRequest) SetRealNameEn(v string) *ExternalUserAddShrinkRequest {
	s.RealNameEn = &v
	return s
}

func (s *ExternalUserAddShrinkRequest) SetUserType(v int32) *ExternalUserAddShrinkRequest {
	s.UserType = &v
	return s
}

type ExternalUserAddResponseBody struct {
	// example:
	//
	// success
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f079416784321627628333de4ab
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ExternalUserAddResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserAddResponseBody) GoString() string {
	return s.String()
}

func (s *ExternalUserAddResponseBody) SetCode(v string) *ExternalUserAddResponseBody {
	s.Code = &v
	return s
}

func (s *ExternalUserAddResponseBody) SetMessage(v string) *ExternalUserAddResponseBody {
	s.Message = &v
	return s
}

func (s *ExternalUserAddResponseBody) SetRequestId(v string) *ExternalUserAddResponseBody {
	s.RequestId = &v
	return s
}

func (s *ExternalUserAddResponseBody) SetSuccess(v bool) *ExternalUserAddResponseBody {
	s.Success = &v
	return s
}

func (s *ExternalUserAddResponseBody) SetTraceId(v string) *ExternalUserAddResponseBody {
	s.TraceId = &v
	return s
}

type ExternalUserAddResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ExternalUserAddResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ExternalUserAddResponse) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserAddResponse) GoString() string {
	return s.String()
}

func (s *ExternalUserAddResponse) SetHeaders(v map[string]*string) *ExternalUserAddResponse {
	s.Headers = v
	return s
}

func (s *ExternalUserAddResponse) SetStatusCode(v int32) *ExternalUserAddResponse {
	s.StatusCode = &v
	return s
}

func (s *ExternalUserAddResponse) SetBody(v *ExternalUserAddResponseBody) *ExternalUserAddResponse {
	s.Body = v
	return s
}

type ExternalUserDeleteHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s ExternalUserDeleteHeaders) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserDeleteHeaders) GoString() string {
	return s.String()
}

func (s *ExternalUserDeleteHeaders) SetCommonHeaders(v map[string]*string) *ExternalUserDeleteHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ExternalUserDeleteHeaders) SetXAcsBtripCorpToken(v string) *ExternalUserDeleteHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type ExternalUserDeleteResponseBody struct {
	// example:
	//
	// success
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f079416784321627628333de4ab
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ExternalUserDeleteResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserDeleteResponseBody) GoString() string {
	return s.String()
}

func (s *ExternalUserDeleteResponseBody) SetCode(v string) *ExternalUserDeleteResponseBody {
	s.Code = &v
	return s
}

func (s *ExternalUserDeleteResponseBody) SetMessage(v string) *ExternalUserDeleteResponseBody {
	s.Message = &v
	return s
}

func (s *ExternalUserDeleteResponseBody) SetRequestId(v string) *ExternalUserDeleteResponseBody {
	s.RequestId = &v
	return s
}

func (s *ExternalUserDeleteResponseBody) SetSuccess(v bool) *ExternalUserDeleteResponseBody {
	s.Success = &v
	return s
}

func (s *ExternalUserDeleteResponseBody) SetTraceId(v string) *ExternalUserDeleteResponseBody {
	s.TraceId = &v
	return s
}

type ExternalUserDeleteResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ExternalUserDeleteResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ExternalUserDeleteResponse) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserDeleteResponse) GoString() string {
	return s.String()
}

func (s *ExternalUserDeleteResponse) SetHeaders(v map[string]*string) *ExternalUserDeleteResponse {
	s.Headers = v
	return s
}

func (s *ExternalUserDeleteResponse) SetStatusCode(v int32) *ExternalUserDeleteResponse {
	s.StatusCode = &v
	return s
}

func (s *ExternalUserDeleteResponse) SetBody(v *ExternalUserDeleteResponseBody) *ExternalUserDeleteResponse {
	s.Body = v
	return s
}

type ExternalUserUpdateHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s ExternalUserUpdateHeaders) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserUpdateHeaders) GoString() string {
	return s.String()
}

func (s *ExternalUserUpdateHeaders) SetCommonHeaders(v map[string]*string) *ExternalUserUpdateHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ExternalUserUpdateHeaders) SetXAcsBtripCorpToken(v string) *ExternalUserUpdateHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type ExternalUserUpdateRequest struct {
	// example:
	//
	// 2000-01-02
	Birthday        *string                                     `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertRequestList []*ExternalUserUpdateRequestCertRequestList `json:"cert_request_list,omitempty" xml:"cert_request_list,omitempty" type:"Repeated"`
	// example:
	//
	// zhangsan@alibaba-inc.com
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// 13438009765
	Phone    *string `json:"phone,omitempty" xml:"phone,omitempty"`
	RealName *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// zhang/san
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
}

func (s ExternalUserUpdateRequest) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserUpdateRequest) GoString() string {
	return s.String()
}

func (s *ExternalUserUpdateRequest) SetBirthday(v string) *ExternalUserUpdateRequest {
	s.Birthday = &v
	return s
}

func (s *ExternalUserUpdateRequest) SetCertRequestList(v []*ExternalUserUpdateRequestCertRequestList) *ExternalUserUpdateRequest {
	s.CertRequestList = v
	return s
}

func (s *ExternalUserUpdateRequest) SetEmail(v string) *ExternalUserUpdateRequest {
	s.Email = &v
	return s
}

func (s *ExternalUserUpdateRequest) SetPhone(v string) *ExternalUserUpdateRequest {
	s.Phone = &v
	return s
}

func (s *ExternalUserUpdateRequest) SetRealName(v string) *ExternalUserUpdateRequest {
	s.RealName = &v
	return s
}

func (s *ExternalUserUpdateRequest) SetRealNameEn(v string) *ExternalUserUpdateRequest {
	s.RealNameEn = &v
	return s
}

type ExternalUserUpdateRequestCertRequestList struct {
	// example:
	//
	// 2034-10-01
	CertExpiredTime *string `json:"cert_expired_time,omitempty" xml:"cert_expired_time,omitempty"`
	// example:
	//
	// CN
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 330101199010010213
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// CN
	Nationality *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
}

func (s ExternalUserUpdateRequestCertRequestList) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserUpdateRequestCertRequestList) GoString() string {
	return s.String()
}

func (s *ExternalUserUpdateRequestCertRequestList) SetCertExpiredTime(v string) *ExternalUserUpdateRequestCertRequestList {
	s.CertExpiredTime = &v
	return s
}

func (s *ExternalUserUpdateRequestCertRequestList) SetCertNation(v string) *ExternalUserUpdateRequestCertRequestList {
	s.CertNation = &v
	return s
}

func (s *ExternalUserUpdateRequestCertRequestList) SetCertNo(v string) *ExternalUserUpdateRequestCertRequestList {
	s.CertNo = &v
	return s
}

func (s *ExternalUserUpdateRequestCertRequestList) SetCertType(v int32) *ExternalUserUpdateRequestCertRequestList {
	s.CertType = &v
	return s
}

func (s *ExternalUserUpdateRequestCertRequestList) SetNationality(v string) *ExternalUserUpdateRequestCertRequestList {
	s.Nationality = &v
	return s
}

type ExternalUserUpdateShrinkRequest struct {
	// example:
	//
	// 2000-01-02
	Birthday              *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertRequestListShrink *string `json:"cert_request_list,omitempty" xml:"cert_request_list,omitempty"`
	// example:
	//
	// zhangsan@alibaba-inc.com
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// 13438009765
	Phone    *string `json:"phone,omitempty" xml:"phone,omitempty"`
	RealName *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// zhang/san
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
}

func (s ExternalUserUpdateShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserUpdateShrinkRequest) GoString() string {
	return s.String()
}

func (s *ExternalUserUpdateShrinkRequest) SetBirthday(v string) *ExternalUserUpdateShrinkRequest {
	s.Birthday = &v
	return s
}

func (s *ExternalUserUpdateShrinkRequest) SetCertRequestListShrink(v string) *ExternalUserUpdateShrinkRequest {
	s.CertRequestListShrink = &v
	return s
}

func (s *ExternalUserUpdateShrinkRequest) SetEmail(v string) *ExternalUserUpdateShrinkRequest {
	s.Email = &v
	return s
}

func (s *ExternalUserUpdateShrinkRequest) SetPhone(v string) *ExternalUserUpdateShrinkRequest {
	s.Phone = &v
	return s
}

func (s *ExternalUserUpdateShrinkRequest) SetRealName(v string) *ExternalUserUpdateShrinkRequest {
	s.RealName = &v
	return s
}

func (s *ExternalUserUpdateShrinkRequest) SetRealNameEn(v string) *ExternalUserUpdateShrinkRequest {
	s.RealNameEn = &v
	return s
}

type ExternalUserUpdateResponseBody struct {
	// example:
	//
	// success
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f079416784321627628333de4ab
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ExternalUserUpdateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserUpdateResponseBody) GoString() string {
	return s.String()
}

func (s *ExternalUserUpdateResponseBody) SetCode(v string) *ExternalUserUpdateResponseBody {
	s.Code = &v
	return s
}

func (s *ExternalUserUpdateResponseBody) SetMessage(v string) *ExternalUserUpdateResponseBody {
	s.Message = &v
	return s
}

func (s *ExternalUserUpdateResponseBody) SetRequestId(v string) *ExternalUserUpdateResponseBody {
	s.RequestId = &v
	return s
}

func (s *ExternalUserUpdateResponseBody) SetSuccess(v bool) *ExternalUserUpdateResponseBody {
	s.Success = &v
	return s
}

func (s *ExternalUserUpdateResponseBody) SetTraceId(v string) *ExternalUserUpdateResponseBody {
	s.TraceId = &v
	return s
}

type ExternalUserUpdateResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ExternalUserUpdateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ExternalUserUpdateResponse) String() string {
	return tea.Prettify(s)
}

func (s ExternalUserUpdateResponse) GoString() string {
	return s.String()
}

func (s *ExternalUserUpdateResponse) SetHeaders(v map[string]*string) *ExternalUserUpdateResponse {
	s.Headers = v
	return s
}

func (s *ExternalUserUpdateResponse) SetStatusCode(v int32) *ExternalUserUpdateResponse {
	s.StatusCode = &v
	return s
}

func (s *ExternalUserUpdateResponse) SetBody(v *ExternalUserUpdateResponseBody) *ExternalUserUpdateResponse {
	s.Body = v
	return s
}

type FlightBillSettlementQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s FlightBillSettlementQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightBillSettlementQueryHeaders) GoString() string {
	return s.String()
}

func (s *FlightBillSettlementQueryHeaders) SetCommonHeaders(v map[string]*string) *FlightBillSettlementQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightBillSettlementQueryHeaders) SetXAcsBtripSoCorpToken(v string) *FlightBillSettlementQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type FlightBillSettlementQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 50
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-01
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
}

func (s FlightBillSettlementQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightBillSettlementQueryRequest) GoString() string {
	return s.String()
}

func (s *FlightBillSettlementQueryRequest) SetPageNo(v int32) *FlightBillSettlementQueryRequest {
	s.PageNo = &v
	return s
}

func (s *FlightBillSettlementQueryRequest) SetPageSize(v int32) *FlightBillSettlementQueryRequest {
	s.PageSize = &v
	return s
}

func (s *FlightBillSettlementQueryRequest) SetPeriodEnd(v string) *FlightBillSettlementQueryRequest {
	s.PeriodEnd = &v
	return s
}

func (s *FlightBillSettlementQueryRequest) SetPeriodStart(v string) *FlightBillSettlementQueryRequest {
	s.PeriodStart = &v
	return s
}

type FlightBillSettlementQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                      `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                      `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightBillSettlementQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightBillSettlementQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightBillSettlementQueryResponseBody) GoString() string {
	return s.String()
}

func (s *FlightBillSettlementQueryResponseBody) SetCode(v string) *FlightBillSettlementQueryResponseBody {
	s.Code = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBody) SetMessage(v string) *FlightBillSettlementQueryResponseBody {
	s.Message = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBody) SetModule(v *FlightBillSettlementQueryResponseBodyModule) *FlightBillSettlementQueryResponseBody {
	s.Module = v
	return s
}

func (s *FlightBillSettlementQueryResponseBody) SetRequestId(v string) *FlightBillSettlementQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBody) SetSuccess(v bool) *FlightBillSettlementQueryResponseBody {
	s.Success = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBody) SetTraceId(v string) *FlightBillSettlementQueryResponseBody {
	s.TraceId = &v
	return s
}

type FlightBillSettlementQueryResponseBodyModule struct {
	// example:
	//
	// 1
	Category *int32                                                 `json:"category,omitempty" xml:"category,omitempty"`
	CorpId   *string                                                `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	DataList []*FlightBillSettlementQueryResponseBodyModuleDataList `json:"data_list,omitempty" xml:"data_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2021-10-14
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// example:
	//
	// 2021-10-13
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
	// example:
	//
	// 5180
	TotalNum *int64 `json:"total_num,omitempty" xml:"total_num,omitempty"`
}

func (s FlightBillSettlementQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightBillSettlementQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightBillSettlementQueryResponseBodyModule) SetCategory(v int32) *FlightBillSettlementQueryResponseBodyModule {
	s.Category = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModule) SetCorpId(v string) *FlightBillSettlementQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModule) SetDataList(v []*FlightBillSettlementQueryResponseBodyModuleDataList) *FlightBillSettlementQueryResponseBodyModule {
	s.DataList = v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModule) SetPeriodEnd(v string) *FlightBillSettlementQueryResponseBodyModule {
	s.PeriodEnd = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModule) SetPeriodStart(v string) *FlightBillSettlementQueryResponseBodyModule {
	s.PeriodStart = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModule) SetTotalNum(v int64) *FlightBillSettlementQueryResponseBodyModule {
	s.TotalNum = &v
	return s
}

type FlightBillSettlementQueryResponseBodyModuleDataList struct {
	// example:
	//
	// 1
	AdvanceDay *int32 `json:"advance_day,omitempty" xml:"advance_day,omitempty"`
	// example:
	//
	// MU
	AirlineCorpCode *string `json:"airline_corp_code,omitempty" xml:"airline_corp_code,omitempty"`
	AirlineCorpName *string `json:"airline_corp_name,omitempty" xml:"airline_corp_name,omitempty"`
	AlipayId        *string `json:"alipay_id,omitempty" xml:"alipay_id,omitempty"`
	// example:
	//
	// 2021100122001138061456080520
	AlipayTradeNo    *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	ApplyArrCityCode *string `json:"apply_arr_city_code,omitempty" xml:"apply_arr_city_code,omitempty"`
	ApplyArrCityName *string `json:"apply_arr_city_name,omitempty" xml:"apply_arr_city_name,omitempty"`
	ApplyDepCityCode *string `json:"apply_dep_city_code,omitempty" xml:"apply_dep_city_code,omitempty"`
	ApplyDepCityName *string `json:"apply_dep_city_name,omitempty" xml:"apply_dep_city_name,omitempty"`
	// 审批扩展自定义字段
	ApplyExtendField *string `json:"apply_extend_field,omitempty" xml:"apply_extend_field,omitempty"`
	// example:
	//
	// 103177854
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// CAN
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrCity        *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrCityCode    *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 2021-10-02
	ArrDate    *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	ArrStation *string `json:"arr_station,omitempty" xml:"arr_station,omitempty"`
	// example:
	//
	// 13:30:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 2020-12-23T20:18Z
	BillRecordTime *string `json:"bill_record_time,omitempty" xml:"bill_record_time,omitempty"`
	// example:
	//
	// 2021-10-01 00:17:05
	BookTime *string `json:"book_time,omitempty" xml:"book_time,omitempty"`
	BookerId *string `json:"booker_id,omitempty" xml:"booker_id,omitempty"`
	// example:
	//
	// 2342432
	BookerJobNo *string `json:"booker_job_no,omitempty" xml:"booker_job_no,omitempty"`
	BookerName  *string `json:"booker_name,omitempty" xml:"booker_name,omitempty"`
	// example:
	//
	// 23.9
	BtripCouponFee *float64 `json:"btrip_coupon_fee,omitempty" xml:"btrip_coupon_fee,omitempty"`
	// example:
	//
	// 50
	BuildFee           *float64 `json:"build_fee,omitempty" xml:"build_fee,omitempty"`
	BusinessTripResult *string  `json:"business_trip_result,omitempty" xml:"business_trip_result,omitempty"`
	// example:
	//
	// R
	Cabin      *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// example:
	//
	// 1
	CapitalDirection  *string `json:"capital_direction,omitempty" xml:"capital_direction,omitempty"`
	CascadeDepartment *string `json:"cascade_department,omitempty" xml:"cascade_department,omitempty"`
	// example:
	//
	// 23.9
	ChangeFee    *float64 `json:"change_fee,omitempty" xml:"change_fee,omitempty"`
	ChangeResult *string  `json:"change_result,omitempty" xml:"change_result,omitempty"`
	// example:
	//
	// 460
	CorpPayOrderFee *float64 `json:"corp_pay_order_fee,omitempty" xml:"corp_pay_order_fee,omitempty"`
	CorpSettlePrice *float64 `json:"corp_settle_price,omitempty" xml:"corp_settle_price,omitempty"`
	CostCenter      *string  `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	// example:
	//
	// 48b7f3cd-8a4f-4df9-ae2c-883e008cf097
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// 1
	Coupon *float64 `json:"coupon,omitempty" xml:"coupon,omitempty"`
	// example:
	//
	// KHN
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepCityCode    *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	Department     *string `json:"department,omitempty" xml:"department,omitempty"`
	DepartmentId   *string `json:"department_id,omitempty" xml:"department_id,omitempty"`
	DeptCity       *string `json:"dept_city,omitempty" xml:"dept_city,omitempty"`
	// example:
	//
	// 2021-10-02
	DeptDate    *string `json:"dept_date,omitempty" xml:"dept_date,omitempty"`
	DeptStation *string `json:"dept_station,omitempty" xml:"dept_station,omitempty"`
	// example:
	//
	// 12:00:00
	DeptTime *string `json:"dept_time,omitempty" xml:"dept_time,omitempty"`
	// example:
	//
	// 51%
	Discount     *string `json:"discount,omitempty" xml:"discount,omitempty"`
	ExceedReason *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	// example:
	//
	// 10101
	FeeType *string `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	// example:
	//
	// MU9684
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// 4564547
	Index      *string `json:"index,omitempty" xml:"index,omitempty"`
	InsOrderId *string `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	// example:
	//
	// 23.9
	InsuranceFee    *float64 `json:"insurance_fee,omitempty" xml:"insurance_fee,omitempty"`
	InsuranceNumber *string  `json:"insurance_number,omitempty" xml:"insurance_number,omitempty"`
	InvoiceTitle    *string  `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	ItemType        *string  `json:"item_type,omitempty" xml:"item_type,omitempty"`
	// example:
	//
	// 5334916421
	ItineraryNum *string `json:"itinerary_num,omitempty" xml:"itinerary_num,omitempty"`
	// example:
	//
	// 460
	ItineraryPrice *float64 `json:"itinerary_price,omitempty" xml:"itinerary_price,omitempty"`
	Mileage        *string  `json:"mileage,omitempty" xml:"mileage,omitempty"`
	// example:
	//
	// 2021-10-01 00:17:13
	MostDifferenceDeptTime *string `json:"most_difference_dept_time,omitempty" xml:"most_difference_dept_time,omitempty"`
	// example:
	//
	// 23%
	MostDifferenceDiscount *string `json:"most_difference_discount,omitempty" xml:"most_difference_discount,omitempty"`
	// example:
	//
	// MU9684
	MostDifferenceFlightNo *string `json:"most_difference_flight_no,omitempty" xml:"most_difference_flight_no,omitempty"`
	// example:
	//
	// 23.9
	MostDifferencePrice  *float64 `json:"most_difference_price,omitempty" xml:"most_difference_price,omitempty"`
	MostDifferenceReason *string  `json:"most_difference_reason,omitempty" xml:"most_difference_reason,omitempty"`
	// example:
	//
	// 23.9
	MostPrice *float64 `json:"most_price,omitempty" xml:"most_price,omitempty"`
	// example:
	//
	// 23.9
	NegotiationCouponFee *float64 `json:"negotiation_coupon_fee,omitempty" xml:"negotiation_coupon_fee,omitempty"`
	// example:
	//
	// 0
	OilFee *float64 `json:"oil_fee,omitempty" xml:"oil_fee,omitempty"`
	// example:
	//
	// 234223423423
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 234324324423
	OverApplyId           *string  `json:"over_apply_id,omitempty" xml:"over_apply_id,omitempty"`
	PaymentDepartmentId   *string  `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string  `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	PersonSettlePrice     *float64 `json:"person_settle_price,omitempty" xml:"person_settle_price,omitempty"`
	PreBookTip            *string  `json:"pre_book_tip,omitempty" xml:"pre_book_tip,omitempty"`
	// example:
	//
	// 4564547
	PrimaryId *int64 `json:"primary_id,omitempty" xml:"primary_id,omitempty"`
	// example:
	//
	// 45623234
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	// example:
	//
	// 23.9
	RefundFee    *float64 `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	RefundResult *string  `json:"refund_result,omitempty" xml:"refund_result,omitempty"`
	// example:
	//
	// 23.9
	RefundUpgradeCost *float64 `json:"refund_upgrade_cost,omitempty" xml:"refund_upgrade_cost,omitempty"`
	Remark            *string  `json:"remark,omitempty" xml:"remark,omitempty"`
	RepeatRefund      *string  `json:"repeat_refund,omitempty" xml:"repeat_refund,omitempty"`
	// example:
	//
	// 410
	SealPrice *float64 `json:"seal_price,omitempty" xml:"seal_price,omitempty"`
	// example:
	//
	// 23.9
	ServiceFee *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 460
	SettlementFee *float64 `json:"settlement_fee,omitempty" xml:"settlement_fee,omitempty"`
	// example:
	//
	// 5.67
	SettlementGrantFee *float64 `json:"settlement_grant_fee,omitempty" xml:"settlement_grant_fee,omitempty"`
	// example:
	//
	// 2021-10-01 00:17:13
	SettlementTime *string `json:"settlement_time,omitempty" xml:"settlement_time,omitempty"`
	// example:
	//
	// 2
	SettlementType *string `json:"settlement_type,omitempty" xml:"settlement_type,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// 税率
	//
	// example:
	//
	// 6%
	TaxRate          *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	ThirdItineraryId *string `json:"third_itinerary_id,omitempty" xml:"third_itinerary_id,omitempty"`
	// example:
	//
	// 781-6586234234324
	TicketId   *string `json:"ticket_id,omitempty" xml:"ticket_id,omitempty"`
	Trade      *string `json:"trade,omitempty" xml:"trade,omitempty"`
	TravelerId *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	// example:
	//
	// 345345
	TravelerJobNo          *string `json:"traveler_job_no,omitempty" xml:"traveler_job_no,omitempty"`
	TravelerMemberTypeName *string `json:"traveler_member_type_name,omitempty" xml:"traveler_member_type_name,omitempty"`
	TravelerName           *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
	// example:
	//
	// 23.9
	UpgradeCost *float64 `json:"upgrade_cost,omitempty" xml:"upgrade_cost,omitempty"`
	// example:
	//
	// 11
	VoucherType *int32  `json:"voucher_type,omitempty" xml:"voucher_type,omitempty"`
	VoyageName  *string `json:"voyage_name,omitempty" xml:"voyage_name,omitempty"`
}

func (s FlightBillSettlementQueryResponseBodyModuleDataList) String() string {
	return tea.Prettify(s)
}

func (s FlightBillSettlementQueryResponseBodyModuleDataList) GoString() string {
	return s.String()
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetAdvanceDay(v int32) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.AdvanceDay = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetAirlineCorpCode(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.AirlineCorpCode = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetAirlineCorpName(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.AirlineCorpName = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetAlipayId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.AlipayId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetAlipayTradeNo(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.AlipayTradeNo = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityCode(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityCode = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityName(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityName = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityCode(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityCode = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityName(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityName = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetApplyExtendField(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyExtendField = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetApplyId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetArrAirportCode(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetArrCity(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrCity = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetArrCityCode(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrCityCode = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetArrDate(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrDate = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetArrStation(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrStation = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetArrTime(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrTime = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetBillRecordTime(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.BillRecordTime = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetBookTime(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.BookTime = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetBookerId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.BookerId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetBookerJobNo(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.BookerJobNo = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetBookerName(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.BookerName = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetBtripCouponFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.BtripCouponFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetBuildFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.BuildFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetBusinessTripResult(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.BusinessTripResult = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetCabin(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.Cabin = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetCabinClass(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.CabinClass = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetCapitalDirection(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.CapitalDirection = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetCascadeDepartment(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.CascadeDepartment = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetChangeFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ChangeFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetChangeResult(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ChangeResult = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetCorpPayOrderFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.CorpPayOrderFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetCorpSettlePrice(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.CorpSettlePrice = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetCostCenter(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenter = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetCostCenterNumber(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenterNumber = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetCoupon(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.Coupon = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetDepAirportCode(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.DepAirportCode = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetDepCityCode(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.DepCityCode = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetDepartment(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.Department = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetDepartmentId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.DepartmentId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetDeptCity(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.DeptCity = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetDeptDate(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.DeptDate = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetDeptStation(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.DeptStation = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetDeptTime(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.DeptTime = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetDiscount(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.Discount = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetExceedReason(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ExceedReason = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetFeeType(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.FeeType = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetFlightNo(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.FlightNo = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetIndex(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.Index = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetInsOrderId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.InsOrderId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetInsuranceFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.InsuranceFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetInsuranceNumber(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.InsuranceNumber = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetInvoiceTitle(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.InvoiceTitle = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetItemType(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ItemType = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetItineraryNum(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ItineraryNum = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetItineraryPrice(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ItineraryPrice = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetMileage(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.Mileage = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetMostDifferenceDeptTime(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostDifferenceDeptTime = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetMostDifferenceDiscount(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostDifferenceDiscount = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetMostDifferenceFlightNo(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostDifferenceFlightNo = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetMostDifferencePrice(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostDifferencePrice = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetMostDifferenceReason(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostDifferenceReason = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetMostPrice(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostPrice = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetNegotiationCouponFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.NegotiationCouponFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetOilFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.OilFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetOrderId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.OrderId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetOverApplyId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.OverApplyId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentName(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetPersonSettlePrice(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.PersonSettlePrice = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetPreBookTip(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.PreBookTip = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetPrimaryId(v int64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.PrimaryId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetProjectCode(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectCode = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetProjectName(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectName = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetRefundFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.RefundFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetRefundResult(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.RefundResult = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetRefundUpgradeCost(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.RefundUpgradeCost = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetRemark(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.Remark = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetRepeatRefund(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.RepeatRefund = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetSealPrice(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.SealPrice = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetServiceFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ServiceFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetSettlementFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetSettlementGrantFee(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementGrantFee = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetSettlementTime(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementTime = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetSettlementType(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementType = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetStatus(v int32) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.Status = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetTaxRate(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.TaxRate = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetThirdItineraryId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.ThirdItineraryId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetTicketId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.TicketId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetTrade(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.Trade = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetTravelerId(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerId = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetTravelerJobNo(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerJobNo = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetTravelerMemberTypeName(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerMemberTypeName = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetTravelerName(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerName = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetUpgradeCost(v float64) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.UpgradeCost = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetVoucherType(v int32) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.VoucherType = &v
	return s
}

func (s *FlightBillSettlementQueryResponseBodyModuleDataList) SetVoyageName(v string) *FlightBillSettlementQueryResponseBodyModuleDataList {
	s.VoyageName = &v
	return s
}

type FlightBillSettlementQueryResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightBillSettlementQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightBillSettlementQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightBillSettlementQueryResponse) GoString() string {
	return s.String()
}

func (s *FlightBillSettlementQueryResponse) SetHeaders(v map[string]*string) *FlightBillSettlementQueryResponse {
	s.Headers = v
	return s
}

func (s *FlightBillSettlementQueryResponse) SetStatusCode(v int32) *FlightBillSettlementQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightBillSettlementQueryResponse) SetBody(v *FlightBillSettlementQueryResponseBody) *FlightBillSettlementQueryResponse {
	s.Body = v
	return s
}

type FlightCancelOrderHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightCancelOrderHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightCancelOrderHeaders) GoString() string {
	return s.String()
}

func (s *FlightCancelOrderHeaders) SetCommonHeaders(v map[string]*string) *FlightCancelOrderHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightCancelOrderHeaders) SetXAcsBtripCorpToken(v string) *FlightCancelOrderHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightCancelOrderRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
}

func (s FlightCancelOrderRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightCancelOrderRequest) GoString() string {
	return s.String()
}

func (s *FlightCancelOrderRequest) SetDisOrderId(v string) *FlightCancelOrderRequest {
	s.DisOrderId = &v
	return s
}

type FlightCancelOrderResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightCancelOrderResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightCancelOrderResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightCancelOrderResponseBody) GoString() string {
	return s.String()
}

func (s *FlightCancelOrderResponseBody) SetCode(v string) *FlightCancelOrderResponseBody {
	s.Code = &v
	return s
}

func (s *FlightCancelOrderResponseBody) SetMessage(v string) *FlightCancelOrderResponseBody {
	s.Message = &v
	return s
}

func (s *FlightCancelOrderResponseBody) SetModule(v *FlightCancelOrderResponseBodyModule) *FlightCancelOrderResponseBody {
	s.Module = v
	return s
}

func (s *FlightCancelOrderResponseBody) SetRequestId(v string) *FlightCancelOrderResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightCancelOrderResponseBody) SetSuccess(v bool) *FlightCancelOrderResponseBody {
	s.Success = &v
	return s
}

func (s *FlightCancelOrderResponseBody) SetTraceId(v string) *FlightCancelOrderResponseBody {
	s.TraceId = &v
	return s
}

type FlightCancelOrderResponseBodyModule struct {
	// example:
	//
	// 2022-07-04T16:13Z
	CancelTime *string `json:"cancel_time,omitempty" xml:"cancel_time,omitempty"`
	FailCode   *string `json:"fail_code,omitempty" xml:"fail_code,omitempty"`
	FailReason *string `json:"fail_reason,omitempty" xml:"fail_reason,omitempty"`
	// example:
	//
	// 0
	OrderStatus *string `json:"order_status,omitempty" xml:"order_status,omitempty"`
}

func (s FlightCancelOrderResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightCancelOrderResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightCancelOrderResponseBodyModule) SetCancelTime(v string) *FlightCancelOrderResponseBodyModule {
	s.CancelTime = &v
	return s
}

func (s *FlightCancelOrderResponseBodyModule) SetFailCode(v string) *FlightCancelOrderResponseBodyModule {
	s.FailCode = &v
	return s
}

func (s *FlightCancelOrderResponseBodyModule) SetFailReason(v string) *FlightCancelOrderResponseBodyModule {
	s.FailReason = &v
	return s
}

func (s *FlightCancelOrderResponseBodyModule) SetOrderStatus(v string) *FlightCancelOrderResponseBodyModule {
	s.OrderStatus = &v
	return s
}

type FlightCancelOrderResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightCancelOrderResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightCancelOrderResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightCancelOrderResponse) GoString() string {
	return s.String()
}

func (s *FlightCancelOrderResponse) SetHeaders(v map[string]*string) *FlightCancelOrderResponse {
	s.Headers = v
	return s
}

func (s *FlightCancelOrderResponse) SetStatusCode(v int32) *FlightCancelOrderResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightCancelOrderResponse) SetBody(v *FlightCancelOrderResponseBody) *FlightCancelOrderResponse {
	s.Body = v
	return s
}

type FlightCancelOrderV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightCancelOrderV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightCancelOrderV2Headers) GoString() string {
	return s.String()
}

func (s *FlightCancelOrderV2Headers) SetCommonHeaders(v map[string]*string) *FlightCancelOrderV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightCancelOrderV2Headers) SetXAcsBtripCorpToken(v string) *FlightCancelOrderV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightCancelOrderV2Request struct {
	// This parameter is required.
	IsvName    *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	OrderId    *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s FlightCancelOrderV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightCancelOrderV2Request) GoString() string {
	return s.String()
}

func (s *FlightCancelOrderV2Request) SetIsvName(v string) *FlightCancelOrderV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightCancelOrderV2Request) SetOrderId(v string) *FlightCancelOrderV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightCancelOrderV2Request) SetOutOrderId(v string) *FlightCancelOrderV2Request {
	s.OutOrderId = &v
	return s
}

type FlightCancelOrderV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightCancelOrderV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightCancelOrderV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightCancelOrderV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightCancelOrderV2ResponseBody) SetCode(v string) *FlightCancelOrderV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightCancelOrderV2ResponseBody) SetMessage(v string) *FlightCancelOrderV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightCancelOrderV2ResponseBody) SetModule(v *FlightCancelOrderV2ResponseBodyModule) *FlightCancelOrderV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightCancelOrderV2ResponseBody) SetRequestId(v string) *FlightCancelOrderV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightCancelOrderV2ResponseBody) SetSuccess(v bool) *FlightCancelOrderV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightCancelOrderV2ResponseBody) SetTraceId(v string) *FlightCancelOrderV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightCancelOrderV2ResponseBodyModule struct {
	// example:
	//
	// 2023-08-10 17:45:32
	CancelTime *string `json:"cancel_time,omitempty" xml:"cancel_time,omitempty"`
}

func (s FlightCancelOrderV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightCancelOrderV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightCancelOrderV2ResponseBodyModule) SetCancelTime(v string) *FlightCancelOrderV2ResponseBodyModule {
	s.CancelTime = &v
	return s
}

type FlightCancelOrderV2Response struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightCancelOrderV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightCancelOrderV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightCancelOrderV2Response) GoString() string {
	return s.String()
}

func (s *FlightCancelOrderV2Response) SetHeaders(v map[string]*string) *FlightCancelOrderV2Response {
	s.Headers = v
	return s
}

func (s *FlightCancelOrderV2Response) SetStatusCode(v int32) *FlightCancelOrderV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightCancelOrderV2Response) SetBody(v *FlightCancelOrderV2ResponseBody) *FlightCancelOrderV2Response {
	s.Body = v
	return s
}

type FlightCreateOrderHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightCreateOrderHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderHeaders) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderHeaders) SetCommonHeaders(v map[string]*string) *FlightCreateOrderHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightCreateOrderHeaders) SetXAcsBtripCorpToken(v string) *FlightCreateOrderHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightCreateOrderRequest struct {
	// example:
	//
	// HGH
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 0
	AutoPay   *int32  `json:"auto_pay,omitempty" xml:"auto_pay,omitempty"`
	BuyerName *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	BuyerUniqueKey *string `json:"buyer_unique_key,omitempty" xml:"buyer_unique_key,omitempty"`
	// This parameter is required.
	ContactInfo *FlightCreateOrderRequestContactInfo `json:"contact_info,omitempty" xml:"contact_info,omitempty" type:"Struct"`
	// example:
	//
	// PEK
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2000-00-00 00:00:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string                `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	OrderAttr  map[string]interface{} `json:"order_attr,omitempty" xml:"order_attr,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1000_1_0
	OrderParams *string `json:"order_params,omitempty" xml:"order_params,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 7fb731deeb4510b86c17e8c8c25740_11
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1000
	Price          *int64  `json:"price,omitempty" xml:"price,omitempty"`
	ReceiptAddress *string `json:"receipt_address,omitempty" xml:"receipt_address,omitempty"`
	// example:
	//
	// 1
	ReceiptTarget *int32  `json:"receipt_target,omitempty" xml:"receipt_target,omitempty"`
	ReceiptTitle  *string `json:"receipt_title,omitempty" xml:"receipt_title,omitempty"`
	// This parameter is required.
	TravelerInfoList []*FlightCreateOrderRequestTravelerInfoList `json:"traveler_info_list,omitempty" xml:"traveler_info_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightCreateOrderRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderRequest) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderRequest) SetArrAirportCode(v string) *FlightCreateOrderRequest {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightCreateOrderRequest) SetArrCityCode(v string) *FlightCreateOrderRequest {
	s.ArrCityCode = &v
	return s
}

func (s *FlightCreateOrderRequest) SetAutoPay(v int32) *FlightCreateOrderRequest {
	s.AutoPay = &v
	return s
}

func (s *FlightCreateOrderRequest) SetBuyerName(v string) *FlightCreateOrderRequest {
	s.BuyerName = &v
	return s
}

func (s *FlightCreateOrderRequest) SetBuyerUniqueKey(v string) *FlightCreateOrderRequest {
	s.BuyerUniqueKey = &v
	return s
}

func (s *FlightCreateOrderRequest) SetContactInfo(v *FlightCreateOrderRequestContactInfo) *FlightCreateOrderRequest {
	s.ContactInfo = v
	return s
}

func (s *FlightCreateOrderRequest) SetDepAirportCode(v string) *FlightCreateOrderRequest {
	s.DepAirportCode = &v
	return s
}

func (s *FlightCreateOrderRequest) SetDepCityCode(v string) *FlightCreateOrderRequest {
	s.DepCityCode = &v
	return s
}

func (s *FlightCreateOrderRequest) SetDepDate(v string) *FlightCreateOrderRequest {
	s.DepDate = &v
	return s
}

func (s *FlightCreateOrderRequest) SetDisOrderId(v string) *FlightCreateOrderRequest {
	s.DisOrderId = &v
	return s
}

func (s *FlightCreateOrderRequest) SetOrderAttr(v map[string]interface{}) *FlightCreateOrderRequest {
	s.OrderAttr = v
	return s
}

func (s *FlightCreateOrderRequest) SetOrderParams(v string) *FlightCreateOrderRequest {
	s.OrderParams = &v
	return s
}

func (s *FlightCreateOrderRequest) SetOtaItemId(v string) *FlightCreateOrderRequest {
	s.OtaItemId = &v
	return s
}

func (s *FlightCreateOrderRequest) SetPrice(v int64) *FlightCreateOrderRequest {
	s.Price = &v
	return s
}

func (s *FlightCreateOrderRequest) SetReceiptAddress(v string) *FlightCreateOrderRequest {
	s.ReceiptAddress = &v
	return s
}

func (s *FlightCreateOrderRequest) SetReceiptTarget(v int32) *FlightCreateOrderRequest {
	s.ReceiptTarget = &v
	return s
}

func (s *FlightCreateOrderRequest) SetReceiptTitle(v string) *FlightCreateOrderRequest {
	s.ReceiptTitle = &v
	return s
}

func (s *FlightCreateOrderRequest) SetTravelerInfoList(v []*FlightCreateOrderRequestTravelerInfoList) *FlightCreateOrderRequest {
	s.TravelerInfoList = v
	return s
}

func (s *FlightCreateOrderRequest) SetTripType(v int32) *FlightCreateOrderRequest {
	s.TripType = &v
	return s
}

type FlightCreateOrderRequestContactInfo struct {
	// example:
	//
	// ******@alibaba-inc.com
	ContactEmail *string `json:"contact_email,omitempty" xml:"contact_email,omitempty"`
	// This parameter is required.
	ContactName *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12312345211
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
}

func (s FlightCreateOrderRequestContactInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderRequestContactInfo) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderRequestContactInfo) SetContactEmail(v string) *FlightCreateOrderRequestContactInfo {
	s.ContactEmail = &v
	return s
}

func (s *FlightCreateOrderRequestContactInfo) SetContactName(v string) *FlightCreateOrderRequestContactInfo {
	s.ContactName = &v
	return s
}

func (s *FlightCreateOrderRequestContactInfo) SetContactPhone(v string) *FlightCreateOrderRequestContactInfo {
	s.ContactPhone = &v
	return s
}

type FlightCreateOrderRequestTravelerInfoList struct {
	// example:
	//
	// 2000-00-00
	Birthday   *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1262651555151
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	CertType *string `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 2000-00-00
	CertValidDate *string `json:"cert_valid_date,omitempty" xml:"cert_valid_date,omitempty"`
	// This parameter is required.
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
	// 国籍
	//
	// example:
	//
	// 中国大陆
	Nationality *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
	// 国籍二字码
	//
	// example:
	//
	// CN
	NationalityCode *string `json:"nationality_code,omitempty" xml:"nationality_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1234
	OutUserId *string `json:"out_user_id,omitempty" xml:"out_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12341231232
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// 0
	Sex *int32 `json:"sex,omitempty" xml:"sex,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Type *string `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightCreateOrderRequestTravelerInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderRequestTravelerInfoList) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetBirthday(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.Birthday = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetCertNation(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.CertNation = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetCertNo(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.CertNo = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetCertType(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.CertType = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetCertValidDate(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.CertValidDate = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetName(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.Name = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetNationality(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.Nationality = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetNationalityCode(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.NationalityCode = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetOutUserId(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.OutUserId = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetPhone(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.Phone = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetSex(v int32) *FlightCreateOrderRequestTravelerInfoList {
	s.Sex = &v
	return s
}

func (s *FlightCreateOrderRequestTravelerInfoList) SetType(v string) *FlightCreateOrderRequestTravelerInfoList {
	s.Type = &v
	return s
}

type FlightCreateOrderShrinkRequest struct {
	// example:
	//
	// HGH
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 0
	AutoPay   *int32  `json:"auto_pay,omitempty" xml:"auto_pay,omitempty"`
	BuyerName *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	BuyerUniqueKey *string `json:"buyer_unique_key,omitempty" xml:"buyer_unique_key,omitempty"`
	// This parameter is required.
	ContactInfoShrink *string `json:"contact_info,omitempty" xml:"contact_info,omitempty"`
	// example:
	//
	// PEK
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2000-00-00 00:00:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId      *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	OrderAttrShrink *string `json:"order_attr,omitempty" xml:"order_attr,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1000_1_0
	OrderParams *string `json:"order_params,omitempty" xml:"order_params,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 7fb731deeb4510b86c17e8c8c25740_11
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1000
	Price          *int64  `json:"price,omitempty" xml:"price,omitempty"`
	ReceiptAddress *string `json:"receipt_address,omitempty" xml:"receipt_address,omitempty"`
	// example:
	//
	// 1
	ReceiptTarget *int32  `json:"receipt_target,omitempty" xml:"receipt_target,omitempty"`
	ReceiptTitle  *string `json:"receipt_title,omitempty" xml:"receipt_title,omitempty"`
	// This parameter is required.
	TravelerInfoListShrink *string `json:"traveler_info_list,omitempty" xml:"traveler_info_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightCreateOrderShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderShrinkRequest) SetArrAirportCode(v string) *FlightCreateOrderShrinkRequest {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetArrCityCode(v string) *FlightCreateOrderShrinkRequest {
	s.ArrCityCode = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetAutoPay(v int32) *FlightCreateOrderShrinkRequest {
	s.AutoPay = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetBuyerName(v string) *FlightCreateOrderShrinkRequest {
	s.BuyerName = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetBuyerUniqueKey(v string) *FlightCreateOrderShrinkRequest {
	s.BuyerUniqueKey = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetContactInfoShrink(v string) *FlightCreateOrderShrinkRequest {
	s.ContactInfoShrink = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetDepAirportCode(v string) *FlightCreateOrderShrinkRequest {
	s.DepAirportCode = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetDepCityCode(v string) *FlightCreateOrderShrinkRequest {
	s.DepCityCode = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetDepDate(v string) *FlightCreateOrderShrinkRequest {
	s.DepDate = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetDisOrderId(v string) *FlightCreateOrderShrinkRequest {
	s.DisOrderId = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetOrderAttrShrink(v string) *FlightCreateOrderShrinkRequest {
	s.OrderAttrShrink = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetOrderParams(v string) *FlightCreateOrderShrinkRequest {
	s.OrderParams = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetOtaItemId(v string) *FlightCreateOrderShrinkRequest {
	s.OtaItemId = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetPrice(v int64) *FlightCreateOrderShrinkRequest {
	s.Price = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetReceiptAddress(v string) *FlightCreateOrderShrinkRequest {
	s.ReceiptAddress = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetReceiptTarget(v int32) *FlightCreateOrderShrinkRequest {
	s.ReceiptTarget = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetReceiptTitle(v string) *FlightCreateOrderShrinkRequest {
	s.ReceiptTitle = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetTravelerInfoListShrink(v string) *FlightCreateOrderShrinkRequest {
	s.TravelerInfoListShrink = &v
	return s
}

func (s *FlightCreateOrderShrinkRequest) SetTripType(v int32) *FlightCreateOrderShrinkRequest {
	s.TripType = &v
	return s
}

type FlightCreateOrderResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightCreateOrderResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightCreateOrderResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderResponseBody) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderResponseBody) SetCode(v string) *FlightCreateOrderResponseBody {
	s.Code = &v
	return s
}

func (s *FlightCreateOrderResponseBody) SetMessage(v string) *FlightCreateOrderResponseBody {
	s.Message = &v
	return s
}

func (s *FlightCreateOrderResponseBody) SetModule(v *FlightCreateOrderResponseBodyModule) *FlightCreateOrderResponseBody {
	s.Module = v
	return s
}

func (s *FlightCreateOrderResponseBody) SetRequestId(v string) *FlightCreateOrderResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightCreateOrderResponseBody) SetSuccess(v bool) *FlightCreateOrderResponseBody {
	s.Success = &v
	return s
}

func (s *FlightCreateOrderResponseBody) SetTraceId(v string) *FlightCreateOrderResponseBody {
	s.TraceId = &v
	return s
}

type FlightCreateOrderResponseBodyModule struct {
	// example:
	//
	// 3287177727711
	AlipayTradeNo *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	// example:
	//
	// 123
	BtripOrderId *int64 `json:"btrip_order_id,omitempty" xml:"btrip_order_id,omitempty"`
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	LastPayTime *string `json:"last_pay_time,omitempty" xml:"last_pay_time,omitempty"`
	// example:
	//
	// 1
	OrderStatus *int32 `json:"order_status,omitempty" xml:"order_status,omitempty"`
	// example:
	//
	// 1
	PayStatus *int32 `json:"pay_status,omitempty" xml:"pay_status,omitempty"`
	// example:
	//
	// 100
	PaymentPrice *int64 `json:"payment_price,omitempty" xml:"payment_price,omitempty"`
	// example:
	//
	// 100
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
}

func (s FlightCreateOrderResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderResponseBodyModule) SetAlipayTradeNo(v string) *FlightCreateOrderResponseBodyModule {
	s.AlipayTradeNo = &v
	return s
}

func (s *FlightCreateOrderResponseBodyModule) SetBtripOrderId(v int64) *FlightCreateOrderResponseBodyModule {
	s.BtripOrderId = &v
	return s
}

func (s *FlightCreateOrderResponseBodyModule) SetDisOrderId(v string) *FlightCreateOrderResponseBodyModule {
	s.DisOrderId = &v
	return s
}

func (s *FlightCreateOrderResponseBodyModule) SetLastPayTime(v string) *FlightCreateOrderResponseBodyModule {
	s.LastPayTime = &v
	return s
}

func (s *FlightCreateOrderResponseBodyModule) SetOrderStatus(v int32) *FlightCreateOrderResponseBodyModule {
	s.OrderStatus = &v
	return s
}

func (s *FlightCreateOrderResponseBodyModule) SetPayStatus(v int32) *FlightCreateOrderResponseBodyModule {
	s.PayStatus = &v
	return s
}

func (s *FlightCreateOrderResponseBodyModule) SetPaymentPrice(v int64) *FlightCreateOrderResponseBodyModule {
	s.PaymentPrice = &v
	return s
}

func (s *FlightCreateOrderResponseBodyModule) SetTotalPrice(v int64) *FlightCreateOrderResponseBodyModule {
	s.TotalPrice = &v
	return s
}

type FlightCreateOrderResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightCreateOrderResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightCreateOrderResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderResponse) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderResponse) SetHeaders(v map[string]*string) *FlightCreateOrderResponse {
	s.Headers = v
	return s
}

func (s *FlightCreateOrderResponse) SetStatusCode(v int32) *FlightCreateOrderResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightCreateOrderResponse) SetBody(v *FlightCreateOrderResponseBody) *FlightCreateOrderResponse {
	s.Body = v
	return s
}

type FlightCreateOrderV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightCreateOrderV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderV2Headers) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderV2Headers) SetCommonHeaders(v map[string]*string) *FlightCreateOrderV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightCreateOrderV2Headers) SetXAcsBtripCorpToken(v string) *FlightCreateOrderV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightCreateOrderV2Request struct {
	AsyncCreateOrderKey *string `json:"async_create_order_key,omitempty" xml:"async_create_order_key,omitempty"`
	// example:
	//
	// false
	AsyncCreateOrderMode *bool   `json:"async_create_order_mode,omitempty" xml:"async_create_order_mode,omitempty"`
	BtripUserId          *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName            *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	ContactInfo *FlightCreateOrderV2RequestContactInfo `json:"contact_info,omitempty" xml:"contact_info,omitempty" type:"Struct"`
	// This parameter is required.
	//
	// example:
	//
	// cheshiapi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 7fb731deeb4510b86c17e8c8c25740_11
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// This parameter is required.
	OutOrderId     *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	TotalPriceCent *int64  `json:"total_price_cent,omitempty" xml:"total_price_cent,omitempty"`
	// This parameter is required.
	Travelers []*FlightCreateOrderV2RequestTravelers `json:"travelers,omitempty" xml:"travelers,omitempty" type:"Repeated"`
}

func (s FlightCreateOrderV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderV2Request) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderV2Request) SetAsyncCreateOrderKey(v string) *FlightCreateOrderV2Request {
	s.AsyncCreateOrderKey = &v
	return s
}

func (s *FlightCreateOrderV2Request) SetAsyncCreateOrderMode(v bool) *FlightCreateOrderV2Request {
	s.AsyncCreateOrderMode = &v
	return s
}

func (s *FlightCreateOrderV2Request) SetBtripUserId(v string) *FlightCreateOrderV2Request {
	s.BtripUserId = &v
	return s
}

func (s *FlightCreateOrderV2Request) SetBuyerName(v string) *FlightCreateOrderV2Request {
	s.BuyerName = &v
	return s
}

func (s *FlightCreateOrderV2Request) SetContactInfo(v *FlightCreateOrderV2RequestContactInfo) *FlightCreateOrderV2Request {
	s.ContactInfo = v
	return s
}

func (s *FlightCreateOrderV2Request) SetIsvName(v string) *FlightCreateOrderV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightCreateOrderV2Request) SetOtaItemId(v string) *FlightCreateOrderV2Request {
	s.OtaItemId = &v
	return s
}

func (s *FlightCreateOrderV2Request) SetOutOrderId(v string) *FlightCreateOrderV2Request {
	s.OutOrderId = &v
	return s
}

func (s *FlightCreateOrderV2Request) SetTotalPriceCent(v int64) *FlightCreateOrderV2Request {
	s.TotalPriceCent = &v
	return s
}

func (s *FlightCreateOrderV2Request) SetTravelers(v []*FlightCreateOrderV2RequestTravelers) *FlightCreateOrderV2Request {
	s.Travelers = v
	return s
}

type FlightCreateOrderV2RequestContactInfo struct {
	ContactEmail       *string `json:"contact_email,omitempty" xml:"contact_email,omitempty"`
	ContactName        *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	ContactPhone       *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	SendMsgToPassenger *bool   `json:"send_msg_to_passenger,omitempty" xml:"send_msg_to_passenger,omitempty"`
}

func (s FlightCreateOrderV2RequestContactInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderV2RequestContactInfo) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderV2RequestContactInfo) SetContactEmail(v string) *FlightCreateOrderV2RequestContactInfo {
	s.ContactEmail = &v
	return s
}

func (s *FlightCreateOrderV2RequestContactInfo) SetContactName(v string) *FlightCreateOrderV2RequestContactInfo {
	s.ContactName = &v
	return s
}

func (s *FlightCreateOrderV2RequestContactInfo) SetContactPhone(v string) *FlightCreateOrderV2RequestContactInfo {
	s.ContactPhone = &v
	return s
}

func (s *FlightCreateOrderV2RequestContactInfo) SetSendMsgToPassenger(v bool) *FlightCreateOrderV2RequestContactInfo {
	s.SendMsgToPassenger = &v
	return s
}

type FlightCreateOrderV2RequestTravelers struct {
	// This parameter is required.
	//
	// example:
	//
	// 1991-01-22
	Birthday   *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// This parameter is required.
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	CertType         *int32  `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	CertValidDate    *string `json:"cert_valid_date,omitempty" xml:"cert_valid_date,omitempty"`
	CostCenterName   *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	DeptId           *string `json:"dept_id,omitempty" xml:"dept_id,omitempty"`
	DeptName         *string `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	// This parameter is required.
	Gender          *int32  `json:"gender,omitempty" xml:"gender,omitempty"`
	InvoiceTitle    *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	Nationality     *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
	NationalityCode *string `json:"nationality_code,omitempty" xml:"nationality_code,omitempty"`
	// This parameter is required.
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// This parameter is required.
	Phone        *string `json:"phone,omitempty" xml:"phone,omitempty"`
	ProjectCode  *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 18155711459129970552412
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserType *int32  `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s FlightCreateOrderV2RequestTravelers) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderV2RequestTravelers) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderV2RequestTravelers) SetBirthday(v string) *FlightCreateOrderV2RequestTravelers {
	s.Birthday = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetCertNation(v string) *FlightCreateOrderV2RequestTravelers {
	s.CertNation = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetCertNo(v string) *FlightCreateOrderV2RequestTravelers {
	s.CertNo = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetCertType(v int32) *FlightCreateOrderV2RequestTravelers {
	s.CertType = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetCertValidDate(v string) *FlightCreateOrderV2RequestTravelers {
	s.CertValidDate = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetCostCenterName(v string) *FlightCreateOrderV2RequestTravelers {
	s.CostCenterName = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetCostCenterNumber(v string) *FlightCreateOrderV2RequestTravelers {
	s.CostCenterNumber = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetDeptId(v string) *FlightCreateOrderV2RequestTravelers {
	s.DeptId = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetDeptName(v string) *FlightCreateOrderV2RequestTravelers {
	s.DeptName = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetGender(v int32) *FlightCreateOrderV2RequestTravelers {
	s.Gender = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetInvoiceTitle(v string) *FlightCreateOrderV2RequestTravelers {
	s.InvoiceTitle = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetNationality(v string) *FlightCreateOrderV2RequestTravelers {
	s.Nationality = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetNationalityCode(v string) *FlightCreateOrderV2RequestTravelers {
	s.NationalityCode = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetPassengerName(v string) *FlightCreateOrderV2RequestTravelers {
	s.PassengerName = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetPassengerType(v int32) *FlightCreateOrderV2RequestTravelers {
	s.PassengerType = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetPhone(v string) *FlightCreateOrderV2RequestTravelers {
	s.Phone = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetProjectCode(v string) *FlightCreateOrderV2RequestTravelers {
	s.ProjectCode = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetProjectTitle(v string) *FlightCreateOrderV2RequestTravelers {
	s.ProjectTitle = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetUserId(v string) *FlightCreateOrderV2RequestTravelers {
	s.UserId = &v
	return s
}

func (s *FlightCreateOrderV2RequestTravelers) SetUserType(v int32) *FlightCreateOrderV2RequestTravelers {
	s.UserType = &v
	return s
}

type FlightCreateOrderV2ShrinkRequest struct {
	AsyncCreateOrderKey *string `json:"async_create_order_key,omitempty" xml:"async_create_order_key,omitempty"`
	// example:
	//
	// false
	AsyncCreateOrderMode *bool   `json:"async_create_order_mode,omitempty" xml:"async_create_order_mode,omitempty"`
	BtripUserId          *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName            *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	ContactInfoShrink *string `json:"contact_info,omitempty" xml:"contact_info,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// cheshiapi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 7fb731deeb4510b86c17e8c8c25740_11
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// This parameter is required.
	OutOrderId     *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	TotalPriceCent *int64  `json:"total_price_cent,omitempty" xml:"total_price_cent,omitempty"`
	// This parameter is required.
	TravelersShrink *string `json:"travelers,omitempty" xml:"travelers,omitempty"`
}

func (s FlightCreateOrderV2ShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderV2ShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderV2ShrinkRequest) SetAsyncCreateOrderKey(v string) *FlightCreateOrderV2ShrinkRequest {
	s.AsyncCreateOrderKey = &v
	return s
}

func (s *FlightCreateOrderV2ShrinkRequest) SetAsyncCreateOrderMode(v bool) *FlightCreateOrderV2ShrinkRequest {
	s.AsyncCreateOrderMode = &v
	return s
}

func (s *FlightCreateOrderV2ShrinkRequest) SetBtripUserId(v string) *FlightCreateOrderV2ShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *FlightCreateOrderV2ShrinkRequest) SetBuyerName(v string) *FlightCreateOrderV2ShrinkRequest {
	s.BuyerName = &v
	return s
}

func (s *FlightCreateOrderV2ShrinkRequest) SetContactInfoShrink(v string) *FlightCreateOrderV2ShrinkRequest {
	s.ContactInfoShrink = &v
	return s
}

func (s *FlightCreateOrderV2ShrinkRequest) SetIsvName(v string) *FlightCreateOrderV2ShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *FlightCreateOrderV2ShrinkRequest) SetOtaItemId(v string) *FlightCreateOrderV2ShrinkRequest {
	s.OtaItemId = &v
	return s
}

func (s *FlightCreateOrderV2ShrinkRequest) SetOutOrderId(v string) *FlightCreateOrderV2ShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *FlightCreateOrderV2ShrinkRequest) SetTotalPriceCent(v int64) *FlightCreateOrderV2ShrinkRequest {
	s.TotalPriceCent = &v
	return s
}

func (s *FlightCreateOrderV2ShrinkRequest) SetTravelersShrink(v string) *FlightCreateOrderV2ShrinkRequest {
	s.TravelersShrink = &v
	return s
}

type FlightCreateOrderV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightCreateOrderV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// 210bc60a16916593445203790d2a16
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 2103ad0716827336456723986d4bda
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightCreateOrderV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderV2ResponseBody) SetCode(v string) *FlightCreateOrderV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightCreateOrderV2ResponseBody) SetMessage(v string) *FlightCreateOrderV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightCreateOrderV2ResponseBody) SetModule(v *FlightCreateOrderV2ResponseBodyModule) *FlightCreateOrderV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightCreateOrderV2ResponseBody) SetRequestId(v string) *FlightCreateOrderV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightCreateOrderV2ResponseBody) SetSuccess(v bool) *FlightCreateOrderV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightCreateOrderV2ResponseBody) SetTraceId(v string) *FlightCreateOrderV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightCreateOrderV2ResponseBodyModule struct {
	AsyncCreateOrderKey *string `json:"async_create_order_key,omitempty" xml:"async_create_order_key,omitempty"`
	// example:
	//
	// 2023-08-10 17:42:32
	LatestPayTime *string `json:"latest_pay_time,omitempty" xml:"latest_pay_time,omitempty"`
	// example:
	//
	// 1017002195798359369
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// cheshiapi002kwl
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 32
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 51000
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
}

func (s FlightCreateOrderV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderV2ResponseBodyModule) SetAsyncCreateOrderKey(v string) *FlightCreateOrderV2ResponseBodyModule {
	s.AsyncCreateOrderKey = &v
	return s
}

func (s *FlightCreateOrderV2ResponseBodyModule) SetLatestPayTime(v string) *FlightCreateOrderV2ResponseBodyModule {
	s.LatestPayTime = &v
	return s
}

func (s *FlightCreateOrderV2ResponseBodyModule) SetOrderId(v int64) *FlightCreateOrderV2ResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *FlightCreateOrderV2ResponseBodyModule) SetOutOrderId(v string) *FlightCreateOrderV2ResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *FlightCreateOrderV2ResponseBodyModule) SetStatus(v int32) *FlightCreateOrderV2ResponseBodyModule {
	s.Status = &v
	return s
}

func (s *FlightCreateOrderV2ResponseBodyModule) SetTotalPrice(v int64) *FlightCreateOrderV2ResponseBodyModule {
	s.TotalPrice = &v
	return s
}

type FlightCreateOrderV2Response struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightCreateOrderV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightCreateOrderV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightCreateOrderV2Response) GoString() string {
	return s.String()
}

func (s *FlightCreateOrderV2Response) SetHeaders(v map[string]*string) *FlightCreateOrderV2Response {
	s.Headers = v
	return s
}

func (s *FlightCreateOrderV2Response) SetStatusCode(v int32) *FlightCreateOrderV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightCreateOrderV2Response) SetBody(v *FlightCreateOrderV2ResponseBody) *FlightCreateOrderV2Response {
	s.Body = v
	return s
}

type FlightExceedApplyQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s FlightExceedApplyQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightExceedApplyQueryHeaders) GoString() string {
	return s.String()
}

func (s *FlightExceedApplyQueryHeaders) SetCommonHeaders(v map[string]*string) *FlightExceedApplyQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightExceedApplyQueryHeaders) SetXAcsBtripSoCorpToken(v string) *FlightExceedApplyQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type FlightExceedApplyQueryRequest struct {
	// example:
	//
	// 175634
	ApplyId            *int64  `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	BusinessInstanceId *string `json:"business_instance_id,omitempty" xml:"business_instance_id,omitempty"`
}

func (s FlightExceedApplyQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightExceedApplyQueryRequest) GoString() string {
	return s.String()
}

func (s *FlightExceedApplyQueryRequest) SetApplyId(v int64) *FlightExceedApplyQueryRequest {
	s.ApplyId = &v
	return s
}

func (s *FlightExceedApplyQueryRequest) SetBusinessInstanceId(v string) *FlightExceedApplyQueryRequest {
	s.BusinessInstanceId = &v
	return s
}

type FlightExceedApplyQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                   `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                   `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightExceedApplyQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightExceedApplyQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightExceedApplyQueryResponseBody) GoString() string {
	return s.String()
}

func (s *FlightExceedApplyQueryResponseBody) SetCode(v string) *FlightExceedApplyQueryResponseBody {
	s.Code = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBody) SetMessage(v string) *FlightExceedApplyQueryResponseBody {
	s.Message = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBody) SetModule(v *FlightExceedApplyQueryResponseBodyModule) *FlightExceedApplyQueryResponseBody {
	s.Module = v
	return s
}

func (s *FlightExceedApplyQueryResponseBody) SetRequestId(v string) *FlightExceedApplyQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBody) SetSuccess(v bool) *FlightExceedApplyQueryResponseBody {
	s.Success = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBody) SetTraceId(v string) *FlightExceedApplyQueryResponseBody {
	s.TraceId = &v
	return s
}

type FlightExceedApplyQueryResponseBodyModule struct {
	// example:
	//
	// 1231
	ApplyId                  *int64                                                              `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ApplyIntentionInfoDo     *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo       `json:"apply_intention_info_do,omitempty" xml:"apply_intention_info_do,omitempty" type:"Struct"`
	ApplyIntentionInfoDoList []*FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList `json:"apply_intention_info_do_list,omitempty" xml:"apply_intention_info_do_list,omitempty" type:"Repeated"`
	ApplyRecommendFlights    *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights      `json:"apply_recommend_flights,omitempty" xml:"apply_recommend_flights,omitempty" type:"Struct"`
	BtripCause               *string                                                             `json:"btrip_cause,omitempty" xml:"btrip_cause,omitempty"`
	// example:
	//
	// 123
	CorpId       *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	ExceedReason *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	// example:
	//
	// 1
	ExceedType     *int32  `json:"exceed_type,omitempty" xml:"exceed_type,omitempty"`
	OriginStandard *string `json:"origin_standard,omitempty" xml:"origin_standard,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 2022-01-12T16:47Z
	SubmitTime *string `json:"submit_time,omitempty" xml:"submit_time,omitempty"`
	// example:
	//
	// 0001A1100000007EX08O
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// test_corp
	ThirdpartCorpId *string `json:"thirdpart_corp_id,omitempty" xml:"thirdpart_corp_id,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s FlightExceedApplyQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightExceedApplyQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetApplyId(v int64) *FlightExceedApplyQueryResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetApplyIntentionInfoDo(v *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) *FlightExceedApplyQueryResponseBodyModule {
	s.ApplyIntentionInfoDo = v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetApplyIntentionInfoDoList(v []*FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) *FlightExceedApplyQueryResponseBodyModule {
	s.ApplyIntentionInfoDoList = v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetApplyRecommendFlights(v *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) *FlightExceedApplyQueryResponseBodyModule {
	s.ApplyRecommendFlights = v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetBtripCause(v string) *FlightExceedApplyQueryResponseBodyModule {
	s.BtripCause = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetCorpId(v string) *FlightExceedApplyQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetExceedReason(v string) *FlightExceedApplyQueryResponseBodyModule {
	s.ExceedReason = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetExceedType(v int32) *FlightExceedApplyQueryResponseBodyModule {
	s.ExceedType = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetOriginStandard(v string) *FlightExceedApplyQueryResponseBodyModule {
	s.OriginStandard = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetStatus(v int32) *FlightExceedApplyQueryResponseBodyModule {
	s.Status = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetSubmitTime(v string) *FlightExceedApplyQueryResponseBodyModule {
	s.SubmitTime = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetThirdpartApplyId(v string) *FlightExceedApplyQueryResponseBodyModule {
	s.ThirdpartApplyId = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetThirdpartCorpId(v string) *FlightExceedApplyQueryResponseBodyModule {
	s.ThirdpartCorpId = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetUserId(v string) *FlightExceedApplyQueryResponseBodyModule {
	s.UserId = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModule) SetUserName(v string) *FlightExceedApplyQueryResponseBodyModule {
	s.UserName = &v
	return s
}

type FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo struct {
	ArrAirportName *string `json:"arr_airport_name,omitempty" xml:"arr_airport_name,omitempty"`
	// example:
	//
	// SHA
	ArrCity     *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2022-01-12T16:47Z
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// F
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// 1
	CabinClass     *int32  `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassStr  *string `json:"cabin_class_str,omitempty" xml:"cabin_class_str,omitempty"`
	DepAirportName *string `json:"dep_airport_name,omitempty" xml:"dep_airport_name,omitempty"`
	// example:
	//
	// SHA
	DepCity     *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2022-01-12T16:47Z
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 4
	Discount *string `json:"discount,omitempty" xml:"discount,omitempty"`
	// example:
	//
	// MU2759
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// 300
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) String() string {
	return tea.Prettify(s)
}

func (s FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) GoString() string {
	return s.String()
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetArrAirportName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.ArrAirportName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetArrCity(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.ArrCity = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetArrCityName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.ArrCityName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetArrTime(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.ArrTime = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetCabin(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.Cabin = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetCabinClass(v int32) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.CabinClass = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetCabinClassStr(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.CabinClassStr = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetDepAirportName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.DepAirportName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetDepCity(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.DepCity = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetDepCityName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.DepCityName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetDepTime(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.DepTime = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetDiscount(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.Discount = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetFlightNo(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.FlightNo = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetPrice(v int64) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.Price = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetType(v int32) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.Type = &v
	return s
}

type FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList struct {
	ArrAirportName *string `json:"arr_airport_name,omitempty" xml:"arr_airport_name,omitempty"`
	ArrCity        *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrCityName    *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	ArrTime        *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	Cabin          *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	CabinClass     *int32  `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassStr  *string `json:"cabin_class_str,omitempty" xml:"cabin_class_str,omitempty"`
	DepAirportName *string `json:"dep_airport_name,omitempty" xml:"dep_airport_name,omitempty"`
	DepCity        *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	DepCityName    *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	DepTime        *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	Discount       *string `json:"discount,omitempty" xml:"discount,omitempty"`
	FlightNo       *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	Price          *int64  `json:"price,omitempty" xml:"price,omitempty"`
	Type           *int32  `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) String() string {
	return tea.Prettify(s)
}

func (s FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) GoString() string {
	return s.String()
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetArrAirportName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.ArrAirportName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetArrCity(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.ArrCity = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetArrCityName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.ArrCityName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetArrTime(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.ArrTime = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetCabin(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.Cabin = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetCabinClass(v int32) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.CabinClass = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetCabinClassStr(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.CabinClassStr = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetDepAirportName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.DepAirportName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetDepCity(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.DepCity = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetDepCityName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.DepCityName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetDepTime(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.DepTime = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetDiscount(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.Discount = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetFlightNo(v string) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.FlightNo = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetPrice(v int64) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.Price = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList) SetType(v int32) *FlightExceedApplyQueryResponseBodyModuleApplyIntentionInfoDoList {
	s.Type = &v
	return s
}

type FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights struct {
	ArrAirportName      *string `json:"arr_airport_name,omitempty" xml:"arr_airport_name,omitempty"`
	ArrCityName         *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	ArrTime             *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	Cabin               *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	CabinClass          *int32  `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassStr       *string `json:"cabin_class_str,omitempty" xml:"cabin_class_str,omitempty"`
	DepAirportName      *string `json:"dep_airport_name,omitempty" xml:"dep_airport_name,omitempty"`
	DepCityName         *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	DepTime             *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	Discount            *string `json:"discount,omitempty" xml:"discount,omitempty"`
	FlightNo            *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	Price               *int64  `json:"price,omitempty" xml:"price,omitempty"`
	TransferAirportName *string `json:"transfer_airport_name,omitempty" xml:"transfer_airport_name,omitempty"`
}

func (s FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) String() string {
	return tea.Prettify(s)
}

func (s FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) GoString() string {
	return s.String()
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetArrAirportName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.ArrAirportName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetArrCityName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.ArrCityName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetArrTime(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.ArrTime = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetCabin(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.Cabin = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetCabinClass(v int32) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.CabinClass = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetCabinClassStr(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.CabinClassStr = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetDepAirportName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.DepAirportName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetDepCityName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.DepCityName = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetDepTime(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.DepTime = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetDiscount(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.Discount = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetFlightNo(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.FlightNo = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetPrice(v int64) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.Price = &v
	return s
}

func (s *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights) SetTransferAirportName(v string) *FlightExceedApplyQueryResponseBodyModuleApplyRecommendFlights {
	s.TransferAirportName = &v
	return s
}

type FlightExceedApplyQueryResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightExceedApplyQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightExceedApplyQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightExceedApplyQueryResponse) GoString() string {
	return s.String()
}

func (s *FlightExceedApplyQueryResponse) SetHeaders(v map[string]*string) *FlightExceedApplyQueryResponse {
	s.Headers = v
	return s
}

func (s *FlightExceedApplyQueryResponse) SetStatusCode(v int32) *FlightExceedApplyQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightExceedApplyQueryResponse) SetBody(v *FlightExceedApplyQueryResponseBody) *FlightExceedApplyQueryResponse {
	s.Body = v
	return s
}

type FlightItineraryScanQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s FlightItineraryScanQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightItineraryScanQueryHeaders) GoString() string {
	return s.String()
}

func (s *FlightItineraryScanQueryHeaders) SetCommonHeaders(v map[string]*string) *FlightItineraryScanQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightItineraryScanQueryHeaders) SetXAcsBtripSoCorpToken(v string) *FlightItineraryScanQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type FlightItineraryScanQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 2022-12-01
	BillDate *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
	// example:
	//
	// 123
	BillId *int64 `json:"bill_id,omitempty" xml:"bill_id,omitempty"`
	// example:
	//
	// 456
	InvoiceSubTaskId *int64  `json:"invoice_sub_task_id,omitempty" xml:"invoice_sub_task_id,omitempty"`
	ItineraryNum     *string `json:"itinerary_num,omitempty" xml:"itinerary_num,omitempty"`
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// example:
	//
	// 20
	PageSize *int32  `json:"page_size,omitempty" xml:"page_size,omitempty"`
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
}

func (s FlightItineraryScanQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightItineraryScanQueryRequest) GoString() string {
	return s.String()
}

func (s *FlightItineraryScanQueryRequest) SetBillDate(v string) *FlightItineraryScanQueryRequest {
	s.BillDate = &v
	return s
}

func (s *FlightItineraryScanQueryRequest) SetBillId(v int64) *FlightItineraryScanQueryRequest {
	s.BillId = &v
	return s
}

func (s *FlightItineraryScanQueryRequest) SetInvoiceSubTaskId(v int64) *FlightItineraryScanQueryRequest {
	s.InvoiceSubTaskId = &v
	return s
}

func (s *FlightItineraryScanQueryRequest) SetItineraryNum(v string) *FlightItineraryScanQueryRequest {
	s.ItineraryNum = &v
	return s
}

func (s *FlightItineraryScanQueryRequest) SetPageNo(v int32) *FlightItineraryScanQueryRequest {
	s.PageNo = &v
	return s
}

func (s *FlightItineraryScanQueryRequest) SetPageSize(v int32) *FlightItineraryScanQueryRequest {
	s.PageSize = &v
	return s
}

func (s *FlightItineraryScanQueryRequest) SetTicketNo(v string) *FlightItineraryScanQueryRequest {
	s.TicketNo = &v
	return s
}

type FlightItineraryScanQueryResponseBody struct {
	// example:
	//
	// 200
	Code    *string                                     `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                     `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightItineraryScanQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightItineraryScanQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightItineraryScanQueryResponseBody) GoString() string {
	return s.String()
}

func (s *FlightItineraryScanQueryResponseBody) SetCode(v string) *FlightItineraryScanQueryResponseBody {
	s.Code = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBody) SetMessage(v string) *FlightItineraryScanQueryResponseBody {
	s.Message = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBody) SetModule(v *FlightItineraryScanQueryResponseBodyModule) *FlightItineraryScanQueryResponseBody {
	s.Module = v
	return s
}

func (s *FlightItineraryScanQueryResponseBody) SetRequestId(v string) *FlightItineraryScanQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBody) SetSuccess(v bool) *FlightItineraryScanQueryResponseBody {
	s.Success = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBody) SetTraceId(v string) *FlightItineraryScanQueryResponseBody {
	s.TraceId = &v
	return s
}

type FlightItineraryScanQueryResponseBodyModule struct {
	Items []*FlightItineraryScanQueryResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 2
	TotalPage *int32 `json:"total_page,omitempty" xml:"total_page,omitempty"`
	// example:
	//
	// 30
	TotalSize *int32 `json:"total_size,omitempty" xml:"total_size,omitempty"`
}

func (s FlightItineraryScanQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightItineraryScanQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightItineraryScanQueryResponseBodyModule) SetItems(v []*FlightItineraryScanQueryResponseBodyModuleItems) *FlightItineraryScanQueryResponseBodyModule {
	s.Items = v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModule) SetPageNo(v int32) *FlightItineraryScanQueryResponseBodyModule {
	s.PageNo = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModule) SetPageSize(v int32) *FlightItineraryScanQueryResponseBodyModule {
	s.PageSize = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModule) SetTotalPage(v int32) *FlightItineraryScanQueryResponseBodyModule {
	s.TotalPage = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModule) SetTotalSize(v int32) *FlightItineraryScanQueryResponseBodyModule {
	s.TotalSize = &v
	return s
}

type FlightItineraryScanQueryResponseBodyModuleItems struct {
	// 销售单位代号
	//
	// example:
	//
	// SIA25608336893
	AgentCode *string `json:"agent_code,omitempty" xml:"agent_code,omitempty"`
	ApplyId   *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 2022-12-01
	BillDate *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
	// example:
	//
	// 50
	Build      *string `json:"build,omitempty" xml:"build,omitempty"`
	CostCenter *string `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	Department *string `json:"department,omitempty" xml:"department,omitempty"`
	// 机票行程明细
	Flights []*FlightItineraryScanQueryResponseBodyModuleItemsFlights `json:"flights,omitempty" xml:"flights,omitempty" type:"Repeated"`
	// example:
	//
	// 120
	FuelSurcharge *string `json:"fuel_surcharge,omitempty" xml:"fuel_surcharge,omitempty"`
	// UK
	//
	// example:
	//
	// 30
	Id *string `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// 0
	Insurance    *string `json:"insurance,omitempty" xml:"insurance,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// 填开单位
	IssueCompany *string `json:"issue_company,omitempty" xml:"issue_company,omitempty"`
	// 填开日期
	//
	// example:
	//
	// 2019-02-28
	IssueDate *string `json:"issue_date,omitempty" xml:"issue_date,omitempty"`
	// example:
	//
	// 6666666666
	ItineraryNum *string `json:"itinerary_num,omitempty" xml:"itinerary_num,omitempty"`
	// example:
	//
	// 4801105714092
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// https://www.testurl.com
	OssUrl        *string `json:"oss_url,omitempty" xml:"oss_url,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	Project       *string `json:"project,omitempty" xml:"project,omitempty"`
	// 提示信息
	PromptMessage *string `json:"prompt_message,omitempty" xml:"prompt_message,omitempty"`
	// example:
	//
	// 108.17
	TaxAmount *string `json:"tax_amount,omitempty" xml:"tax_amount,omitempty"`
	// example:
	//
	// 9%
	TaxRate *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	// example:
	//
	// 784-1111111111
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// example:
	//
	// 1190
	TicketPrice *string `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 1360
	TotalPrice *string `json:"total_price,omitempty" xml:"total_price,omitempty"`
	// 验证码
	//
	// example:
	//
	// 9817
	ValidationCode *string `json:"validation_code,omitempty" xml:"validation_code,omitempty"`
}

func (s FlightItineraryScanQueryResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s FlightItineraryScanQueryResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetAgentCode(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.AgentCode = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetApplyId(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.ApplyId = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetBillDate(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.BillDate = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetBuild(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.Build = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetCostCenter(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.CostCenter = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetDepartment(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.Department = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetFlights(v []*FlightItineraryScanQueryResponseBodyModuleItemsFlights) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.Flights = v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetFuelSurcharge(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.FuelSurcharge = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetId(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.Id = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetInsurance(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.Insurance = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetInvoiceTitle(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.InvoiceTitle = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetIssueCompany(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.IssueCompany = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetIssueDate(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.IssueDate = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetItineraryNum(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.ItineraryNum = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetOrderId(v int64) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.OrderId = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetOssUrl(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.OssUrl = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetPassengerName(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.PassengerName = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetProject(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.Project = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetPromptMessage(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.PromptMessage = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetTaxAmount(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.TaxAmount = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetTaxRate(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.TaxRate = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetTicketNo(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.TicketNo = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetTicketPrice(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.TicketPrice = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetTotalPrice(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.TotalPrice = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItems) SetValidationCode(v string) *FlightItineraryScanQueryResponseBodyModuleItems {
	s.ValidationCode = &v
	return s
}

type FlightItineraryScanQueryResponseBodyModuleItemsFlights struct {
	// 航班至
	ArrivalStation *string `json:"arrival_station,omitempty" xml:"arrival_station,omitempty"`
	// 座位等级
	//
	// example:
	//
	// M
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// 承运人
	Carrier *string `json:"carrier,omitempty" xml:"carrier,omitempty"`
	// 航班从
	DepartureStation *string `json:"departure_station,omitempty" xml:"departure_station,omitempty"`
	// 日期
	//
	// example:
	//
	// 2018-11-18
	FlightDate *string `json:"flight_date,omitempty" xml:"flight_date,omitempty"`
	// 航班号
	//
	// example:
	//
	// MU2271
	FlightNumber *string `json:"flight_number,omitempty" xml:"flight_number,omitempty"`
	// 时间
	//
	// example:
	//
	// 18:25
	FlightTime *string `json:"flight_time,omitempty" xml:"flight_time,omitempty"`
	// 免费行李
	//
	// example:
	//
	// 20K
	FreeBaggageAllowance *string `json:"free_baggage_allowance,omitempty" xml:"free_baggage_allowance,omitempty"`
	// 行号
	//
	// example:
	//
	// 1
	Index *string `json:"index,omitempty" xml:"index,omitempty"`
	// 客票级别
	//
	// example:
	//
	// M
	SeatClass *string `json:"seat_class,omitempty" xml:"seat_class,omitempty"`
	// 客票生效日期
	//
	// example:
	//
	// 2023-01-01
	ValidFromDate *string `json:"valid_from_date,omitempty" xml:"valid_from_date,omitempty"`
	// 有效截止日期
	//
	// example:
	//
	// 2023-01-01
	ValidToDate *string `json:"valid_to_date,omitempty" xml:"valid_to_date,omitempty"`
}

func (s FlightItineraryScanQueryResponseBodyModuleItemsFlights) String() string {
	return tea.Prettify(s)
}

func (s FlightItineraryScanQueryResponseBodyModuleItemsFlights) GoString() string {
	return s.String()
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetArrivalStation(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.ArrivalStation = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetCabinClass(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.CabinClass = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetCarrier(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.Carrier = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetDepartureStation(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.DepartureStation = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetFlightDate(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.FlightDate = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetFlightNumber(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.FlightNumber = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetFlightTime(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.FlightTime = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetFreeBaggageAllowance(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.FreeBaggageAllowance = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetIndex(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.Index = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetSeatClass(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.SeatClass = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetValidFromDate(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.ValidFromDate = &v
	return s
}

func (s *FlightItineraryScanQueryResponseBodyModuleItemsFlights) SetValidToDate(v string) *FlightItineraryScanQueryResponseBodyModuleItemsFlights {
	s.ValidToDate = &v
	return s
}

type FlightItineraryScanQueryResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightItineraryScanQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightItineraryScanQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightItineraryScanQueryResponse) GoString() string {
	return s.String()
}

func (s *FlightItineraryScanQueryResponse) SetHeaders(v map[string]*string) *FlightItineraryScanQueryResponse {
	s.Headers = v
	return s
}

func (s *FlightItineraryScanQueryResponse) SetStatusCode(v int32) *FlightItineraryScanQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightItineraryScanQueryResponse) SetBody(v *FlightItineraryScanQueryResponseBody) *FlightItineraryScanQueryResponse {
	s.Body = v
	return s
}

type FlightListingSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightListingSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchHeaders) GoString() string {
	return s.String()
}

func (s *FlightListingSearchHeaders) SetCommonHeaders(v map[string]*string) *FlightListingSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightListingSearchHeaders) SetXAcsBtripCorpToken(v string) *FlightListingSearchHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightListingSearchRequest struct {
	// example:
	//
	// MU
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// Y
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-26
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
}

func (s FlightListingSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchRequest) GoString() string {
	return s.String()
}

func (s *FlightListingSearchRequest) SetAirlineCode(v string) *FlightListingSearchRequest {
	s.AirlineCode = &v
	return s
}

func (s *FlightListingSearchRequest) SetArrCityCode(v string) *FlightListingSearchRequest {
	s.ArrCityCode = &v
	return s
}

func (s *FlightListingSearchRequest) SetCabinClass(v string) *FlightListingSearchRequest {
	s.CabinClass = &v
	return s
}

func (s *FlightListingSearchRequest) SetDepCityCode(v string) *FlightListingSearchRequest {
	s.DepCityCode = &v
	return s
}

func (s *FlightListingSearchRequest) SetDepDate(v string) *FlightListingSearchRequest {
	s.DepDate = &v
	return s
}

type FlightListingSearchResponseBody struct {
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightListingSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightListingSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBody) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBody) SetCode(v string) *FlightListingSearchResponseBody {
	s.Code = &v
	return s
}

func (s *FlightListingSearchResponseBody) SetMessage(v string) *FlightListingSearchResponseBody {
	s.Message = &v
	return s
}

func (s *FlightListingSearchResponseBody) SetModule(v *FlightListingSearchResponseBodyModule) *FlightListingSearchResponseBody {
	s.Module = v
	return s
}

func (s *FlightListingSearchResponseBody) SetRequestId(v string) *FlightListingSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightListingSearchResponseBody) SetSuccess(v bool) *FlightListingSearchResponseBody {
	s.Success = &v
	return s
}

func (s *FlightListingSearchResponseBody) SetTraceId(v string) *FlightListingSearchResponseBody {
	s.TraceId = &v
	return s
}

type FlightListingSearchResponseBodyModule struct {
	FlightList []*FlightListingSearchResponseBodyModuleFlightList `json:"flight_list,omitempty" xml:"flight_list,omitempty" type:"Repeated"`
}

func (s FlightListingSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModule) SetFlightList(v []*FlightListingSearchResponseBodyModuleFlightList) *FlightListingSearchResponseBodyModule {
	s.FlightList = v
	return s
}

type FlightListingSearchResponseBodyModuleFlightList struct {
	AirlineInfo    *FlightListingSearchResponseBodyModuleFlightListAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	ArrDate *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	// example:
	//
	// 12456
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 100
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// Y
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// 2
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// example:
	//
	// FM
	CarrierAirline *string `json:"carrier_airline,omitempty" xml:"carrier_airline,omitempty"`
	// example:
	//
	// FM9152
	CarrierNo      *string                                                        `json:"carrier_no,omitempty" xml:"carrier_no,omitempty"`
	DepAirportInfo *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 1
	Discount *int32 `json:"discount,omitempty" xml:"discount,omitempty"`
	// example:
	//
	// CA1234
	FlightNo       *string                                                          `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightRuleList []*FlightListingSearchResponseBodyModuleFlightListFlightRuleList `json:"flight_rule_list,omitempty" xml:"flight_rule_list,omitempty" type:"Repeated"`
	// example:
	//
	// demo
	FlightRuleListStr *string `json:"flight_rule_list_str,omitempty" xml:"flight_rule_list_str,omitempty"`
	FlightSize        *string `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	// example:
	//
	// demo
	FlightType *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	// example:
	//
	// 1
	InvoiceType *int32 `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// false
	IsShare *bool `json:"is_share,omitempty" xml:"is_share,omitempty"`
	// example:
	//
	// false
	IsStop *bool `json:"is_stop,omitempty" xml:"is_stop,omitempty"`
	// example:
	//
	// false
	IsTransfer *bool   `json:"is_transfer,omitempty" xml:"is_transfer,omitempty"`
	MealDesc   *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	// example:
	//
	// 100
	OilPrice *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	// example:
	//
	// 4ec61b13fc9746f99c072a16bfc265af_0
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// example:
	//
	// 100
	Price *int32 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 1
	ProductType     *int64  `json:"product_type,omitempty" xml:"product_type,omitempty"`
	ProductTypeDesc *string `json:"product_type_desc,omitempty" xml:"product_type_desc,omitempty"`
	// example:
	//
	// 100
	PromotionPrice *string `json:"promotion_price,omitempty" xml:"promotion_price,omitempty"`
	// example:
	//
	// 1
	RemainedSeatCount *string `json:"remained_seat_count,omitempty" xml:"remained_seat_count,omitempty"`
	// example:
	//
	// 1000_1_0
	SecretParams *string `json:"secret_params,omitempty" xml:"secret_params,omitempty"`
	// example:
	//
	// 1
	SegmentNumber *string `json:"segment_number,omitempty" xml:"segment_number,omitempty"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// HGH
	StopCity *string `json:"stop_city,omitempty" xml:"stop_city,omitempty"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 100
	TotalPrice *string `json:"total_price,omitempty" xml:"total_price,omitempty"`
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightList) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightList) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetAirlineInfo(v *FlightListingSearchResponseBodyModuleFlightListAirlineInfo) *FlightListingSearchResponseBodyModuleFlightList {
	s.AirlineInfo = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetArrAirportInfo(v *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo) *FlightListingSearchResponseBodyModuleFlightList {
	s.ArrAirportInfo = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetArrDate(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.ArrDate = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetBasicCabinPrice(v int32) *FlightListingSearchResponseBodyModuleFlightList {
	s.BasicCabinPrice = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetBuildPrice(v int32) *FlightListingSearchResponseBodyModuleFlightList {
	s.BuildPrice = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetCabin(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.Cabin = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetCabinClass(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.CabinClass = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetCarrierAirline(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.CarrierAirline = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetCarrierNo(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.CarrierNo = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetDepAirportInfo(v *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo) *FlightListingSearchResponseBodyModuleFlightList {
	s.DepAirportInfo = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetDepCityCode(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.DepCityCode = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetDepDate(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.DepDate = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetDiscount(v int32) *FlightListingSearchResponseBodyModuleFlightList {
	s.Discount = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetFlightNo(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.FlightNo = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetFlightRuleList(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleList) *FlightListingSearchResponseBodyModuleFlightList {
	s.FlightRuleList = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetFlightRuleListStr(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.FlightRuleListStr = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetFlightSize(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.FlightSize = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetFlightType(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.FlightType = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetInvoiceType(v int32) *FlightListingSearchResponseBodyModuleFlightList {
	s.InvoiceType = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetIsProtocol(v bool) *FlightListingSearchResponseBodyModuleFlightList {
	s.IsProtocol = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetIsShare(v bool) *FlightListingSearchResponseBodyModuleFlightList {
	s.IsShare = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetIsStop(v bool) *FlightListingSearchResponseBodyModuleFlightList {
	s.IsStop = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetIsTransfer(v bool) *FlightListingSearchResponseBodyModuleFlightList {
	s.IsTransfer = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetMealDesc(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.MealDesc = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetOilPrice(v int32) *FlightListingSearchResponseBodyModuleFlightList {
	s.OilPrice = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetOtaItemId(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.OtaItemId = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetPrice(v int32) *FlightListingSearchResponseBodyModuleFlightList {
	s.Price = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetProductType(v int64) *FlightListingSearchResponseBodyModuleFlightList {
	s.ProductType = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetProductTypeDesc(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.ProductTypeDesc = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetPromotionPrice(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.PromotionPrice = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetRemainedSeatCount(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.RemainedSeatCount = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetSecretParams(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.SecretParams = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetSegmentNumber(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.SegmentNumber = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetStopArrTime(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.StopArrTime = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetStopCity(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.StopCity = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetStopDepTime(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.StopDepTime = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetTicketPrice(v int32) *FlightListingSearchResponseBodyModuleFlightList {
	s.TicketPrice = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetTotalPrice(v string) *FlightListingSearchResponseBodyModuleFlightList {
	s.TotalPrice = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightList) SetTripType(v int32) *FlightListingSearchResponseBodyModuleFlightList {
	s.TripType = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListAirlineInfo struct {
	// example:
	//
	// CA
	AirlineCode       *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName       *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	AirlineSimpleName *string `json:"airline_simple_name,omitempty" xml:"airline_simple_name,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListAirlineInfo) SetAirlineCode(v string) *FlightListingSearchResponseBodyModuleFlightListAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListAirlineInfo) SetAirlineName(v string) *FlightListingSearchResponseBodyModuleFlightListAirlineInfo {
	s.AirlineName = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListAirlineInfo) SetAirlineSimpleName(v string) *FlightListingSearchResponseBodyModuleFlightListAirlineInfo {
	s.AirlineSimpleName = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListArrAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// HGH
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListArrAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo) SetAirportCode(v string) *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo) SetAirportName(v string) *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo) SetCityCode(v string) *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo {
	s.CityCode = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo) SetCityName(v string) *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo {
	s.CityName = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo) SetTerminal(v string) *FlightListingSearchResponseBodyModuleFlightListArrAirportInfo {
	s.Terminal = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListDepAirportInfo struct {
	// example:
	//
	// PEK
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// BJS
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListDepAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo) SetAirportCode(v string) *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo) SetAirportName(v string) *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo) SetCityCode(v string) *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo {
	s.CityCode = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo) SetCityName(v string) *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo {
	s.CityName = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo) SetTerminal(v string) *FlightListingSearchResponseBodyModuleFlightListDepAirportInfo {
	s.Terminal = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleList struct {
	// example:
	//
	// demo
	BaggageInfo    *string                                                                      `json:"baggage_info,omitempty" xml:"baggage_info,omitempty"`
	BaggageItem    *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem    `json:"baggage_item,omitempty" xml:"baggage_item,omitempty" type:"Struct"`
	ChangeRule     *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRule     `json:"change_rule,omitempty" xml:"change_rule,omitempty" type:"Struct"`
	ChangeRuleItem *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem `json:"change_rule_item,omitempty" xml:"change_rule_item,omitempty" type:"Struct"`
	// example:
	//
	// {}
	Extra          *string                                                                      `json:"extra,omitempty" xml:"extra,omitempty"`
	RefundRule     *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRule     `json:"refund_rule,omitempty" xml:"refund_rule,omitempty" type:"Struct"`
	RefundRuleItem *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem `json:"refund_rule_item,omitempty" xml:"refund_rule_item,omitempty" type:"Struct"`
	SignRule       *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRule       `json:"sign_rule,omitempty" xml:"sign_rule,omitempty" type:"Struct"`
	TuigaiqianInfo *string                                                                      `json:"tuigaiqian_info,omitempty" xml:"tuigaiqian_info,omitempty"`
	UpgradeRule    *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule    `json:"upgrade_rule,omitempty" xml:"upgrade_rule,omitempty" type:"Struct"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleList) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleList) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleList) SetBaggageInfo(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleList {
	s.BaggageInfo = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleList) SetBaggageItem(v *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) *FlightListingSearchResponseBodyModuleFlightListFlightRuleList {
	s.BaggageItem = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleList) SetChangeRule(v *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRule) *FlightListingSearchResponseBodyModuleFlightListFlightRuleList {
	s.ChangeRule = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleList) SetChangeRuleItem(v *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) *FlightListingSearchResponseBodyModuleFlightListFlightRuleList {
	s.ChangeRuleItem = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleList) SetExtra(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleList {
	s.Extra = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleList) SetRefundRule(v *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRule) *FlightListingSearchResponseBodyModuleFlightListFlightRuleList {
	s.RefundRule = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleList) SetRefundRuleItem(v *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) *FlightListingSearchResponseBodyModuleFlightListFlightRuleList {
	s.RefundRuleItem = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleList) SetSignRule(v *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRule) *FlightListingSearchResponseBodyModuleFlightListFlightRuleList {
	s.SignRule = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleList) SetTuigaiqianInfo(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleList {
	s.TuigaiqianInfo = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleList) SetUpgradeRule(v *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule) *FlightListingSearchResponseBodyModuleFlightListFlightRuleList {
	s.UpgradeRule = v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem struct {
	BaggageSubItems []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems `json:"baggage_sub_items,omitempty" xml:"baggage_sub_items,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index     *int32                                                                        `json:"index,omitempty" xml:"index,omitempty"`
	TableHead *string                                                                       `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Tips      *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips `json:"tips,omitempty" xml:"tips,omitempty" type:"Struct"`
	Title     *string                                                                       `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetBaggageSubItems(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.BaggageSubItems = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetIndex(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Index = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetTableHead(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.TableHead = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetTips(v *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Tips = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Title = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetType(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Type = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems struct {
	BaggageSubContentVisualizes []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes `json:"baggage_sub_content_visualizes,omitempty" xml:"baggage_sub_content_visualizes,omitempty" type:"Repeated"`
	ExtraContentVisualizes      []interface{}                                                                                                         `json:"extra_content_visualizes,omitempty" xml:"extra_content_visualizes,omitempty" type:"Repeated"`
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc   *string `json:"ptc,omitempty" xml:"ptc,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetBaggageSubContentVisualizes(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.BaggageSubContentVisualizes = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetExtraContentVisualizes(v []interface{}) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.ExtraContentVisualizes = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetIsStruct(v bool) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetPtc(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.Title = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes struct {
	BaggageDesc []*string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	BaggageSubContentType *int32                                                                                                                         `json:"baggage_sub_content_type,omitempty" xml:"baggage_sub_content_type,omitempty"`
	Description           *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription `json:"description,omitempty" xml:"description,omitempty" type:"Struct"`
	ImageDO               *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO     `json:"image_d_o,omitempty" xml:"image_d_o,omitempty" type:"Struct"`
	// example:
	//
	// true
	IsHighlight *bool   `json:"is_highlight,omitempty" xml:"is_highlight,omitempty"`
	SubTitle    *string `json:"sub_title,omitempty" xml:"sub_title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageDesc(v []*string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageDesc = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageSubContentType(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageSubContentType = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetDescription(v *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.Description = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetImageDO(v *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.ImageDO = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetIsHighlight(v bool) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.IsHighlight = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetSubTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.SubTitle = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription struct {
	Desc *string `json:"desc,omitempty" xml:"desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i4/O1CN01UynXG31pjsEtA3tMF_!!6000000005397-2-tps-36-36.png
	Icon *string `json:"icon,omitempty" xml:"icon,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN01qe7wL21gJ0SmEXXL7_!!6000000004120-2-tps-1206-768.png
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetDesc(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Desc = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetIcon(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Icon = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetImage(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Image = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Title = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO struct {
	// example:
	//
	// demo
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	// example:
	//
	// 50
	Largest *string `json:"largest,omitempty" xml:"largest,omitempty"`
	// example:
	//
	// 40
	Middle *string `json:"middle,omitempty" xml:"middle,omitempty"`
	// example:
	//
	// 20
	Smallest *string `json:"smallest,omitempty" xml:"smallest,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetImage(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Image = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetLargest(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Largest = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetMiddle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Middle = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetSmallest(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Smallest = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN019zl3WZ22fNLxzx2cR_!!6000000007147-2-tps-125-45.png
	Logo     *string `json:"logo,omitempty" xml:"logo,omitempty"`
	TipsDesc *string `json:"tips_desc,omitempty" xml:"tips_desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01rJxjw61f3bXNHAmlk_!!6000000003951-2-tps-1050-675.png
	TipsImage *string `json:"tips_image,omitempty" xml:"tips_image,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) SetLogo(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips {
	s.Logo = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) SetTipsDesc(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips {
	s.TipsDesc = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) SetTipsImage(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips {
	s.TipsImage = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRule struct {
	// example:
	//
	// false
	Able *bool                                                                          `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRule) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRule) SetAble(v bool) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRule {
	s.Able = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRule) SetInfo(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRule {
	s.Info = v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetContent(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetCost(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetCostPercent(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetTimeStamp(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetTimeType(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.Title = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem struct {
	ExtraContents []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Index          *int32                                                                                       `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                    `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                      `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                      `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetExtraContents(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetIndex(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.Index = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetRefundSubItems(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetSubTableHead(v []*string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetTableHead(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.Title = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetType(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.Type = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	Title   *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) SetContent(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems struct {
	// isStruct : true
	//
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                       `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                       `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetIsStruct(v bool) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetPtc(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetRefundSubContents(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRule struct {
	// example:
	//
	// false
	Able *bool                                                                          `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRule) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRule) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRule) SetAble(v bool) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRule {
	s.Able = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRule) SetInfo(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRule {
	s.Info = v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetContent(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetCost(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetCostPercent(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetTimeStamp(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetTimeType(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.Title = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem struct {
	ExtraContents []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index          *int32                                                                                       `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                    `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                      `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                      `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetExtraContents(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetIndex(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.Index = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetRefundSubItems(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetSubTableHead(v []*string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetTableHead(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.Title = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetType(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.Type = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) SetContent(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems struct {
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                       `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                       `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetIsStruct(v bool) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetPtc(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetRefundSubContents(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRule struct {
	// example:
	//
	// false
	Able *bool                                                                        `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRule) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRule) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRule) SetAble(v bool) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRule {
	s.Able = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRule) SetInfo(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRule {
	s.Info = v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetContent(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetCost(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetCostPercent(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetTimeStamp(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetTimeType(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.Title = &v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule struct {
	// example:
	//
	// false
	Able *bool                                                                           `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule) SetAble(v bool) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule {
	s.Able = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule) SetInfo(v []*FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule {
	s.Info = v
	return s
}

type FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetContent(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetCost(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetCostPercent(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetTimeStamp(v int32) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetTimeType(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetTitle(v string) *FlightListingSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.Title = &v
	return s
}

type FlightListingSearchResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightListingSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightListingSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchResponse) GoString() string {
	return s.String()
}

func (s *FlightListingSearchResponse) SetHeaders(v map[string]*string) *FlightListingSearchResponse {
	s.Headers = v
	return s
}

func (s *FlightListingSearchResponse) SetStatusCode(v int32) *FlightListingSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightListingSearchResponse) SetBody(v *FlightListingSearchResponseBody) *FlightListingSearchResponse {
	s.Body = v
	return s
}

type FlightListingSearchV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// Dj2laAwE00
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightListingSearchV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2Headers) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2Headers) SetCommonHeaders(v map[string]*string) *FlightListingSearchV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightListingSearchV2Headers) SetXAcsBtripCorpToken(v string) *FlightListingSearchV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightListingSearchV2Request struct {
	// example:
	//
	// CA
	AirlineCode   *string  `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	CabinTypeList []*int32 `json:"cabin_type_list,omitempty" xml:"cabin_type_list,omitempty" type:"Repeated"`
	// example:
	//
	// true
	DirectOnly *bool `json:"direct_only,omitempty" xml:"direct_only,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// cheshi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// false
	NeedMultiClassPrice *bool `json:"need_multi_class_price,omitempty" xml:"need_multi_class_price,omitempty"`
	// example:
	//
	// true
	NeedQueryServiceFee *bool `json:"need_query_service_fee,omitempty" xml:"need_query_service_fee,omitempty"`
	// example:
	//
	// true
	NeedShareFlight *bool `json:"need_share_flight,omitempty" xml:"need_share_flight,omitempty"`
	// example:
	//
	// false
	NeedYCBestPrice *bool `json:"need_y_c_best_price,omitempty" xml:"need_y_c_best_price,omitempty"`
	// This parameter is required.
	SearchJourneys []*FlightListingSearchV2RequestSearchJourneys `json:"search_journeys,omitempty" xml:"search_journeys,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	SearchMode *int32 `json:"search_mode,omitempty" xml:"search_mode,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightListingSearchV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2Request) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2Request) SetAirlineCode(v string) *FlightListingSearchV2Request {
	s.AirlineCode = &v
	return s
}

func (s *FlightListingSearchV2Request) SetCabinTypeList(v []*int32) *FlightListingSearchV2Request {
	s.CabinTypeList = v
	return s
}

func (s *FlightListingSearchV2Request) SetDirectOnly(v bool) *FlightListingSearchV2Request {
	s.DirectOnly = &v
	return s
}

func (s *FlightListingSearchV2Request) SetIsvName(v string) *FlightListingSearchV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightListingSearchV2Request) SetNeedMultiClassPrice(v bool) *FlightListingSearchV2Request {
	s.NeedMultiClassPrice = &v
	return s
}

func (s *FlightListingSearchV2Request) SetNeedQueryServiceFee(v bool) *FlightListingSearchV2Request {
	s.NeedQueryServiceFee = &v
	return s
}

func (s *FlightListingSearchV2Request) SetNeedShareFlight(v bool) *FlightListingSearchV2Request {
	s.NeedShareFlight = &v
	return s
}

func (s *FlightListingSearchV2Request) SetNeedYCBestPrice(v bool) *FlightListingSearchV2Request {
	s.NeedYCBestPrice = &v
	return s
}

func (s *FlightListingSearchV2Request) SetSearchJourneys(v []*FlightListingSearchV2RequestSearchJourneys) *FlightListingSearchV2Request {
	s.SearchJourneys = v
	return s
}

func (s *FlightListingSearchV2Request) SetSearchMode(v int32) *FlightListingSearchV2Request {
	s.SearchMode = &v
	return s
}

func (s *FlightListingSearchV2Request) SetTripType(v int32) *FlightListingSearchV2Request {
	s.TripType = &v
	return s
}

type FlightListingSearchV2RequestSearchJourneys struct {
	// This parameter is required.
	//
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-09-01
	DepDate         *string                                                      `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	SelectedFlights []*FlightListingSearchV2RequestSearchJourneysSelectedFlights `json:"selected_flights,omitempty" xml:"selected_flights,omitempty" type:"Repeated"`
}

func (s FlightListingSearchV2RequestSearchJourneys) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2RequestSearchJourneys) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2RequestSearchJourneys) SetArrCityCode(v string) *FlightListingSearchV2RequestSearchJourneys {
	s.ArrCityCode = &v
	return s
}

func (s *FlightListingSearchV2RequestSearchJourneys) SetDepCityCode(v string) *FlightListingSearchV2RequestSearchJourneys {
	s.DepCityCode = &v
	return s
}

func (s *FlightListingSearchV2RequestSearchJourneys) SetDepDate(v string) *FlightListingSearchV2RequestSearchJourneys {
	s.DepDate = &v
	return s
}

func (s *FlightListingSearchV2RequestSearchJourneys) SetSelectedFlights(v []*FlightListingSearchV2RequestSearchJourneysSelectedFlights) *FlightListingSearchV2RequestSearchJourneys {
	s.SelectedFlights = v
	return s
}

type FlightListingSearchV2RequestSearchJourneysSelectedFlights struct {
	// example:
	//
	// HGH
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// PKX
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2023-09-01 07:10:00
	FlightTime *string `json:"flight_time,omitempty" xml:"flight_time,omitempty"`
	// example:
	//
	// HO3925
	MarketFlightNo *string `json:"market_flight_no,omitempty" xml:"market_flight_no,omitempty"`
	// example:
	//
	// CX601
	OperateFlightNo *string `json:"operate_flight_no,omitempty" xml:"operate_flight_no,omitempty"`
}

func (s FlightListingSearchV2RequestSearchJourneysSelectedFlights) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2RequestSearchJourneysSelectedFlights) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2RequestSearchJourneysSelectedFlights) SetArrAirportCode(v string) *FlightListingSearchV2RequestSearchJourneysSelectedFlights {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightListingSearchV2RequestSearchJourneysSelectedFlights) SetArrCityCode(v string) *FlightListingSearchV2RequestSearchJourneysSelectedFlights {
	s.ArrCityCode = &v
	return s
}

func (s *FlightListingSearchV2RequestSearchJourneysSelectedFlights) SetDepAirportCode(v string) *FlightListingSearchV2RequestSearchJourneysSelectedFlights {
	s.DepAirportCode = &v
	return s
}

func (s *FlightListingSearchV2RequestSearchJourneysSelectedFlights) SetDepCityCode(v string) *FlightListingSearchV2RequestSearchJourneysSelectedFlights {
	s.DepCityCode = &v
	return s
}

func (s *FlightListingSearchV2RequestSearchJourneysSelectedFlights) SetFlightTime(v string) *FlightListingSearchV2RequestSearchJourneysSelectedFlights {
	s.FlightTime = &v
	return s
}

func (s *FlightListingSearchV2RequestSearchJourneysSelectedFlights) SetMarketFlightNo(v string) *FlightListingSearchV2RequestSearchJourneysSelectedFlights {
	s.MarketFlightNo = &v
	return s
}

func (s *FlightListingSearchV2RequestSearchJourneysSelectedFlights) SetOperateFlightNo(v string) *FlightListingSearchV2RequestSearchJourneysSelectedFlights {
	s.OperateFlightNo = &v
	return s
}

type FlightListingSearchV2ShrinkRequest struct {
	// example:
	//
	// CA
	AirlineCode         *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	CabinTypeListShrink *string `json:"cabin_type_list,omitempty" xml:"cabin_type_list,omitempty"`
	// example:
	//
	// true
	DirectOnly *bool `json:"direct_only,omitempty" xml:"direct_only,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// cheshi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// false
	NeedMultiClassPrice *bool `json:"need_multi_class_price,omitempty" xml:"need_multi_class_price,omitempty"`
	// example:
	//
	// true
	NeedQueryServiceFee *bool `json:"need_query_service_fee,omitempty" xml:"need_query_service_fee,omitempty"`
	// example:
	//
	// true
	NeedShareFlight *bool `json:"need_share_flight,omitempty" xml:"need_share_flight,omitempty"`
	// example:
	//
	// false
	NeedYCBestPrice *bool `json:"need_y_c_best_price,omitempty" xml:"need_y_c_best_price,omitempty"`
	// This parameter is required.
	SearchJourneysShrink *string `json:"search_journeys,omitempty" xml:"search_journeys,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	SearchMode *int32 `json:"search_mode,omitempty" xml:"search_mode,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightListingSearchV2ShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ShrinkRequest) SetAirlineCode(v string) *FlightListingSearchV2ShrinkRequest {
	s.AirlineCode = &v
	return s
}

func (s *FlightListingSearchV2ShrinkRequest) SetCabinTypeListShrink(v string) *FlightListingSearchV2ShrinkRequest {
	s.CabinTypeListShrink = &v
	return s
}

func (s *FlightListingSearchV2ShrinkRequest) SetDirectOnly(v bool) *FlightListingSearchV2ShrinkRequest {
	s.DirectOnly = &v
	return s
}

func (s *FlightListingSearchV2ShrinkRequest) SetIsvName(v string) *FlightListingSearchV2ShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *FlightListingSearchV2ShrinkRequest) SetNeedMultiClassPrice(v bool) *FlightListingSearchV2ShrinkRequest {
	s.NeedMultiClassPrice = &v
	return s
}

func (s *FlightListingSearchV2ShrinkRequest) SetNeedQueryServiceFee(v bool) *FlightListingSearchV2ShrinkRequest {
	s.NeedQueryServiceFee = &v
	return s
}

func (s *FlightListingSearchV2ShrinkRequest) SetNeedShareFlight(v bool) *FlightListingSearchV2ShrinkRequest {
	s.NeedShareFlight = &v
	return s
}

func (s *FlightListingSearchV2ShrinkRequest) SetNeedYCBestPrice(v bool) *FlightListingSearchV2ShrinkRequest {
	s.NeedYCBestPrice = &v
	return s
}

func (s *FlightListingSearchV2ShrinkRequest) SetSearchJourneysShrink(v string) *FlightListingSearchV2ShrinkRequest {
	s.SearchJourneysShrink = &v
	return s
}

func (s *FlightListingSearchV2ShrinkRequest) SetSearchMode(v int32) *FlightListingSearchV2ShrinkRequest {
	s.SearchMode = &v
	return s
}

func (s *FlightListingSearchV2ShrinkRequest) SetTripType(v int32) *FlightListingSearchV2ShrinkRequest {
	s.TripType = &v
	return s
}

type FlightListingSearchV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightListingSearchV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210e842b16611337974412836dae27
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightListingSearchV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBody) SetCode(v string) *FlightListingSearchV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightListingSearchV2ResponseBody) SetMessage(v string) *FlightListingSearchV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightListingSearchV2ResponseBody) SetModule(v *FlightListingSearchV2ResponseBodyModule) *FlightListingSearchV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightListingSearchV2ResponseBody) SetRequestId(v string) *FlightListingSearchV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightListingSearchV2ResponseBody) SetSuccess(v bool) *FlightListingSearchV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightListingSearchV2ResponseBody) SetTraceId(v string) *FlightListingSearchV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightListingSearchV2ResponseBodyModule struct {
	FlightItemList []*FlightListingSearchV2ResponseBodyModuleFlightItemList `json:"flight_item_list,omitempty" xml:"flight_item_list,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	SearchMode *int32 `json:"search_mode,omitempty" xml:"search_mode,omitempty"`
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModule) SetFlightItemList(v []*FlightListingSearchV2ResponseBodyModuleFlightItemList) *FlightListingSearchV2ResponseBodyModule {
	s.FlightItemList = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModule) SetSearchMode(v int32) *FlightListingSearchV2ResponseBodyModule {
	s.SearchMode = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModule) SetTripType(v int32) *FlightListingSearchV2ResponseBodyModule {
	s.TripType = &v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemList struct {
	BestPriceItem      *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem        `json:"best_price_item,omitempty" xml:"best_price_item,omitempty" type:"Struct"`
	FlightJourneyInfos []*FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos `json:"flight_journey_infos,omitempty" xml:"flight_journey_infos,omitempty" type:"Repeated"`
	ItemList           []*FlightListingSearchV2ResponseBodyModuleFlightItemListItemList           `json:"item_list,omitempty" xml:"item_list,omitempty" type:"Repeated"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemList) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemList) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemList) SetBestPriceItem(v *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem) *FlightListingSearchV2ResponseBodyModuleFlightItemList {
	s.BestPriceItem = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemList) SetFlightJourneyInfos(v []*FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) *FlightListingSearchV2ResponseBodyModuleFlightItemList {
	s.FlightJourneyInfos = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemList) SetItemList(v []*FlightListingSearchV2ResponseBodyModuleFlightItemListItemList) *FlightListingSearchV2ResponseBodyModuleFlightItemList {
	s.ItemList = v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem struct {
	FlightRuleInfos map[string]*ModuleFlightItemListBestPriceItemFlightRuleInfosValue `json:"flight_rule_infos,omitempty" xml:"flight_rule_infos,omitempty"`
	// example:
	//
	// e50d380fc05942cc8ac57af8ae02f448_0
	ItemId             *string                                                                       `json:"item_id,omitempty" xml:"item_id,omitempty"`
	ShoppingItemMap    map[string]*ModuleFlightItemListBestPriceItemShoppingItemMapValue             `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
	SubItemPositionMap map[string][]*ModuleFlightItemListBestPriceItemSubItemPositionMapValue        `json:"sub_item_position_map,omitempty" xml:"sub_item_position_map,omitempty"`
	SubItems           []*FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItemSubItems `json:"sub_items,omitempty" xml:"sub_items,omitempty" type:"Repeated"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem) SetFlightRuleInfos(v map[string]*ModuleFlightItemListBestPriceItemFlightRuleInfosValue) *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem {
	s.FlightRuleInfos = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem) SetItemId(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem {
	s.ItemId = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem) SetShoppingItemMap(v map[string]*ModuleFlightItemListBestPriceItemShoppingItemMapValue) *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem {
	s.ShoppingItemMap = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem) SetSubItemPositionMap(v map[string][]*ModuleFlightItemListBestPriceItemSubItemPositionMapValue) *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem {
	s.SubItemPositionMap = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem) SetSubItems(v []*FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItemSubItems) *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItem {
	s.SubItems = v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItemSubItems struct {
	ShoppingItemMap map[string]*ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
	// example:
	//
	// 07df0bd9-f803-4a50-8449-f4bd675d9939
	UniqKey *string `json:"uniq_key,omitempty" xml:"uniq_key,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItemSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItemSubItems) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItemSubItems) SetShoppingItemMap(v map[string]*ModuleFlightItemListBestPriceItemSubItemsShoppingItemMapValue) *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItemSubItems {
	s.ShoppingItemMap = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItemSubItems) SetUniqKey(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListBestPriceItemSubItems {
	s.UniqKey = &v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos struct {
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 09:45
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 140
	Duration           *int32                                                                                       `json:"duration,omitempty" xml:"duration,omitempty"`
	Extensions         map[string]*string                                                                           `json:"extensions,omitempty" xml:"extensions,omitempty"`
	FlightSegmentInfos []*FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos `json:"flight_segment_infos,omitempty" xml:"flight_segment_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	TransferTime *int32 `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetArrCityCode(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.ArrCityCode = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetArrCityName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.ArrCityName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetArrTime(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.ArrTime = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetDepCityCode(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.DepCityCode = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetDepCityName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.DepCityName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetDepTime(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.DepTime = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetDuration(v int32) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.Duration = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetExtensions(v map[string]*string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.Extensions = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetFlightSegmentInfos(v []*FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.FlightSegmentInfos = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetJourneyIndex(v int32) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.JourneyIndex = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos) SetTransferTime(v int32) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.TransferTime = &v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos struct {
	AirlineInfo    *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// BJS
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 09:45
	ArrTime        *string                                                                                                  `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	BaggageDesc    *string                                                                                                  `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
	DepAirportInfo *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// HGH
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// duration
	//
	// example:
	//
	// 140
	Duration  *int32                 `json:"duration,omitempty" xml:"duration,omitempty"`
	ExtraInfo map[string]interface{} `json:"extra_info,omitempty" xml:"extra_info,omitempty"`
	// example:
	//
	// MU5131
	FlightNo        *string                                                                                                   `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightShareInfo *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo `json:"flight_share_info,omitempty" xml:"flight_share_info,omitempty" type:"Struct"`
	FlightSize      *string                                                                                                   `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	FlightStopInfo  *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo  `json:"flight_stop_info,omitempty" xml:"flight_stop_info,omitempty" type:"Struct"`
	// example:
	//
	// 320
	FlightType   *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty" xml:"manufacturer,omitempty"`
	MealDesc     *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	Miles        *int32  `json:"miles,omitempty" xml:"miles,omitempty"`
	OnTimeRate   *string `json:"on_time_rate,omitempty" xml:"on_time_rate,omitempty"`
	// example:
	//
	// 0
	OneMore     *int32  `json:"one_more,omitempty" xml:"one_more,omitempty"`
	OneMoreShow *string `json:"one_more_show,omitempty" xml:"one_more_show,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	// example:
	//
	// false
	Share           *bool   `json:"share,omitempty" xml:"share,omitempty"`
	ShortFlightSize *string `json:"short_flight_size,omitempty" xml:"short_flight_size,omitempty"`
	// example:
	//
	// false
	Stop               *bool   `json:"stop,omitempty" xml:"stop,omitempty"`
	TotalTime          *string `json:"total_time,omitempty" xml:"total_time,omitempty"`
	TransferTime       *string `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
	TransferTimeNumber *int32  `json:"transfer_time_number,omitempty" xml:"transfer_time_number,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetAirlineInfo(v *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.AirlineInfo = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetArrAirportInfo(v *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ArrAirportInfo = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetArrCityCode(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ArrCityCode = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetArrCityName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ArrCityName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetArrTime(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ArrTime = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetBaggageDesc(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.BaggageDesc = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetDepAirportInfo(v *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.DepAirportInfo = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetDepCityCode(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.DepCityCode = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetDepCityName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.DepCityName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetDepTime(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.DepTime = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetDuration(v int32) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.Duration = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetExtraInfo(v map[string]interface{}) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ExtraInfo = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetFlightNo(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.FlightNo = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetFlightShareInfo(v *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.FlightShareInfo = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetFlightSize(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.FlightSize = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetFlightStopInfo(v *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.FlightStopInfo = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetFlightType(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.FlightType = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetManufacturer(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.Manufacturer = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetMealDesc(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.MealDesc = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetMiles(v int32) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.Miles = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetOnTimeRate(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.OnTimeRate = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetOneMore(v int32) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.OneMore = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetOneMoreShow(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.OneMoreShow = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetSegmentIndex(v int32) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.SegmentIndex = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetShare(v bool) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.Share = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetShortFlightSize(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ShortFlightSize = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetStop(v bool) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.Stop = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetTotalTime(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.TotalTime = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetTransferTime(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.TransferTime = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetTransferTimeNumber(v int32) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.TransferTimeNumber = &v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// MU
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB15EXDFHY1gK0jSZTEXXXDQVXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineChineseName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineChineseShortName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineCode(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineIcon(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetCheapFlight(v bool) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo struct {
	// example:
	//
	// PKX
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// #FF7300
	AirportNameColor *string `json:"airport_name_color,omitempty" xml:"airport_name_color,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// --
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportCode(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportNameColor(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportNameColor = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportShortName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetTerminal(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.Terminal = &v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// #FF7300
	AirportNameColor *string `json:"airport_name_color,omitempty" xml:"airport_name_color,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportCode(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportNameColor(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportNameColor = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportShortName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetTerminal(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.Terminal = &v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo struct {
	OperatingAirlineInfo *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo `json:"operating_airline_info,omitempty" xml:"operating_airline_info,omitempty" type:"Struct"`
	// example:
	//
	// CX601
	OperatingFlightNo *string `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo) SetOperatingAirlineInfo(v *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo {
	s.OperatingAirlineInfo = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo) SetOperatingFlightNo(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo {
	s.OperatingFlightNo = &v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// DR
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB1gSXBFUT1gK0jSZFhXXaAtVXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineChineseName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineChineseShortName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineCode(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineIcon(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetCheapFlight(v bool) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo struct {
	// example:
	//
	// HGH
	StopAirport     *string `json:"stop_airport,omitempty" xml:"stop_airport,omitempty"`
	StopAirportName *string `json:"stop_airport_name,omitempty" xml:"stop_airport_name,omitempty"`
	// example:
	//
	// T3
	StopArrTerm *string `json:"stop_arr_term,omitempty" xml:"stop_arr_term,omitempty"`
	// example:
	//
	// BJS
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// HGH
	StopCityCode *string `json:"stop_city_code,omitempty" xml:"stop_city_code,omitempty"`
	// example:
	//
	// HGH
	StopCityName  *string   `json:"stop_city_name,omitempty" xml:"stop_city_name,omitempty"`
	StopCityNames []*string `json:"stop_city_names,omitempty" xml:"stop_city_names,omitempty" type:"Repeated"`
	// example:
	//
	// T4
	StopDepTerm *string `json:"stop_dep_term,omitempty" xml:"stop_dep_term,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	StopTime    *string `json:"stop_time,omitempty" xml:"stop_time,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopAirport(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopAirport = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopAirportName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopAirportName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopArrTerm(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopArrTerm = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopArrTime(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopArrTime = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityCode(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityCode = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityName(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityName = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityNames(v []*string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityNames = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopDepTerm(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopDepTerm = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopDepTime(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopDepTime = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopTime(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopTime = &v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListItemList struct {
	FlightRuleInfos map[string]*ModuleFlightItemListItemListFlightRuleInfosValue `json:"flight_rule_infos,omitempty" xml:"flight_rule_infos,omitempty"`
	// example:
	//
	// e50d380fc05942cc8ac57af8ae02f448_0
	ItemId             *string                                                                  `json:"item_id,omitempty" xml:"item_id,omitempty"`
	ShoppingItemMap    map[string]*ModuleFlightItemListItemListShoppingItemMapValue             `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
	SubItemPositionMap map[string][]*ModuleFlightItemListItemListSubItemPositionMapValue        `json:"sub_item_position_map,omitempty" xml:"sub_item_position_map,omitempty"`
	SubItems           []*FlightListingSearchV2ResponseBodyModuleFlightItemListItemListSubItems `json:"sub_items,omitempty" xml:"sub_items,omitempty" type:"Repeated"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListItemList) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListItemList) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListItemList) SetFlightRuleInfos(v map[string]*ModuleFlightItemListItemListFlightRuleInfosValue) *FlightListingSearchV2ResponseBodyModuleFlightItemListItemList {
	s.FlightRuleInfos = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListItemList) SetItemId(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListItemList {
	s.ItemId = &v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListItemList) SetShoppingItemMap(v map[string]*ModuleFlightItemListItemListShoppingItemMapValue) *FlightListingSearchV2ResponseBodyModuleFlightItemListItemList {
	s.ShoppingItemMap = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListItemList) SetSubItemPositionMap(v map[string][]*ModuleFlightItemListItemListSubItemPositionMapValue) *FlightListingSearchV2ResponseBodyModuleFlightItemListItemList {
	s.SubItemPositionMap = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListItemList) SetSubItems(v []*FlightListingSearchV2ResponseBodyModuleFlightItemListItemListSubItems) *FlightListingSearchV2ResponseBodyModuleFlightItemListItemList {
	s.SubItems = v
	return s
}

type FlightListingSearchV2ResponseBodyModuleFlightItemListItemListSubItems struct {
	ShoppingItemMap map[string]*ModuleFlightItemListItemListSubItemsShoppingItemMapValue `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
	// example:
	//
	// 07df0bd9-f803-4a50-8449-f4bd675d9939
	UniqKey *string `json:"uniq_key,omitempty" xml:"uniq_key,omitempty"`
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListItemListSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2ResponseBodyModuleFlightItemListItemListSubItems) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListItemListSubItems) SetShoppingItemMap(v map[string]*ModuleFlightItemListItemListSubItemsShoppingItemMapValue) *FlightListingSearchV2ResponseBodyModuleFlightItemListItemListSubItems {
	s.ShoppingItemMap = v
	return s
}

func (s *FlightListingSearchV2ResponseBodyModuleFlightItemListItemListSubItems) SetUniqKey(v string) *FlightListingSearchV2ResponseBodyModuleFlightItemListItemListSubItems {
	s.UniqKey = &v
	return s
}

type FlightListingSearchV2Response struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightListingSearchV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightListingSearchV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightListingSearchV2Response) GoString() string {
	return s.String()
}

func (s *FlightListingSearchV2Response) SetHeaders(v map[string]*string) *FlightListingSearchV2Response {
	s.Headers = v
	return s
}

func (s *FlightListingSearchV2Response) SetStatusCode(v int32) *FlightListingSearchV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightListingSearchV2Response) SetBody(v *FlightListingSearchV2ResponseBody) *FlightListingSearchV2Response {
	s.Body = v
	return s
}

type FlightModifyApplyV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightModifyApplyV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyApplyV2Headers) GoString() string {
	return s.String()
}

func (s *FlightModifyApplyV2Headers) SetCommonHeaders(v map[string]*string) *FlightModifyApplyV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightModifyApplyV2Headers) SetXAcsBtripCorpToken(v string) *FlightModifyApplyV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightModifyApplyV2Request struct {
	// example:
	//
	// 72e961f8-930b-43c1-a4ca-18a6f28349c6distributionModifyCacheInfo
	CacheKey *string `json:"cache_key,omitempty" xml:"cache_key,omitempty"`
	// example:
	//
	// 17816963077
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	// example:
	//
	// name
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// fa2fb23a859a4e78b5ddb87a6a23094b_0
	ItemId *string `json:"item_id,omitempty" xml:"item_id,omitempty"`
	// example:
	//
	// 1017002195370467138
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1019195786853020
	OutSubOrderId             *string                                                `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	PassengerSegmentRelations []*FlightModifyApplyV2RequestPassengerSegmentRelations `json:"passenger_segment_relations,omitempty" xml:"passenger_segment_relations,omitempty" type:"Repeated"`
	Reason                    *string                                                `json:"reason,omitempty" xml:"reason,omitempty"`
	// sessionId
	//
	// example:
	//
	// a2ffebfe733742aab5c491d960ba3d59
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// true
	Voluntary *bool `json:"voluntary,omitempty" xml:"voluntary,omitempty"`
}

func (s FlightModifyApplyV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyApplyV2Request) GoString() string {
	return s.String()
}

func (s *FlightModifyApplyV2Request) SetCacheKey(v string) *FlightModifyApplyV2Request {
	s.CacheKey = &v
	return s
}

func (s *FlightModifyApplyV2Request) SetContactPhone(v string) *FlightModifyApplyV2Request {
	s.ContactPhone = &v
	return s
}

func (s *FlightModifyApplyV2Request) SetIsvName(v string) *FlightModifyApplyV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightModifyApplyV2Request) SetItemId(v string) *FlightModifyApplyV2Request {
	s.ItemId = &v
	return s
}

func (s *FlightModifyApplyV2Request) SetOrderId(v int64) *FlightModifyApplyV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightModifyApplyV2Request) SetOutOrderId(v string) *FlightModifyApplyV2Request {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyApplyV2Request) SetOutSubOrderId(v string) *FlightModifyApplyV2Request {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightModifyApplyV2Request) SetPassengerSegmentRelations(v []*FlightModifyApplyV2RequestPassengerSegmentRelations) *FlightModifyApplyV2Request {
	s.PassengerSegmentRelations = v
	return s
}

func (s *FlightModifyApplyV2Request) SetReason(v string) *FlightModifyApplyV2Request {
	s.Reason = &v
	return s
}

func (s *FlightModifyApplyV2Request) SetSessionId(v string) *FlightModifyApplyV2Request {
	s.SessionId = &v
	return s
}

func (s *FlightModifyApplyV2Request) SetVoluntary(v bool) *FlightModifyApplyV2Request {
	s.Voluntary = &v
	return s
}

type FlightModifyApplyV2RequestPassengerSegmentRelations struct {
	// example:
	//
	// 3243028
	PassengerId   *string   `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	SegmentIdList []*string `json:"segment_id_list,omitempty" xml:"segment_id_list,omitempty" type:"Repeated"`
}

func (s FlightModifyApplyV2RequestPassengerSegmentRelations) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyApplyV2RequestPassengerSegmentRelations) GoString() string {
	return s.String()
}

func (s *FlightModifyApplyV2RequestPassengerSegmentRelations) SetPassengerId(v string) *FlightModifyApplyV2RequestPassengerSegmentRelations {
	s.PassengerId = &v
	return s
}

func (s *FlightModifyApplyV2RequestPassengerSegmentRelations) SetSegmentIdList(v []*string) *FlightModifyApplyV2RequestPassengerSegmentRelations {
	s.SegmentIdList = v
	return s
}

type FlightModifyApplyV2ShrinkRequest struct {
	// example:
	//
	// 72e961f8-930b-43c1-a4ca-18a6f28349c6distributionModifyCacheInfo
	CacheKey *string `json:"cache_key,omitempty" xml:"cache_key,omitempty"`
	// example:
	//
	// 17816963077
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	// example:
	//
	// name
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// fa2fb23a859a4e78b5ddb87a6a23094b_0
	ItemId *string `json:"item_id,omitempty" xml:"item_id,omitempty"`
	// example:
	//
	// 1017002195370467138
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1019195786853020
	OutSubOrderId                   *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	PassengerSegmentRelationsShrink *string `json:"passenger_segment_relations,omitempty" xml:"passenger_segment_relations,omitempty"`
	Reason                          *string `json:"reason,omitempty" xml:"reason,omitempty"`
	// sessionId
	//
	// example:
	//
	// a2ffebfe733742aab5c491d960ba3d59
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// true
	Voluntary *bool `json:"voluntary,omitempty" xml:"voluntary,omitempty"`
}

func (s FlightModifyApplyV2ShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyApplyV2ShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightModifyApplyV2ShrinkRequest) SetCacheKey(v string) *FlightModifyApplyV2ShrinkRequest {
	s.CacheKey = &v
	return s
}

func (s *FlightModifyApplyV2ShrinkRequest) SetContactPhone(v string) *FlightModifyApplyV2ShrinkRequest {
	s.ContactPhone = &v
	return s
}

func (s *FlightModifyApplyV2ShrinkRequest) SetIsvName(v string) *FlightModifyApplyV2ShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *FlightModifyApplyV2ShrinkRequest) SetItemId(v string) *FlightModifyApplyV2ShrinkRequest {
	s.ItemId = &v
	return s
}

func (s *FlightModifyApplyV2ShrinkRequest) SetOrderId(v int64) *FlightModifyApplyV2ShrinkRequest {
	s.OrderId = &v
	return s
}

func (s *FlightModifyApplyV2ShrinkRequest) SetOutOrderId(v string) *FlightModifyApplyV2ShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyApplyV2ShrinkRequest) SetOutSubOrderId(v string) *FlightModifyApplyV2ShrinkRequest {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightModifyApplyV2ShrinkRequest) SetPassengerSegmentRelationsShrink(v string) *FlightModifyApplyV2ShrinkRequest {
	s.PassengerSegmentRelationsShrink = &v
	return s
}

func (s *FlightModifyApplyV2ShrinkRequest) SetReason(v string) *FlightModifyApplyV2ShrinkRequest {
	s.Reason = &v
	return s
}

func (s *FlightModifyApplyV2ShrinkRequest) SetSessionId(v string) *FlightModifyApplyV2ShrinkRequest {
	s.SessionId = &v
	return s
}

func (s *FlightModifyApplyV2ShrinkRequest) SetVoluntary(v bool) *FlightModifyApplyV2ShrinkRequest {
	s.Voluntary = &v
	return s
}

type FlightModifyApplyV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightModifyApplyV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 212a8b8216915622178333839e665d
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightModifyApplyV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyApplyV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightModifyApplyV2ResponseBody) SetCode(v string) *FlightModifyApplyV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightModifyApplyV2ResponseBody) SetMessage(v string) *FlightModifyApplyV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightModifyApplyV2ResponseBody) SetModule(v *FlightModifyApplyV2ResponseBodyModule) *FlightModifyApplyV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightModifyApplyV2ResponseBody) SetRequestId(v string) *FlightModifyApplyV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightModifyApplyV2ResponseBody) SetSuccess(v bool) *FlightModifyApplyV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightModifyApplyV2ResponseBody) SetTraceId(v string) *FlightModifyApplyV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightModifyApplyV2ResponseBodyModule struct {
	// example:
	//
	// 1017002195370467138
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1019195786853020
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	// example:
	//
	// 1019195786853020
	SubOrderId *string `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
}

func (s FlightModifyApplyV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyApplyV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightModifyApplyV2ResponseBodyModule) SetOrderId(v string) *FlightModifyApplyV2ResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *FlightModifyApplyV2ResponseBodyModule) SetOutOrderId(v string) *FlightModifyApplyV2ResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyApplyV2ResponseBodyModule) SetOutSubOrderId(v string) *FlightModifyApplyV2ResponseBodyModule {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightModifyApplyV2ResponseBodyModule) SetSubOrderId(v string) *FlightModifyApplyV2ResponseBodyModule {
	s.SubOrderId = &v
	return s
}

type FlightModifyApplyV2Response struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightModifyApplyV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightModifyApplyV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyApplyV2Response) GoString() string {
	return s.String()
}

func (s *FlightModifyApplyV2Response) SetHeaders(v map[string]*string) *FlightModifyApplyV2Response {
	s.Headers = v
	return s
}

func (s *FlightModifyApplyV2Response) SetStatusCode(v int32) *FlightModifyApplyV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightModifyApplyV2Response) SetBody(v *FlightModifyApplyV2ResponseBody) *FlightModifyApplyV2Response {
	s.Body = v
	return s
}

type FlightModifyCancelV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightModifyCancelV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyCancelV2Headers) GoString() string {
	return s.String()
}

func (s *FlightModifyCancelV2Headers) SetCommonHeaders(v map[string]*string) *FlightModifyCancelV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightModifyCancelV2Headers) SetXAcsBtripCorpToken(v string) *FlightModifyCancelV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightModifyCancelV2Request struct {
	IsvName       *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	OrderId       *int64  `json:"order_id,omitempty" xml:"order_id,omitempty"`
	OutOrderId    *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	SubOrderId    *int64  `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
}

func (s FlightModifyCancelV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyCancelV2Request) GoString() string {
	return s.String()
}

func (s *FlightModifyCancelV2Request) SetIsvName(v string) *FlightModifyCancelV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightModifyCancelV2Request) SetOrderId(v int64) *FlightModifyCancelV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightModifyCancelV2Request) SetOutOrderId(v string) *FlightModifyCancelV2Request {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyCancelV2Request) SetOutSubOrderId(v string) *FlightModifyCancelV2Request {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightModifyCancelV2Request) SetSubOrderId(v int64) *FlightModifyCancelV2Request {
	s.SubOrderId = &v
	return s
}

type FlightModifyCancelV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module map[string]interface{} `json:"module,omitempty" xml:"module,omitempty"`
	// requestId
	//
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightModifyCancelV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyCancelV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightModifyCancelV2ResponseBody) SetCode(v string) *FlightModifyCancelV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightModifyCancelV2ResponseBody) SetMessage(v string) *FlightModifyCancelV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightModifyCancelV2ResponseBody) SetModule(v map[string]interface{}) *FlightModifyCancelV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightModifyCancelV2ResponseBody) SetRequestId(v string) *FlightModifyCancelV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightModifyCancelV2ResponseBody) SetSuccess(v bool) *FlightModifyCancelV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightModifyCancelV2ResponseBody) SetTraceId(v string) *FlightModifyCancelV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightModifyCancelV2Response struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightModifyCancelV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightModifyCancelV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyCancelV2Response) GoString() string {
	return s.String()
}

func (s *FlightModifyCancelV2Response) SetHeaders(v map[string]*string) *FlightModifyCancelV2Response {
	s.Headers = v
	return s
}

func (s *FlightModifyCancelV2Response) SetStatusCode(v int32) *FlightModifyCancelV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightModifyCancelV2Response) SetBody(v *FlightModifyCancelV2ResponseBody) *FlightModifyCancelV2Response {
	s.Body = v
	return s
}

type FlightModifyListingSearchV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightModifyListingSearchV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2Headers) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2Headers) SetCommonHeaders(v map[string]*string) *FlightModifyListingSearchV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightModifyListingSearchV2Headers) SetXAcsBtripCorpToken(v string) *FlightModifyListingSearchV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightModifyListingSearchV2Request struct {
	CabinClass                    []*int32  `json:"cabin_class,omitempty" xml:"cabin_class,omitempty" type:"Repeated"`
	DepDate                       []*string `json:"dep_date,omitempty" xml:"dep_date,omitempty" type:"Repeated"`
	InterfaceCallerIsSupportRetry *bool     `json:"interface_caller_is_support_retry,omitempty" xml:"interface_caller_is_support_retry,omitempty"`
	// example:
	//
	// name
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1017002195370467138
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId                *string                                                        `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerSegmentRelations []*FlightModifyListingSearchV2RequestPassengerSegmentRelations `json:"passenger_segment_relations,omitempty" xml:"passenger_segment_relations,omitempty" type:"Repeated"`
	// example:
	//
	// 2
	SearchMode       *int32                                                `json:"search_mode,omitempty" xml:"search_mode,omitempty"`
	SearchRetryToken *string                                               `json:"search_retry_token,omitempty" xml:"search_retry_token,omitempty"`
	SelectedSegments []*FlightModifyListingSearchV2RequestSelectedSegments `json:"selected_segments,omitempty" xml:"selected_segments,omitempty" type:"Repeated"`
	// example:
	//
	// a2ffebfe733742aab5c491d960ba3d59
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// true
	Voluntary *bool `json:"voluntary,omitempty" xml:"voluntary,omitempty"`
}

func (s FlightModifyListingSearchV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2Request) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2Request) SetCabinClass(v []*int32) *FlightModifyListingSearchV2Request {
	s.CabinClass = v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetDepDate(v []*string) *FlightModifyListingSearchV2Request {
	s.DepDate = v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetInterfaceCallerIsSupportRetry(v bool) *FlightModifyListingSearchV2Request {
	s.InterfaceCallerIsSupportRetry = &v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetIsvName(v string) *FlightModifyListingSearchV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetOrderId(v int64) *FlightModifyListingSearchV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetOutOrderId(v string) *FlightModifyListingSearchV2Request {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetPassengerSegmentRelations(v []*FlightModifyListingSearchV2RequestPassengerSegmentRelations) *FlightModifyListingSearchV2Request {
	s.PassengerSegmentRelations = v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetSearchMode(v int32) *FlightModifyListingSearchV2Request {
	s.SearchMode = &v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetSearchRetryToken(v string) *FlightModifyListingSearchV2Request {
	s.SearchRetryToken = &v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetSelectedSegments(v []*FlightModifyListingSearchV2RequestSelectedSegments) *FlightModifyListingSearchV2Request {
	s.SelectedSegments = v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetSessionId(v string) *FlightModifyListingSearchV2Request {
	s.SessionId = &v
	return s
}

func (s *FlightModifyListingSearchV2Request) SetVoluntary(v bool) *FlightModifyListingSearchV2Request {
	s.Voluntary = &v
	return s
}

type FlightModifyListingSearchV2RequestPassengerSegmentRelations struct {
	// example:
	//
	// 3243028
	PassengerId   *string   `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	SegmentIdList []*string `json:"segment_id_list,omitempty" xml:"segment_id_list,omitempty" type:"Repeated"`
}

func (s FlightModifyListingSearchV2RequestPassengerSegmentRelations) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2RequestPassengerSegmentRelations) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2RequestPassengerSegmentRelations) SetPassengerId(v string) *FlightModifyListingSearchV2RequestPassengerSegmentRelations {
	s.PassengerId = &v
	return s
}

func (s *FlightModifyListingSearchV2RequestPassengerSegmentRelations) SetSegmentIdList(v []*string) *FlightModifyListingSearchV2RequestPassengerSegmentRelations {
	s.SegmentIdList = v
	return s
}

type FlightModifyListingSearchV2RequestSelectedSegments struct {
	// example:
	//
	// XIL
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2023-09-17 18:15:00
	DepDateTime *string `json:"dep_date_time,omitempty" xml:"dep_date_time,omitempty"`
	// example:
	//
	// 0
	JourneySeq *int32 `json:"journey_seq,omitempty" xml:"journey_seq,omitempty"`
	// example:
	//
	// CA8625
	MarketingFlightNo *string `json:"marketing_flight_no,omitempty" xml:"marketing_flight_no,omitempty"`
	// example:
	//
	// MU8625
	OperatingFlightNo *string `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
	// example:
	//
	// 0
	SegmentSeq *int32 `json:"segment_seq,omitempty" xml:"segment_seq,omitempty"`
}

func (s FlightModifyListingSearchV2RequestSelectedSegments) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2RequestSelectedSegments) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2RequestSelectedSegments) SetArrCityCode(v string) *FlightModifyListingSearchV2RequestSelectedSegments {
	s.ArrCityCode = &v
	return s
}

func (s *FlightModifyListingSearchV2RequestSelectedSegments) SetDepCityCode(v string) *FlightModifyListingSearchV2RequestSelectedSegments {
	s.DepCityCode = &v
	return s
}

func (s *FlightModifyListingSearchV2RequestSelectedSegments) SetDepDateTime(v string) *FlightModifyListingSearchV2RequestSelectedSegments {
	s.DepDateTime = &v
	return s
}

func (s *FlightModifyListingSearchV2RequestSelectedSegments) SetJourneySeq(v int32) *FlightModifyListingSearchV2RequestSelectedSegments {
	s.JourneySeq = &v
	return s
}

func (s *FlightModifyListingSearchV2RequestSelectedSegments) SetMarketingFlightNo(v string) *FlightModifyListingSearchV2RequestSelectedSegments {
	s.MarketingFlightNo = &v
	return s
}

func (s *FlightModifyListingSearchV2RequestSelectedSegments) SetOperatingFlightNo(v string) *FlightModifyListingSearchV2RequestSelectedSegments {
	s.OperatingFlightNo = &v
	return s
}

func (s *FlightModifyListingSearchV2RequestSelectedSegments) SetSegmentSeq(v int32) *FlightModifyListingSearchV2RequestSelectedSegments {
	s.SegmentSeq = &v
	return s
}

type FlightModifyListingSearchV2ShrinkRequest struct {
	CabinClassShrink              *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	DepDateShrink                 *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	InterfaceCallerIsSupportRetry *bool   `json:"interface_caller_is_support_retry,omitempty" xml:"interface_caller_is_support_retry,omitempty"`
	// example:
	//
	// name
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1017002195370467138
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId                      *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerSegmentRelationsShrink *string `json:"passenger_segment_relations,omitempty" xml:"passenger_segment_relations,omitempty"`
	// example:
	//
	// 2
	SearchMode             *int32  `json:"search_mode,omitempty" xml:"search_mode,omitempty"`
	SearchRetryToken       *string `json:"search_retry_token,omitempty" xml:"search_retry_token,omitempty"`
	SelectedSegmentsShrink *string `json:"selected_segments,omitempty" xml:"selected_segments,omitempty"`
	// example:
	//
	// a2ffebfe733742aab5c491d960ba3d59
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// true
	Voluntary *bool `json:"voluntary,omitempty" xml:"voluntary,omitempty"`
}

func (s FlightModifyListingSearchV2ShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetCabinClassShrink(v string) *FlightModifyListingSearchV2ShrinkRequest {
	s.CabinClassShrink = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetDepDateShrink(v string) *FlightModifyListingSearchV2ShrinkRequest {
	s.DepDateShrink = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetInterfaceCallerIsSupportRetry(v bool) *FlightModifyListingSearchV2ShrinkRequest {
	s.InterfaceCallerIsSupportRetry = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetIsvName(v string) *FlightModifyListingSearchV2ShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetOrderId(v int64) *FlightModifyListingSearchV2ShrinkRequest {
	s.OrderId = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetOutOrderId(v string) *FlightModifyListingSearchV2ShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetPassengerSegmentRelationsShrink(v string) *FlightModifyListingSearchV2ShrinkRequest {
	s.PassengerSegmentRelationsShrink = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetSearchMode(v int32) *FlightModifyListingSearchV2ShrinkRequest {
	s.SearchMode = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetSearchRetryToken(v string) *FlightModifyListingSearchV2ShrinkRequest {
	s.SearchRetryToken = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetSelectedSegmentsShrink(v string) *FlightModifyListingSearchV2ShrinkRequest {
	s.SelectedSegmentsShrink = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetSessionId(v string) *FlightModifyListingSearchV2ShrinkRequest {
	s.SessionId = &v
	return s
}

func (s *FlightModifyListingSearchV2ShrinkRequest) SetVoluntary(v bool) *FlightModifyListingSearchV2ShrinkRequest {
	s.Voluntary = &v
	return s
}

type FlightModifyListingSearchV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightModifyListingSearchV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// requestId
	//
	// example:
	//
	// 2136019116915615924561621e06ee
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBody) SetCode(v string) *FlightModifyListingSearchV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBody) SetMessage(v string) *FlightModifyListingSearchV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBody) SetModule(v *FlightModifyListingSearchV2ResponseBodyModule) *FlightModifyListingSearchV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBody) SetRequestId(v string) *FlightModifyListingSearchV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBody) SetSuccess(v bool) *FlightModifyListingSearchV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBody) SetTraceId(v string) *FlightModifyListingSearchV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModule struct {
	DirectFlightList []*FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList `json:"direct_flight_list,omitempty" xml:"direct_flight_list,omitempty" type:"Repeated"`
	NextReqWaitTime  *int64                                                           `json:"next_req_wait_time,omitempty" xml:"next_req_wait_time,omitempty"`
	Retry            *bool                                                            `json:"retry,omitempty" xml:"retry,omitempty"`
	SearchRetryToken *string                                                          `json:"search_retry_token,omitempty" xml:"search_retry_token,omitempty"`
	// example:
	//
	// a2ffebfe733742aab5c491d960ba3d59
	SessionId          *string                                                            `json:"session_id,omitempty" xml:"session_id,omitempty"`
	TransferFlightList []*FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList `json:"transfer_flight_list,omitempty" xml:"transfer_flight_list,omitempty" type:"Repeated"`
	TransferTitle      *string                                                            `json:"transfer_title,omitempty" xml:"transfer_title,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModule) SetDirectFlightList(v []*FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) *FlightModifyListingSearchV2ResponseBodyModule {
	s.DirectFlightList = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModule) SetNextReqWaitTime(v int64) *FlightModifyListingSearchV2ResponseBodyModule {
	s.NextReqWaitTime = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModule) SetRetry(v bool) *FlightModifyListingSearchV2ResponseBodyModule {
	s.Retry = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModule) SetSearchRetryToken(v string) *FlightModifyListingSearchV2ResponseBodyModule {
	s.SearchRetryToken = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModule) SetSessionId(v string) *FlightModifyListingSearchV2ResponseBodyModule {
	s.SessionId = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModule) SetTransferFlightList(v []*FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) *FlightModifyListingSearchV2ResponseBodyModule {
	s.TransferFlightList = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModule) SetTransferTitle(v string) *FlightModifyListingSearchV2ResponseBodyModule {
	s.TransferTitle = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList struct {
	AirlineInfo    *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// BJS
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 2023-09-18 10:25:00
	ArrTime        *string                                                                      `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	CabinClass     *string                                                                      `json:"cabinClass,omitempty" xml:"cabinClass,omitempty"`
	CabinClassName *string                                                                      `json:"cabinClassName,omitempty" xml:"cabinClassName,omitempty"`
	DepAirportInfo *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// XIL
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2023-09-18 09:10:00
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 240
	Duration *int32 `json:"duration,omitempty" xml:"duration,omitempty"`
	// example:
	//
	// CA1110
	FlightNo           *string                                                                          `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightShareInfo    *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfo    `json:"flight_share_info,omitempty" xml:"flight_share_info,omitempty" type:"Struct"`
	FlightSize         *string                                                                          `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	FlightStopInfo     *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo     `json:"flight_stop_info,omitempty" xml:"flight_stop_info,omitempty" type:"Struct"`
	FlightTransferInfo *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo `json:"flight_transfer_info,omitempty" xml:"flight_transfer_info,omitempty" type:"Struct"`
	// example:
	//
	// ARJ
	FlightType *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	// example:
	//
	// 0
	JourneySeq *int32 `json:"journey_seq,omitempty" xml:"journey_seq,omitempty"`
	// example:
	//
	// 8
	LeftNum      *string                                                                    `json:"left_num,omitempty" xml:"left_num,omitempty"`
	Manufacturer *string                                                                    `json:"manufacturer,omitempty" xml:"manufacturer,omitempty"`
	MealDesc     *string                                                                    `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	PriceInfoDTO *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO `json:"price_info_d_t_o,omitempty" xml:"price_info_d_t_o,omitempty" type:"Struct"`
	// example:
	//
	// 0
	SegmentSeq *int32 `json:"segment_seq,omitempty" xml:"segment_seq,omitempty"`
	// example:
	//
	// false
	Share           *bool   `json:"share,omitempty" xml:"share,omitempty"`
	ShortFlightSize *string `json:"short_flight_size,omitempty" xml:"short_flight_size,omitempty"`
	SpanDay         *string `json:"span_day,omitempty" xml:"span_day,omitempty"`
	// example:
	//
	// false
	Stop *bool `json:"stop,omitempty" xml:"stop,omitempty"`
	// example:
	//
	// false
	Transfer *bool `json:"transfer,omitempty" xml:"transfer,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetAirlineInfo(v *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.AirlineInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetArrAirportInfo(v *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.ArrAirportInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetArrCityCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.ArrCityCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetArrTime(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.ArrTime = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetCabinClass(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.CabinClass = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetCabinClassName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.CabinClassName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetDepAirportInfo(v *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.DepAirportInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetDepCityCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.DepCityCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetDepTime(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.DepTime = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetDuration(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.Duration = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetFlightNo(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.FlightNo = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetFlightShareInfo(v *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfo) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.FlightShareInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetFlightSize(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.FlightSize = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetFlightStopInfo(v *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.FlightStopInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetFlightTransferInfo(v *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.FlightTransferInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetFlightType(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.FlightType = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetJourneySeq(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.JourneySeq = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetLeftNum(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.LeftNum = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetManufacturer(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.Manufacturer = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetMealDesc(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.MealDesc = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetPriceInfoDTO(v *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.PriceInfoDTO = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetSegmentSeq(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.SegmentSeq = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetShare(v bool) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.Share = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetShortFlightSize(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.ShortFlightSize = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetSpanDay(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.SpanDay = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetStop(v bool) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.Stop = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList) SetTransfer(v bool) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightList {
	s.Transfer = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// CA
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// //gw.alicdn.com/tfs/TB12fJAFHr1gK0jSZR0XXbP8XXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo) SetAirlineChineseName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo) SetAirlineChineseShortName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo) SetAirlineCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo) SetAirlineIcon(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo) SetCheapFlight(v bool) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo struct {
	// example:
	//
	// XIL
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo) SetAirportCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo) SetAirportName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo) SetAirportShortName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo) SetTerminal(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListArrAirportInfo {
	s.Terminal = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo struct {
	// example:
	//
	// PEK
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// T2
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo) SetAirportCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo) SetAirportName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo) SetAirportShortName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo) SetTerminal(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListDepAirportInfo {
	s.Terminal = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfo struct {
	OperatingAirlineInfo *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo `json:"operating_airline_info,omitempty" xml:"operating_airline_info,omitempty" type:"Struct"`
	OperatingFlightNo    *string                                                                                           `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfo) SetOperatingAirlineInfo(v *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfo {
	s.OperatingAirlineInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfo) SetOperatingFlightNo(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfo {
	s.OperatingFlightNo = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	AirlineCode             *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineIcon             *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo) SetAirlineChineseName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo) SetAirlineChineseShortName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo) SetAirlineCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo) SetAirlineIcon(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo) SetCheapFlight(v bool) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightShareInfoOperatingAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo struct {
	StopAirport  *string `json:"stop_airport,omitempty" xml:"stop_airport,omitempty"`
	StopArrTerm  *string `json:"stop_arr_term,omitempty" xml:"stop_arr_term,omitempty"`
	StopArrTime  *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	StopCityCode *string `json:"stop_city_code,omitempty" xml:"stop_city_code,omitempty"`
	StopCityName *string `json:"stop_city_name,omitempty" xml:"stop_city_name,omitempty"`
	StopDepTerm  *string `json:"stop_dep_term,omitempty" xml:"stop_dep_term,omitempty"`
	StopDepTime  *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo) SetStopAirport(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo {
	s.StopAirport = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo) SetStopArrTerm(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo {
	s.StopArrTerm = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo) SetStopArrTime(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo {
	s.StopArrTime = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo) SetStopCityCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo {
	s.StopCityCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo) SetStopCityName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo {
	s.StopCityName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo) SetStopDepTerm(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo {
	s.StopDepTerm = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo) SetStopDepTime(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightStopInfo {
	s.StopDepTime = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo struct {
	TransferAirlineInfo *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo `json:"transfer_airline_info,omitempty" xml:"transfer_airline_info,omitempty" type:"Struct"`
	TransferCityCode    *string                                                                                             `json:"transfer_city_code,omitempty" xml:"transfer_city_code,omitempty"`
	TransferCityName    *string                                                                                             `json:"transfer_city_name,omitempty" xml:"transfer_city_name,omitempty"`
	TransferDepTime     *string                                                                                             `json:"transfer_dep_time,omitempty" xml:"transfer_dep_time,omitempty"`
	TransferFlightNo    *string                                                                                             `json:"transfer_flight_no,omitempty" xml:"transfer_flight_no,omitempty"`
	TransferFlightSize  *string                                                                                             `json:"transfer_flight_size,omitempty" xml:"transfer_flight_size,omitempty"`
	// example:
	//
	// false
	TransferShare *bool `json:"transfer_share,omitempty" xml:"transfer_share,omitempty"`
	// example:
	//
	// 60
	TransferStopTime *int32 `json:"transfer_stop_time,omitempty" xml:"transfer_stop_time,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) SetTransferAirlineInfo(v *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo {
	s.TransferAirlineInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) SetTransferCityCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo {
	s.TransferCityCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) SetTransferCityName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo {
	s.TransferCityName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) SetTransferDepTime(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo {
	s.TransferDepTime = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) SetTransferFlightNo(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo {
	s.TransferFlightNo = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) SetTransferFlightSize(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo {
	s.TransferFlightSize = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) SetTransferShare(v bool) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo {
	s.TransferShare = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo) SetTransferStopTime(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfo {
	s.TransferStopTime = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	AirlineCode             *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineIcon             *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo) SetAirlineChineseName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo) SetAirlineChineseShortName(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo) SetAirlineCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo) SetAirlineIcon(v string) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo) SetCheapFlight(v bool) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListFlightTransferInfoTransferAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO struct {
	// example:
	//
	// 126000
	AdultPrice *int32 `json:"adult_price,omitempty" xml:"adult_price,omitempty"`
	// example:
	//
	// 11000
	AdultTax *int32 `json:"adult_tax,omitempty" xml:"adult_tax,omitempty"`
	// example:
	//
	// 137000
	AdultTotalPrice *int32 `json:"adult_total_price,omitempty" xml:"adult_total_price,omitempty"`
	// example:
	//
	// 126000
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 64000
	ChildPrice *int32 `json:"child_price,omitempty" xml:"child_price,omitempty"`
	// example:
	//
	// 2000
	ChildTax *int32 `json:"child_tax,omitempty" xml:"child_tax,omitempty"`
	// example:
	//
	// 66000
	ChildTotalPrice *int32 `json:"child_total_price,omitempty" xml:"child_total_price,omitempty"`
	// example:
	//
	// 12000
	InfantPrice *int32 `json:"infant_price,omitempty" xml:"infant_price,omitempty"`
	// example:
	//
	// 0
	InfantTax *int32 `json:"infant_tax,omitempty" xml:"infant_tax,omitempty"`
	// example:
	//
	// 12000
	InfantTotalPrice *int32 `json:"infant_total_price,omitempty" xml:"infant_total_price,omitempty"`
	// example:
	//
	// 1300
	OriginalAdultPrice *int32 `json:"original_adult_price,omitempty" xml:"original_adult_price,omitempty"`
	// example:
	//
	// 12300
	OriginalAdultTotalPrice *int32                                                                                       `json:"original_adult_total_price,omitempty" xml:"original_adult_total_price,omitempty"`
	ReShopPriceInfoDTO      *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO `json:"re_shop_price_info_d_t_o,omitempty" xml:"re_shop_price_info_d_t_o,omitempty" type:"Struct"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetAdultPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.AdultPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetAdultTax(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.AdultTax = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetAdultTotalPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.AdultTotalPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetBeforeControlPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.BeforeControlPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetChildPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.ChildPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetChildTax(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.ChildTax = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetChildTotalPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.ChildTotalPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetInfantPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.InfantPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetInfantTax(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.InfantTax = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetInfantTotalPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.InfantTotalPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetOriginalAdultPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.OriginalAdultPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetOriginalAdultTotalPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.OriginalAdultTotalPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO) SetReShopPriceInfoDTO(v *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTO {
	s.ReShopPriceInfoDTO = v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO struct {
	// example:
	//
	// -1
	ReShopAdultChangeFee *int32 `json:"re_shop_adult_change_fee,omitempty" xml:"re_shop_adult_change_fee,omitempty"`
	// example:
	//
	// -1
	ReShopAdultPrice *int32 `json:"re_shop_adult_price,omitempty" xml:"re_shop_adult_price,omitempty"`
	// example:
	//
	// -1
	ReShopAdultPriceGap *int32 `json:"re_shop_adult_price_gap,omitempty" xml:"re_shop_adult_price_gap,omitempty"`
	// example:
	//
	// -1
	ReShopChildChangeFee *int32 `json:"re_shop_child_change_fee,omitempty" xml:"re_shop_child_change_fee,omitempty"`
	// example:
	//
	// -1
	ReShopChildPrice *int32 `json:"re_shop_child_price,omitempty" xml:"re_shop_child_price,omitempty"`
	// example:
	//
	// -1
	ReShopChildPriceGap *int32 `json:"re_shop_child_price_gap,omitempty" xml:"re_shop_child_price_gap,omitempty"`
	// example:
	//
	// -1
	ReShopInfChangeFee *int32 `json:"re_shop_inf_change_fee,omitempty" xml:"re_shop_inf_change_fee,omitempty"`
	// example:
	//
	// -1
	ReShopInfPrice *int32 `json:"re_shop_inf_price,omitempty" xml:"re_shop_inf_price,omitempty"`
	// example:
	//
	// -1
	ReShopInfPriceGap *int32 `json:"re_shop_inf_price_gap,omitempty" xml:"re_shop_inf_price_gap,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultChangeFee(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultChangeFee = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultPriceGap(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultPriceGap = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopChildChangeFee(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildChangeFee = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopChildPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopChildPriceGap(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildPriceGap = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopInfChangeFee(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfChangeFee = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopInfPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopInfPriceGap(v int32) *FlightModifyListingSearchV2ResponseBodyModuleDirectFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfPriceGap = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList struct {
	AirlineInfo    *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	ArrCityCode    *string                                                                        `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrTime        *string                                                                        `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	CabinClass     *string                                                                        `json:"cabinClass,omitempty" xml:"cabinClass,omitempty"`
	CabinClassName *string                                                                        `json:"cabinClassName,omitempty" xml:"cabinClassName,omitempty"`
	DepAirportInfo *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	DepCityCode    *string                                                                        `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepTime        *string                                                                        `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 240
	Duration           *int32                                                                             `json:"duration,omitempty" xml:"duration,omitempty"`
	FlightNo           *string                                                                            `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightShareInfo    *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfo    `json:"flight_share_info,omitempty" xml:"flight_share_info,omitempty" type:"Struct"`
	FlightSize         *string                                                                            `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	FlightStopInfo     *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo     `json:"flight_stop_info,omitempty" xml:"flight_stop_info,omitempty" type:"Struct"`
	FlightTransferInfo *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo `json:"flight_transfer_info,omitempty" xml:"flight_transfer_info,omitempty" type:"Struct"`
	FlightType         *string                                                                            `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	// example:
	//
	// 0
	JourneySeq *int32 `json:"journey_seq,omitempty" xml:"journey_seq,omitempty"`
	// example:
	//
	// 7
	LeftNum      *string                                                                      `json:"left_num,omitempty" xml:"left_num,omitempty"`
	Manufacturer *string                                                                      `json:"manufacturer,omitempty" xml:"manufacturer,omitempty"`
	MealDesc     *string                                                                      `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	PriceInfoDTO *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO `json:"price_info_d_t_o,omitempty" xml:"price_info_d_t_o,omitempty" type:"Struct"`
	// example:
	//
	// 0
	SegmentSeq *int32 `json:"segment_seq,omitempty" xml:"segment_seq,omitempty"`
	// example:
	//
	// false
	Share           *bool   `json:"share,omitempty" xml:"share,omitempty"`
	ShortFlightSize *string `json:"short_flight_size,omitempty" xml:"short_flight_size,omitempty"`
	SpanDay         *string `json:"span_day,omitempty" xml:"span_day,omitempty"`
	// example:
	//
	// false
	Stop *bool `json:"stop,omitempty" xml:"stop,omitempty"`
	// example:
	//
	// false
	Transfer *bool `json:"transfer,omitempty" xml:"transfer,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetAirlineInfo(v *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.AirlineInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetArrAirportInfo(v *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.ArrAirportInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetArrCityCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.ArrCityCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetArrTime(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.ArrTime = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetCabinClass(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.CabinClass = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetCabinClassName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.CabinClassName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetDepAirportInfo(v *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.DepAirportInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetDepCityCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.DepCityCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetDepTime(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.DepTime = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetDuration(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.Duration = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetFlightNo(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.FlightNo = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetFlightShareInfo(v *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfo) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.FlightShareInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetFlightSize(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.FlightSize = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetFlightStopInfo(v *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.FlightStopInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetFlightTransferInfo(v *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.FlightTransferInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetFlightType(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.FlightType = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetJourneySeq(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.JourneySeq = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetLeftNum(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.LeftNum = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetManufacturer(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.Manufacturer = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetMealDesc(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.MealDesc = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetPriceInfoDTO(v *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.PriceInfoDTO = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetSegmentSeq(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.SegmentSeq = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetShare(v bool) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.Share = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetShortFlightSize(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.ShortFlightSize = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetSpanDay(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.SpanDay = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetStop(v bool) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.Stop = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList) SetTransfer(v bool) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightList {
	s.Transfer = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	AirlineCode             *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineIcon             *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	CheapFlight             *bool   `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo) SetAirlineChineseName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo) SetAirlineChineseShortName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo) SetAirlineCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo) SetAirlineIcon(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo) SetCheapFlight(v bool) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo struct {
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	Terminal         *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo) SetAirportCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo) SetAirportName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo) SetAirportShortName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo) SetTerminal(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListArrAirportInfo {
	s.Terminal = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo struct {
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	Terminal         *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo) SetAirportCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo) SetAirportName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo) SetAirportShortName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo) SetTerminal(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListDepAirportInfo {
	s.Terminal = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfo struct {
	OperatingAirlineInfo *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo `json:"operating_airline_info,omitempty" xml:"operating_airline_info,omitempty" type:"Struct"`
	OperatingFlightNo    *string                                                                                             `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfo) SetOperatingAirlineInfo(v *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfo {
	s.OperatingAirlineInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfo) SetOperatingFlightNo(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfo {
	s.OperatingFlightNo = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	AirlineCode             *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineIcon             *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo) SetAirlineChineseName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo) SetAirlineChineseShortName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo) SetAirlineCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo) SetAirlineIcon(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo) SetCheapFlight(v bool) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightShareInfoOperatingAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo struct {
	StopAirport  *string `json:"stop_airport,omitempty" xml:"stop_airport,omitempty"`
	StopArrTerm  *string `json:"stop_arr_term,omitempty" xml:"stop_arr_term,omitempty"`
	StopArrTime  *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	StopCityCode *string `json:"stop_city_code,omitempty" xml:"stop_city_code,omitempty"`
	StopCityName *string `json:"stop_city_name,omitempty" xml:"stop_city_name,omitempty"`
	StopDepTerm  *string `json:"stop_dep_term,omitempty" xml:"stop_dep_term,omitempty"`
	StopDepTime  *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo) SetStopAirport(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo {
	s.StopAirport = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo) SetStopArrTerm(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo {
	s.StopArrTerm = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo) SetStopArrTime(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo {
	s.StopArrTime = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo) SetStopCityCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo {
	s.StopCityCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo) SetStopCityName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo {
	s.StopCityName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo) SetStopDepTerm(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo {
	s.StopDepTerm = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo) SetStopDepTime(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightStopInfo {
	s.StopDepTime = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo struct {
	TransferAirlineInfo *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo `json:"transfer_airline_info,omitempty" xml:"transfer_airline_info,omitempty" type:"Struct"`
	TransferCityCode    *string                                                                                               `json:"transfer_city_code,omitempty" xml:"transfer_city_code,omitempty"`
	TransferCityName    *string                                                                                               `json:"transfer_city_name,omitempty" xml:"transfer_city_name,omitempty"`
	TransferDepTime     *string                                                                                               `json:"transfer_dep_time,omitempty" xml:"transfer_dep_time,omitempty"`
	TransferFlightNo    *string                                                                                               `json:"transfer_flight_no,omitempty" xml:"transfer_flight_no,omitempty"`
	TransferFlightSize  *string                                                                                               `json:"transfer_flight_size,omitempty" xml:"transfer_flight_size,omitempty"`
	// example:
	//
	// false
	TransferShare *bool `json:"transfer_share,omitempty" xml:"transfer_share,omitempty"`
	// example:
	//
	// 20
	TransferStopTime *int32 `json:"transfer_stop_time,omitempty" xml:"transfer_stop_time,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) SetTransferAirlineInfo(v *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo {
	s.TransferAirlineInfo = v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) SetTransferCityCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo {
	s.TransferCityCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) SetTransferCityName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo {
	s.TransferCityName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) SetTransferDepTime(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo {
	s.TransferDepTime = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) SetTransferFlightNo(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo {
	s.TransferFlightNo = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) SetTransferFlightSize(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo {
	s.TransferFlightSize = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) SetTransferShare(v bool) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo {
	s.TransferShare = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo) SetTransferStopTime(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfo {
	s.TransferStopTime = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	AirlineCode             *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineIcon             *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo) SetAirlineChineseName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo) SetAirlineChineseShortName(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo) SetAirlineCode(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo) SetAirlineIcon(v string) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo) SetCheapFlight(v bool) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListFlightTransferInfoTransferAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO struct {
	// example:
	//
	// 1000
	AdultPrice *int32 `json:"adult_price,omitempty" xml:"adult_price,omitempty"`
	// example:
	//
	// 1000
	AdultTax *int32 `json:"adult_tax,omitempty" xml:"adult_tax,omitempty"`
	// example:
	//
	// 1000
	AdultTotalPrice *int32 `json:"adult_total_price,omitempty" xml:"adult_total_price,omitempty"`
	// example:
	//
	// 1000
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 1000
	ChildPrice *int32 `json:"child_price,omitempty" xml:"child_price,omitempty"`
	// example:
	//
	// 1000
	ChildTax *int32 `json:"child_tax,omitempty" xml:"child_tax,omitempty"`
	// example:
	//
	// 1000
	ChildTotalPrice *int32 `json:"child_total_price,omitempty" xml:"child_total_price,omitempty"`
	// example:
	//
	// 1000
	InfantPrice *int32 `json:"infant_price,omitempty" xml:"infant_price,omitempty"`
	// example:
	//
	// 1000
	InfantTax *int32 `json:"infant_tax,omitempty" xml:"infant_tax,omitempty"`
	// example:
	//
	// 1000
	InfantTotalPrice *int32 `json:"infant_total_price,omitempty" xml:"infant_total_price,omitempty"`
	// example:
	//
	// 1000
	OriginalAdultPrice *int32 `json:"original_adult_price,omitempty" xml:"original_adult_price,omitempty"`
	// example:
	//
	// 1000
	OriginalAdultTotalPrice *int32                                                                                         `json:"original_adult_total_price,omitempty" xml:"original_adult_total_price,omitempty"`
	ReShopPriceInfoDTO      *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO `json:"re_shop_price_info_d_t_o,omitempty" xml:"re_shop_price_info_d_t_o,omitempty" type:"Struct"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetAdultPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.AdultPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetAdultTax(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.AdultTax = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetAdultTotalPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.AdultTotalPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetBeforeControlPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.BeforeControlPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetChildPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.ChildPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetChildTax(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.ChildTax = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetChildTotalPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.ChildTotalPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetInfantPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.InfantPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetInfantTax(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.InfantTax = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetInfantTotalPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.InfantTotalPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetOriginalAdultPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.OriginalAdultPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetOriginalAdultTotalPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.OriginalAdultTotalPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO) SetReShopPriceInfoDTO(v *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTO {
	s.ReShopPriceInfoDTO = v
	return s
}

type FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO struct {
	// example:
	//
	// -1
	ReShopAdultChangeFee *int32 `json:"re_shop_adult_change_fee,omitempty" xml:"re_shop_adult_change_fee,omitempty"`
	// example:
	//
	// -1
	ReShopAdultPrice *int32 `json:"re_shop_adult_price,omitempty" xml:"re_shop_adult_price,omitempty"`
	// example:
	//
	// -1
	ReShopAdultPriceGap *int32 `json:"re_shop_adult_price_gap,omitempty" xml:"re_shop_adult_price_gap,omitempty"`
	// example:
	//
	// -1
	ReShopChildChangeFee *int32 `json:"re_shop_child_change_fee,omitempty" xml:"re_shop_child_change_fee,omitempty"`
	// example:
	//
	// -1
	ReShopChildPrice *int32 `json:"re_shop_child_price,omitempty" xml:"re_shop_child_price,omitempty"`
	// example:
	//
	// -1
	ReShopChildPriceGap *int32 `json:"re_shop_child_price_gap,omitempty" xml:"re_shop_child_price_gap,omitempty"`
	// example:
	//
	// -1
	ReShopInfChangeFee *int32 `json:"re_shop_inf_change_fee,omitempty" xml:"re_shop_inf_change_fee,omitempty"`
	// example:
	//
	// -1
	ReShopInfPrice *int32 `json:"re_shop_inf_price,omitempty" xml:"re_shop_inf_price,omitempty"`
	// example:
	//
	// -1
	ReShopInfPriceGap *int32 `json:"re_shop_inf_price_gap,omitempty" xml:"re_shop_inf_price_gap,omitempty"`
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultChangeFee(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultChangeFee = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultPriceGap(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultPriceGap = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopChildChangeFee(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildChangeFee = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopChildPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopChildPriceGap(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildPriceGap = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopInfChangeFee(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfChangeFee = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopInfPrice(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfPrice = &v
	return s
}

func (s *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO) SetReShopInfPriceGap(v int32) *FlightModifyListingSearchV2ResponseBodyModuleTransferFlightListPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfPriceGap = &v
	return s
}

type FlightModifyListingSearchV2Response struct {
	Headers    map[string]*string                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightModifyListingSearchV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightModifyListingSearchV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyListingSearchV2Response) GoString() string {
	return s.String()
}

func (s *FlightModifyListingSearchV2Response) SetHeaders(v map[string]*string) *FlightModifyListingSearchV2Response {
	s.Headers = v
	return s
}

func (s *FlightModifyListingSearchV2Response) SetStatusCode(v int32) *FlightModifyListingSearchV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightModifyListingSearchV2Response) SetBody(v *FlightModifyListingSearchV2ResponseBody) *FlightModifyListingSearchV2Response {
	s.Body = v
	return s
}

type FlightModifyOrderDetailV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightModifyOrderDetailV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOrderDetailV2Headers) GoString() string {
	return s.String()
}

func (s *FlightModifyOrderDetailV2Headers) SetCommonHeaders(v map[string]*string) *FlightModifyOrderDetailV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightModifyOrderDetailV2Headers) SetXAcsBtripCorpToken(v string) *FlightModifyOrderDetailV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightModifyOrderDetailV2Request struct {
	// example:
	//
	// name
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1019195786853020
	ModifyApplyId *string `json:"modify_apply_id,omitempty" xml:"modify_apply_id,omitempty"`
	// example:
	//
	// false
	NeedQueryServiceFee *bool `json:"need_query_service_fee,omitempty" xml:"need_query_service_fee,omitempty"`
	// example:
	//
	// 1017002195370467200
	OrderId          *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	OutModifyApplyId *string `json:"out_modify_apply_id,omitempty" xml:"out_modify_apply_id,omitempty"`
	OutOrderId       *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s FlightModifyOrderDetailV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOrderDetailV2Request) GoString() string {
	return s.String()
}

func (s *FlightModifyOrderDetailV2Request) SetIsvName(v string) *FlightModifyOrderDetailV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightModifyOrderDetailV2Request) SetModifyApplyId(v string) *FlightModifyOrderDetailV2Request {
	s.ModifyApplyId = &v
	return s
}

func (s *FlightModifyOrderDetailV2Request) SetNeedQueryServiceFee(v bool) *FlightModifyOrderDetailV2Request {
	s.NeedQueryServiceFee = &v
	return s
}

func (s *FlightModifyOrderDetailV2Request) SetOrderId(v string) *FlightModifyOrderDetailV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightModifyOrderDetailV2Request) SetOutModifyApplyId(v string) *FlightModifyOrderDetailV2Request {
	s.OutModifyApplyId = &v
	return s
}

func (s *FlightModifyOrderDetailV2Request) SetOutOrderId(v string) *FlightModifyOrderDetailV2Request {
	s.OutOrderId = &v
	return s
}

type FlightModifyOrderDetailV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightModifyOrderDetailV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210bc2dc16839612026565712dcbe6
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightModifyOrderDetailV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOrderDetailV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightModifyOrderDetailV2ResponseBody) SetCode(v string) *FlightModifyOrderDetailV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBody) SetMessage(v string) *FlightModifyOrderDetailV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBody) SetModule(v *FlightModifyOrderDetailV2ResponseBodyModule) *FlightModifyOrderDetailV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBody) SetRequestId(v string) *FlightModifyOrderDetailV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBody) SetSuccess(v bool) *FlightModifyOrderDetailV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBody) SetTraceId(v string) *FlightModifyOrderDetailV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightModifyOrderDetailV2ResponseBodyModule struct {
	// example:
	//
	// 2023-08-14 11:28:01
	ApplyTime *string `json:"apply_time,omitempty" xml:"apply_time,omitempty"`
	// example:
	//
	// 17635462345@163.com
	BookUserEmail *string `json:"book_user_email,omitempty" xml:"book_user_email,omitempty"`
	BookUserName  *string `json:"book_user_name,omitempty" xml:"book_user_name,omitempty"`
	// example:
	//
	// 17635462345
	BookuserPhone      *string                                                          `json:"bookuser_phone,omitempty" xml:"bookuser_phone,omitempty"`
	ChangeFailReason   *string                                                          `json:"change_fail_reason,omitempty" xml:"change_fail_reason,omitempty"`
	ContactInfoDTO     *FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO       `json:"contact_info_d_t_o,omitempty" xml:"contact_info_d_t_o,omitempty" type:"Struct"`
	DestFlightInfoDTOS []*FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS `json:"dest_flight_info_d_t_o_s,omitempty" xml:"dest_flight_info_d_t_o_s,omitempty" type:"Repeated"`
	// example:
	//
	// 2023-08-14 11:48:01
	LastPayTime *string `json:"last_pay_time,omitempty" xml:"last_pay_time,omitempty"`
	// example:
	//
	// 1017124195788186048
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017124195788186048
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1019195836916029
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	// example:
	//
	// 2023-08-14 11:38:01
	PayTime *string `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	Reason  *string `json:"reason,omitempty" xml:"reason,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 1019195836916029
	SubOrderId *int64 `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
	// example:
	//
	// 2023-08-19 15:24:08
	TicketTime *string `json:"ticket_time,omitempty" xml:"ticket_time,omitempty"`
	// example:
	//
	// 100
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
	// example:
	//
	// 0
	TotalServiceFeePrice *int64                                                         `json:"total_service_fee_price,omitempty" xml:"total_service_fee_price,omitempty"`
	TravelerInfoDTOS     []*FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS `json:"traveler_info_d_t_o_s,omitempty" xml:"traveler_info_d_t_o_s,omitempty" type:"Repeated"`
}

func (s FlightModifyOrderDetailV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOrderDetailV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetApplyTime(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.ApplyTime = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetBookUserEmail(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.BookUserEmail = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetBookUserName(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.BookUserName = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetBookuserPhone(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.BookuserPhone = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetChangeFailReason(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.ChangeFailReason = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetContactInfoDTO(v *FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.ContactInfoDTO = v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetDestFlightInfoDTOS(v []*FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.DestFlightInfoDTOS = v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetLastPayTime(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.LastPayTime = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetOrderId(v int64) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetOutOrderId(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetOutSubOrderId(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetPayTime(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.PayTime = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetReason(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.Reason = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetStatus(v int32) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.Status = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetSubOrderId(v int64) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.SubOrderId = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetTicketTime(v string) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.TicketTime = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetTotalPrice(v int64) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.TotalPrice = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetTotalServiceFeePrice(v int64) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.TotalServiceFeePrice = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModule) SetTravelerInfoDTOS(v []*FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) *FlightModifyOrderDetailV2ResponseBodyModule {
	s.TravelerInfoDTOS = v
	return s
}

type FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO struct {
	// example:
	//
	// 17816963077@163.com
	ContactEmail *string `json:"contact_email,omitempty" xml:"contact_email,omitempty"`
	ContactName  *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	// example:
	//
	// 17816963077
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	// example:
	//
	// false
	SendMsgToPassenger *bool `json:"send_msg_to_passenger,omitempty" xml:"send_msg_to_passenger,omitempty"`
}

func (s FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO) SetContactEmail(v string) *FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO {
	s.ContactEmail = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO) SetContactName(v string) *FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO {
	s.ContactName = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO) SetContactPhone(v string) *FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO {
	s.ContactPhone = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO) SetSendMsgToPassenger(v bool) *FlightModifyOrderDetailV2ResponseBodyModuleContactInfoDTO {
	s.SendMsgToPassenger = &v
	return s
}

type FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS struct {
	// example:
	//
	// MU
	AirlineCode    *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineIconUrl *string `json:"airline_icon_url,omitempty" xml:"airline_icon_url,omitempty"`
	AirlineName    *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	// example:
	//
	// HGH
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrAirportName *string `json:"arr_airport_name,omitempty" xml:"arr_airport_name,omitempty"`
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	ArrTerminal *string `json:"arr_terminal,omitempty" xml:"arr_terminal,omitempty"`
	// example:
	//
	// 2023-10-03 09:30:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// Y
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	// example:
	//
	// 10
	CabinDiscount         *int64  `json:"cabin_discount,omitempty" xml:"cabin_discount,omitempty"`
	CarrierAirlineCode    *string `json:"carrier_airline_code,omitempty" xml:"carrier_airline_code,omitempty"`
	CarrierAirlineIconUrl *string `json:"carrier_airline_icon_url,omitempty" xml:"carrier_airline_icon_url,omitempty"`
	CarrierAirlineName    *string `json:"carrier_airline_name,omitempty" xml:"carrier_airline_name,omitempty"`
	CarrierFlightNo       *string `json:"carrier_flight_no,omitempty" xml:"carrier_flight_no,omitempty"`
	// example:
	//
	// PKX
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepAirportName *string `json:"dep_airport_name,omitempty" xml:"dep_airport_name,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	DepTerminal *string `json:"dep_terminal,omitempty" xml:"dep_terminal,omitempty"`
	// example:
	//
	// 2023-10-03 07:30:00
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// MU5193
	FlightNo   *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightType *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	MealDesc   *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	// example:
	//
	// 1194012
	SegmentIId      *string                                                                       `json:"segmentI_id,omitempty" xml:"segmentI_id,omitempty"`
	SegmentPosition *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOSSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
	StopArrTime     *string                                                                       `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	StopCity        *string                                                                       `json:"stop_city,omitempty" xml:"stop_city,omitempty"`
	StopDepTime     *string                                                                       `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
}

func (s FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) GoString() string {
	return s.String()
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetAirlineCode(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.AirlineCode = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetAirlineIconUrl(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.AirlineIconUrl = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetAirlineName(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.AirlineName = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetArrAirportCode(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetArrAirportName(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.ArrAirportName = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetArrCityCode(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.ArrCityCode = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetArrCityName(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.ArrCityName = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetArrTerminal(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.ArrTerminal = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetArrTime(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.ArrTime = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetCabin(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.Cabin = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetCabinClass(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.CabinClass = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetCabinClassName(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.CabinClassName = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetCabinDiscount(v int64) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.CabinDiscount = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetCarrierAirlineCode(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.CarrierAirlineCode = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetCarrierAirlineIconUrl(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.CarrierAirlineIconUrl = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetCarrierAirlineName(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.CarrierAirlineName = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetCarrierFlightNo(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.CarrierFlightNo = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetDepAirportCode(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.DepAirportCode = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetDepAirportName(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.DepAirportName = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetDepCityCode(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.DepCityCode = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetDepCityName(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.DepCityName = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetDepTerminal(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.DepTerminal = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetDepTime(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.DepTime = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetFlightNo(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.FlightNo = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetFlightType(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.FlightType = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetMealDesc(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.MealDesc = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetSegmentIId(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.SegmentIId = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetSegmentPosition(v *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOSSegmentPosition) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.SegmentPosition = v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetStopArrTime(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.StopArrTime = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetStopCity(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.StopCity = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS) SetStopDepTime(v string) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOS {
	s.StopDepTime = &v
	return s
}

type FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOSSegmentPosition struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOSSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOSSegmentPosition) GoString() string {
	return s.String()
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOSSegmentPosition) SetJourneyIndex(v int32) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOSSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOSSegmentPosition) SetSegmentIndex(v int32) *FlightModifyOrderDetailV2ResponseBodyModuleDestFlightInfoDTOSSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS struct {
	// example:
	//
	// 2000-08-19
	BirthDate *string `json:"birth_date,omitempty" xml:"birth_date,omitempty"`
	// example:
	//
	// 430131413423435353
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 0
	CertType  *int32                                                                `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	ChangeFee *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee `json:"change_fee,omitempty" xml:"change_fee,omitempty" type:"Struct"`
	// example:
	//
	// 1
	Gender          *int32    `json:"gender,omitempty" xml:"gender,omitempty"`
	OriginTicketNos []*string `json:"origin_ticket_nos,omitempty" xml:"origin_ticket_nos,omitempty" type:"Repeated"`
	// example:
	//
	// 12172819047252004460056
	PassengerId   *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// example:
	//
	// 17635462345
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// 3243028
	Pid       *int64    `json:"pid,omitempty" xml:"pid,omitempty"`
	TicketNos []*string `json:"ticket_nos,omitempty" xml:"ticket_nos,omitempty" type:"Repeated"`
}

func (s FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) GoString() string {
	return s.String()
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetBirthDate(v string) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.BirthDate = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetCertNo(v string) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.CertNo = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetCertType(v int32) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.CertType = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetChangeFee(v *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.ChangeFee = v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetGender(v int32) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.Gender = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetOriginTicketNos(v []*string) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.OriginTicketNos = v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetPassengerId(v string) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.PassengerId = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetPassengerName(v string) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.PassengerName = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetPassengerType(v int32) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.PassengerType = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetPhone(v string) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.Phone = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetPid(v int64) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.Pid = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS) SetTicketNos(v []*string) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.TicketNos = v
	return s
}

type FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee struct {
	ChangeFee    *int64 `json:"change_fee,omitempty" xml:"change_fee,omitempty"`
	ServiceFee   *int64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	UpgradePrice *int64 `json:"upgrade_price,omitempty" xml:"upgrade_price,omitempty"`
}

func (s FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee) GoString() string {
	return s.String()
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee) SetChangeFee(v int64) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee {
	s.ChangeFee = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee) SetServiceFee(v int64) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee {
	s.ServiceFee = &v
	return s
}

func (s *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee) SetUpgradePrice(v int64) *FlightModifyOrderDetailV2ResponseBodyModuleTravelerInfoDTOSChangeFee {
	s.UpgradePrice = &v
	return s
}

type FlightModifyOrderDetailV2Response struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightModifyOrderDetailV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightModifyOrderDetailV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOrderDetailV2Response) GoString() string {
	return s.String()
}

func (s *FlightModifyOrderDetailV2Response) SetHeaders(v map[string]*string) *FlightModifyOrderDetailV2Response {
	s.Headers = v
	return s
}

func (s *FlightModifyOrderDetailV2Response) SetStatusCode(v int32) *FlightModifyOrderDetailV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightModifyOrderDetailV2Response) SetBody(v *FlightModifyOrderDetailV2ResponseBody) *FlightModifyOrderDetailV2Response {
	s.Body = v
	return s
}

type FlightModifyOtaSearchV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightModifyOtaSearchV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2Headers) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2Headers) SetCommonHeaders(v map[string]*string) *FlightModifyOtaSearchV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightModifyOtaSearchV2Headers) SetXAcsBtripCorpToken(v string) *FlightModifyOtaSearchV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightModifyOtaSearchV2Request struct {
	CabinClass []*int32  `json:"cabin_class,omitempty" xml:"cabin_class,omitempty" type:"Repeated"`
	DepDate    []*string `json:"dep_date,omitempty" xml:"dep_date,omitempty" type:"Repeated"`
	// example:
	//
	// name
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1017002195370467200
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467200
	OutOrderId                *string                                                    `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerSegmentRelations []*FlightModifyOtaSearchV2RequestPassengerSegmentRelations `json:"passenger_segment_relations,omitempty" xml:"passenger_segment_relations,omitempty" type:"Repeated"`
	SelectedSegments          []*FlightModifyOtaSearchV2RequestSelectedSegments          `json:"selected_segments,omitempty" xml:"selected_segments,omitempty" type:"Repeated"`
	// example:
	//
	// 590f17eca9374f20ac7e8ed8a7db2f35
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// true
	Voluntary *bool `json:"voluntary,omitempty" xml:"voluntary,omitempty"`
}

func (s FlightModifyOtaSearchV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2Request) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2Request) SetCabinClass(v []*int32) *FlightModifyOtaSearchV2Request {
	s.CabinClass = v
	return s
}

func (s *FlightModifyOtaSearchV2Request) SetDepDate(v []*string) *FlightModifyOtaSearchV2Request {
	s.DepDate = v
	return s
}

func (s *FlightModifyOtaSearchV2Request) SetIsvName(v string) *FlightModifyOtaSearchV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightModifyOtaSearchV2Request) SetOrderId(v int64) *FlightModifyOtaSearchV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightModifyOtaSearchV2Request) SetOutOrderId(v string) *FlightModifyOtaSearchV2Request {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyOtaSearchV2Request) SetPassengerSegmentRelations(v []*FlightModifyOtaSearchV2RequestPassengerSegmentRelations) *FlightModifyOtaSearchV2Request {
	s.PassengerSegmentRelations = v
	return s
}

func (s *FlightModifyOtaSearchV2Request) SetSelectedSegments(v []*FlightModifyOtaSearchV2RequestSelectedSegments) *FlightModifyOtaSearchV2Request {
	s.SelectedSegments = v
	return s
}

func (s *FlightModifyOtaSearchV2Request) SetSessionId(v string) *FlightModifyOtaSearchV2Request {
	s.SessionId = &v
	return s
}

func (s *FlightModifyOtaSearchV2Request) SetVoluntary(v bool) *FlightModifyOtaSearchV2Request {
	s.Voluntary = &v
	return s
}

type FlightModifyOtaSearchV2RequestPassengerSegmentRelations struct {
	// example:
	//
	// 3243028
	PassengerId   *string   `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	SegmentIdList []*string `json:"segment_id_list,omitempty" xml:"segment_id_list,omitempty" type:"Repeated"`
}

func (s FlightModifyOtaSearchV2RequestPassengerSegmentRelations) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2RequestPassengerSegmentRelations) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2RequestPassengerSegmentRelations) SetPassengerId(v string) *FlightModifyOtaSearchV2RequestPassengerSegmentRelations {
	s.PassengerId = &v
	return s
}

func (s *FlightModifyOtaSearchV2RequestPassengerSegmentRelations) SetSegmentIdList(v []*string) *FlightModifyOtaSearchV2RequestPassengerSegmentRelations {
	s.SegmentIdList = v
	return s
}

type FlightModifyOtaSearchV2RequestSelectedSegments struct {
	// example:
	//
	// BJS
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// XIL
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2023-09-18 09:10:00
	DepDateTime *string `json:"dep_date_time,omitempty" xml:"dep_date_time,omitempty"`
	// example:
	//
	// 0
	JourneySeq *int32 `json:"journey_seq,omitempty" xml:"journey_seq,omitempty"`
	// example:
	//
	// CA1110
	MarketingFlightNo *string `json:"marketing_flight_no,omitempty" xml:"marketing_flight_no,omitempty"`
	// example:
	//
	// MU8625
	OperatingFlightNo *string `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
	// example:
	//
	// 0
	SegmentSeq *int32 `json:"segment_seq,omitempty" xml:"segment_seq,omitempty"`
}

func (s FlightModifyOtaSearchV2RequestSelectedSegments) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2RequestSelectedSegments) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2RequestSelectedSegments) SetArrCityCode(v string) *FlightModifyOtaSearchV2RequestSelectedSegments {
	s.ArrCityCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2RequestSelectedSegments) SetDepCityCode(v string) *FlightModifyOtaSearchV2RequestSelectedSegments {
	s.DepCityCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2RequestSelectedSegments) SetDepDateTime(v string) *FlightModifyOtaSearchV2RequestSelectedSegments {
	s.DepDateTime = &v
	return s
}

func (s *FlightModifyOtaSearchV2RequestSelectedSegments) SetJourneySeq(v int32) *FlightModifyOtaSearchV2RequestSelectedSegments {
	s.JourneySeq = &v
	return s
}

func (s *FlightModifyOtaSearchV2RequestSelectedSegments) SetMarketingFlightNo(v string) *FlightModifyOtaSearchV2RequestSelectedSegments {
	s.MarketingFlightNo = &v
	return s
}

func (s *FlightModifyOtaSearchV2RequestSelectedSegments) SetOperatingFlightNo(v string) *FlightModifyOtaSearchV2RequestSelectedSegments {
	s.OperatingFlightNo = &v
	return s
}

func (s *FlightModifyOtaSearchV2RequestSelectedSegments) SetSegmentSeq(v int32) *FlightModifyOtaSearchV2RequestSelectedSegments {
	s.SegmentSeq = &v
	return s
}

type FlightModifyOtaSearchV2ShrinkRequest struct {
	CabinClassShrink *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	DepDateShrink    *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// name
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1017002195370467200
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467200
	OutOrderId                      *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerSegmentRelationsShrink *string `json:"passenger_segment_relations,omitempty" xml:"passenger_segment_relations,omitempty"`
	SelectedSegmentsShrink          *string `json:"selected_segments,omitempty" xml:"selected_segments,omitempty"`
	// example:
	//
	// 590f17eca9374f20ac7e8ed8a7db2f35
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// true
	Voluntary *bool `json:"voluntary,omitempty" xml:"voluntary,omitempty"`
}

func (s FlightModifyOtaSearchV2ShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ShrinkRequest) SetCabinClassShrink(v string) *FlightModifyOtaSearchV2ShrinkRequest {
	s.CabinClassShrink = &v
	return s
}

func (s *FlightModifyOtaSearchV2ShrinkRequest) SetDepDateShrink(v string) *FlightModifyOtaSearchV2ShrinkRequest {
	s.DepDateShrink = &v
	return s
}

func (s *FlightModifyOtaSearchV2ShrinkRequest) SetIsvName(v string) *FlightModifyOtaSearchV2ShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ShrinkRequest) SetOrderId(v int64) *FlightModifyOtaSearchV2ShrinkRequest {
	s.OrderId = &v
	return s
}

func (s *FlightModifyOtaSearchV2ShrinkRequest) SetOutOrderId(v string) *FlightModifyOtaSearchV2ShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyOtaSearchV2ShrinkRequest) SetPassengerSegmentRelationsShrink(v string) *FlightModifyOtaSearchV2ShrinkRequest {
	s.PassengerSegmentRelationsShrink = &v
	return s
}

func (s *FlightModifyOtaSearchV2ShrinkRequest) SetSelectedSegmentsShrink(v string) *FlightModifyOtaSearchV2ShrinkRequest {
	s.SelectedSegmentsShrink = &v
	return s
}

func (s *FlightModifyOtaSearchV2ShrinkRequest) SetSessionId(v string) *FlightModifyOtaSearchV2ShrinkRequest {
	s.SessionId = &v
	return s
}

func (s *FlightModifyOtaSearchV2ShrinkRequest) SetVoluntary(v bool) *FlightModifyOtaSearchV2ShrinkRequest {
	s.Voluntary = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightModifyOtaSearchV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 2136019116915615639457351e06ee
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBody) SetCode(v string) *FlightModifyOtaSearchV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBody) SetMessage(v string) *FlightModifyOtaSearchV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBody) SetModule(v *FlightModifyOtaSearchV2ResponseBodyModule) *FlightModifyOtaSearchV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBody) SetRequestId(v string) *FlightModifyOtaSearchV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBody) SetSuccess(v bool) *FlightModifyOtaSearchV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBody) SetTraceId(v string) *FlightModifyOtaSearchV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModule struct {
	AgentInfos []*FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos `json:"agentInfos,omitempty" xml:"agentInfos,omitempty" type:"Repeated"`
	AgentInfo  *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo    `json:"agent_info,omitempty" xml:"agent_info,omitempty" type:"Struct"`
	// example:
	//
	// 2136019116915615639457351e06ee
	CacheKey           *string                                                          `json:"cache_key,omitempty" xml:"cache_key,omitempty"`
	FlightSegmentInfos [][]*FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos `json:"flight_segment_infos,omitempty" xml:"flight_segment_infos,omitempty" type:"Repeated"`
	PassengerCount     *FlightModifyOtaSearchV2ResponseBodyModulePassengerCount         `json:"passenger_count,omitempty" xml:"passenger_count,omitempty" type:"Struct"`
	// example:
	//
	// a2ffebfe733742aab5c491d960ba3d59
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModule) SetAgentInfos(v []*FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) *FlightModifyOtaSearchV2ResponseBodyModule {
	s.AgentInfos = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModule) SetAgentInfo(v *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) *FlightModifyOtaSearchV2ResponseBodyModule {
	s.AgentInfo = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModule) SetCacheKey(v string) *FlightModifyOtaSearchV2ResponseBodyModule {
	s.CacheKey = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModule) SetFlightSegmentInfos(v [][]*FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) *FlightModifyOtaSearchV2ResponseBodyModule {
	s.FlightSegmentInfos = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModule) SetPassengerCount(v *FlightModifyOtaSearchV2ResponseBodyModulePassengerCount) *FlightModifyOtaSearchV2ResponseBodyModule {
	s.PassengerCount = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModule) SetSessionId(v string) *FlightModifyOtaSearchV2ResponseBodyModule {
	s.SessionId = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos struct {
	AttributeShowInfoMap map[string][]*ModuleAgentInfosAttributeShowInfoMapValue            `json:"attribute_show_info_map,omitempty" xml:"attribute_show_info_map,omitempty"`
	BestDiscount         *float64                                                           `json:"best_discount,omitempty" xml:"best_discount,omitempty"`
	CabinClassInfo       *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo `json:"cabin_class_info,omitempty" xml:"cabin_class_info,omitempty" type:"Struct"`
	CabinCode            *int32                                                             `json:"cabin_code,omitempty" xml:"cabin_code,omitempty"`
	CabinName            *string                                                            `json:"cabin_name,omitempty" xml:"cabin_name,omitempty"`
	ItemId               *string                                                            `json:"item_id,omitempty" xml:"item_id,omitempty"`
	ModifyTypeDesc       *string                                                            `json:"modify_type_desc,omitempty" xml:"modify_type_desc,omitempty"`
	ModifyTypeName       *string                                                            `json:"modify_type_name,omitempty" xml:"modify_type_name,omitempty"`
	PriceInfoDTO         *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO   `json:"price_info_d_t_o,omitempty" xml:"price_info_d_t_o,omitempty" type:"Struct"`
	Quantity             *int32                                                             `json:"quantity,omitempty" xml:"quantity,omitempty"`
	SupportChildTicket   *bool                                                              `json:"support_child_ticket,omitempty" xml:"support_child_ticket,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetAttributeShowInfoMap(v map[string][]*ModuleAgentInfosAttributeShowInfoMapValue) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.AttributeShowInfoMap = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetBestDiscount(v float64) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.BestDiscount = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetCabinClassInfo(v *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.CabinClassInfo = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetCabinCode(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.CabinCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetCabinName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.CabinName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetItemId(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.ItemId = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetModifyTypeDesc(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.ModifyTypeDesc = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetModifyTypeName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.ModifyTypeName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetPriceInfoDTO(v *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.PriceInfoDTO = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetQuantity(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.Quantity = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos) SetSupportChildTicket(v bool) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfos {
	s.SupportChildTicket = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo struct {
	CabinClass      *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	ClassName       *string `json:"class_name,omitempty" xml:"class_name,omitempty"`
	InnerCabinClass *int32  `json:"inner_cabin_class,omitempty" xml:"inner_cabin_class,omitempty"`
	Quantity        *string `json:"quantity,omitempty" xml:"quantity,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo) SetCabinClass(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo {
	s.CabinClass = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo) SetClassName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo {
	s.ClassName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo) SetInnerCabinClass(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo {
	s.InnerCabinClass = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo) SetQuantity(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosCabinClassInfo {
	s.Quantity = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO struct {
	AdultPrice              *int32                                                                             `json:"adult_price,omitempty" xml:"adult_price,omitempty"`
	AdultTax                *int32                                                                             `json:"adult_tax,omitempty" xml:"adult_tax,omitempty"`
	AdultTotalPrice         *int32                                                                             `json:"adult_total_price,omitempty" xml:"adult_total_price,omitempty"`
	BeforeControlPrice      *int32                                                                             `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	ChildPrice              *int32                                                                             `json:"child_price,omitempty" xml:"child_price,omitempty"`
	ChildTax                *int32                                                                             `json:"child_tax,omitempty" xml:"child_tax,omitempty"`
	ChildTotalPrice         *int32                                                                             `json:"child_total_price,omitempty" xml:"child_total_price,omitempty"`
	InfantPrice             *int32                                                                             `json:"infant_price,omitempty" xml:"infant_price,omitempty"`
	InfantTax               *int32                                                                             `json:"infant_tax,omitempty" xml:"infant_tax,omitempty"`
	InfantTotalPrice        *int32                                                                             `json:"infant_total_price,omitempty" xml:"infant_total_price,omitempty"`
	OriginalAdultPrice      *int32                                                                             `json:"original_adult_price,omitempty" xml:"original_adult_price,omitempty"`
	OriginalAdultTotalPrice *int32                                                                             `json:"original_adult_total_price,omitempty" xml:"original_adult_total_price,omitempty"`
	ReShopPriceInfoDTO      *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO `json:"re_shop_price_info_d_t_o,omitempty" xml:"re_shop_price_info_d_t_o,omitempty" type:"Struct"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetAdultPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.AdultPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetAdultTax(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.AdultTax = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetAdultTotalPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.AdultTotalPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetBeforeControlPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.BeforeControlPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetChildPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.ChildPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetChildTax(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.ChildTax = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetChildTotalPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.ChildTotalPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetInfantPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.InfantPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetInfantTax(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.InfantTax = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetInfantTotalPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.InfantTotalPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetOriginalAdultPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.OriginalAdultPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetOriginalAdultTotalPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.OriginalAdultTotalPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO) SetReShopPriceInfoDTO(v *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTO {
	s.ReShopPriceInfoDTO = v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO struct {
	ReShopAdultChangeFee *int32 `json:"re_shop_adult_change_fee,omitempty" xml:"re_shop_adult_change_fee,omitempty"`
	ReShopAdultPrice     *int32 `json:"re_shop_adult_price,omitempty" xml:"re_shop_adult_price,omitempty"`
	ReShopAdultPriceGap  *int32 `json:"re_shop_adult_price_gap,omitempty" xml:"re_shop_adult_price_gap,omitempty"`
	ReShopChildChangeFee *int32 `json:"re_shop_child_change_fee,omitempty" xml:"re_shop_child_change_fee,omitempty"`
	ReShopChildPrice     *int32 `json:"re_shop_child_price,omitempty" xml:"re_shop_child_price,omitempty"`
	ReShopChildPriceGap  *int32 `json:"re_shop_child_price_gap,omitempty" xml:"re_shop_child_price_gap,omitempty"`
	ReShopInfChangeFee   *int32 `json:"re_shop_inf_change_fee,omitempty" xml:"re_shop_inf_change_fee,omitempty"`
	ReShopInfPrice       *int32 `json:"re_shop_inf_price,omitempty" xml:"re_shop_inf_price,omitempty"`
	ReShopInfPriceGap    *int32 `json:"re_shop_inf_price_gap,omitempty" xml:"re_shop_inf_price_gap,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultChangeFee(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultChangeFee = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultPriceGap(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultPriceGap = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) SetReShopChildChangeFee(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildChangeFee = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) SetReShopChildPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) SetReShopChildPriceGap(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildPriceGap = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) SetReShopInfChangeFee(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfChangeFee = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) SetReShopInfPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO) SetReShopInfPriceGap(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfosPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfPriceGap = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo struct {
	AttributeShowInfoMap map[string][]*ModuleAgentInfoAttributeShowInfoMapValue `json:"attribute_show_info_map,omitempty" xml:"attribute_show_info_map,omitempty"`
	// example:
	//
	// 10
	BestDiscount   *float64                                                          `json:"best_discount,omitempty" xml:"best_discount,omitempty"`
	CabinClassInfo *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo `json:"cabin_class_info,omitempty" xml:"cabin_class_info,omitempty" type:"Struct"`
	// example:
	//
	// 1
	CabinCode *int32  `json:"cabin_code,omitempty" xml:"cabin_code,omitempty"`
	CabinName *string `json:"cabin_name,omitempty" xml:"cabin_name,omitempty"`
	// item_id
	//
	// example:
	//
	// c85124c527fc4b26b86d0c043ddc08d3_0
	ItemId         *string                                                         `json:"item_id,omitempty" xml:"item_id,omitempty"`
	ModifyTypeDesc *string                                                         `json:"modify_type_desc,omitempty" xml:"modify_type_desc,omitempty"`
	ModifyTypeName *string                                                         `json:"modify_type_name,omitempty" xml:"modify_type_name,omitempty"`
	PriceInfoDTO   *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO `json:"price_info_d_t_o,omitempty" xml:"price_info_d_t_o,omitempty" type:"Struct"`
	// example:
	//
	// 8
	Quantity *int32 `json:"quantity,omitempty" xml:"quantity,omitempty"`
	// example:
	//
	// true
	SupportChildTicket *bool `json:"support_child_ticket,omitempty" xml:"support_child_ticket,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetAttributeShowInfoMap(v map[string][]*ModuleAgentInfoAttributeShowInfoMapValue) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.AttributeShowInfoMap = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetBestDiscount(v float64) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.BestDiscount = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetCabinClassInfo(v *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.CabinClassInfo = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetCabinCode(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.CabinCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetCabinName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.CabinName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetItemId(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.ItemId = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetModifyTypeDesc(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.ModifyTypeDesc = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetModifyTypeName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.ModifyTypeName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetPriceInfoDTO(v *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.PriceInfoDTO = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetQuantity(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.Quantity = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo) SetSupportChildTicket(v bool) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfo {
	s.SupportChildTicket = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo struct {
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	ClassName  *string `json:"class_name,omitempty" xml:"class_name,omitempty"`
	// inner_cabin_class
	//
	// example:
	//
	// 1
	InnerCabinClass *int32  `json:"inner_cabin_class,omitempty" xml:"inner_cabin_class,omitempty"`
	Quantity        *string `json:"quantity,omitempty" xml:"quantity,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo) SetCabinClass(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo {
	s.CabinClass = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo) SetClassName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo {
	s.ClassName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo) SetInnerCabinClass(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo {
	s.InnerCabinClass = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo) SetQuantity(v string) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoCabinClassInfo {
	s.Quantity = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO struct {
	// example:
	//
	// 126000
	AdultPrice *int32 `json:"adult_price,omitempty" xml:"adult_price,omitempty"`
	// example:
	//
	// 11000
	AdultTax *int32 `json:"adult_tax,omitempty" xml:"adult_tax,omitempty"`
	// example:
	//
	// 137000
	AdultTotalPrice *int32 `json:"adult_total_price,omitempty" xml:"adult_total_price,omitempty"`
	// example:
	//
	// 126000
	BeforeControlPrice *int32 `json:"before_control_price,omitempty" xml:"before_control_price,omitempty"`
	// example:
	//
	// 64000
	ChildPrice *int32 `json:"child_price,omitempty" xml:"child_price,omitempty"`
	// example:
	//
	// 2000
	ChildTax *int32 `json:"child_tax,omitempty" xml:"child_tax,omitempty"`
	// example:
	//
	// 66000
	ChildTotalPrice *int32 `json:"child_total_price,omitempty" xml:"child_total_price,omitempty"`
	// example:
	//
	// 120
	InfantPrice *int32 `json:"infant_price,omitempty" xml:"infant_price,omitempty"`
	// example:
	//
	// 0
	InfantTax *int32 `json:"infant_tax,omitempty" xml:"infant_tax,omitempty"`
	// example:
	//
	// 120
	InfantTotalPrice *int32 `json:"infant_total_price,omitempty" xml:"infant_total_price,omitempty"`
	// example:
	//
	// 1300
	OriginalAdultPrice *int32 `json:"original_adult_price,omitempty" xml:"original_adult_price,omitempty"`
	// example:
	//
	// 12300
	OriginalAdultTotalPrice *int32                                                                            `json:"original_adult_total_price,omitempty" xml:"original_adult_total_price,omitempty"`
	ReShopPriceInfoDTO      *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO `json:"re_shop_price_info_d_t_o,omitempty" xml:"re_shop_price_info_d_t_o,omitempty" type:"Struct"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetAdultPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.AdultPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetAdultTax(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.AdultTax = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetAdultTotalPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.AdultTotalPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetBeforeControlPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.BeforeControlPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetChildPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.ChildPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetChildTax(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.ChildTax = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetChildTotalPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.ChildTotalPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetInfantPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.InfantPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetInfantTax(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.InfantTax = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetInfantTotalPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.InfantTotalPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetOriginalAdultPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.OriginalAdultPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetOriginalAdultTotalPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.OriginalAdultTotalPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO) SetReShopPriceInfoDTO(v *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTO {
	s.ReShopPriceInfoDTO = v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO struct {
	// example:
	//
	// -1
	ReShopAdultChangeFee *int32 `json:"re_shop_adult_change_fee,omitempty" xml:"re_shop_adult_change_fee,omitempty"`
	// example:
	//
	// -1
	ReShopAdultPrice *int32 `json:"re_shop_adult_price,omitempty" xml:"re_shop_adult_price,omitempty"`
	// example:
	//
	// -1
	ReShopAdultPriceGap *int32 `json:"re_shop_adult_price_gap,omitempty" xml:"re_shop_adult_price_gap,omitempty"`
	// example:
	//
	// -1
	ReShopChildChangeFee *int32 `json:"re_shop_child_change_fee,omitempty" xml:"re_shop_child_change_fee,omitempty"`
	// example:
	//
	// -1
	ReShopChildPrice *int32 `json:"re_shop_child_price,omitempty" xml:"re_shop_child_price,omitempty"`
	// example:
	//
	// -1
	ReShopChildPriceGap *int32 `json:"re_shop_child_price_gap,omitempty" xml:"re_shop_child_price_gap,omitempty"`
	// example:
	//
	// -1
	ReShopInfChangeFee *int32 `json:"re_shop_inf_change_fee,omitempty" xml:"re_shop_inf_change_fee,omitempty"`
	// example:
	//
	// -1
	ReShopInfPrice *int32 `json:"re_shop_inf_price,omitempty" xml:"re_shop_inf_price,omitempty"`
	// example:
	//
	// -1
	ReShopInfPriceGap *int32 `json:"re_shop_inf_price_gap,omitempty" xml:"re_shop_inf_price_gap,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultChangeFee(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultChangeFee = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) SetReShopAdultPriceGap(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopAdultPriceGap = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) SetReShopChildChangeFee(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildChangeFee = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) SetReShopChildPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) SetReShopChildPriceGap(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopChildPriceGap = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) SetReShopInfChangeFee(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfChangeFee = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) SetReShopInfPrice(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfPrice = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO) SetReShopInfPriceGap(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleAgentInfoPriceInfoDTOReShopPriceInfoDTO {
	s.ReShopInfPriceGap = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos struct {
	// example:
	//
	// 0
	JourneySeq *int32 `json:"journey_seq,omitempty" xml:"journey_seq,omitempty"`
	// example:
	//
	// 0
	SegmentSeq *int32 `json:"segment_seq,omitempty" xml:"segment_seq,omitempty"`
	// example:
	//
	// CA1110
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// XIL
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// BJS
	ArrCityCode    *string                                                                    `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	DepCityName    *string                                                                    `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	ArrCityName    *string                                                                    `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	DepAirportInfo *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	ArrAirportInfo *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// 2023-09-18 09:10:00
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 2023-09-18 10:25:00
	ArrTime     *string                                                                 `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	AirlineInfo *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	// example:
	//
	// false
	Share            *bool                                                                        `json:"share,omitempty" xml:"share,omitempty"`
	FlightSharedInfo *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfo `json:"flight_shared_info,omitempty" xml:"flight_shared_info,omitempty" type:"Struct"`
	// example:
	//
	// false
	Stop           *bool                                                                      `json:"stop,omitempty" xml:"stop,omitempty"`
	FlightStopInfo *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo `json:"flight_stop_info,omitempty" xml:"flight_stop_info,omitempty" type:"Struct"`
	// example:
	//
	// 20
	TransferTime *int32 `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
	// example:
	//
	// 75
	Duration     *int32  `json:"duration,omitempty" xml:"duration,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty" xml:"manufacturer,omitempty"`
	// example:
	//
	// ARJ
	FlightType *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	FlightSize *string `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	MealDesc   *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	OnTimeRate *string `json:"on_time_rate,omitempty" xml:"on_time_rate,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetJourneySeq(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.JourneySeq = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetSegmentSeq(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.SegmentSeq = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetFlightNo(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.FlightNo = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetDepCityCode(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.DepCityCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetArrCityCode(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.ArrCityCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetDepCityName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.DepCityName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetArrCityName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.ArrCityName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetDepAirportInfo(v *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.DepAirportInfo = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetArrAirportInfo(v *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.ArrAirportInfo = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetDepTime(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.DepTime = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetArrTime(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.ArrTime = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetAirlineInfo(v *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.AirlineInfo = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetShare(v bool) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.Share = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetFlightSharedInfo(v *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfo) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.FlightSharedInfo = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetStop(v bool) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.Stop = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetFlightStopInfo(v *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.FlightStopInfo = v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetTransferTime(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.TransferTime = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetDuration(v int32) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.Duration = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetManufacturer(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.Manufacturer = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetFlightType(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.FlightType = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetFlightSize(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.FlightSize = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetMealDesc(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.MealDesc = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos) SetOnTimeRate(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfos {
	s.OnTimeRate = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo struct {
	// example:
	//
	// XIL
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo) SetAirportCode(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo) SetAirportName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo) SetAirportShortName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo) SetTerminal(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosDepAirportInfo {
	s.Terminal = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo struct {
	// example:
	//
	// PEK
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// T2
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo) SetAirportCode(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo) SetAirportName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo) SetAirportShortName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo) SetTerminal(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosArrAirportInfo {
	s.Terminal = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo struct {
	// example:
	//
	// CA
	AirlineCode             *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// //gw.alicdn.com/tfs/TB12fJAFHr1gK0jSZR0XXbP8XXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo) SetAirlineCode(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo) SetAirlineChineseName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo) SetAirlineChineseShortName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo) SetAirlineIcon(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo) SetCheapFlight(v bool) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfo struct {
	OperatingFlightNo    *string                                                                                          `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
	OperatingAirlineInfo *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo `json:"operating_airline_info,omitempty" xml:"operating_airline_info,omitempty" type:"Struct"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfo) SetOperatingFlightNo(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfo {
	s.OperatingFlightNo = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfo) SetOperatingAirlineInfo(v *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfo {
	s.OperatingAirlineInfo = v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo struct {
	AirlineCode             *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	AirlineIcon             *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo) SetAirlineCode(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo) SetAirlineChineseName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo) SetAirlineChineseShortName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo) SetAirlineIcon(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo) SetCheapFlight(v bool) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightSharedInfoOperatingAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo struct {
	StopCityName *string `json:"stop_city_name,omitempty" xml:"stop_city_name,omitempty"`
	StopArrTime  *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	StopDepTime  *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	StopCityCode *string `json:"stop_city_code,omitempty" xml:"stop_city_code,omitempty"`
	StopAirport  *string `json:"stop_airport,omitempty" xml:"stop_airport,omitempty"`
	StopArrTerm  *string `json:"stop_arr_term,omitempty" xml:"stop_arr_term,omitempty"`
	StopDepTerm  *string `json:"stop_dep_term,omitempty" xml:"stop_dep_term,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo) SetStopCityName(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo {
	s.StopCityName = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo) SetStopArrTime(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo {
	s.StopArrTime = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo) SetStopDepTime(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo {
	s.StopDepTime = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo) SetStopCityCode(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo {
	s.StopCityCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo) SetStopAirport(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo {
	s.StopAirport = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo) SetStopArrTerm(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo {
	s.StopArrTerm = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo) SetStopDepTerm(v string) *FlightModifyOtaSearchV2ResponseBodyModuleFlightSegmentInfosFlightStopInfo {
	s.StopDepTerm = &v
	return s
}

type FlightModifyOtaSearchV2ResponseBodyModulePassengerCount struct {
	// example:
	//
	// 1
	AdultPassengerNum *int32 `json:"adult_passenger_num,omitempty" xml:"adult_passenger_num,omitempty"`
	// example:
	//
	// 0
	ChildPassengerNum *int32 `json:"child_passenger_num,omitempty" xml:"child_passenger_num,omitempty"`
	// example:
	//
	// 0
	InfantPassengerNum *int32 `json:"infant_passenger_num,omitempty" xml:"infant_passenger_num,omitempty"`
}

func (s FlightModifyOtaSearchV2ResponseBodyModulePassengerCount) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2ResponseBodyModulePassengerCount) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2ResponseBodyModulePassengerCount) SetAdultPassengerNum(v int32) *FlightModifyOtaSearchV2ResponseBodyModulePassengerCount {
	s.AdultPassengerNum = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModulePassengerCount) SetChildPassengerNum(v int32) *FlightModifyOtaSearchV2ResponseBodyModulePassengerCount {
	s.ChildPassengerNum = &v
	return s
}

func (s *FlightModifyOtaSearchV2ResponseBodyModulePassengerCount) SetInfantPassengerNum(v int32) *FlightModifyOtaSearchV2ResponseBodyModulePassengerCount {
	s.InfantPassengerNum = &v
	return s
}

type FlightModifyOtaSearchV2Response struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightModifyOtaSearchV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightModifyOtaSearchV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyOtaSearchV2Response) GoString() string {
	return s.String()
}

func (s *FlightModifyOtaSearchV2Response) SetHeaders(v map[string]*string) *FlightModifyOtaSearchV2Response {
	s.Headers = v
	return s
}

func (s *FlightModifyOtaSearchV2Response) SetStatusCode(v int32) *FlightModifyOtaSearchV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightModifyOtaSearchV2Response) SetBody(v *FlightModifyOtaSearchV2ResponseBody) *FlightModifyOtaSearchV2Response {
	s.Body = v
	return s
}

type FlightModifyPayV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightModifyPayV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyPayV2Headers) GoString() string {
	return s.String()
}

func (s *FlightModifyPayV2Headers) SetCommonHeaders(v map[string]*string) *FlightModifyPayV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightModifyPayV2Headers) SetXAcsBtripCorpToken(v string) *FlightModifyPayV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightModifyPayV2Request struct {
	ExtParams map[string]interface{} `json:"ext_params,omitempty" xml:"ext_params,omitempty"`
	// example:
	//
	// name
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 5100
	ModifyPayAmount *int64 `json:"modify_pay_amount,omitempty" xml:"modify_pay_amount,omitempty"`
	// example:
	//
	// 1017002195370467200
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467200
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1019195786853020
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	// example:
	//
	// 1019195786853020
	SubOrderId *int64 `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
}

func (s FlightModifyPayV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyPayV2Request) GoString() string {
	return s.String()
}

func (s *FlightModifyPayV2Request) SetExtParams(v map[string]interface{}) *FlightModifyPayV2Request {
	s.ExtParams = v
	return s
}

func (s *FlightModifyPayV2Request) SetIsvName(v string) *FlightModifyPayV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightModifyPayV2Request) SetModifyPayAmount(v int64) *FlightModifyPayV2Request {
	s.ModifyPayAmount = &v
	return s
}

func (s *FlightModifyPayV2Request) SetOrderId(v int64) *FlightModifyPayV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightModifyPayV2Request) SetOutOrderId(v string) *FlightModifyPayV2Request {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyPayV2Request) SetOutSubOrderId(v string) *FlightModifyPayV2Request {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightModifyPayV2Request) SetSubOrderId(v int64) *FlightModifyPayV2Request {
	s.SubOrderId = &v
	return s
}

type FlightModifyPayV2ShrinkRequest struct {
	ExtParamsShrink *string `json:"ext_params,omitempty" xml:"ext_params,omitempty"`
	// example:
	//
	// name
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 5100
	ModifyPayAmount *int64 `json:"modify_pay_amount,omitempty" xml:"modify_pay_amount,omitempty"`
	// example:
	//
	// 1017002195370467200
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467200
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1019195786853020
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	// example:
	//
	// 1019195786853020
	SubOrderId *int64 `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
}

func (s FlightModifyPayV2ShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyPayV2ShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightModifyPayV2ShrinkRequest) SetExtParamsShrink(v string) *FlightModifyPayV2ShrinkRequest {
	s.ExtParamsShrink = &v
	return s
}

func (s *FlightModifyPayV2ShrinkRequest) SetIsvName(v string) *FlightModifyPayV2ShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *FlightModifyPayV2ShrinkRequest) SetModifyPayAmount(v int64) *FlightModifyPayV2ShrinkRequest {
	s.ModifyPayAmount = &v
	return s
}

func (s *FlightModifyPayV2ShrinkRequest) SetOrderId(v int64) *FlightModifyPayV2ShrinkRequest {
	s.OrderId = &v
	return s
}

func (s *FlightModifyPayV2ShrinkRequest) SetOutOrderId(v string) *FlightModifyPayV2ShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *FlightModifyPayV2ShrinkRequest) SetOutSubOrderId(v string) *FlightModifyPayV2ShrinkRequest {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightModifyPayV2ShrinkRequest) SetSubOrderId(v int64) *FlightModifyPayV2ShrinkRequest {
	s.SubOrderId = &v
	return s
}

type FlightModifyPayV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module map[string]interface{} `json:"module,omitempty" xml:"module,omitempty"`
	// requestId
	//
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210bc59716837025964391120d3a5e
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightModifyPayV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyPayV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightModifyPayV2ResponseBody) SetCode(v string) *FlightModifyPayV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightModifyPayV2ResponseBody) SetMessage(v string) *FlightModifyPayV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightModifyPayV2ResponseBody) SetModule(v map[string]interface{}) *FlightModifyPayV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightModifyPayV2ResponseBody) SetRequestId(v string) *FlightModifyPayV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightModifyPayV2ResponseBody) SetSuccess(v bool) *FlightModifyPayV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightModifyPayV2ResponseBody) SetTraceId(v string) *FlightModifyPayV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightModifyPayV2Response struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightModifyPayV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightModifyPayV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightModifyPayV2Response) GoString() string {
	return s.String()
}

func (s *FlightModifyPayV2Response) SetHeaders(v map[string]*string) *FlightModifyPayV2Response {
	s.Headers = v
	return s
}

func (s *FlightModifyPayV2Response) SetStatusCode(v int32) *FlightModifyPayV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightModifyPayV2Response) SetBody(v *FlightModifyPayV2ResponseBody) *FlightModifyPayV2Response {
	s.Body = v
	return s
}

type FlightOrderDetailInfoHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightOrderDetailInfoHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailInfoHeaders) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailInfoHeaders) SetCommonHeaders(v map[string]*string) *FlightOrderDetailInfoHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightOrderDetailInfoHeaders) SetXAcsBtripCorpToken(v string) *FlightOrderDetailInfoHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightOrderDetailInfoRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
}

func (s FlightOrderDetailInfoRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailInfoRequest) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailInfoRequest) SetDisOrderId(v string) *FlightOrderDetailInfoRequest {
	s.DisOrderId = &v
	return s
}

type FlightOrderDetailInfoResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                  `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                  `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightOrderDetailInfoResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightOrderDetailInfoResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailInfoResponseBody) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailInfoResponseBody) SetCode(v string) *FlightOrderDetailInfoResponseBody {
	s.Code = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBody) SetMessage(v string) *FlightOrderDetailInfoResponseBody {
	s.Message = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBody) SetModule(v *FlightOrderDetailInfoResponseBodyModule) *FlightOrderDetailInfoResponseBody {
	s.Module = v
	return s
}

func (s *FlightOrderDetailInfoResponseBody) SetRequestId(v string) *FlightOrderDetailInfoResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBody) SetSuccess(v bool) *FlightOrderDetailInfoResponseBody {
	s.Success = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBody) SetTraceId(v string) *FlightOrderDetailInfoResponseBody {
	s.TraceId = &v
	return s
}

type FlightOrderDetailInfoResponseBodyModule struct {
	// example:
	//
	// 2389927372772
	AlipayTradeNo *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	// example:
	//
	// 1223
	BookUserId *string `json:"book_user_id,omitempty" xml:"book_user_id,omitempty"`
	// example:
	//
	// 123
	BtripOrderId *int64  `json:"btrip_order_id,omitempty" xml:"btrip_order_id,omitempty"`
	ContactName  *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	// example:
	//
	// 12345678909
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// {}
	Extra          *string                                                  `json:"extra,omitempty" xml:"extra,omitempty"`
	FlightInfoList []*FlightOrderDetailInfoResponseBodyModuleFlightInfoList `json:"flight_info_list,omitempty" xml:"flight_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2000-00-00 00:00:00
	LastPayTime *string `json:"last_pay_time,omitempty" xml:"last_pay_time,omitempty"`
	// example:
	//
	// 0
	PayStatus *int32 `json:"pay_status,omitempty" xml:"pay_status,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	PayTime *string `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	// example:
	//
	// 1000
	PromotionPrice *int64 `json:"promotion_price,omitempty" xml:"promotion_price,omitempty"`
	// example:
	//
	// 100
	SettleAmount *int64 `json:"settle_amount,omitempty" xml:"settle_amount,omitempty"`
	// example:
	//
	// 0
	SettleType *int32 `json:"settle_type,omitempty" xml:"settle_type,omitempty"`
	// example:
	//
	// 1
	Status         *int32                                                   `json:"status,omitempty" xml:"status,omitempty"`
	TicketInfoList []*FlightOrderDetailInfoResponseBodyModuleTicketInfoList `json:"ticket_info_list,omitempty" xml:"ticket_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1000
	TotalBuildPrice *int64 `json:"total_build_price,omitempty" xml:"total_build_price,omitempty"`
	// example:
	//
	// 1000
	TotalOilPrice *int64 `json:"total_oil_price,omitempty" xml:"total_oil_price,omitempty"`
	// example:
	//
	// 1000
	TotalOrderPrice  *int64                                                     `json:"total_order_price,omitempty" xml:"total_order_price,omitempty"`
	TravelerInfoList []*FlightOrderDetailInfoResponseBodyModuleTravelerInfoList `json:"traveler_info_list,omitempty" xml:"traveler_info_list,omitempty" type:"Repeated"`
}

func (s FlightOrderDetailInfoResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailInfoResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetAlipayTradeNo(v string) *FlightOrderDetailInfoResponseBodyModule {
	s.AlipayTradeNo = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetBookUserId(v string) *FlightOrderDetailInfoResponseBodyModule {
	s.BookUserId = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetBtripOrderId(v int64) *FlightOrderDetailInfoResponseBodyModule {
	s.BtripOrderId = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetContactName(v string) *FlightOrderDetailInfoResponseBodyModule {
	s.ContactName = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetContactPhone(v string) *FlightOrderDetailInfoResponseBodyModule {
	s.ContactPhone = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetDisOrderId(v string) *FlightOrderDetailInfoResponseBodyModule {
	s.DisOrderId = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetExtra(v string) *FlightOrderDetailInfoResponseBodyModule {
	s.Extra = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetFlightInfoList(v []*FlightOrderDetailInfoResponseBodyModuleFlightInfoList) *FlightOrderDetailInfoResponseBodyModule {
	s.FlightInfoList = v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetLastPayTime(v string) *FlightOrderDetailInfoResponseBodyModule {
	s.LastPayTime = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetPayStatus(v int32) *FlightOrderDetailInfoResponseBodyModule {
	s.PayStatus = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetPayTime(v string) *FlightOrderDetailInfoResponseBodyModule {
	s.PayTime = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetPromotionPrice(v int64) *FlightOrderDetailInfoResponseBodyModule {
	s.PromotionPrice = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetSettleAmount(v int64) *FlightOrderDetailInfoResponseBodyModule {
	s.SettleAmount = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetSettleType(v int32) *FlightOrderDetailInfoResponseBodyModule {
	s.SettleType = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetStatus(v int32) *FlightOrderDetailInfoResponseBodyModule {
	s.Status = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetTicketInfoList(v []*FlightOrderDetailInfoResponseBodyModuleTicketInfoList) *FlightOrderDetailInfoResponseBodyModule {
	s.TicketInfoList = v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetTotalBuildPrice(v int64) *FlightOrderDetailInfoResponseBodyModule {
	s.TotalBuildPrice = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetTotalOilPrice(v int64) *FlightOrderDetailInfoResponseBodyModule {
	s.TotalOilPrice = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetTotalOrderPrice(v int64) *FlightOrderDetailInfoResponseBodyModule {
	s.TotalOrderPrice = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModule) SetTravelerInfoList(v []*FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) *FlightOrderDetailInfoResponseBodyModule {
	s.TravelerInfoList = v
	return s
}

type FlightOrderDetailInfoResponseBodyModuleFlightInfoList struct {
	// example:
	//
	// CA
	AirlineCode       *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName       *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	AirlineSimpleName *string `json:"airline_simple_name,omitempty" xml:"airline_simple_name,omitempty"`
	ArrAirport        *string `json:"arr_airport,omitempty" xml:"arr_airport,omitempty"`
	// example:
	//
	// LHW
	ArrAirportCode     *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrAirportCodeName *string `json:"arr_airport_code_name,omitempty" xml:"arr_airport_code_name,omitempty"`
	// example:
	//
	// HGH
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// LHW
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrTerminal *string `json:"arr_terminal,omitempty" xml:"arr_terminal,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// “”
	Baggage *string `json:"baggage,omitempty" xml:"baggage,omitempty"`
	// example:
	//
	// 100
	BuildPrice *int64  `json:"build_price,omitempty" xml:"build_price,omitempty"`
	Cabin      *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// example:
	//
	// "CA1351_PEK_CAN_2000-00-00 08:00
	Carrier    *string `json:"carrier,omitempty" xml:"carrier,omitempty"`
	DepAirport *string `json:"dep_airport,omitempty" xml:"dep_airport,omitempty"`
	// example:
	//
	// NGB
	DepAirportCode     *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepAirportCodeName *string `json:"dep_airport_code_name,omitempty" xml:"dep_airport_code_name,omitempty"`
	// example:
	//
	// BJS
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// NGB
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepTerminal *string `json:"dep_terminal,omitempty" xml:"dep_terminal,omitempty"`
	// example:
	//
	// 2000-01-01 00:00:00
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// CA1351
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// Y
	LastCabin *string `json:"last_cabin,omitempty" xml:"last_cabin,omitempty"`
	// example:
	//
	// CA1351
	LastFlightNo *string `json:"last_flight_no,omitempty" xml:"last_flight_no,omitempty"`
	Meal         *string `json:"meal,omitempty" xml:"meal,omitempty"`
	// example:
	//
	// 100
	OilPrice *int64 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	// example:
	//
	// 0
	SegmentType *int32 `json:"segment_type,omitempty" xml:"segment_type,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// CAN
	StopCity *string `json:"stop_city,omitempty" xml:"stop_city,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// “”
	TuigaiqianInfo *string `json:"tuigaiqian_info,omitempty" xml:"tuigaiqian_info,omitempty"`
}

func (s FlightOrderDetailInfoResponseBodyModuleFlightInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailInfoResponseBodyModuleFlightInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetAirlineCode(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.AirlineCode = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetAirlineName(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.AirlineName = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetAirlineSimpleName(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.AirlineSimpleName = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetArrAirport(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.ArrAirport = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetArrAirportCode(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetArrAirportCodeName(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.ArrAirportCodeName = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetArrCity(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.ArrCity = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetArrCityCode(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetArrTerminal(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.ArrTerminal = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetArrTime(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.ArrTime = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetBaggage(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.Baggage = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetBuildPrice(v int64) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.BuildPrice = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetCabin(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.Cabin = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetCabinClass(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.CabinClass = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetCarrier(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.Carrier = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetDepAirport(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.DepAirport = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetDepAirportCode(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.DepAirportCode = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetDepAirportCodeName(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.DepAirportCodeName = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetDepCity(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.DepCity = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetDepCityCode(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.DepCityCode = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetDepTerminal(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.DepTerminal = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetDepTime(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.DepTime = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetFlightNo(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.FlightNo = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetLastCabin(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.LastCabin = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetLastFlightNo(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.LastFlightNo = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetMeal(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.Meal = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetOilPrice(v int64) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.OilPrice = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetSegmentType(v int32) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.SegmentType = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetStopArrTime(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.StopArrTime = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetStopCity(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.StopCity = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetStopDepTime(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.StopDepTime = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetTicketPrice(v int64) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.TicketPrice = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleFlightInfoList) SetTuigaiqianInfo(v string) *FlightOrderDetailInfoResponseBodyModuleFlightInfoList {
	s.TuigaiqianInfo = &v
	return s
}

type FlightOrderDetailInfoResponseBodyModuleTicketInfoList struct {
	// example:
	//
	// 0
	OpenTicketStatus *string `json:"open_ticket_status,omitempty" xml:"open_ticket_status,omitempty"`
	// example:
	//
	// KF0528
	PnrCode *string `json:"pnr_code,omitempty" xml:"pnr_code,omitempty"`
	// example:
	//
	// 444-000000000
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// example:
	//
	// 1
	TicketStatus *string `json:"ticket_status,omitempty" xml:"ticket_status,omitempty"`
}

func (s FlightOrderDetailInfoResponseBodyModuleTicketInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailInfoResponseBodyModuleTicketInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailInfoResponseBodyModuleTicketInfoList) SetOpenTicketStatus(v string) *FlightOrderDetailInfoResponseBodyModuleTicketInfoList {
	s.OpenTicketStatus = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTicketInfoList) SetPnrCode(v string) *FlightOrderDetailInfoResponseBodyModuleTicketInfoList {
	s.PnrCode = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTicketInfoList) SetTicketNo(v string) *FlightOrderDetailInfoResponseBodyModuleTicketInfoList {
	s.TicketNo = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTicketInfoList) SetTicketStatus(v string) *FlightOrderDetailInfoResponseBodyModuleTicketInfoList {
	s.TicketStatus = &v
	return s
}

type FlightOrderDetailInfoResponseBodyModuleTravelerInfoList struct {
	// example:
	//
	// 2000-01-01
	BirthDate *string `json:"birth_date,omitempty" xml:"birth_date,omitempty"`
	// example:
	//
	// 1234
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 0
	CertType *string `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 0
	OpenTicketStatus *int32  `json:"open_ticket_status,omitempty" xml:"open_ticket_status,omitempty"`
	PassengerName    *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 0
	PassengerType *string `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// example:
	//
	// 12345678909
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// 444-000000000
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// example:
	//
	// 123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) SetBirthDate(v string) *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList {
	s.BirthDate = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) SetCertNo(v string) *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList {
	s.CertNo = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) SetCertType(v string) *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList {
	s.CertType = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) SetOpenTicketStatus(v int32) *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList {
	s.OpenTicketStatus = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) SetPassengerName(v string) *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList {
	s.PassengerName = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) SetPassengerType(v string) *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList {
	s.PassengerType = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) SetPhone(v string) *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList {
	s.Phone = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) SetTicketNo(v string) *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList {
	s.TicketNo = &v
	return s
}

func (s *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList) SetUserId(v string) *FlightOrderDetailInfoResponseBodyModuleTravelerInfoList {
	s.UserId = &v
	return s
}

type FlightOrderDetailInfoResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightOrderDetailInfoResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightOrderDetailInfoResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailInfoResponse) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailInfoResponse) SetHeaders(v map[string]*string) *FlightOrderDetailInfoResponse {
	s.Headers = v
	return s
}

func (s *FlightOrderDetailInfoResponse) SetStatusCode(v int32) *FlightOrderDetailInfoResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightOrderDetailInfoResponse) SetBody(v *FlightOrderDetailInfoResponseBody) *FlightOrderDetailInfoResponse {
	s.Body = v
	return s
}

type FlightOrderDetailV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// Dj2laAwE00
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightOrderDetailV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2Headers) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2Headers) SetCommonHeaders(v map[string]*string) *FlightOrderDetailV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightOrderDetailV2Headers) SetXAcsBtripCorpToken(v string) *FlightOrderDetailV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightOrderDetailV2Request struct {
	// This parameter is required.
	//
	// example:
	//
	// cheshiapi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1017002195370467138
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s FlightOrderDetailV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2Request) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2Request) SetIsvName(v string) *FlightOrderDetailV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightOrderDetailV2Request) SetOrderId(v int64) *FlightOrderDetailV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightOrderDetailV2Request) SetOutOrderId(v string) *FlightOrderDetailV2Request {
	s.OutOrderId = &v
	return s
}

type FlightOrderDetailV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightOrderDetailV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// E5F4ACF5-5677-1515-9999-ABBB5E668032
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210bc60a16917251281873772dac41
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightOrderDetailV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBody) SetCode(v string) *FlightOrderDetailV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBody) SetMessage(v string) *FlightOrderDetailV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBody) SetModule(v *FlightOrderDetailV2ResponseBodyModule) *FlightOrderDetailV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightOrderDetailV2ResponseBody) SetRequestId(v string) *FlightOrderDetailV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBody) SetSuccess(v bool) *FlightOrderDetailV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBody) SetTraceId(v string) *FlightOrderDetailV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightOrderDetailV2ResponseBodyModule struct {
	B2gVipCode *string `json:"b2g_vip_code,omitempty" xml:"b2g_vip_code,omitempty"`
	// example:
	//
	// 2023-06-29 15:28:44
	BookSuccTime *string `json:"book_succ_time,omitempty" xml:"book_succ_time,omitempty"`
	// example:
	//
	// qingg1234
	BookUserId   *string `json:"book_user_id,omitempty" xml:"book_user_id,omitempty"`
	BookUserName *string `json:"book_user_name,omitempty" xml:"book_user_name,omitempty"`
	// example:
	//
	// 0
	BuildPrice     *int64                                               `json:"build_price,omitempty" xml:"build_price,omitempty"`
	ContactInfoDTO *FlightOrderDetailV2ResponseBodyModuleContactInfoDTO `json:"contact_info_d_t_o,omitempty" xml:"contact_info_d_t_o,omitempty" type:"Struct"`
	// example:
	//
	// 2023-06-29 15:03:11
	CreateTime *string `json:"create_time,omitempty" xml:"create_time,omitempty"`
	// example:
	//
	// 126000
	Facevalue         *int64                                                  `json:"facevalue,omitempty" xml:"facevalue,omitempty"`
	FlightTaleInfoDTO *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO `json:"flight_tale_info_d_t_o,omitempty" xml:"flight_tale_info_d_t_o,omitempty" type:"Struct"`
	// example:
	//
	// false
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// false
	Isemergency *bool `json:"isemergency,omitempty" xml:"isemergency,omitempty"`
	// example:
	//
	// true
	Issendmessage *bool `json:"issendmessage,omitempty" xml:"issendmessage,omitempty"`
	// example:
	//
	// 4000
	OilPrice *int64 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	// example:
	//
	// 1017002195370467200
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 8500
	OrderPrice *int64 `json:"order_price,omitempty" xml:"order_price,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId    *string                                               `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerList []*FlightOrderDetailV2ResponseBodyModulePassengerList `json:"passenger_list,omitempty" xml:"passenger_list,omitempty" type:"Repeated"`
	// key :passengerId
	//
	// value :segmentId
	PassengerSegmentMap map[string]*string `json:"passenger_segment_map,omitempty" xml:"passenger_segment_map,omitempty"`
	// example:
	//
	// 2023-06-29 15:03:59
	PayTime *string `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	// example:
	//
	// 4500
	Saleprice *int64 `json:"saleprice,omitempty" xml:"saleprice,omitempty"`
	// example:
	//
	// true
	Sendcpsms *bool `json:"sendcpsms,omitempty" xml:"sendcpsms,omitempty"`
	// example:
	//
	// 5
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 3
	TotalServiceFeePrice *int64 `json:"total_service_fee_price,omitempty" xml:"total_service_fee_price,omitempty"`
}

func (s FlightOrderDetailV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetB2gVipCode(v string) *FlightOrderDetailV2ResponseBodyModule {
	s.B2gVipCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetBookSuccTime(v string) *FlightOrderDetailV2ResponseBodyModule {
	s.BookSuccTime = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetBookUserId(v string) *FlightOrderDetailV2ResponseBodyModule {
	s.BookUserId = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetBookUserName(v string) *FlightOrderDetailV2ResponseBodyModule {
	s.BookUserName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetBuildPrice(v int64) *FlightOrderDetailV2ResponseBodyModule {
	s.BuildPrice = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetContactInfoDTO(v *FlightOrderDetailV2ResponseBodyModuleContactInfoDTO) *FlightOrderDetailV2ResponseBodyModule {
	s.ContactInfoDTO = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetCreateTime(v string) *FlightOrderDetailV2ResponseBodyModule {
	s.CreateTime = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetFacevalue(v int64) *FlightOrderDetailV2ResponseBodyModule {
	s.Facevalue = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetFlightTaleInfoDTO(v *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO) *FlightOrderDetailV2ResponseBodyModule {
	s.FlightTaleInfoDTO = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetIsProtocol(v bool) *FlightOrderDetailV2ResponseBodyModule {
	s.IsProtocol = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetIsemergency(v bool) *FlightOrderDetailV2ResponseBodyModule {
	s.Isemergency = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetIssendmessage(v bool) *FlightOrderDetailV2ResponseBodyModule {
	s.Issendmessage = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetOilPrice(v int64) *FlightOrderDetailV2ResponseBodyModule {
	s.OilPrice = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetOrderId(v int64) *FlightOrderDetailV2ResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetOrderPrice(v int64) *FlightOrderDetailV2ResponseBodyModule {
	s.OrderPrice = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetOutOrderId(v string) *FlightOrderDetailV2ResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetPassengerList(v []*FlightOrderDetailV2ResponseBodyModulePassengerList) *FlightOrderDetailV2ResponseBodyModule {
	s.PassengerList = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetPassengerSegmentMap(v map[string]*string) *FlightOrderDetailV2ResponseBodyModule {
	s.PassengerSegmentMap = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetPayTime(v string) *FlightOrderDetailV2ResponseBodyModule {
	s.PayTime = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetSaleprice(v int64) *FlightOrderDetailV2ResponseBodyModule {
	s.Saleprice = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetSendcpsms(v bool) *FlightOrderDetailV2ResponseBodyModule {
	s.Sendcpsms = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetStatus(v int32) *FlightOrderDetailV2ResponseBodyModule {
	s.Status = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModule) SetTotalServiceFeePrice(v int64) *FlightOrderDetailV2ResponseBodyModule {
	s.TotalServiceFeePrice = &v
	return s
}

type FlightOrderDetailV2ResponseBodyModuleContactInfoDTO struct {
	// example:
	//
	// 178169630111@163.com
	ContactEmail *string `json:"contact_email,omitempty" xml:"contact_email,omitempty"`
	ContactName  *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	// example:
	//
	// 178169630111
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	// example:
	//
	// true
	SendMsgToPassenger *bool `json:"send_msg_to_passenger,omitempty" xml:"send_msg_to_passenger,omitempty"`
}

func (s FlightOrderDetailV2ResponseBodyModuleContactInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModuleContactInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModuleContactInfoDTO) SetContactEmail(v string) *FlightOrderDetailV2ResponseBodyModuleContactInfoDTO {
	s.ContactEmail = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleContactInfoDTO) SetContactName(v string) *FlightOrderDetailV2ResponseBodyModuleContactInfoDTO {
	s.ContactName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleContactInfoDTO) SetContactPhone(v string) *FlightOrderDetailV2ResponseBodyModuleContactInfoDTO {
	s.ContactPhone = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleContactInfoDTO) SetSendMsgToPassenger(v bool) *FlightOrderDetailV2ResponseBodyModuleContactInfoDTO {
	s.SendMsgToPassenger = &v
	return s
}

type FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO struct {
	Journeys   []*FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys `json:"journeys,omitempty" xml:"journeys,omitempty" type:"Repeated"`
	NoticeTips *string                                                           `json:"notice_tips,omitempty" xml:"notice_tips,omitempty"`
	TripType   *string                                                           `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
	// example:
	//
	// 2
	TripTypeCode *int32 `json:"trip_type_code,omitempty" xml:"trip_type_code,omitempty"`
}

func (s FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO) SetJourneys(v []*FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO {
	s.Journeys = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO) SetNoticeTips(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO {
	s.NoticeTips = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO) SetTripType(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO {
	s.TripType = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO) SetTripTypeCode(v int32) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTO {
	s.TripTypeCode = &v
	return s
}

type FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys struct {
	// example:
	//
	// 85
	AllFlyDuration *int64 `json:"all_fly_duration,omitempty" xml:"all_fly_duration,omitempty"`
	// example:
	//
	// 85
	AllFlyDurationAfterChange *int64 `json:"all_fly_duration_after_change,omitempty" xml:"all_fly_duration_after_change,omitempty"`
	ApplyId                   *int64 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// XIL
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-07-20 08:25:00
	ArrTime        *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	BaggageDetails *string `json:"baggage_details,omitempty" xml:"baggage_details,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-07-20 07:00:00
	DepTime      *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	FlightStatus *string `json:"flight_status,omitempty" xml:"flight_status,omitempty"`
	// iata_no
	//
	// example:
	//
	// iata_no
	IataNo              *string                                                                      `json:"iata_no,omitempty" xml:"iata_no,omitempty"`
	IsReshopJourney     *bool                                                                        `json:"is_reshop_journey,omitempty" xml:"is_reshop_journey,omitempty"`
	IsTransfer          *bool                                                                        `json:"is_transfer,omitempty" xml:"is_transfer,omitempty"`
	JourneyTitle        *string                                                                      `json:"journey_title,omitempty" xml:"journey_title,omitempty"`
	RefundChangeDetails *string                                                                      `json:"refund_change_details,omitempty" xml:"refund_change_details,omitempty"`
	SegmentList         []*FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList `json:"segment_list,omitempty" xml:"segment_list,omitempty" type:"Repeated"`
}

func (s FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetAllFlyDuration(v int64) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.AllFlyDuration = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetAllFlyDurationAfterChange(v int64) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.AllFlyDurationAfterChange = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetApplyId(v int64) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.ApplyId = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetArrCityCode(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetArrCityName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.ArrCityName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetArrTime(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.ArrTime = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetBaggageDetails(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.BaggageDetails = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetDepCityCode(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.DepCityCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetDepCityName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.DepCityName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetDepTime(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.DepTime = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetFlightStatus(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.FlightStatus = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetIataNo(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.IataNo = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetIsReshopJourney(v bool) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.IsReshopJourney = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetIsTransfer(v bool) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.IsTransfer = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetJourneyTitle(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.JourneyTitle = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetRefundChangeDetails(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.RefundChangeDetails = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys) SetSegmentList(v []*FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneys {
	s.SegmentList = v
	return s
}

type FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList struct {
	// example:
	//
	// CA
	AirLineCode *string `json:"air_line_code,omitempty" xml:"air_line_code,omitempty"`
	// example:
	//
	// Air China Limited
	AirLineEnglishName *string `json:"air_line_english_name,omitempty" xml:"air_line_english_name,omitempty"`
	AirLineName        *string `json:"air_line_name,omitempty" xml:"air_line_name,omitempty"`
	// example:
	//
	// 95583
	AirLinePhone *string `json:"air_line_phone,omitempty" xml:"air_line_phone,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB12fJAFHr1gK0jSZR0XXbP8XXa-450-450.png
	AirlineIconUrl   *string `json:"airline_icon_url,omitempty" xml:"airline_icon_url,omitempty"`
	AirlineShortName *string `json:"airline_short_name,omitempty" xml:"airline_short_name,omitempty"`
	// example:
	//
	// XIL
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrAirportName *string `json:"arr_airport_name,omitempty" xml:"arr_airport_name,omitempty"`
	// example:
	//
	// XIL
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-07-20 08:25:00
	ArrTime        *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	ArriveTerminal *string `json:"arrive_terminal,omitempty" xml:"arrive_terminal,omitempty"`
	// cabin
	Cabin            *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	CabinAndDiscount *string `json:"cabin_and_discount,omitempty" xml:"cabin_and_discount,omitempty"`
	// cabin_class
	//
	// example:
	//
	// Y
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// cabin_class_name
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	// example:
	//
	// false
	CodeShare    *bool   `json:"code_share,omitempty" xml:"code_share,omitempty"`
	DeadlineText *string `json:"deadline_text,omitempty" xml:"deadline_text,omitempty"`
	// example:
	//
	// PEK
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepAirportName *string `json:"dep_airport_name,omitempty" xml:"dep_airport_name,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-07-29
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 2023-07-20 07:00:00
	DepTime        *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	DepartTerminal *string `json:"depart_terminal,omitempty" xml:"depart_terminal,omitempty"`
	// example:
	//
	// 0.4
	Discount     *float64                                                                               `json:"discount,omitempty" xml:"discount,omitempty"`
	FlightChange *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange `json:"flight_change,omitempty" xml:"flight_change,omitempty" type:"Struct"`
	// example:
	//
	// CA1110
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// ARJ
	FlightType                  *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	FlyDuration                 *int32  `json:"fly_duration,omitempty" xml:"fly_duration,omitempty"`
	Manufacturer                *string `json:"manufacturer,omitempty" xml:"manufacturer,omitempty"`
	MealDesc                    *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	OnTimeRate                  *string `json:"on_time_rate,omitempty" xml:"on_time_rate,omitempty"`
	OperatingAirShortName       *string `json:"operating_air_short_name,omitempty" xml:"operating_air_short_name,omitempty"`
	OperatingAirlineCode        *string `json:"operating_airline_code,omitempty" xml:"operating_airline_code,omitempty"`
	OperatingAirlineEnglishName *string `json:"operating_airline_english_name,omitempty" xml:"operating_airline_english_name,omitempty"`
	OperatingAirlineIconUrl     *string `json:"operating_airline_icon_url,omitempty" xml:"operating_airline_icon_url,omitempty"`
	OperatingAirlineName        *string `json:"operating_airline_name,omitempty" xml:"operating_airline_name,omitempty"`
	OperatingAirlinePhone       *string `json:"operating_airline_phone,omitempty" xml:"operating_airline_phone,omitempty"`
	OperatingFlightNo           *string `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
	PlaneType                   *string `json:"plane_type,omitempty" xml:"plane_type,omitempty"`
	RaisePrice                  *int64  `json:"raise_price,omitempty" xml:"raise_price,omitempty"`
	SegmentId                   *string `json:"segment_id,omitempty" xml:"segment_id,omitempty"`
	// segmentIndex
	//
	// example:
	//
	// 0
	SegmentIndex    *int32                                                                                    `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	SegmentPosition *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
	StopAirport     *string                                                                                   `json:"stop_airport,omitempty" xml:"stop_airport,omitempty"`
	StopArrTime     *string                                                                                   `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	StopCity        *string                                                                                   `json:"stop_city,omitempty" xml:"stop_city,omitempty"`
	StopCityName    *string                                                                                   `json:"stop_city_name,omitempty" xml:"stop_city_name,omitempty"`
	StopDepTime     *string                                                                                   `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	StopQuantity    *int32                                                                                    `json:"stop_quantity,omitempty" xml:"stop_quantity,omitempty"`
}

func (s FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetAirLineCode(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.AirLineCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetAirLineEnglishName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.AirLineEnglishName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetAirLineName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.AirLineName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetAirLinePhone(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.AirLinePhone = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetAirlineIconUrl(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.AirlineIconUrl = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetAirlineShortName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.AirlineShortName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetArrAirportCode(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetArrAirportName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.ArrAirportName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetArrCityCode(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetArrCityName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.ArrCityName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetArrTime(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.ArrTime = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetArriveTerminal(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.ArriveTerminal = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetCabin(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.Cabin = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetCabinAndDiscount(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.CabinAndDiscount = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetCabinClass(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.CabinClass = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetCabinClassName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.CabinClassName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetCodeShare(v bool) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.CodeShare = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetDeadlineText(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.DeadlineText = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetDepAirportCode(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.DepAirportCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetDepAirportName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.DepAirportName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetDepCityCode(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.DepCityCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetDepCityName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.DepCityName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetDepDate(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.DepDate = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetDepTime(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.DepTime = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetDepartTerminal(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.DepartTerminal = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetDiscount(v float64) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.Discount = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetFlightChange(v *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.FlightChange = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetFlightNo(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.FlightNo = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetFlightType(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.FlightType = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetFlyDuration(v int32) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.FlyDuration = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetManufacturer(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.Manufacturer = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetMealDesc(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.MealDesc = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetOnTimeRate(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.OnTimeRate = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetOperatingAirShortName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.OperatingAirShortName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetOperatingAirlineCode(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.OperatingAirlineCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetOperatingAirlineEnglishName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.OperatingAirlineEnglishName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetOperatingAirlineIconUrl(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.OperatingAirlineIconUrl = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetOperatingAirlineName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.OperatingAirlineName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetOperatingAirlinePhone(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.OperatingAirlinePhone = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetOperatingFlightNo(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.OperatingFlightNo = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetPlaneType(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.PlaneType = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetRaisePrice(v int64) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.RaisePrice = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetSegmentId(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.SegmentId = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetSegmentIndex(v int32) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.SegmentIndex = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetSegmentPosition(v *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListSegmentPosition) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.SegmentPosition = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetStopAirport(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.StopAirport = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetStopArrTime(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.StopArrTime = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetStopCity(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.StopCity = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetStopCityName(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.StopCityName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetStopDepTime(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.StopDepTime = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList) SetStopQuantity(v int32) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentList {
	s.StopQuantity = &v
	return s
}

type FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange struct {
	ChangeDesc       *string     `json:"change_desc,omitempty" xml:"change_desc,omitempty"`
	ChangeStatus     *string     `json:"change_status,omitempty" xml:"change_status,omitempty"`
	ChangeStatusCode *string     `json:"change_status_code,omitempty" xml:"change_status_code,omitempty"`
	NewSegment       interface{} `json:"new_segment,omitempty" xml:"new_segment,omitempty"`
	PassengerNames   []*string   `json:"passenger_names,omitempty" xml:"passenger_names,omitempty" type:"Repeated"`
}

func (s FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange) SetChangeDesc(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange {
	s.ChangeDesc = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange) SetChangeStatus(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange {
	s.ChangeStatus = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange) SetChangeStatusCode(v string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange {
	s.ChangeStatusCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange) SetNewSegment(v interface{}) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange {
	s.NewSegment = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange) SetPassengerNames(v []*string) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListFlightChange {
	s.PassengerNames = v
	return s
}

type FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListSegmentPosition struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListSegmentPosition) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListSegmentPosition) SetJourneyIndex(v int32) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListSegmentPosition) SetSegmentIndex(v int32) *FlightOrderDetailV2ResponseBodyModuleFlightTaleInfoDTOJourneysSegmentListSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type FlightOrderDetailV2ResponseBodyModulePassengerList struct {
	// example:
	//
	// 1991-06-21 00:00:00
	Birthday *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	// example:
	//
	// 12172819047252004460056
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	Code        *int32  `json:"code,omitempty" xml:"code,omitempty"`
	Country     *string `json:"country,omitempty" xml:"country,omitempty"`
	// example:
	//
	// CN
	CountryCode *string                                                          `json:"country_code,omitempty" xml:"country_code,omitempty"`
	Credential  *FlightOrderDetailV2ResponseBodyModulePassengerListCredential    `json:"credential,omitempty" xml:"credential,omitempty" type:"Struct"`
	Credentials []*FlightOrderDetailV2ResponseBodyModulePassengerListCredentials `json:"credentials,omitempty" xml:"credentials,omitempty" type:"Repeated"`
	// example:
	//
	// 17800000001@163.com
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// san
	EnFirstName *string `json:"en_first_name,omitempty" xml:"en_first_name,omitempty"`
	// example:
	//
	// zhang
	EnLastName *string `json:"en_last_name,omitempty" xml:"en_last_name,omitempty"`
	// example:
	//
	// zhangsan
	EnglishName *string `json:"english_name,omitempty" xml:"english_name,omitempty"`
	// example:
	//
	// 1
	Gender *int32 `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// 3243028
	Id *string `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// true
	IsComplete *bool `json:"is_complete,omitempty" xml:"is_complete,omitempty"`
	// example:
	//
	// false
	IsFrequently *bool   `json:"is_frequently,omitempty" xml:"is_frequently,omitempty"`
	Memo         *string `json:"memo,omitempty" xml:"memo,omitempty"`
	// example:
	//
	// 86
	MobileCountryCode *string `json:"mobile_country_code,omitempty" xml:"mobile_country_code,omitempty"`
	// example:
	//
	// 17800000001
	MobilePhoneNumber *string `json:"mobile_phone_number,omitempty" xml:"mobile_phone_number,omitempty"`
	Name              *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// true
	Oneself   *bool   `json:"oneself,omitempty" xml:"oneself,omitempty"`
	OrderName *string `json:"order_name,omitempty" xml:"order_name,omitempty"`
	// example:
	//
	// 1111
	OutPassengerId *string `json:"out_passenger_id,omitempty" xml:"out_passenger_id,omitempty"`
	// example:
	//
	// 17800000001
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// 111
	ShengPiPinyin *string                                                      `json:"sheng_pi_pinyin,omitempty" xml:"sheng_pi_pinyin,omitempty"`
	TicketNos     []*string                                                    `json:"ticket_nos,omitempty" xml:"ticket_nos,omitempty" type:"Repeated"`
	Tickets       []*FlightOrderDetailV2ResponseBodyModulePassengerListTickets `json:"tickets,omitempty" xml:"tickets,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
	// example:
	//
	// 312312
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s FlightOrderDetailV2ResponseBodyModulePassengerList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModulePassengerList) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetBirthday(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Birthday = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetBtripUserId(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.BtripUserId = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetCode(v int32) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Code = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetCountry(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Country = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetCountryCode(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.CountryCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetCredential(v *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Credential = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetCredentials(v []*FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Credentials = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetEmail(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Email = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetEnFirstName(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.EnFirstName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetEnLastName(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.EnLastName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetEnglishName(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.EnglishName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetGender(v int32) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Gender = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetId(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Id = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetIsComplete(v bool) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.IsComplete = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetIsFrequently(v bool) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.IsFrequently = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetMemo(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Memo = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetMobileCountryCode(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.MobileCountryCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetMobilePhoneNumber(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.MobilePhoneNumber = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetName(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Name = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetOneself(v bool) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Oneself = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetOrderName(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.OrderName = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetOutPassengerId(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.OutPassengerId = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetPhone(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Phone = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetShengPiPinyin(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.ShengPiPinyin = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetTicketNos(v []*string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.TicketNos = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetTickets(v []*FlightOrderDetailV2ResponseBodyModulePassengerListTickets) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Tickets = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetType(v int32) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.Type = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerList) SetUserId(v string) *FlightOrderDetailV2ResponseBodyModulePassengerList {
	s.UserId = &v
	return s
}

type FlightOrderDetailV2ResponseBodyModulePassengerListCredential struct {
	// example:
	//
	// 1991-06-21 00:00:00
	BirthDate *string `json:"birth_date,omitempty" xml:"birth_date,omitempty"`
	// example:
	//
	// 1991-06-21 00:00:00
	CertIssueDate     *string `json:"cert_issue_date,omitempty" xml:"cert_issue_date,omitempty"`
	CertIssuePlace    *string `json:"cert_issue_place,omitempty" xml:"cert_issue_place,omitempty"`
	CredentialNo      *string `json:"credential_no,omitempty" xml:"credential_no,omitempty"`
	DriveLicenceFirst *string `json:"drive_licence_first,omitempty" xml:"drive_licence_first,omitempty"`
	DriveLicenceType  *string `json:"drive_licence_type,omitempty" xml:"drive_licence_type,omitempty"`
	// example:
	//
	// 1991-06-21 00:00:00
	ExpireDate        *string `json:"expire_date,omitempty" xml:"expire_date,omitempty"`
	HolderNationality *string `json:"holder_nationality,omitempty" xml:"holder_nationality,omitempty"`
	// example:
	//
	// 131332
	Id           *int64  `json:"id,omitempty" xml:"id,omitempty"`
	IdCheckCode  *string `json:"id_check_code,omitempty" xml:"id_check_code,omitempty"`
	IssueCountry *string `json:"issue_country,omitempty" xml:"issue_country,omitempty"`
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOrderDetailV2ResponseBodyModulePassengerListCredential) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModulePassengerListCredential) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetBirthDate(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.BirthDate = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetCertIssueDate(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.CertIssueDate = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetCertIssuePlace(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.CertIssuePlace = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetCredentialNo(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.CredentialNo = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetDriveLicenceFirst(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.DriveLicenceFirst = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetDriveLicenceType(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.DriveLicenceType = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetExpireDate(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.ExpireDate = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetHolderNationality(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.HolderNationality = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetId(v int64) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.Id = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetIdCheckCode(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.IdCheckCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetIssueCountry(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.IssueCountry = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredential) SetType(v int32) *FlightOrderDetailV2ResponseBodyModulePassengerListCredential {
	s.Type = &v
	return s
}

type FlightOrderDetailV2ResponseBodyModulePassengerListCredentials struct {
	BirthDate         *string `json:"birth_date,omitempty" xml:"birth_date,omitempty"`
	CertIssueDate     *string `json:"cert_issue_date,omitempty" xml:"cert_issue_date,omitempty"`
	CertIssuePlace    *string `json:"cert_issue_place,omitempty" xml:"cert_issue_place,omitempty"`
	CredentialNo      *string `json:"credential_no,omitempty" xml:"credential_no,omitempty"`
	DriveLicenceFirst *string `json:"drive_licence_first,omitempty" xml:"drive_licence_first,omitempty"`
	DriveLicenceType  *string `json:"drive_licence_type,omitempty" xml:"drive_licence_type,omitempty"`
	ExpireDate        *string `json:"expire_date,omitempty" xml:"expire_date,omitempty"`
	HolderNationality *string `json:"holder_nationality,omitempty" xml:"holder_nationality,omitempty"`
	// example:
	//
	// 131332
	Id           *int64  `json:"id,omitempty" xml:"id,omitempty"`
	IdCheckCode  *string `json:"id_check_code,omitempty" xml:"id_check_code,omitempty"`
	IssueCountry *string `json:"issue_country,omitempty" xml:"issue_country,omitempty"`
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetBirthDate(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.BirthDate = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetCertIssueDate(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.CertIssueDate = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetCertIssuePlace(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.CertIssuePlace = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetCredentialNo(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.CredentialNo = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetDriveLicenceFirst(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.DriveLicenceFirst = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetDriveLicenceType(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.DriveLicenceType = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetExpireDate(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.ExpireDate = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetHolderNationality(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.HolderNationality = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetId(v int64) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.Id = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetIdCheckCode(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.IdCheckCode = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetIssueCountry(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.IssueCountry = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials) SetType(v int32) *FlightOrderDetailV2ResponseBodyModulePassengerListCredentials {
	s.Type = &v
	return s
}

type FlightOrderDetailV2ResponseBodyModulePassengerListTickets struct {
	Channel      *string `json:"channel,omitempty" xml:"channel,omitempty"`
	JourneyTitle *string `json:"journey_title,omitempty" xml:"journey_title,omitempty"`
	// example:
	//
	// OPEN_FOR_USE
	OpenTicketStatus *string `json:"open_ticket_status,omitempty" xml:"open_ticket_status,omitempty"`
	// pcc/office
	//
	// example:
	//
	// pcc/office
	Pcc                   *string                                                                           `json:"pcc,omitempty" xml:"pcc,omitempty"`
	SegmentOpenTicketList []*FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList `json:"segment_open_ticket_list,omitempty" xml:"segment_open_ticket_list,omitempty" type:"Repeated"`
	TicketAuthMemo        *string                                                                           `json:"ticket_auth_memo,omitempty" xml:"ticket_auth_memo,omitempty"`
	// example:
	//
	// 2
	TicketAuthStatus *int32 `json:"ticket_auth_status,omitempty" xml:"ticket_auth_status,omitempty"`
	// example:
	//
	// 444-2023062999
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// example:
	//
	// 4500
	TicketPrice  *int64  `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	TicketStatus *string `json:"ticket_status,omitempty" xml:"ticket_status,omitempty"`
}

func (s FlightOrderDetailV2ResponseBodyModulePassengerListTickets) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModulePassengerListTickets) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTickets) SetChannel(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListTickets {
	s.Channel = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTickets) SetJourneyTitle(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListTickets {
	s.JourneyTitle = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTickets) SetOpenTicketStatus(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListTickets {
	s.OpenTicketStatus = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTickets) SetPcc(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListTickets {
	s.Pcc = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTickets) SetSegmentOpenTicketList(v []*FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList) *FlightOrderDetailV2ResponseBodyModulePassengerListTickets {
	s.SegmentOpenTicketList = v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTickets) SetTicketAuthMemo(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListTickets {
	s.TicketAuthMemo = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTickets) SetTicketAuthStatus(v int32) *FlightOrderDetailV2ResponseBodyModulePassengerListTickets {
	s.TicketAuthStatus = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTickets) SetTicketNo(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListTickets {
	s.TicketNo = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTickets) SetTicketPrice(v int64) *FlightOrderDetailV2ResponseBodyModulePassengerListTickets {
	s.TicketPrice = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTickets) SetTicketStatus(v string) *FlightOrderDetailV2ResponseBodyModulePassengerListTickets {
	s.TicketStatus = &v
	return s
}

type FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList struct {
	JourneyIndex     *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	OpenTicketStatus *int32 `json:"open_ticket_status,omitempty" xml:"open_ticket_status,omitempty"`
	SegmentIndex     *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList) SetJourneyIndex(v int32) *FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList {
	s.JourneyIndex = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList) SetOpenTicketStatus(v int32) *FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList {
	s.OpenTicketStatus = &v
	return s
}

func (s *FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList) SetSegmentIndex(v int32) *FlightOrderDetailV2ResponseBodyModulePassengerListTicketsSegmentOpenTicketList {
	s.SegmentIndex = &v
	return s
}

type FlightOrderDetailV2Response struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightOrderDetailV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightOrderDetailV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderDetailV2Response) GoString() string {
	return s.String()
}

func (s *FlightOrderDetailV2Response) SetHeaders(v map[string]*string) *FlightOrderDetailV2Response {
	s.Headers = v
	return s
}

func (s *FlightOrderDetailV2Response) SetStatusCode(v int32) *FlightOrderDetailV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightOrderDetailV2Response) SetBody(v *FlightOrderDetailV2ResponseBody) *FlightOrderDetailV2Response {
	s.Body = v
	return s
}

type FlightOrderListQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s FlightOrderListQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryHeaders) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryHeaders) SetCommonHeaders(v map[string]*string) *FlightOrderListQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightOrderListQueryHeaders) SetXAcsBtripSoCorpToken(v string) *FlightOrderListQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type FlightOrderListQueryRequest struct {
	// example:
	//
	// false
	AllApply *bool `json:"all_apply,omitempty" xml:"all_apply,omitempty"`
	// example:
	//
	// 175634
	ApplyId  *int64  `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	DepartId *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	EndTime *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 1
	Page *int32 `json:"page,omitempty" xml:"page,omitempty"`
	// example:
	//
	// 10
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	StartTime *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// CS-FLIGHT
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	UpdateEndTime *string `json:"update_end_time,omitempty" xml:"update_end_time,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	UpdateStartTime *string `json:"update_start_time,omitempty" xml:"update_start_time,omitempty"`
	UserId          *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s FlightOrderListQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryRequest) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryRequest) SetAllApply(v bool) *FlightOrderListQueryRequest {
	s.AllApply = &v
	return s
}

func (s *FlightOrderListQueryRequest) SetApplyId(v int64) *FlightOrderListQueryRequest {
	s.ApplyId = &v
	return s
}

func (s *FlightOrderListQueryRequest) SetDepartId(v string) *FlightOrderListQueryRequest {
	s.DepartId = &v
	return s
}

func (s *FlightOrderListQueryRequest) SetEndTime(v string) *FlightOrderListQueryRequest {
	s.EndTime = &v
	return s
}

func (s *FlightOrderListQueryRequest) SetPage(v int32) *FlightOrderListQueryRequest {
	s.Page = &v
	return s
}

func (s *FlightOrderListQueryRequest) SetPageSize(v int32) *FlightOrderListQueryRequest {
	s.PageSize = &v
	return s
}

func (s *FlightOrderListQueryRequest) SetStartTime(v string) *FlightOrderListQueryRequest {
	s.StartTime = &v
	return s
}

func (s *FlightOrderListQueryRequest) SetThirdpartApplyId(v string) *FlightOrderListQueryRequest {
	s.ThirdpartApplyId = &v
	return s
}

func (s *FlightOrderListQueryRequest) SetUpdateEndTime(v string) *FlightOrderListQueryRequest {
	s.UpdateEndTime = &v
	return s
}

func (s *FlightOrderListQueryRequest) SetUpdateStartTime(v string) *FlightOrderListQueryRequest {
	s.UpdateStartTime = &v
	return s
}

func (s *FlightOrderListQueryRequest) SetUserId(v string) *FlightOrderListQueryRequest {
	s.UserId = &v
	return s
}

type FlightOrderListQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code     *string                                   `json:"code,omitempty" xml:"code,omitempty"`
	Message  *string                                   `json:"message,omitempty" xml:"message,omitempty"`
	Module   []*FlightOrderListQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	PageInfo *FlightOrderListQueryResponseBodyPageInfo `json:"page_info,omitempty" xml:"page_info,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightOrderListQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryResponseBody) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryResponseBody) SetCode(v string) *FlightOrderListQueryResponseBody {
	s.Code = &v
	return s
}

func (s *FlightOrderListQueryResponseBody) SetMessage(v string) *FlightOrderListQueryResponseBody {
	s.Message = &v
	return s
}

func (s *FlightOrderListQueryResponseBody) SetModule(v []*FlightOrderListQueryResponseBodyModule) *FlightOrderListQueryResponseBody {
	s.Module = v
	return s
}

func (s *FlightOrderListQueryResponseBody) SetPageInfo(v *FlightOrderListQueryResponseBodyPageInfo) *FlightOrderListQueryResponseBody {
	s.PageInfo = v
	return s
}

func (s *FlightOrderListQueryResponseBody) SetRequestId(v string) *FlightOrderListQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightOrderListQueryResponseBody) SetSuccess(v bool) *FlightOrderListQueryResponseBody {
	s.Success = &v
	return s
}

func (s *FlightOrderListQueryResponseBody) SetTraceId(v string) *FlightOrderListQueryResponseBody {
	s.TraceId = &v
	return s
}

type FlightOrderListQueryResponseBodyModule struct {
	// example:
	//
	// 11774
	ApplyId       *int64  `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ArrAirport    *string `json:"arr_airport,omitempty" xml:"arr_airport,omitempty"`
	ArrCity       *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrCityAdCode *string `json:"arr_city_ad_code,omitempty" xml:"arr_city_ad_code,omitempty"`
	BtripTitle    *string `json:"btrip_title,omitempty" xml:"btrip_title,omitempty"`
	// example:
	//
	// Y
	CabinClass    *string                                           `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	ContactName   *string                                           `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	CorpId        *string                                           `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName      *string                                           `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	CostCenter    *FlightOrderListQueryResponseBodyModuleCostCenter `json:"cost_center,omitempty" xml:"cost_center,omitempty" type:"Struct"`
	DepAirport    *string                                           `json:"dep_airport,omitempty" xml:"dep_airport,omitempty"`
	DepCity       *string                                           `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	DepCityAdCode *string                                           `json:"dep_city_ad_code,omitempty" xml:"dep_city_ad_code,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	DepDate    *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// example:
	//
	// 30.12%
	Discount *string `json:"discount,omitempty" xml:"discount,omitempty"`
	// example:
	//
	// MU7854
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtModified *string `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	// example:
	//
	// 200042
	Id             *int64                                                  `json:"id,omitempty" xml:"id,omitempty"`
	InsureInfoList []*FlightOrderListQueryResponseBodyModuleInsureInfoList `json:"insure_info_list,omitempty" xml:"insure_info_list,omitempty" type:"Repeated"`
	Invoice        *FlightOrderListQueryResponseBodyModuleInvoice          `json:"invoice,omitempty" xml:"invoice,omitempty" type:"Struct"`
	// example:
	//
	// 4
	PassengerCount *int32                                                 `json:"passenger_count,omitempty" xml:"passenger_count,omitempty"`
	PassengerName  *string                                                `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	PriceInfoList  []*FlightOrderListQueryResponseBodyModulePriceInfoList `json:"price_info_list,omitempty" xml:"price_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// CS-PROJECT
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	// example:
	//
	// CS-PROJECT
	ProjectId    *int64  `json:"project_id,omitempty" xml:"project_id,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	RetDate *string `json:"ret_date,omitempty" xml:"ret_date,omitempty"`
	// example:
	//
	// 0
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// CS-PROJECT
	ThirdPartProjectId *string `json:"third_part_project_id,omitempty" xml:"third_part_project_id,omitempty"`
	// example:
	//
	// CS-UMN98989
	ThirdpartApplyId    *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	// example:
	//
	// cs9897766
	ThirdpartItineraryId *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// 0
	TripType          *int32                                                     `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
	UserAffiliateList []*FlightOrderListQueryResponseBodyModuleUserAffiliateList `json:"user_affiliate_list,omitempty" xml:"user_affiliate_list,omitempty" type:"Repeated"`
	UserId            *string                                                    `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName          *string                                                    `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s FlightOrderListQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryResponseBodyModule) SetApplyId(v int64) *FlightOrderListQueryResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetArrAirport(v string) *FlightOrderListQueryResponseBodyModule {
	s.ArrAirport = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetArrCity(v string) *FlightOrderListQueryResponseBodyModule {
	s.ArrCity = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetArrCityAdCode(v string) *FlightOrderListQueryResponseBodyModule {
	s.ArrCityAdCode = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetBtripTitle(v string) *FlightOrderListQueryResponseBodyModule {
	s.BtripTitle = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetCabinClass(v string) *FlightOrderListQueryResponseBodyModule {
	s.CabinClass = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetContactName(v string) *FlightOrderListQueryResponseBodyModule {
	s.ContactName = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetCorpId(v string) *FlightOrderListQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetCorpName(v string) *FlightOrderListQueryResponseBodyModule {
	s.CorpName = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetCostCenter(v *FlightOrderListQueryResponseBodyModuleCostCenter) *FlightOrderListQueryResponseBodyModule {
	s.CostCenter = v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetDepAirport(v string) *FlightOrderListQueryResponseBodyModule {
	s.DepAirport = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetDepCity(v string) *FlightOrderListQueryResponseBodyModule {
	s.DepCity = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetDepCityAdCode(v string) *FlightOrderListQueryResponseBodyModule {
	s.DepCityAdCode = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetDepDate(v string) *FlightOrderListQueryResponseBodyModule {
	s.DepDate = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetDepartId(v string) *FlightOrderListQueryResponseBodyModule {
	s.DepartId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetDepartName(v string) *FlightOrderListQueryResponseBodyModule {
	s.DepartName = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetDiscount(v string) *FlightOrderListQueryResponseBodyModule {
	s.Discount = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetFlightNo(v string) *FlightOrderListQueryResponseBodyModule {
	s.FlightNo = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetGmtCreate(v string) *FlightOrderListQueryResponseBodyModule {
	s.GmtCreate = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetGmtModified(v string) *FlightOrderListQueryResponseBodyModule {
	s.GmtModified = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetId(v int64) *FlightOrderListQueryResponseBodyModule {
	s.Id = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetInsureInfoList(v []*FlightOrderListQueryResponseBodyModuleInsureInfoList) *FlightOrderListQueryResponseBodyModule {
	s.InsureInfoList = v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetInvoice(v *FlightOrderListQueryResponseBodyModuleInvoice) *FlightOrderListQueryResponseBodyModule {
	s.Invoice = v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetPassengerCount(v int32) *FlightOrderListQueryResponseBodyModule {
	s.PassengerCount = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetPassengerName(v string) *FlightOrderListQueryResponseBodyModule {
	s.PassengerName = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetPriceInfoList(v []*FlightOrderListQueryResponseBodyModulePriceInfoList) *FlightOrderListQueryResponseBodyModule {
	s.PriceInfoList = v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetProjectCode(v string) *FlightOrderListQueryResponseBodyModule {
	s.ProjectCode = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetProjectId(v int64) *FlightOrderListQueryResponseBodyModule {
	s.ProjectId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetProjectTitle(v string) *FlightOrderListQueryResponseBodyModule {
	s.ProjectTitle = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetRetDate(v string) *FlightOrderListQueryResponseBodyModule {
	s.RetDate = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetStatus(v int32) *FlightOrderListQueryResponseBodyModule {
	s.Status = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetThirdPartProjectId(v string) *FlightOrderListQueryResponseBodyModule {
	s.ThirdPartProjectId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetThirdpartApplyId(v string) *FlightOrderListQueryResponseBodyModule {
	s.ThirdpartApplyId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetThirdpartBusinessId(v string) *FlightOrderListQueryResponseBodyModule {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetThirdpartItineraryId(v string) *FlightOrderListQueryResponseBodyModule {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetTripType(v int32) *FlightOrderListQueryResponseBodyModule {
	s.TripType = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetUserAffiliateList(v []*FlightOrderListQueryResponseBodyModuleUserAffiliateList) *FlightOrderListQueryResponseBodyModule {
	s.UserAffiliateList = v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetUserId(v string) *FlightOrderListQueryResponseBodyModule {
	s.UserId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModule) SetUserName(v string) *FlightOrderListQueryResponseBodyModule {
	s.UserName = &v
	return s
}

type FlightOrderListQueryResponseBodyModuleCostCenter struct {
	CorpId *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	// example:
	//
	// 44632
	Id   *int64  `json:"id,omitempty" xml:"id,omitempty"`
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// NM98767
	Number *string `json:"number,omitempty" xml:"number,omitempty"`
}

func (s FlightOrderListQueryResponseBodyModuleCostCenter) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryResponseBodyModuleCostCenter) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryResponseBodyModuleCostCenter) SetCorpId(v string) *FlightOrderListQueryResponseBodyModuleCostCenter {
	s.CorpId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModuleCostCenter) SetId(v int64) *FlightOrderListQueryResponseBodyModuleCostCenter {
	s.Id = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModuleCostCenter) SetName(v string) *FlightOrderListQueryResponseBodyModuleCostCenter {
	s.Name = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModuleCostCenter) SetNumber(v string) *FlightOrderListQueryResponseBodyModuleCostCenter {
	s.Number = &v
	return s
}

type FlightOrderListQueryResponseBodyModuleInsureInfoList struct {
	// example:
	//
	// KJ-879657
	InsureNo *string `json:"insure_no,omitempty" xml:"insure_no,omitempty"`
	Name     *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
}

func (s FlightOrderListQueryResponseBodyModuleInsureInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryResponseBodyModuleInsureInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryResponseBodyModuleInsureInfoList) SetInsureNo(v string) *FlightOrderListQueryResponseBodyModuleInsureInfoList {
	s.InsureNo = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModuleInsureInfoList) SetName(v string) *FlightOrderListQueryResponseBodyModuleInsureInfoList {
	s.Name = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModuleInsureInfoList) SetStatus(v int32) *FlightOrderListQueryResponseBodyModuleInsureInfoList {
	s.Status = &v
	return s
}

type FlightOrderListQueryResponseBodyModuleInvoice struct {
	// example:
	//
	// 7304
	Id    *int64  `json:"id,omitempty" xml:"id,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOrderListQueryResponseBodyModuleInvoice) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryResponseBodyModuleInvoice) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryResponseBodyModuleInvoice) SetId(v int64) *FlightOrderListQueryResponseBodyModuleInvoice {
	s.Id = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModuleInvoice) SetTitle(v string) *FlightOrderListQueryResponseBodyModuleInvoice {
	s.Title = &v
	return s
}

type FlightOrderListQueryResponseBodyModulePriceInfoList struct {
	// example:
	//
	// 1
	CategoryCode *int32 `json:"category_code,omitempty" xml:"category_code,omitempty"`
	// example:
	//
	// 1
	CategoryType *int32 `json:"category_type,omitempty" xml:"category_type,omitempty"`
	// example:
	//
	// MU5354
	ChangeFlightNo *string `json:"change_flight_no,omitempty" xml:"change_flight_no,omitempty"`
	// example:
	//
	// 12%
	Discount *string `json:"discount,omitempty" xml:"discount,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	EndTime *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 00-7687
	OriginalTicketNo *string `json:"original_ticket_no,omitempty" xml:"original_ticket_no,omitempty"`
	PassengerName    *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 1
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 100
	Price *float64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	StartTime *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// A-135767
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// example:
	//
	// f98236773
	TradeId *string `json:"trade_id,omitempty" xml:"trade_id,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOrderListQueryResponseBodyModulePriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryResponseBodyModulePriceInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetCategoryCode(v int32) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.CategoryCode = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetCategoryType(v int32) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.CategoryType = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetChangeFlightNo(v string) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.ChangeFlightNo = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetDiscount(v string) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.Discount = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetEndTime(v string) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.EndTime = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetGmtCreate(v string) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.GmtCreate = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetOriginalTicketNo(v string) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.OriginalTicketNo = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetPassengerName(v string) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.PassengerName = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetPayType(v int32) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.PayType = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetPrice(v float64) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.Price = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetStartTime(v string) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.StartTime = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetTicketNo(v string) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.TicketNo = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetTradeId(v string) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.TradeId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModulePriceInfoList) SetType(v int32) *FlightOrderListQueryResponseBodyModulePriceInfoList {
	s.Type = &v
	return s
}

type FlightOrderListQueryResponseBodyModuleUserAffiliateList struct {
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s FlightOrderListQueryResponseBodyModuleUserAffiliateList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryResponseBodyModuleUserAffiliateList) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryResponseBodyModuleUserAffiliateList) SetUserId(v string) *FlightOrderListQueryResponseBodyModuleUserAffiliateList {
	s.UserId = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyModuleUserAffiliateList) SetUserName(v string) *FlightOrderListQueryResponseBodyModuleUserAffiliateList {
	s.UserName = &v
	return s
}

type FlightOrderListQueryResponseBodyPageInfo struct {
	// example:
	//
	// 1
	Page *int32 `json:"page,omitempty" xml:"page,omitempty"`
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 100
	TotalNumber *int32 `json:"total_number,omitempty" xml:"total_number,omitempty"`
}

func (s FlightOrderListQueryResponseBodyPageInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryResponseBodyPageInfo) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryResponseBodyPageInfo) SetPage(v int32) *FlightOrderListQueryResponseBodyPageInfo {
	s.Page = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyPageInfo) SetPageSize(v int32) *FlightOrderListQueryResponseBodyPageInfo {
	s.PageSize = &v
	return s
}

func (s *FlightOrderListQueryResponseBodyPageInfo) SetTotalNumber(v int32) *FlightOrderListQueryResponseBodyPageInfo {
	s.TotalNumber = &v
	return s
}

type FlightOrderListQueryResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightOrderListQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightOrderListQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderListQueryResponse) GoString() string {
	return s.String()
}

func (s *FlightOrderListQueryResponse) SetHeaders(v map[string]*string) *FlightOrderListQueryResponse {
	s.Headers = v
	return s
}

func (s *FlightOrderListQueryResponse) SetStatusCode(v int32) *FlightOrderListQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightOrderListQueryResponse) SetBody(v *FlightOrderListQueryResponseBody) *FlightOrderListQueryResponse {
	s.Body = v
	return s
}

type FlightOrderQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s FlightOrderQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryHeaders) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryHeaders) SetCommonHeaders(v map[string]*string) *FlightOrderQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightOrderQueryHeaders) SetXAcsBtripSoCorpToken(v string) *FlightOrderQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type FlightOrderQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 246584390
	OrderId *int64  `json:"order_id,omitempty" xml:"order_id,omitempty"`
	UserId  *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s FlightOrderQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryRequest) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryRequest) SetOrderId(v int64) *FlightOrderQueryRequest {
	s.OrderId = &v
	return s
}

func (s *FlightOrderQueryRequest) SetUserId(v string) *FlightOrderQueryRequest {
	s.UserId = &v
	return s
}

type FlightOrderQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                             `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                             `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightOrderQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightOrderQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBody) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBody) SetCode(v string) *FlightOrderQueryResponseBody {
	s.Code = &v
	return s
}

func (s *FlightOrderQueryResponseBody) SetMessage(v string) *FlightOrderQueryResponseBody {
	s.Message = &v
	return s
}

func (s *FlightOrderQueryResponseBody) SetModule(v *FlightOrderQueryResponseBodyModule) *FlightOrderQueryResponseBody {
	s.Module = v
	return s
}

func (s *FlightOrderQueryResponseBody) SetRequestId(v string) *FlightOrderQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightOrderQueryResponseBody) SetSuccess(v bool) *FlightOrderQueryResponseBody {
	s.Success = &v
	return s
}

func (s *FlightOrderQueryResponseBody) SetTraceId(v string) *FlightOrderQueryResponseBody {
	s.TraceId = &v
	return s
}

type FlightOrderQueryResponseBodyModule struct {
	FlightChangeTicketInfoList []*FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList `json:"flight_change_ticket_info_list,omitempty" xml:"flight_change_ticket_info_list,omitempty" type:"Repeated"`
	FlightInfoList             []*FlightOrderQueryResponseBodyModuleFlightInfoList             `json:"flight_info_list,omitempty" xml:"flight_info_list,omitempty" type:"Repeated"`
	FlightRefundTicketInfoList []*FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList `json:"flight_refund_ticket_info_list,omitempty" xml:"flight_refund_ticket_info_list,omitempty" type:"Repeated"`
	FlightTicketInfoList       []*FlightOrderQueryResponseBodyModuleFlightTicketInfoList       `json:"flight_ticket_info_list,omitempty" xml:"flight_ticket_info_list,omitempty" type:"Repeated"`
	InsuranceInfoList          []*FlightOrderQueryResponseBodyModuleInsuranceInfoList          `json:"insurance_info_list,omitempty" xml:"insurance_info_list,omitempty" type:"Repeated"`
	InvoiceInfo                *FlightOrderQueryResponseBodyModuleInvoiceInfo                  `json:"invoice_info,omitempty" xml:"invoice_info,omitempty" type:"Struct"`
	OrderBaseInfo              *FlightOrderQueryResponseBodyModuleOrderBaseInfo                `json:"order_base_info,omitempty" xml:"order_base_info,omitempty" type:"Struct"`
	PassengerInfoList          []*FlightOrderQueryResponseBodyModulePassengerInfoList          `json:"passenger_info_list,omitempty" xml:"passenger_info_list,omitempty" type:"Repeated"`
	PriceInfoList              []*FlightOrderQueryResponseBodyModulePriceInfoList              `json:"price_info_list,omitempty" xml:"price_info_list,omitempty" type:"Repeated"`
}

func (s FlightOrderQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBodyModule) SetFlightChangeTicketInfoList(v []*FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) *FlightOrderQueryResponseBodyModule {
	s.FlightChangeTicketInfoList = v
	return s
}

func (s *FlightOrderQueryResponseBodyModule) SetFlightInfoList(v []*FlightOrderQueryResponseBodyModuleFlightInfoList) *FlightOrderQueryResponseBodyModule {
	s.FlightInfoList = v
	return s
}

func (s *FlightOrderQueryResponseBodyModule) SetFlightRefundTicketInfoList(v []*FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) *FlightOrderQueryResponseBodyModule {
	s.FlightRefundTicketInfoList = v
	return s
}

func (s *FlightOrderQueryResponseBodyModule) SetFlightTicketInfoList(v []*FlightOrderQueryResponseBodyModuleFlightTicketInfoList) *FlightOrderQueryResponseBodyModule {
	s.FlightTicketInfoList = v
	return s
}

func (s *FlightOrderQueryResponseBodyModule) SetInsuranceInfoList(v []*FlightOrderQueryResponseBodyModuleInsuranceInfoList) *FlightOrderQueryResponseBodyModule {
	s.InsuranceInfoList = v
	return s
}

func (s *FlightOrderQueryResponseBodyModule) SetInvoiceInfo(v *FlightOrderQueryResponseBodyModuleInvoiceInfo) *FlightOrderQueryResponseBodyModule {
	s.InvoiceInfo = v
	return s
}

func (s *FlightOrderQueryResponseBodyModule) SetOrderBaseInfo(v *FlightOrderQueryResponseBodyModuleOrderBaseInfo) *FlightOrderQueryResponseBodyModule {
	s.OrderBaseInfo = v
	return s
}

func (s *FlightOrderQueryResponseBodyModule) SetPassengerInfoList(v []*FlightOrderQueryResponseBodyModulePassengerInfoList) *FlightOrderQueryResponseBodyModule {
	s.PassengerInfoList = v
	return s
}

func (s *FlightOrderQueryResponseBodyModule) SetPriceInfoList(v []*FlightOrderQueryResponseBodyModulePriceInfoList) *FlightOrderQueryResponseBodyModule {
	s.PriceInfoList = v
	return s
}

type FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList struct {
	ApplyId        *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ArrAirport     *string `json:"arr_airport,omitempty" xml:"arr_airport,omitempty"`
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrCity        *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrCityCode    *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// V
	ChangeCabin *string `json:"change_cabin,omitempty" xml:"change_cabin,omitempty"`
	// example:
	//
	// Y
	ChangeCabinLevel *string `json:"change_cabin_level,omitempty" xml:"change_cabin_level,omitempty"`
	// example:
	//
	// 100
	ChangeFee *float64 `json:"change_fee,omitempty" xml:"change_fee,omitempty"`
	// example:
	//
	// MU7767
	ChangeFlightNo *string `json:"change_flight_no,omitempty" xml:"change_flight_no,omitempty"`
	// example:
	//
	// 33576
	ChangeOrderId *int64  `json:"change_order_id,omitempty" xml:"change_order_id,omitempty"`
	ChangeReason  *string `json:"change_reason,omitempty" xml:"change_reason,omitempty"`
	// example:
	//
	// 0
	ChangeType     *int32  `json:"change_type,omitempty" xml:"change_type,omitempty"`
	DepAirport     *string `json:"dep_airport,omitempty" xml:"dep_airport,omitempty"`
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepCity        *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	DepCityCode    *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	DepTime  *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	Discount *string `json:"discount,omitempty" xml:"discount,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtModify *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// 00-123123
	OriginTicketNo *string `json:"origin_ticket_no,omitempty" xml:"origin_ticket_no,omitempty"`
	OutApplyId     *string `json:"out_apply_id,omitempty" xml:"out_apply_id,omitempty"`
	StopCity       *string `json:"stop_city,omitempty" xml:"stop_city,omitempty"`
	// example:
	//
	// 000-123123
	TicketNo         *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	TicketStatus     *string `json:"ticket_status,omitempty" xml:"ticket_status,omitempty"`
	TicketStatusCode *int32  `json:"ticket_status_code,omitempty" xml:"ticket_status_code,omitempty"`
	// example:
	//
	// 100
	UpgradeFee *float64 `json:"upgrade_fee,omitempty" xml:"upgrade_fee,omitempty"`
}

func (s FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetApplyId(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ApplyId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetArrAirport(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ArrAirport = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetArrAirportCode(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetArrCity(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ArrCity = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetArrCityCode(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetArrTime(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ArrTime = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetChangeCabin(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ChangeCabin = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetChangeCabinLevel(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ChangeCabinLevel = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetChangeFee(v float64) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ChangeFee = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetChangeFlightNo(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ChangeFlightNo = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetChangeOrderId(v int64) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ChangeOrderId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetChangeReason(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ChangeReason = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetChangeType(v int32) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.ChangeType = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetDepAirport(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.DepAirport = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetDepAirportCode(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.DepAirportCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetDepCity(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.DepCity = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetDepCityCode(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.DepCityCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetDepTime(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.DepTime = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetDiscount(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.Discount = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetGmtCreate(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.GmtCreate = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetGmtModify(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.GmtModify = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetOriginTicketNo(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.OriginTicketNo = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetOutApplyId(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.OutApplyId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetStopCity(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.StopCity = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetTicketNo(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.TicketNo = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetTicketStatus(v string) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.TicketStatus = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetTicketStatusCode(v int32) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.TicketStatusCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList) SetUpgradeFee(v float64) *FlightOrderQueryResponseBodyModuleFlightChangeTicketInfoList {
	s.UpgradeFee = &v
	return s
}

type FlightOrderQueryResponseBodyModuleFlightInfoList struct {
	// example:
	//
	// MU
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	// example:
	//
	// LHW
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrAirportName *string `json:"arr_airport_name,omitempty" xml:"arr_airport_name,omitempty"`
	ArrCityAdCode  *string `json:"arr_city_ad_code,omitempty" xml:"arr_city_ad_code,omitempty"`
	// example:
	//
	// LHW
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// V
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinLevel *string `json:"cabin_level,omitempty" xml:"cabin_level,omitempty"`
	// example:
	//
	// NGB
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepAirportName *string `json:"dep_airport_name,omitempty" xml:"dep_airport_name,omitempty"`
	DepCityAdCode  *string `json:"dep_city_ad_code,omitempty" xml:"dep_city_ad_code,omitempty"`
	// example:
	//
	// NGB
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 900
	FlightMile *int32 `json:"flight_mile,omitempty" xml:"flight_mile,omitempty"`
	// example:
	//
	// MU3849
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
}

func (s FlightOrderQueryResponseBodyModuleFlightInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBodyModuleFlightInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetAirlineCode(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.AirlineCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetAirlineName(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.AirlineName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetArrAirportCode(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetArrAirportName(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.ArrAirportName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetArrCityAdCode(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.ArrCityAdCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetArrCityCode(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetArrCityName(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.ArrCityName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetArrTime(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.ArrTime = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetCabin(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.Cabin = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetCabinLevel(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.CabinLevel = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetDepAirportCode(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.DepAirportCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetDepAirportName(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.DepAirportName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetDepCityAdCode(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.DepCityAdCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetDepCityCode(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.DepCityCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetDepCityName(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.DepCityName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetDepTime(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.DepTime = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetFlightMile(v int32) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.FlightMile = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightInfoList) SetFlightNo(v string) *FlightOrderQueryResponseBodyModuleFlightInfoList {
	s.FlightNo = &v
	return s
}

type FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList struct {
	ApplyId                *string  `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ArrAirport             *string  `json:"arr_airport,omitempty" xml:"arr_airport,omitempty"`
	ArrAirportCode         *string  `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrCity                *string  `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrCityCode            *string  `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	CompanyRefundTicketFee *float64 `json:"company_refund_ticket_fee,omitempty" xml:"company_refund_ticket_fee,omitempty"`
	DepAirport             *string  `json:"dep_airport,omitempty" xml:"dep_airport,omitempty"`
	DepAirportCode         *string  `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepCity                *string  `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	DepCityCode            *string  `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	FlightNo               *string  `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtModify               *string  `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	OutApplyId              *string  `json:"out_apply_id,omitempty" xml:"out_apply_id,omitempty"`
	PersonalRefundTicketFee *float64 `json:"personal_refund_ticket_fee,omitempty" xml:"personal_refund_ticket_fee,omitempty"`
	// example:
	//
	// 43667
	RefundOrderId *int64  `json:"refund_order_id,omitempty" xml:"refund_order_id,omitempty"`
	RefundReason  *string `json:"refund_reason,omitempty" xml:"refund_reason,omitempty"`
	// example:
	//
	// 100
	RefundTicketFee *float64 `json:"refund_ticket_fee,omitempty" xml:"refund_ticket_fee,omitempty"`
	// example:
	//
	// 0
	RefundType *int32 `json:"refund_type,omitempty" xml:"refund_type,omitempty"`
	// example:
	//
	// 000-13232
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
}

func (s FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetApplyId(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.ApplyId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetArrAirport(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.ArrAirport = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetArrAirportCode(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetArrCity(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.ArrCity = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetArrCityCode(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetCompanyRefundTicketFee(v float64) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.CompanyRefundTicketFee = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetDepAirport(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.DepAirport = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetDepAirportCode(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.DepAirportCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetDepCity(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.DepCity = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetDepCityCode(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.DepCityCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetFlightNo(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.FlightNo = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetGmtCreate(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.GmtCreate = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetGmtModify(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.GmtModify = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetOutApplyId(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.OutApplyId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetPersonalRefundTicketFee(v float64) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.PersonalRefundTicketFee = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetRefundOrderId(v int64) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.RefundOrderId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetRefundReason(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.RefundReason = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetRefundTicketFee(v float64) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.RefundTicketFee = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetRefundType(v int32) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.RefundType = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList) SetTicketNo(v string) *FlightOrderQueryResponseBodyModuleFlightRefundTicketInfoList {
	s.TicketNo = &v
	return s
}

type FlightOrderQueryResponseBodyModuleFlightTicketInfoList struct {
	ArrAirport     *string `json:"arr_airport,omitempty" xml:"arr_airport,omitempty"`
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	// example:
	//
	// 100
	BuildPrice *float64 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// false
	Changed        *bool   `json:"changed,omitempty" xml:"changed,omitempty"`
	DepAirport     *string `json:"dep_airport,omitempty" xml:"dep_airport,omitempty"`
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	// example:
	//
	// 10
	Discount *int32  `json:"discount,omitempty" xml:"discount,omitempty"`
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtModify *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// 100
	OilPrice *float64 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	// example:
	//
	// 1
	PayType       *int32   `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	PersonalPrice *float64 `json:"personal_price,omitempty" xml:"personal_price,omitempty"`
	// example:
	//
	// 100
	SettlePrice *float64 `json:"settle_price,omitempty" xml:"settle_price,omitempty"`
	// example:
	//
	// 000-123
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// example:
	//
	// 100
	TicketPrice *float64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// OPEN
	TicketStatus *string `json:"ticket_status,omitempty" xml:"ticket_status,omitempty"`
	// example:
	//
	// 1
	TicketStatusCode *int32  `json:"ticket_status_code,omitempty" xml:"ticket_status_code,omitempty"`
	UserId           *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s FlightOrderQueryResponseBodyModuleFlightTicketInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBodyModuleFlightTicketInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetArrAirport(v string) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.ArrAirport = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetArrAirportCode(v string) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetBuildPrice(v float64) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.BuildPrice = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetChanged(v bool) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.Changed = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetDepAirport(v string) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.DepAirport = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetDepAirportCode(v string) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.DepAirportCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetDiscount(v int32) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.Discount = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetFlightNo(v string) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.FlightNo = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetGmtCreate(v string) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.GmtCreate = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetGmtModify(v string) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.GmtModify = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetOilPrice(v float64) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.OilPrice = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetPayType(v int32) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.PayType = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetPersonalPrice(v float64) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.PersonalPrice = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetSettlePrice(v float64) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.SettlePrice = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetTicketNo(v string) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.TicketNo = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetTicketPrice(v float64) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.TicketPrice = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetTicketStatus(v string) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.TicketStatus = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetTicketStatusCode(v int32) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.TicketStatusCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleFlightTicketInfoList) SetUserId(v string) *FlightOrderQueryResponseBodyModuleFlightTicketInfoList {
	s.UserId = &v
	return s
}

type FlightOrderQueryResponseBodyModuleInsuranceInfoList struct {
	// example:
	//
	// 100
	Amount *float64 `json:"amount,omitempty" xml:"amount,omitempty"`
	// example:
	//
	// 345-987-098
	InsuranceNo *string `json:"insurance_no,omitempty" xml:"insurance_no,omitempty"`
	// example:
	//
	// 1
	Status *int32  `json:"status,omitempty" xml:"status,omitempty"`
	Type   *string `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOrderQueryResponseBodyModuleInsuranceInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBodyModuleInsuranceInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBodyModuleInsuranceInfoList) SetAmount(v float64) *FlightOrderQueryResponseBodyModuleInsuranceInfoList {
	s.Amount = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleInsuranceInfoList) SetInsuranceNo(v string) *FlightOrderQueryResponseBodyModuleInsuranceInfoList {
	s.InsuranceNo = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleInsuranceInfoList) SetStatus(v int32) *FlightOrderQueryResponseBodyModuleInsuranceInfoList {
	s.Status = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleInsuranceInfoList) SetType(v string) *FlightOrderQueryResponseBodyModuleInsuranceInfoList {
	s.Type = &v
	return s
}

type FlightOrderQueryResponseBodyModuleInvoiceInfo struct {
	// example:
	//
	// 43316
	Id    *int64  `json:"id,omitempty" xml:"id,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOrderQueryResponseBodyModuleInvoiceInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBodyModuleInvoiceInfo) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBodyModuleInvoiceInfo) SetId(v int64) *FlightOrderQueryResponseBodyModuleInvoiceInfo {
	s.Id = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleInvoiceInfo) SetTitle(v string) *FlightOrderQueryResponseBodyModuleInvoiceInfo {
	s.Title = &v
	return s
}

type FlightOrderQueryResponseBodyModuleOrderBaseInfo struct {
	// example:
	//
	// 175634
	ApplyId                *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	BtripTitle             *string `json:"btrip_title,omitempty" xml:"btrip_title,omitempty"`
	ContactName            *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	CorpId                 *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName               *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	DepartId               *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName             *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	ExceedApplyId          *string `json:"exceed_apply_id,omitempty" xml:"exceed_apply_id,omitempty"`
	ExceedThirdPartApplyId *string `json:"exceed_third_part_apply_id,omitempty" xml:"exceed_third_part_apply_id,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtModify *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// 13628
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	// example:
	//
	// 146178
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 5
	OrderStatus *int32 `json:"order_status,omitempty" xml:"order_status,omitempty"`
	// example:
	//
	// CS-FLIGHT
	ThirdpartApplyId    *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	ThirdpartCorpId     *string `json:"thirdpart_corp_id,omitempty" xml:"thirdpart_corp_id,omitempty"`
	// example:
	//
	// CS-FLIGHT
	ThirdpartItineraryId *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// 0
	TripType *int32  `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s FlightOrderQueryResponseBodyModuleOrderBaseInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBodyModuleOrderBaseInfo) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetApplyId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ApplyId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetBtripTitle(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.BtripTitle = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetContactName(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ContactName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetCorpId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.CorpId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetCorpName(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.CorpName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetDepartId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.DepartId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetDepartName(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.DepartName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetExceedApplyId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ExceedApplyId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetExceedThirdPartApplyId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ExceedThirdPartApplyId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetGmtCreate(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.GmtCreate = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetGmtModify(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.GmtModify = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetItineraryId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ItineraryId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetOrderId(v int64) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.OrderId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetOrderStatus(v int32) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.OrderStatus = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartApplyId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartApplyId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartBusinessId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartCorpId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartCorpId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartItineraryId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetTripType(v int32) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.TripType = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModuleOrderBaseInfo) SetUserId(v string) *FlightOrderQueryResponseBodyModuleOrderBaseInfo {
	s.UserId = &v
	return s
}

type FlightOrderQueryResponseBodyModulePassengerInfoList struct {
	// example:
	//
	// 13446
	CostCenterId   *int64  `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// CS-3345
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// CS-PROJECT
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	// example:
	//
	// 133576
	ProjectId    *int64  `json:"project_id,omitempty" xml:"project_id,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// example:
	//
	// CS-THIRDPROJECT
	ThirdpartProjectId *string `json:"thirdpart_project_id,omitempty" xml:"thirdpart_project_id,omitempty"`
	UserId             *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName           *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	// example:
	//
	// 0
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s FlightOrderQueryResponseBodyModulePassengerInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBodyModulePassengerInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBodyModulePassengerInfoList) SetCostCenterId(v int64) *FlightOrderQueryResponseBodyModulePassengerInfoList {
	s.CostCenterId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePassengerInfoList) SetCostCenterName(v string) *FlightOrderQueryResponseBodyModulePassengerInfoList {
	s.CostCenterName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePassengerInfoList) SetCostCenterNumber(v string) *FlightOrderQueryResponseBodyModulePassengerInfoList {
	s.CostCenterNumber = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePassengerInfoList) SetProjectCode(v string) *FlightOrderQueryResponseBodyModulePassengerInfoList {
	s.ProjectCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePassengerInfoList) SetProjectId(v int64) *FlightOrderQueryResponseBodyModulePassengerInfoList {
	s.ProjectId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePassengerInfoList) SetProjectTitle(v string) *FlightOrderQueryResponseBodyModulePassengerInfoList {
	s.ProjectTitle = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePassengerInfoList) SetThirdpartProjectId(v string) *FlightOrderQueryResponseBodyModulePassengerInfoList {
	s.ThirdpartProjectId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePassengerInfoList) SetUserId(v string) *FlightOrderQueryResponseBodyModulePassengerInfoList {
	s.UserId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePassengerInfoList) SetUserName(v string) *FlightOrderQueryResponseBodyModulePassengerInfoList {
	s.UserName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePassengerInfoList) SetUserType(v int32) *FlightOrderQueryResponseBodyModulePassengerInfoList {
	s.UserType = &v
	return s
}

type FlightOrderQueryResponseBodyModulePriceInfoList struct {
	// example:
	//
	// 1
	CategoryCode *int32 `json:"category_code,omitempty" xml:"category_code,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtCreate     *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 4
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 100
	Price *float64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// CS73290
	TradeId *string `json:"trade_id,omitempty" xml:"trade_id,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOrderQueryResponseBodyModulePriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponseBodyModulePriceInfoList) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponseBodyModulePriceInfoList) SetCategoryCode(v int32) *FlightOrderQueryResponseBodyModulePriceInfoList {
	s.CategoryCode = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePriceInfoList) SetGmtCreate(v string) *FlightOrderQueryResponseBodyModulePriceInfoList {
	s.GmtCreate = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePriceInfoList) SetPassengerName(v string) *FlightOrderQueryResponseBodyModulePriceInfoList {
	s.PassengerName = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePriceInfoList) SetPayType(v int32) *FlightOrderQueryResponseBodyModulePriceInfoList {
	s.PayType = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePriceInfoList) SetPrice(v float64) *FlightOrderQueryResponseBodyModulePriceInfoList {
	s.Price = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePriceInfoList) SetTradeId(v string) *FlightOrderQueryResponseBodyModulePriceInfoList {
	s.TradeId = &v
	return s
}

func (s *FlightOrderQueryResponseBodyModulePriceInfoList) SetType(v int32) *FlightOrderQueryResponseBodyModulePriceInfoList {
	s.Type = &v
	return s
}

type FlightOrderQueryResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightOrderQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightOrderQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightOrderQueryResponse) GoString() string {
	return s.String()
}

func (s *FlightOrderQueryResponse) SetHeaders(v map[string]*string) *FlightOrderQueryResponse {
	s.Headers = v
	return s
}

func (s *FlightOrderQueryResponse) SetStatusCode(v int32) *FlightOrderQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightOrderQueryResponse) SetBody(v *FlightOrderQueryResponseBody) *FlightOrderQueryResponse {
	s.Body = v
	return s
}

type FlightOtaItemDetailHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// Dj2laAwE00
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightOtaItemDetailHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailHeaders) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailHeaders) SetCommonHeaders(v map[string]*string) *FlightOtaItemDetailHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightOtaItemDetailHeaders) SetXAcsBtripCorpToken(v string) *FlightOtaItemDetailHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightOtaItemDetailRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// cheshi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 68cdc6b37c87484c98b479b49306ffbb_0
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
}

func (s FlightOtaItemDetailRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailRequest) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailRequest) SetIsvName(v string) *FlightOtaItemDetailRequest {
	s.IsvName = &v
	return s
}

func (s *FlightOtaItemDetailRequest) SetOtaItemId(v string) *FlightOtaItemDetailRequest {
	s.OtaItemId = &v
	return s
}

type FlightOtaItemDetailResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightOtaItemDetailResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// 92359A00-85D8-16C4-AED0-249618DEEC17
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210bc60a16916374201706365d2a16
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightOtaItemDetailResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBody) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBody) SetCode(v string) *FlightOtaItemDetailResponseBody {
	s.Code = &v
	return s
}

func (s *FlightOtaItemDetailResponseBody) SetMessage(v string) *FlightOtaItemDetailResponseBody {
	s.Message = &v
	return s
}

func (s *FlightOtaItemDetailResponseBody) SetModule(v *FlightOtaItemDetailResponseBodyModule) *FlightOtaItemDetailResponseBody {
	s.Module = v
	return s
}

func (s *FlightOtaItemDetailResponseBody) SetRequestId(v string) *FlightOtaItemDetailResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightOtaItemDetailResponseBody) SetSuccess(v bool) *FlightOtaItemDetailResponseBody {
	s.Success = &v
	return s
}

func (s *FlightOtaItemDetailResponseBody) SetTraceId(v string) *FlightOtaItemDetailResponseBody {
	s.TraceId = &v
	return s
}

type FlightOtaItemDetailResponseBodyModule struct {
	BaggageRule []*FlightOtaItemDetailResponseBodyModuleBaggageRule `json:"baggage_rule,omitempty" xml:"baggage_rule,omitempty" type:"Repeated"`
	ChangeRule  []*FlightOtaItemDetailResponseBodyModuleChangeRule  `json:"change_rule,omitempty" xml:"change_rule,omitempty" type:"Repeated"`
	RefundRule  []*FlightOtaItemDetailResponseBodyModuleRefundRule  `json:"refund_rule,omitempty" xml:"refund_rule,omitempty" type:"Repeated"`
	// example:
	//
	// 1830
	SellPrice     *int32   `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	SellPriceList []*int32 `json:"sell_price_list,omitempty" xml:"sell_price_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModule) SetBaggageRule(v []*FlightOtaItemDetailResponseBodyModuleBaggageRule) *FlightOtaItemDetailResponseBodyModule {
	s.BaggageRule = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModule) SetChangeRule(v []*FlightOtaItemDetailResponseBodyModuleChangeRule) *FlightOtaItemDetailResponseBodyModule {
	s.ChangeRule = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModule) SetRefundRule(v []*FlightOtaItemDetailResponseBodyModuleRefundRule) *FlightOtaItemDetailResponseBodyModule {
	s.RefundRule = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModule) SetSellPrice(v int32) *FlightOtaItemDetailResponseBodyModule {
	s.SellPrice = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModule) SetSellPriceList(v []*int32) *FlightOtaItemDetailResponseBodyModule {
	s.SellPriceList = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModule) SetTripType(v int32) *FlightOtaItemDetailResponseBodyModule {
	s.TripType = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleBaggageRule struct {
	BaggageSubItems []*FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems `json:"baggage_sub_items,omitempty" xml:"baggage_sub_items,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Index *int32 `json:"index,omitempty" xml:"index,omitempty"`
	// example:
	//
	// tableHead
	TableHead *string                                               `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Tips      *FlightOtaItemDetailResponseBodyModuleBaggageRuleTips `json:"tips,omitempty" xml:"tips,omitempty" type:"Struct"`
	Title     *string                                               `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 2
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRule) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRule) SetBaggageSubItems(v []*FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems) *FlightOtaItemDetailResponseBodyModuleBaggageRule {
	s.BaggageSubItems = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRule) SetIndex(v int32) *FlightOtaItemDetailResponseBodyModuleBaggageRule {
	s.Index = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRule) SetTableHead(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRule {
	s.TableHead = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRule) SetTips(v *FlightOtaItemDetailResponseBodyModuleBaggageRuleTips) *FlightOtaItemDetailResponseBodyModuleBaggageRule {
	s.Tips = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRule) SetTitle(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRule {
	s.Title = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRule) SetType(v int32) *FlightOtaItemDetailResponseBodyModuleBaggageRule {
	s.Type = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems struct {
	BaggageSubContentVisualizes []*FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes `json:"baggage_sub_content_visualizes,omitempty" xml:"baggage_sub_content_visualizes,omitempty" type:"Repeated"`
	ExtraContentVisualizes      []interface{}                                                                                 `json:"extra_content_visualizes,omitempty" xml:"extra_content_visualizes,omitempty" type:"Repeated"`
	// example:
	//
	// false
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// example:
	//
	// ADT
	Ptc   *string `json:"ptc,omitempty" xml:"ptc,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems) SetBaggageSubContentVisualizes(v []*FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems {
	s.BaggageSubContentVisualizes = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems) SetExtraContentVisualizes(v []interface{}) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems {
	s.ExtraContentVisualizes = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems) SetIsStruct(v bool) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems) SetPtc(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems) SetTitle(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItems {
	s.Title = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes struct {
	// baggage_desc
	BaggageDesc []*string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	BaggageSubContentType *int32                                                                                                 `json:"baggage_sub_content_type,omitempty" xml:"baggage_sub_content_type,omitempty"`
	Description           *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription `json:"description,omitempty" xml:"description,omitempty" type:"Struct"`
	ImageDO               *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO     `json:"image_d_o,omitempty" xml:"image_d_o,omitempty" type:"Struct"`
	// example:
	//
	// false
	IsHighlight *bool   `json:"is_highlight,omitempty" xml:"is_highlight,omitempty"`
	SubTitle    *string `json:"sub_title,omitempty" xml:"sub_title,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes) SetBaggageDesc(v []*string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageDesc = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes) SetBaggageSubContentType(v int32) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageSubContentType = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes) SetDescription(v *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes {
	s.Description = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes) SetImageDO(v *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes {
	s.ImageDO = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes) SetIsHighlight(v bool) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes {
	s.IsHighlight = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes) SetSubTitle(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizes {
	s.SubTitle = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription struct {
	Desc *string `json:"desc,omitempty" xml:"desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i4/O1CN01UynXG31pjsEtA3tMF_!!6000000005397-2-tps-36-36.png
	Icon *string `json:"icon,omitempty" xml:"icon,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN01qe7wL21gJ0SmEXXL7_!!6000000004120-2-tps-1206-768.png
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription) SetDesc(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Desc = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription) SetIcon(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Icon = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription) SetImage(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Image = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription) SetTitle(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Title = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01kLt3m923XsUs6WVif_!!6000000007266-2-tps-280-300.png
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	// example:
	//
	// 55
	Largest *string `json:"largest,omitempty" xml:"largest,omitempty"`
	// example:
	//
	// 40
	Middle *string `json:"middle,omitempty" xml:"middle,omitempty"`
	// example:
	//
	// 20
	Smallest *string `json:"smallest,omitempty" xml:"smallest,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO) SetImage(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Image = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO) SetLargest(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Largest = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO) SetMiddle(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Middle = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO) SetSmallest(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Smallest = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleBaggageRuleTips struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN019zl3WZ22fNLxzx2cR_!!6000000007147-2-tps-125-45.png
	Logo     *string `json:"logo,omitempty" xml:"logo,omitempty"`
	TipsDesc *string `json:"tips_desc,omitempty" xml:"tips_desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01rJxjw61f3bXNHAmlk_!!6000000003951-2-tps-1050-675.png
	TipsImage *string `json:"tips_image,omitempty" xml:"tips_image,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRuleTips) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleBaggageRuleTips) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleTips) SetLogo(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleTips {
	s.Logo = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleTips) SetTipsDesc(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleTips {
	s.TipsDesc = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleBaggageRuleTips) SetTipsImage(v string) *FlightOtaItemDetailResponseBodyModuleBaggageRuleTips {
	s.TipsImage = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleChangeRule struct {
	ExtraContents []*FlightOtaItemDetailResponseBodyModuleChangeRuleExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// HO3925
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// 0
	FreeBaggage *int32 `json:"free_baggage,omitempty" xml:"free_baggage,omitempty"`
	// example:
	//
	// 0
	Index *int32 `json:"index,omitempty" xml:"index,omitempty"`
	// example:
	//
	// 0
	Level          *int32                                                           `json:"level,omitempty" xml:"level,omitempty"`
	RefundSubItems []*FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	// subTableHead
	SubTableHead []*string `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	// example:
	//
	// tableHead
	TableHead *string `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title     *string `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleChangeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleChangeRule) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRule) SetExtraContents(v []*FlightOtaItemDetailResponseBodyModuleChangeRuleExtraContents) *FlightOtaItemDetailResponseBodyModuleChangeRule {
	s.ExtraContents = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRule) SetFlightNo(v string) *FlightOtaItemDetailResponseBodyModuleChangeRule {
	s.FlightNo = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRule) SetFreeBaggage(v int32) *FlightOtaItemDetailResponseBodyModuleChangeRule {
	s.FreeBaggage = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRule) SetIndex(v int32) *FlightOtaItemDetailResponseBodyModuleChangeRule {
	s.Index = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRule) SetLevel(v int32) *FlightOtaItemDetailResponseBodyModuleChangeRule {
	s.Level = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRule) SetRefundSubItems(v []*FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems) *FlightOtaItemDetailResponseBodyModuleChangeRule {
	s.RefundSubItems = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRule) SetSubTableHead(v []*string) *FlightOtaItemDetailResponseBodyModuleChangeRule {
	s.SubTableHead = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRule) SetTableHead(v string) *FlightOtaItemDetailResponseBodyModuleChangeRule {
	s.TableHead = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRule) SetTitle(v string) *FlightOtaItemDetailResponseBodyModuleChangeRule {
	s.Title = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRule) SetType(v int32) *FlightOtaItemDetailResponseBodyModuleChangeRule {
	s.Type = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleChangeRuleExtraContents struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	Title   *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleChangeRuleExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleChangeRuleExtraContents) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRuleExtraContents) SetContent(v string) *FlightOtaItemDetailResponseBodyModuleChangeRuleExtraContents {
	s.Content = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRuleExtraContents) SetTitle(v string) *FlightOtaItemDetailResponseBodyModuleChangeRuleExtraContents {
	s.Title = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems struct {
	// example:
	//
	// false
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// example:
	//
	// ADT
	Ptc               *string                                                                           `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                           `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems) SetIsStruct(v bool) *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems) SetPtc(v string) *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems) SetRefundSubContents(v []*FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents) *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems) SetTitle(v string) *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItems {
	s.Title = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightOtaItemDetailResponseBodyModuleChangeRuleRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleRefundRule struct {
	ExtraContents []*FlightOtaItemDetailResponseBodyModuleRefundRuleExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// HO3925
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// 0
	FreeBaggage *int32 `json:"free_baggage,omitempty" xml:"free_baggage,omitempty"`
	// example:
	//
	// 0
	Index *int32 `json:"index,omitempty" xml:"index,omitempty"`
	// example:
	//
	// 0
	Level          *int32                                                           `json:"level,omitempty" xml:"level,omitempty"`
	RefundSubItems []*FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	// subTableHead
	SubTableHead []*string `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	// example:
	//
	// tableHead
	TableHead *string `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title     *string `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleRefundRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleRefundRule) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRule) SetExtraContents(v []*FlightOtaItemDetailResponseBodyModuleRefundRuleExtraContents) *FlightOtaItemDetailResponseBodyModuleRefundRule {
	s.ExtraContents = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRule) SetFlightNo(v string) *FlightOtaItemDetailResponseBodyModuleRefundRule {
	s.FlightNo = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRule) SetFreeBaggage(v int32) *FlightOtaItemDetailResponseBodyModuleRefundRule {
	s.FreeBaggage = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRule) SetIndex(v int32) *FlightOtaItemDetailResponseBodyModuleRefundRule {
	s.Index = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRule) SetLevel(v int32) *FlightOtaItemDetailResponseBodyModuleRefundRule {
	s.Level = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRule) SetRefundSubItems(v []*FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems) *FlightOtaItemDetailResponseBodyModuleRefundRule {
	s.RefundSubItems = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRule) SetSubTableHead(v []*string) *FlightOtaItemDetailResponseBodyModuleRefundRule {
	s.SubTableHead = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRule) SetTableHead(v string) *FlightOtaItemDetailResponseBodyModuleRefundRule {
	s.TableHead = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRule) SetTitle(v string) *FlightOtaItemDetailResponseBodyModuleRefundRule {
	s.Title = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRule) SetType(v int32) *FlightOtaItemDetailResponseBodyModuleRefundRule {
	s.Type = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleRefundRuleExtraContents struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	Title   *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleRefundRuleExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleRefundRuleExtraContents) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRuleExtraContents) SetContent(v string) *FlightOtaItemDetailResponseBodyModuleRefundRuleExtraContents {
	s.Content = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRuleExtraContents) SetTitle(v string) *FlightOtaItemDetailResponseBodyModuleRefundRuleExtraContents {
	s.Title = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems struct {
	// example:
	//
	// false
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// example:
	//
	// ADT
	Ptc               *string                                                                           `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                           `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems) SetIsStruct(v bool) *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems) SetPtc(v string) *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems) SetRefundSubContents(v []*FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents) *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems) SetTitle(v string) *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItems {
	s.Title = &v
	return s
}

type FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightOtaItemDetailResponseBodyModuleRefundRuleRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightOtaItemDetailResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightOtaItemDetailResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightOtaItemDetailResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaItemDetailResponse) GoString() string {
	return s.String()
}

func (s *FlightOtaItemDetailResponse) SetHeaders(v map[string]*string) *FlightOtaItemDetailResponse {
	s.Headers = v
	return s
}

func (s *FlightOtaItemDetailResponse) SetStatusCode(v int32) *FlightOtaItemDetailResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightOtaItemDetailResponse) SetBody(v *FlightOtaItemDetailResponseBody) *FlightOtaItemDetailResponse {
	s.Body = v
	return s
}

type FlightOtaSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightOtaSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchHeaders) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchHeaders) SetCommonHeaders(v map[string]*string) *FlightOtaSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightOtaSearchHeaders) SetXAcsBtripCorpToken(v string) *FlightOtaSearchHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightOtaSearchRequest struct {
	// example:
	//
	// CA
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BJS
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// Y
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// example:
	//
	// CA2324
	CarrierFlightNo *string `json:"carrier_flight_no,omitempty" xml:"carrier_flight_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HGH
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-08-15 19:30:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// CA2323
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
}

func (s FlightOtaSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchRequest) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchRequest) SetAirlineCode(v string) *FlightOtaSearchRequest {
	s.AirlineCode = &v
	return s
}

func (s *FlightOtaSearchRequest) SetArrCityCode(v string) *FlightOtaSearchRequest {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOtaSearchRequest) SetCabinClass(v string) *FlightOtaSearchRequest {
	s.CabinClass = &v
	return s
}

func (s *FlightOtaSearchRequest) SetCarrierFlightNo(v string) *FlightOtaSearchRequest {
	s.CarrierFlightNo = &v
	return s
}

func (s *FlightOtaSearchRequest) SetDepCityCode(v string) *FlightOtaSearchRequest {
	s.DepCityCode = &v
	return s
}

func (s *FlightOtaSearchRequest) SetDepDate(v string) *FlightOtaSearchRequest {
	s.DepDate = &v
	return s
}

func (s *FlightOtaSearchRequest) SetFlightNo(v string) *FlightOtaSearchRequest {
	s.FlightNo = &v
	return s
}

type FlightOtaSearchResponseBody struct {
	// example:
	//
	// 0
	Code    *string                            `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                            `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightOtaSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightOtaSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBody) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBody) SetCode(v string) *FlightOtaSearchResponseBody {
	s.Code = &v
	return s
}

func (s *FlightOtaSearchResponseBody) SetMessage(v string) *FlightOtaSearchResponseBody {
	s.Message = &v
	return s
}

func (s *FlightOtaSearchResponseBody) SetModule(v *FlightOtaSearchResponseBodyModule) *FlightOtaSearchResponseBody {
	s.Module = v
	return s
}

func (s *FlightOtaSearchResponseBody) SetRequestId(v string) *FlightOtaSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightOtaSearchResponseBody) SetSuccess(v bool) *FlightOtaSearchResponseBody {
	s.Success = &v
	return s
}

func (s *FlightOtaSearchResponseBody) SetTraceId(v string) *FlightOtaSearchResponseBody {
	s.TraceId = &v
	return s
}

type FlightOtaSearchResponseBodyModule struct {
	FlightList []*FlightOtaSearchResponseBodyModuleFlightList `json:"flight_list,omitempty" xml:"flight_list,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModule) SetFlightList(v []*FlightOtaSearchResponseBodyModuleFlightList) *FlightOtaSearchResponseBodyModule {
	s.FlightList = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightList struct {
	AirlineInfo    *FlightOtaSearchResponseBodyModuleFlightListAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	ArrDate *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	// example:
	//
	// 100
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// Y
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// 2
	CabinClass    *string                                                     `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinInfoList []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoList `json:"cabin_info_list,omitempty" xml:"cabin_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// FM
	CarrierAirline *string `json:"carrier_airline,omitempty" xml:"carrier_airline,omitempty"`
	// example:
	//
	// FM9152
	CarrierNo      *string                                                    `json:"carrier_no,omitempty" xml:"carrier_no,omitempty"`
	DepAirportInfo *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 1
	Discount *int32 `json:"discount,omitempty" xml:"discount,omitempty"`
	// example:
	//
	// CA1234
	FlightNo       *string                                                      `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightRuleList []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleList `json:"flight_rule_list,omitempty" xml:"flight_rule_list,omitempty" type:"Repeated"`
	// example:
	//
	// demo
	FlightRuleListStr *string `json:"flight_rule_list_str,omitempty" xml:"flight_rule_list_str,omitempty"`
	FlightSize        *string `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	// example:
	//
	// demo
	FlightType *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	// example:
	//
	// 1
	InvoiceType *int32 `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// false
	IsShare *bool `json:"is_share,omitempty" xml:"is_share,omitempty"`
	// example:
	//
	// false
	IsStop *bool `json:"is_stop,omitempty" xml:"is_stop,omitempty"`
	// example:
	//
	// false
	IsTransfer *bool   `json:"is_transfer,omitempty" xml:"is_transfer,omitempty"`
	MealDesc   *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	// example:
	//
	// 100
	OilPrice *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	// example:
	//
	// 6669c8e53b684105b8687bad0331988a_41
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// example:
	//
	// 100
	Price *int32 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 1
	ProductType     *int64  `json:"product_type,omitempty" xml:"product_type,omitempty"`
	ProductTypeDesc *string `json:"product_type_desc,omitempty" xml:"product_type_desc,omitempty"`
	// example:
	//
	// 100
	PromotionPrice *string `json:"promotion_price,omitempty" xml:"promotion_price,omitempty"`
	// example:
	//
	// 1
	RemainedSeatCount *string `json:"remained_seat_count,omitempty" xml:"remained_seat_count,omitempty"`
	// example:
	//
	// 1000_1_0
	SecretParams *string `json:"secret_params,omitempty" xml:"secret_params,omitempty"`
	// example:
	//
	// 1
	SegmentNumber *string `json:"segment_number,omitempty" xml:"segment_number,omitempty"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// HGH
	StopCity *string `json:"stop_city,omitempty" xml:"stop_city,omitempty"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 100
	TotalPrice *string `json:"total_price,omitempty" xml:"total_price,omitempty"`
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightList) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightList) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetAirlineInfo(v *FlightOtaSearchResponseBodyModuleFlightListAirlineInfo) *FlightOtaSearchResponseBodyModuleFlightList {
	s.AirlineInfo = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetArrAirportInfo(v *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo) *FlightOtaSearchResponseBodyModuleFlightList {
	s.ArrAirportInfo = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetArrDate(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.ArrDate = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetBuildPrice(v int32) *FlightOtaSearchResponseBodyModuleFlightList {
	s.BuildPrice = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetCabin(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.Cabin = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetCabinClass(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.CabinClass = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetCabinInfoList(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) *FlightOtaSearchResponseBodyModuleFlightList {
	s.CabinInfoList = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetCarrierAirline(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.CarrierAirline = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetCarrierNo(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.CarrierNo = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetDepAirportInfo(v *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo) *FlightOtaSearchResponseBodyModuleFlightList {
	s.DepAirportInfo = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetDepCityCode(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.DepCityCode = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetDepDate(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.DepDate = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetDiscount(v int32) *FlightOtaSearchResponseBodyModuleFlightList {
	s.Discount = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetFlightNo(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.FlightNo = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetFlightRuleList(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) *FlightOtaSearchResponseBodyModuleFlightList {
	s.FlightRuleList = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetFlightRuleListStr(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.FlightRuleListStr = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetFlightSize(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.FlightSize = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetFlightType(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.FlightType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetInvoiceType(v int32) *FlightOtaSearchResponseBodyModuleFlightList {
	s.InvoiceType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetIsProtocol(v bool) *FlightOtaSearchResponseBodyModuleFlightList {
	s.IsProtocol = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetIsShare(v bool) *FlightOtaSearchResponseBodyModuleFlightList {
	s.IsShare = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetIsStop(v bool) *FlightOtaSearchResponseBodyModuleFlightList {
	s.IsStop = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetIsTransfer(v bool) *FlightOtaSearchResponseBodyModuleFlightList {
	s.IsTransfer = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetMealDesc(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.MealDesc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetOilPrice(v int32) *FlightOtaSearchResponseBodyModuleFlightList {
	s.OilPrice = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetOtaItemId(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.OtaItemId = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetPrice(v int32) *FlightOtaSearchResponseBodyModuleFlightList {
	s.Price = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetProductType(v int64) *FlightOtaSearchResponseBodyModuleFlightList {
	s.ProductType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetProductTypeDesc(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.ProductTypeDesc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetPromotionPrice(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.PromotionPrice = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetRemainedSeatCount(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.RemainedSeatCount = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetSecretParams(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.SecretParams = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetSegmentNumber(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.SegmentNumber = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetStopArrTime(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.StopArrTime = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetStopCity(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.StopCity = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetStopDepTime(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.StopDepTime = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetTicketPrice(v int32) *FlightOtaSearchResponseBodyModuleFlightList {
	s.TicketPrice = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetTotalPrice(v string) *FlightOtaSearchResponseBodyModuleFlightList {
	s.TotalPrice = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightList) SetTripType(v int32) *FlightOtaSearchResponseBodyModuleFlightList {
	s.TripType = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListAirlineInfo struct {
	// example:
	//
	// CA
	AirlineCode       *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName       *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	AirlineSimpleName *string `json:"airline_simple_name,omitempty" xml:"airline_simple_name,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListAirlineInfo) SetAirlineCode(v string) *FlightOtaSearchResponseBodyModuleFlightListAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListAirlineInfo) SetAirlineName(v string) *FlightOtaSearchResponseBodyModuleFlightListAirlineInfo {
	s.AirlineName = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListAirlineInfo) SetAirlineSimpleName(v string) *FlightOtaSearchResponseBodyModuleFlightListAirlineInfo {
	s.AirlineSimpleName = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// HGH
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo) SetAirportCode(v string) *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo) SetAirportName(v string) *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo) SetCityCode(v string) *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo {
	s.CityCode = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo) SetCityName(v string) *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo {
	s.CityName = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo) SetTerminal(v string) *FlightOtaSearchResponseBodyModuleFlightListArrAirportInfo {
	s.Terminal = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoList struct {
	AgentId *int64 `json:"agent_id,omitempty" xml:"agent_id,omitempty"`
	// example:
	//
	// 12456
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 100
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// G
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	// example:
	//
	// G
	ChildCabin *string `json:"child_cabin,omitempty" xml:"child_cabin,omitempty"`
	ClassName  *string `json:"class_name,omitempty" xml:"class_name,omitempty"`
	// example:
	//
	// demo
	ClassRule *string `json:"class_rule,omitempty" xml:"class_rule,omitempty"`
	// example:
	//
	// 10
	Discount       *string                                                                   `json:"discount,omitempty" xml:"discount,omitempty"`
	FlightRuleList []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList `json:"flight_rule_list,omitempty" xml:"flight_rule_list,omitempty" type:"Repeated"`
	// example:
	//
	// demo
	FlightRuleListStr *string `json:"flight_rule_list_str,omitempty" xml:"flight_rule_list_str,omitempty"`
	// example:
	//
	// 1
	InvoiceType *int32 `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// 100
	OilPrice *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	// example:
	//
	// 1000_1_0
	OrderParams *string `json:"order_params,omitempty" xml:"order_params,omitempty"`
	// example:
	//
	// 97f64e2d6f61408a827dd523817fefd6_0
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// example:
	//
	// 100
	Price *int32 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 1
	ProductType *int64 `json:"product_type,omitempty" xml:"product_type,omitempty"`
	// example:
	//
	// demo
	ProductTypeDesc *string `json:"product_type_desc,omitempty" xml:"product_type_desc,omitempty"`
	// example:
	//
	// 100
	PromotionPrice *string `json:"promotion_price,omitempty" xml:"promotion_price,omitempty"`
	// example:
	//
	// 1
	RemainedSeatCount *string `json:"remained_seat_count,omitempty" xml:"remained_seat_count,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 100
	TotalPrice *int32 `json:"total_price,omitempty" xml:"total_price,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetAgentId(v int64) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.AgentId = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetBasicCabinPrice(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.BasicCabinPrice = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetBuildPrice(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.BuildPrice = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetCabin(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.Cabin = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetCabinClass(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.CabinClass = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetCabinClassName(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.CabinClassName = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetChildCabin(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.ChildCabin = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetClassName(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.ClassName = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetClassRule(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.ClassRule = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetDiscount(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.Discount = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetFlightRuleList(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.FlightRuleList = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetFlightRuleListStr(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.FlightRuleListStr = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetInvoiceType(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.InvoiceType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetIsProtocol(v bool) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.IsProtocol = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetOilPrice(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.OilPrice = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetOrderParams(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.OrderParams = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetOtaItemId(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.OtaItemId = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetPrice(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.Price = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetProductType(v int64) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.ProductType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetProductTypeDesc(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.ProductTypeDesc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetPromotionPrice(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.PromotionPrice = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetRemainedSeatCount(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.RemainedSeatCount = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetTicketPrice(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.TicketPrice = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList) SetTotalPrice(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoList {
	s.TotalPrice = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList struct {
	// example:
	//
	// demo
	BaggageInfo    *string                                                                               `json:"baggage_info,omitempty" xml:"baggage_info,omitempty"`
	BaggageItem    *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem    `json:"baggage_item,omitempty" xml:"baggage_item,omitempty" type:"Struct"`
	ChangeRule     *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule     `json:"change_rule,omitempty" xml:"change_rule,omitempty" type:"Struct"`
	ChangeRuleItem *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem `json:"change_rule_item,omitempty" xml:"change_rule_item,omitempty" type:"Struct"`
	// example:
	//
	// {}
	Extra          *string                                                                               `json:"extra,omitempty" xml:"extra,omitempty"`
	RefundRule     *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule     `json:"refund_rule,omitempty" xml:"refund_rule,omitempty" type:"Struct"`
	RefundRuleItem *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem `json:"refund_rule_item,omitempty" xml:"refund_rule_item,omitempty" type:"Struct"`
	SignRule       *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule       `json:"sign_rule,omitempty" xml:"sign_rule,omitempty" type:"Struct"`
	TuigaiqianInfo *string                                                                               `json:"tuigaiqian_info,omitempty" xml:"tuigaiqian_info,omitempty"`
	UpgradeRule    *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule    `json:"upgrade_rule,omitempty" xml:"upgrade_rule,omitempty" type:"Struct"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetBaggageInfo(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.BaggageInfo = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetBaggageItem(v *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.BaggageItem = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetChangeRule(v *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.ChangeRule = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetChangeRuleItem(v *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.ChangeRuleItem = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetExtra(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.Extra = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetRefundRule(v *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.RefundRule = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetRefundRuleItem(v *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.RefundRuleItem = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetSignRule(v *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.SignRule = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetTuigaiqianInfo(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.TuigaiqianInfo = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetUpgradeRule(v *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.UpgradeRule = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem struct {
	BaggageSubItems []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems `json:"baggage_sub_items,omitempty" xml:"baggage_sub_items,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index     *int32                                                                                 `json:"index,omitempty" xml:"index,omitempty"`
	TableHead *string                                                                                `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Tips      *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips `json:"tips,omitempty" xml:"tips,omitempty" type:"Struct"`
	Title     *string                                                                                `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetBaggageSubItems(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.BaggageSubItems = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetIndex(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.Index = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetTableHead(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.TableHead = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetTips(v *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.Tips = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.Title = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetType(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.Type = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems struct {
	BaggageSubContentVisualizes []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes `json:"baggage_sub_content_visualizes,omitempty" xml:"baggage_sub_content_visualizes,omitempty" type:"Repeated"`
	ExtraContentVisualizes      []interface{}                                                                                                                  `json:"extra_content_visualizes,omitempty" xml:"extra_content_visualizes,omitempty" type:"Repeated"`
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc   *string `json:"ptc,omitempty" xml:"ptc,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) SetBaggageSubContentVisualizes(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems {
	s.BaggageSubContentVisualizes = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) SetExtraContentVisualizes(v []interface{}) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems {
	s.ExtraContentVisualizes = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) SetIsStruct(v bool) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) SetPtc(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes struct {
	BaggageDesc []*string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	BaggageSubContentType *int32                                                                                                                                  `json:"baggage_sub_content_type,omitempty" xml:"baggage_sub_content_type,omitempty"`
	Description           *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription `json:"description,omitempty" xml:"description,omitempty" type:"Struct"`
	ImageDO               *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO     `json:"image_d_o,omitempty" xml:"image_d_o,omitempty" type:"Struct"`
	// example:
	//
	// true
	IsHighlight *bool   `json:"is_highlight,omitempty" xml:"is_highlight,omitempty"`
	SubTitle    *string `json:"sub_title,omitempty" xml:"sub_title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageDesc(v []*string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageDesc = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageSubContentType(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageSubContentType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetDescription(v *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.Description = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetImageDO(v *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.ImageDO = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetIsHighlight(v bool) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.IsHighlight = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetSubTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.SubTitle = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription struct {
	Desc *string `json:"desc,omitempty" xml:"desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i4/O1CN01UynXG31pjsEtA3tMF_!!6000000005397-2-tps-36-36.png
	Icon *string `json:"icon,omitempty" xml:"icon,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN01qe7wL21gJ0SmEXXL7_!!6000000004120-2-tps-1206-768.png
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetDesc(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Desc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetIcon(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Icon = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetImage(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Image = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO struct {
	// example:
	//
	// demo
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	// example:
	//
	// 50
	Largest *string `json:"largest,omitempty" xml:"largest,omitempty"`
	// example:
	//
	// 40
	Middle *string `json:"middle,omitempty" xml:"middle,omitempty"`
	// example:
	//
	// 20
	Smallest *string `json:"smallest,omitempty" xml:"smallest,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetImage(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Image = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetLargest(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Largest = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetMiddle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Middle = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetSmallest(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Smallest = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN019zl3WZ22fNLxzx2cR_!!6000000007147-2-tps-125-45.png
	Logo     *string `json:"logo,omitempty" xml:"logo,omitempty"`
	TipsDesc *string `json:"tips_desc,omitempty" xml:"tips_desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01rJxjw61f3bXNHAmlk_!!6000000003951-2-tps-1050-675.png
	TipsImage *string `json:"tips_image,omitempty" xml:"tips_image,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) SetLogo(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips {
	s.Logo = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) SetTipsDesc(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips {
	s.TipsDesc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) SetTipsImage(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips {
	s.TipsImage = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule struct {
	// example:
	//
	// true
	Able *bool                                                                                   `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule) SetAble(v bool) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule {
	s.Able = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule) SetInfo(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule {
	s.Info = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetCost(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetCostPercent(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetTimeStamp(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetTimeType(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem struct {
	ExtraContents []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Index          *int32                                                                                                `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                             `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                               `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                               `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetExtraContents(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetIndex(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.Index = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetRefundSubItems(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetSubTableHead(v []*string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetTableHead(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.Title = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetType(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.Type = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems struct {
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                                `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                                `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) SetIsStruct(v bool) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) SetPtc(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) SetRefundSubContents(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule struct {
	// example:
	//
	// true
	Able *bool                                                                                   `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule) SetAble(v bool) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule {
	s.Able = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule) SetInfo(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule {
	s.Info = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetCost(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetCostPercent(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetTimeStamp(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetTimeType(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem struct {
	ExtraContents []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index          *int32                                                                                                `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                             `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                               `json:"table_head,omitempty" xml:"table_head,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetExtraContents(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetIndex(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.Index = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetRefundSubItems(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetSubTableHead(v []*string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetTableHead(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.Title = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetType(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.Type = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems struct {
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                                `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                                `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) SetIsStruct(v bool) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) SetPtc(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) SetRefundSubContents(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule struct {
	// example:
	//
	// true
	Able *bool                                                                                 `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule) SetAble(v bool) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule {
	s.Able = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule) SetInfo(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule {
	s.Info = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetCost(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetCostPercent(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetTimeStamp(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetTimeType(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule struct {
	// example:
	//
	// true
	Able *bool                                                                                    `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule) SetAble(v bool) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule {
	s.Able = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule) SetInfo(v []*FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule {
	s.Info = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetCost(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetCostPercent(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetTimeStamp(v int32) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetTimeType(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo struct {
	// example:
	//
	// PEK
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// BJS
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo) SetAirportCode(v string) *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo) SetAirportName(v string) *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo) SetCityCode(v string) *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo {
	s.CityCode = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo) SetCityName(v string) *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo {
	s.CityName = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo) SetTerminal(v string) *FlightOtaSearchResponseBodyModuleFlightListDepAirportInfo {
	s.Terminal = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleList struct {
	// example:
	//
	// demo
	BaggageInfo    *string                                                                  `json:"baggage_info,omitempty" xml:"baggage_info,omitempty"`
	BaggageItem    *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem    `json:"baggage_item,omitempty" xml:"baggage_item,omitempty" type:"Struct"`
	ChangeRule     *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRule     `json:"change_rule,omitempty" xml:"change_rule,omitempty" type:"Struct"`
	ChangeRuleItem *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem `json:"change_rule_item,omitempty" xml:"change_rule_item,omitempty" type:"Struct"`
	// example:
	//
	// {}
	Extra          *string                                                                  `json:"extra,omitempty" xml:"extra,omitempty"`
	RefundRule     *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRule     `json:"refund_rule,omitempty" xml:"refund_rule,omitempty" type:"Struct"`
	RefundRuleItem *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem `json:"refund_rule_item,omitempty" xml:"refund_rule_item,omitempty" type:"Struct"`
	SignRule       *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRule       `json:"sign_rule,omitempty" xml:"sign_rule,omitempty" type:"Struct"`
	TuigaiqianInfo *string                                                                  `json:"tuigaiqian_info,omitempty" xml:"tuigaiqian_info,omitempty"`
	UpgradeRule    *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule    `json:"upgrade_rule,omitempty" xml:"upgrade_rule,omitempty" type:"Struct"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) SetBaggageInfo(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList {
	s.BaggageInfo = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) SetBaggageItem(v *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList {
	s.BaggageItem = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) SetChangeRule(v *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRule) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList {
	s.ChangeRule = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) SetChangeRuleItem(v *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList {
	s.ChangeRuleItem = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) SetExtra(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList {
	s.Extra = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) SetRefundRule(v *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRule) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList {
	s.RefundRule = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) SetRefundRuleItem(v *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList {
	s.RefundRuleItem = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) SetSignRule(v *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRule) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList {
	s.SignRule = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) SetTuigaiqianInfo(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList {
	s.TuigaiqianInfo = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList) SetUpgradeRule(v *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleList {
	s.UpgradeRule = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem struct {
	BaggageSubItems []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems `json:"baggage_sub_items,omitempty" xml:"baggage_sub_items,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index     *int32                                                                    `json:"index,omitempty" xml:"index,omitempty"`
	TableHead *string                                                                   `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Tips      *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips `json:"tips,omitempty" xml:"tips,omitempty" type:"Struct"`
	Title     *string                                                                   `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetBaggageSubItems(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.BaggageSubItems = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetIndex(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Index = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetTableHead(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.TableHead = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetTips(v *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Tips = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Title = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem) SetType(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Type = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems struct {
	BaggageSubContentVisualizes []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes `json:"baggage_sub_content_visualizes,omitempty" xml:"baggage_sub_content_visualizes,omitempty" type:"Repeated"`
	ExtraContentVisualizes      []interface{}                                                                                                     `json:"extra_content_visualizes,omitempty" xml:"extra_content_visualizes,omitempty" type:"Repeated"`
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc   *string `json:"ptc,omitempty" xml:"ptc,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetBaggageSubContentVisualizes(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.BaggageSubContentVisualizes = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetExtraContentVisualizes(v []interface{}) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.ExtraContentVisualizes = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetIsStruct(v bool) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetPtc(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes struct {
	BaggageDesc []*string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	BaggageSubContentType *int32                                                                                                                     `json:"baggage_sub_content_type,omitempty" xml:"baggage_sub_content_type,omitempty"`
	Description           *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription `json:"description,omitempty" xml:"description,omitempty" type:"Struct"`
	ImageDO               *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO     `json:"image_d_o,omitempty" xml:"image_d_o,omitempty" type:"Struct"`
	// example:
	//
	// true
	IsHighlight *bool   `json:"is_highlight,omitempty" xml:"is_highlight,omitempty"`
	SubTitle    *string `json:"sub_title,omitempty" xml:"sub_title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageDesc(v []*string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageDesc = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageSubContentType(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageSubContentType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetDescription(v *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.Description = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetImageDO(v *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.ImageDO = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetIsHighlight(v bool) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.IsHighlight = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetSubTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.SubTitle = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription struct {
	Desc *string `json:"desc,omitempty" xml:"desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i4/O1CN01UynXG31pjsEtA3tMF_!!6000000005397-2-tps-36-36.png
	Icon *string `json:"icon,omitempty" xml:"icon,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN01qe7wL21gJ0SmEXXL7_!!6000000004120-2-tps-1206-768.png
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetDesc(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Desc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetIcon(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Icon = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetImage(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Image = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO struct {
	// example:
	//
	// demo
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	// example:
	//
	// 50
	Largest *string `json:"largest,omitempty" xml:"largest,omitempty"`
	// example:
	//
	// 40
	Middle *string `json:"middle,omitempty" xml:"middle,omitempty"`
	// example:
	//
	// 20
	Smallest *string `json:"smallest,omitempty" xml:"smallest,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetImage(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Image = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetLargest(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Largest = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetMiddle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Middle = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetSmallest(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Smallest = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN019zl3WZ22fNLxzx2cR_!!6000000007147-2-tps-125-45.png
	Logo     *string `json:"logo,omitempty" xml:"logo,omitempty"`
	TipsDesc *string `json:"tips_desc,omitempty" xml:"tips_desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01rJxjw61f3bXNHAmlk_!!6000000003951-2-tps-1050-675.png
	TipsImage *string `json:"tips_image,omitempty" xml:"tips_image,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) SetLogo(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips {
	s.Logo = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) SetTipsDesc(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips {
	s.TipsDesc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips) SetTipsImage(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListBaggageItemTips {
	s.TipsImage = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRule struct {
	// example:
	//
	// false
	Able *bool                                                                      `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRule) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRule) SetAble(v bool) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRule {
	s.Able = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRule) SetInfo(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRule {
	s.Info = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetCost(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetCostPercent(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetTimeStamp(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetTimeType(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem struct {
	ExtraContents []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Index          *int32                                                                                   `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                  `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                  `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetExtraContents(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetIndex(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.Index = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetRefundSubItems(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetSubTableHead(v []*string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetTableHead(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.Title = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetType(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.Type = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	Title   *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems struct {
	// isStruct : true
	//
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                   `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                   `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetIsStruct(v bool) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetPtc(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetRefundSubContents(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRule struct {
	// example:
	//
	// false
	Able *bool                                                                      `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRule) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRule) SetAble(v bool) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRule {
	s.Able = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRule) SetInfo(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRule {
	s.Info = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetCost(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetCostPercent(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetTimeStamp(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetTimeType(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem struct {
	ExtraContents []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index          *int32                                                                                   `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                  `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                  `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetExtraContents(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetIndex(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.Index = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetRefundSubItems(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetSubTableHead(v []*string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetTableHead(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.Title = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetType(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.Type = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems struct {
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                   `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                   `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetIsStruct(v bool) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetPtc(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetRefundSubContents(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRule struct {
	// example:
	//
	// false
	Able *bool                                                                    `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRule) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRule) SetAble(v bool) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRule {
	s.Able = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRule) SetInfo(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRule {
	s.Info = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetCost(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetCostPercent(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetTimeStamp(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetTimeType(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.Title = &v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule struct {
	// example:
	//
	// false
	Able *bool                                                                       `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule) SetAble(v bool) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule {
	s.Able = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule) SetInfo(v []*FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRule {
	s.Info = v
	return s
}

type FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetContent(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetCost(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetCostPercent(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetTimeStamp(v int32) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetTimeType(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetTitle(v string) *FlightOtaSearchResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.Title = &v
	return s
}

type FlightOtaSearchResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightOtaSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightOtaSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchResponse) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchResponse) SetHeaders(v map[string]*string) *FlightOtaSearchResponse {
	s.Headers = v
	return s
}

func (s *FlightOtaSearchResponse) SetStatusCode(v int32) *FlightOtaSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightOtaSearchResponse) SetBody(v *FlightOtaSearchResponseBody) *FlightOtaSearchResponse {
	s.Body = v
	return s
}

type FlightOtaSearchV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// Dj2laAwE00
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightOtaSearchV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2Headers) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2Headers) SetCommonHeaders(v map[string]*string) *FlightOtaSearchV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightOtaSearchV2Headers) SetXAcsBtripCorpToken(v string) *FlightOtaSearchV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightOtaSearchV2Request struct {
	CabinTypeList []*int32 `json:"cabin_type_list,omitempty" xml:"cabin_type_list,omitempty" type:"Repeated"`
	// example:
	//
	// true
	DirectOnly *bool `json:"direct_only,omitempty" xml:"direct_only,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// cheshi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// true
	NeedShareFlight *bool `json:"need_share_flight,omitempty" xml:"need_share_flight,omitempty"`
	// This parameter is required.
	SearchJourneys []*FlightOtaSearchV2RequestSearchJourneys `json:"search_journeys,omitempty" xml:"search_journeys,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	SearchMode *int32 `json:"search_mode,omitempty" xml:"search_mode,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightOtaSearchV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2Request) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2Request) SetCabinTypeList(v []*int32) *FlightOtaSearchV2Request {
	s.CabinTypeList = v
	return s
}

func (s *FlightOtaSearchV2Request) SetDirectOnly(v bool) *FlightOtaSearchV2Request {
	s.DirectOnly = &v
	return s
}

func (s *FlightOtaSearchV2Request) SetIsvName(v string) *FlightOtaSearchV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightOtaSearchV2Request) SetNeedShareFlight(v bool) *FlightOtaSearchV2Request {
	s.NeedShareFlight = &v
	return s
}

func (s *FlightOtaSearchV2Request) SetSearchJourneys(v []*FlightOtaSearchV2RequestSearchJourneys) *FlightOtaSearchV2Request {
	s.SearchJourneys = v
	return s
}

func (s *FlightOtaSearchV2Request) SetSearchMode(v int32) *FlightOtaSearchV2Request {
	s.SearchMode = &v
	return s
}

func (s *FlightOtaSearchV2Request) SetTripType(v int32) *FlightOtaSearchV2Request {
	s.TripType = &v
	return s
}

type FlightOtaSearchV2RequestSearchJourneys struct {
	// This parameter is required.
	//
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-09-01
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	SelectedFlights []*FlightOtaSearchV2RequestSearchJourneysSelectedFlights `json:"selected_flights,omitempty" xml:"selected_flights,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchV2RequestSearchJourneys) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2RequestSearchJourneys) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2RequestSearchJourneys) SetArrCityCode(v string) *FlightOtaSearchV2RequestSearchJourneys {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOtaSearchV2RequestSearchJourneys) SetDepCityCode(v string) *FlightOtaSearchV2RequestSearchJourneys {
	s.DepCityCode = &v
	return s
}

func (s *FlightOtaSearchV2RequestSearchJourneys) SetDepDate(v string) *FlightOtaSearchV2RequestSearchJourneys {
	s.DepDate = &v
	return s
}

func (s *FlightOtaSearchV2RequestSearchJourneys) SetSelectedFlights(v []*FlightOtaSearchV2RequestSearchJourneysSelectedFlights) *FlightOtaSearchV2RequestSearchJourneys {
	s.SelectedFlights = v
	return s
}

type FlightOtaSearchV2RequestSearchJourneysSelectedFlights struct {
	// example:
	//
	// HGH
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// PKX
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2023-09-01 07:10:00
	FlightTime *string `json:"flight_time,omitempty" xml:"flight_time,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HO3925
	MarketFlightNo *string `json:"market_flight_no,omitempty" xml:"market_flight_no,omitempty"`
	// example:
	//
	// CX601
	OperateFlightNo *string `json:"operate_flight_no,omitempty" xml:"operate_flight_no,omitempty"`
}

func (s FlightOtaSearchV2RequestSearchJourneysSelectedFlights) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2RequestSearchJourneysSelectedFlights) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2RequestSearchJourneysSelectedFlights) SetArrAirportCode(v string) *FlightOtaSearchV2RequestSearchJourneysSelectedFlights {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightOtaSearchV2RequestSearchJourneysSelectedFlights) SetArrCityCode(v string) *FlightOtaSearchV2RequestSearchJourneysSelectedFlights {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOtaSearchV2RequestSearchJourneysSelectedFlights) SetDepAirportCode(v string) *FlightOtaSearchV2RequestSearchJourneysSelectedFlights {
	s.DepAirportCode = &v
	return s
}

func (s *FlightOtaSearchV2RequestSearchJourneysSelectedFlights) SetDepCityCode(v string) *FlightOtaSearchV2RequestSearchJourneysSelectedFlights {
	s.DepCityCode = &v
	return s
}

func (s *FlightOtaSearchV2RequestSearchJourneysSelectedFlights) SetFlightTime(v string) *FlightOtaSearchV2RequestSearchJourneysSelectedFlights {
	s.FlightTime = &v
	return s
}

func (s *FlightOtaSearchV2RequestSearchJourneysSelectedFlights) SetMarketFlightNo(v string) *FlightOtaSearchV2RequestSearchJourneysSelectedFlights {
	s.MarketFlightNo = &v
	return s
}

func (s *FlightOtaSearchV2RequestSearchJourneysSelectedFlights) SetOperateFlightNo(v string) *FlightOtaSearchV2RequestSearchJourneysSelectedFlights {
	s.OperateFlightNo = &v
	return s
}

type FlightOtaSearchV2ShrinkRequest struct {
	CabinTypeListShrink *string `json:"cabin_type_list,omitempty" xml:"cabin_type_list,omitempty"`
	// example:
	//
	// true
	DirectOnly *bool `json:"direct_only,omitempty" xml:"direct_only,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// cheshi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// true
	NeedShareFlight *bool `json:"need_share_flight,omitempty" xml:"need_share_flight,omitempty"`
	// This parameter is required.
	SearchJourneysShrink *string `json:"search_journeys,omitempty" xml:"search_journeys,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	SearchMode *int32 `json:"search_mode,omitempty" xml:"search_mode,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightOtaSearchV2ShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ShrinkRequest) SetCabinTypeListShrink(v string) *FlightOtaSearchV2ShrinkRequest {
	s.CabinTypeListShrink = &v
	return s
}

func (s *FlightOtaSearchV2ShrinkRequest) SetDirectOnly(v bool) *FlightOtaSearchV2ShrinkRequest {
	s.DirectOnly = &v
	return s
}

func (s *FlightOtaSearchV2ShrinkRequest) SetIsvName(v string) *FlightOtaSearchV2ShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *FlightOtaSearchV2ShrinkRequest) SetNeedShareFlight(v bool) *FlightOtaSearchV2ShrinkRequest {
	s.NeedShareFlight = &v
	return s
}

func (s *FlightOtaSearchV2ShrinkRequest) SetSearchJourneysShrink(v string) *FlightOtaSearchV2ShrinkRequest {
	s.SearchJourneysShrink = &v
	return s
}

func (s *FlightOtaSearchV2ShrinkRequest) SetSearchMode(v int32) *FlightOtaSearchV2ShrinkRequest {
	s.SearchMode = &v
	return s
}

func (s *FlightOtaSearchV2ShrinkRequest) SetTripType(v int32) *FlightOtaSearchV2ShrinkRequest {
	s.TripType = &v
	return s
}

type FlightOtaSearchV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightOtaSearchV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210e842b16611337974412836dae27
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightOtaSearchV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBody) SetCode(v string) *FlightOtaSearchV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBody) SetMessage(v string) *FlightOtaSearchV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBody) SetModule(v *FlightOtaSearchV2ResponseBodyModule) *FlightOtaSearchV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightOtaSearchV2ResponseBody) SetRequestId(v string) *FlightOtaSearchV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBody) SetSuccess(v bool) *FlightOtaSearchV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBody) SetTraceId(v string) *FlightOtaSearchV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightOtaSearchV2ResponseBodyModule struct {
	FlightJourneyInfos []*FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos `json:"flight_journey_infos,omitempty" xml:"flight_journey_infos,omitempty" type:"Repeated"`
	ItemList           []*FlightOtaSearchV2ResponseBodyModuleItemList           `json:"item_list,omitempty" xml:"item_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2
	SearchMode *int32 `json:"search_mode,omitempty" xml:"search_mode,omitempty"`
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightOtaSearchV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModule) SetFlightJourneyInfos(v []*FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) *FlightOtaSearchV2ResponseBodyModule {
	s.FlightJourneyInfos = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModule) SetItemList(v []*FlightOtaSearchV2ResponseBodyModuleItemList) *FlightOtaSearchV2ResponseBodyModule {
	s.ItemList = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModule) SetSearchMode(v int32) *FlightOtaSearchV2ResponseBodyModule {
	s.SearchMode = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModule) SetTripType(v int32) *FlightOtaSearchV2ResponseBodyModule {
	s.TripType = &v
	return s
}

type FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos struct {
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 09:45
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 140
	Duration           *int32                                                                     `json:"duration,omitempty" xml:"duration,omitempty"`
	Extensions         map[string]*string                                                         `json:"extensions,omitempty" xml:"extensions,omitempty"`
	FlightSegmentInfos []*FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos `json:"flight_segment_infos,omitempty" xml:"flight_segment_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	TransferTime *int32 `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetArrCityCode(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetArrCityName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.ArrCityName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetArrTime(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.ArrTime = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetDepCityCode(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.DepCityCode = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetDepCityName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.DepCityName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetDepTime(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.DepTime = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetDuration(v int32) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.Duration = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetExtensions(v map[string]*string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.Extensions = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetFlightSegmentInfos(v []*FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.FlightSegmentInfos = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetJourneyIndex(v int32) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.JourneyIndex = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos) SetTransferTime(v int32) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfos {
	s.TransferTime = &v
	return s
}

type FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos struct {
	AirlineInfo    *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// BJS
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 09:45
	ArrTime        *string                                                                                `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	BaggageDesc    *string                                                                                `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
	DepAirportInfo *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// HGH
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// duration
	//
	// example:
	//
	// 140
	Duration  *int32                 `json:"duration,omitempty" xml:"duration,omitempty"`
	ExtraInfo map[string]interface{} `json:"extra_info,omitempty" xml:"extra_info,omitempty"`
	// example:
	//
	// MU5131
	FlightNo        *string                                                                                 `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightShareInfo *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo `json:"flight_share_info,omitempty" xml:"flight_share_info,omitempty" type:"Struct"`
	FlightSize      *string                                                                                 `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	FlightStopInfo  *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo  `json:"flight_stop_info,omitempty" xml:"flight_stop_info,omitempty" type:"Struct"`
	// example:
	//
	// 320
	FlightType   *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty" xml:"manufacturer,omitempty"`
	MealDesc     *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	Miles        *int32  `json:"miles,omitempty" xml:"miles,omitempty"`
	OnTimeRate   *string `json:"on_time_rate,omitempty" xml:"on_time_rate,omitempty"`
	// example:
	//
	// 0
	OneMore     *int32  `json:"one_more,omitempty" xml:"one_more,omitempty"`
	OneMoreShow *string `json:"one_more_show,omitempty" xml:"one_more_show,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	// example:
	//
	// false
	Share           *bool   `json:"share,omitempty" xml:"share,omitempty"`
	ShortFlightSize *string `json:"short_flight_size,omitempty" xml:"short_flight_size,omitempty"`
	// example:
	//
	// false
	Stop               *bool   `json:"stop,omitempty" xml:"stop,omitempty"`
	TotalTime          *string `json:"total_time,omitempty" xml:"total_time,omitempty"`
	TransferTime       *string `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
	TransferTimeNumber *int32  `json:"transfer_time_number,omitempty" xml:"transfer_time_number,omitempty"`
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetAirlineInfo(v *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.AirlineInfo = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrAirportInfo(v *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrAirportInfo = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrCityCode(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrCityCode = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrCityName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrCityName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrTime(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrTime = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetBaggageDesc(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.BaggageDesc = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepAirportInfo(v *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepAirportInfo = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepCityCode(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepCityCode = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepCityName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepCityName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepTime(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepTime = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDuration(v int32) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Duration = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetExtraInfo(v map[string]interface{}) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ExtraInfo = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightNo(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightNo = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightShareInfo(v *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightShareInfo = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightSize(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightSize = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightStopInfo(v *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightStopInfo = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightType(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightType = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetManufacturer(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Manufacturer = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetMealDesc(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.MealDesc = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetMiles(v int32) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Miles = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetOnTimeRate(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.OnTimeRate = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetOneMore(v int32) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.OneMore = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetOneMoreShow(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.OneMoreShow = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetSegmentIndex(v int32) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.SegmentIndex = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetShare(v bool) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Share = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetShortFlightSize(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ShortFlightSize = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetStop(v bool) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Stop = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetTotalTime(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.TotalTime = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetTransferTime(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.TransferTime = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetTransferTimeNumber(v int32) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.TransferTimeNumber = &v
	return s
}

type FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// MU
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB15EXDFHY1gK0jSZTEXXXDQVXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineChineseName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineChineseShortName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineCode(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineIcon(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetCheapFlight(v bool) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo struct {
	// example:
	//
	// PKX
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// #FF7300
	AirportNameColor *string `json:"airport_name_color,omitempty" xml:"airport_name_color,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// --
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportCode(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportNameColor(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportNameColor = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportShortName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetTerminal(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.Terminal = &v
	return s
}

type FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// #FF7300
	AirportNameColor *string `json:"airport_name_color,omitempty" xml:"airport_name_color,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportCode(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportNameColor(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportNameColor = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportShortName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetTerminal(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.Terminal = &v
	return s
}

type FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo struct {
	OperatingAirlineInfo *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo `json:"operating_airline_info,omitempty" xml:"operating_airline_info,omitempty" type:"Struct"`
	// example:
	//
	// CX601
	OperatingFlightNo *string `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) SetOperatingAirlineInfo(v *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo {
	s.OperatingAirlineInfo = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) SetOperatingFlightNo(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo {
	s.OperatingFlightNo = &v
	return s
}

type FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// DR
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB1gSXBFUT1gK0jSZFhXXaAtVXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineChineseName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineChineseShortName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineCode(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineIcon(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetCheapFlight(v bool) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.CheapFlight = &v
	return s
}

type FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo struct {
	// example:
	//
	// HGH
	StopAirport     *string `json:"stop_airport,omitempty" xml:"stop_airport,omitempty"`
	StopAirportName *string `json:"stop_airport_name,omitempty" xml:"stop_airport_name,omitempty"`
	// example:
	//
	// T3
	StopArrTerm *string `json:"stop_arr_term,omitempty" xml:"stop_arr_term,omitempty"`
	// example:
	//
	// BJS
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// HGH
	StopCityCode *string `json:"stop_city_code,omitempty" xml:"stop_city_code,omitempty"`
	// example:
	//
	// HGH
	StopCityName  *string   `json:"stop_city_name,omitempty" xml:"stop_city_name,omitempty"`
	StopCityNames []*string `json:"stop_city_names,omitempty" xml:"stop_city_names,omitempty" type:"Repeated"`
	// example:
	//
	// T4
	StopDepTerm *string `json:"stop_dep_term,omitempty" xml:"stop_dep_term,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	StopTime    *string `json:"stop_time,omitempty" xml:"stop_time,omitempty"`
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopAirport(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopAirport = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopAirportName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopAirportName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopArrTerm(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopArrTerm = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopArrTime(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopArrTime = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityCode(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityCode = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityName(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityName = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityNames(v []*string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityNames = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopDepTerm(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopDepTerm = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopDepTime(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopDepTime = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopTime(v string) *FlightOtaSearchV2ResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopTime = &v
	return s
}

type FlightOtaSearchV2ResponseBodyModuleItemList struct {
	FlightRuleInfos map[string]*ModuleItemListFlightRuleInfosValue `json:"flight_rule_infos,omitempty" xml:"flight_rule_infos,omitempty"`
	// example:
	//
	// e50d380fc05942cc8ac57af8ae02f448_0
	ItemId             *string                                                `json:"item_id,omitempty" xml:"item_id,omitempty"`
	ShoppingItemMap    map[string]*ModuleItemListShoppingItemMapValue         `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
	SubItemPositionMap map[string][]*ModuleItemListSubItemPositionMapValue    `json:"sub_item_position_map,omitempty" xml:"sub_item_position_map,omitempty"`
	SubItems           []*FlightOtaSearchV2ResponseBodyModuleItemListSubItems `json:"sub_items,omitempty" xml:"sub_items,omitempty" type:"Repeated"`
}

func (s FlightOtaSearchV2ResponseBodyModuleItemList) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModuleItemList) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModuleItemList) SetFlightRuleInfos(v map[string]*ModuleItemListFlightRuleInfosValue) *FlightOtaSearchV2ResponseBodyModuleItemList {
	s.FlightRuleInfos = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleItemList) SetItemId(v string) *FlightOtaSearchV2ResponseBodyModuleItemList {
	s.ItemId = &v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleItemList) SetShoppingItemMap(v map[string]*ModuleItemListShoppingItemMapValue) *FlightOtaSearchV2ResponseBodyModuleItemList {
	s.ShoppingItemMap = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleItemList) SetSubItemPositionMap(v map[string][]*ModuleItemListSubItemPositionMapValue) *FlightOtaSearchV2ResponseBodyModuleItemList {
	s.SubItemPositionMap = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleItemList) SetSubItems(v []*FlightOtaSearchV2ResponseBodyModuleItemListSubItems) *FlightOtaSearchV2ResponseBodyModuleItemList {
	s.SubItems = v
	return s
}

type FlightOtaSearchV2ResponseBodyModuleItemListSubItems struct {
	ShoppingItemMap map[string]*ModuleItemListSubItemsShoppingItemMapValue `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
	// example:
	//
	// 07df0bd9-f803-4a50-8449-f4bd675d9939
	UniqKey *string `json:"uniq_key,omitempty" xml:"uniq_key,omitempty"`
}

func (s FlightOtaSearchV2ResponseBodyModuleItemListSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2ResponseBodyModuleItemListSubItems) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2ResponseBodyModuleItemListSubItems) SetShoppingItemMap(v map[string]*ModuleItemListSubItemsShoppingItemMapValue) *FlightOtaSearchV2ResponseBodyModuleItemListSubItems {
	s.ShoppingItemMap = v
	return s
}

func (s *FlightOtaSearchV2ResponseBodyModuleItemListSubItems) SetUniqKey(v string) *FlightOtaSearchV2ResponseBodyModuleItemListSubItems {
	s.UniqKey = &v
	return s
}

type FlightOtaSearchV2Response struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightOtaSearchV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightOtaSearchV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightOtaSearchV2Response) GoString() string {
	return s.String()
}

func (s *FlightOtaSearchV2Response) SetHeaders(v map[string]*string) *FlightOtaSearchV2Response {
	s.Headers = v
	return s
}

func (s *FlightOtaSearchV2Response) SetStatusCode(v int32) *FlightOtaSearchV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightOtaSearchV2Response) SetBody(v *FlightOtaSearchV2ResponseBody) *FlightOtaSearchV2Response {
	s.Body = v
	return s
}

type FlightPayOrderHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightPayOrderHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderHeaders) GoString() string {
	return s.String()
}

func (s *FlightPayOrderHeaders) SetCommonHeaders(v map[string]*string) *FlightPayOrderHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightPayOrderHeaders) SetXAcsBtripCorpToken(v string) *FlightPayOrderHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightPayOrderRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 100
	CorpPayPrice *int64 `json:"corp_pay_price,omitempty" xml:"corp_pay_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string            `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	Extra      map[string]*string `json:"extra,omitempty" xml:"extra,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	PersonalPayPrice *int64 `json:"personal_pay_price,omitempty" xml:"personal_pay_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	TotalPayPrice *int64 `json:"total_pay_price,omitempty" xml:"total_pay_price,omitempty"`
}

func (s FlightPayOrderRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderRequest) GoString() string {
	return s.String()
}

func (s *FlightPayOrderRequest) SetCorpPayPrice(v int64) *FlightPayOrderRequest {
	s.CorpPayPrice = &v
	return s
}

func (s *FlightPayOrderRequest) SetDisOrderId(v string) *FlightPayOrderRequest {
	s.DisOrderId = &v
	return s
}

func (s *FlightPayOrderRequest) SetExtra(v map[string]*string) *FlightPayOrderRequest {
	s.Extra = v
	return s
}

func (s *FlightPayOrderRequest) SetPersonalPayPrice(v int64) *FlightPayOrderRequest {
	s.PersonalPayPrice = &v
	return s
}

func (s *FlightPayOrderRequest) SetTotalPayPrice(v int64) *FlightPayOrderRequest {
	s.TotalPayPrice = &v
	return s
}

type FlightPayOrderShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 100
	CorpPayPrice *int64 `json:"corp_pay_price,omitempty" xml:"corp_pay_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId  *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	ExtraShrink *string `json:"extra,omitempty" xml:"extra,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	PersonalPayPrice *int64 `json:"personal_pay_price,omitempty" xml:"personal_pay_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	TotalPayPrice *int64 `json:"total_pay_price,omitempty" xml:"total_pay_price,omitempty"`
}

func (s FlightPayOrderShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightPayOrderShrinkRequest) SetCorpPayPrice(v int64) *FlightPayOrderShrinkRequest {
	s.CorpPayPrice = &v
	return s
}

func (s *FlightPayOrderShrinkRequest) SetDisOrderId(v string) *FlightPayOrderShrinkRequest {
	s.DisOrderId = &v
	return s
}

func (s *FlightPayOrderShrinkRequest) SetExtraShrink(v string) *FlightPayOrderShrinkRequest {
	s.ExtraShrink = &v
	return s
}

func (s *FlightPayOrderShrinkRequest) SetPersonalPayPrice(v int64) *FlightPayOrderShrinkRequest {
	s.PersonalPayPrice = &v
	return s
}

func (s *FlightPayOrderShrinkRequest) SetTotalPayPrice(v int64) *FlightPayOrderShrinkRequest {
	s.TotalPayPrice = &v
	return s
}

type FlightPayOrderResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                           `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                           `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightPayOrderResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210e842b16611337974412836dae27
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightPayOrderResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderResponseBody) GoString() string {
	return s.String()
}

func (s *FlightPayOrderResponseBody) SetCode(v string) *FlightPayOrderResponseBody {
	s.Code = &v
	return s
}

func (s *FlightPayOrderResponseBody) SetMessage(v string) *FlightPayOrderResponseBody {
	s.Message = &v
	return s
}

func (s *FlightPayOrderResponseBody) SetModule(v *FlightPayOrderResponseBodyModule) *FlightPayOrderResponseBody {
	s.Module = v
	return s
}

func (s *FlightPayOrderResponseBody) SetRequestId(v string) *FlightPayOrderResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightPayOrderResponseBody) SetSuccess(v bool) *FlightPayOrderResponseBody {
	s.Success = &v
	return s
}

func (s *FlightPayOrderResponseBody) SetTraceId(v string) *FlightPayOrderResponseBody {
	s.TraceId = &v
	return s
}

type FlightPayOrderResponseBodyModule struct {
	// example:
	//
	// 1000
	ActualPayPrice *int64 `json:"actual_pay_price,omitempty" xml:"actual_pay_price,omitempty"`
	// example:
	//
	// 12989127316726531726
	AlipayTradeNo *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	// example:
	//
	// 0000-00-00 00:00:00
	LastPayTime *string `json:"last_pay_time,omitempty" xml:"last_pay_time,omitempty"`
	// example:
	//
	// 0
	PayStatus *int32 `json:"pay_status,omitempty" xml:"pay_status,omitempty"`
}

func (s FlightPayOrderResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightPayOrderResponseBodyModule) SetActualPayPrice(v int64) *FlightPayOrderResponseBodyModule {
	s.ActualPayPrice = &v
	return s
}

func (s *FlightPayOrderResponseBodyModule) SetAlipayTradeNo(v string) *FlightPayOrderResponseBodyModule {
	s.AlipayTradeNo = &v
	return s
}

func (s *FlightPayOrderResponseBodyModule) SetLastPayTime(v string) *FlightPayOrderResponseBodyModule {
	s.LastPayTime = &v
	return s
}

func (s *FlightPayOrderResponseBodyModule) SetPayStatus(v int32) *FlightPayOrderResponseBodyModule {
	s.PayStatus = &v
	return s
}

type FlightPayOrderResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightPayOrderResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightPayOrderResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderResponse) GoString() string {
	return s.String()
}

func (s *FlightPayOrderResponse) SetHeaders(v map[string]*string) *FlightPayOrderResponse {
	s.Headers = v
	return s
}

func (s *FlightPayOrderResponse) SetStatusCode(v int32) *FlightPayOrderResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightPayOrderResponse) SetBody(v *FlightPayOrderResponseBody) *FlightPayOrderResponse {
	s.Body = v
	return s
}

type FlightPayOrderV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightPayOrderV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderV2Headers) GoString() string {
	return s.String()
}

func (s *FlightPayOrderV2Headers) SetCommonHeaders(v map[string]*string) *FlightPayOrderV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightPayOrderV2Headers) SetXAcsBtripCorpToken(v string) *FlightPayOrderV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightPayOrderV2Request struct {
	// example:
	//
	// cheshiapi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// cheshiapi002kwl
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195798359400
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 5100
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
	// example:
	//
	// 10
	TotalServiceFeePrice *int64 `json:"total_service_fee_price,omitempty" xml:"total_service_fee_price,omitempty"`
}

func (s FlightPayOrderV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderV2Request) GoString() string {
	return s.String()
}

func (s *FlightPayOrderV2Request) SetIsvName(v string) *FlightPayOrderV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightPayOrderV2Request) SetOrderId(v string) *FlightPayOrderV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightPayOrderV2Request) SetOutOrderId(v string) *FlightPayOrderV2Request {
	s.OutOrderId = &v
	return s
}

func (s *FlightPayOrderV2Request) SetTotalPrice(v int64) *FlightPayOrderV2Request {
	s.TotalPrice = &v
	return s
}

func (s *FlightPayOrderV2Request) SetTotalServiceFeePrice(v int64) *FlightPayOrderV2Request {
	s.TotalServiceFeePrice = &v
	return s
}

type FlightPayOrderV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightPayOrderV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightPayOrderV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightPayOrderV2ResponseBody) SetCode(v string) *FlightPayOrderV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightPayOrderV2ResponseBody) SetMessage(v string) *FlightPayOrderV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightPayOrderV2ResponseBody) SetModule(v *FlightPayOrderV2ResponseBodyModule) *FlightPayOrderV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightPayOrderV2ResponseBody) SetRequestId(v string) *FlightPayOrderV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightPayOrderV2ResponseBody) SetSuccess(v bool) *FlightPayOrderV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightPayOrderV2ResponseBody) SetTraceId(v string) *FlightPayOrderV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightPayOrderV2ResponseBodyModule struct {
	// example:
	//
	// 51000
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
}

func (s FlightPayOrderV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightPayOrderV2ResponseBodyModule) SetPrice(v int64) *FlightPayOrderV2ResponseBodyModule {
	s.Price = &v
	return s
}

type FlightPayOrderV2Response struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightPayOrderV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightPayOrderV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightPayOrderV2Response) GoString() string {
	return s.String()
}

func (s *FlightPayOrderV2Response) SetHeaders(v map[string]*string) *FlightPayOrderV2Response {
	s.Headers = v
	return s
}

func (s *FlightPayOrderV2Response) SetStatusCode(v int32) *FlightPayOrderV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightPayOrderV2Response) SetBody(v *FlightPayOrderV2ResponseBody) *FlightPayOrderV2Response {
	s.Body = v
	return s
}

type FlightRefundApplyHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightRefundApplyHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyHeaders) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyHeaders) SetCommonHeaders(v map[string]*string) *FlightRefundApplyHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightRefundApplyHeaders) SetXAcsBtripCorpToken(v string) *FlightRefundApplyHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightRefundApplyRequest struct {
	// example:
	//
	// 100
	CorpRefundPrice *int64 `json:"corp_refund_price,omitempty" xml:"corp_refund_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// refu123
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	DisplayRefundMoney *string            `json:"display_refund_money,omitempty" xml:"display_refund_money,omitempty"`
	Extra              map[string]*string `json:"extra,omitempty" xml:"extra,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	IsVoluntary *int32 `json:"is_voluntary,omitempty" xml:"is_voluntary,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// FlightItem_9966772382
	ItemUnitIds              *string                                             `json:"item_unit_ids,omitempty" xml:"item_unit_ids,omitempty"`
	PassengerSegmentInfoList []*FlightRefundApplyRequestPassengerSegmentInfoList `json:"passenger_segment_info_list,omitempty" xml:"passenger_segment_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 100
	PersonalRefundPrice *int64  `json:"personal_refund_price,omitempty" xml:"personal_refund_price,omitempty"`
	ReasonDetail        *string `json:"reason_detail,omitempty" xml:"reason_detail,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	ReasonType        *int32    `json:"reason_type,omitempty" xml:"reason_type,omitempty"`
	RefundVoucherInfo []*string `json:"refund_voucher_info,omitempty" xml:"refund_voucher_info,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 0f9418cd2ce34af49ab0de16fea166d1
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// 100
	TotalRefundPrice *int64 `json:"total_refund_price,omitempty" xml:"total_refund_price,omitempty"`
}

func (s FlightRefundApplyRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyRequest) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyRequest) SetCorpRefundPrice(v int64) *FlightRefundApplyRequest {
	s.CorpRefundPrice = &v
	return s
}

func (s *FlightRefundApplyRequest) SetDisOrderId(v string) *FlightRefundApplyRequest {
	s.DisOrderId = &v
	return s
}

func (s *FlightRefundApplyRequest) SetDisSubOrderId(v string) *FlightRefundApplyRequest {
	s.DisSubOrderId = &v
	return s
}

func (s *FlightRefundApplyRequest) SetDisplayRefundMoney(v string) *FlightRefundApplyRequest {
	s.DisplayRefundMoney = &v
	return s
}

func (s *FlightRefundApplyRequest) SetExtra(v map[string]*string) *FlightRefundApplyRequest {
	s.Extra = v
	return s
}

func (s *FlightRefundApplyRequest) SetIsVoluntary(v int32) *FlightRefundApplyRequest {
	s.IsVoluntary = &v
	return s
}

func (s *FlightRefundApplyRequest) SetItemUnitIds(v string) *FlightRefundApplyRequest {
	s.ItemUnitIds = &v
	return s
}

func (s *FlightRefundApplyRequest) SetPassengerSegmentInfoList(v []*FlightRefundApplyRequestPassengerSegmentInfoList) *FlightRefundApplyRequest {
	s.PassengerSegmentInfoList = v
	return s
}

func (s *FlightRefundApplyRequest) SetPersonalRefundPrice(v int64) *FlightRefundApplyRequest {
	s.PersonalRefundPrice = &v
	return s
}

func (s *FlightRefundApplyRequest) SetReasonDetail(v string) *FlightRefundApplyRequest {
	s.ReasonDetail = &v
	return s
}

func (s *FlightRefundApplyRequest) SetReasonType(v int32) *FlightRefundApplyRequest {
	s.ReasonType = &v
	return s
}

func (s *FlightRefundApplyRequest) SetRefundVoucherInfo(v []*string) *FlightRefundApplyRequest {
	s.RefundVoucherInfo = v
	return s
}

func (s *FlightRefundApplyRequest) SetSessionId(v string) *FlightRefundApplyRequest {
	s.SessionId = &v
	return s
}

func (s *FlightRefundApplyRequest) SetTotalRefundPrice(v int64) *FlightRefundApplyRequest {
	s.TotalRefundPrice = &v
	return s
}

type FlightRefundApplyRequestPassengerSegmentInfoList struct {
	FlightNo      *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 1245
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s FlightRefundApplyRequestPassengerSegmentInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyRequestPassengerSegmentInfoList) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyRequestPassengerSegmentInfoList) SetFlightNo(v string) *FlightRefundApplyRequestPassengerSegmentInfoList {
	s.FlightNo = &v
	return s
}

func (s *FlightRefundApplyRequestPassengerSegmentInfoList) SetPassengerName(v string) *FlightRefundApplyRequestPassengerSegmentInfoList {
	s.PassengerName = &v
	return s
}

func (s *FlightRefundApplyRequestPassengerSegmentInfoList) SetUserId(v string) *FlightRefundApplyRequestPassengerSegmentInfoList {
	s.UserId = &v
	return s
}

type FlightRefundApplyShrinkRequest struct {
	// example:
	//
	// 100
	CorpRefundPrice *int64 `json:"corp_refund_price,omitempty" xml:"corp_refund_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// refu123
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	DisplayRefundMoney *string `json:"display_refund_money,omitempty" xml:"display_refund_money,omitempty"`
	ExtraShrink        *string `json:"extra,omitempty" xml:"extra,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	IsVoluntary *int32 `json:"is_voluntary,omitempty" xml:"is_voluntary,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// FlightItem_9966772382
	ItemUnitIds                    *string `json:"item_unit_ids,omitempty" xml:"item_unit_ids,omitempty"`
	PassengerSegmentInfoListShrink *string `json:"passenger_segment_info_list,omitempty" xml:"passenger_segment_info_list,omitempty"`
	// example:
	//
	// 100
	PersonalRefundPrice *int64  `json:"personal_refund_price,omitempty" xml:"personal_refund_price,omitempty"`
	ReasonDetail        *string `json:"reason_detail,omitempty" xml:"reason_detail,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	ReasonType              *int32  `json:"reason_type,omitempty" xml:"reason_type,omitempty"`
	RefundVoucherInfoShrink *string `json:"refund_voucher_info,omitempty" xml:"refund_voucher_info,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0f9418cd2ce34af49ab0de16fea166d1
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// 100
	TotalRefundPrice *int64 `json:"total_refund_price,omitempty" xml:"total_refund_price,omitempty"`
}

func (s FlightRefundApplyShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyShrinkRequest) SetCorpRefundPrice(v int64) *FlightRefundApplyShrinkRequest {
	s.CorpRefundPrice = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetDisOrderId(v string) *FlightRefundApplyShrinkRequest {
	s.DisOrderId = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetDisSubOrderId(v string) *FlightRefundApplyShrinkRequest {
	s.DisSubOrderId = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetDisplayRefundMoney(v string) *FlightRefundApplyShrinkRequest {
	s.DisplayRefundMoney = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetExtraShrink(v string) *FlightRefundApplyShrinkRequest {
	s.ExtraShrink = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetIsVoluntary(v int32) *FlightRefundApplyShrinkRequest {
	s.IsVoluntary = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetItemUnitIds(v string) *FlightRefundApplyShrinkRequest {
	s.ItemUnitIds = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetPassengerSegmentInfoListShrink(v string) *FlightRefundApplyShrinkRequest {
	s.PassengerSegmentInfoListShrink = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetPersonalRefundPrice(v int64) *FlightRefundApplyShrinkRequest {
	s.PersonalRefundPrice = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetReasonDetail(v string) *FlightRefundApplyShrinkRequest {
	s.ReasonDetail = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetReasonType(v int32) *FlightRefundApplyShrinkRequest {
	s.ReasonType = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetRefundVoucherInfoShrink(v string) *FlightRefundApplyShrinkRequest {
	s.RefundVoucherInfoShrink = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetSessionId(v string) *FlightRefundApplyShrinkRequest {
	s.SessionId = &v
	return s
}

func (s *FlightRefundApplyShrinkRequest) SetTotalRefundPrice(v int64) *FlightRefundApplyShrinkRequest {
	s.TotalRefundPrice = &v
	return s
}

type FlightRefundApplyResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightRefundApplyResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightRefundApplyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyResponseBody) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyResponseBody) SetCode(v string) *FlightRefundApplyResponseBody {
	s.Code = &v
	return s
}

func (s *FlightRefundApplyResponseBody) SetMessage(v string) *FlightRefundApplyResponseBody {
	s.Message = &v
	return s
}

func (s *FlightRefundApplyResponseBody) SetModule(v *FlightRefundApplyResponseBodyModule) *FlightRefundApplyResponseBody {
	s.Module = v
	return s
}

func (s *FlightRefundApplyResponseBody) SetRequestId(v string) *FlightRefundApplyResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightRefundApplyResponseBody) SetSuccess(v bool) *FlightRefundApplyResponseBody {
	s.Success = &v
	return s
}

func (s *FlightRefundApplyResponseBody) SetTraceId(v string) *FlightRefundApplyResponseBody {
	s.TraceId = &v
	return s
}

type FlightRefundApplyResponseBodyModule struct {
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// refun1234
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	// example:
	//
	// 1231231
	RefundApplyId *int64 `json:"refund_apply_id,omitempty" xml:"refund_apply_id,omitempty"`
	// example:
	//
	// 1000
	RefundFee *int64 `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	// example:
	//
	// 100
	RefundMoney *int64 `json:"refund_money,omitempty" xml:"refund_money,omitempty"`
}

func (s FlightRefundApplyResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyResponseBodyModule) SetDisOrderId(v string) *FlightRefundApplyResponseBodyModule {
	s.DisOrderId = &v
	return s
}

func (s *FlightRefundApplyResponseBodyModule) SetDisSubOrderId(v string) *FlightRefundApplyResponseBodyModule {
	s.DisSubOrderId = &v
	return s
}

func (s *FlightRefundApplyResponseBodyModule) SetRefundApplyId(v int64) *FlightRefundApplyResponseBodyModule {
	s.RefundApplyId = &v
	return s
}

func (s *FlightRefundApplyResponseBodyModule) SetRefundFee(v int64) *FlightRefundApplyResponseBodyModule {
	s.RefundFee = &v
	return s
}

func (s *FlightRefundApplyResponseBodyModule) SetRefundMoney(v int64) *FlightRefundApplyResponseBodyModule {
	s.RefundMoney = &v
	return s
}

type FlightRefundApplyResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightRefundApplyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightRefundApplyResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyResponse) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyResponse) SetHeaders(v map[string]*string) *FlightRefundApplyResponse {
	s.Headers = v
	return s
}

func (s *FlightRefundApplyResponse) SetStatusCode(v int32) *FlightRefundApplyResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightRefundApplyResponse) SetBody(v *FlightRefundApplyResponseBody) *FlightRefundApplyResponse {
	s.Body = v
	return s
}

type FlightRefundApplyV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightRefundApplyV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyV2Headers) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyV2Headers) SetCommonHeaders(v map[string]*string) *FlightRefundApplyV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightRefundApplyV2Headers) SetXAcsBtripCorpToken(v string) *FlightRefundApplyV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightRefundApplyV2Request struct {
	// example:
	//
	// cheshiapi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1683901850297448082
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1019195836916039
	OutSubOrderId             *string                                                `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	PassengerSegmentRelations []*FlightRefundApplyV2RequestPassengerSegmentRelations `json:"passenger_segment_relations,omitempty" xml:"passenger_segment_relations,omitempty" type:"Repeated"`
	// example:
	//
	// 2
	PreCalType   *int32  `json:"pre_cal_type,omitempty" xml:"pre_cal_type,omitempty"`
	RefundReason *string `json:"refund_reason,omitempty" xml:"refund_reason,omitempty"`
	// example:
	//
	// 2
	RefundReasonType *int32    `json:"refund_reason_type,omitempty" xml:"refund_reason_type,omitempty"`
	TicketNos        []*string `json:"ticket_nos,omitempty" xml:"ticket_nos,omitempty" type:"Repeated"`
	// example:
	//
	// 10000
	TotalRefundPrice *int64  `json:"total_refund_price,omitempty" xml:"total_refund_price,omitempty"`
	UploadPictUrls   *string `json:"upload_pict_urls,omitempty" xml:"upload_pict_urls,omitempty"`
	// example:
	//
	// true
	Voluntary *bool `json:"voluntary,omitempty" xml:"voluntary,omitempty"`
}

func (s FlightRefundApplyV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyV2Request) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyV2Request) SetIsvName(v string) *FlightRefundApplyV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightRefundApplyV2Request) SetOrderId(v string) *FlightRefundApplyV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightRefundApplyV2Request) SetOutOrderId(v string) *FlightRefundApplyV2Request {
	s.OutOrderId = &v
	return s
}

func (s *FlightRefundApplyV2Request) SetOutSubOrderId(v string) *FlightRefundApplyV2Request {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightRefundApplyV2Request) SetPassengerSegmentRelations(v []*FlightRefundApplyV2RequestPassengerSegmentRelations) *FlightRefundApplyV2Request {
	s.PassengerSegmentRelations = v
	return s
}

func (s *FlightRefundApplyV2Request) SetPreCalType(v int32) *FlightRefundApplyV2Request {
	s.PreCalType = &v
	return s
}

func (s *FlightRefundApplyV2Request) SetRefundReason(v string) *FlightRefundApplyV2Request {
	s.RefundReason = &v
	return s
}

func (s *FlightRefundApplyV2Request) SetRefundReasonType(v int32) *FlightRefundApplyV2Request {
	s.RefundReasonType = &v
	return s
}

func (s *FlightRefundApplyV2Request) SetTicketNos(v []*string) *FlightRefundApplyV2Request {
	s.TicketNos = v
	return s
}

func (s *FlightRefundApplyV2Request) SetTotalRefundPrice(v int64) *FlightRefundApplyV2Request {
	s.TotalRefundPrice = &v
	return s
}

func (s *FlightRefundApplyV2Request) SetUploadPictUrls(v string) *FlightRefundApplyV2Request {
	s.UploadPictUrls = &v
	return s
}

func (s *FlightRefundApplyV2Request) SetVoluntary(v bool) *FlightRefundApplyV2Request {
	s.Voluntary = &v
	return s
}

type FlightRefundApplyV2RequestPassengerSegmentRelations struct {
	// example:
	//
	// 1075004
	PassengerId   *string   `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	SegmentIdList []*string `json:"segment_id_list,omitempty" xml:"segment_id_list,omitempty" type:"Repeated"`
}

func (s FlightRefundApplyV2RequestPassengerSegmentRelations) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyV2RequestPassengerSegmentRelations) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyV2RequestPassengerSegmentRelations) SetPassengerId(v string) *FlightRefundApplyV2RequestPassengerSegmentRelations {
	s.PassengerId = &v
	return s
}

func (s *FlightRefundApplyV2RequestPassengerSegmentRelations) SetSegmentIdList(v []*string) *FlightRefundApplyV2RequestPassengerSegmentRelations {
	s.SegmentIdList = v
	return s
}

type FlightRefundApplyV2ShrinkRequest struct {
	// example:
	//
	// cheshiapi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1683901850297448082
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1019195836916039
	OutSubOrderId                   *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	PassengerSegmentRelationsShrink *string `json:"passenger_segment_relations,omitempty" xml:"passenger_segment_relations,omitempty"`
	// example:
	//
	// 2
	PreCalType   *int32  `json:"pre_cal_type,omitempty" xml:"pre_cal_type,omitempty"`
	RefundReason *string `json:"refund_reason,omitempty" xml:"refund_reason,omitempty"`
	// example:
	//
	// 2
	RefundReasonType *int32  `json:"refund_reason_type,omitempty" xml:"refund_reason_type,omitempty"`
	TicketNosShrink  *string `json:"ticket_nos,omitempty" xml:"ticket_nos,omitempty"`
	// example:
	//
	// 10000
	TotalRefundPrice *int64  `json:"total_refund_price,omitempty" xml:"total_refund_price,omitempty"`
	UploadPictUrls   *string `json:"upload_pict_urls,omitempty" xml:"upload_pict_urls,omitempty"`
	// example:
	//
	// true
	Voluntary *bool `json:"voluntary,omitempty" xml:"voluntary,omitempty"`
}

func (s FlightRefundApplyV2ShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyV2ShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyV2ShrinkRequest) SetIsvName(v string) *FlightRefundApplyV2ShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetOrderId(v string) *FlightRefundApplyV2ShrinkRequest {
	s.OrderId = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetOutOrderId(v string) *FlightRefundApplyV2ShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetOutSubOrderId(v string) *FlightRefundApplyV2ShrinkRequest {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetPassengerSegmentRelationsShrink(v string) *FlightRefundApplyV2ShrinkRequest {
	s.PassengerSegmentRelationsShrink = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetPreCalType(v int32) *FlightRefundApplyV2ShrinkRequest {
	s.PreCalType = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetRefundReason(v string) *FlightRefundApplyV2ShrinkRequest {
	s.RefundReason = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetRefundReasonType(v int32) *FlightRefundApplyV2ShrinkRequest {
	s.RefundReasonType = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetTicketNosShrink(v string) *FlightRefundApplyV2ShrinkRequest {
	s.TicketNosShrink = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetTotalRefundPrice(v int64) *FlightRefundApplyV2ShrinkRequest {
	s.TotalRefundPrice = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetUploadPictUrls(v string) *FlightRefundApplyV2ShrinkRequest {
	s.UploadPictUrls = &v
	return s
}

func (s *FlightRefundApplyV2ShrinkRequest) SetVoluntary(v bool) *FlightRefundApplyV2ShrinkRequest {
	s.Voluntary = &v
	return s
}

type FlightRefundApplyV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string                                `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightRefundApplyV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightRefundApplyV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyV2ResponseBody) SetCode(v string) *FlightRefundApplyV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightRefundApplyV2ResponseBody) SetMessage(v string) *FlightRefundApplyV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightRefundApplyV2ResponseBody) SetModule(v *FlightRefundApplyV2ResponseBodyModule) *FlightRefundApplyV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightRefundApplyV2ResponseBody) SetRequestId(v string) *FlightRefundApplyV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightRefundApplyV2ResponseBody) SetSuccess(v bool) *FlightRefundApplyV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightRefundApplyV2ResponseBody) SetTraceId(v string) *FlightRefundApplyV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightRefundApplyV2ResponseBodyModule struct {
	// example:
	//
	// 1683901850297448200
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467200
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1019195836916039
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	// example:
	//
	// 1000000000297003
	SubOrderId *string `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
}

func (s FlightRefundApplyV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyV2ResponseBodyModule) SetOrderId(v string) *FlightRefundApplyV2ResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *FlightRefundApplyV2ResponseBodyModule) SetOutOrderId(v string) *FlightRefundApplyV2ResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *FlightRefundApplyV2ResponseBodyModule) SetOutSubOrderId(v string) *FlightRefundApplyV2ResponseBodyModule {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightRefundApplyV2ResponseBodyModule) SetSubOrderId(v string) *FlightRefundApplyV2ResponseBodyModule {
	s.SubOrderId = &v
	return s
}

type FlightRefundApplyV2Response struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightRefundApplyV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightRefundApplyV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundApplyV2Response) GoString() string {
	return s.String()
}

func (s *FlightRefundApplyV2Response) SetHeaders(v map[string]*string) *FlightRefundApplyV2Response {
	s.Headers = v
	return s
}

func (s *FlightRefundApplyV2Response) SetStatusCode(v int32) *FlightRefundApplyV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightRefundApplyV2Response) SetBody(v *FlightRefundApplyV2ResponseBody) *FlightRefundApplyV2Response {
	s.Body = v
	return s
}

type FlightRefundDetailHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightRefundDetailHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailHeaders) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailHeaders) SetCommonHeaders(v map[string]*string) *FlightRefundDetailHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightRefundDetailHeaders) SetXAcsBtripCorpToken(v string) *FlightRefundDetailHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightRefundDetailRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// refun123
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
}

func (s FlightRefundDetailRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailRequest) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailRequest) SetDisOrderId(v string) *FlightRefundDetailRequest {
	s.DisOrderId = &v
	return s
}

func (s *FlightRefundDetailRequest) SetDisSubOrderId(v string) *FlightRefundDetailRequest {
	s.DisSubOrderId = &v
	return s
}

type FlightRefundDetailResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                               `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                               `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightRefundDetailResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightRefundDetailResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailResponseBody) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailResponseBody) SetCode(v string) *FlightRefundDetailResponseBody {
	s.Code = &v
	return s
}

func (s *FlightRefundDetailResponseBody) SetMessage(v string) *FlightRefundDetailResponseBody {
	s.Message = &v
	return s
}

func (s *FlightRefundDetailResponseBody) SetModule(v *FlightRefundDetailResponseBodyModule) *FlightRefundDetailResponseBody {
	s.Module = v
	return s
}

func (s *FlightRefundDetailResponseBody) SetRequestId(v string) *FlightRefundDetailResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightRefundDetailResponseBody) SetSuccess(v bool) *FlightRefundDetailResponseBody {
	s.Success = &v
	return s
}

func (s *FlightRefundDetailResponseBody) SetTraceId(v string) *FlightRefundDetailResponseBody {
	s.TraceId = &v
	return s
}

type FlightRefundDetailResponseBodyModule struct {
	// example:
	//
	// 123
	BtripOrderId *int64 `json:"btrip_order_id,omitempty" xml:"btrip_order_id,omitempty"`
	// example:
	//
	// 123
	BtripSubOrderId *int64 `json:"btrip_sub_order_id,omitempty" xml:"btrip_sub_order_id,omitempty"`
	// example:
	//
	// dis1234
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// refun123
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	// example:
	//
	// 1
	IsVoluntary *int32  `json:"is_voluntary,omitempty" xml:"is_voluntary,omitempty"`
	Reason      *string `json:"reason,omitempty" xml:"reason,omitempty"`
	// example:
	//
	// 100
	RefundFee     *int64                                               `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	RefundFeeList []*FlightRefundDetailResponseBodyModuleRefundFeeList `json:"refund_fee_list,omitempty" xml:"refund_fee_list,omitempty" type:"Repeated"`
	// example:
	//
	// 100
	RefundPrice *int64 `json:"refund_price,omitempty" xml:"refund_price,omitempty"`
	// example:
	//
	// 0
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
}

func (s FlightRefundDetailResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailResponseBodyModule) SetBtripOrderId(v int64) *FlightRefundDetailResponseBodyModule {
	s.BtripOrderId = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModule) SetBtripSubOrderId(v int64) *FlightRefundDetailResponseBodyModule {
	s.BtripSubOrderId = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModule) SetDisOrderId(v string) *FlightRefundDetailResponseBodyModule {
	s.DisOrderId = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModule) SetDisSubOrderId(v string) *FlightRefundDetailResponseBodyModule {
	s.DisSubOrderId = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModule) SetIsVoluntary(v int32) *FlightRefundDetailResponseBodyModule {
	s.IsVoluntary = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModule) SetReason(v string) *FlightRefundDetailResponseBodyModule {
	s.Reason = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModule) SetRefundFee(v int64) *FlightRefundDetailResponseBodyModule {
	s.RefundFee = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModule) SetRefundFeeList(v []*FlightRefundDetailResponseBodyModuleRefundFeeList) *FlightRefundDetailResponseBodyModule {
	s.RefundFeeList = v
	return s
}

func (s *FlightRefundDetailResponseBodyModule) SetRefundPrice(v int64) *FlightRefundDetailResponseBodyModule {
	s.RefundPrice = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModule) SetStatus(v string) *FlightRefundDetailResponseBodyModule {
	s.Status = &v
	return s
}

type FlightRefundDetailResponseBodyModuleRefundFeeList struct {
	// example:
	//
	// 293982882881999
	AlipayTradeNo *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	// example:
	//
	// 100
	RefundFee *int64 `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	// example:
	//
	// 100
	RefundPrice *int64  `json:"refund_price,omitempty" xml:"refund_price,omitempty"`
	Status      *string `json:"status,omitempty" xml:"status,omitempty"`
}

func (s FlightRefundDetailResponseBodyModuleRefundFeeList) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailResponseBodyModuleRefundFeeList) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailResponseBodyModuleRefundFeeList) SetAlipayTradeNo(v string) *FlightRefundDetailResponseBodyModuleRefundFeeList {
	s.AlipayTradeNo = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModuleRefundFeeList) SetRefundFee(v int64) *FlightRefundDetailResponseBodyModuleRefundFeeList {
	s.RefundFee = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModuleRefundFeeList) SetRefundPrice(v int64) *FlightRefundDetailResponseBodyModuleRefundFeeList {
	s.RefundPrice = &v
	return s
}

func (s *FlightRefundDetailResponseBodyModuleRefundFeeList) SetStatus(v string) *FlightRefundDetailResponseBodyModuleRefundFeeList {
	s.Status = &v
	return s
}

type FlightRefundDetailResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightRefundDetailResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightRefundDetailResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailResponse) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailResponse) SetHeaders(v map[string]*string) *FlightRefundDetailResponse {
	s.Headers = v
	return s
}

func (s *FlightRefundDetailResponse) SetStatusCode(v int32) *FlightRefundDetailResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightRefundDetailResponse) SetBody(v *FlightRefundDetailResponseBody) *FlightRefundDetailResponse {
	s.Body = v
	return s
}

type FlightRefundDetailV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightRefundDetailV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailV2Headers) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailV2Headers) SetCommonHeaders(v map[string]*string) *FlightRefundDetailV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightRefundDetailV2Headers) SetXAcsBtripCorpToken(v string) *FlightRefundDetailV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightRefundDetailV2Request struct {
	// example:
	//
	// cheshiapi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1002039195025156784
	OrderId          *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	OutOrderId       *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	OutRefundApplyId *string `json:"out_refund_apply_id,omitempty" xml:"out_refund_apply_id,omitempty"`
	// example:
	//
	// 1002039195025156700
	RefundApplyId *string `json:"refund_apply_id,omitempty" xml:"refund_apply_id,omitempty"`
}

func (s FlightRefundDetailV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailV2Request) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailV2Request) SetIsvName(v string) *FlightRefundDetailV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightRefundDetailV2Request) SetOrderId(v string) *FlightRefundDetailV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightRefundDetailV2Request) SetOutOrderId(v string) *FlightRefundDetailV2Request {
	s.OutOrderId = &v
	return s
}

func (s *FlightRefundDetailV2Request) SetOutRefundApplyId(v string) *FlightRefundDetailV2Request {
	s.OutRefundApplyId = &v
	return s
}

func (s *FlightRefundDetailV2Request) SetRefundApplyId(v string) *FlightRefundDetailV2Request {
	s.RefundApplyId = &v
	return s
}

type FlightRefundDetailV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightRefundDetailV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210e845f16785007404904300ddc92
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightRefundDetailV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailV2ResponseBody) SetCode(v string) *FlightRefundDetailV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBody) SetMessage(v string) *FlightRefundDetailV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBody) SetModule(v *FlightRefundDetailV2ResponseBodyModule) *FlightRefundDetailV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightRefundDetailV2ResponseBody) SetRequestId(v string) *FlightRefundDetailV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBody) SetSuccess(v bool) *FlightRefundDetailV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBody) SetTraceId(v string) *FlightRefundDetailV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightRefundDetailV2ResponseBodyModule struct {
	// example:
	//
	// 2023-08-19 17:18:19
	ApplyTime      *string                                                 `json:"apply_time,omitempty" xml:"apply_time,omitempty"`
	ContactInfoDTO *FlightRefundDetailV2ResponseBodyModuleContactInfoDTO   `json:"contact_info_d_t_o,omitempty" xml:"contact_info_d_t_o,omitempty" type:"Struct"`
	FlightInfoDTOS []*FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS `json:"flight_info_d_t_o_s,omitempty" xml:"flight_info_d_t_o_s,omitempty" type:"Repeated"`
	// example:
	//
	// 1002039195025156700
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1002039195025156700
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1019195836916039
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	Reason        *string `json:"reason,omitempty" xml:"reason,omitempty"`
	// example:
	//
	// 1
	ReasonCode       *string `json:"reason_code,omitempty" xml:"reason_code,omitempty"`
	RefundFailReason *string `json:"refund_fail_reason,omitempty" xml:"refund_fail_reason,omitempty"`
	// example:
	//
	// 100
	RefundHandlingFee *int64 `json:"refund_handling_fee,omitempty" xml:"refund_handling_fee,omitempty"`
	// example:
	//
	// 10000
	RefundMoney *int64 `json:"refund_money,omitempty" xml:"refund_money,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 1000000000297003
	SubOrderId       *int64                                                    `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
	TravelerInfoDTOS []*FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS `json:"traveler_info_d_t_o_s,omitempty" xml:"traveler_info_d_t_o_s,omitempty" type:"Repeated"`
}

func (s FlightRefundDetailV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetApplyTime(v string) *FlightRefundDetailV2ResponseBodyModule {
	s.ApplyTime = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetContactInfoDTO(v *FlightRefundDetailV2ResponseBodyModuleContactInfoDTO) *FlightRefundDetailV2ResponseBodyModule {
	s.ContactInfoDTO = v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetFlightInfoDTOS(v []*FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) *FlightRefundDetailV2ResponseBodyModule {
	s.FlightInfoDTOS = v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetOrderId(v int64) *FlightRefundDetailV2ResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetOutOrderId(v string) *FlightRefundDetailV2ResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetOutSubOrderId(v string) *FlightRefundDetailV2ResponseBodyModule {
	s.OutSubOrderId = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetReason(v string) *FlightRefundDetailV2ResponseBodyModule {
	s.Reason = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetReasonCode(v string) *FlightRefundDetailV2ResponseBodyModule {
	s.ReasonCode = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetRefundFailReason(v string) *FlightRefundDetailV2ResponseBodyModule {
	s.RefundFailReason = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetRefundHandlingFee(v int64) *FlightRefundDetailV2ResponseBodyModule {
	s.RefundHandlingFee = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetRefundMoney(v int64) *FlightRefundDetailV2ResponseBodyModule {
	s.RefundMoney = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetStatus(v int32) *FlightRefundDetailV2ResponseBodyModule {
	s.Status = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetSubOrderId(v int64) *FlightRefundDetailV2ResponseBodyModule {
	s.SubOrderId = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModule) SetTravelerInfoDTOS(v []*FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) *FlightRefundDetailV2ResponseBodyModule {
	s.TravelerInfoDTOS = v
	return s
}

type FlightRefundDetailV2ResponseBodyModuleContactInfoDTO struct {
	// example:
	//
	// 17685764353@163.com
	ContactEmail *string `json:"contact_email,omitempty" xml:"contact_email,omitempty"`
	ContactName  *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	// example:
	//
	// 17685764353
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	// example:
	//
	// true
	SendMsgToPassenger *bool `json:"send_msg_to_passenger,omitempty" xml:"send_msg_to_passenger,omitempty"`
}

func (s FlightRefundDetailV2ResponseBodyModuleContactInfoDTO) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailV2ResponseBodyModuleContactInfoDTO) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailV2ResponseBodyModuleContactInfoDTO) SetContactEmail(v string) *FlightRefundDetailV2ResponseBodyModuleContactInfoDTO {
	s.ContactEmail = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleContactInfoDTO) SetContactName(v string) *FlightRefundDetailV2ResponseBodyModuleContactInfoDTO {
	s.ContactName = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleContactInfoDTO) SetContactPhone(v string) *FlightRefundDetailV2ResponseBodyModuleContactInfoDTO {
	s.ContactPhone = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleContactInfoDTO) SetSendMsgToPassenger(v bool) *FlightRefundDetailV2ResponseBodyModuleContactInfoDTO {
	s.SendMsgToPassenger = &v
	return s
}

type FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS struct {
	// example:
	//
	// MU
	AirlineCode    *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineIconUrl *string `json:"airline_icon_url,omitempty" xml:"airline_icon_url,omitempty"`
	AirlineName    *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	// example:
	//
	// HGH
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrAirportName *string `json:"arr_airport_name,omitempty" xml:"arr_airport_name,omitempty"`
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	ArrTerminal *string `json:"arr_terminal,omitempty" xml:"arr_terminal,omitempty"`
	// example:
	//
	// 2023-10-03 09:30:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// Y
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	// example:
	//
	// 10
	CabinDiscount         *int64  `json:"cabin_discount,omitempty" xml:"cabin_discount,omitempty"`
	CarrierAirlineCode    *string `json:"carrier_airline_code,omitempty" xml:"carrier_airline_code,omitempty"`
	CarrierAirlineIconUrl *string `json:"carrier_airline_icon_url,omitempty" xml:"carrier_airline_icon_url,omitempty"`
	CarrierAirlineName    *string `json:"carrier_airline_name,omitempty" xml:"carrier_airline_name,omitempty"`
	CarrierFlightNo       *string `json:"carrier_flight_no,omitempty" xml:"carrier_flight_no,omitempty"`
	// example:
	//
	// PKX
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepAirportName *string `json:"dep_airport_name,omitempty" xml:"dep_airport_name,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	DepTerminal *string `json:"dep_terminal,omitempty" xml:"dep_terminal,omitempty"`
	// example:
	//
	// 2023-10-03 07:30:00
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// MU5193
	FlightNo   *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightType *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	MealDesc   *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	// example:
	//
	// 1194012
	SegmentId       *string                                                              `json:"segment_id,omitempty" xml:"segment_id,omitempty"`
	SegmentPosition *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOSSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
	StopArrTime     *string                                                              `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	StopCity        *string                                                              `json:"stop_city,omitempty" xml:"stop_city,omitempty"`
	StopDepTime     *string                                                              `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
}

func (s FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetAirlineCode(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.AirlineCode = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetAirlineIconUrl(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.AirlineIconUrl = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetAirlineName(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.AirlineName = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetArrAirportCode(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.ArrAirportCode = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetArrAirportName(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.ArrAirportName = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetArrCityCode(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.ArrCityCode = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetArrCityName(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.ArrCityName = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetArrTerminal(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.ArrTerminal = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetArrTime(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.ArrTime = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetCabin(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.Cabin = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetCabinClass(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.CabinClass = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetCabinClassName(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.CabinClassName = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetCabinDiscount(v int64) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.CabinDiscount = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetCarrierAirlineCode(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.CarrierAirlineCode = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetCarrierAirlineIconUrl(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.CarrierAirlineIconUrl = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetCarrierAirlineName(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.CarrierAirlineName = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetCarrierFlightNo(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.CarrierFlightNo = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetDepAirportCode(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.DepAirportCode = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetDepAirportName(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.DepAirportName = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetDepCityCode(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.DepCityCode = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetDepCityName(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.DepCityName = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetDepTerminal(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.DepTerminal = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetDepTime(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.DepTime = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetFlightNo(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.FlightNo = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetFlightType(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.FlightType = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetMealDesc(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.MealDesc = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetSegmentId(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.SegmentId = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetSegmentPosition(v *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOSSegmentPosition) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.SegmentPosition = v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetStopArrTime(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.StopArrTime = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetStopCity(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.StopCity = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS) SetStopDepTime(v string) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOS {
	s.StopDepTime = &v
	return s
}

type FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOSSegmentPosition struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOSSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOSSegmentPosition) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOSSegmentPosition) SetJourneyIndex(v int32) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOSSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOSSegmentPosition) SetSegmentIndex(v int32) *FlightRefundDetailV2ResponseBodyModuleFlightInfoDTOSSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS struct {
	// example:
	//
	// 2000-08-19
	BirthDate *string `json:"birth_date,omitempty" xml:"birth_date,omitempty"`
	// example:
	//
	// 430131413423435353
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 0
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 1
	Gender          *int32    `json:"gender,omitempty" xml:"gender,omitempty"`
	OriginTicketNos []*string `json:"origin_ticket_nos,omitempty" xml:"origin_ticket_nos,omitempty" type:"Repeated"`
	// example:
	//
	// 12172819047252004460056
	PassengerId   *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// example:
	//
	// 17635462345
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// 3243028
	Pid       *int64    `json:"pid,omitempty" xml:"pid,omitempty"`
	TicketNos []*string `json:"ticket_nos,omitempty" xml:"ticket_nos,omitempty" type:"Repeated"`
}

func (s FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetBirthDate(v string) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.BirthDate = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetCertNo(v string) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.CertNo = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetCertType(v int32) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.CertType = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetGender(v int32) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.Gender = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetOriginTicketNos(v []*string) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.OriginTicketNos = v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetPassengerId(v string) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.PassengerId = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetPassengerName(v string) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.PassengerName = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetPassengerType(v int32) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.PassengerType = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetPhone(v string) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.Phone = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetPid(v int64) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.Pid = &v
	return s
}

func (s *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS) SetTicketNos(v []*string) *FlightRefundDetailV2ResponseBodyModuleTravelerInfoDTOS {
	s.TicketNos = v
	return s
}

type FlightRefundDetailV2Response struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightRefundDetailV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightRefundDetailV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundDetailV2Response) GoString() string {
	return s.String()
}

func (s *FlightRefundDetailV2Response) SetHeaders(v map[string]*string) *FlightRefundDetailV2Response {
	s.Headers = v
	return s
}

func (s *FlightRefundDetailV2Response) SetStatusCode(v int32) *FlightRefundDetailV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightRefundDetailV2Response) SetBody(v *FlightRefundDetailV2ResponseBody) *FlightRefundDetailV2Response {
	s.Body = v
	return s
}

type FlightRefundPreCalHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightRefundPreCalHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalHeaders) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalHeaders) SetCommonHeaders(v map[string]*string) *FlightRefundPreCalHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightRefundPreCalHeaders) SetXAcsBtripCorpToken(v string) *FlightRefundPreCalHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightRefundPreCalRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// 1
	IsVoluntary *string `json:"is_voluntary,omitempty" xml:"is_voluntary,omitempty"`
	// This parameter is required.
	PassengerSegmentInfoList []*FlightRefundPreCalRequestPassengerSegmentInfoList `json:"passenger_segment_info_list,omitempty" xml:"passenger_segment_info_list,omitempty" type:"Repeated"`
}

func (s FlightRefundPreCalRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalRequest) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalRequest) SetDisOrderId(v string) *FlightRefundPreCalRequest {
	s.DisOrderId = &v
	return s
}

func (s *FlightRefundPreCalRequest) SetIsVoluntary(v string) *FlightRefundPreCalRequest {
	s.IsVoluntary = &v
	return s
}

func (s *FlightRefundPreCalRequest) SetPassengerSegmentInfoList(v []*FlightRefundPreCalRequestPassengerSegmentInfoList) *FlightRefundPreCalRequest {
	s.PassengerSegmentInfoList = v
	return s
}

type FlightRefundPreCalRequestPassengerSegmentInfoList struct {
	// This parameter is required.
	//
	// example:
	//
	// CA1982
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// This parameter is required.
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 23112
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s FlightRefundPreCalRequestPassengerSegmentInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalRequestPassengerSegmentInfoList) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalRequestPassengerSegmentInfoList) SetFlightNo(v string) *FlightRefundPreCalRequestPassengerSegmentInfoList {
	s.FlightNo = &v
	return s
}

func (s *FlightRefundPreCalRequestPassengerSegmentInfoList) SetPassengerName(v string) *FlightRefundPreCalRequestPassengerSegmentInfoList {
	s.PassengerName = &v
	return s
}

func (s *FlightRefundPreCalRequestPassengerSegmentInfoList) SetUserId(v string) *FlightRefundPreCalRequestPassengerSegmentInfoList {
	s.UserId = &v
	return s
}

type FlightRefundPreCalShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// 1
	IsVoluntary *string `json:"is_voluntary,omitempty" xml:"is_voluntary,omitempty"`
	// This parameter is required.
	PassengerSegmentInfoListShrink *string `json:"passenger_segment_info_list,omitempty" xml:"passenger_segment_info_list,omitempty"`
}

func (s FlightRefundPreCalShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalShrinkRequest) SetDisOrderId(v string) *FlightRefundPreCalShrinkRequest {
	s.DisOrderId = &v
	return s
}

func (s *FlightRefundPreCalShrinkRequest) SetIsVoluntary(v string) *FlightRefundPreCalShrinkRequest {
	s.IsVoluntary = &v
	return s
}

func (s *FlightRefundPreCalShrinkRequest) SetPassengerSegmentInfoListShrink(v string) *FlightRefundPreCalShrinkRequest {
	s.PassengerSegmentInfoListShrink = &v
	return s
}

type FlightRefundPreCalResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                               `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                               `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightRefundPreCalResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightRefundPreCalResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalResponseBody) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalResponseBody) SetCode(v string) *FlightRefundPreCalResponseBody {
	s.Code = &v
	return s
}

func (s *FlightRefundPreCalResponseBody) SetMessage(v string) *FlightRefundPreCalResponseBody {
	s.Message = &v
	return s
}

func (s *FlightRefundPreCalResponseBody) SetModule(v *FlightRefundPreCalResponseBodyModule) *FlightRefundPreCalResponseBody {
	s.Module = v
	return s
}

func (s *FlightRefundPreCalResponseBody) SetRequestId(v string) *FlightRefundPreCalResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightRefundPreCalResponseBody) SetSuccess(v bool) *FlightRefundPreCalResponseBody {
	s.Success = &v
	return s
}

func (s *FlightRefundPreCalResponseBody) SetTraceId(v string) *FlightRefundPreCalResponseBody {
	s.TraceId = &v
	return s
}

type FlightRefundPreCalResponseBodyModule struct {
	// example:
	//
	// false
	FlightChange *bool `json:"flight_change,omitempty" xml:"flight_change,omitempty"`
	// example:
	//
	// FlightItem_996677504
	ItemUnitId         *string                                                   `json:"item_unit_id,omitempty" xml:"item_unit_id,omitempty"`
	MultiRefundCalList []*FlightRefundPreCalResponseBodyModuleMultiRefundCalList `json:"multi_refund_cal_list,omitempty" xml:"multi_refund_cal_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1000
	PreRefundMoney *int64 `json:"pre_refund_money,omitempty" xml:"pre_refund_money,omitempty"`
	// example:
	//
	// 1000
	RefundFee    *int64                                              `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	ReturnReason []*FlightRefundPreCalResponseBodyModuleReturnReason `json:"return_reason,omitempty" xml:"return_reason,omitempty" type:"Repeated"`
	// example:
	//
	// 882sudu23s923j9d2
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	Tips      *string `json:"tips,omitempty" xml:"tips,omitempty"`
}

func (s FlightRefundPreCalResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalResponseBodyModule) SetFlightChange(v bool) *FlightRefundPreCalResponseBodyModule {
	s.FlightChange = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModule) SetItemUnitId(v string) *FlightRefundPreCalResponseBodyModule {
	s.ItemUnitId = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModule) SetMultiRefundCalList(v []*FlightRefundPreCalResponseBodyModuleMultiRefundCalList) *FlightRefundPreCalResponseBodyModule {
	s.MultiRefundCalList = v
	return s
}

func (s *FlightRefundPreCalResponseBodyModule) SetPreRefundMoney(v int64) *FlightRefundPreCalResponseBodyModule {
	s.PreRefundMoney = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModule) SetRefundFee(v int64) *FlightRefundPreCalResponseBodyModule {
	s.RefundFee = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModule) SetReturnReason(v []*FlightRefundPreCalResponseBodyModuleReturnReason) *FlightRefundPreCalResponseBodyModule {
	s.ReturnReason = v
	return s
}

func (s *FlightRefundPreCalResponseBodyModule) SetSessionId(v string) *FlightRefundPreCalResponseBodyModule {
	s.SessionId = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModule) SetTips(v string) *FlightRefundPreCalResponseBodyModule {
	s.Tips = &v
	return s
}

type FlightRefundPreCalResponseBodyModuleMultiRefundCalList struct {
	// example:
	//
	// true
	CanApplyRefund *bool   `json:"can_apply_refund,omitempty" xml:"can_apply_refund,omitempty"`
	Name           *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// 1000
	PreRefundMoney *int64 `json:"pre_refund_money,omitempty" xml:"pre_refund_money,omitempty"`
	// example:
	//
	// 1000
	RefundFee *int64 `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	// example:
	//
	// 124
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s FlightRefundPreCalResponseBodyModuleMultiRefundCalList) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalResponseBodyModuleMultiRefundCalList) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalResponseBodyModuleMultiRefundCalList) SetCanApplyRefund(v bool) *FlightRefundPreCalResponseBodyModuleMultiRefundCalList {
	s.CanApplyRefund = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModuleMultiRefundCalList) SetName(v string) *FlightRefundPreCalResponseBodyModuleMultiRefundCalList {
	s.Name = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModuleMultiRefundCalList) SetPreRefundMoney(v int64) *FlightRefundPreCalResponseBodyModuleMultiRefundCalList {
	s.PreRefundMoney = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModuleMultiRefundCalList) SetRefundFee(v int64) *FlightRefundPreCalResponseBodyModuleMultiRefundCalList {
	s.RefundFee = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModuleMultiRefundCalList) SetUserId(v string) *FlightRefundPreCalResponseBodyModuleMultiRefundCalList {
	s.UserId = &v
	return s
}

type FlightRefundPreCalResponseBodyModuleReturnReason struct {
	ExtendDesc *string `json:"extend_desc,omitempty" xml:"extend_desc,omitempty"`
	// example:
	//
	// 0
	Person *int32 `json:"person,omitempty" xml:"person,omitempty"`
	// example:
	//
	// 0
	ReasonCode *int32  `json:"reason_code,omitempty" xml:"reason_code,omitempty"`
	ReasonShow *string `json:"reason_show,omitempty" xml:"reason_show,omitempty"`
	// example:
	//
	// 1
	ReasonType *int32 `json:"reason_type,omitempty" xml:"reason_type,omitempty"`
	// example:
	//
	// 0
	Volunteer *int32 `json:"volunteer,omitempty" xml:"volunteer,omitempty"`
}

func (s FlightRefundPreCalResponseBodyModuleReturnReason) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalResponseBodyModuleReturnReason) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalResponseBodyModuleReturnReason) SetExtendDesc(v string) *FlightRefundPreCalResponseBodyModuleReturnReason {
	s.ExtendDesc = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModuleReturnReason) SetPerson(v int32) *FlightRefundPreCalResponseBodyModuleReturnReason {
	s.Person = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModuleReturnReason) SetReasonCode(v int32) *FlightRefundPreCalResponseBodyModuleReturnReason {
	s.ReasonCode = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModuleReturnReason) SetReasonShow(v string) *FlightRefundPreCalResponseBodyModuleReturnReason {
	s.ReasonShow = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModuleReturnReason) SetReasonType(v int32) *FlightRefundPreCalResponseBodyModuleReturnReason {
	s.ReasonType = &v
	return s
}

func (s *FlightRefundPreCalResponseBodyModuleReturnReason) SetVolunteer(v int32) *FlightRefundPreCalResponseBodyModuleReturnReason {
	s.Volunteer = &v
	return s
}

type FlightRefundPreCalResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightRefundPreCalResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightRefundPreCalResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalResponse) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalResponse) SetHeaders(v map[string]*string) *FlightRefundPreCalResponse {
	s.Headers = v
	return s
}

func (s *FlightRefundPreCalResponse) SetStatusCode(v int32) *FlightRefundPreCalResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightRefundPreCalResponse) SetBody(v *FlightRefundPreCalResponseBody) *FlightRefundPreCalResponse {
	s.Body = v
	return s
}

type FlightRefundPreCalV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightRefundPreCalV2Headers) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalV2Headers) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalV2Headers) SetCommonHeaders(v map[string]*string) *FlightRefundPreCalV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *FlightRefundPreCalV2Headers) SetXAcsBtripCorpToken(v string) *FlightRefundPreCalV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightRefundPreCalV2Request struct {
	// example:
	//
	// cheshiapi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 3454043907950204159
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId                *string                                                 `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerSegmentRelations []*FlightRefundPreCalV2RequestPassengerSegmentRelations `json:"passenger_segment_relations,omitempty" xml:"passenger_segment_relations,omitempty" type:"Repeated"`
	// example:
	//
	// 2
	PreCalType *int32    `json:"pre_cal_type,omitempty" xml:"pre_cal_type,omitempty"`
	TicketNos  []*string `json:"ticket_nos,omitempty" xml:"ticket_nos,omitempty" type:"Repeated"`
	// example:
	//
	// true
	Voluntary *bool `json:"voluntary,omitempty" xml:"voluntary,omitempty"`
}

func (s FlightRefundPreCalV2Request) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalV2Request) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalV2Request) SetIsvName(v string) *FlightRefundPreCalV2Request {
	s.IsvName = &v
	return s
}

func (s *FlightRefundPreCalV2Request) SetOrderId(v string) *FlightRefundPreCalV2Request {
	s.OrderId = &v
	return s
}

func (s *FlightRefundPreCalV2Request) SetOutOrderId(v string) *FlightRefundPreCalV2Request {
	s.OutOrderId = &v
	return s
}

func (s *FlightRefundPreCalV2Request) SetPassengerSegmentRelations(v []*FlightRefundPreCalV2RequestPassengerSegmentRelations) *FlightRefundPreCalV2Request {
	s.PassengerSegmentRelations = v
	return s
}

func (s *FlightRefundPreCalV2Request) SetPreCalType(v int32) *FlightRefundPreCalV2Request {
	s.PreCalType = &v
	return s
}

func (s *FlightRefundPreCalV2Request) SetTicketNos(v []*string) *FlightRefundPreCalV2Request {
	s.TicketNos = v
	return s
}

func (s *FlightRefundPreCalV2Request) SetVoluntary(v bool) *FlightRefundPreCalV2Request {
	s.Voluntary = &v
	return s
}

type FlightRefundPreCalV2RequestPassengerSegmentRelations struct {
	// example:
	//
	// 3243028
	PassengerId   *string   `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	SegmentIdList []*string `json:"segment_id_list,omitempty" xml:"segment_id_list,omitempty" type:"Repeated"`
}

func (s FlightRefundPreCalV2RequestPassengerSegmentRelations) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalV2RequestPassengerSegmentRelations) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalV2RequestPassengerSegmentRelations) SetPassengerId(v string) *FlightRefundPreCalV2RequestPassengerSegmentRelations {
	s.PassengerId = &v
	return s
}

func (s *FlightRefundPreCalV2RequestPassengerSegmentRelations) SetSegmentIdList(v []*string) *FlightRefundPreCalV2RequestPassengerSegmentRelations {
	s.SegmentIdList = v
	return s
}

type FlightRefundPreCalV2ShrinkRequest struct {
	// example:
	//
	// cheshiapi
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 3454043907950204159
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId                      *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerSegmentRelationsShrink *string `json:"passenger_segment_relations,omitempty" xml:"passenger_segment_relations,omitempty"`
	// example:
	//
	// 2
	PreCalType      *int32  `json:"pre_cal_type,omitempty" xml:"pre_cal_type,omitempty"`
	TicketNosShrink *string `json:"ticket_nos,omitempty" xml:"ticket_nos,omitempty"`
	// example:
	//
	// true
	Voluntary *bool `json:"voluntary,omitempty" xml:"voluntary,omitempty"`
}

func (s FlightRefundPreCalV2ShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalV2ShrinkRequest) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalV2ShrinkRequest) SetIsvName(v string) *FlightRefundPreCalV2ShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *FlightRefundPreCalV2ShrinkRequest) SetOrderId(v string) *FlightRefundPreCalV2ShrinkRequest {
	s.OrderId = &v
	return s
}

func (s *FlightRefundPreCalV2ShrinkRequest) SetOutOrderId(v string) *FlightRefundPreCalV2ShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *FlightRefundPreCalV2ShrinkRequest) SetPassengerSegmentRelationsShrink(v string) *FlightRefundPreCalV2ShrinkRequest {
	s.PassengerSegmentRelationsShrink = &v
	return s
}

func (s *FlightRefundPreCalV2ShrinkRequest) SetPreCalType(v int32) *FlightRefundPreCalV2ShrinkRequest {
	s.PreCalType = &v
	return s
}

func (s *FlightRefundPreCalV2ShrinkRequest) SetTicketNosShrink(v string) *FlightRefundPreCalV2ShrinkRequest {
	s.TicketNosShrink = &v
	return s
}

func (s *FlightRefundPreCalV2ShrinkRequest) SetVoluntary(v bool) *FlightRefundPreCalV2ShrinkRequest {
	s.Voluntary = &v
	return s
}

type FlightRefundPreCalV2ResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *FlightRefundPreCalV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// 92359A00-85D8-16C4-AED0-249618DEEC17
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightRefundPreCalV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalV2ResponseBody) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalV2ResponseBody) SetCode(v string) *FlightRefundPreCalV2ResponseBody {
	s.Code = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBody) SetMessage(v string) *FlightRefundPreCalV2ResponseBody {
	s.Message = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBody) SetModule(v *FlightRefundPreCalV2ResponseBodyModule) *FlightRefundPreCalV2ResponseBody {
	s.Module = v
	return s
}

func (s *FlightRefundPreCalV2ResponseBody) SetRequestId(v string) *FlightRefundPreCalV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBody) SetSuccess(v bool) *FlightRefundPreCalV2ResponseBody {
	s.Success = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBody) SetTraceId(v string) *FlightRefundPreCalV2ResponseBody {
	s.TraceId = &v
	return s
}

type FlightRefundPreCalV2ResponseBodyModule struct {
	MultiRefundFeeDTOS []*FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS `json:"multi_refund_fee_d_t_o_s,omitempty" xml:"multi_refund_fee_d_t_o_s,omitempty" type:"Repeated"`
	// example:
	//
	// 10000
	PreRefundMoney *int64 `json:"pre_refund_money,omitempty" xml:"pre_refund_money,omitempty"`
	// example:
	//
	// 100
	RefundChargeFee        *int64                                                          `json:"refund_charge_fee,omitempty" xml:"refund_charge_fee,omitempty"`
	RefundReasonOptionDTOS []*FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS `json:"refund_reason_option_d_t_o_s,omitempty" xml:"refund_reason_option_d_t_o_s,omitempty" type:"Repeated"`
	// example:
	//
	// 100
	ServiceChargeFee *int64 `json:"service_charge_fee,omitempty" xml:"service_charge_fee,omitempty"`
}

func (s FlightRefundPreCalV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalV2ResponseBodyModule) SetMultiRefundFeeDTOS(v []*FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS) *FlightRefundPreCalV2ResponseBodyModule {
	s.MultiRefundFeeDTOS = v
	return s
}

func (s *FlightRefundPreCalV2ResponseBodyModule) SetPreRefundMoney(v int64) *FlightRefundPreCalV2ResponseBodyModule {
	s.PreRefundMoney = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBodyModule) SetRefundChargeFee(v int64) *FlightRefundPreCalV2ResponseBodyModule {
	s.RefundChargeFee = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBodyModule) SetRefundReasonOptionDTOS(v []*FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS) *FlightRefundPreCalV2ResponseBodyModule {
	s.RefundReasonOptionDTOS = v
	return s
}

func (s *FlightRefundPreCalV2ResponseBodyModule) SetServiceChargeFee(v int64) *FlightRefundPreCalV2ResponseBodyModule {
	s.ServiceChargeFee = &v
	return s
}

type FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS struct {
	// example:
	//
	// 3243028
	PassengerId   *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 10000
	PreRefundMoney *int64 `json:"pre_refund_money,omitempty" xml:"pre_refund_money,omitempty"`
	// example:
	//
	// 100
	RefundChargeFee *int64 `json:"refund_charge_fee,omitempty" xml:"refund_charge_fee,omitempty"`
}

func (s FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS) SetPassengerId(v string) *FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS {
	s.PassengerId = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS) SetPassengerName(v string) *FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS {
	s.PassengerName = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS) SetPreRefundMoney(v int64) *FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS {
	s.PreRefundMoney = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS) SetRefundChargeFee(v int64) *FlightRefundPreCalV2ResponseBodyModuleMultiRefundFeeDTOS {
	s.RefundChargeFee = &v
	return s
}

type FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS struct {
	Reason *string `json:"reason,omitempty" xml:"reason,omitempty"`
	// example:
	//
	// 2
	ReasonType *int32 `json:"reason_type,omitempty" xml:"reason_type,omitempty"`
	// example:
	//
	// true
	Volunteer *bool `json:"volunteer,omitempty" xml:"volunteer,omitempty"`
}

func (s FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS) SetReason(v string) *FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS {
	s.Reason = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS) SetReasonType(v int32) *FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS {
	s.ReasonType = &v
	return s
}

func (s *FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS) SetVolunteer(v bool) *FlightRefundPreCalV2ResponseBodyModuleRefundReasonOptionDTOS {
	s.Volunteer = &v
	return s
}

type FlightRefundPreCalV2Response struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightRefundPreCalV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightRefundPreCalV2Response) String() string {
	return tea.Prettify(s)
}

func (s FlightRefundPreCalV2Response) GoString() string {
	return s.String()
}

func (s *FlightRefundPreCalV2Response) SetHeaders(v map[string]*string) *FlightRefundPreCalV2Response {
	s.Headers = v
	return s
}

func (s *FlightRefundPreCalV2Response) SetStatusCode(v int32) *FlightRefundPreCalV2Response {
	s.StatusCode = &v
	return s
}

func (s *FlightRefundPreCalV2Response) SetBody(v *FlightRefundPreCalV2ResponseBody) *FlightRefundPreCalV2Response {
	s.Body = v
	return s
}

type FlightSearchListHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s FlightSearchListHeaders) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListHeaders) GoString() string {
	return s.String()
}

func (s *FlightSearchListHeaders) SetCommonHeaders(v map[string]*string) *FlightSearchListHeaders {
	s.CommonHeaders = v
	return s
}

func (s *FlightSearchListHeaders) SetXAcsBtripCorpToken(v string) *FlightSearchListHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type FlightSearchListRequest struct {
	// example:
	//
	// CA
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// BJS
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	ArrDate *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	// example:
	//
	// Y
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HGH
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// HGH
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2000-00-00 00:00:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// CA2323
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// false
	NeedMultiClassPrice *bool `json:"need_multi_class_price,omitempty" xml:"need_multi_class_price,omitempty"`
	// example:
	//
	// HGH
	TransferCityCode *string `json:"transfer_city_code,omitempty" xml:"transfer_city_code,omitempty"`
	// example:
	//
	// CA2323
	TransferFlightNo *string `json:"transfer_flight_no,omitempty" xml:"transfer_flight_no,omitempty"`
	// example:
	//
	// BJS
	TransferLeaveDate *string `json:"transfer_leave_date,omitempty" xml:"transfer_leave_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	TripType *string `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightSearchListRequest) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListRequest) GoString() string {
	return s.String()
}

func (s *FlightSearchListRequest) SetAirlineCode(v string) *FlightSearchListRequest {
	s.AirlineCode = &v
	return s
}

func (s *FlightSearchListRequest) SetArrCityCode(v string) *FlightSearchListRequest {
	s.ArrCityCode = &v
	return s
}

func (s *FlightSearchListRequest) SetArrCityName(v string) *FlightSearchListRequest {
	s.ArrCityName = &v
	return s
}

func (s *FlightSearchListRequest) SetArrDate(v string) *FlightSearchListRequest {
	s.ArrDate = &v
	return s
}

func (s *FlightSearchListRequest) SetCabinClass(v string) *FlightSearchListRequest {
	s.CabinClass = &v
	return s
}

func (s *FlightSearchListRequest) SetDepCityCode(v string) *FlightSearchListRequest {
	s.DepCityCode = &v
	return s
}

func (s *FlightSearchListRequest) SetDepCityName(v string) *FlightSearchListRequest {
	s.DepCityName = &v
	return s
}

func (s *FlightSearchListRequest) SetDepDate(v string) *FlightSearchListRequest {
	s.DepDate = &v
	return s
}

func (s *FlightSearchListRequest) SetFlightNo(v string) *FlightSearchListRequest {
	s.FlightNo = &v
	return s
}

func (s *FlightSearchListRequest) SetNeedMultiClassPrice(v bool) *FlightSearchListRequest {
	s.NeedMultiClassPrice = &v
	return s
}

func (s *FlightSearchListRequest) SetTransferCityCode(v string) *FlightSearchListRequest {
	s.TransferCityCode = &v
	return s
}

func (s *FlightSearchListRequest) SetTransferFlightNo(v string) *FlightSearchListRequest {
	s.TransferFlightNo = &v
	return s
}

func (s *FlightSearchListRequest) SetTransferLeaveDate(v string) *FlightSearchListRequest {
	s.TransferLeaveDate = &v
	return s
}

func (s *FlightSearchListRequest) SetTripType(v string) *FlightSearchListRequest {
	s.TripType = &v
	return s
}

type FlightSearchListResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                             `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                             `json:"message,omitempty" xml:"message,omitempty"`
	Module  *FlightSearchListResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s FlightSearchListResponseBody) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBody) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBody) SetCode(v string) *FlightSearchListResponseBody {
	s.Code = &v
	return s
}

func (s *FlightSearchListResponseBody) SetMessage(v string) *FlightSearchListResponseBody {
	s.Message = &v
	return s
}

func (s *FlightSearchListResponseBody) SetModule(v *FlightSearchListResponseBodyModule) *FlightSearchListResponseBody {
	s.Module = v
	return s
}

func (s *FlightSearchListResponseBody) SetRequestId(v string) *FlightSearchListResponseBody {
	s.RequestId = &v
	return s
}

func (s *FlightSearchListResponseBody) SetSuccess(v bool) *FlightSearchListResponseBody {
	s.Success = &v
	return s
}

func (s *FlightSearchListResponseBody) SetTraceId(v string) *FlightSearchListResponseBody {
	s.TraceId = &v
	return s
}

type FlightSearchListResponseBodyModule struct {
	FlightList []*FlightSearchListResponseBodyModuleFlightList `json:"flight_list,omitempty" xml:"flight_list,omitempty" type:"Repeated"`
	// example:
	//
	// false
	IsReplacePnr *bool `json:"is_replace_pnr,omitempty" xml:"is_replace_pnr,omitempty"`
}

func (s FlightSearchListResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModule) SetFlightList(v []*FlightSearchListResponseBodyModuleFlightList) *FlightSearchListResponseBodyModule {
	s.FlightList = v
	return s
}

func (s *FlightSearchListResponseBodyModule) SetIsReplacePnr(v bool) *FlightSearchListResponseBodyModule {
	s.IsReplacePnr = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightList struct {
	AirlineInfo    *FlightSearchListResponseBodyModuleFlightListAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *FlightSearchListResponseBodyModuleFlightListArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	ArrDate         *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	BasicCabinPrice *int32  `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 100
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// Y
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// 2
	CabinClass    *string                                                      `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinInfoList []*FlightSearchListResponseBodyModuleFlightListCabinInfoList `json:"cabin_info_list,omitempty" xml:"cabin_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// FM
	CarrierAirline *string `json:"carrier_airline,omitempty" xml:"carrier_airline,omitempty"`
	// example:
	//
	// FM9152
	CarrierNo      *string                                                     `json:"carrier_no,omitempty" xml:"carrier_no,omitempty"`
	ClassRule      *string                                                     `json:"class_rule,omitempty" xml:"class_rule,omitempty"`
	DepAirportInfo *FlightSearchListResponseBodyModuleFlightListDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 1
	Discount *int32 `json:"discount,omitempty" xml:"discount,omitempty"`
	// example:
	//
	// CA1234
	FlightNo       *string                                                       `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightRuleList []*FlightSearchListResponseBodyModuleFlightListFlightRuleList `json:"flight_rule_list,omitempty" xml:"flight_rule_list,omitempty" type:"Repeated"`
	// example:
	//
	// demo
	FlightRuleListStr *string `json:"flight_rule_list_str,omitempty" xml:"flight_rule_list_str,omitempty"`
	FlightSize        *string `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	// example:
	//
	// demo
	FlightType *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	// example:
	//
	// 1
	InvoiceType *int32 `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// false
	IsShare *bool `json:"is_share,omitempty" xml:"is_share,omitempty"`
	// example:
	//
	// false
	IsStop *bool `json:"is_stop,omitempty" xml:"is_stop,omitempty"`
	// example:
	//
	// false
	IsTransfer *bool   `json:"is_transfer,omitempty" xml:"is_transfer,omitempty"`
	MealDesc   *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	// example:
	//
	// {"key":"value"}
	Memo *string `json:"memo,omitempty" xml:"memo,omitempty"`
	// example:
	//
	// 100
	OilPrice *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	// example:
	//
	// wisdiii2ii22ii2
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// example:
	//
	// 100
	Price *int32 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 1
	ProductType     *int64  `json:"product_type,omitempty" xml:"product_type,omitempty"`
	ProductTypeDesc *string `json:"product_type_desc,omitempty" xml:"product_type_desc,omitempty"`
	// example:
	//
	// 100
	PromotionPrice *string `json:"promotion_price,omitempty" xml:"promotion_price,omitempty"`
	// example:
	//
	// 1
	RemainedSeatCount *string `json:"remained_seat_count,omitempty" xml:"remained_seat_count,omitempty"`
	// example:
	//
	// 1000_1_0
	SecretParams *string `json:"secret_params,omitempty" xml:"secret_params,omitempty"`
	// example:
	//
	// 1
	SegmentNumber *string `json:"segment_number,omitempty" xml:"segment_number,omitempty"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// HGH
	StopCity *string `json:"stop_city,omitempty" xml:"stop_city,omitempty"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 100
	TotalPrice   *string                                                   `json:"total_price,omitempty" xml:"total_price,omitempty"`
	TransferInfo *FlightSearchListResponseBodyModuleFlightListTransferInfo `json:"transfer_info,omitempty" xml:"transfer_info,omitempty" type:"Struct"`
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightList) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightList) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetAirlineInfo(v *FlightSearchListResponseBodyModuleFlightListAirlineInfo) *FlightSearchListResponseBodyModuleFlightList {
	s.AirlineInfo = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetArrAirportInfo(v *FlightSearchListResponseBodyModuleFlightListArrAirportInfo) *FlightSearchListResponseBodyModuleFlightList {
	s.ArrAirportInfo = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetArrDate(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.ArrDate = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetBasicCabinPrice(v int32) *FlightSearchListResponseBodyModuleFlightList {
	s.BasicCabinPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetBuildPrice(v int32) *FlightSearchListResponseBodyModuleFlightList {
	s.BuildPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetCabin(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.Cabin = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetCabinClass(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.CabinClass = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetCabinInfoList(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoList) *FlightSearchListResponseBodyModuleFlightList {
	s.CabinInfoList = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetCarrierAirline(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.CarrierAirline = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetCarrierNo(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.CarrierNo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetClassRule(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.ClassRule = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetDepAirportInfo(v *FlightSearchListResponseBodyModuleFlightListDepAirportInfo) *FlightSearchListResponseBodyModuleFlightList {
	s.DepAirportInfo = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetDepCityCode(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.DepCityCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetDepDate(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.DepDate = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetDiscount(v int32) *FlightSearchListResponseBodyModuleFlightList {
	s.Discount = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetFlightNo(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.FlightNo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetFlightRuleList(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleList) *FlightSearchListResponseBodyModuleFlightList {
	s.FlightRuleList = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetFlightRuleListStr(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.FlightRuleListStr = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetFlightSize(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.FlightSize = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetFlightType(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.FlightType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetInvoiceType(v int32) *FlightSearchListResponseBodyModuleFlightList {
	s.InvoiceType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetIsProtocol(v bool) *FlightSearchListResponseBodyModuleFlightList {
	s.IsProtocol = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetIsShare(v bool) *FlightSearchListResponseBodyModuleFlightList {
	s.IsShare = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetIsStop(v bool) *FlightSearchListResponseBodyModuleFlightList {
	s.IsStop = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetIsTransfer(v bool) *FlightSearchListResponseBodyModuleFlightList {
	s.IsTransfer = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetMealDesc(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.MealDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetMemo(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.Memo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetOilPrice(v int32) *FlightSearchListResponseBodyModuleFlightList {
	s.OilPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetOtaItemId(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.OtaItemId = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetPrice(v int32) *FlightSearchListResponseBodyModuleFlightList {
	s.Price = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetProductType(v int64) *FlightSearchListResponseBodyModuleFlightList {
	s.ProductType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetProductTypeDesc(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.ProductTypeDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetPromotionPrice(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.PromotionPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetRemainedSeatCount(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.RemainedSeatCount = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetSecretParams(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.SecretParams = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetSegmentNumber(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.SegmentNumber = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetStopArrTime(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.StopArrTime = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetStopCity(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.StopCity = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetStopDepTime(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.StopDepTime = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetTicketPrice(v int32) *FlightSearchListResponseBodyModuleFlightList {
	s.TicketPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetTotalPrice(v string) *FlightSearchListResponseBodyModuleFlightList {
	s.TotalPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetTransferInfo(v *FlightSearchListResponseBodyModuleFlightListTransferInfo) *FlightSearchListResponseBodyModuleFlightList {
	s.TransferInfo = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightList) SetTripType(v int32) *FlightSearchListResponseBodyModuleFlightList {
	s.TripType = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListAirlineInfo struct {
	// example:
	//
	// CA
	AirlineCode       *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName       *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	AirlineSimpleName *string `json:"airline_simple_name,omitempty" xml:"airline_simple_name,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListAirlineInfo) SetAirlineCode(v string) *FlightSearchListResponseBodyModuleFlightListAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListAirlineInfo) SetAirlineName(v string) *FlightSearchListResponseBodyModuleFlightListAirlineInfo {
	s.AirlineName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListAirlineInfo) SetAirlineSimpleName(v string) *FlightSearchListResponseBodyModuleFlightListAirlineInfo {
	s.AirlineSimpleName = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListArrAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// HGH
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListArrAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListArrAirportInfo) SetAirportCode(v string) *FlightSearchListResponseBodyModuleFlightListArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListArrAirportInfo) SetAirportName(v string) *FlightSearchListResponseBodyModuleFlightListArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListArrAirportInfo) SetCityCode(v string) *FlightSearchListResponseBodyModuleFlightListArrAirportInfo {
	s.CityCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListArrAirportInfo) SetCityName(v string) *FlightSearchListResponseBodyModuleFlightListArrAirportInfo {
	s.CityName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListArrAirportInfo) SetTerminal(v string) *FlightSearchListResponseBodyModuleFlightListArrAirportInfo {
	s.Terminal = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoList struct {
	AgentId         *int64 `json:"agent_id,omitempty" xml:"agent_id,omitempty"`
	BasicCabinPrice *int32 `json:"basic_cabin_price,omitempty" xml:"basic_cabin_price,omitempty"`
	// example:
	//
	// 100
	BuildPrice *int32 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// G
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass     *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinClassName *string `json:"cabin_class_name,omitempty" xml:"cabin_class_name,omitempty"`
	// example:
	//
	// G
	ChildCabin *string `json:"child_cabin,omitempty" xml:"child_cabin,omitempty"`
	ClassName  *string `json:"class_name,omitempty" xml:"class_name,omitempty"`
	// example:
	//
	// demo
	ClassRule *string `json:"class_rule,omitempty" xml:"class_rule,omitempty"`
	// example:
	//
	// 10
	Discount       *string                                                                    `json:"discount,omitempty" xml:"discount,omitempty"`
	FlightRuleList []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList `json:"flight_rule_list,omitempty" xml:"flight_rule_list,omitempty" type:"Repeated"`
	// example:
	//
	// demo
	FlightRuleListStr *string `json:"flight_rule_list_str,omitempty" xml:"flight_rule_list_str,omitempty"`
	// example:
	//
	// 1
	InvoiceType *int32 `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// {"key":"value"}
	Memo *string `json:"memo,omitempty" xml:"memo,omitempty"`
	// example:
	//
	// 100
	OilPrice *int32 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	// example:
	//
	// 1000_1_0
	OrderParams *string `json:"order_params,omitempty" xml:"order_params,omitempty"`
	// example:
	//
	// wisdiii2ii22ii2
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// example:
	//
	// 100
	Price *int32 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 1
	ProductType *int64 `json:"product_type,omitempty" xml:"product_type,omitempty"`
	// example:
	//
	// demo
	ProductTypeDesc *string `json:"product_type_desc,omitempty" xml:"product_type_desc,omitempty"`
	// example:
	//
	// 100
	PromotionPrice *string `json:"promotion_price,omitempty" xml:"promotion_price,omitempty"`
	// example:
	//
	// 1
	RemainedSeatCount *string `json:"remained_seat_count,omitempty" xml:"remained_seat_count,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 100
	TotalPrice *int32 `json:"total_price,omitempty" xml:"total_price,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoList) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoList) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetAgentId(v int64) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.AgentId = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetBasicCabinPrice(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.BasicCabinPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetBuildPrice(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.BuildPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetCabin(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.Cabin = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetCabinClass(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.CabinClass = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetCabinClassName(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.CabinClassName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetChildCabin(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.ChildCabin = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetClassName(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.ClassName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetClassRule(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.ClassRule = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetDiscount(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.Discount = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetFlightRuleList(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.FlightRuleList = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetFlightRuleListStr(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.FlightRuleListStr = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetInvoiceType(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.InvoiceType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetIsProtocol(v bool) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.IsProtocol = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetMemo(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.Memo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetOilPrice(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.OilPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetOrderParams(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.OrderParams = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetOtaItemId(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.OtaItemId = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetPrice(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.Price = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetProductType(v int64) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.ProductType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetProductTypeDesc(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.ProductTypeDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetPromotionPrice(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.PromotionPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetRemainedSeatCount(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.RemainedSeatCount = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetTicketPrice(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.TicketPrice = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoList) SetTotalPrice(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoList {
	s.TotalPrice = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList struct {
	// example:
	//
	// demo
	BaggageInfo    *string                                                                                `json:"baggage_info,omitempty" xml:"baggage_info,omitempty"`
	BaggageItem    *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem    `json:"baggage_item,omitempty" xml:"baggage_item,omitempty" type:"Struct"`
	ChangeRule     *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule     `json:"change_rule,omitempty" xml:"change_rule,omitempty" type:"Struct"`
	ChangeRuleItem *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem `json:"change_rule_item,omitempty" xml:"change_rule_item,omitempty" type:"Struct"`
	// example:
	//
	// {}
	Extra          *string                                                                                `json:"extra,omitempty" xml:"extra,omitempty"`
	RefundRule     *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule     `json:"refund_rule,omitempty" xml:"refund_rule,omitempty" type:"Struct"`
	RefundRuleItem *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem `json:"refund_rule_item,omitempty" xml:"refund_rule_item,omitempty" type:"Struct"`
	SignRule       *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule       `json:"sign_rule,omitempty" xml:"sign_rule,omitempty" type:"Struct"`
	TuigaiqianInfo *string                                                                                `json:"tuigaiqian_info,omitempty" xml:"tuigaiqian_info,omitempty"`
	UpgradeRule    *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule    `json:"upgrade_rule,omitempty" xml:"upgrade_rule,omitempty" type:"Struct"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetBaggageInfo(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.BaggageInfo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetBaggageItem(v *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.BaggageItem = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetChangeRule(v *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.ChangeRule = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetChangeRuleItem(v *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.ChangeRuleItem = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetExtra(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.Extra = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetRefundRule(v *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.RefundRule = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetRefundRuleItem(v *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.RefundRuleItem = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetSignRule(v *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.SignRule = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetTuigaiqianInfo(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.TuigaiqianInfo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList) SetUpgradeRule(v *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleList {
	s.UpgradeRule = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem struct {
	BaggageSubItems []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems `json:"baggage_sub_items,omitempty" xml:"baggage_sub_items,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index     *int32                                                                                  `json:"index,omitempty" xml:"index,omitempty"`
	TableHead *string                                                                                 `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Tips      *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips `json:"tips,omitempty" xml:"tips,omitempty" type:"Struct"`
	Title     *string                                                                                 `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetBaggageSubItems(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.BaggageSubItems = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetIndex(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.Index = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetTableHead(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.TableHead = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetTips(v *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.Tips = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.Title = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem) SetType(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItem {
	s.Type = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems struct {
	BaggageSubContentVisualizes []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes `json:"baggage_sub_content_visualizes,omitempty" xml:"baggage_sub_content_visualizes,omitempty" type:"Repeated"`
	ExtraContentVisualizes      []interface{}                                                                                                                   `json:"extra_content_visualizes,omitempty" xml:"extra_content_visualizes,omitempty" type:"Repeated"`
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc   *string `json:"ptc,omitempty" xml:"ptc,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) SetBaggageSubContentVisualizes(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems {
	s.BaggageSubContentVisualizes = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) SetExtraContentVisualizes(v []interface{}) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems {
	s.ExtraContentVisualizes = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) SetIsStruct(v bool) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) SetPtc(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItems {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes struct {
	BaggageDesc []*string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	BaggageSubContentType *int32                                                                                                                                   `json:"baggage_sub_content_type,omitempty" xml:"baggage_sub_content_type,omitempty"`
	Description           *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription `json:"description,omitempty" xml:"description,omitempty" type:"Struct"`
	ImageDO               *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO     `json:"image_d_o,omitempty" xml:"image_d_o,omitempty" type:"Struct"`
	// example:
	//
	// true
	IsHighlight *bool   `json:"is_highlight,omitempty" xml:"is_highlight,omitempty"`
	SubTitle    *string `json:"sub_title,omitempty" xml:"sub_title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageDesc(v []*string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageDesc = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageSubContentType(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageSubContentType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetDescription(v *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.Description = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetImageDO(v *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.ImageDO = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetIsHighlight(v bool) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.IsHighlight = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetSubTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.SubTitle = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription struct {
	Desc *string `json:"desc,omitempty" xml:"desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i4/O1CN01UynXG31pjsEtA3tMF_!!6000000005397-2-tps-36-36.png
	Icon *string `json:"icon,omitempty" xml:"icon,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN01qe7wL21gJ0SmEXXL7_!!6000000004120-2-tps-1206-768.png
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetDesc(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Desc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetIcon(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Icon = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetImage(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Image = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO struct {
	// example:
	//
	// demo
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	// example:
	//
	// 50
	Largest *string `json:"largest,omitempty" xml:"largest,omitempty"`
	// example:
	//
	// 40
	Middle *string `json:"middle,omitempty" xml:"middle,omitempty"`
	// example:
	//
	// 20
	Smallest *string `json:"smallest,omitempty" xml:"smallest,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetImage(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Image = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetLargest(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Largest = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetMiddle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Middle = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetSmallest(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Smallest = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN019zl3WZ22fNLxzx2cR_!!6000000007147-2-tps-125-45.png
	Logo     *string `json:"logo,omitempty" xml:"logo,omitempty"`
	TipsDesc *string `json:"tips_desc,omitempty" xml:"tips_desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01rJxjw61f3bXNHAmlk_!!6000000003951-2-tps-1050-675.png
	TipsImage *string `json:"tips_image,omitempty" xml:"tips_image,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) SetLogo(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips {
	s.Logo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) SetTipsDesc(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips {
	s.TipsDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips) SetTipsImage(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListBaggageItemTips {
	s.TipsImage = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule struct {
	// example:
	//
	// true
	Able *bool                                                                                    `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem struct {
	ExtraContents []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Index          *int32                                                                                                 `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                              `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                                `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                                `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetExtraContents(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetIndex(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.Index = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetRefundSubItems(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetSubTableHead(v []*string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetTableHead(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.Title = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem) SetType(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItem {
	s.Type = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems struct {
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                                 `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                                 `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) SetIsStruct(v bool) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) SetPtc(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) SetRefundSubContents(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule struct {
	// example:
	//
	// true
	Able *bool                                                                                    `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem struct {
	ExtraContents []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index          *int32                                                                                                 `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                              `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                                `json:"table_head,omitempty" xml:"table_head,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetExtraContents(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetIndex(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.Index = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetRefundSubItems(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetSubTableHead(v []*string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetTableHead(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.Title = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem) SetType(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItem {
	s.Type = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems struct {
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                                 `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                                 `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) SetIsStruct(v bool) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) SetPtc(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) SetRefundSubContents(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule struct {
	// example:
	//
	// true
	Able *bool                                                                                  `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListSignRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule struct {
	// example:
	//
	// true
	Able *bool                                                                                     `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListCabinInfoListFlightRuleListUpgradeRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListDepAirportInfo struct {
	// example:
	//
	// PEK
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// BJS
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListDepAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListDepAirportInfo) SetAirportCode(v string) *FlightSearchListResponseBodyModuleFlightListDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListDepAirportInfo) SetAirportName(v string) *FlightSearchListResponseBodyModuleFlightListDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListDepAirportInfo) SetCityCode(v string) *FlightSearchListResponseBodyModuleFlightListDepAirportInfo {
	s.CityCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListDepAirportInfo) SetCityName(v string) *FlightSearchListResponseBodyModuleFlightListDepAirportInfo {
	s.CityName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListDepAirportInfo) SetTerminal(v string) *FlightSearchListResponseBodyModuleFlightListDepAirportInfo {
	s.Terminal = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleList struct {
	// example:
	//
	// demo
	BaggageInfo    *string                                                                   `json:"baggage_info,omitempty" xml:"baggage_info,omitempty"`
	BaggageItem    *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem    `json:"baggage_item,omitempty" xml:"baggage_item,omitempty" type:"Struct"`
	ChangeRule     *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRule     `json:"change_rule,omitempty" xml:"change_rule,omitempty" type:"Struct"`
	ChangeRuleItem *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem `json:"change_rule_item,omitempty" xml:"change_rule_item,omitempty" type:"Struct"`
	// example:
	//
	// {}
	Extra          *string                                                                   `json:"extra,omitempty" xml:"extra,omitempty"`
	RefundRule     *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRule     `json:"refund_rule,omitempty" xml:"refund_rule,omitempty" type:"Struct"`
	RefundRuleItem *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem `json:"refund_rule_item,omitempty" xml:"refund_rule_item,omitempty" type:"Struct"`
	SignRule       *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRule       `json:"sign_rule,omitempty" xml:"sign_rule,omitempty" type:"Struct"`
	TuigaiqianInfo *string                                                                   `json:"tuigaiqian_info,omitempty" xml:"tuigaiqian_info,omitempty"`
	UpgradeRule    *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRule    `json:"upgrade_rule,omitempty" xml:"upgrade_rule,omitempty" type:"Struct"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleList) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleList) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleList) SetBaggageInfo(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleList {
	s.BaggageInfo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleList) SetBaggageItem(v *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem) *FlightSearchListResponseBodyModuleFlightListFlightRuleList {
	s.BaggageItem = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleList) SetChangeRule(v *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRule) *FlightSearchListResponseBodyModuleFlightListFlightRuleList {
	s.ChangeRule = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleList) SetChangeRuleItem(v *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem) *FlightSearchListResponseBodyModuleFlightListFlightRuleList {
	s.ChangeRuleItem = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleList) SetExtra(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleList {
	s.Extra = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleList) SetRefundRule(v *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRule) *FlightSearchListResponseBodyModuleFlightListFlightRuleList {
	s.RefundRule = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleList) SetRefundRuleItem(v *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem) *FlightSearchListResponseBodyModuleFlightListFlightRuleList {
	s.RefundRuleItem = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleList) SetSignRule(v *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRule) *FlightSearchListResponseBodyModuleFlightListFlightRuleList {
	s.SignRule = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleList) SetTuigaiqianInfo(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleList {
	s.TuigaiqianInfo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleList) SetUpgradeRule(v *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRule) *FlightSearchListResponseBodyModuleFlightListFlightRuleList {
	s.UpgradeRule = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem struct {
	BaggageSubItems []*FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems `json:"baggage_sub_items,omitempty" xml:"baggage_sub_items,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index     *int32                                                                     `json:"index,omitempty" xml:"index,omitempty"`
	TableHead *string                                                                    `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Tips      *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips `json:"tips,omitempty" xml:"tips,omitempty" type:"Struct"`
	Title     *string                                                                    `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem) SetBaggageSubItems(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.BaggageSubItems = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem) SetIndex(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Index = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem) SetTableHead(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.TableHead = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem) SetTips(v *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Tips = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Title = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem) SetType(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItem {
	s.Type = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems struct {
	BaggageSubContentVisualizes []*FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes `json:"baggage_sub_content_visualizes,omitempty" xml:"baggage_sub_content_visualizes,omitempty" type:"Repeated"`
	ExtraContentVisualizes      []interface{}                                                                                                      `json:"extra_content_visualizes,omitempty" xml:"extra_content_visualizes,omitempty" type:"Repeated"`
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc   *string `json:"ptc,omitempty" xml:"ptc,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetBaggageSubContentVisualizes(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.BaggageSubContentVisualizes = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetExtraContentVisualizes(v []interface{}) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.ExtraContentVisualizes = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetIsStruct(v bool) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetPtc(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItems {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes struct {
	BaggageDesc []*string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	BaggageSubContentType *int32                                                                                                                      `json:"baggage_sub_content_type,omitempty" xml:"baggage_sub_content_type,omitempty"`
	Description           *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription `json:"description,omitempty" xml:"description,omitempty" type:"Struct"`
	ImageDO               *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO     `json:"image_d_o,omitempty" xml:"image_d_o,omitempty" type:"Struct"`
	// example:
	//
	// true
	IsHighlight *bool   `json:"is_highlight,omitempty" xml:"is_highlight,omitempty"`
	SubTitle    *string `json:"sub_title,omitempty" xml:"sub_title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageDesc(v []*string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageDesc = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageSubContentType(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageSubContentType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetDescription(v *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.Description = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetImageDO(v *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.ImageDO = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetIsHighlight(v bool) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.IsHighlight = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetSubTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.SubTitle = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription struct {
	Desc *string `json:"desc,omitempty" xml:"desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i4/O1CN01UynXG31pjsEtA3tMF_!!6000000005397-2-tps-36-36.png
	Icon *string `json:"icon,omitempty" xml:"icon,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN01qe7wL21gJ0SmEXXL7_!!6000000004120-2-tps-1206-768.png
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetDesc(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Desc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetIcon(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Icon = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetImage(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Image = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO struct {
	// example:
	//
	// demo
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	// example:
	//
	// 50
	Largest *string `json:"largest,omitempty" xml:"largest,omitempty"`
	// example:
	//
	// 40
	Middle *string `json:"middle,omitempty" xml:"middle,omitempty"`
	// example:
	//
	// 20
	Smallest *string `json:"smallest,omitempty" xml:"smallest,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetImage(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Image = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetLargest(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Largest = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetMiddle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Middle = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetSmallest(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Smallest = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN019zl3WZ22fNLxzx2cR_!!6000000007147-2-tps-125-45.png
	Logo     *string `json:"logo,omitempty" xml:"logo,omitempty"`
	TipsDesc *string `json:"tips_desc,omitempty" xml:"tips_desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01rJxjw61f3bXNHAmlk_!!6000000003951-2-tps-1050-675.png
	TipsImage *string `json:"tips_image,omitempty" xml:"tips_image,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips) SetLogo(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips {
	s.Logo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips) SetTipsDesc(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips {
	s.TipsDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips) SetTipsImage(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListBaggageItemTips {
	s.TipsImage = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRule struct {
	// example:
	//
	// false
	Able *bool                                                                       `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem struct {
	ExtraContents []*FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Index          *int32                                                                                    `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                 `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                   `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                   `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetExtraContents(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetIndex(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.Index = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetRefundSubItems(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetSubTableHead(v []*string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetTableHead(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.Title = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem) SetType(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItem {
	s.Type = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	Title   *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems struct {
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                    `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                    `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetIsStruct(v bool) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetPtc(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetRefundSubContents(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRule struct {
	// example:
	//
	// false
	Able *bool                                                                       `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem struct {
	ExtraContents []*FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index          *int32                                                                                    `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                 `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                   `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                   `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetExtraContents(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetIndex(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.Index = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetRefundSubItems(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetSubTableHead(v []*string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetTableHead(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.Title = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem) SetType(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItem {
	s.Type = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems struct {
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                    `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                    `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetIsStruct(v bool) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetPtc(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetRefundSubContents(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRule struct {
	// example:
	//
	// false
	Able *bool                                                                     `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo) *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListSignRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRule struct {
	// example:
	//
	// false
	Able *bool                                                                        `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListFlightRuleListUpgradeRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfo struct {
	FlightSize *string `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	// example:
	//
	// demo
	FlightType             *string                                                                         `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	TransferAirlineInfo    *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo    `json:"transfer_airline_info,omitempty" xml:"transfer_airline_info,omitempty" type:"Struct"`
	TransferArrAirportInfo *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo `json:"transfer_arr_airport_info,omitempty" xml:"transfer_arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	TransferArrDate        *string                                                                         `json:"transfer_arr_date,omitempty" xml:"transfer_arr_date,omitempty"`
	TransferDepAirportInfo *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo `json:"transfer_dep_airport_info,omitempty" xml:"transfer_dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// yyyy-MM-dd HH:mm:ss
	TransferDepDate *string `json:"transfer_dep_date,omitempty" xml:"transfer_dep_date,omitempty"`
	// example:
	//
	// CA1234
	TransferFlightNo       *string                                                                           `json:"transfer_flight_no,omitempty" xml:"transfer_flight_no,omitempty"`
	TransferFlightRuleList []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList `json:"transfer_flight_rule_list,omitempty" xml:"transfer_flight_rule_list,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfo) SetFlightSize(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfo {
	s.FlightSize = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfo) SetFlightType(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfo {
	s.FlightType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfo) SetTransferAirlineInfo(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo) *FlightSearchListResponseBodyModuleFlightListTransferInfo {
	s.TransferAirlineInfo = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfo) SetTransferArrAirportInfo(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo) *FlightSearchListResponseBodyModuleFlightListTransferInfo {
	s.TransferArrAirportInfo = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfo) SetTransferArrDate(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfo {
	s.TransferArrDate = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfo) SetTransferDepAirportInfo(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo) *FlightSearchListResponseBodyModuleFlightListTransferInfo {
	s.TransferDepAirportInfo = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfo) SetTransferDepDate(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfo {
	s.TransferDepDate = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfo) SetTransferFlightNo(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfo {
	s.TransferFlightNo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfo) SetTransferFlightRuleList(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) *FlightSearchListResponseBodyModuleFlightListTransferInfo {
	s.TransferFlightRuleList = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo struct {
	// example:
	//
	// ZH
	AirlineCode       *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName       *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	AirlineSimpleName *string `json:"airline_simple_name,omitempty" xml:"airline_simple_name,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo) SetAirlineCode(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo) SetAirlineName(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo {
	s.AirlineName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo) SetAirlineSimpleName(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferAirlineInfo {
	s.AirlineSimpleName = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// HGH
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T4
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo) SetAirportCode(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo) SetAirportName(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo) SetCityCode(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo {
	s.CityCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo) SetCityName(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo {
	s.CityName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo) SetTerminal(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferArrAirportInfo {
	s.Terminal = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo struct {
	// example:
	//
	// PEK
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// BJS
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo) SetAirportCode(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo) SetAirportName(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo) SetCityCode(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo {
	s.CityCode = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo) SetCityName(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo {
	s.CityName = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo) SetTerminal(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferDepAirportInfo {
	s.Terminal = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList struct {
	// example:
	//
	// demo
	BaggageInfo    *string                                                                                       `json:"baggage_info,omitempty" xml:"baggage_info,omitempty"`
	BaggageItem    *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem    `json:"baggage_item,omitempty" xml:"baggage_item,omitempty" type:"Struct"`
	ChangeRule     *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRule     `json:"change_rule,omitempty" xml:"change_rule,omitempty" type:"Struct"`
	ChangeRuleItem *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem `json:"change_rule_item,omitempty" xml:"change_rule_item,omitempty" type:"Struct"`
	// example:
	//
	// {}
	Extra          *string                                                                                       `json:"extra,omitempty" xml:"extra,omitempty"`
	RefundRule     *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRule     `json:"refund_rule,omitempty" xml:"refund_rule,omitempty" type:"Struct"`
	RefundRuleItem *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem `json:"refund_rule_item,omitempty" xml:"refund_rule_item,omitempty" type:"Struct"`
	SignRule       *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRule       `json:"sign_rule,omitempty" xml:"sign_rule,omitempty" type:"Struct"`
	// example:
	//
	// demo
	TuigaiqianInfo *string                                                                                    `json:"tuigaiqian_info,omitempty" xml:"tuigaiqian_info,omitempty"`
	UpgradeRule    *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRule `json:"upgrade_rule,omitempty" xml:"upgrade_rule,omitempty" type:"Struct"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) SetBaggageInfo(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList {
	s.BaggageInfo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) SetBaggageItem(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList {
	s.BaggageItem = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) SetChangeRule(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRule) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList {
	s.ChangeRule = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) SetChangeRuleItem(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList {
	s.ChangeRuleItem = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) SetExtra(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList {
	s.Extra = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) SetRefundRule(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRule) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList {
	s.RefundRule = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) SetRefundRuleItem(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList {
	s.RefundRuleItem = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) SetSignRule(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRule) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList {
	s.SignRule = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) SetTuigaiqianInfo(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList {
	s.TuigaiqianInfo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList) SetUpgradeRule(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRule) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleList {
	s.UpgradeRule = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem struct {
	BaggageSubItems []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems `json:"baggage_sub_items,omitempty" xml:"baggage_sub_items,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index     *int32                                                                                         `json:"index,omitempty" xml:"index,omitempty"`
	TableHead *string                                                                                        `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Tips      *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips `json:"tips,omitempty" xml:"tips,omitempty" type:"Struct"`
	Title     *string                                                                                        `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem) SetBaggageSubItems(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem {
	s.BaggageSubItems = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem) SetIndex(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem {
	s.Index = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem) SetTableHead(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem {
	s.TableHead = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem) SetTips(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem {
	s.Tips = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem {
	s.Title = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem) SetType(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItem {
	s.Type = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems struct {
	BaggageSubContentVisualizes []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes `json:"baggage_sub_content_visualizes,omitempty" xml:"baggage_sub_content_visualizes,omitempty" type:"Repeated"`
	ExtraContentVisualizes      []interface{}                                                                                                                          `json:"extra_content_visualizes,omitempty" xml:"extra_content_visualizes,omitempty" type:"Repeated"`
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc *string `json:"ptc,omitempty" xml:"ptc,omitempty"`
	// example:
	//
	// 1
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems) SetBaggageSubContentVisualizes(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems {
	s.BaggageSubContentVisualizes = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems) SetExtraContentVisualizes(v []interface{}) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems {
	s.ExtraContentVisualizes = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems) SetIsStruct(v bool) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems) SetPtc(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItems {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes struct {
	BaggageDesc []*string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	BaggageSubContentType *int32                                                                                                                                          `json:"baggage_sub_content_type,omitempty" xml:"baggage_sub_content_type,omitempty"`
	Description           *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription `json:"description,omitempty" xml:"description,omitempty" type:"Struct"`
	ImageDO               *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO     `json:"image_d_o,omitempty" xml:"image_d_o,omitempty" type:"Struct"`
	// example:
	//
	// true
	IsHighlight *bool   `json:"is_highlight,omitempty" xml:"is_highlight,omitempty"`
	SubTitle    *string `json:"sub_title,omitempty" xml:"sub_title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageDesc(v []*string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageDesc = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetBaggageSubContentType(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageSubContentType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetDescription(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.Description = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetImageDO(v *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.ImageDO = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetIsHighlight(v bool) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.IsHighlight = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes) SetSubTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizes {
	s.SubTitle = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription struct {
	Desc *string `json:"desc,omitempty" xml:"desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i4/O1CN01UynXG31pjsEtA3tMF_!!6000000005397-2-tps-36-36.png
	Icon *string `json:"icon,omitempty" xml:"icon,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN01qe7wL21gJ0SmEXXL7_!!6000000004120-2-tps-1206-768.png
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetDesc(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Desc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetIcon(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Icon = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetImage(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Image = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO struct {
	// example:
	//
	// demo
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	// example:
	//
	// 50
	Largest *string `json:"largest,omitempty" xml:"largest,omitempty"`
	// example:
	//
	// 40
	Middle *string `json:"middle,omitempty" xml:"middle,omitempty"`
	// example:
	//
	// 20
	Smallest *string `json:"smallest,omitempty" xml:"smallest,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetImage(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Image = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetLargest(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Largest = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetMiddle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Middle = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO) SetSmallest(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Smallest = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN019zl3WZ22fNLxzx2cR_!!6000000007147-2-tps-125-45.png
	Logo     *string `json:"logo,omitempty" xml:"logo,omitempty"`
	TipsDesc *string `json:"tips_desc,omitempty" xml:"tips_desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01rJxjw61f3bXNHAmlk_!!6000000003951-2-tps-1050-675.png
	TipsImage *string `json:"tips_image,omitempty" xml:"tips_image,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips) SetLogo(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips {
	s.Logo = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips) SetTipsDesc(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips {
	s.TipsDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips) SetTipsImage(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListBaggageItemTips {
	s.TipsImage = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRule struct {
	// example:
	//
	// true
	Able *bool                                                                                           `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 100
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem struct {
	ExtraContents []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Index          *int32                                                                                                        `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                                     `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                                       `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                                       `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem) SetExtraContents(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemExtraContents) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem) SetIndex(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem {
	s.Index = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem) SetRefundSubItems(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem) SetSubTableHead(v []*string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem) SetTableHead(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem {
	s.Title = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem) SetType(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItem {
	s.Type = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemExtraContents struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemExtraContents) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemExtraContents) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems struct {
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                                        `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                                        `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems) SetIsStruct(v bool) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems) SetPtc(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems) SetRefundSubContents(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListChangeRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRule struct {
	// example:
	//
	// true
	Able *bool                                                                                           `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 100
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem struct {
	ExtraContents []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Index          *int32                                                                                                        `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	SubTableHead   []*string                                                                                                     `json:"sub_table_head,omitempty" xml:"sub_table_head,omitempty" type:"Repeated"`
	TableHead      *string                                                                                                       `json:"table_head,omitempty" xml:"table_head,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem) SetExtraContents(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemExtraContents) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem {
	s.ExtraContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem) SetIndex(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem {
	s.Index = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem) SetRefundSubItems(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem {
	s.RefundSubItems = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem) SetSubTableHead(v []*string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem {
	s.SubTableHead = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem) SetTableHead(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem {
	s.TableHead = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem {
	s.Title = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem) SetType(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItem {
	s.Type = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemExtraContents struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// demo
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemExtraContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemExtraContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemExtraContents) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemExtraContents {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemExtraContents) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemExtraContents {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems struct {
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// PTC
	//
	// example:
	//
	// ADT
	Ptc               *string                                                                                                                        `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                                        `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems) SetIsStruct(v bool) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems) SetPtc(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems) SetRefundSubContents(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItems {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 1
	Style *int32 `json:"style,omitempty" xml:"style,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeDesc(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetFeeRange(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents) SetStyle(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListRefundRuleItemRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRule struct {
	// example:
	//
	// true
	Able *bool                                                                                         `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListSignRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRule struct {
	// example:
	//
	// true
	Able *bool                                                                                            `json:"able,omitempty" xml:"able,omitempty"`
	Info []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo `json:"info,omitempty" xml:"info,omitempty" type:"Repeated"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRule) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRule) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRule) SetAble(v bool) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRule {
	s.Able = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRule) SetInfo(v []*FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRule {
	s.Info = v
	return s
}

type FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo struct {
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// 100
	Cost *int32 `json:"cost,omitempty" xml:"cost,omitempty"`
	// example:
	//
	// 10
	CostPercent *int32 `json:"cost_percent,omitempty" xml:"cost_percent,omitempty"`
	// example:
	//
	// 1675036500000
	TimeStamp *int32 `json:"time_stamp,omitempty" xml:"time_stamp,omitempty"`
	// example:
	//
	// demo
	TimeType *string `json:"time_type,omitempty" xml:"time_type,omitempty"`
	Title    *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo) SetContent(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo {
	s.Content = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo) SetCost(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo {
	s.Cost = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo) SetCostPercent(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo {
	s.CostPercent = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo) SetTimeStamp(v int32) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo {
	s.TimeStamp = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo) SetTimeType(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo {
	s.TimeType = &v
	return s
}

func (s *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo) SetTitle(v string) *FlightSearchListResponseBodyModuleFlightListTransferInfoTransferFlightRuleListUpgradeRuleInfo {
	s.Title = &v
	return s
}

type FlightSearchListResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *FlightSearchListResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s FlightSearchListResponse) String() string {
	return tea.Prettify(s)
}

func (s FlightSearchListResponse) GoString() string {
	return s.String()
}

func (s *FlightSearchListResponse) SetHeaders(v map[string]*string) *FlightSearchListResponse {
	s.Headers = v
	return s
}

func (s *FlightSearchListResponse) SetStatusCode(v int32) *FlightSearchListResponse {
	s.StatusCode = &v
	return s
}

func (s *FlightSearchListResponse) SetBody(v *FlightSearchListResponseBody) *FlightSearchListResponse {
	s.Body = v
	return s
}

type GroupCorpTokenHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripAccessToken *string `json:"x-acs-btrip-access-token,omitempty" xml:"x-acs-btrip-access-token,omitempty"`
}

func (s GroupCorpTokenHeaders) String() string {
	return tea.Prettify(s)
}

func (s GroupCorpTokenHeaders) GoString() string {
	return s.String()
}

func (s *GroupCorpTokenHeaders) SetCommonHeaders(v map[string]*string) *GroupCorpTokenHeaders {
	s.CommonHeaders = v
	return s
}

func (s *GroupCorpTokenHeaders) SetXAcsBtripAccessToken(v string) *GroupCorpTokenHeaders {
	s.XAcsBtripAccessToken = &v
	return s
}

type GroupCorpTokenRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// ZzljczY5dnFjNDAwVlNofiwoWX5ZWCxlcjVTKnVoZS0
	AppSecret *string `json:"app_secret,omitempty" xml:"app_secret,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// open12g9sfbmm5i07v10wDzRSK9w00
	CorpId *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// btripuyxmbg3cs286734u_mow6q
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
}

func (s GroupCorpTokenRequest) String() string {
	return tea.Prettify(s)
}

func (s GroupCorpTokenRequest) GoString() string {
	return s.String()
}

func (s *GroupCorpTokenRequest) SetAppSecret(v string) *GroupCorpTokenRequest {
	s.AppSecret = &v
	return s
}

func (s *GroupCorpTokenRequest) SetCorpId(v string) *GroupCorpTokenRequest {
	s.CorpId = &v
	return s
}

func (s *GroupCorpTokenRequest) SetSubCorpId(v string) *GroupCorpTokenRequest {
	s.SubCorpId = &v
	return s
}

type GroupCorpTokenResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                           `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                           `json:"message,omitempty" xml:"message,omitempty"`
	Module  *GroupCorpTokenResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	Success   *string `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s GroupCorpTokenResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GroupCorpTokenResponseBody) GoString() string {
	return s.String()
}

func (s *GroupCorpTokenResponseBody) SetCode(v string) *GroupCorpTokenResponseBody {
	s.Code = &v
	return s
}

func (s *GroupCorpTokenResponseBody) SetMessage(v string) *GroupCorpTokenResponseBody {
	s.Message = &v
	return s
}

func (s *GroupCorpTokenResponseBody) SetModule(v *GroupCorpTokenResponseBodyModule) *GroupCorpTokenResponseBody {
	s.Module = v
	return s
}

func (s *GroupCorpTokenResponseBody) SetRequestId(v string) *GroupCorpTokenResponseBody {
	s.RequestId = &v
	return s
}

func (s *GroupCorpTokenResponseBody) SetSuccess(v string) *GroupCorpTokenResponseBody {
	s.Success = &v
	return s
}

func (s *GroupCorpTokenResponseBody) SetTraceId(v string) *GroupCorpTokenResponseBody {
	s.TraceId = &v
	return s
}

type GroupCorpTokenResponseBodyModule struct {
	// example:
	//
	// 70000
	Expire *int64 `json:"expire,omitempty" xml:"expire,omitempty"`
	// example:
	//
	// 1652410740914
	Start *int64 `json:"start,omitempty" xml:"start,omitempty"`
	// example:
	//
	// *0*37j76df
	Token *string `json:"token,omitempty" xml:"token,omitempty"`
}

func (s GroupCorpTokenResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s GroupCorpTokenResponseBodyModule) GoString() string {
	return s.String()
}

func (s *GroupCorpTokenResponseBodyModule) SetExpire(v int64) *GroupCorpTokenResponseBodyModule {
	s.Expire = &v
	return s
}

func (s *GroupCorpTokenResponseBodyModule) SetStart(v int64) *GroupCorpTokenResponseBodyModule {
	s.Start = &v
	return s
}

func (s *GroupCorpTokenResponseBodyModule) SetToken(v string) *GroupCorpTokenResponseBodyModule {
	s.Token = &v
	return s
}

type GroupCorpTokenResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GroupCorpTokenResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GroupCorpTokenResponse) String() string {
	return tea.Prettify(s)
}

func (s GroupCorpTokenResponse) GoString() string {
	return s.String()
}

func (s *GroupCorpTokenResponse) SetHeaders(v map[string]*string) *GroupCorpTokenResponse {
	s.Headers = v
	return s
}

func (s *GroupCorpTokenResponse) SetStatusCode(v int32) *GroupCorpTokenResponse {
	s.StatusCode = &v
	return s
}

func (s *GroupCorpTokenResponse) SetBody(v *GroupCorpTokenResponseBody) *GroupCorpTokenResponse {
	s.Body = v
	return s
}

type GroupDepartSaveHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s GroupDepartSaveHeaders) String() string {
	return tea.Prettify(s)
}

func (s GroupDepartSaveHeaders) GoString() string {
	return s.String()
}

func (s *GroupDepartSaveHeaders) SetCommonHeaders(v map[string]*string) *GroupDepartSaveHeaders {
	s.CommonHeaders = v
	return s
}

func (s *GroupDepartSaveHeaders) SetXAcsBtripCorpToken(v string) *GroupDepartSaveHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type GroupDepartSaveRequest struct {
	// This parameter is required.
	DeptName   *string `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	ManagerIds *string `json:"manager_ids,omitempty" xml:"manager_ids,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 001
	OuterDeptId *string `json:"outer_dept_id,omitempty" xml:"outer_dept_id,omitempty"`
	// example:
	//
	// 002
	OuterDeptPid *string `json:"outer_dept_pid,omitempty" xml:"outer_dept_pid,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	Status        *int32    `json:"status,omitempty" xml:"status,omitempty"`
	SubCorpIdList []*string `json:"sub_corp_id_list,omitempty" xml:"sub_corp_id_list,omitempty" type:"Repeated"`
	SyncGroup     *bool     `json:"sync_group,omitempty" xml:"sync_group,omitempty"`
}

func (s GroupDepartSaveRequest) String() string {
	return tea.Prettify(s)
}

func (s GroupDepartSaveRequest) GoString() string {
	return s.String()
}

func (s *GroupDepartSaveRequest) SetDeptName(v string) *GroupDepartSaveRequest {
	s.DeptName = &v
	return s
}

func (s *GroupDepartSaveRequest) SetManagerIds(v string) *GroupDepartSaveRequest {
	s.ManagerIds = &v
	return s
}

func (s *GroupDepartSaveRequest) SetOuterDeptId(v string) *GroupDepartSaveRequest {
	s.OuterDeptId = &v
	return s
}

func (s *GroupDepartSaveRequest) SetOuterDeptPid(v string) *GroupDepartSaveRequest {
	s.OuterDeptPid = &v
	return s
}

func (s *GroupDepartSaveRequest) SetStatus(v int32) *GroupDepartSaveRequest {
	s.Status = &v
	return s
}

func (s *GroupDepartSaveRequest) SetSubCorpIdList(v []*string) *GroupDepartSaveRequest {
	s.SubCorpIdList = v
	return s
}

func (s *GroupDepartSaveRequest) SetSyncGroup(v bool) *GroupDepartSaveRequest {
	s.SyncGroup = &v
	return s
}

type GroupDepartSaveShrinkRequest struct {
	// This parameter is required.
	DeptName   *string `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	ManagerIds *string `json:"manager_ids,omitempty" xml:"manager_ids,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 001
	OuterDeptId *string `json:"outer_dept_id,omitempty" xml:"outer_dept_id,omitempty"`
	// example:
	//
	// 002
	OuterDeptPid *string `json:"outer_dept_pid,omitempty" xml:"outer_dept_pid,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	Status              *int32  `json:"status,omitempty" xml:"status,omitempty"`
	SubCorpIdListShrink *string `json:"sub_corp_id_list,omitempty" xml:"sub_corp_id_list,omitempty"`
	SyncGroup           *bool   `json:"sync_group,omitempty" xml:"sync_group,omitempty"`
}

func (s GroupDepartSaveShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s GroupDepartSaveShrinkRequest) GoString() string {
	return s.String()
}

func (s *GroupDepartSaveShrinkRequest) SetDeptName(v string) *GroupDepartSaveShrinkRequest {
	s.DeptName = &v
	return s
}

func (s *GroupDepartSaveShrinkRequest) SetManagerIds(v string) *GroupDepartSaveShrinkRequest {
	s.ManagerIds = &v
	return s
}

func (s *GroupDepartSaveShrinkRequest) SetOuterDeptId(v string) *GroupDepartSaveShrinkRequest {
	s.OuterDeptId = &v
	return s
}

func (s *GroupDepartSaveShrinkRequest) SetOuterDeptPid(v string) *GroupDepartSaveShrinkRequest {
	s.OuterDeptPid = &v
	return s
}

func (s *GroupDepartSaveShrinkRequest) SetStatus(v int32) *GroupDepartSaveShrinkRequest {
	s.Status = &v
	return s
}

func (s *GroupDepartSaveShrinkRequest) SetSubCorpIdListShrink(v string) *GroupDepartSaveShrinkRequest {
	s.SubCorpIdListShrink = &v
	return s
}

func (s *GroupDepartSaveShrinkRequest) SetSyncGroup(v bool) *GroupDepartSaveShrinkRequest {
	s.SyncGroup = &v
	return s
}

type GroupDepartSaveResponseBody struct {
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210e847f16611516748613869de4f6
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s GroupDepartSaveResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GroupDepartSaveResponseBody) GoString() string {
	return s.String()
}

func (s *GroupDepartSaveResponseBody) SetCode(v string) *GroupDepartSaveResponseBody {
	s.Code = &v
	return s
}

func (s *GroupDepartSaveResponseBody) SetMessage(v string) *GroupDepartSaveResponseBody {
	s.Message = &v
	return s
}

func (s *GroupDepartSaveResponseBody) SetRequestId(v string) *GroupDepartSaveResponseBody {
	s.RequestId = &v
	return s
}

func (s *GroupDepartSaveResponseBody) SetSuccess(v bool) *GroupDepartSaveResponseBody {
	s.Success = &v
	return s
}

func (s *GroupDepartSaveResponseBody) SetTraceId(v string) *GroupDepartSaveResponseBody {
	s.TraceId = &v
	return s
}

type GroupDepartSaveResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GroupDepartSaveResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GroupDepartSaveResponse) String() string {
	return tea.Prettify(s)
}

func (s GroupDepartSaveResponse) GoString() string {
	return s.String()
}

func (s *GroupDepartSaveResponse) SetHeaders(v map[string]*string) *GroupDepartSaveResponse {
	s.Headers = v
	return s
}

func (s *GroupDepartSaveResponse) SetStatusCode(v int32) *GroupDepartSaveResponse {
	s.StatusCode = &v
	return s
}

func (s *GroupDepartSaveResponse) SetBody(v *GroupDepartSaveResponseBody) *GroupDepartSaveResponse {
	s.Body = v
	return s
}

type GroupUserSaveHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s GroupUserSaveHeaders) String() string {
	return tea.Prettify(s)
}

func (s GroupUserSaveHeaders) GoString() string {
	return s.String()
}

func (s *GroupUserSaveHeaders) SetCommonHeaders(v map[string]*string) *GroupUserSaveHeaders {
	s.CommonHeaders = v
	return s
}

func (s *GroupUserSaveHeaders) SetXAcsBtripCorpToken(v string) *GroupUserSaveHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type GroupUserSaveRequest struct {
	BaseCityCode *string                         `json:"base_city_code,omitempty" xml:"base_city_code,omitempty"`
	Birthday     *string                         `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertList     []*GroupUserSaveRequestCertList `json:"cert_list,omitempty" xml:"cert_list,omitempty" type:"Repeated"`
	Gender       *string                         `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// 1001
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// 18000000000
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// ce/shi
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	// This parameter is required.
	SubCorpIdList []*GroupUserSaveRequestSubCorpIdList `json:"sub_corp_id_list,omitempty" xml:"sub_corp_id_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	// This parameter is required.
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s GroupUserSaveRequest) String() string {
	return tea.Prettify(s)
}

func (s GroupUserSaveRequest) GoString() string {
	return s.String()
}

func (s *GroupUserSaveRequest) SetBaseCityCode(v string) *GroupUserSaveRequest {
	s.BaseCityCode = &v
	return s
}

func (s *GroupUserSaveRequest) SetBirthday(v string) *GroupUserSaveRequest {
	s.Birthday = &v
	return s
}

func (s *GroupUserSaveRequest) SetCertList(v []*GroupUserSaveRequestCertList) *GroupUserSaveRequest {
	s.CertList = v
	return s
}

func (s *GroupUserSaveRequest) SetGender(v string) *GroupUserSaveRequest {
	s.Gender = &v
	return s
}

func (s *GroupUserSaveRequest) SetJobNo(v string) *GroupUserSaveRequest {
	s.JobNo = &v
	return s
}

func (s *GroupUserSaveRequest) SetPhone(v string) *GroupUserSaveRequest {
	s.Phone = &v
	return s
}

func (s *GroupUserSaveRequest) SetRealNameEn(v string) *GroupUserSaveRequest {
	s.RealNameEn = &v
	return s
}

func (s *GroupUserSaveRequest) SetSubCorpIdList(v []*GroupUserSaveRequestSubCorpIdList) *GroupUserSaveRequest {
	s.SubCorpIdList = v
	return s
}

func (s *GroupUserSaveRequest) SetUserId(v string) *GroupUserSaveRequest {
	s.UserId = &v
	return s
}

func (s *GroupUserSaveRequest) SetUserName(v string) *GroupUserSaveRequest {
	s.UserName = &v
	return s
}

type GroupUserSaveRequestCertList struct {
	CertExpiredTime *string `json:"cert_expired_time,omitempty" xml:"cert_expired_time,omitempty"`
	CertNation      *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	CertNo          *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	CertType        *int32  `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	Nationality     *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
}

func (s GroupUserSaveRequestCertList) String() string {
	return tea.Prettify(s)
}

func (s GroupUserSaveRequestCertList) GoString() string {
	return s.String()
}

func (s *GroupUserSaveRequestCertList) SetCertExpiredTime(v string) *GroupUserSaveRequestCertList {
	s.CertExpiredTime = &v
	return s
}

func (s *GroupUserSaveRequestCertList) SetCertNation(v string) *GroupUserSaveRequestCertList {
	s.CertNation = &v
	return s
}

func (s *GroupUserSaveRequestCertList) SetCertNo(v string) *GroupUserSaveRequestCertList {
	s.CertNo = &v
	return s
}

func (s *GroupUserSaveRequestCertList) SetCertType(v int32) *GroupUserSaveRequestCertList {
	s.CertType = &v
	return s
}

func (s *GroupUserSaveRequestCertList) SetNationality(v string) *GroupUserSaveRequestCertList {
	s.Nationality = &v
	return s
}

type GroupUserSaveRequestSubCorpIdList struct {
	DepartIds []*string `json:"depart_ids,omitempty" xml:"depart_ids,omitempty" type:"Repeated"`
	Email     *string   `json:"email,omitempty" xml:"email,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	LeaveStatus *int32 `json:"leave_status,omitempty" xml:"leave_status,omitempty"`
	// example:
	//
	// 123
	ManagerUserId *string `json:"manager_user_id,omitempty" xml:"manager_user_id,omitempty"`
	// example:
	//
	// 10
	PositionLevel *string `json:"position_level,omitempty" xml:"position_level,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// btrip123
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
}

func (s GroupUserSaveRequestSubCorpIdList) String() string {
	return tea.Prettify(s)
}

func (s GroupUserSaveRequestSubCorpIdList) GoString() string {
	return s.String()
}

func (s *GroupUserSaveRequestSubCorpIdList) SetDepartIds(v []*string) *GroupUserSaveRequestSubCorpIdList {
	s.DepartIds = v
	return s
}

func (s *GroupUserSaveRequestSubCorpIdList) SetEmail(v string) *GroupUserSaveRequestSubCorpIdList {
	s.Email = &v
	return s
}

func (s *GroupUserSaveRequestSubCorpIdList) SetLeaveStatus(v int32) *GroupUserSaveRequestSubCorpIdList {
	s.LeaveStatus = &v
	return s
}

func (s *GroupUserSaveRequestSubCorpIdList) SetManagerUserId(v string) *GroupUserSaveRequestSubCorpIdList {
	s.ManagerUserId = &v
	return s
}

func (s *GroupUserSaveRequestSubCorpIdList) SetPositionLevel(v string) *GroupUserSaveRequestSubCorpIdList {
	s.PositionLevel = &v
	return s
}

func (s *GroupUserSaveRequestSubCorpIdList) SetSubCorpId(v string) *GroupUserSaveRequestSubCorpIdList {
	s.SubCorpId = &v
	return s
}

type GroupUserSaveShrinkRequest struct {
	BaseCityCode   *string `json:"base_city_code,omitempty" xml:"base_city_code,omitempty"`
	Birthday       *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertListShrink *string `json:"cert_list,omitempty" xml:"cert_list,omitempty"`
	Gender         *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// 1001
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// 18000000000
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// ce/shi
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	// This parameter is required.
	SubCorpIdListShrink *string `json:"sub_corp_id_list,omitempty" xml:"sub_corp_id_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	// This parameter is required.
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s GroupUserSaveShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s GroupUserSaveShrinkRequest) GoString() string {
	return s.String()
}

func (s *GroupUserSaveShrinkRequest) SetBaseCityCode(v string) *GroupUserSaveShrinkRequest {
	s.BaseCityCode = &v
	return s
}

func (s *GroupUserSaveShrinkRequest) SetBirthday(v string) *GroupUserSaveShrinkRequest {
	s.Birthday = &v
	return s
}

func (s *GroupUserSaveShrinkRequest) SetCertListShrink(v string) *GroupUserSaveShrinkRequest {
	s.CertListShrink = &v
	return s
}

func (s *GroupUserSaveShrinkRequest) SetGender(v string) *GroupUserSaveShrinkRequest {
	s.Gender = &v
	return s
}

func (s *GroupUserSaveShrinkRequest) SetJobNo(v string) *GroupUserSaveShrinkRequest {
	s.JobNo = &v
	return s
}

func (s *GroupUserSaveShrinkRequest) SetPhone(v string) *GroupUserSaveShrinkRequest {
	s.Phone = &v
	return s
}

func (s *GroupUserSaveShrinkRequest) SetRealNameEn(v string) *GroupUserSaveShrinkRequest {
	s.RealNameEn = &v
	return s
}

func (s *GroupUserSaveShrinkRequest) SetSubCorpIdListShrink(v string) *GroupUserSaveShrinkRequest {
	s.SubCorpIdListShrink = &v
	return s
}

func (s *GroupUserSaveShrinkRequest) SetUserId(v string) *GroupUserSaveShrinkRequest {
	s.UserId = &v
	return s
}

func (s *GroupUserSaveShrinkRequest) SetUserName(v string) *GroupUserSaveShrinkRequest {
	s.UserName = &v
	return s
}

type GroupUserSaveResponseBody struct {
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s GroupUserSaveResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GroupUserSaveResponseBody) GoString() string {
	return s.String()
}

func (s *GroupUserSaveResponseBody) SetCode(v string) *GroupUserSaveResponseBody {
	s.Code = &v
	return s
}

func (s *GroupUserSaveResponseBody) SetMessage(v string) *GroupUserSaveResponseBody {
	s.Message = &v
	return s
}

func (s *GroupUserSaveResponseBody) SetRequestId(v string) *GroupUserSaveResponseBody {
	s.RequestId = &v
	return s
}

func (s *GroupUserSaveResponseBody) SetSuccess(v bool) *GroupUserSaveResponseBody {
	s.Success = &v
	return s
}

func (s *GroupUserSaveResponseBody) SetTraceId(v string) *GroupUserSaveResponseBody {
	s.TraceId = &v
	return s
}

type GroupUserSaveResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GroupUserSaveResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GroupUserSaveResponse) String() string {
	return tea.Prettify(s)
}

func (s GroupUserSaveResponse) GoString() string {
	return s.String()
}

func (s *GroupUserSaveResponse) SetHeaders(v map[string]*string) *GroupUserSaveResponse {
	s.Headers = v
	return s
}

func (s *GroupUserSaveResponse) SetStatusCode(v int32) *GroupUserSaveResponse {
	s.StatusCode = &v
	return s
}

func (s *GroupUserSaveResponse) SetBody(v *GroupUserSaveResponseBody) *GroupUserSaveResponse {
	s.Body = v
	return s
}

type HotelAskingPriceHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelAskingPriceHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelAskingPriceHeaders) GoString() string {
	return s.String()
}

func (s *HotelAskingPriceHeaders) SetCommonHeaders(v map[string]*string) *HotelAskingPriceHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelAskingPriceHeaders) SetXAcsBtripCorpToken(v string) *HotelAskingPriceHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelAskingPriceRequest struct {
	// example:
	//
	// 1
	AdultNum *string `json:"adult_num,omitempty" xml:"adult_num,omitempty"`
	// example:
	//
	// 1000
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-22 00:00:00
	CheckInDate *string `json:"check_in_date,omitempty" xml:"check_in_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-22 00:00:00
	CheckOutDate *string `json:"check_out_date,omitempty" xml:"check_out_date,omitempty"`
	// example:
	//
	// 330100
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 1
	Dir *int32 `json:"dir,omitempty" xml:"dir,omitempty"`
	// example:
	//
	// 1
	HotelStar *string `json:"hotel_star,omitempty" xml:"hotel_star,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// 0
	PaymentType *int32 `json:"payment_type,omitempty" xml:"payment_type,omitempty"`
	// This parameter is required.
	Shids []*int64 `json:"shids,omitempty" xml:"shids,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	SortCode *int32 `json:"sort_code,omitempty" xml:"sort_code,omitempty"`
}

func (s HotelAskingPriceRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelAskingPriceRequest) GoString() string {
	return s.String()
}

func (s *HotelAskingPriceRequest) SetAdultNum(v string) *HotelAskingPriceRequest {
	s.AdultNum = &v
	return s
}

func (s *HotelAskingPriceRequest) SetBtripUserId(v string) *HotelAskingPriceRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelAskingPriceRequest) SetCheckInDate(v string) *HotelAskingPriceRequest {
	s.CheckInDate = &v
	return s
}

func (s *HotelAskingPriceRequest) SetCheckOutDate(v string) *HotelAskingPriceRequest {
	s.CheckOutDate = &v
	return s
}

func (s *HotelAskingPriceRequest) SetCityCode(v string) *HotelAskingPriceRequest {
	s.CityCode = &v
	return s
}

func (s *HotelAskingPriceRequest) SetCityName(v string) *HotelAskingPriceRequest {
	s.CityName = &v
	return s
}

func (s *HotelAskingPriceRequest) SetDir(v int32) *HotelAskingPriceRequest {
	s.Dir = &v
	return s
}

func (s *HotelAskingPriceRequest) SetHotelStar(v string) *HotelAskingPriceRequest {
	s.HotelStar = &v
	return s
}

func (s *HotelAskingPriceRequest) SetIsProtocol(v bool) *HotelAskingPriceRequest {
	s.IsProtocol = &v
	return s
}

func (s *HotelAskingPriceRequest) SetPaymentType(v int32) *HotelAskingPriceRequest {
	s.PaymentType = &v
	return s
}

func (s *HotelAskingPriceRequest) SetShids(v []*int64) *HotelAskingPriceRequest {
	s.Shids = v
	return s
}

func (s *HotelAskingPriceRequest) SetSortCode(v int32) *HotelAskingPriceRequest {
	s.SortCode = &v
	return s
}

type HotelAskingPriceShrinkRequest struct {
	// example:
	//
	// 1
	AdultNum *string `json:"adult_num,omitempty" xml:"adult_num,omitempty"`
	// example:
	//
	// 1000
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-22 00:00:00
	CheckInDate *string `json:"check_in_date,omitempty" xml:"check_in_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-22 00:00:00
	CheckOutDate *string `json:"check_out_date,omitempty" xml:"check_out_date,omitempty"`
	// example:
	//
	// 330100
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 1
	Dir *int32 `json:"dir,omitempty" xml:"dir,omitempty"`
	// example:
	//
	// 1
	HotelStar *string `json:"hotel_star,omitempty" xml:"hotel_star,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// 0
	PaymentType *int32 `json:"payment_type,omitempty" xml:"payment_type,omitempty"`
	// This parameter is required.
	ShidsShrink *string `json:"shids,omitempty" xml:"shids,omitempty"`
	// example:
	//
	// 0
	SortCode *int32 `json:"sort_code,omitempty" xml:"sort_code,omitempty"`
}

func (s HotelAskingPriceShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelAskingPriceShrinkRequest) GoString() string {
	return s.String()
}

func (s *HotelAskingPriceShrinkRequest) SetAdultNum(v string) *HotelAskingPriceShrinkRequest {
	s.AdultNum = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetBtripUserId(v string) *HotelAskingPriceShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetCheckInDate(v string) *HotelAskingPriceShrinkRequest {
	s.CheckInDate = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetCheckOutDate(v string) *HotelAskingPriceShrinkRequest {
	s.CheckOutDate = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetCityCode(v string) *HotelAskingPriceShrinkRequest {
	s.CityCode = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetCityName(v string) *HotelAskingPriceShrinkRequest {
	s.CityName = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetDir(v int32) *HotelAskingPriceShrinkRequest {
	s.Dir = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetHotelStar(v string) *HotelAskingPriceShrinkRequest {
	s.HotelStar = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetIsProtocol(v bool) *HotelAskingPriceShrinkRequest {
	s.IsProtocol = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetPaymentType(v int32) *HotelAskingPriceShrinkRequest {
	s.PaymentType = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetShidsShrink(v string) *HotelAskingPriceShrinkRequest {
	s.ShidsShrink = &v
	return s
}

func (s *HotelAskingPriceShrinkRequest) SetSortCode(v int32) *HotelAskingPriceShrinkRequest {
	s.SortCode = &v
	return s
}

type HotelAskingPriceResponseBody struct {
	// example:
	//
	// 200
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// None
	Message *string                             `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelAskingPriceResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210bcc3a16583004579056128d33d7
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelAskingPriceResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelAskingPriceResponseBody) GoString() string {
	return s.String()
}

func (s *HotelAskingPriceResponseBody) SetCode(v string) *HotelAskingPriceResponseBody {
	s.Code = &v
	return s
}

func (s *HotelAskingPriceResponseBody) SetMessage(v string) *HotelAskingPriceResponseBody {
	s.Message = &v
	return s
}

func (s *HotelAskingPriceResponseBody) SetModule(v *HotelAskingPriceResponseBodyModule) *HotelAskingPriceResponseBody {
	s.Module = v
	return s
}

func (s *HotelAskingPriceResponseBody) SetRequestId(v string) *HotelAskingPriceResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelAskingPriceResponseBody) SetSuccess(v bool) *HotelAskingPriceResponseBody {
	s.Success = &v
	return s
}

func (s *HotelAskingPriceResponseBody) SetTraceId(v string) *HotelAskingPriceResponseBody {
	s.TraceId = &v
	return s
}

type HotelAskingPriceResponseBodyModule struct {
	HotelAskingPriceDetails []*HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails `json:"hotel_asking_price_details,omitempty" xml:"hotel_asking_price_details,omitempty" type:"Repeated"`
}

func (s HotelAskingPriceResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelAskingPriceResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelAskingPriceResponseBodyModule) SetHotelAskingPriceDetails(v []*HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails) *HotelAskingPriceResponseBodyModule {
	s.HotelAskingPriceDetails = v
	return s
}

type HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails struct {
	// example:
	//
	// 652302
	CityCode     *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	HotelAddress *string `json:"hotel_address,omitempty" xml:"hotel_address,omitempty"`
	// example:
	//
	// 55335212
	HotelCode *string `json:"hotel_code,omitempty" xml:"hotel_code,omitempty"`
	HotelName *string `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// 100
	MinPrice *float64 `json:"min_price,omitempty" xml:"min_price,omitempty"`
	// example:
	//
	// 100
	OriginalMinPrice *float64 `json:"original_min_price,omitempty" xml:"original_min_price,omitempty"`
}

func (s HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails) String() string {
	return tea.Prettify(s)
}

func (s HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails) GoString() string {
	return s.String()
}

func (s *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails) SetCityCode(v string) *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails {
	s.CityCode = &v
	return s
}

func (s *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails) SetHotelAddress(v string) *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails {
	s.HotelAddress = &v
	return s
}

func (s *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails) SetHotelCode(v string) *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails {
	s.HotelCode = &v
	return s
}

func (s *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails) SetHotelName(v string) *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails {
	s.HotelName = &v
	return s
}

func (s *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails) SetIsProtocol(v bool) *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails {
	s.IsProtocol = &v
	return s
}

func (s *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails) SetMinPrice(v float64) *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails {
	s.MinPrice = &v
	return s
}

func (s *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails) SetOriginalMinPrice(v float64) *HotelAskingPriceResponseBodyModuleHotelAskingPriceDetails {
	s.OriginalMinPrice = &v
	return s
}

type HotelAskingPriceResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelAskingPriceResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelAskingPriceResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelAskingPriceResponse) GoString() string {
	return s.String()
}

func (s *HotelAskingPriceResponse) SetHeaders(v map[string]*string) *HotelAskingPriceResponse {
	s.Headers = v
	return s
}

func (s *HotelAskingPriceResponse) SetStatusCode(v int32) *HotelAskingPriceResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelAskingPriceResponse) SetBody(v *HotelAskingPriceResponseBody) *HotelAskingPriceResponse {
	s.Body = v
	return s
}

type HotelBillSettlementQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s HotelBillSettlementQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelBillSettlementQueryHeaders) GoString() string {
	return s.String()
}

func (s *HotelBillSettlementQueryHeaders) SetCommonHeaders(v map[string]*string) *HotelBillSettlementQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelBillSettlementQueryHeaders) SetXAcsBtripSoCorpToken(v string) *HotelBillSettlementQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type HotelBillSettlementQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 50
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-02
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
}

func (s HotelBillSettlementQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelBillSettlementQueryRequest) GoString() string {
	return s.String()
}

func (s *HotelBillSettlementQueryRequest) SetPageNo(v int32) *HotelBillSettlementQueryRequest {
	s.PageNo = &v
	return s
}

func (s *HotelBillSettlementQueryRequest) SetPageSize(v int32) *HotelBillSettlementQueryRequest {
	s.PageSize = &v
	return s
}

func (s *HotelBillSettlementQueryRequest) SetPeriodEnd(v string) *HotelBillSettlementQueryRequest {
	s.PeriodEnd = &v
	return s
}

func (s *HotelBillSettlementQueryRequest) SetPeriodStart(v string) *HotelBillSettlementQueryRequest {
	s.PeriodStart = &v
	return s
}

type HotelBillSettlementQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                     `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                     `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelBillSettlementQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelBillSettlementQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelBillSettlementQueryResponseBody) GoString() string {
	return s.String()
}

func (s *HotelBillSettlementQueryResponseBody) SetCode(v string) *HotelBillSettlementQueryResponseBody {
	s.Code = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBody) SetMessage(v string) *HotelBillSettlementQueryResponseBody {
	s.Message = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBody) SetModule(v *HotelBillSettlementQueryResponseBodyModule) *HotelBillSettlementQueryResponseBody {
	s.Module = v
	return s
}

func (s *HotelBillSettlementQueryResponseBody) SetRequestId(v string) *HotelBillSettlementQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBody) SetSuccess(v bool) *HotelBillSettlementQueryResponseBody {
	s.Success = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBody) SetTraceId(v string) *HotelBillSettlementQueryResponseBody {
	s.TraceId = &v
	return s
}

type HotelBillSettlementQueryResponseBodyModule struct {
	// example:
	//
	// 2
	Category *int32                                                `json:"category,omitempty" xml:"category,omitempty"`
	CorpId   *string                                               `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	DataList []*HotelBillSettlementQueryResponseBodyModuleDataList `json:"data_list,omitempty" xml:"data_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2021-10-14
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// example:
	//
	// 2021-10-13
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
	// example:
	//
	// 1402
	TotalNum *int64 `json:"total_num,omitempty" xml:"total_num,omitempty"`
}

func (s HotelBillSettlementQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelBillSettlementQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelBillSettlementQueryResponseBodyModule) SetCategory(v int32) *HotelBillSettlementQueryResponseBodyModule {
	s.Category = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModule) SetCorpId(v string) *HotelBillSettlementQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModule) SetDataList(v []*HotelBillSettlementQueryResponseBodyModuleDataList) *HotelBillSettlementQueryResponseBodyModule {
	s.DataList = v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModule) SetPeriodEnd(v string) *HotelBillSettlementQueryResponseBodyModule {
	s.PeriodEnd = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModule) SetPeriodStart(v string) *HotelBillSettlementQueryResponseBodyModule {
	s.PeriodStart = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModule) SetTotalNum(v int64) *HotelBillSettlementQueryResponseBodyModule {
	s.TotalNum = &v
	return s
}

type HotelBillSettlementQueryResponseBodyModuleDataList struct {
	AgreementPromotionFee *float64 `json:"agreement_promotion_fee,omitempty" xml:"agreement_promotion_fee,omitempty"`
	// example:
	//
	// 234432432
	AlipayTradeNo    *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	ApplyArrCityCode *string `json:"apply_arr_city_code,omitempty" xml:"apply_arr_city_code,omitempty"`
	ApplyArrCityName *string `json:"apply_arr_city_name,omitempty" xml:"apply_arr_city_name,omitempty"`
	ApplyDepCityCode *string `json:"apply_dep_city_code,omitempty" xml:"apply_dep_city_code,omitempty"`
	ApplyDepCityName *string `json:"apply_dep_city_name,omitempty" xml:"apply_dep_city_name,omitempty"`
	// 审批扩展自定义字段
	ApplyExtendField *string `json:"apply_extend_field,omitempty" xml:"apply_extend_field,omitempty"`
	// example:
	//
	// 103208648
	ApplyId       *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	AverageNights *string `json:"average_nights,omitempty" xml:"average_nights,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	BillRecordTime *string `json:"bill_record_time,omitempty" xml:"bill_record_time,omitempty"`
	BookReason     *string `json:"book_reason,omitempty" xml:"book_reason,omitempty"`
	// example:
	//
	// 2021-10-12 23:58:48
	BookTime           *string `json:"book_time,omitempty" xml:"book_time,omitempty"`
	BookerId           *string `json:"booker_id,omitempty" xml:"booker_id,omitempty"`
	BookerJobNo        *string `json:"booker_job_no,omitempty" xml:"booker_job_no,omitempty"`
	BookerName         *string `json:"booker_name,omitempty" xml:"booker_name,omitempty"`
	BrandGroup         *string `json:"brand_group,omitempty" xml:"brand_group,omitempty"`
	BrandName          *string `json:"brand_name,omitempty" xml:"brand_name,omitempty"`
	BusinessTripResult *string `json:"business_trip_result,omitempty" xml:"business_trip_result,omitempty"`
	// example:
	//
	// 1
	CapitalDirection  *string `json:"capital_direction,omitempty" xml:"capital_direction,omitempty"`
	CascadeDepartment *string `json:"cascade_department,omitempty" xml:"cascade_department,omitempty"`
	// example:
	//
	// 2021-10-14 00:00:00
	CheckInDate *string `json:"check_in_date,omitempty" xml:"check_in_date,omitempty"`
	// example:
	//
	// 2021-10-16 00:00:00
	CheckoutDate *string `json:"checkout_date,omitempty" xml:"checkout_date,omitempty"`
	City         *string `json:"city,omitempty" xml:"city,omitempty"`
	// example:
	//
	// 110100
	CityCode       *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityCounty     *string `json:"city_county,omitempty" xml:"city_county,omitempty"`
	CityCountyCode *string `json:"city_county_code,omitempty" xml:"city_county_code,omitempty"`
	// example:
	//
	// 12
	CorpRefundFee *float64 `json:"corp_refund_fee,omitempty" xml:"corp_refund_fee,omitempty"`
	// example:
	//
	// 1000
	CorpTotalFee *float64 `json:"corp_total_fee,omitempty" xml:"corp_total_fee,omitempty"`
	CostCenter   *string  `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	// example:
	//
	// 8b7f3cd-24324-097
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	Department       *string `json:"department,omitempty" xml:"department,omitempty"`
	DepartmentId     *string `json:"department_id,omitempty" xml:"department_id,omitempty"`
	ExceedReason     *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	// example:
	//
	// 20101
	FeeType *string `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	// example:
	//
	// 0
	Fees  *float64 `json:"fees,omitempty" xml:"fees,omitempty"`
	Fines *float64 `json:"fines,omitempty" xml:"fines,omitempty"`
	// example:
	//
	// 12
	FuPointFee *float64 `json:"fu_point_fee,omitempty" xml:"fu_point_fee,omitempty"`
	HotelName  *string  `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	// example:
	//
	// 5038018
	Index                *string  `json:"index,omitempty" xml:"index,omitempty"`
	InsOrderId           *string  `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	InsuranceNumber      *string  `json:"insurance_number,omitempty" xml:"insurance_number,omitempty"`
	InsurancePrice       *float64 `json:"insurance_price,omitempty" xml:"insurance_price,omitempty"`
	InsuranceProductName *string  `json:"insurance_product_name,omitempty" xml:"insurance_product_name,omitempty"`
	InvoiceTitle         *string  `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	IsEarlyDeparture     *string  `json:"is_early_departure,omitempty" xml:"is_early_departure,omitempty"`
	IsNegotiation        *string  `json:"is_negotiation,omitempty" xml:"is_negotiation,omitempty"`
	IsShareStr           *string  `json:"is_share_str,omitempty" xml:"is_share_str,omitempty"`
	// example:
	//
	// 2
	Nights *int32 `json:"nights,omitempty" xml:"nights,omitempty"`
	// example:
	//
	// 223423423432422
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1088.96
	OrderPrice *float64 `json:"order_price,omitempty" xml:"order_price,omitempty"`
	OrderType  *string  `json:"order_type,omitempty" xml:"order_type,omitempty"`
	// example:
	//
	// 4234324
	OverApplyId           *string `json:"over_apply_id,omitempty" xml:"over_apply_id,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 34
	PersonRefundFee *float64 `json:"person_refund_fee,omitempty" xml:"person_refund_fee,omitempty"`
	// example:
	//
	// 88.96
	PersonSettlePrice *float64 `json:"person_settle_price,omitempty" xml:"person_settle_price,omitempty"`
	// example:
	//
	// 5038018
	PrimaryId *int64 `json:"primary_id,omitempty" xml:"primary_id,omitempty"`
	// example:
	//
	// 223423432
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	// example:
	//
	// 113.02
	PromotionFee *float64 `json:"promotion_fee,omitempty" xml:"promotion_fee,omitempty"`
	Remark       *string  `json:"remark,omitempty" xml:"remark,omitempty"`
	ReserveRule  *string  `json:"reserve_rule,omitempty" xml:"reserve_rule,omitempty"`
	RoomNo       *string  `json:"room_no,omitempty" xml:"room_no,omitempty"`
	// example:
	//
	// 1
	RoomNumber *int32 `json:"room_number,omitempty" xml:"room_number,omitempty"`
	// example:
	//
	// 1201.98
	RoomPrice *float64 `json:"room_price,omitempty" xml:"room_price,omitempty"`
	RoomType  *string  `json:"room_type,omitempty" xml:"room_type,omitempty"`
	// example:
	//
	// 0
	ServiceFee *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 1000
	SettlementFee *float64 `json:"settlement_fee,omitempty" xml:"settlement_fee,omitempty"`
	// example:
	//
	// 5.68
	SettlementGrantFee *float64 `json:"settlement_grant_fee,omitempty" xml:"settlement_grant_fee,omitempty"`
	// example:
	//
	// 2021-10-12 23:58:56
	SettlementTime *string `json:"settlement_time,omitempty" xml:"settlement_time,omitempty"`
	// example:
	//
	// 4
	SettlementType *string `json:"settlement_type,omitempty" xml:"settlement_type,omitempty"`
	Star           *string `json:"star,omitempty" xml:"star,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// 税率
	//
	// example:
	//
	// 6%
	TaxRate          *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	ThirdItineraryId *string `json:"third_itinerary_id,omitempty" xml:"third_itinerary_id,omitempty"`
	// example:
	//
	// 2
	TotalNights *int32  `json:"total_nights,omitempty" xml:"total_nights,omitempty"`
	TravelerId  *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	// example:
	//
	// 326246
	TravelerJobNo          *string `json:"traveler_job_no,omitempty" xml:"traveler_job_no,omitempty"`
	TravelerMemberTypeName *string `json:"traveler_member_type_name,omitempty" xml:"traveler_member_type_name,omitempty"`
	TravelerName           *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
	// example:
	//
	// 11
	VoucherType *int32 `json:"voucher_type,omitempty" xml:"voucher_type,omitempty"`
}

func (s HotelBillSettlementQueryResponseBodyModuleDataList) String() string {
	return tea.Prettify(s)
}

func (s HotelBillSettlementQueryResponseBodyModuleDataList) GoString() string {
	return s.String()
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetAgreementPromotionFee(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.AgreementPromotionFee = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetAlipayTradeNo(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.AlipayTradeNo = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityCode(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityCode = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityName(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityName = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityCode(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityCode = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityName(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityName = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetApplyExtendField(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyExtendField = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetApplyId(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetAverageNights(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.AverageNights = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetBillRecordTime(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.BillRecordTime = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetBookReason(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.BookReason = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetBookTime(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.BookTime = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetBookerId(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.BookerId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetBookerJobNo(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.BookerJobNo = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetBookerName(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.BookerName = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetBrandGroup(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.BrandGroup = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetBrandName(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.BrandName = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetBusinessTripResult(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.BusinessTripResult = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCapitalDirection(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CapitalDirection = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCascadeDepartment(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CascadeDepartment = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCheckInDate(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CheckInDate = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCheckoutDate(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CheckoutDate = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCity(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.City = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCityCode(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CityCode = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCityCounty(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CityCounty = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCityCountyCode(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CityCountyCode = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCorpRefundFee(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CorpRefundFee = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCorpTotalFee(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CorpTotalFee = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCostCenter(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenter = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetCostCenterNumber(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenterNumber = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetDepartment(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.Department = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetDepartmentId(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.DepartmentId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetExceedReason(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ExceedReason = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetFeeType(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.FeeType = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetFees(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.Fees = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetFines(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.Fines = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetFuPointFee(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.FuPointFee = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetHotelName(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.HotelName = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetIndex(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.Index = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetInsOrderId(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.InsOrderId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetInsuranceNumber(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.InsuranceNumber = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetInsurancePrice(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.InsurancePrice = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetInsuranceProductName(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.InsuranceProductName = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetInvoiceTitle(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.InvoiceTitle = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetIsEarlyDeparture(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.IsEarlyDeparture = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetIsNegotiation(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.IsNegotiation = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetIsShareStr(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.IsShareStr = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetNights(v int32) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.Nights = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetOrderId(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.OrderId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetOrderPrice(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.OrderPrice = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetOrderType(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.OrderType = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetOverApplyId(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.OverApplyId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentId(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentName(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetPersonRefundFee(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.PersonRefundFee = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetPersonSettlePrice(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.PersonSettlePrice = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetPrimaryId(v int64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.PrimaryId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetProjectCode(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectCode = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetProjectName(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectName = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetPromotionFee(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.PromotionFee = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetRemark(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.Remark = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetReserveRule(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ReserveRule = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetRoomNo(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.RoomNo = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetRoomNumber(v int32) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.RoomNumber = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetRoomPrice(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.RoomPrice = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetRoomType(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.RoomType = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetServiceFee(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ServiceFee = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetSettlementFee(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementFee = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetSettlementGrantFee(v float64) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementGrantFee = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetSettlementTime(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementTime = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetSettlementType(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementType = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetStar(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.Star = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetStatus(v int32) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.Status = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetTaxRate(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.TaxRate = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetThirdItineraryId(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.ThirdItineraryId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetTotalNights(v int32) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.TotalNights = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetTravelerId(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerId = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetTravelerJobNo(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerJobNo = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetTravelerMemberTypeName(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerMemberTypeName = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetTravelerName(v string) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerName = &v
	return s
}

func (s *HotelBillSettlementQueryResponseBodyModuleDataList) SetVoucherType(v int32) *HotelBillSettlementQueryResponseBodyModuleDataList {
	s.VoucherType = &v
	return s
}

type HotelBillSettlementQueryResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelBillSettlementQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelBillSettlementQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelBillSettlementQueryResponse) GoString() string {
	return s.String()
}

func (s *HotelBillSettlementQueryResponse) SetHeaders(v map[string]*string) *HotelBillSettlementQueryResponse {
	s.Headers = v
	return s
}

func (s *HotelBillSettlementQueryResponse) SetStatusCode(v int32) *HotelBillSettlementQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelBillSettlementQueryResponse) SetBody(v *HotelBillSettlementQueryResponseBody) *HotelBillSettlementQueryResponse {
	s.Body = v
	return s
}

type HotelCityCodeListHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelCityCodeListHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelCityCodeListHeaders) GoString() string {
	return s.String()
}

func (s *HotelCityCodeListHeaders) SetCommonHeaders(v map[string]*string) *HotelCityCodeListHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelCityCodeListHeaders) SetXAcsBtripCorpToken(v string) *HotelCityCodeListHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelCityCodeListRequest struct {
	// example:
	//
	// 1
	CountryCode *string `json:"country_code,omitempty" xml:"country_code,omitempty"`
}

func (s HotelCityCodeListRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelCityCodeListRequest) GoString() string {
	return s.String()
}

func (s *HotelCityCodeListRequest) SetCountryCode(v string) *HotelCityCodeListRequest {
	s.CountryCode = &v
	return s
}

type HotelCityCodeListResponseBody struct {
	// example:
	//
	// 200
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// response is empty.
	Message *string                                `json:"message,omitempty" xml:"message,omitempty"`
	Module  []*HotelCityCodeListResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelCityCodeListResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelCityCodeListResponseBody) GoString() string {
	return s.String()
}

func (s *HotelCityCodeListResponseBody) SetCode(v string) *HotelCityCodeListResponseBody {
	s.Code = &v
	return s
}

func (s *HotelCityCodeListResponseBody) SetMessage(v string) *HotelCityCodeListResponseBody {
	s.Message = &v
	return s
}

func (s *HotelCityCodeListResponseBody) SetModule(v []*HotelCityCodeListResponseBodyModule) *HotelCityCodeListResponseBody {
	s.Module = v
	return s
}

func (s *HotelCityCodeListResponseBody) SetRequestId(v string) *HotelCityCodeListResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelCityCodeListResponseBody) SetSuccess(v bool) *HotelCityCodeListResponseBody {
	s.Success = &v
	return s
}

func (s *HotelCityCodeListResponseBody) SetTraceId(v string) *HotelCityCodeListResponseBody {
	s.TraceId = &v
	return s
}

type HotelCityCodeListResponseBodyModule struct {
	Citys []*HotelCityCodeListResponseBodyModuleCitys `json:"citys,omitempty" xml:"citys,omitempty" type:"Repeated"`
	// example:
	//
	// 108800
	ProviceCode  *string `json:"provice_code,omitempty" xml:"provice_code,omitempty"`
	ProvinceName *string `json:"province_name,omitempty" xml:"province_name,omitempty"`
}

func (s HotelCityCodeListResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelCityCodeListResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelCityCodeListResponseBodyModule) SetCitys(v []*HotelCityCodeListResponseBodyModuleCitys) *HotelCityCodeListResponseBodyModule {
	s.Citys = v
	return s
}

func (s *HotelCityCodeListResponseBodyModule) SetProviceCode(v string) *HotelCityCodeListResponseBodyModule {
	s.ProviceCode = &v
	return s
}

func (s *HotelCityCodeListResponseBodyModule) SetProvinceName(v string) *HotelCityCodeListResponseBodyModule {
	s.ProvinceName = &v
	return s
}

type HotelCityCodeListResponseBodyModuleCitys struct {
	// example:
	//
	// 445222
	CityCode  *string                                              `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName  *string                                              `json:"city_name,omitempty" xml:"city_name,omitempty"`
	Districts []*HotelCityCodeListResponseBodyModuleCitysDistricts `json:"districts,omitempty" xml:"districts,omitempty" type:"Repeated"`
}

func (s HotelCityCodeListResponseBodyModuleCitys) String() string {
	return tea.Prettify(s)
}

func (s HotelCityCodeListResponseBodyModuleCitys) GoString() string {
	return s.String()
}

func (s *HotelCityCodeListResponseBodyModuleCitys) SetCityCode(v string) *HotelCityCodeListResponseBodyModuleCitys {
	s.CityCode = &v
	return s
}

func (s *HotelCityCodeListResponseBodyModuleCitys) SetCityName(v string) *HotelCityCodeListResponseBodyModuleCitys {
	s.CityName = &v
	return s
}

func (s *HotelCityCodeListResponseBodyModuleCitys) SetDistricts(v []*HotelCityCodeListResponseBodyModuleCitysDistricts) *HotelCityCodeListResponseBodyModuleCitys {
	s.Districts = v
	return s
}

type HotelCityCodeListResponseBodyModuleCitysDistricts struct {
	// example:
	//
	// 330000
	DistrictCode *string `json:"district_code,omitempty" xml:"district_code,omitempty"`
	DistrictName *string `json:"district_name,omitempty" xml:"district_name,omitempty"`
}

func (s HotelCityCodeListResponseBodyModuleCitysDistricts) String() string {
	return tea.Prettify(s)
}

func (s HotelCityCodeListResponseBodyModuleCitysDistricts) GoString() string {
	return s.String()
}

func (s *HotelCityCodeListResponseBodyModuleCitysDistricts) SetDistrictCode(v string) *HotelCityCodeListResponseBodyModuleCitysDistricts {
	s.DistrictCode = &v
	return s
}

func (s *HotelCityCodeListResponseBodyModuleCitysDistricts) SetDistrictName(v string) *HotelCityCodeListResponseBodyModuleCitysDistricts {
	s.DistrictName = &v
	return s
}

type HotelCityCodeListResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelCityCodeListResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelCityCodeListResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelCityCodeListResponse) GoString() string {
	return s.String()
}

func (s *HotelCityCodeListResponse) SetHeaders(v map[string]*string) *HotelCityCodeListResponse {
	s.Headers = v
	return s
}

func (s *HotelCityCodeListResponse) SetStatusCode(v int32) *HotelCityCodeListResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelCityCodeListResponse) SetBody(v *HotelCityCodeListResponseBody) *HotelCityCodeListResponse {
	s.Body = v
	return s
}

type HotelExceedApplyQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s HotelExceedApplyQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelExceedApplyQueryHeaders) GoString() string {
	return s.String()
}

func (s *HotelExceedApplyQueryHeaders) SetCommonHeaders(v map[string]*string) *HotelExceedApplyQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelExceedApplyQueryHeaders) SetXAcsBtripSoCorpToken(v string) *HotelExceedApplyQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type HotelExceedApplyQueryRequest struct {
	// example:
	//
	// 1287123
	ApplyId            *int64  `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	BusinessInstanceId *string `json:"business_instance_id,omitempty" xml:"business_instance_id,omitempty"`
}

func (s HotelExceedApplyQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelExceedApplyQueryRequest) GoString() string {
	return s.String()
}

func (s *HotelExceedApplyQueryRequest) SetApplyId(v int64) *HotelExceedApplyQueryRequest {
	s.ApplyId = &v
	return s
}

func (s *HotelExceedApplyQueryRequest) SetBusinessInstanceId(v string) *HotelExceedApplyQueryRequest {
	s.BusinessInstanceId = &v
	return s
}

type HotelExceedApplyQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                  `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                  `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelExceedApplyQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// E03779E6-71C2-5082-ABE3-6315B8247EE8
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelExceedApplyQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelExceedApplyQueryResponseBody) GoString() string {
	return s.String()
}

func (s *HotelExceedApplyQueryResponseBody) SetCode(v string) *HotelExceedApplyQueryResponseBody {
	s.Code = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBody) SetMessage(v string) *HotelExceedApplyQueryResponseBody {
	s.Message = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBody) SetModule(v *HotelExceedApplyQueryResponseBodyModule) *HotelExceedApplyQueryResponseBody {
	s.Module = v
	return s
}

func (s *HotelExceedApplyQueryResponseBody) SetRequestId(v string) *HotelExceedApplyQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBody) SetSuccess(v bool) *HotelExceedApplyQueryResponseBody {
	s.Success = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBody) SetTraceId(v string) *HotelExceedApplyQueryResponseBody {
	s.TraceId = &v
	return s
}

type HotelExceedApplyQueryResponseBodyModule struct {
	// example:
	//
	// 27238197
	ApplyId              *int64                                                       `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ApplyIntentionInfoDo *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo `json:"apply_intention_info_do,omitempty" xml:"apply_intention_info_do,omitempty" type:"Struct"`
	BtripCause           *string                                                      `json:"btrip_cause,omitempty" xml:"btrip_cause,omitempty"`
	// example:
	//
	// corp1
	CorpId       *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	ExceedReason *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	// example:
	//
	// 16
	ExceedType *int32 `json:"exceed_type,omitempty" xml:"exceed_type,omitempty"`
	// example:
	//
	// 10000
	OriginStandard *string `json:"origin_standard,omitempty" xml:"origin_standard,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 2022-02-11T16:25Z
	SubmitTime *string `json:"submit_time,omitempty" xml:"submit_time,omitempty"`
	// example:
	//
	// 0001A1100000007EX08O
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// test_corp
	ThirdpartCorpId *string `json:"thirdpart_corp_id,omitempty" xml:"thirdpart_corp_id,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s HotelExceedApplyQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelExceedApplyQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetApplyId(v int64) *HotelExceedApplyQueryResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetApplyIntentionInfoDo(v *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) *HotelExceedApplyQueryResponseBodyModule {
	s.ApplyIntentionInfoDo = v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetBtripCause(v string) *HotelExceedApplyQueryResponseBodyModule {
	s.BtripCause = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetCorpId(v string) *HotelExceedApplyQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetExceedReason(v string) *HotelExceedApplyQueryResponseBodyModule {
	s.ExceedReason = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetExceedType(v int32) *HotelExceedApplyQueryResponseBodyModule {
	s.ExceedType = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetOriginStandard(v string) *HotelExceedApplyQueryResponseBodyModule {
	s.OriginStandard = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetStatus(v int32) *HotelExceedApplyQueryResponseBodyModule {
	s.Status = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetSubmitTime(v string) *HotelExceedApplyQueryResponseBodyModule {
	s.SubmitTime = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetThirdpartApplyId(v string) *HotelExceedApplyQueryResponseBodyModule {
	s.ThirdpartApplyId = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetThirdpartCorpId(v string) *HotelExceedApplyQueryResponseBodyModule {
	s.ThirdpartCorpId = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetUserId(v string) *HotelExceedApplyQueryResponseBodyModule {
	s.UserId = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModule) SetUserName(v string) *HotelExceedApplyQueryResponseBodyModule {
	s.UserName = &v
	return s
}

type HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo struct {
	// example:
	//
	// 2021-07-08
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// example:
	//
	// 2021-07-08
	CheckOut *string `json:"check_out,omitempty" xml:"check_out,omitempty"`
	// example:
	//
	// SHA
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 10000
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// true
	Together *bool `json:"together,omitempty" xml:"together,omitempty"`
	// example:
	//
	// 16
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) String() string {
	return tea.Prettify(s)
}

func (s HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) GoString() string {
	return s.String()
}

func (s *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetCheckIn(v string) *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.CheckIn = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetCheckOut(v string) *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.CheckOut = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetCityCode(v string) *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.CityCode = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetCityName(v string) *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.CityName = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetPrice(v int64) *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.Price = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetTogether(v bool) *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.Together = &v
	return s
}

func (s *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo) SetType(v int32) *HotelExceedApplyQueryResponseBodyModuleApplyIntentionInfoDo {
	s.Type = &v
	return s
}

type HotelExceedApplyQueryResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelExceedApplyQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelExceedApplyQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelExceedApplyQueryResponse) GoString() string {
	return s.String()
}

func (s *HotelExceedApplyQueryResponse) SetHeaders(v map[string]*string) *HotelExceedApplyQueryResponse {
	s.Headers = v
	return s
}

func (s *HotelExceedApplyQueryResponse) SetStatusCode(v int32) *HotelExceedApplyQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelExceedApplyQueryResponse) SetBody(v *HotelExceedApplyQueryResponseBody) *HotelExceedApplyQueryResponse {
	s.Body = v
	return s
}

type HotelGoodsQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelGoodsQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryHeaders) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryHeaders) SetCommonHeaders(v map[string]*string) *HotelGoodsQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelGoodsQueryHeaders) SetXAcsBtripCorpToken(v string) *HotelGoodsQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelGoodsQueryRequest struct {
	// example:
	//
	// 1
	AdultNum *string `json:"adult_num,omitempty" xml:"adult_num,omitempty"`
	// example:
	//
	// false
	AgreementPrice *bool `json:"agreement_price,omitempty" xml:"agreement_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-27
	BeginDate *string `json:"begin_date,omitempty" xml:"begin_date,omitempty"`
	// example:
	//
	// false
	BreakfastIncluded *bool `json:"breakfast_included,omitempty" xml:"breakfast_included,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// example:
	//
	// 330100
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-28
	EndDate *string `json:"end_date,omitempty" xml:"end_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 182873
	HotelId *string `json:"hotel_id,omitempty" xml:"hotel_id,omitempty"`
	// example:
	//
	// 0
	PayOverType *int32 `json:"pay_over_type,omitempty" xml:"pay_over_type,omitempty"`
	// example:
	//
	// 0
	PaymentType *int32 `json:"payment_type,omitempty" xml:"payment_type,omitempty"`
	// example:
	//
	// false
	SpecialInvoice *bool `json:"special_invoice,omitempty" xml:"special_invoice,omitempty"`
	// example:
	//
	// 0
	SuperMan *int32 `json:"super_man,omitempty" xml:"super_man,omitempty"`
}

func (s HotelGoodsQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryRequest) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryRequest) SetAdultNum(v string) *HotelGoodsQueryRequest {
	s.AdultNum = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetAgreementPrice(v bool) *HotelGoodsQueryRequest {
	s.AgreementPrice = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetBeginDate(v string) *HotelGoodsQueryRequest {
	s.BeginDate = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetBreakfastIncluded(v bool) *HotelGoodsQueryRequest {
	s.BreakfastIncluded = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetBtripUserId(v string) *HotelGoodsQueryRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetCityCode(v string) *HotelGoodsQueryRequest {
	s.CityCode = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetEndDate(v string) *HotelGoodsQueryRequest {
	s.EndDate = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetHotelId(v string) *HotelGoodsQueryRequest {
	s.HotelId = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetPayOverType(v int32) *HotelGoodsQueryRequest {
	s.PayOverType = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetPaymentType(v int32) *HotelGoodsQueryRequest {
	s.PaymentType = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetSpecialInvoice(v bool) *HotelGoodsQueryRequest {
	s.SpecialInvoice = &v
	return s
}

func (s *HotelGoodsQueryRequest) SetSuperMan(v int32) *HotelGoodsQueryRequest {
	s.SuperMan = &v
	return s
}

type HotelGoodsQueryResponseBody struct {
	// example:
	//
	// 200
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// None
	Message *string                            `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelGoodsQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210e847f16611516748613869de4f6
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelGoodsQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBody) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBody) SetCode(v string) *HotelGoodsQueryResponseBody {
	s.Code = &v
	return s
}

func (s *HotelGoodsQueryResponseBody) SetMessage(v string) *HotelGoodsQueryResponseBody {
	s.Message = &v
	return s
}

func (s *HotelGoodsQueryResponseBody) SetModule(v *HotelGoodsQueryResponseBodyModule) *HotelGoodsQueryResponseBody {
	s.Module = v
	return s
}

func (s *HotelGoodsQueryResponseBody) SetRequestId(v string) *HotelGoodsQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelGoodsQueryResponseBody) SetSuccess(v bool) *HotelGoodsQueryResponseBody {
	s.Success = &v
	return s
}

func (s *HotelGoodsQueryResponseBody) SetTraceId(v string) *HotelGoodsQueryResponseBody {
	s.TraceId = &v
	return s
}

type HotelGoodsQueryResponseBodyModule struct {
	Address             *string            `json:"address,omitempty" xml:"address,omitempty"`
	BookingInstructions map[string]*string `json:"booking_instructions,omitempty" xml:"booking_instructions,omitempty"`
	// example:
	//
	// true
	CanForeigner *bool `json:"can_foreigner,omitempty" xml:"can_foreigner,omitempty"`
	// example:
	//
	// 2022-05-15
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// example:
	//
	// 2022-05-15
	CheckOut             *string   `json:"check_out,omitempty" xml:"check_out,omitempty"`
	Descriptions         []*string `json:"descriptions,omitempty" xml:"descriptions,omitempty" type:"Repeated"`
	DinamicBannerPicUrls []*string `json:"dinamic_banner_pic_urls,omitempty" xml:"dinamic_banner_pic_urls,omitempty" type:"Repeated"`
	// example:
	//
	// 17:00
	EarlyArrivalTime *string `json:"early_arrival_time,omitempty" xml:"early_arrival_time,omitempty"`
	// example:
	//
	// 29382
	HotelId   *int64  `json:"hotel_id,omitempty" xml:"hotel_id,omitempty"`
	HotelName *string `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	// example:
	//
	// 12:00
	LateArrivalTime *string                                   `json:"late_arrival_time,omitempty" xml:"late_arrival_time,omitempty"`
	Rooms           []*HotelGoodsQueryResponseBodyModuleRooms `json:"rooms,omitempty" xml:"rooms,omitempty" type:"Repeated"`
	// example:
	//
	// demo
	SearchId *string `json:"search_id,omitempty" xml:"search_id,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModule) SetAddress(v string) *HotelGoodsQueryResponseBodyModule {
	s.Address = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetBookingInstructions(v map[string]*string) *HotelGoodsQueryResponseBodyModule {
	s.BookingInstructions = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetCanForeigner(v bool) *HotelGoodsQueryResponseBodyModule {
	s.CanForeigner = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetCheckIn(v string) *HotelGoodsQueryResponseBodyModule {
	s.CheckIn = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetCheckOut(v string) *HotelGoodsQueryResponseBodyModule {
	s.CheckOut = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetDescriptions(v []*string) *HotelGoodsQueryResponseBodyModule {
	s.Descriptions = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetDinamicBannerPicUrls(v []*string) *HotelGoodsQueryResponseBodyModule {
	s.DinamicBannerPicUrls = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetEarlyArrivalTime(v string) *HotelGoodsQueryResponseBodyModule {
	s.EarlyArrivalTime = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetHotelId(v int64) *HotelGoodsQueryResponseBodyModule {
	s.HotelId = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetHotelName(v string) *HotelGoodsQueryResponseBodyModule {
	s.HotelName = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetLateArrivalTime(v string) *HotelGoodsQueryResponseBodyModule {
	s.LateArrivalTime = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetRooms(v []*HotelGoodsQueryResponseBodyModuleRooms) *HotelGoodsQueryResponseBodyModule {
	s.Rooms = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModule) SetSearchId(v string) *HotelGoodsQueryResponseBodyModule {
	s.SearchId = &v
	return s
}

type HotelGoodsQueryResponseBodyModuleRooms struct {
	// example:
	//
	// 27
	Area          *string `json:"area,omitempty" xml:"area,omitempty"`
	BedTypeString *string `json:"bed_type_string,omitempty" xml:"bed_type_string,omitempty"`
	// example:
	//
	// true
	ExtraBed *bool   `json:"extra_bed,omitempty" xml:"extra_bed,omitempty"`
	Facility *string `json:"facility,omitempty" xml:"facility,omitempty"`
	// example:
	//
	// 1,2,3,4,5,6
	Floor *string `json:"floor,omitempty" xml:"floor,omitempty"`
	// example:
	//
	// 1
	MaxOccupancy *int32  `json:"max_occupancy,omitempty" xml:"max_occupancy,omitempty"`
	Name         *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// 0
	NetworkService *string                                        `json:"network_service,omitempty" xml:"network_service,omitempty"`
	Pics           *string                                        `json:"pics,omitempty" xml:"pics,omitempty"`
	Rates          []*HotelGoodsQueryResponseBodyModuleRoomsRates `json:"rates,omitempty" xml:"rates,omitempty" type:"Repeated"`
	// example:
	//
	// demo
	RoomDasc     *string                                              `json:"room_dasc,omitempty" xml:"room_dasc,omitempty"`
	RoomFacility []*string                                            `json:"room_facility,omitempty" xml:"room_facility,omitempty" type:"Repeated"`
	RoomService  []*HotelGoodsQueryResponseBodyModuleRoomsRoomService `json:"room_service,omitempty" xml:"room_service,omitempty" type:"Repeated"`
	// example:
	//
	// 100929
	Srid *int64 `json:"srid,omitempty" xml:"srid,omitempty"`
	// example:
	//
	// 1
	Status     *int32  `json:"status,omitempty" xml:"status,omitempty"`
	WindowType *string `json:"window_type,omitempty" xml:"window_type,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModuleRooms) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModuleRooms) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetArea(v string) *HotelGoodsQueryResponseBodyModuleRooms {
	s.Area = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetBedTypeString(v string) *HotelGoodsQueryResponseBodyModuleRooms {
	s.BedTypeString = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetExtraBed(v bool) *HotelGoodsQueryResponseBodyModuleRooms {
	s.ExtraBed = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetFacility(v string) *HotelGoodsQueryResponseBodyModuleRooms {
	s.Facility = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetFloor(v string) *HotelGoodsQueryResponseBodyModuleRooms {
	s.Floor = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetMaxOccupancy(v int32) *HotelGoodsQueryResponseBodyModuleRooms {
	s.MaxOccupancy = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetName(v string) *HotelGoodsQueryResponseBodyModuleRooms {
	s.Name = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetNetworkService(v string) *HotelGoodsQueryResponseBodyModuleRooms {
	s.NetworkService = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetPics(v string) *HotelGoodsQueryResponseBodyModuleRooms {
	s.Pics = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetRates(v []*HotelGoodsQueryResponseBodyModuleRoomsRates) *HotelGoodsQueryResponseBodyModuleRooms {
	s.Rates = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetRoomDasc(v string) *HotelGoodsQueryResponseBodyModuleRooms {
	s.RoomDasc = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetRoomFacility(v []*string) *HotelGoodsQueryResponseBodyModuleRooms {
	s.RoomFacility = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetRoomService(v []*HotelGoodsQueryResponseBodyModuleRoomsRoomService) *HotelGoodsQueryResponseBodyModuleRooms {
	s.RoomService = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetSrid(v int64) *HotelGoodsQueryResponseBodyModuleRooms {
	s.Srid = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetStatus(v int32) *HotelGoodsQueryResponseBodyModuleRooms {
	s.Status = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRooms) SetWindowType(v string) *HotelGoodsQueryResponseBodyModuleRooms {
	s.WindowType = &v
	return s
}

type HotelGoodsQueryResponseBodyModuleRoomsRates struct {
	BedDesc              *string                                                            `json:"bed_desc,omitempty" xml:"bed_desc,omitempty"`
	BedType              *string                                                            `json:"bed_type,omitempty" xml:"bed_type,omitempty"`
	Breakfast            *string                                                            `json:"breakfast,omitempty" xml:"breakfast,omitempty"`
	BtripCancelRule      *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule        `json:"btrip_cancel_rule,omitempty" xml:"btrip_cancel_rule,omitempty" type:"Struct"`
	BtripHotelCancelDesc []*HotelGoodsQueryResponseBodyModuleRoomsRatesBtripHotelCancelDesc `json:"btrip_hotel_cancel_desc,omitempty" xml:"btrip_hotel_cancel_desc,omitempty" type:"Repeated"`
	// example:
	//
	// true
	CanSmoking       *bool   `json:"can_smoking,omitempty" xml:"can_smoking,omitempty"`
	CancelPolicyDesc *string `json:"cancel_policy_desc,omitempty" xml:"cancel_policy_desc,omitempty"`
	// example:
	//
	// 1
	CancelPolicyType *int32 `json:"cancel_policy_type,omitempty" xml:"cancel_policy_type,omitempty"`
	// example:
	//
	// 0
	CompanyAassist *string `json:"company_aassist,omitempty" xml:"company_aassist,omitempty"`
	// example:
	//
	// 0
	ConfirmType *int32 `json:"confirm_type,omitempty" xml:"confirm_type,omitempty"`
	// example:
	//
	// cny
	CurrencyCode *string `json:"currency_code,omitempty" xml:"currency_code,omitempty"`
	// example:
	//
	// demo
	DailyPriceFormatYuan *string `json:"daily_price_format_yuan,omitempty" xml:"daily_price_format_yuan,omitempty"`
	// example:
	//
	// 400
	DailyPriceView *string                                                  `json:"daily_price_view,omitempty" xml:"daily_price_view,omitempty"`
	DiscountDesc   *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc `json:"discount_desc,omitempty" xml:"discount_desc,omitempty" type:"Struct"`
	// example:
	//
	// demo
	EndTimeDaily            *string                                                               `json:"end_time_daily,omitempty" xml:"end_time_daily,omitempty"`
	HotelDetailRatePriceDTO []*HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO `json:"hotel_detail_rate_price_d_t_o,omitempty" xml:"hotel_detail_rate_price_d_t_o,omitempty" type:"Repeated"`
	// example:
	//
	// true
	InstantConfirm *bool `json:"instant_confirm,omitempty" xml:"instant_confirm,omitempty"`
	// example:
	//
	// 100
	InventoryPrice *string `json:"inventory_price,omitempty" xml:"inventory_price,omitempty"`
	// example:
	//
	// true
	IsBusinessPay4Goods *bool  `json:"is_business_pay4_goods,omitempty" xml:"is_business_pay4_goods,omitempty"`
	IsGuarantee         *int32 `json:"is_guarantee,omitempty" xml:"is_guarantee,omitempty"`
	// example:
	//
	// true
	IsNeedEmail *bool `json:"is_need_email,omitempty" xml:"is_need_email,omitempty"`
	// example:
	//
	// 612673015638
	ItemId *int64 `json:"item_id,omitempty" xml:"item_id,omitempty"`
	// example:
	//
	// demo
	LastCancelTime *string `json:"last_cancel_time,omitempty" xml:"last_cancel_time,omitempty"`
	// example:
	//
	// 2
	MaxOccupancy *int32 `json:"max_occupancy,omitempty" xml:"max_occupancy,omitempty"`
	// example:
	//
	// 2
	MinAdvHours *int32 `json:"min_adv_hours,omitempty" xml:"min_adv_hours,omitempty"`
	// example:
	//
	// 3
	MinDays *int32 `json:"min_days,omitempty" xml:"min_days,omitempty"`
	// example:
	//
	// 1
	Nod *int32 `json:"nod,omitempty" xml:"nod,omitempty"`
	// example:
	//
	// 2
	Nop *int32 `json:"nop,omitempty" xml:"nop,omitempty"`
	// example:
	//
	// 0
	OrderShipTime *int32 `json:"order_ship_time,omitempty" xml:"order_ship_time,omitempty"`
	// example:
	//
	// 1
	PaymentType *int32 `json:"payment_type,omitempty" xml:"payment_type,omitempty"`
	// example:
	//
	// 0
	PriceType *int32 `json:"price_type,omitempty" xml:"price_type,omitempty"`
	// example:
	//
	// demo
	PromotionInfo *string `json:"promotion_info,omitempty" xml:"promotion_info,omitempty"`
	// example:
	//
	// 4509447432148
	RateId       *int64  `json:"rate_id,omitempty" xml:"rate_id,omitempty"`
	RatePlanName *string `json:"rate_plan_name,omitempty" xml:"rate_plan_name,omitempty"`
	// example:
	//
	// 4509447432148
	RpId *int64 `json:"rp_id,omitempty" xml:"rp_id,omitempty"`
	// example:
	//
	// 4011822148
	SellerId *int64 `json:"seller_id,omitempty" xml:"seller_id,omitempty"`
	// example:
	//
	// demo
	StartTimeDaily *string `json:"start_time_daily,omitempty" xml:"start_time_daily,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 2321
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
	// example:
	//
	// demo
	SupplierName *string `json:"supplier_name,omitempty" xml:"supplier_name,omitempty"`
	// example:
	//
	// true
	SupportSpecialInvoice *bool `json:"support_special_invoice,omitempty" xml:"support_special_invoice,omitempty"`
	// example:
	//
	// 40000
	UnroundingDailyPriceFormatYuan *string `json:"unrounding_daily_price_format_yuan,omitempty" xml:"unrounding_daily_price_format_yuan,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRates) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRates) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetBedDesc(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.BedDesc = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetBedType(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.BedType = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetBreakfast(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.Breakfast = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetBtripCancelRule(v *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.BtripCancelRule = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetBtripHotelCancelDesc(v []*HotelGoodsQueryResponseBodyModuleRoomsRatesBtripHotelCancelDesc) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.BtripHotelCancelDesc = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetCanSmoking(v bool) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.CanSmoking = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetCancelPolicyDesc(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.CancelPolicyDesc = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetCancelPolicyType(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.CancelPolicyType = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetCompanyAassist(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.CompanyAassist = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetConfirmType(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.ConfirmType = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetCurrencyCode(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.CurrencyCode = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetDailyPriceFormatYuan(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.DailyPriceFormatYuan = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetDailyPriceView(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.DailyPriceView = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetDiscountDesc(v *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.DiscountDesc = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetEndTimeDaily(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.EndTimeDaily = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetHotelDetailRatePriceDTO(v []*HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.HotelDetailRatePriceDTO = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetInstantConfirm(v bool) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.InstantConfirm = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetInventoryPrice(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.InventoryPrice = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetIsBusinessPay4Goods(v bool) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.IsBusinessPay4Goods = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetIsGuarantee(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.IsGuarantee = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetIsNeedEmail(v bool) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.IsNeedEmail = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetItemId(v int64) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.ItemId = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetLastCancelTime(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.LastCancelTime = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetMaxOccupancy(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.MaxOccupancy = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetMinAdvHours(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.MinAdvHours = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetMinDays(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.MinDays = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetNod(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.Nod = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetNop(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.Nop = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetOrderShipTime(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.OrderShipTime = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetPaymentType(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.PaymentType = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetPriceType(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.PriceType = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetPromotionInfo(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.PromotionInfo = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetRateId(v int64) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.RateId = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetRatePlanName(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.RatePlanName = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetRpId(v int64) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.RpId = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetSellerId(v int64) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.SellerId = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetStartTimeDaily(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.StartTimeDaily = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetStatus(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.Status = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetSupplierCode(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.SupplierCode = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetSupplierName(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.SupplierName = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetSupportSpecialInvoice(v bool) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.SupportSpecialInvoice = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRates) SetUnroundingDailyPriceFormatYuan(v string) *HotelGoodsQueryResponseBodyModuleRoomsRates {
	s.UnroundingDailyPriceFormatYuan = &v
	return s
}

type HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule struct {
	BtripHotelCancelPolicyDTO *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTO `json:"btrip_hotel_cancel_policy_d_t_o,omitempty" xml:"btrip_hotel_cancel_policy_d_t_o,omitempty" type:"Struct"`
	CancelPolicyTitle         *string                                                                              `json:"cancel_policy_title,omitempty" xml:"cancel_policy_title,omitempty"`
	// example:
	//
	// 2023-02-27
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule) SetBtripHotelCancelPolicyDTO(v *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTO) *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule {
	s.BtripHotelCancelPolicyDTO = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule) SetCancelPolicyTitle(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule {
	s.CancelPolicyTitle = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule) SetCheckIn(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRule {
	s.CheckIn = &v
	return s
}

type HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTO struct {
	BtripHotelCancelPolicyInfoDTOList []*HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList `json:"btrip_hotel_cancel_policy_info_d_t_o_list,omitempty" xml:"btrip_hotel_cancel_policy_info_d_t_o_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	CancelPolicyType *int32 `json:"cancel_policy_type,omitempty" xml:"cancel_policy_type,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTO) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTO) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTO) SetBtripHotelCancelPolicyInfoDTOList(v []*HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTO {
	s.BtripHotelCancelPolicyInfoDTOList = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTO) SetCancelPolicyType(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTO {
	s.CancelPolicyType = &v
	return s
}

type HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList struct {
	// example:
	//
	// 1
	Hour *int64 `json:"hour,omitempty" xml:"hour,omitempty"`
	// example:
	//
	// 20
	Value *int64 `json:"value,omitempty" xml:"value,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) SetHour(v int64) *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList {
	s.Hour = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) SetValue(v int64) *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripCancelRuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList {
	s.Value = &v
	return s
}

type HotelGoodsQueryResponseBodyModuleRoomsRatesBtripHotelCancelDesc struct {
	Desc  *string `json:"desc,omitempty" xml:"desc,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesBtripHotelCancelDesc) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesBtripHotelCancelDesc) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripHotelCancelDesc) SetDesc(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripHotelCancelDesc {
	s.Desc = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripHotelCancelDesc) SetTitle(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesBtripHotelCancelDesc {
	s.Title = &v
	return s
}

type HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc struct {
	CashReduceTotal *string                                                                  `json:"cash_reduce_total,omitempty" xml:"cash_reduce_total,omitempty"`
	DinamicLabel    *string                                                                  `json:"dinamic_label,omitempty" xml:"dinamic_label,omitempty"`
	DiscountDetail  []*HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDescDiscountDetail `json:"discount_detail,omitempty" xml:"discount_detail,omitempty" type:"Repeated"`
	SubTitle        *string                                                                  `json:"sub_title,omitempty" xml:"sub_title,omitempty"`
	Title           *string                                                                  `json:"title,omitempty" xml:"title,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc) SetCashReduceTotal(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc {
	s.CashReduceTotal = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc) SetDinamicLabel(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc {
	s.DinamicLabel = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc) SetDiscountDetail(v []*HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDescDiscountDetail) *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc {
	s.DiscountDetail = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc) SetSubTitle(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc {
	s.SubTitle = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc) SetTitle(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDesc {
	s.Title = &v
	return s
}

type HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDescDiscountDetail struct {
	LabelName []*string `json:"label_name,omitempty" xml:"label_name,omitempty" type:"Repeated"`
	MoneyDesc *string   `json:"money_desc,omitempty" xml:"money_desc,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDescDiscountDetail) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDescDiscountDetail) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDescDiscountDetail) SetLabelName(v []*string) *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDescDiscountDetail {
	s.LabelName = v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDescDiscountDetail) SetMoneyDesc(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesDiscountDescDiscountDetail {
	s.MoneyDesc = &v
	return s
}

type HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO struct {
	// example:
	//
	// 100
	BeforeDiscountPrice *int64 `json:"before_discount_price,omitempty" xml:"before_discount_price,omitempty"`
	// example:
	//
	// demo
	Breakfast *string `json:"breakfast,omitempty" xml:"breakfast,omitempty"`
	// example:
	//
	// 1000
	DiscountPrice *int64 `json:"discount_price,omitempty" xml:"discount_price,omitempty"`
	// example:
	//
	// 100
	LastDiscountsPrice         *int64 `json:"last_discounts_price,omitempty" xml:"last_discounts_price,omitempty"`
	LastDiscountsRoundingPrice *int64 `json:"last_discounts_rounding_price,omitempty" xml:"last_discounts_rounding_price,omitempty"`
	// example:
	//
	// 1
	LastNum *int32 `json:"last_num,omitempty" xml:"last_num,omitempty"`
	// example:
	//
	// 2023-03-25
	RateStartTime *string `json:"rate_start_time,omitempty" xml:"rate_start_time,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) SetBeforeDiscountPrice(v int64) *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO {
	s.BeforeDiscountPrice = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) SetBreakfast(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO {
	s.Breakfast = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) SetDiscountPrice(v int64) *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO {
	s.DiscountPrice = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) SetLastDiscountsPrice(v int64) *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO {
	s.LastDiscountsPrice = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) SetLastDiscountsRoundingPrice(v int64) *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO {
	s.LastDiscountsRoundingPrice = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) SetLastNum(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO {
	s.LastNum = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) SetRateStartTime(v string) *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO {
	s.RateStartTime = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO) SetStatus(v int32) *HotelGoodsQueryResponseBodyModuleRoomsRatesHotelDetailRatePriceDTO {
	s.Status = &v
	return s
}

type HotelGoodsQueryResponseBodyModuleRoomsRoomService struct {
	// example:
	//
	// #000000
	Color *string `json:"color,omitempty" xml:"color,omitempty"`
	Desc  *string `json:"desc,omitempty" xml:"desc,omitempty"`
	// example:
	//
	// #4AA900
	HighlightColorColor *string `json:"highlight_color_color,omitempty" xml:"highlight_color_color,omitempty"`
	Title               *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRoomService) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponseBodyModuleRoomsRoomService) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRoomService) SetColor(v string) *HotelGoodsQueryResponseBodyModuleRoomsRoomService {
	s.Color = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRoomService) SetDesc(v string) *HotelGoodsQueryResponseBodyModuleRoomsRoomService {
	s.Desc = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRoomService) SetHighlightColorColor(v string) *HotelGoodsQueryResponseBodyModuleRoomsRoomService {
	s.HighlightColorColor = &v
	return s
}

func (s *HotelGoodsQueryResponseBodyModuleRoomsRoomService) SetTitle(v string) *HotelGoodsQueryResponseBodyModuleRoomsRoomService {
	s.Title = &v
	return s
}

type HotelGoodsQueryResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelGoodsQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelGoodsQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelGoodsQueryResponse) GoString() string {
	return s.String()
}

func (s *HotelGoodsQueryResponse) SetHeaders(v map[string]*string) *HotelGoodsQueryResponse {
	s.Headers = v
	return s
}

func (s *HotelGoodsQueryResponse) SetStatusCode(v int32) *HotelGoodsQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelGoodsQueryResponse) SetBody(v *HotelGoodsQueryResponseBody) *HotelGoodsQueryResponse {
	s.Body = v
	return s
}

type HotelIndexInfoHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelIndexInfoHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelIndexInfoHeaders) GoString() string {
	return s.String()
}

func (s *HotelIndexInfoHeaders) SetCommonHeaders(v map[string]*string) *HotelIndexInfoHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelIndexInfoHeaders) SetXAcsBtripCorpToken(v string) *HotelIndexInfoHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelIndexInfoRequest struct {
	// example:
	//
	// 330000
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	// example:
	//
	// 0
	HotelStatus *int32 `json:"hotel_status,omitempty" xml:"hotel_status,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 1038882
	PageToken *string `json:"page_token,omitempty" xml:"page_token,omitempty"`
}

func (s HotelIndexInfoRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelIndexInfoRequest) GoString() string {
	return s.String()
}

func (s *HotelIndexInfoRequest) SetCityCode(v string) *HotelIndexInfoRequest {
	s.CityCode = &v
	return s
}

func (s *HotelIndexInfoRequest) SetHotelStatus(v int32) *HotelIndexInfoRequest {
	s.HotelStatus = &v
	return s
}

func (s *HotelIndexInfoRequest) SetPageSize(v int32) *HotelIndexInfoRequest {
	s.PageSize = &v
	return s
}

func (s *HotelIndexInfoRequest) SetPageToken(v string) *HotelIndexInfoRequest {
	s.PageToken = &v
	return s
}

type HotelIndexInfoResponseBody struct {
	// example:
	//
	// 200
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// operation success.
	Message *string                           `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelIndexInfoResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelIndexInfoResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelIndexInfoResponseBody) GoString() string {
	return s.String()
}

func (s *HotelIndexInfoResponseBody) SetCode(v string) *HotelIndexInfoResponseBody {
	s.Code = &v
	return s
}

func (s *HotelIndexInfoResponseBody) SetMessage(v string) *HotelIndexInfoResponseBody {
	s.Message = &v
	return s
}

func (s *HotelIndexInfoResponseBody) SetModule(v *HotelIndexInfoResponseBodyModule) *HotelIndexInfoResponseBody {
	s.Module = v
	return s
}

func (s *HotelIndexInfoResponseBody) SetRequestId(v string) *HotelIndexInfoResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelIndexInfoResponseBody) SetSuccess(v bool) *HotelIndexInfoResponseBody {
	s.Success = &v
	return s
}

func (s *HotelIndexInfoResponseBody) SetTraceId(v string) *HotelIndexInfoResponseBody {
	s.TraceId = &v
	return s
}

type HotelIndexInfoResponseBodyModule struct {
	Items []*HotelIndexInfoResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 182873
	PageToken *string `json:"page_token,omitempty" xml:"page_token,omitempty"`
}

func (s HotelIndexInfoResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelIndexInfoResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelIndexInfoResponseBodyModule) SetItems(v []*HotelIndexInfoResponseBodyModuleItems) *HotelIndexInfoResponseBodyModule {
	s.Items = v
	return s
}

func (s *HotelIndexInfoResponseBodyModule) SetPageSize(v int32) *HotelIndexInfoResponseBodyModule {
	s.PageSize = &v
	return s
}

func (s *HotelIndexInfoResponseBodyModule) SetPageToken(v string) *HotelIndexInfoResponseBodyModule {
	s.PageToken = &v
	return s
}

type HotelIndexInfoResponseBodyModuleItems struct {
	// example:
	//
	// 182873
	HotelId *string `json:"hotel_id,omitempty" xml:"hotel_id,omitempty"`
	// example:
	//
	// 0
	HotelStatus *string `json:"hotel_status,omitempty" xml:"hotel_status,omitempty"`
}

func (s HotelIndexInfoResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s HotelIndexInfoResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *HotelIndexInfoResponseBodyModuleItems) SetHotelId(v string) *HotelIndexInfoResponseBodyModuleItems {
	s.HotelId = &v
	return s
}

func (s *HotelIndexInfoResponseBodyModuleItems) SetHotelStatus(v string) *HotelIndexInfoResponseBodyModuleItems {
	s.HotelStatus = &v
	return s
}

type HotelIndexInfoResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelIndexInfoResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelIndexInfoResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelIndexInfoResponse) GoString() string {
	return s.String()
}

func (s *HotelIndexInfoResponse) SetHeaders(v map[string]*string) *HotelIndexInfoResponse {
	s.Headers = v
	return s
}

func (s *HotelIndexInfoResponse) SetStatusCode(v int32) *HotelIndexInfoResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelIndexInfoResponse) SetBody(v *HotelIndexInfoResponseBody) *HotelIndexInfoResponse {
	s.Body = v
	return s
}

type HotelOrderCancelHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelOrderCancelHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCancelHeaders) GoString() string {
	return s.String()
}

func (s *HotelOrderCancelHeaders) SetCommonHeaders(v map[string]*string) *HotelOrderCancelHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelOrderCancelHeaders) SetXAcsBtripCorpToken(v string) *HotelOrderCancelHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelOrderCancelRequest struct {
	BtripOrderId *string `json:"btrip_order_id,omitempty" xml:"btrip_order_id,omitempty"`
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
}

func (s HotelOrderCancelRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCancelRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderCancelRequest) SetBtripOrderId(v string) *HotelOrderCancelRequest {
	s.BtripOrderId = &v
	return s
}

func (s *HotelOrderCancelRequest) SetDisOrderId(v string) *HotelOrderCancelRequest {
	s.DisOrderId = &v
	return s
}

type HotelOrderCancelResponseBody struct {
	// example:
	//
	// 0
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// noPermission
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	Module *HotelOrderCancelResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelOrderCancelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCancelResponseBody) GoString() string {
	return s.String()
}

func (s *HotelOrderCancelResponseBody) SetCode(v string) *HotelOrderCancelResponseBody {
	s.Code = &v
	return s
}

func (s *HotelOrderCancelResponseBody) SetMessage(v string) *HotelOrderCancelResponseBody {
	s.Message = &v
	return s
}

func (s *HotelOrderCancelResponseBody) SetModule(v *HotelOrderCancelResponseBodyModule) *HotelOrderCancelResponseBody {
	s.Module = v
	return s
}

func (s *HotelOrderCancelResponseBody) SetRequestId(v string) *HotelOrderCancelResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelOrderCancelResponseBody) SetSuccess(v bool) *HotelOrderCancelResponseBody {
	s.Success = &v
	return s
}

func (s *HotelOrderCancelResponseBody) SetTraceId(v string) *HotelOrderCancelResponseBody {
	s.TraceId = &v
	return s
}

type HotelOrderCancelResponseBodyModule struct {
	// example:
	//
	// true
	CancelSuccess *bool   `json:"cancel_success,omitempty" xml:"cancel_success,omitempty"`
	Code          *string `json:"code,omitempty" xml:"code,omitempty"`
	Desc          *string `json:"desc,omitempty" xml:"desc,omitempty"`
	// example:
	//
	// 100
	ForfeitFee *int64 `json:"forfeit_fee,omitempty" xml:"forfeit_fee,omitempty"`
}

func (s HotelOrderCancelResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCancelResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelOrderCancelResponseBodyModule) SetCancelSuccess(v bool) *HotelOrderCancelResponseBodyModule {
	s.CancelSuccess = &v
	return s
}

func (s *HotelOrderCancelResponseBodyModule) SetCode(v string) *HotelOrderCancelResponseBodyModule {
	s.Code = &v
	return s
}

func (s *HotelOrderCancelResponseBodyModule) SetDesc(v string) *HotelOrderCancelResponseBodyModule {
	s.Desc = &v
	return s
}

func (s *HotelOrderCancelResponseBodyModule) SetForfeitFee(v int64) *HotelOrderCancelResponseBodyModule {
	s.ForfeitFee = &v
	return s
}

type HotelOrderCancelResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelOrderCancelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelOrderCancelResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCancelResponse) GoString() string {
	return s.String()
}

func (s *HotelOrderCancelResponse) SetHeaders(v map[string]*string) *HotelOrderCancelResponse {
	s.Headers = v
	return s
}

func (s *HotelOrderCancelResponse) SetStatusCode(v int32) *HotelOrderCancelResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelOrderCancelResponse) SetBody(v *HotelOrderCancelResponseBody) *HotelOrderCancelResponse {
	s.Body = v
	return s
}

type HotelOrderChangeApplyHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelOrderChangeApplyHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeApplyHeaders) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeApplyHeaders) SetCommonHeaders(v map[string]*string) *HotelOrderChangeApplyHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelOrderChangeApplyHeaders) SetXAcsBtripCorpToken(v string) *HotelOrderChangeApplyHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelOrderChangeApplyRequest struct {
	// example:
	//
	// 123122
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 3685792244476194816
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	Reason *string `json:"reason,omitempty" xml:"reason,omitempty"`
	// This parameter is required.
	RoomInfoList []*HotelOrderChangeApplyRequestRoomInfoList `json:"room_info_list,omitempty" xml:"room_info_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 1402002197440511306
	SaleOrderId *string `json:"sale_order_id,omitempty" xml:"sale_order_id,omitempty"`
}

func (s HotelOrderChangeApplyRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeApplyRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeApplyRequest) SetBtripUserId(v string) *HotelOrderChangeApplyRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelOrderChangeApplyRequest) SetDisOrderId(v string) *HotelOrderChangeApplyRequest {
	s.DisOrderId = &v
	return s
}

func (s *HotelOrderChangeApplyRequest) SetReason(v string) *HotelOrderChangeApplyRequest {
	s.Reason = &v
	return s
}

func (s *HotelOrderChangeApplyRequest) SetRoomInfoList(v []*HotelOrderChangeApplyRequestRoomInfoList) *HotelOrderChangeApplyRequest {
	s.RoomInfoList = v
	return s
}

func (s *HotelOrderChangeApplyRequest) SetSaleOrderId(v string) *HotelOrderChangeApplyRequest {
	s.SaleOrderId = &v
	return s
}

type HotelOrderChangeApplyRequestRoomInfoList struct {
	// This parameter is required.
	CancelDate []*string `json:"cancel_date,omitempty" xml:"cancel_date,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 112
	RoomNo *int32 `json:"room_no,omitempty" xml:"room_no,omitempty"`
}

func (s HotelOrderChangeApplyRequestRoomInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeApplyRequestRoomInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeApplyRequestRoomInfoList) SetCancelDate(v []*string) *HotelOrderChangeApplyRequestRoomInfoList {
	s.CancelDate = v
	return s
}

func (s *HotelOrderChangeApplyRequestRoomInfoList) SetRoomNo(v int32) *HotelOrderChangeApplyRequestRoomInfoList {
	s.RoomNo = &v
	return s
}

type HotelOrderChangeApplyShrinkRequest struct {
	// example:
	//
	// 123122
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 3685792244476194816
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	Reason *string `json:"reason,omitempty" xml:"reason,omitempty"`
	// This parameter is required.
	RoomInfoListShrink *string `json:"room_info_list,omitempty" xml:"room_info_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1402002197440511306
	SaleOrderId *string `json:"sale_order_id,omitempty" xml:"sale_order_id,omitempty"`
}

func (s HotelOrderChangeApplyShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeApplyShrinkRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeApplyShrinkRequest) SetBtripUserId(v string) *HotelOrderChangeApplyShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelOrderChangeApplyShrinkRequest) SetDisOrderId(v string) *HotelOrderChangeApplyShrinkRequest {
	s.DisOrderId = &v
	return s
}

func (s *HotelOrderChangeApplyShrinkRequest) SetReason(v string) *HotelOrderChangeApplyShrinkRequest {
	s.Reason = &v
	return s
}

func (s *HotelOrderChangeApplyShrinkRequest) SetRoomInfoListShrink(v string) *HotelOrderChangeApplyShrinkRequest {
	s.RoomInfoListShrink = &v
	return s
}

func (s *HotelOrderChangeApplyShrinkRequest) SetSaleOrderId(v string) *HotelOrderChangeApplyShrinkRequest {
	s.SaleOrderId = &v
	return s
}

type HotelOrderChangeApplyResponseBody struct {
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *HotelOrderChangeApplyResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 6E9ABA14-5135-58FB-9DFC-C751B5855605
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 215045ec17018285034106091e8ba9
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelOrderChangeApplyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeApplyResponseBody) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeApplyResponseBody) SetCode(v string) *HotelOrderChangeApplyResponseBody {
	s.Code = &v
	return s
}

func (s *HotelOrderChangeApplyResponseBody) SetMessage(v string) *HotelOrderChangeApplyResponseBody {
	s.Message = &v
	return s
}

func (s *HotelOrderChangeApplyResponseBody) SetModule(v *HotelOrderChangeApplyResponseBodyModule) *HotelOrderChangeApplyResponseBody {
	s.Module = v
	return s
}

func (s *HotelOrderChangeApplyResponseBody) SetRequestId(v string) *HotelOrderChangeApplyResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelOrderChangeApplyResponseBody) SetSuccess(v bool) *HotelOrderChangeApplyResponseBody {
	s.Success = &v
	return s
}

func (s *HotelOrderChangeApplyResponseBody) SetTraceId(v string) *HotelOrderChangeApplyResponseBody {
	s.TraceId = &v
	return s
}

type HotelOrderChangeApplyResponseBodyModule struct {
	// example:
	//
	// 123445443444
	ChangeOrderId *string `json:"change_order_id,omitempty" xml:"change_order_id,omitempty"`
}

func (s HotelOrderChangeApplyResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeApplyResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeApplyResponseBodyModule) SetChangeOrderId(v string) *HotelOrderChangeApplyResponseBodyModule {
	s.ChangeOrderId = &v
	return s
}

type HotelOrderChangeApplyResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelOrderChangeApplyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelOrderChangeApplyResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeApplyResponse) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeApplyResponse) SetHeaders(v map[string]*string) *HotelOrderChangeApplyResponse {
	s.Headers = v
	return s
}

func (s *HotelOrderChangeApplyResponse) SetStatusCode(v int32) *HotelOrderChangeApplyResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelOrderChangeApplyResponse) SetBody(v *HotelOrderChangeApplyResponseBody) *HotelOrderChangeApplyResponse {
	s.Body = v
	return s
}

type HotelOrderChangeDetailHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelOrderChangeDetailHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeDetailHeaders) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeDetailHeaders) SetCommonHeaders(v map[string]*string) *HotelOrderChangeDetailHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelOrderChangeDetailHeaders) SetXAcsBtripCorpToken(v string) *HotelOrderChangeDetailHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelOrderChangeDetailRequest struct {
	// example:
	//
	// 123455
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 21351235134
	ChangeOrderId *string `json:"change_order_id,omitempty" xml:"change_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1402002197440511306
	SaleOrderId *string `json:"sale_order_id,omitempty" xml:"sale_order_id,omitempty"`
}

func (s HotelOrderChangeDetailRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeDetailRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeDetailRequest) SetBtripUserId(v string) *HotelOrderChangeDetailRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelOrderChangeDetailRequest) SetChangeOrderId(v string) *HotelOrderChangeDetailRequest {
	s.ChangeOrderId = &v
	return s
}

func (s *HotelOrderChangeDetailRequest) SetDisOrderId(v string) *HotelOrderChangeDetailRequest {
	s.DisOrderId = &v
	return s
}

func (s *HotelOrderChangeDetailRequest) SetSaleOrderId(v string) *HotelOrderChangeDetailRequest {
	s.SaleOrderId = &v
	return s
}

type HotelOrderChangeDetailResponseBody struct {
	// example:
	//
	// 0
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// operation success
	Message *string                                   `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelOrderChangeDetailResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelOrderChangeDetailResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeDetailResponseBody) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeDetailResponseBody) SetCode(v string) *HotelOrderChangeDetailResponseBody {
	s.Code = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBody) SetMessage(v string) *HotelOrderChangeDetailResponseBody {
	s.Message = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBody) SetModule(v *HotelOrderChangeDetailResponseBodyModule) *HotelOrderChangeDetailResponseBody {
	s.Module = v
	return s
}

func (s *HotelOrderChangeDetailResponseBody) SetRequestId(v string) *HotelOrderChangeDetailResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBody) SetSuccess(v bool) *HotelOrderChangeDetailResponseBody {
	s.Success = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBody) SetTraceId(v string) *HotelOrderChangeDetailResponseBody {
	s.TraceId = &v
	return s
}

type HotelOrderChangeDetailResponseBodyModule struct {
	// example:
	//
	// 1234
	ChangeOrderId *string `json:"change_order_id,omitempty" xml:"change_order_id,omitempty"`
	// example:
	//
	// 0
	ChangeType *int32 `json:"change_type,omitempty" xml:"change_type,omitempty"`
	// example:
	//
	// open12ih3c8jb8o47v10B4r4josN00
	CorpId *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	// example:
	//
	// dis1234
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// 2024-07-07 13:42:49
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2024-07-07 13:42:49
	GmtModified  *string                                                 `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	Reason       *string                                                 `json:"reason,omitempty" xml:"reason,omitempty"`
	Remarks      *string                                                 `json:"remarks,omitempty" xml:"remarks,omitempty"`
	RoomInfoList []*HotelOrderChangeDetailResponseBodyModuleRoomInfoList `json:"room_info_list,omitempty" xml:"room_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1402002197440511306
	SaleOrderId *string `json:"sale_order_id,omitempty" xml:"sale_order_id,omitempty"`
	// example:
	//
	// 0
	Source *int32 `json:"source,omitempty" xml:"source,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 2505048378320666
	WorkOrderId *string `json:"work_order_id,omitempty" xml:"work_order_id,omitempty"`
}

func (s HotelOrderChangeDetailResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeDetailResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetChangeOrderId(v string) *HotelOrderChangeDetailResponseBodyModule {
	s.ChangeOrderId = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetChangeType(v int32) *HotelOrderChangeDetailResponseBodyModule {
	s.ChangeType = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetCorpId(v string) *HotelOrderChangeDetailResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetDisOrderId(v string) *HotelOrderChangeDetailResponseBodyModule {
	s.DisOrderId = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetGmtCreate(v string) *HotelOrderChangeDetailResponseBodyModule {
	s.GmtCreate = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetGmtModified(v string) *HotelOrderChangeDetailResponseBodyModule {
	s.GmtModified = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetReason(v string) *HotelOrderChangeDetailResponseBodyModule {
	s.Reason = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetRemarks(v string) *HotelOrderChangeDetailResponseBodyModule {
	s.Remarks = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetRoomInfoList(v []*HotelOrderChangeDetailResponseBodyModuleRoomInfoList) *HotelOrderChangeDetailResponseBodyModule {
	s.RoomInfoList = v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetSaleOrderId(v string) *HotelOrderChangeDetailResponseBodyModule {
	s.SaleOrderId = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetSource(v int32) *HotelOrderChangeDetailResponseBodyModule {
	s.Source = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetStatus(v int32) *HotelOrderChangeDetailResponseBodyModule {
	s.Status = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModule) SetWorkOrderId(v string) *HotelOrderChangeDetailResponseBodyModule {
	s.WorkOrderId = &v
	return s
}

type HotelOrderChangeDetailResponseBodyModuleRoomInfoList struct {
	CancelDate           []*string                                                                   `json:"cancel_date,omitempty" xml:"cancel_date,omitempty" type:"Repeated"`
	RoomDailyRefundInfos []*HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos `json:"room_daily_refund_infos,omitempty" xml:"room_daily_refund_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	RoomNo *int32 `json:"room_no,omitempty" xml:"room_no,omitempty"`
}

func (s HotelOrderChangeDetailResponseBodyModuleRoomInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeDetailResponseBodyModuleRoomInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeDetailResponseBodyModuleRoomInfoList) SetCancelDate(v []*string) *HotelOrderChangeDetailResponseBodyModuleRoomInfoList {
	s.CancelDate = v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModuleRoomInfoList) SetRoomDailyRefundInfos(v []*HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos) *HotelOrderChangeDetailResponseBodyModuleRoomInfoList {
	s.RoomDailyRefundInfos = v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModuleRoomInfoList) SetRoomNo(v int32) *HotelOrderChangeDetailResponseBodyModuleRoomInfoList {
	s.RoomNo = &v
	return s
}

type HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos struct {
	// example:
	//
	// 2024-02-10
	CheckInDate *string `json:"check_in_date,omitempty" xml:"check_in_date,omitempty"`
	// example:
	//
	// 71000
	PenaltyPrice *int64 `json:"penalty_price,omitempty" xml:"penalty_price,omitempty"`
	// example:
	//
	// 71000
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 71000
	RefundPrice *int64 `json:"refund_price,omitempty" xml:"refund_price,omitempty"`
}

func (s HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos) SetCheckInDate(v string) *HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos {
	s.CheckInDate = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos) SetPenaltyPrice(v int64) *HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos {
	s.PenaltyPrice = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos) SetPrice(v int64) *HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos {
	s.Price = &v
	return s
}

func (s *HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos) SetRefundPrice(v int64) *HotelOrderChangeDetailResponseBodyModuleRoomInfoListRoomDailyRefundInfos {
	s.RefundPrice = &v
	return s
}

type HotelOrderChangeDetailResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelOrderChangeDetailResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelOrderChangeDetailResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderChangeDetailResponse) GoString() string {
	return s.String()
}

func (s *HotelOrderChangeDetailResponse) SetHeaders(v map[string]*string) *HotelOrderChangeDetailResponse {
	s.Headers = v
	return s
}

func (s *HotelOrderChangeDetailResponse) SetStatusCode(v int32) *HotelOrderChangeDetailResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelOrderChangeDetailResponse) SetBody(v *HotelOrderChangeDetailResponseBody) *HotelOrderChangeDetailResponse {
	s.Body = v
	return s
}

type HotelOrderCreateHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelOrderCreateHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCreateHeaders) GoString() string {
	return s.String()
}

func (s *HotelOrderCreateHeaders) SetCommonHeaders(v map[string]*string) *HotelOrderCreateHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelOrderCreateHeaders) SetXAcsBtripCorpToken(v string) *HotelOrderCreateHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelOrderCreateRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 123122
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2020-10-20
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2020-10-20
	CheckOut *string `json:"check_out,omitempty" xml:"check_out,omitempty"`
	// example:
	//
	// demo
	ContractEmail *string `json:"contract_email,omitempty" xml:"contract_email,omitempty"`
	ContractName  *string `json:"contract_name,omitempty" xml:"contract_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 19281772123
	ContractPhone *string `json:"contract_phone,omitempty" xml:"contract_phone,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	CorpPayPrice *int64 `json:"corp_pay_price,omitempty" xml:"corp_pay_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId  *string                             `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	Extra       *string                             `json:"extra,omitempty" xml:"extra,omitempty"`
	InvoiceInfo *HotelOrderCreateRequestInvoiceInfo `json:"invoice_info,omitempty" xml:"invoice_info,omitempty" type:"Struct"`
	// This parameter is required.
	//
	// example:
	//
	// 671570615157
	ItemId *int64 `json:"item_id,omitempty" xml:"item_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// fb5e1abf33924b6c912bd6d80deec0eb-1
	ItineraryNo *string `json:"itinerary_no,omitempty" xml:"itinerary_no,omitempty"`
	// This parameter is required.
	OccupantInfoList []*HotelOrderCreateRequestOccupantInfoList `json:"occupant_info_list,omitempty" xml:"occupant_info_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 1000
	PersonPayPrice *int64                                `json:"person_pay_price,omitempty" xml:"person_pay_price,omitempty"`
	PromotionInfo  *HotelOrderCreateRequestPromotionInfo `json:"promotion_info,omitempty" xml:"promotion_info,omitempty" type:"Struct"`
	// This parameter is required.
	//
	// example:
	//
	// 1399417428510
	RatePlanId *int64 `json:"rate_plan_id,omitempty" xml:"rate_plan_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 187211
	RoomId *int64 `json:"room_id,omitempty" xml:"room_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	RoomNum *int32 `json:"room_num,omitempty" xml:"room_num,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2088441675613762
	SellerId *int64 `json:"seller_id,omitempty" xml:"seller_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2198781
	Shid *int64 `json:"shid,omitempty" xml:"shid,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	TotalOrderPrice *int64 `json:"total_order_price,omitempty" xml:"total_order_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// nonUltron_1673575241156_d91ea8ad16735752359161037bf6cf_c54d3768312a4b249b719f126377bf82
	ValidateResKey *string `json:"validate_res_key,omitempty" xml:"validate_res_key,omitempty"`
}

func (s HotelOrderCreateRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCreateRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderCreateRequest) SetBtripUserId(v string) *HotelOrderCreateRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelOrderCreateRequest) SetCheckIn(v string) *HotelOrderCreateRequest {
	s.CheckIn = &v
	return s
}

func (s *HotelOrderCreateRequest) SetCheckOut(v string) *HotelOrderCreateRequest {
	s.CheckOut = &v
	return s
}

func (s *HotelOrderCreateRequest) SetContractEmail(v string) *HotelOrderCreateRequest {
	s.ContractEmail = &v
	return s
}

func (s *HotelOrderCreateRequest) SetContractName(v string) *HotelOrderCreateRequest {
	s.ContractName = &v
	return s
}

func (s *HotelOrderCreateRequest) SetContractPhone(v string) *HotelOrderCreateRequest {
	s.ContractPhone = &v
	return s
}

func (s *HotelOrderCreateRequest) SetCorpPayPrice(v int64) *HotelOrderCreateRequest {
	s.CorpPayPrice = &v
	return s
}

func (s *HotelOrderCreateRequest) SetDisOrderId(v string) *HotelOrderCreateRequest {
	s.DisOrderId = &v
	return s
}

func (s *HotelOrderCreateRequest) SetExtra(v string) *HotelOrderCreateRequest {
	s.Extra = &v
	return s
}

func (s *HotelOrderCreateRequest) SetInvoiceInfo(v *HotelOrderCreateRequestInvoiceInfo) *HotelOrderCreateRequest {
	s.InvoiceInfo = v
	return s
}

func (s *HotelOrderCreateRequest) SetItemId(v int64) *HotelOrderCreateRequest {
	s.ItemId = &v
	return s
}

func (s *HotelOrderCreateRequest) SetItineraryNo(v string) *HotelOrderCreateRequest {
	s.ItineraryNo = &v
	return s
}

func (s *HotelOrderCreateRequest) SetOccupantInfoList(v []*HotelOrderCreateRequestOccupantInfoList) *HotelOrderCreateRequest {
	s.OccupantInfoList = v
	return s
}

func (s *HotelOrderCreateRequest) SetPersonPayPrice(v int64) *HotelOrderCreateRequest {
	s.PersonPayPrice = &v
	return s
}

func (s *HotelOrderCreateRequest) SetPromotionInfo(v *HotelOrderCreateRequestPromotionInfo) *HotelOrderCreateRequest {
	s.PromotionInfo = v
	return s
}

func (s *HotelOrderCreateRequest) SetRatePlanId(v int64) *HotelOrderCreateRequest {
	s.RatePlanId = &v
	return s
}

func (s *HotelOrderCreateRequest) SetRoomId(v int64) *HotelOrderCreateRequest {
	s.RoomId = &v
	return s
}

func (s *HotelOrderCreateRequest) SetRoomNum(v int32) *HotelOrderCreateRequest {
	s.RoomNum = &v
	return s
}

func (s *HotelOrderCreateRequest) SetSellerId(v int64) *HotelOrderCreateRequest {
	s.SellerId = &v
	return s
}

func (s *HotelOrderCreateRequest) SetShid(v int64) *HotelOrderCreateRequest {
	s.Shid = &v
	return s
}

func (s *HotelOrderCreateRequest) SetTotalOrderPrice(v int64) *HotelOrderCreateRequest {
	s.TotalOrderPrice = &v
	return s
}

func (s *HotelOrderCreateRequest) SetValidateResKey(v string) *HotelOrderCreateRequest {
	s.ValidateResKey = &v
	return s
}

type HotelOrderCreateRequestInvoiceInfo struct {
	// example:
	//
	// demo
	BuyerAdd *string `json:"buyer_add,omitempty" xml:"buyer_add,omitempty"`
	// example:
	//
	// demo
	BuyerBankAcc *string `json:"buyer_bank_acc,omitempty" xml:"buyer_bank_acc,omitempty"`
	// example:
	//
	// demo
	BuyerBankAdd *string `json:"buyer_bank_add,omitempty" xml:"buyer_bank_add,omitempty"`
	// example:
	//
	// 0571-82321777
	BuyerPhone *string `json:"buyer_phone,omitempty" xml:"buyer_phone,omitempty"`
	// example:
	//
	// 1
	BuyerTaxNum      *string `json:"buyer_tax_num,omitempty" xml:"buyer_tax_num,omitempty"`
	DeliveryAddress  *string `json:"delivery_address,omitempty" xml:"delivery_address,omitempty"`
	DeliveryArea     *string `json:"delivery_area,omitempty" xml:"delivery_area,omitempty"`
	DeliveryCity     *string `json:"delivery_city,omitempty" xml:"delivery_city,omitempty"`
	DeliveryProvince *string `json:"delivery_province,omitempty" xml:"delivery_province,omitempty"`
	DeliveryStreet   *string `json:"delivery_street,omitempty" xml:"delivery_street,omitempty"`
	// example:
	//
	// demo
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// 1
	InvoiceMaterial *int32 `json:"invoice_material,omitempty" xml:"invoice_material,omitempty"`
	// example:
	//
	// demo
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// 1
	InvoiceType  *int32  `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	ReceiverName *string `json:"receiver_name,omitempty" xml:"receiver_name,omitempty"`
	// example:
	//
	// 0571-82321777
	ReceiverPhone *string `json:"receiver_phone,omitempty" xml:"receiver_phone,omitempty"`
	// example:
	//
	// demo
	Remark *string `json:"remark,omitempty" xml:"remark,omitempty"`
}

func (s HotelOrderCreateRequestInvoiceInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCreateRequestInvoiceInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetBuyerAdd(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.BuyerAdd = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetBuyerBankAcc(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.BuyerBankAcc = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetBuyerBankAdd(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.BuyerBankAdd = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetBuyerPhone(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.BuyerPhone = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetBuyerTaxNum(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.BuyerTaxNum = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetDeliveryAddress(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.DeliveryAddress = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetDeliveryArea(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.DeliveryArea = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetDeliveryCity(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.DeliveryCity = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetDeliveryProvince(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.DeliveryProvince = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetDeliveryStreet(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.DeliveryStreet = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetEmail(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.Email = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetInvoiceMaterial(v int32) *HotelOrderCreateRequestInvoiceInfo {
	s.InvoiceMaterial = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetInvoiceTitle(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.InvoiceTitle = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetInvoiceType(v int32) *HotelOrderCreateRequestInvoiceInfo {
	s.InvoiceType = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetReceiverName(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.ReceiverName = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetReceiverPhone(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.ReceiverPhone = &v
	return s
}

func (s *HotelOrderCreateRequestInvoiceInfo) SetRemark(v string) *HotelOrderCreateRequestInvoiceInfo {
	s.Remark = &v
	return s
}

type HotelOrderCreateRequestOccupantInfoList struct {
	// example:
	//
	// 124231213
	CardNo *string `json:"card_no,omitempty" xml:"card_no,omitempty"`
	// example:
	//
	// 1
	CardType *int32 `json:"card_type,omitempty" xml:"card_type,omitempty"`
	// example:
	//
	// 1
	CustomerType *int32 `json:"customer_type,omitempty" xml:"customer_type,omitempty"`
	// example:
	//
	// 123112
	DepartmentId   *string `json:"department_id,omitempty" xml:"department_id,omitempty"`
	DepartmentName *string `json:"department_name,omitempty" xml:"department_name,omitempty"`
	// example:
	//
	// demo
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// 1
	EmployeeType *int32 `json:"employee_type,omitempty" xml:"employee_type,omitempty"`
	// example:
	//
	// san
	FirstName *string `json:"first_name,omitempty" xml:"first_name,omitempty"`
	// example:
	//
	// zhang
	LastName *string `json:"last_name,omitempty" xml:"last_name,omitempty"`
	// This parameter is required.
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 18277123451
	Phone  *string `json:"phone,omitempty" xml:"phone,omitempty"`
	RoomNo *int32  `json:"room_no,omitempty" xml:"room_no,omitempty"`
	// example:
	//
	// 87817182
	StaffNo *string `json:"staff_no,omitempty" xml:"staff_no,omitempty"`
	// example:
	//
	// 1
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s HotelOrderCreateRequestOccupantInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCreateRequestOccupantInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetCardNo(v string) *HotelOrderCreateRequestOccupantInfoList {
	s.CardNo = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetCardType(v int32) *HotelOrderCreateRequestOccupantInfoList {
	s.CardType = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetCustomerType(v int32) *HotelOrderCreateRequestOccupantInfoList {
	s.CustomerType = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetDepartmentId(v string) *HotelOrderCreateRequestOccupantInfoList {
	s.DepartmentId = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetDepartmentName(v string) *HotelOrderCreateRequestOccupantInfoList {
	s.DepartmentName = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetEmail(v string) *HotelOrderCreateRequestOccupantInfoList {
	s.Email = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetEmployeeType(v int32) *HotelOrderCreateRequestOccupantInfoList {
	s.EmployeeType = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetFirstName(v string) *HotelOrderCreateRequestOccupantInfoList {
	s.FirstName = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetLastName(v string) *HotelOrderCreateRequestOccupantInfoList {
	s.LastName = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetName(v string) *HotelOrderCreateRequestOccupantInfoList {
	s.Name = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetPhone(v string) *HotelOrderCreateRequestOccupantInfoList {
	s.Phone = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetRoomNo(v int32) *HotelOrderCreateRequestOccupantInfoList {
	s.RoomNo = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetStaffNo(v string) *HotelOrderCreateRequestOccupantInfoList {
	s.StaffNo = &v
	return s
}

func (s *HotelOrderCreateRequestOccupantInfoList) SetUserType(v int32) *HotelOrderCreateRequestOccupantInfoList {
	s.UserType = &v
	return s
}

type HotelOrderCreateRequestPromotionInfo struct {
	PromotionDetailInfoList []*HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList `json:"promotion_detail_info_list,omitempty" xml:"promotion_detail_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 100
	PromotionTotalPrice *int64 `json:"promotion_total_price,omitempty" xml:"promotion_total_price,omitempty"`
}

func (s HotelOrderCreateRequestPromotionInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCreateRequestPromotionInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderCreateRequestPromotionInfo) SetPromotionDetailInfoList(v []*HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList) *HotelOrderCreateRequestPromotionInfo {
	s.PromotionDetailInfoList = v
	return s
}

func (s *HotelOrderCreateRequestPromotionInfo) SetPromotionTotalPrice(v int64) *HotelOrderCreateRequestPromotionInfo {
	s.PromotionTotalPrice = &v
	return s
}

type HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList struct {
	// example:
	//
	// true
	CheckStatus *bool `json:"check_status,omitempty" xml:"check_status,omitempty"`
	// example:
	//
	// true
	NeedCheck     *bool   `json:"need_check,omitempty" xml:"need_check,omitempty"`
	PromotionCode *string `json:"promotion_code,omitempty" xml:"promotion_code,omitempty"`
	// example:
	//
	// 23778127
	PromotionId   *string `json:"promotion_id,omitempty" xml:"promotion_id,omitempty"`
	PromotionName *string `json:"promotion_name,omitempty" xml:"promotion_name,omitempty"`
	// example:
	//
	// 100
	PromotionPrice *int64 `json:"promotion_price,omitempty" xml:"promotion_price,omitempty"`
	// example:
	//
	// 1
	PromotionType *string `json:"promotion_type,omitempty" xml:"promotion_type,omitempty"`
}

func (s HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList) SetCheckStatus(v bool) *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList {
	s.CheckStatus = &v
	return s
}

func (s *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList) SetNeedCheck(v bool) *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList {
	s.NeedCheck = &v
	return s
}

func (s *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList) SetPromotionCode(v string) *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList {
	s.PromotionCode = &v
	return s
}

func (s *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList) SetPromotionId(v string) *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList {
	s.PromotionId = &v
	return s
}

func (s *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList) SetPromotionName(v string) *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList {
	s.PromotionName = &v
	return s
}

func (s *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList) SetPromotionPrice(v int64) *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList {
	s.PromotionPrice = &v
	return s
}

func (s *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList) SetPromotionType(v string) *HotelOrderCreateRequestPromotionInfoPromotionDetailInfoList {
	s.PromotionType = &v
	return s
}

type HotelOrderCreateShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 123122
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2020-10-20
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2020-10-20
	CheckOut *string `json:"check_out,omitempty" xml:"check_out,omitempty"`
	// example:
	//
	// demo
	ContractEmail *string `json:"contract_email,omitempty" xml:"contract_email,omitempty"`
	ContractName  *string `json:"contract_name,omitempty" xml:"contract_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 19281772123
	ContractPhone *string `json:"contract_phone,omitempty" xml:"contract_phone,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	CorpPayPrice *int64 `json:"corp_pay_price,omitempty" xml:"corp_pay_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId        *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	Extra             *string `json:"extra,omitempty" xml:"extra,omitempty"`
	InvoiceInfoShrink *string `json:"invoice_info,omitempty" xml:"invoice_info,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 671570615157
	ItemId *int64 `json:"item_id,omitempty" xml:"item_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// fb5e1abf33924b6c912bd6d80deec0eb-1
	ItineraryNo *string `json:"itinerary_no,omitempty" xml:"itinerary_no,omitempty"`
	// This parameter is required.
	OccupantInfoListShrink *string `json:"occupant_info_list,omitempty" xml:"occupant_info_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1000
	PersonPayPrice      *int64  `json:"person_pay_price,omitempty" xml:"person_pay_price,omitempty"`
	PromotionInfoShrink *string `json:"promotion_info,omitempty" xml:"promotion_info,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1399417428510
	RatePlanId *int64 `json:"rate_plan_id,omitempty" xml:"rate_plan_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 187211
	RoomId *int64 `json:"room_id,omitempty" xml:"room_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	RoomNum *int32 `json:"room_num,omitempty" xml:"room_num,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2088441675613762
	SellerId *int64 `json:"seller_id,omitempty" xml:"seller_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2198781
	Shid *int64 `json:"shid,omitempty" xml:"shid,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	TotalOrderPrice *int64 `json:"total_order_price,omitempty" xml:"total_order_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// nonUltron_1673575241156_d91ea8ad16735752359161037bf6cf_c54d3768312a4b249b719f126377bf82
	ValidateResKey *string `json:"validate_res_key,omitempty" xml:"validate_res_key,omitempty"`
}

func (s HotelOrderCreateShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCreateShrinkRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderCreateShrinkRequest) SetBtripUserId(v string) *HotelOrderCreateShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetCheckIn(v string) *HotelOrderCreateShrinkRequest {
	s.CheckIn = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetCheckOut(v string) *HotelOrderCreateShrinkRequest {
	s.CheckOut = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetContractEmail(v string) *HotelOrderCreateShrinkRequest {
	s.ContractEmail = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetContractName(v string) *HotelOrderCreateShrinkRequest {
	s.ContractName = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetContractPhone(v string) *HotelOrderCreateShrinkRequest {
	s.ContractPhone = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetCorpPayPrice(v int64) *HotelOrderCreateShrinkRequest {
	s.CorpPayPrice = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetDisOrderId(v string) *HotelOrderCreateShrinkRequest {
	s.DisOrderId = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetExtra(v string) *HotelOrderCreateShrinkRequest {
	s.Extra = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetInvoiceInfoShrink(v string) *HotelOrderCreateShrinkRequest {
	s.InvoiceInfoShrink = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetItemId(v int64) *HotelOrderCreateShrinkRequest {
	s.ItemId = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetItineraryNo(v string) *HotelOrderCreateShrinkRequest {
	s.ItineraryNo = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetOccupantInfoListShrink(v string) *HotelOrderCreateShrinkRequest {
	s.OccupantInfoListShrink = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetPersonPayPrice(v int64) *HotelOrderCreateShrinkRequest {
	s.PersonPayPrice = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetPromotionInfoShrink(v string) *HotelOrderCreateShrinkRequest {
	s.PromotionInfoShrink = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetRatePlanId(v int64) *HotelOrderCreateShrinkRequest {
	s.RatePlanId = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetRoomId(v int64) *HotelOrderCreateShrinkRequest {
	s.RoomId = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetRoomNum(v int32) *HotelOrderCreateShrinkRequest {
	s.RoomNum = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetSellerId(v int64) *HotelOrderCreateShrinkRequest {
	s.SellerId = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetShid(v int64) *HotelOrderCreateShrinkRequest {
	s.Shid = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetTotalOrderPrice(v int64) *HotelOrderCreateShrinkRequest {
	s.TotalOrderPrice = &v
	return s
}

func (s *HotelOrderCreateShrinkRequest) SetValidateResKey(v string) *HotelOrderCreateShrinkRequest {
	s.ValidateResKey = &v
	return s
}

type HotelOrderCreateResponseBody struct {
	// example:
	//
	// 0
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// operation success.
	Message *string                             `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelOrderCreateResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelOrderCreateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCreateResponseBody) GoString() string {
	return s.String()
}

func (s *HotelOrderCreateResponseBody) SetCode(v string) *HotelOrderCreateResponseBody {
	s.Code = &v
	return s
}

func (s *HotelOrderCreateResponseBody) SetMessage(v string) *HotelOrderCreateResponseBody {
	s.Message = &v
	return s
}

func (s *HotelOrderCreateResponseBody) SetModule(v *HotelOrderCreateResponseBodyModule) *HotelOrderCreateResponseBody {
	s.Module = v
	return s
}

func (s *HotelOrderCreateResponseBody) SetRequestId(v string) *HotelOrderCreateResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelOrderCreateResponseBody) SetSuccess(v bool) *HotelOrderCreateResponseBody {
	s.Success = &v
	return s
}

func (s *HotelOrderCreateResponseBody) SetTraceId(v string) *HotelOrderCreateResponseBody {
	s.TraceId = &v
	return s
}

type HotelOrderCreateResponseBodyModule struct {
	// example:
	//
	// 123
	BtripOrderId *int64 `json:"btrip_order_id,omitempty" xml:"btrip_order_id,omitempty"`
	// example:
	//
	// 100
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
}

func (s HotelOrderCreateResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCreateResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelOrderCreateResponseBodyModule) SetBtripOrderId(v int64) *HotelOrderCreateResponseBodyModule {
	s.BtripOrderId = &v
	return s
}

func (s *HotelOrderCreateResponseBodyModule) SetTotalPrice(v int64) *HotelOrderCreateResponseBodyModule {
	s.TotalPrice = &v
	return s
}

type HotelOrderCreateResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelOrderCreateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelOrderCreateResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderCreateResponse) GoString() string {
	return s.String()
}

func (s *HotelOrderCreateResponse) SetHeaders(v map[string]*string) *HotelOrderCreateResponse {
	s.Headers = v
	return s
}

func (s *HotelOrderCreateResponse) SetStatusCode(v int32) *HotelOrderCreateResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelOrderCreateResponse) SetBody(v *HotelOrderCreateResponseBody) *HotelOrderCreateResponse {
	s.Body = v
	return s
}

type HotelOrderDetailInfoHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelOrderDetailInfoHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoHeaders) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoHeaders) SetCommonHeaders(v map[string]*string) *HotelOrderDetailInfoHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelOrderDetailInfoHeaders) SetXAcsBtripCorpToken(v string) *HotelOrderDetailInfoHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelOrderDetailInfoRequest struct {
	BtripOrderId *string `json:"btrip_order_id,omitempty" xml:"btrip_order_id,omitempty"`
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
}

func (s HotelOrderDetailInfoRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoRequest) SetBtripOrderId(v string) *HotelOrderDetailInfoRequest {
	s.BtripOrderId = &v
	return s
}

func (s *HotelOrderDetailInfoRequest) SetDisOrderId(v string) *HotelOrderDetailInfoRequest {
	s.DisOrderId = &v
	return s
}

type HotelOrderDetailInfoResponseBody struct {
	// example:
	//
	// 0
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// succeed in handling request
	Message *string                                 `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelOrderDetailInfoResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelOrderDetailInfoResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBody) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBody) SetCode(v string) *HotelOrderDetailInfoResponseBody {
	s.Code = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBody) SetMessage(v string) *HotelOrderDetailInfoResponseBody {
	s.Message = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBody) SetModule(v *HotelOrderDetailInfoResponseBodyModule) *HotelOrderDetailInfoResponseBody {
	s.Module = v
	return s
}

func (s *HotelOrderDetailInfoResponseBody) SetRequestId(v string) *HotelOrderDetailInfoResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBody) SetSuccess(v bool) *HotelOrderDetailInfoResponseBody {
	s.Success = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBody) SetTraceId(v string) *HotelOrderDetailInfoResponseBody {
	s.TraceId = &v
	return s
}

type HotelOrderDetailInfoResponseBodyModule struct {
	// example:
	//
	// 2022-01-29
	ActualCheckInTime *string `json:"actual_check_in_time,omitempty" xml:"actual_check_in_time,omitempty"`
	// example:
	//
	// 2022-01-29
	ActualCheckOutTime        *string                                                          `json:"actual_check_out_time,omitempty" xml:"actual_check_out_time,omitempty"`
	BtripHotelCancelPolicyDTO *HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTO `json:"btrip_hotel_cancel_policy_d_t_o,omitempty" xml:"btrip_hotel_cancel_policy_d_t_o,omitempty" type:"Struct"`
	// example:
	//
	// 123
	BtripOrderId *string `json:"btrip_order_id,omitempty" xml:"btrip_order_id,omitempty"`
	// example:
	//
	// 100
	CancelFine *int64                                            `json:"cancel_fine,omitempty" xml:"cancel_fine,omitempty"`
	CancelInfo *HotelOrderDetailInfoResponseBodyModuleCancelInfo `json:"cancel_info,omitempty" xml:"cancel_info,omitempty" type:"Struct"`
	// example:
	//
	// 2022-05-15T22:27Z
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	CheckOut *string `json:"check_out,omitempty" xml:"check_out,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	ConfirmOrderTime *string `json:"confirm_order_time,omitempty" xml:"confirm_order_time,omitempty"`
	ContractName     *string `json:"contract_name,omitempty" xml:"contract_name,omitempty"`
	// example:
	//
	// 12316261873
	ContractTel *string `json:"contract_tel,omitempty" xml:"contract_tel,omitempty"`
	// example:
	//
	// 2020-01-21
	CreateOrderTime *string `json:"create_order_time,omitempty" xml:"create_order_time,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	EarlyArrivalTime *string `json:"early_arrival_time,omitempty" xml:"early_arrival_time,omitempty"`
	// example:
	//
	// true
	EarlyDeparture *bool `json:"early_departure,omitempty" xml:"early_departure,omitempty"`
	// example:
	//
	// 2
	GuestCount              *int32                                                           `json:"guest_count,omitempty" xml:"guest_count,omitempty"`
	HotelDetailInfo         *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo           `json:"hotel_detail_info,omitempty" xml:"hotel_detail_info,omitempty" type:"Struct"`
	HotelSaleOrderRoomInfos []*HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos `json:"hotel_sale_order_room_infos,omitempty" xml:"hotel_sale_order_room_infos,omitempty" type:"Repeated"`
	InvoiceInfo             *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo               `json:"invoice_info,omitempty" xml:"invoice_info,omitempty" type:"Struct"`
	// example:
	//
	// 1289918
	ItemId *string `json:"item_id,omitempty" xml:"item_id,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	LastArrivalTime  *string                                                   `json:"last_arrival_time,omitempty" xml:"last_arrival_time,omitempty"`
	OccupantInfoList []*HotelOrderDetailInfoResponseBodyModuleOccupantInfoList `json:"occupant_info_list,omitempty" xml:"occupant_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	OrderStatus     *int32  `json:"order_status,omitempty" xml:"order_status,omitempty"`
	OrderStatusDesc *string `json:"order_status_desc,omitempty" xml:"order_status_desc,omitempty"`
	OutConfirmCode  *string `json:"out_confirm_code,omitempty" xml:"out_confirm_code,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	PayTime *string `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	// example:
	//
	// 1
	ProductType *int32 `json:"product_type,omitempty" xml:"product_type,omitempty"`
	// example:
	//
	// 100328718728171
	PurchaseOrderId *string `json:"purchase_order_id,omitempty" xml:"purchase_order_id,omitempty"`
	// example:
	//
	// 100
	RefundPrice *int64 `json:"refund_price,omitempty" xml:"refund_price,omitempty"`
	// example:
	//
	// demo
	RefundReason *string `json:"refund_reason,omitempty" xml:"refund_reason,omitempty"`
	// example:
	//
	// 100
	RefundServiceFee       *int64                                                          `json:"refund_service_fee,omitempty" xml:"refund_service_fee,omitempty"`
	RoomNightPriceInfoList []*HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList `json:"room_night_price_info_list,omitempty" xml:"room_night_price_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	RoomNumber   *int32  `json:"room_number,omitempty" xml:"room_number,omitempty"`
	RoomTypeName *string `json:"room_type_name,omitempty" xml:"room_type_name,omitempty"`
	// example:
	//
	// 2088441675613762
	SellerId *string `json:"seller_id,omitempty" xml:"seller_id,omitempty"`
	// example:
	//
	// taobao
	SellerName *string `json:"seller_name,omitempty" xml:"seller_name,omitempty"`
	// example:
	//
	// 1.02
	ServiceFee *int64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 0
	SettleType *string `json:"settle_type,omitempty" xml:"settle_type,omitempty"`
	// example:
	//
	// dis123
	SupplierOrderId *string `json:"supplier_order_id,omitempty" xml:"supplier_order_id,omitempty"`
	// example:
	//
	// 100
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
}

func (s HotelOrderDetailInfoResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetActualCheckInTime(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.ActualCheckInTime = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetActualCheckOutTime(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.ActualCheckOutTime = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetBtripHotelCancelPolicyDTO(v *HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTO) *HotelOrderDetailInfoResponseBodyModule {
	s.BtripHotelCancelPolicyDTO = v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetBtripOrderId(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.BtripOrderId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetCancelFine(v int64) *HotelOrderDetailInfoResponseBodyModule {
	s.CancelFine = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetCancelInfo(v *HotelOrderDetailInfoResponseBodyModuleCancelInfo) *HotelOrderDetailInfoResponseBodyModule {
	s.CancelInfo = v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetCheckIn(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.CheckIn = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetCheckOut(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.CheckOut = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetConfirmOrderTime(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.ConfirmOrderTime = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetContractName(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.ContractName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetContractTel(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.ContractTel = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetCreateOrderTime(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.CreateOrderTime = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetEarlyArrivalTime(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.EarlyArrivalTime = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetEarlyDeparture(v bool) *HotelOrderDetailInfoResponseBodyModule {
	s.EarlyDeparture = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetGuestCount(v int32) *HotelOrderDetailInfoResponseBodyModule {
	s.GuestCount = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetHotelDetailInfo(v *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo) *HotelOrderDetailInfoResponseBodyModule {
	s.HotelDetailInfo = v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetHotelSaleOrderRoomInfos(v []*HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) *HotelOrderDetailInfoResponseBodyModule {
	s.HotelSaleOrderRoomInfos = v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetInvoiceInfo(v *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) *HotelOrderDetailInfoResponseBodyModule {
	s.InvoiceInfo = v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetItemId(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.ItemId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetLastArrivalTime(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.LastArrivalTime = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetOccupantInfoList(v []*HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) *HotelOrderDetailInfoResponseBodyModule {
	s.OccupantInfoList = v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetOrderStatus(v int32) *HotelOrderDetailInfoResponseBodyModule {
	s.OrderStatus = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetOrderStatusDesc(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.OrderStatusDesc = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetOutConfirmCode(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.OutConfirmCode = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetPayTime(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.PayTime = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetProductType(v int32) *HotelOrderDetailInfoResponseBodyModule {
	s.ProductType = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetPurchaseOrderId(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.PurchaseOrderId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetRefundPrice(v int64) *HotelOrderDetailInfoResponseBodyModule {
	s.RefundPrice = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetRefundReason(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.RefundReason = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetRefundServiceFee(v int64) *HotelOrderDetailInfoResponseBodyModule {
	s.RefundServiceFee = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetRoomNightPriceInfoList(v []*HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) *HotelOrderDetailInfoResponseBodyModule {
	s.RoomNightPriceInfoList = v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetRoomNumber(v int32) *HotelOrderDetailInfoResponseBodyModule {
	s.RoomNumber = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetRoomTypeName(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.RoomTypeName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetSellerId(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.SellerId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetSellerName(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.SellerName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetServiceFee(v int64) *HotelOrderDetailInfoResponseBodyModule {
	s.ServiceFee = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetSettleType(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.SettleType = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetSupplierOrderId(v string) *HotelOrderDetailInfoResponseBodyModule {
	s.SupplierOrderId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModule) SetTotalPrice(v int64) *HotelOrderDetailInfoResponseBodyModule {
	s.TotalPrice = &v
	return s
}

type HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTO struct {
	BtripHotelCancelPolicyInfoDTOList []*HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList `json:"btrip_hotel_cancel_policy_info_d_t_o_list,omitempty" xml:"btrip_hotel_cancel_policy_info_d_t_o_list,omitempty" type:"Repeated"`
	CancelPolicyType                  *int32                                                                                              `json:"cancel_policy_type,omitempty" xml:"cancel_policy_type,omitempty"`
}

func (s HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTO) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTO) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTO) SetBtripHotelCancelPolicyInfoDTOList(v []*HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) *HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTO {
	s.BtripHotelCancelPolicyInfoDTOList = v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTO) SetCancelPolicyType(v int32) *HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTO {
	s.CancelPolicyType = &v
	return s
}

type HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList struct {
	// example:
	//
	// 1
	Hour *int64 `json:"hour,omitempty" xml:"hour,omitempty"`
	// example:
	//
	// 1
	Value *int64 `json:"value,omitempty" xml:"value,omitempty"`
}

func (s HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) SetHour(v int64) *HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList {
	s.Hour = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) SetValue(v int64) *HotelOrderDetailInfoResponseBodyModuleBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList {
	s.Value = &v
	return s
}

type HotelOrderDetailInfoResponseBodyModuleCancelInfo struct {
	// example:
	//
	// 2022-01-29
	CancelEndTime *string `json:"cancel_end_time,omitempty" xml:"cancel_end_time,omitempty"`
	// example:
	//
	// 2022-01-29
	CancelStartTime *string `json:"cancel_start_time,omitempty" xml:"cancel_start_time,omitempty"`
}

func (s HotelOrderDetailInfoResponseBodyModuleCancelInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBodyModuleCancelInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBodyModuleCancelInfo) SetCancelEndTime(v string) *HotelOrderDetailInfoResponseBodyModuleCancelInfo {
	s.CancelEndTime = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleCancelInfo) SetCancelStartTime(v string) *HotelOrderDetailInfoResponseBodyModuleCancelInfo {
	s.CancelStartTime = &v
	return s
}

type HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo struct {
	Address   *string `json:"address,omitempty" xml:"address,omitempty"`
	CityName  *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	HotelName *string `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	// example:
	//
	// 0571-87217
	HotelTel *string `json:"hotel_tel,omitempty" xml:"hotel_tel,omitempty"`
	// example:
	//
	// 2198781
	Shid *int64 `json:"shid,omitempty" xml:"shid,omitempty"`
}

func (s HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo) SetAddress(v string) *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo {
	s.Address = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo) SetCityName(v string) *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo {
	s.CityName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo) SetHotelName(v string) *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo {
	s.HotelName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo) SetHotelTel(v string) *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo {
	s.HotelTel = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo) SetShid(v int64) *HotelOrderDetailInfoResponseBodyModuleHotelDetailInfo {
	s.Shid = &v
	return s
}

type HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos struct {
	CheckinDate      *string `json:"checkin_date,omitempty" xml:"checkin_date,omitempty"`
	CheckoutDate     *string `json:"checkout_date,omitempty" xml:"checkout_date,omitempty"`
	PenalSum         *int64  `json:"penal_sum,omitempty" xml:"penal_sum,omitempty"`
	RealCheckoutDate *string `json:"real_checkout_date,omitempty" xml:"real_checkout_date,omitempty"`
	RefundStatus     *int32  `json:"refund_status,omitempty" xml:"refund_status,omitempty"`
	RoomNo           *int32  `json:"room_no,omitempty" xml:"room_no,omitempty"`
	RoomPrice        *int64  `json:"room_price,omitempty" xml:"room_price,omitempty"`
	RoomRefundPrice  *int64  `json:"room_refund_price,omitempty" xml:"room_refund_price,omitempty"`
	TravelerId       *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	TravelerName     *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
}

func (s HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) SetCheckinDate(v string) *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos {
	s.CheckinDate = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) SetCheckoutDate(v string) *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos {
	s.CheckoutDate = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) SetPenalSum(v int64) *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos {
	s.PenalSum = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) SetRealCheckoutDate(v string) *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos {
	s.RealCheckoutDate = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) SetRefundStatus(v int32) *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos {
	s.RefundStatus = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) SetRoomNo(v int32) *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos {
	s.RoomNo = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) SetRoomPrice(v int64) *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos {
	s.RoomPrice = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) SetRoomRefundPrice(v int64) *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos {
	s.RoomRefundPrice = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) SetTravelerId(v string) *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos {
	s.TravelerId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos) SetTravelerName(v string) *HotelOrderDetailInfoResponseBodyModuleHotelSaleOrderRoomInfos {
	s.TravelerName = &v
	return s
}

type HotelOrderDetailInfoResponseBodyModuleInvoiceInfo struct {
	// example:
	//
	// 100
	BillingMoney *int64 `json:"billing_money,omitempty" xml:"billing_money,omitempty"`
	// example:
	//
	// demo
	BuyerAdd *string `json:"buyer_add,omitempty" xml:"buyer_add,omitempty"`
	// example:
	//
	// demo
	BuyerBankAcc *string `json:"buyer_bank_acc,omitempty" xml:"buyer_bank_acc,omitempty"`
	// example:
	//
	// demo
	BuyerBankAdd *string `json:"buyer_bank_add,omitempty" xml:"buyer_bank_add,omitempty"`
	// example:
	//
	// 0571-82321777
	BuyerPhone *string `json:"buyer_phone,omitempty" xml:"buyer_phone,omitempty"`
	// example:
	//
	// 1
	BuyerTaxNum      *string `json:"buyer_tax_num,omitempty" xml:"buyer_tax_num,omitempty"`
	DeliveryAddress  *string `json:"delivery_address,omitempty" xml:"delivery_address,omitempty"`
	DeliveryArea     *string `json:"delivery_area,omitempty" xml:"delivery_area,omitempty"`
	DeliveryCity     *string `json:"delivery_city,omitempty" xml:"delivery_city,omitempty"`
	DeliveryProvince *string `json:"delivery_province,omitempty" xml:"delivery_province,omitempty"`
	DeliveryStreet   *string `json:"delivery_street,omitempty" xml:"delivery_street,omitempty"`
	// example:
	//
	// demo
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// 1
	InvoiceMaterial *int32 `json:"invoice_material,omitempty" xml:"invoice_material,omitempty"`
	// example:
	//
	// demo
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// 1
	InvoiceType *int32 `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	// example:
	//
	// 100
	Postage      *int64  `json:"postage,omitempty" xml:"postage,omitempty"`
	ReceiverName *string `json:"receiver_name,omitempty" xml:"receiver_name,omitempty"`
	// example:
	//
	// 0571-82321777
	ReceiverPhone *string `json:"receiver_phone,omitempty" xml:"receiver_phone,omitempty"`
	// example:
	//
	// tmf closeCloneTask
	Remark *string `json:"remark,omitempty" xml:"remark,omitempty"`
}

func (s HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetBillingMoney(v int64) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.BillingMoney = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetBuyerAdd(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.BuyerAdd = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetBuyerBankAcc(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.BuyerBankAcc = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetBuyerBankAdd(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.BuyerBankAdd = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetBuyerPhone(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.BuyerPhone = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetBuyerTaxNum(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.BuyerTaxNum = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetDeliveryAddress(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.DeliveryAddress = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetDeliveryArea(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.DeliveryArea = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetDeliveryCity(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.DeliveryCity = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetDeliveryProvince(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.DeliveryProvince = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetDeliveryStreet(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.DeliveryStreet = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetEmail(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.Email = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetInvoiceMaterial(v int32) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.InvoiceMaterial = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetInvoiceTitle(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.InvoiceTitle = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetInvoiceType(v int32) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.InvoiceType = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetPostage(v int64) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.Postage = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetReceiverName(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.ReceiverName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetReceiverPhone(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.ReceiverPhone = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo) SetRemark(v string) *HotelOrderDetailInfoResponseBodyModuleInvoiceInfo {
	s.Remark = &v
	return s
}

type HotelOrderDetailInfoResponseBodyModuleOccupantInfoList struct {
	// example:
	//
	// 1235615612424222
	CardNo *string `json:"card_no,omitempty" xml:"card_no,omitempty"`
	// example:
	//
	// 1
	CardType           *int32                                                                      `json:"card_type,omitempty" xml:"card_type,omitempty"`
	CostCenterInfoList []*HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList `json:"cost_center_info_list,omitempty" xml:"cost_center_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	CustomerType *int32 `json:"customer_type,omitempty" xml:"customer_type,omitempty"`
	// example:
	//
	// 123112
	DepartmentId *string `json:"department_id,omitempty" xml:"department_id,omitempty"`
	// example:
	//
	// demo
	DepartmentName *string `json:"department_name,omitempty" xml:"department_name,omitempty"`
	// example:
	//
	// demo
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// 1
	EmployeeType *int32 `json:"employee_type,omitempty" xml:"employee_type,omitempty"`
	// example:
	//
	// zhangsan
	FirstName *string `json:"first_name,omitempty" xml:"first_name,omitempty"`
	// example:
	//
	// true
	IsBooker *bool `json:"is_booker,omitempty" xml:"is_booker,omitempty"`
	// example:
	//
	// zhang
	LastName *string `json:"last_name,omitempty" xml:"last_name,omitempty"`
	Name     *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// 0571-872237
	Phone  *string `json:"phone,omitempty" xml:"phone,omitempty"`
	RoomNo *int32  `json:"room_no,omitempty" xml:"room_no,omitempty"`
	// example:
	//
	// true
	Selected *bool `json:"selected,omitempty" xml:"selected,omitempty"`
	// example:
	//
	// 12817218
	StaffNo *string `json:"staff_no,omitempty" xml:"staff_no,omitempty"`
	// example:
	//
	// 1
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetCardNo(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.CardNo = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetCardType(v int32) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.CardType = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetCostCenterInfoList(v []*HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.CostCenterInfoList = v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetCustomerType(v int32) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.CustomerType = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetDepartmentId(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.DepartmentId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetDepartmentName(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.DepartmentName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetEmail(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.Email = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetEmployeeType(v int32) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.EmployeeType = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetFirstName(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.FirstName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetIsBooker(v bool) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.IsBooker = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetLastName(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.LastName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetName(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.Name = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetPhone(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.Phone = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetRoomNo(v int32) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.RoomNo = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetSelected(v bool) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.Selected = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetStaffNo(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.StaffNo = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList) SetUserType(v int32) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoList {
	s.UserType = &v
	return s
}

type HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList struct {
	// example:
	//
	// demo
	CostCenterId *string `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	// example:
	//
	// demo
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// demo
	CostCenterNo *string `json:"cost_center_no,omitempty" xml:"cost_center_no,omitempty"`
	// example:
	//
	// demo
	CostCenterPrices *int64 `json:"cost_center_prices,omitempty" xml:"cost_center_prices,omitempty"`
	// example:
	//
	// demo
	CostCenterRatios *int64 `json:"cost_center_ratios,omitempty" xml:"cost_center_ratios,omitempty"`
	// example:
	//
	// demo
	CostCenterSubjectCode *string `json:"cost_center_subject_code,omitempty" xml:"cost_center_subject_code,omitempty"`
	// example:
	//
	// demo
	CostCenterSubjectName *string `json:"cost_center_subject_name,omitempty" xml:"cost_center_subject_name,omitempty"`
	// example:
	//
	// demo
	SettleSubjectId *string `json:"settle_subject_id,omitempty" xml:"settle_subject_id,omitempty"`
	// example:
	//
	// demo
	SettleSubjectName *string `json:"settle_subject_name,omitempty" xml:"settle_subject_name,omitempty"`
	// example:
	//
	// demo
	SettleSubjectNo *string `json:"settle_subject_no,omitempty" xml:"settle_subject_no,omitempty"`
}

func (s HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) SetCostCenterId(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList {
	s.CostCenterId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) SetCostCenterName(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList {
	s.CostCenterName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) SetCostCenterNo(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList {
	s.CostCenterNo = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) SetCostCenterPrices(v int64) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList {
	s.CostCenterPrices = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) SetCostCenterRatios(v int64) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList {
	s.CostCenterRatios = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) SetCostCenterSubjectCode(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList {
	s.CostCenterSubjectCode = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) SetCostCenterSubjectName(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList {
	s.CostCenterSubjectName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) SetSettleSubjectId(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList {
	s.SettleSubjectId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) SetSettleSubjectName(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList {
	s.SettleSubjectName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList) SetSettleSubjectNo(v string) *HotelOrderDetailInfoResponseBodyModuleOccupantInfoListCostCenterInfoList {
	s.SettleSubjectNo = &v
	return s
}

type HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList struct {
	Board *string `json:"board,omitempty" xml:"board,omitempty"`
	// example:
	//
	// 2
	BoardNum *int32 `json:"board_num,omitempty" xml:"board_num,omitempty"`
	// example:
	//
	// 1677600000000
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// example:
	//
	// 1399417428510
	RatePlanId   *string `json:"rate_plan_id,omitempty" xml:"rate_plan_id,omitempty"`
	RatePlanName *string `json:"rate_plan_name,omitempty" xml:"rate_plan_name,omitempty"`
	// example:
	//
	// 545993154510
	RoomId   *string `json:"room_id,omitempty" xml:"room_id,omitempty"`
	RoomName *string `json:"room_name,omitempty" xml:"room_name,omitempty"`
	// example:
	//
	// 50000
	RoomPrice *int64 `json:"room_price,omitempty" xml:"room_price,omitempty"`
}

func (s HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) SetBoard(v string) *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList {
	s.Board = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) SetBoardNum(v int32) *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList {
	s.BoardNum = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) SetCheckIn(v string) *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList {
	s.CheckIn = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) SetRatePlanId(v string) *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList {
	s.RatePlanId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) SetRatePlanName(v string) *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList {
	s.RatePlanName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) SetRoomId(v string) *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList {
	s.RoomId = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) SetRoomName(v string) *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList {
	s.RoomName = &v
	return s
}

func (s *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList) SetRoomPrice(v int64) *HotelOrderDetailInfoResponseBodyModuleRoomNightPriceInfoList {
	s.RoomPrice = &v
	return s
}

type HotelOrderDetailInfoResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelOrderDetailInfoResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelOrderDetailInfoResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderDetailInfoResponse) GoString() string {
	return s.String()
}

func (s *HotelOrderDetailInfoResponse) SetHeaders(v map[string]*string) *HotelOrderDetailInfoResponse {
	s.Headers = v
	return s
}

func (s *HotelOrderDetailInfoResponse) SetStatusCode(v int32) *HotelOrderDetailInfoResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelOrderDetailInfoResponse) SetBody(v *HotelOrderDetailInfoResponseBody) *HotelOrderDetailInfoResponse {
	s.Body = v
	return s
}

type HotelOrderInfoQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelOrderInfoQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryHeaders) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryHeaders) SetCommonHeaders(v map[string]*string) *HotelOrderInfoQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelOrderInfoQueryHeaders) SetXAcsBtripCorpToken(v string) *HotelOrderInfoQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelOrderInfoQueryResponseBody struct {
	// example:
	//
	// success
	Code    *string                                `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelOrderInfoQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelOrderInfoQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBody) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBody) SetCode(v string) *HotelOrderInfoQueryResponseBody {
	s.Code = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBody) SetMessage(v string) *HotelOrderInfoQueryResponseBody {
	s.Message = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBody) SetModule(v *HotelOrderInfoQueryResponseBodyModule) *HotelOrderInfoQueryResponseBody {
	s.Module = v
	return s
}

func (s *HotelOrderInfoQueryResponseBody) SetRequestId(v string) *HotelOrderInfoQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBody) SetSuccess(v bool) *HotelOrderInfoQueryResponseBody {
	s.Success = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBody) SetTraceId(v string) *HotelOrderInfoQueryResponseBody {
	s.TraceId = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModule struct {
	BaseOrderInfo        *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo          `json:"base_order_info,omitempty" xml:"base_order_info,omitempty" type:"Struct"`
	BookerInfo           *HotelOrderInfoQueryResponseBodyModuleBookerInfo             `json:"booker_info,omitempty" xml:"booker_info,omitempty" type:"Struct"`
	HotelInfo            *HotelOrderInfoQueryResponseBodyModuleHotelInfo              `json:"hotel_info,omitempty" xml:"hotel_info,omitempty" type:"Struct"`
	HotelOrderFeeInfo    *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo      `json:"hotel_order_fee_info,omitempty" xml:"hotel_order_fee_info,omitempty" type:"Struct"`
	HotelOrderRefundInfo []*HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo `json:"hotel_order_refund_info,omitempty" xml:"hotel_order_refund_info,omitempty" type:"Repeated"`
	RoomTraverInfo       []*HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo       `json:"room_traver_info,omitempty" xml:"room_traver_info,omitempty" type:"Repeated"`
}

func (s HotelOrderInfoQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModule) SetBaseOrderInfo(v *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) *HotelOrderInfoQueryResponseBodyModule {
	s.BaseOrderInfo = v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModule) SetBookerInfo(v *HotelOrderInfoQueryResponseBodyModuleBookerInfo) *HotelOrderInfoQueryResponseBodyModule {
	s.BookerInfo = v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModule) SetHotelInfo(v *HotelOrderInfoQueryResponseBodyModuleHotelInfo) *HotelOrderInfoQueryResponseBodyModule {
	s.HotelInfo = v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModule) SetHotelOrderFeeInfo(v *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo) *HotelOrderInfoQueryResponseBodyModule {
	s.HotelOrderFeeInfo = v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModule) SetHotelOrderRefundInfo(v []*HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo) *HotelOrderInfoQueryResponseBodyModule {
	s.HotelOrderRefundInfo = v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModule) SetRoomTraverInfo(v []*HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo) *HotelOrderInfoQueryResponseBodyModule {
	s.RoomTraverInfo = v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo struct {
	// example:
	//
	// 0
	BookMode *string `json:"book_mode,omitempty" xml:"book_mode,omitempty"`
	// example:
	//
	// 1430378
	BookerId   *string `json:"booker_id,omitempty" xml:"booker_id,omitempty"`
	BookerName *string `json:"booker_name,omitempty" xml:"booker_name,omitempty"`
	// example:
	//
	// btripkvxtn1321g49wtul
	BtripCorpId *string `json:"btrip_corp_id,omitempty" xml:"btrip_corp_id,omitempty"`
	// example:
	//
	// 2
	Category *int32 `json:"category,omitempty" xml:"category,omitempty"`
	// example:
	//
	// 1721145600000
	CheckInTime *int64 `json:"check_in_time,omitempty" xml:"check_in_time,omitempty"`
	// example:
	//
	// 1721145600000
	CheckOutTime *int64 `json:"check_out_time,omitempty" xml:"check_out_time,omitempty"`
	// example:
	//
	// true
	IsAgreementPrice *bool `json:"is_agreement_price,omitempty" xml:"is_agreement_price,omitempty"`
	// example:
	//
	// 4
	Nights *int32 `json:"nights,omitempty" xml:"nights,omitempty"`
	// example:
	//
	// 1721145600000
	OrderCreateTime *int64 `json:"order_create_time,omitempty" xml:"order_create_time,omitempty"`
	// example:
	//
	// 1012053198307958626
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 2
	OrderStatus     *int32  `json:"order_status,omitempty" xml:"order_status,omitempty"`
	OrderStatusDesc *string `json:"order_status_desc,omitempty" xml:"order_status_desc,omitempty"`
	// example:
	//
	// 1
	PayStatus *int32 `json:"pay_status,omitempty" xml:"pay_status,omitempty"`
	// example:
	//
	// 1721145600000
	PayTime *int64 `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	// example:
	//
	// 2
	RoomNum *int32 `json:"room_num,omitempty" xml:"room_num,omitempty"`
	// example:
	//
	// 4
	SettleType *int32 `json:"settle_type,omitempty" xml:"settle_type,omitempty"`
	// example:
	//
	// 1
	TripMode *int32 `json:"trip_mode,omitempty" xml:"trip_mode,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetBookMode(v string) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.BookMode = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetBookerId(v string) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.BookerId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetBookerName(v string) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.BookerName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetBtripCorpId(v string) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.BtripCorpId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetCategory(v int32) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.Category = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetCheckInTime(v int64) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.CheckInTime = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetCheckOutTime(v int64) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.CheckOutTime = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetIsAgreementPrice(v bool) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.IsAgreementPrice = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetNights(v int32) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.Nights = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetOrderCreateTime(v int64) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.OrderCreateTime = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetOrderId(v int64) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.OrderId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetOrderStatus(v int32) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.OrderStatus = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetOrderStatusDesc(v string) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.OrderStatusDesc = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetPayStatus(v int32) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.PayStatus = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetPayTime(v int64) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.PayTime = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetRoomNum(v int32) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.RoomNum = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetSettleType(v int32) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.SettleType = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo) SetTripMode(v int32) *HotelOrderInfoQueryResponseBodyModuleBaseOrderInfo {
	s.TripMode = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleBookerInfo struct {
	// example:
	//
	// UN_APPLY
	BookerRole *string `json:"booker_role,omitempty" xml:"booker_role,omitempty"`
	// example:
	//
	// 13311112222@qq.com
	ContactEmail *string `json:"contact_email,omitempty" xml:"contact_email,omitempty"`
	// example:
	//
	// 13311112222
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	// example:
	//
	// open12gddn2kn1i47v10wRJNkMFx00
	CorpId     *string                                                    `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	Department *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment `json:"department,omitempty" xml:"department,omitempty" type:"Struct"`
	// example:
	//
	// Tom
	EnName *string `json:"en_name,omitempty" xml:"en_name,omitempty"`
	// example:
	//
	// 1001
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// true
	NeedApply *bool   `json:"need_apply,omitempty" xml:"need_apply,omitempty"`
	RealName  *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// 1430378
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleBookerInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleBookerInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfo) SetBookerRole(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfo {
	s.BookerRole = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfo) SetContactEmail(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfo {
	s.ContactEmail = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfo) SetContactPhone(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfo {
	s.ContactPhone = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfo) SetCorpId(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfo {
	s.CorpId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfo) SetDepartment(v *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment) *HotelOrderInfoQueryResponseBodyModuleBookerInfo {
	s.Department = v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfo) SetEnName(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfo {
	s.EnName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfo) SetJobNo(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfo {
	s.JobNo = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfo) SetNeedApply(v bool) *HotelOrderInfoQueryResponseBodyModuleBookerInfo {
	s.NeedApply = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfo) SetRealName(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfo {
	s.RealName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfo) SetUserId(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfo {
	s.UserId = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment struct {
	// example:
	//
	// 0rCUI20hjOsk0sTwlu
	CascadeDeptMask *string `json:"cascade_dept_mask,omitempty" xml:"cascade_dept_mask,omitempty"`
	CascadeDeptName *string `json:"cascade_dept_name,omitempty" xml:"cascade_dept_name,omitempty"`
	// example:
	//
	// 35
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// example:
	//
	// 330000001815
	OutDepartId *string `json:"out_depart_id,omitempty" xml:"out_depart_id,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment) SetCascadeDeptMask(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment {
	s.CascadeDeptMask = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment) SetCascadeDeptName(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment {
	s.CascadeDeptName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment) SetDepartId(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment {
	s.DepartId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment) SetDepartName(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment {
	s.DepartName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment) SetOutDepartId(v string) *HotelOrderInfoQueryResponseBodyModuleBookerInfoDepartment {
	s.OutDepartId = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleHotelInfo struct {
	// example:
	//
	// 330100
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// 1
	CountryCode *string `json:"country_code,omitempty" xml:"country_code,omitempty"`
	CountryName *string `json:"country_name,omitempty" xml:"country_name,omitempty"`
	// example:
	//
	// 330183
	DistrictCode *string `json:"district_code,omitempty" xml:"district_code,omitempty"`
	DistrictName *string `json:"district_name,omitempty" xml:"district_name,omitempty"`
	HotelAddress *string `json:"hotel_address,omitempty" xml:"hotel_address,omitempty"`
	// example:
	//
	// 3
	HotelBrandCode *string `json:"hotel_brand_code,omitempty" xml:"hotel_brand_code,omitempty"`
	HotelBrandName *string `json:"hotel_brand_name,omitempty" xml:"hotel_brand_name,omitempty"`
	// example:
	//
	// huazhu
	HotelGroup *string `json:"hotel_group,omitempty" xml:"hotel_group,omitempty"`
	// example:
	//
	// 55335212
	HotelId   *string `json:"hotel_id,omitempty" xml:"hotel_id,omitempty"`
	HotelName *string `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	// example:
	//
	// Test Hotel Name
	HotelNameEn *string `json:"hotel_name_en,omitempty" xml:"hotel_name_en,omitempty"`
	// example:
	//
	// 5
	Star *string `json:"star,omitempty" xml:"star,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleHotelInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleHotelInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetCityCode(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.CityCode = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetCityName(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.CityName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetCountryCode(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.CountryCode = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetCountryName(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.CountryName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetDistrictCode(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.DistrictCode = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetDistrictName(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.DistrictName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetHotelAddress(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.HotelAddress = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetHotelBrandCode(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.HotelBrandCode = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetHotelBrandName(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.HotelBrandName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetHotelGroup(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.HotelGroup = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetHotelId(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.HotelId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetHotelName(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.HotelName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetHotelNameEn(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.HotelNameEn = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelInfo) SetStar(v string) *HotelOrderInfoQueryResponseBodyModuleHotelInfo {
	s.Star = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo struct {
	// example:
	//
	// 35000
	OrderAmount *int64 `json:"order_amount,omitempty" xml:"order_amount,omitempty"`
	// example:
	//
	// 0
	OtherFee *int64 `json:"other_fee,omitempty" xml:"other_fee,omitempty"`
	// example:
	//
	// 35000
	PayAmount *int64 `json:"pay_amount,omitempty" xml:"pay_amount,omitempty"`
	// example:
	//
	// 5000
	PromotionAmount *int64 `json:"promotion_amount,omitempty" xml:"promotion_amount,omitempty"`
	// example:
	//
	// 35000
	TotalRoomAmount *int64 `json:"total_room_amount,omitempty" xml:"total_room_amount,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo) SetOrderAmount(v int64) *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo {
	s.OrderAmount = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo) SetOtherFee(v int64) *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo {
	s.OtherFee = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo) SetPayAmount(v int64) *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo {
	s.PayAmount = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo) SetPromotionAmount(v int64) *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo {
	s.PromotionAmount = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo) SetTotalRoomAmount(v int64) *HotelOrderInfoQueryResponseBodyModuleHotelOrderFeeInfo {
	s.TotalRoomAmount = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo struct {
	// example:
	//
	// 1000
	CancelFine *int64 `json:"cancel_fine,omitempty" xml:"cancel_fine,omitempty"`
	// example:
	//
	// 1000000002578096
	RefundApplyId *int64 `json:"refund_apply_id,omitempty" xml:"refund_apply_id,omitempty"`
	// example:
	//
	// 1721702353700
	RefundEndTime *int64 `json:"refund_end_time,omitempty" xml:"refund_end_time,omitempty"`
	// example:
	//
	// 34000
	RefundPrice  *int64  `json:"refund_price,omitempty" xml:"refund_price,omitempty"`
	RefundReason *string `json:"refund_reason,omitempty" xml:"refund_reason,omitempty"`
	// example:
	//
	// 1721702353700
	RefundStartTime *int64 `json:"refund_start_time,omitempty" xml:"refund_start_time,omitempty"`
	// example:
	//
	// 5
	RefundType *int32 `json:"refund_type,omitempty" xml:"refund_type,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo) SetCancelFine(v int64) *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo {
	s.CancelFine = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo) SetRefundApplyId(v int64) *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo {
	s.RefundApplyId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo) SetRefundEndTime(v int64) *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo {
	s.RefundEndTime = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo) SetRefundPrice(v int64) *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo {
	s.RefundPrice = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo) SetRefundReason(v string) *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo {
	s.RefundReason = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo) SetRefundStartTime(v int64) *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo {
	s.RefundStartTime = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo) SetRefundType(v int32) *HotelOrderInfoQueryResponseBodyModuleHotelOrderRefundInfo {
	s.RefundType = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo struct {
	// example:
	//
	// 1
	LiveRoomNo   *string                                                           `json:"live_room_no,omitempty" xml:"live_room_no,omitempty"`
	RoomTypeName *string                                                           `json:"room_type_name,omitempty" xml:"room_type_name,omitempty"`
	TraverInfos  []*HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos `json:"traver_infos,omitempty" xml:"traver_infos,omitempty" type:"Repeated"`
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo) SetLiveRoomNo(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo {
	s.LiveRoomNo = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo) SetRoomTypeName(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo {
	s.RoomTypeName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo) SetTraverInfos(v []*HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfo {
	s.TraverInfos = v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos struct {
	ApplyInfo *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo `json:"apply_info,omitempty" xml:"apply_info,omitempty" type:"Struct"`
	// example:
	//
	// 342229200801010023
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 0
	CertType   *int32                                                                    `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	Department *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment `json:"department,omitempty" xml:"department,omitempty" type:"Struct"`
	// example:
	//
	// 1001
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// 13311112222
	Telephone *string `json:"telephone,omitempty" xml:"telephone,omitempty"`
	// example:
	//
	// 1430378
	TravelerId   *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	TravelerName *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
	// example:
	//
	// 1
	TravelerType   *int32                                                                        `json:"traveler_type,omitempty" xml:"traveler_type,omitempty"`
	TripCostCenter *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter `json:"trip_cost_center,omitempty" xml:"trip_cost_center,omitempty" type:"Struct"`
	// example:
	//
	// 0
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetApplyInfo(v *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.ApplyInfo = v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetCertNo(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.CertNo = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetCertType(v int32) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.CertType = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetDepartment(v *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.Department = v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetJobNo(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.JobNo = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetTelephone(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.Telephone = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetTravelerId(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.TravelerId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetTravelerName(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.TravelerName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetTravelerType(v int32) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.TravelerType = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetTripCostCenter(v *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.TripCostCenter = v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos) SetUserType(v int32) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfos {
	s.UserType = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo struct {
	// example:
	//
	// 1001
	ApplyBusinessId   *string `json:"apply_business_id,omitempty" xml:"apply_business_id,omitempty"`
	ApplyBusinessName *string `json:"apply_business_name,omitempty" xml:"apply_business_name,omitempty"`
	// example:
	//
	// 1424031910085891196
	ApplyId     *string                                                                               `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ExceedApply []*HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply `json:"exceed_apply,omitempty" xml:"exceed_apply,omitempty" type:"Repeated"`
	// example:
	//
	// ef5e74dc1f1640b08858fb043f64e477-8
	ItineraryNo *string `json:"itinerary_no,omitempty" xml:"itinerary_no,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo) SetApplyBusinessId(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo {
	s.ApplyBusinessId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo) SetApplyBusinessName(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo {
	s.ApplyBusinessName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo) SetApplyId(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo {
	s.ApplyId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo) SetExceedApply(v []*HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo {
	s.ExceedApply = v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo) SetItineraryNo(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfo {
	s.ItineraryNo = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply struct {
	ExceedReason *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	// example:
	//
	// 16
	ExceedType *int32 `json:"exceed_type,omitempty" xml:"exceed_type,omitempty"`
	// example:
	//
	// 3321
	FlowNo *int64 `json:"flow_no,omitempty" xml:"flow_no,omitempty"`
	// example:
	//
	// 60853
	Id *int64 `json:"id,omitempty" xml:"id,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply) SetExceedReason(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply {
	s.ExceedReason = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply) SetExceedType(v int32) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply {
	s.ExceedType = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply) SetFlowNo(v int64) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply {
	s.FlowNo = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply) SetId(v int64) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosApplyInfoExceedApply {
	s.Id = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment struct {
	// example:
	//
	// 0rCUI20hjOsk0sTwlu
	CascadeDeptMask *string `json:"cascade_dept_mask,omitempty" xml:"cascade_dept_mask,omitempty"`
	CascadeDeptName *string `json:"cascade_dept_name,omitempty" xml:"cascade_dept_name,omitempty"`
	// example:
	//
	// 35
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// example:
	//
	// 330000001815
	OutDepartId *string `json:"out_depart_id,omitempty" xml:"out_depart_id,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment) SetCascadeDeptMask(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment {
	s.CascadeDeptMask = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment) SetCascadeDeptName(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment {
	s.CascadeDeptName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment) SetDepartId(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment {
	s.DepartId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment) SetDepartName(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment {
	s.DepartName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment) SetOutDepartId(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosDepartment {
	s.OutDepartId = &v
	return s
}

type HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter struct {
	// example:
	//
	// 323431
	CostCenterCode *string `json:"cost_center_code,omitempty" xml:"cost_center_code,omitempty"`
	// example:
	//
	// 2312
	CostCenterId   *string `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// {"extraKey":"extraVal"}
	ExternalExtField *string `json:"external_ext_field,omitempty" xml:"external_ext_field,omitempty"`
	// example:
	//
	// 1
	FeeType *int32 `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	// example:
	//
	// 123332
	InvoiceId    *int64  `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// 1002
	ProjectCode  *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) SetCostCenterCode(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter {
	s.CostCenterCode = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) SetCostCenterId(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter {
	s.CostCenterId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) SetCostCenterName(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter {
	s.CostCenterName = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) SetExternalExtField(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter {
	s.ExternalExtField = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) SetFeeType(v int32) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter {
	s.FeeType = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) SetInvoiceId(v int64) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter {
	s.InvoiceId = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) SetInvoiceTitle(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter {
	s.InvoiceTitle = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) SetProjectCode(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter {
	s.ProjectCode = &v
	return s
}

func (s *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter) SetProjectTitle(v string) *HotelOrderInfoQueryResponseBodyModuleRoomTraverInfoTraverInfosTripCostCenter {
	s.ProjectTitle = &v
	return s
}

type HotelOrderInfoQueryResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelOrderInfoQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelOrderInfoQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderInfoQueryResponse) GoString() string {
	return s.String()
}

func (s *HotelOrderInfoQueryResponse) SetHeaders(v map[string]*string) *HotelOrderInfoQueryResponse {
	s.Headers = v
	return s
}

func (s *HotelOrderInfoQueryResponse) SetStatusCode(v int32) *HotelOrderInfoQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelOrderInfoQueryResponse) SetBody(v *HotelOrderInfoQueryResponseBody) *HotelOrderInfoQueryResponse {
	s.Body = v
	return s
}

type HotelOrderListQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s HotelOrderListQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderListQueryHeaders) GoString() string {
	return s.String()
}

func (s *HotelOrderListQueryHeaders) SetCommonHeaders(v map[string]*string) *HotelOrderListQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelOrderListQueryHeaders) SetXAcsBtripSoCorpToken(v string) *HotelOrderListQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type HotelOrderListQueryRequest struct {
	// example:
	//
	// false
	AllApply *bool `json:"all_apply,omitempty" xml:"all_apply,omitempty"`
	// example:
	//
	// 165782
	ApplyId  *int64  `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	DepartId *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	EndTime *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 1
	Page *int32 `json:"page,omitempty" xml:"page,omitempty"`
	// example:
	//
	// 50
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	StartTime *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// CS154JKOI
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	UpdateEndTime *string `json:"update_end_time,omitempty" xml:"update_end_time,omitempty"`
	// example:
	//
	// 2022-07-01 00:00:00
	UpdateStartTime *string `json:"update_start_time,omitempty" xml:"update_start_time,omitempty"`
	UserId          *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s HotelOrderListQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderListQueryRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderListQueryRequest) SetAllApply(v bool) *HotelOrderListQueryRequest {
	s.AllApply = &v
	return s
}

func (s *HotelOrderListQueryRequest) SetApplyId(v int64) *HotelOrderListQueryRequest {
	s.ApplyId = &v
	return s
}

func (s *HotelOrderListQueryRequest) SetDepartId(v string) *HotelOrderListQueryRequest {
	s.DepartId = &v
	return s
}

func (s *HotelOrderListQueryRequest) SetEndTime(v string) *HotelOrderListQueryRequest {
	s.EndTime = &v
	return s
}

func (s *HotelOrderListQueryRequest) SetPage(v int32) *HotelOrderListQueryRequest {
	s.Page = &v
	return s
}

func (s *HotelOrderListQueryRequest) SetPageSize(v int32) *HotelOrderListQueryRequest {
	s.PageSize = &v
	return s
}

func (s *HotelOrderListQueryRequest) SetStartTime(v string) *HotelOrderListQueryRequest {
	s.StartTime = &v
	return s
}

func (s *HotelOrderListQueryRequest) SetThirdpartApplyId(v string) *HotelOrderListQueryRequest {
	s.ThirdpartApplyId = &v
	return s
}

func (s *HotelOrderListQueryRequest) SetUpdateEndTime(v string) *HotelOrderListQueryRequest {
	s.UpdateEndTime = &v
	return s
}

func (s *HotelOrderListQueryRequest) SetUpdateStartTime(v string) *HotelOrderListQueryRequest {
	s.UpdateStartTime = &v
	return s
}

func (s *HotelOrderListQueryRequest) SetUserId(v string) *HotelOrderListQueryRequest {
	s.UserId = &v
	return s
}

type HotelOrderListQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code     *string                                  `json:"code,omitempty" xml:"code,omitempty"`
	Message  *string                                  `json:"message,omitempty" xml:"message,omitempty"`
	Module   []*HotelOrderListQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	PageInfo *HotelOrderListQueryResponseBodyPageInfo `json:"page_info,omitempty" xml:"page_info,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelOrderListQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderListQueryResponseBody) GoString() string {
	return s.String()
}

func (s *HotelOrderListQueryResponseBody) SetCode(v string) *HotelOrderListQueryResponseBody {
	s.Code = &v
	return s
}

func (s *HotelOrderListQueryResponseBody) SetMessage(v string) *HotelOrderListQueryResponseBody {
	s.Message = &v
	return s
}

func (s *HotelOrderListQueryResponseBody) SetModule(v []*HotelOrderListQueryResponseBodyModule) *HotelOrderListQueryResponseBody {
	s.Module = v
	return s
}

func (s *HotelOrderListQueryResponseBody) SetPageInfo(v *HotelOrderListQueryResponseBodyPageInfo) *HotelOrderListQueryResponseBody {
	s.PageInfo = v
	return s
}

func (s *HotelOrderListQueryResponseBody) SetRequestId(v string) *HotelOrderListQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelOrderListQueryResponseBody) SetSuccess(v bool) *HotelOrderListQueryResponseBody {
	s.Success = &v
	return s
}

func (s *HotelOrderListQueryResponseBody) SetTraceId(v string) *HotelOrderListQueryResponseBody {
	s.TraceId = &v
	return s
}

type HotelOrderListQueryResponseBodyModule struct {
	// example:
	//
	// 22678
	ApplyId    *int64  `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	BtripTitle *string `json:"btrip_title,omitempty" xml:"btrip_title,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	CheckOut    *string                                          `json:"check_out,omitempty" xml:"check_out,omitempty"`
	City        *string                                          `json:"city,omitempty" xml:"city,omitempty"`
	CityAdCode  *string                                          `json:"city_ad_code,omitempty" xml:"city_ad_code,omitempty"`
	ContactName *string                                          `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	CorpId      *string                                          `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName    *string                                          `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	CostCenter  *HotelOrderListQueryResponseBodyModuleCostCenter `json:"cost_center,omitempty" xml:"cost_center,omitempty" type:"Struct"`
	DepartId    *string                                          `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName  *string                                          `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	ExtendField *string                                          `json:"extend_field,omitempty" xml:"extend_field,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtModified *string `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	Guest       *string `json:"guest,omitempty" xml:"guest,omitempty"`
	HotelName   *string `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	// example:
	//
	// 11
	HotelSupportVatInvoiceType *int32 `json:"hotel_support_vat_invoice_type,omitempty" xml:"hotel_support_vat_invoice_type,omitempty"`
	// example:
	//
	// 13764
	Id      *int64                                        `json:"id,omitempty" xml:"id,omitempty"`
	Invoice *HotelOrderListQueryResponseBodyModuleInvoice `json:"invoice,omitempty" xml:"invoice,omitempty" type:"Struct"`
	// example:
	//
	// 4
	Night *int32 `json:"night,omitempty" xml:"night,omitempty"`
	// example:
	//
	// 1
	OrderStatus     *int32  `json:"order_status,omitempty" xml:"order_status,omitempty"`
	OrderStatusDesc *string `json:"order_status_desc,omitempty" xml:"order_status_desc,omitempty"`
	// example:
	//
	// 1
	OrderType     *int32                                                `json:"order_type,omitempty" xml:"order_type,omitempty"`
	OrderTypeDesc *string                                               `json:"order_type_desc,omitempty" xml:"order_type_desc,omitempty"`
	PriceInfoList []*HotelOrderListQueryResponseBodyModulePriceInfoList `json:"price_info_list,omitempty" xml:"price_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// CS-PROJECTCODE
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	// example:
	//
	// 13631
	ProjectId    *int64  `json:"project_id,omitempty" xml:"project_id,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// example:
	//
	// 4
	RoomNum  *int32  `json:"room_num,omitempty" xml:"room_num,omitempty"`
	RoomType *string `json:"room_type,omitempty" xml:"room_type,omitempty"`
	// example:
	//
	// CS-THIRDAPPLY
	ThirdpartApplyId    *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	// example:
	//
	// CS-ITINEARY
	ThirdpartItineraryId *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// CS-THIRDPROJECT
	ThirdpartProjectId *string                                                   `json:"thirdpart_project_id,omitempty" xml:"thirdpart_project_id,omitempty"`
	UserAffiliateList  []*HotelOrderListQueryResponseBodyModuleUserAffiliateList `json:"user_affiliate_list,omitempty" xml:"user_affiliate_list,omitempty" type:"Repeated"`
	UserId             *string                                                   `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName           *string                                                   `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s HotelOrderListQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderListQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelOrderListQueryResponseBodyModule) SetApplyId(v int64) *HotelOrderListQueryResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetBtripTitle(v string) *HotelOrderListQueryResponseBodyModule {
	s.BtripTitle = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetCheckIn(v string) *HotelOrderListQueryResponseBodyModule {
	s.CheckIn = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetCheckOut(v string) *HotelOrderListQueryResponseBodyModule {
	s.CheckOut = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetCity(v string) *HotelOrderListQueryResponseBodyModule {
	s.City = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetCityAdCode(v string) *HotelOrderListQueryResponseBodyModule {
	s.CityAdCode = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetContactName(v string) *HotelOrderListQueryResponseBodyModule {
	s.ContactName = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetCorpId(v string) *HotelOrderListQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetCorpName(v string) *HotelOrderListQueryResponseBodyModule {
	s.CorpName = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetCostCenter(v *HotelOrderListQueryResponseBodyModuleCostCenter) *HotelOrderListQueryResponseBodyModule {
	s.CostCenter = v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetDepartId(v string) *HotelOrderListQueryResponseBodyModule {
	s.DepartId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetDepartName(v string) *HotelOrderListQueryResponseBodyModule {
	s.DepartName = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetExtendField(v string) *HotelOrderListQueryResponseBodyModule {
	s.ExtendField = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetGmtCreate(v string) *HotelOrderListQueryResponseBodyModule {
	s.GmtCreate = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetGmtModified(v string) *HotelOrderListQueryResponseBodyModule {
	s.GmtModified = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetGuest(v string) *HotelOrderListQueryResponseBodyModule {
	s.Guest = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetHotelName(v string) *HotelOrderListQueryResponseBodyModule {
	s.HotelName = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetHotelSupportVatInvoiceType(v int32) *HotelOrderListQueryResponseBodyModule {
	s.HotelSupportVatInvoiceType = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetId(v int64) *HotelOrderListQueryResponseBodyModule {
	s.Id = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetInvoice(v *HotelOrderListQueryResponseBodyModuleInvoice) *HotelOrderListQueryResponseBodyModule {
	s.Invoice = v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetNight(v int32) *HotelOrderListQueryResponseBodyModule {
	s.Night = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetOrderStatus(v int32) *HotelOrderListQueryResponseBodyModule {
	s.OrderStatus = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetOrderStatusDesc(v string) *HotelOrderListQueryResponseBodyModule {
	s.OrderStatusDesc = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetOrderType(v int32) *HotelOrderListQueryResponseBodyModule {
	s.OrderType = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetOrderTypeDesc(v string) *HotelOrderListQueryResponseBodyModule {
	s.OrderTypeDesc = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetPriceInfoList(v []*HotelOrderListQueryResponseBodyModulePriceInfoList) *HotelOrderListQueryResponseBodyModule {
	s.PriceInfoList = v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetProjectCode(v string) *HotelOrderListQueryResponseBodyModule {
	s.ProjectCode = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetProjectId(v int64) *HotelOrderListQueryResponseBodyModule {
	s.ProjectId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetProjectTitle(v string) *HotelOrderListQueryResponseBodyModule {
	s.ProjectTitle = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetRoomNum(v int32) *HotelOrderListQueryResponseBodyModule {
	s.RoomNum = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetRoomType(v string) *HotelOrderListQueryResponseBodyModule {
	s.RoomType = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetThirdpartApplyId(v string) *HotelOrderListQueryResponseBodyModule {
	s.ThirdpartApplyId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetThirdpartBusinessId(v string) *HotelOrderListQueryResponseBodyModule {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetThirdpartItineraryId(v string) *HotelOrderListQueryResponseBodyModule {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetThirdpartProjectId(v string) *HotelOrderListQueryResponseBodyModule {
	s.ThirdpartProjectId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetUserAffiliateList(v []*HotelOrderListQueryResponseBodyModuleUserAffiliateList) *HotelOrderListQueryResponseBodyModule {
	s.UserAffiliateList = v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetUserId(v string) *HotelOrderListQueryResponseBodyModule {
	s.UserId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModule) SetUserName(v string) *HotelOrderListQueryResponseBodyModule {
	s.UserName = &v
	return s
}

type HotelOrderListQueryResponseBodyModuleCostCenter struct {
	CorpId *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	// example:
	//
	// 14668
	Id   *int64  `json:"id,omitempty" xml:"id,omitempty"`
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// CS-PNUY
	Number *string `json:"number,omitempty" xml:"number,omitempty"`
}

func (s HotelOrderListQueryResponseBodyModuleCostCenter) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderListQueryResponseBodyModuleCostCenter) GoString() string {
	return s.String()
}

func (s *HotelOrderListQueryResponseBodyModuleCostCenter) SetCorpId(v string) *HotelOrderListQueryResponseBodyModuleCostCenter {
	s.CorpId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModuleCostCenter) SetId(v int64) *HotelOrderListQueryResponseBodyModuleCostCenter {
	s.Id = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModuleCostCenter) SetName(v string) *HotelOrderListQueryResponseBodyModuleCostCenter {
	s.Name = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModuleCostCenter) SetNumber(v string) *HotelOrderListQueryResponseBodyModuleCostCenter {
	s.Number = &v
	return s
}

type HotelOrderListQueryResponseBodyModuleInvoice struct {
	// example:
	//
	// 133568
	Id *int64 `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// 1
	InvoiceType *int32  `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	Title       *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s HotelOrderListQueryResponseBodyModuleInvoice) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderListQueryResponseBodyModuleInvoice) GoString() string {
	return s.String()
}

func (s *HotelOrderListQueryResponseBodyModuleInvoice) SetId(v int64) *HotelOrderListQueryResponseBodyModuleInvoice {
	s.Id = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModuleInvoice) SetInvoiceType(v int32) *HotelOrderListQueryResponseBodyModuleInvoice {
	s.InvoiceType = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModuleInvoice) SetTitle(v string) *HotelOrderListQueryResponseBodyModuleInvoice {
	s.Title = &v
	return s
}

type HotelOrderListQueryResponseBodyModulePriceInfoList struct {
	// example:
	//
	// 1
	CategoryCode *int32 `json:"category_code,omitempty" xml:"category_code,omitempty"`
	// example:
	//
	// 1
	CategoryType *int32 `json:"category_type,omitempty" xml:"category_type,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtCreate     *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 1
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 100
	Price *float64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// cs1546728
	TradeId *string `json:"trade_id,omitempty" xml:"trade_id,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s HotelOrderListQueryResponseBodyModulePriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderListQueryResponseBodyModulePriceInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderListQueryResponseBodyModulePriceInfoList) SetCategoryCode(v int32) *HotelOrderListQueryResponseBodyModulePriceInfoList {
	s.CategoryCode = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModulePriceInfoList) SetCategoryType(v int32) *HotelOrderListQueryResponseBodyModulePriceInfoList {
	s.CategoryType = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModulePriceInfoList) SetGmtCreate(v string) *HotelOrderListQueryResponseBodyModulePriceInfoList {
	s.GmtCreate = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModulePriceInfoList) SetPassengerName(v string) *HotelOrderListQueryResponseBodyModulePriceInfoList {
	s.PassengerName = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModulePriceInfoList) SetPayType(v int32) *HotelOrderListQueryResponseBodyModulePriceInfoList {
	s.PayType = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModulePriceInfoList) SetPrice(v float64) *HotelOrderListQueryResponseBodyModulePriceInfoList {
	s.Price = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModulePriceInfoList) SetTradeId(v string) *HotelOrderListQueryResponseBodyModulePriceInfoList {
	s.TradeId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModulePriceInfoList) SetType(v int32) *HotelOrderListQueryResponseBodyModulePriceInfoList {
	s.Type = &v
	return s
}

type HotelOrderListQueryResponseBodyModuleUserAffiliateList struct {
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s HotelOrderListQueryResponseBodyModuleUserAffiliateList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderListQueryResponseBodyModuleUserAffiliateList) GoString() string {
	return s.String()
}

func (s *HotelOrderListQueryResponseBodyModuleUserAffiliateList) SetUserId(v string) *HotelOrderListQueryResponseBodyModuleUserAffiliateList {
	s.UserId = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyModuleUserAffiliateList) SetUserName(v string) *HotelOrderListQueryResponseBodyModuleUserAffiliateList {
	s.UserName = &v
	return s
}

type HotelOrderListQueryResponseBodyPageInfo struct {
	// example:
	//
	// 1
	Page *int32 `json:"page,omitempty" xml:"page,omitempty"`
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 50
	TotalNumber *int32 `json:"total_number,omitempty" xml:"total_number,omitempty"`
}

func (s HotelOrderListQueryResponseBodyPageInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderListQueryResponseBodyPageInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderListQueryResponseBodyPageInfo) SetPage(v int32) *HotelOrderListQueryResponseBodyPageInfo {
	s.Page = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyPageInfo) SetPageSize(v int32) *HotelOrderListQueryResponseBodyPageInfo {
	s.PageSize = &v
	return s
}

func (s *HotelOrderListQueryResponseBodyPageInfo) SetTotalNumber(v int32) *HotelOrderListQueryResponseBodyPageInfo {
	s.TotalNumber = &v
	return s
}

type HotelOrderListQueryResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelOrderListQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelOrderListQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderListQueryResponse) GoString() string {
	return s.String()
}

func (s *HotelOrderListQueryResponse) SetHeaders(v map[string]*string) *HotelOrderListQueryResponse {
	s.Headers = v
	return s
}

func (s *HotelOrderListQueryResponse) SetStatusCode(v int32) *HotelOrderListQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelOrderListQueryResponse) SetBody(v *HotelOrderListQueryResponseBody) *HotelOrderListQueryResponse {
	s.Body = v
	return s
}

type HotelOrderPayHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelOrderPayHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPayHeaders) GoString() string {
	return s.String()
}

func (s *HotelOrderPayHeaders) SetCommonHeaders(v map[string]*string) *HotelOrderPayHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelOrderPayHeaders) SetXAcsBtripCorpToken(v string) *HotelOrderPayHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelOrderPayRequest struct {
	// 供应商订单号（取自创单返回的订单号）
	//
	// This parameter is required.
	//
	// example:
	//
	// 1002202194207077022
	BtripOrderId *int64 `json:"btrip_order_id,omitempty" xml:"btrip_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 23918781
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	CompanyPayFee *int64 `json:"company_pay_fee,omitempty" xml:"company_pay_fee,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	PersonPayFee *int64 `json:"person_pay_fee,omitempty" xml:"person_pay_fee,omitempty"`
	// example:
	//
	// demo
	ThirdPayAccount *string `json:"third_pay_account,omitempty" xml:"third_pay_account,omitempty"`
	// example:
	//
	// demo
	ThirdTradeNo *string `json:"third_trade_no,omitempty" xml:"third_trade_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
}

func (s HotelOrderPayRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPayRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderPayRequest) SetBtripOrderId(v int64) *HotelOrderPayRequest {
	s.BtripOrderId = &v
	return s
}

func (s *HotelOrderPayRequest) SetBtripUserId(v string) *HotelOrderPayRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelOrderPayRequest) SetCompanyPayFee(v int64) *HotelOrderPayRequest {
	s.CompanyPayFee = &v
	return s
}

func (s *HotelOrderPayRequest) SetPersonPayFee(v int64) *HotelOrderPayRequest {
	s.PersonPayFee = &v
	return s
}

func (s *HotelOrderPayRequest) SetThirdPayAccount(v string) *HotelOrderPayRequest {
	s.ThirdPayAccount = &v
	return s
}

func (s *HotelOrderPayRequest) SetThirdTradeNo(v string) *HotelOrderPayRequest {
	s.ThirdTradeNo = &v
	return s
}

func (s *HotelOrderPayRequest) SetTotalPrice(v int64) *HotelOrderPayRequest {
	s.TotalPrice = &v
	return s
}

type HotelOrderPayResponseBody struct {
	// example:
	//
	// 0
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// successful
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// true
	Module *bool `json:"module,omitempty" xml:"module,omitempty"`
	// requestId
	//
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210e842b16611337974412836dae27
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelOrderPayResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPayResponseBody) GoString() string {
	return s.String()
}

func (s *HotelOrderPayResponseBody) SetCode(v string) *HotelOrderPayResponseBody {
	s.Code = &v
	return s
}

func (s *HotelOrderPayResponseBody) SetMessage(v string) *HotelOrderPayResponseBody {
	s.Message = &v
	return s
}

func (s *HotelOrderPayResponseBody) SetModule(v bool) *HotelOrderPayResponseBody {
	s.Module = &v
	return s
}

func (s *HotelOrderPayResponseBody) SetRequestId(v string) *HotelOrderPayResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelOrderPayResponseBody) SetSuccess(v bool) *HotelOrderPayResponseBody {
	s.Success = &v
	return s
}

func (s *HotelOrderPayResponseBody) SetTraceId(v string) *HotelOrderPayResponseBody {
	s.TraceId = &v
	return s
}

type HotelOrderPayResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelOrderPayResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelOrderPayResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPayResponse) GoString() string {
	return s.String()
}

func (s *HotelOrderPayResponse) SetHeaders(v map[string]*string) *HotelOrderPayResponse {
	s.Headers = v
	return s
}

func (s *HotelOrderPayResponse) SetStatusCode(v int32) *HotelOrderPayResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelOrderPayResponse) SetBody(v *HotelOrderPayResponseBody) *HotelOrderPayResponse {
	s.Body = v
	return s
}

type HotelOrderPreValidateHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelOrderPreValidateHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateHeaders) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateHeaders) SetCommonHeaders(v map[string]*string) *HotelOrderPreValidateHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelOrderPreValidateHeaders) SetXAcsBtripCorpToken(v string) *HotelOrderPreValidateHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelOrderPreValidateRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 23141
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-05-15
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-05-15
	CheckOut *string `json:"check_out,omitempty" xml:"check_out,omitempty"`
	// This parameter is required.
	DailyList []*HotelOrderPreValidateRequestDailyList `json:"daily_list,omitempty" xml:"daily_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 612673015638
	ItemId *int64 `json:"item_id,omitempty" xml:"item_id,omitempty"`
	// example:
	//
	// 1
	NumberOfAdultsPerRoom *int32                                          `json:"number_of_adults_per_room,omitempty" xml:"number_of_adults_per_room,omitempty"`
	OccupantInfoList      []*HotelOrderPreValidateRequestOccupantInfoList `json:"occupant_info_list,omitempty" xml:"occupant_info_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 239872781
	RatePlanId *int64 `json:"rate_plan_id,omitempty" xml:"rate_plan_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 71652158
	RoomId *int64 `json:"room_id,omitempty" xml:"room_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	RoomNum *int32 `json:"room_num,omitempty" xml:"room_num,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1000
	SearchRoomPrice *int64 `json:"search_room_price,omitempty" xml:"search_room_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2088441675613762
	SellerId *int64 `json:"seller_id,omitempty" xml:"seller_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 52302073
	Shid *int64 `json:"shid,omitempty" xml:"shid,omitempty"`
}

func (s HotelOrderPreValidateRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateRequest) SetBtripUserId(v string) *HotelOrderPreValidateRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelOrderPreValidateRequest) SetCheckIn(v string) *HotelOrderPreValidateRequest {
	s.CheckIn = &v
	return s
}

func (s *HotelOrderPreValidateRequest) SetCheckOut(v string) *HotelOrderPreValidateRequest {
	s.CheckOut = &v
	return s
}

func (s *HotelOrderPreValidateRequest) SetDailyList(v []*HotelOrderPreValidateRequestDailyList) *HotelOrderPreValidateRequest {
	s.DailyList = v
	return s
}

func (s *HotelOrderPreValidateRequest) SetItemId(v int64) *HotelOrderPreValidateRequest {
	s.ItemId = &v
	return s
}

func (s *HotelOrderPreValidateRequest) SetNumberOfAdultsPerRoom(v int32) *HotelOrderPreValidateRequest {
	s.NumberOfAdultsPerRoom = &v
	return s
}

func (s *HotelOrderPreValidateRequest) SetOccupantInfoList(v []*HotelOrderPreValidateRequestOccupantInfoList) *HotelOrderPreValidateRequest {
	s.OccupantInfoList = v
	return s
}

func (s *HotelOrderPreValidateRequest) SetRatePlanId(v int64) *HotelOrderPreValidateRequest {
	s.RatePlanId = &v
	return s
}

func (s *HotelOrderPreValidateRequest) SetRoomId(v int64) *HotelOrderPreValidateRequest {
	s.RoomId = &v
	return s
}

func (s *HotelOrderPreValidateRequest) SetRoomNum(v int32) *HotelOrderPreValidateRequest {
	s.RoomNum = &v
	return s
}

func (s *HotelOrderPreValidateRequest) SetSearchRoomPrice(v int64) *HotelOrderPreValidateRequest {
	s.SearchRoomPrice = &v
	return s
}

func (s *HotelOrderPreValidateRequest) SetSellerId(v int64) *HotelOrderPreValidateRequest {
	s.SellerId = &v
	return s
}

func (s *HotelOrderPreValidateRequest) SetShid(v int64) *HotelOrderPreValidateRequest {
	s.Shid = &v
	return s
}

type HotelOrderPreValidateRequestDailyList struct {
	// example:
	//
	// 1
	Board *string `json:"board,omitempty" xml:"board,omitempty"`
	// example:
	//
	// 100
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 2022-05-15
	RateStartTime *string `json:"rate_start_time,omitempty" xml:"rate_start_time,omitempty"`
	// example:
	//
	// 10
	RoomCount *int32 `json:"room_count,omitempty" xml:"room_count,omitempty"`
}

func (s HotelOrderPreValidateRequestDailyList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateRequestDailyList) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateRequestDailyList) SetBoard(v string) *HotelOrderPreValidateRequestDailyList {
	s.Board = &v
	return s
}

func (s *HotelOrderPreValidateRequestDailyList) SetPrice(v int64) *HotelOrderPreValidateRequestDailyList {
	s.Price = &v
	return s
}

func (s *HotelOrderPreValidateRequestDailyList) SetRateStartTime(v string) *HotelOrderPreValidateRequestDailyList {
	s.RateStartTime = &v
	return s
}

func (s *HotelOrderPreValidateRequestDailyList) SetRoomCount(v int32) *HotelOrderPreValidateRequestDailyList {
	s.RoomCount = &v
	return s
}

type HotelOrderPreValidateRequestOccupantInfoList struct {
	// example:
	//
	// 232871871822
	CardNo *string `json:"card_no,omitempty" xml:"card_no,omitempty"`
	// example:
	//
	// 1
	CardType *int32  `json:"card_type,omitempty" xml:"card_type,omitempty"`
	Name     *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// 12392827121
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// 128918
	StaffNo *string `json:"staff_no,omitempty" xml:"staff_no,omitempty"`
	// example:
	//
	// 1
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s HotelOrderPreValidateRequestOccupantInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateRequestOccupantInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateRequestOccupantInfoList) SetCardNo(v string) *HotelOrderPreValidateRequestOccupantInfoList {
	s.CardNo = &v
	return s
}

func (s *HotelOrderPreValidateRequestOccupantInfoList) SetCardType(v int32) *HotelOrderPreValidateRequestOccupantInfoList {
	s.CardType = &v
	return s
}

func (s *HotelOrderPreValidateRequestOccupantInfoList) SetName(v string) *HotelOrderPreValidateRequestOccupantInfoList {
	s.Name = &v
	return s
}

func (s *HotelOrderPreValidateRequestOccupantInfoList) SetPhone(v string) *HotelOrderPreValidateRequestOccupantInfoList {
	s.Phone = &v
	return s
}

func (s *HotelOrderPreValidateRequestOccupantInfoList) SetStaffNo(v string) *HotelOrderPreValidateRequestOccupantInfoList {
	s.StaffNo = &v
	return s
}

func (s *HotelOrderPreValidateRequestOccupantInfoList) SetUserType(v int32) *HotelOrderPreValidateRequestOccupantInfoList {
	s.UserType = &v
	return s
}

type HotelOrderPreValidateShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 23141
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-05-15
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-05-15
	CheckOut *string `json:"check_out,omitempty" xml:"check_out,omitempty"`
	// This parameter is required.
	DailyListShrink *string `json:"daily_list,omitempty" xml:"daily_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 612673015638
	ItemId *int64 `json:"item_id,omitempty" xml:"item_id,omitempty"`
	// example:
	//
	// 1
	NumberOfAdultsPerRoom  *int32  `json:"number_of_adults_per_room,omitempty" xml:"number_of_adults_per_room,omitempty"`
	OccupantInfoListShrink *string `json:"occupant_info_list,omitempty" xml:"occupant_info_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 239872781
	RatePlanId *int64 `json:"rate_plan_id,omitempty" xml:"rate_plan_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 71652158
	RoomId *int64 `json:"room_id,omitempty" xml:"room_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	RoomNum *int32 `json:"room_num,omitempty" xml:"room_num,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1000
	SearchRoomPrice *int64 `json:"search_room_price,omitempty" xml:"search_room_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2088441675613762
	SellerId *int64 `json:"seller_id,omitempty" xml:"seller_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 52302073
	Shid *int64 `json:"shid,omitempty" xml:"shid,omitempty"`
}

func (s HotelOrderPreValidateShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateShrinkRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateShrinkRequest) SetBtripUserId(v string) *HotelOrderPreValidateShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetCheckIn(v string) *HotelOrderPreValidateShrinkRequest {
	s.CheckIn = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetCheckOut(v string) *HotelOrderPreValidateShrinkRequest {
	s.CheckOut = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetDailyListShrink(v string) *HotelOrderPreValidateShrinkRequest {
	s.DailyListShrink = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetItemId(v int64) *HotelOrderPreValidateShrinkRequest {
	s.ItemId = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetNumberOfAdultsPerRoom(v int32) *HotelOrderPreValidateShrinkRequest {
	s.NumberOfAdultsPerRoom = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetOccupantInfoListShrink(v string) *HotelOrderPreValidateShrinkRequest {
	s.OccupantInfoListShrink = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetRatePlanId(v int64) *HotelOrderPreValidateShrinkRequest {
	s.RatePlanId = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetRoomId(v int64) *HotelOrderPreValidateShrinkRequest {
	s.RoomId = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetRoomNum(v int32) *HotelOrderPreValidateShrinkRequest {
	s.RoomNum = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetSearchRoomPrice(v int64) *HotelOrderPreValidateShrinkRequest {
	s.SearchRoomPrice = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetSellerId(v int64) *HotelOrderPreValidateShrinkRequest {
	s.SellerId = &v
	return s
}

func (s *HotelOrderPreValidateShrinkRequest) SetShid(v int64) *HotelOrderPreValidateShrinkRequest {
	s.Shid = &v
	return s
}

type HotelOrderPreValidateResponseBody struct {
	// example:
	//
	// 0
	Code    *string                                  `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                  `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelOrderPreValidateResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelOrderPreValidateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateResponseBody) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateResponseBody) SetCode(v string) *HotelOrderPreValidateResponseBody {
	s.Code = &v
	return s
}

func (s *HotelOrderPreValidateResponseBody) SetMessage(v string) *HotelOrderPreValidateResponseBody {
	s.Message = &v
	return s
}

func (s *HotelOrderPreValidateResponseBody) SetModule(v *HotelOrderPreValidateResponseBodyModule) *HotelOrderPreValidateResponseBody {
	s.Module = v
	return s
}

func (s *HotelOrderPreValidateResponseBody) SetRequestId(v string) *HotelOrderPreValidateResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelOrderPreValidateResponseBody) SetSuccess(v bool) *HotelOrderPreValidateResponseBody {
	s.Success = &v
	return s
}

func (s *HotelOrderPreValidateResponseBody) SetTraceId(v string) *HotelOrderPreValidateResponseBody {
	s.TraceId = &v
	return s
}

type HotelOrderPreValidateResponseBodyModule struct {
	// example:
	//
	// demo
	ExtendInfo *string `json:"extend_info,omitempty" xml:"extend_info,omitempty"`
	// example:
	//
	// fb5e1abf33924b6c912bd6d80deec0eb-4
	ItineraryNo   *string                                                 `json:"itinerary_no,omitempty" xml:"itinerary_no,omitempty"`
	PromotionInfo *HotelOrderPreValidateResponseBodyModulePromotionInfo   `json:"promotion_info,omitempty" xml:"promotion_info,omitempty" type:"Struct"`
	RatePlanDaily []*HotelOrderPreValidateResponseBodyModuleRatePlanDaily `json:"rate_plan_daily,omitempty" xml:"rate_plan_daily,omitempty" type:"Repeated"`
	// example:
	//
	// 5314280514218
	RatePlanId   *int64                                               `json:"rate_plan_id,omitempty" xml:"rate_plan_id,omitempty"`
	RatePlanInfo *HotelOrderPreValidateResponseBodyModuleRatePlanInfo `json:"rate_plan_info,omitempty" xml:"rate_plan_info,omitempty" type:"Struct"`
	// example:
	//
	// nonUltron_1673575241156_d91ea8ad16735752359161037bf6cf_c54d3768312a4b249b719f126377bf82
	ValidateResKey *string `json:"validate_res_key,omitempty" xml:"validate_res_key,omitempty"`
}

func (s HotelOrderPreValidateResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateResponseBodyModule) SetExtendInfo(v string) *HotelOrderPreValidateResponseBodyModule {
	s.ExtendInfo = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModule) SetItineraryNo(v string) *HotelOrderPreValidateResponseBodyModule {
	s.ItineraryNo = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModule) SetPromotionInfo(v *HotelOrderPreValidateResponseBodyModulePromotionInfo) *HotelOrderPreValidateResponseBodyModule {
	s.PromotionInfo = v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModule) SetRatePlanDaily(v []*HotelOrderPreValidateResponseBodyModuleRatePlanDaily) *HotelOrderPreValidateResponseBodyModule {
	s.RatePlanDaily = v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModule) SetRatePlanId(v int64) *HotelOrderPreValidateResponseBodyModule {
	s.RatePlanId = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModule) SetRatePlanInfo(v *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) *HotelOrderPreValidateResponseBodyModule {
	s.RatePlanInfo = v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModule) SetValidateResKey(v string) *HotelOrderPreValidateResponseBodyModule {
	s.ValidateResKey = &v
	return s
}

type HotelOrderPreValidateResponseBodyModulePromotionInfo struct {
	ExtAttrMap              map[string]*string                                                             `json:"ext_attr_map,omitempty" xml:"ext_attr_map,omitempty"`
	PromotionDetailInfoList []*HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList `json:"promotion_detail_info_list,omitempty" xml:"promotion_detail_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 100
	PromotionTotalPrice *int64 `json:"promotion_total_price,omitempty" xml:"promotion_total_price,omitempty"`
}

func (s HotelOrderPreValidateResponseBodyModulePromotionInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateResponseBodyModulePromotionInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateResponseBodyModulePromotionInfo) SetExtAttrMap(v map[string]*string) *HotelOrderPreValidateResponseBodyModulePromotionInfo {
	s.ExtAttrMap = v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModulePromotionInfo) SetPromotionDetailInfoList(v []*HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList) *HotelOrderPreValidateResponseBodyModulePromotionInfo {
	s.PromotionDetailInfoList = v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModulePromotionInfo) SetPromotionTotalPrice(v int64) *HotelOrderPreValidateResponseBodyModulePromotionInfo {
	s.PromotionTotalPrice = &v
	return s
}

type HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList struct {
	// example:
	//
	// true
	CheckStatus *bool `json:"check_status,omitempty" xml:"check_status,omitempty"`
	// example:
	//
	// true
	NeedCheck     *bool   `json:"need_check,omitempty" xml:"need_check,omitempty"`
	PromotionCode *string `json:"promotion_code,omitempty" xml:"promotion_code,omitempty"`
	// example:
	//
	// 12893
	PromotionId *string `json:"promotion_id,omitempty" xml:"promotion_id,omitempty"`
	// example:
	//
	// demo
	PromotionName *string `json:"promotion_name,omitempty" xml:"promotion_name,omitempty"`
	// example:
	//
	// 100
	PromotionPrice *int64 `json:"promotion_price,omitempty" xml:"promotion_price,omitempty"`
	// example:
	//
	// 1
	PromotionType *string `json:"promotion_type,omitempty" xml:"promotion_type,omitempty"`
}

func (s HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList) SetCheckStatus(v bool) *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList {
	s.CheckStatus = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList) SetNeedCheck(v bool) *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList {
	s.NeedCheck = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList) SetPromotionCode(v string) *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList {
	s.PromotionCode = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList) SetPromotionId(v string) *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList {
	s.PromotionId = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList) SetPromotionName(v string) *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList {
	s.PromotionName = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList) SetPromotionPrice(v int64) *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList {
	s.PromotionPrice = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList) SetPromotionType(v string) *HotelOrderPreValidateResponseBodyModulePromotionInfoPromotionDetailInfoList {
	s.PromotionType = &v
	return s
}

type HotelOrderPreValidateResponseBodyModuleRatePlanDaily struct {
	Board         *string `json:"board,omitempty" xml:"board,omitempty"`
	DiscountPrice *string `json:"discount_price,omitempty" xml:"discount_price,omitempty"`
	MaxBookingNum *int32  `json:"max_booking_num,omitempty" xml:"max_booking_num,omitempty"`
	// example:
	//
	// 100
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 2023-01-19
	RateStartTime *string `json:"rate_start_time,omitempty" xml:"rate_start_time,omitempty"`
	// example:
	//
	// 1
	RoomCount             *int32  `json:"room_count,omitempty" xml:"room_count,omitempty"`
	RoundingDiscountPrice *string `json:"rounding_discount_price,omitempty" xml:"rounding_discount_price,omitempty"`
	RoundingPrice         *string `json:"rounding_price,omitempty" xml:"rounding_price,omitempty"`
	// example:
	//
	// 100
	ServiceFee *int64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
}

func (s HotelOrderPreValidateResponseBodyModuleRatePlanDaily) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateResponseBodyModuleRatePlanDaily) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanDaily) SetBoard(v string) *HotelOrderPreValidateResponseBodyModuleRatePlanDaily {
	s.Board = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanDaily) SetDiscountPrice(v string) *HotelOrderPreValidateResponseBodyModuleRatePlanDaily {
	s.DiscountPrice = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanDaily) SetMaxBookingNum(v int32) *HotelOrderPreValidateResponseBodyModuleRatePlanDaily {
	s.MaxBookingNum = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanDaily) SetPrice(v int64) *HotelOrderPreValidateResponseBodyModuleRatePlanDaily {
	s.Price = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanDaily) SetRateStartTime(v string) *HotelOrderPreValidateResponseBodyModuleRatePlanDaily {
	s.RateStartTime = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanDaily) SetRoomCount(v int32) *HotelOrderPreValidateResponseBodyModuleRatePlanDaily {
	s.RoomCount = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanDaily) SetRoundingDiscountPrice(v string) *HotelOrderPreValidateResponseBodyModuleRatePlanDaily {
	s.RoundingDiscountPrice = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanDaily) SetRoundingPrice(v string) *HotelOrderPreValidateResponseBodyModuleRatePlanDaily {
	s.RoundingPrice = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanDaily) SetServiceFee(v int64) *HotelOrderPreValidateResponseBodyModuleRatePlanDaily {
	s.ServiceFee = &v
	return s
}

type HotelOrderPreValidateResponseBodyModuleRatePlanInfo struct {
	BedDesc                   *string                                                                       `json:"bed_desc,omitempty" xml:"bed_desc,omitempty"`
	BtripHotelCancelPolicyDTO *HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTO `json:"btrip_hotel_cancel_policy_d_t_o,omitempty" xml:"btrip_hotel_cancel_policy_d_t_o,omitempty" type:"Struct"`
	// example:
	//
	// 12:00
	EarliestCheckInTime *string `json:"earliest_check_in_time,omitempty" xml:"earliest_check_in_time,omitempty"`
	// example:
	//
	// 17:00
	LatestCheckOutTime *string `json:"latest_check_out_time,omitempty" xml:"latest_check_out_time,omitempty"`
	MaxBookingNum      *int32  `json:"max_booking_num,omitempty" xml:"max_booking_num,omitempty"`
	// example:
	//
	// 1
	MaxOccupancyNum *int32 `json:"max_occupancy_num,omitempty" xml:"max_occupancy_num,omitempty"`
	// example:
	//
	// false
	NeedCertificate *bool `json:"need_certificate,omitempty" xml:"need_certificate,omitempty"`
	// example:
	//
	// false
	NeedEmail *bool `json:"need_email,omitempty" xml:"need_email,omitempty"`
	// example:
	//
	// false
	NeedEnglishName *bool `json:"need_english_name,omitempty" xml:"need_english_name,omitempty"`
	// example:
	//
	// 100
	TotalOrderPrice *int64 `json:"total_order_price,omitempty" xml:"total_order_price,omitempty"`
	// example:
	//
	// 100
	TotalRoomPrice *int64 `json:"total_room_price,omitempty" xml:"total_room_price,omitempty"`
}

func (s HotelOrderPreValidateResponseBodyModuleRatePlanInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateResponseBodyModuleRatePlanInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetBedDesc(v string) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.BedDesc = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetBtripHotelCancelPolicyDTO(v *HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTO) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.BtripHotelCancelPolicyDTO = v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetEarliestCheckInTime(v string) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.EarliestCheckInTime = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetLatestCheckOutTime(v string) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.LatestCheckOutTime = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetMaxBookingNum(v int32) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.MaxBookingNum = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetMaxOccupancyNum(v int32) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.MaxOccupancyNum = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetNeedCertificate(v bool) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.NeedCertificate = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetNeedEmail(v bool) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.NeedEmail = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetNeedEnglishName(v bool) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.NeedEnglishName = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetTotalOrderPrice(v int64) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.TotalOrderPrice = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfo) SetTotalRoomPrice(v int64) *HotelOrderPreValidateResponseBodyModuleRatePlanInfo {
	s.TotalRoomPrice = &v
	return s
}

type HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTO struct {
	BtripHotelCancelPolicyInfoDTOList []*HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList `json:"btrip_hotel_cancel_policy_info_d_t_o_list,omitempty" xml:"btrip_hotel_cancel_policy_info_d_t_o_list,omitempty" type:"Repeated"`
	CancelPolicyType                  *int32                                                                                                           `json:"cancel_policy_type,omitempty" xml:"cancel_policy_type,omitempty"`
}

func (s HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTO) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTO) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTO) SetBtripHotelCancelPolicyInfoDTOList(v []*HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) *HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTO {
	s.BtripHotelCancelPolicyInfoDTOList = v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTO) SetCancelPolicyType(v int32) *HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTO {
	s.CancelPolicyType = &v
	return s
}

type HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList struct {
	// example:
	//
	// 1
	Hour *int64 `json:"hour,omitempty" xml:"hour,omitempty"`
	// example:
	//
	// 1
	Value *int64 `json:"value,omitempty" xml:"value,omitempty"`
}

func (s HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) SetHour(v int64) *HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList {
	s.Hour = &v
	return s
}

func (s *HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList) SetValue(v int64) *HotelOrderPreValidateResponseBodyModuleRatePlanInfoBtripHotelCancelPolicyDTOBtripHotelCancelPolicyInfoDTOList {
	s.Value = &v
	return s
}

type HotelOrderPreValidateResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelOrderPreValidateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelOrderPreValidateResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderPreValidateResponse) GoString() string {
	return s.String()
}

func (s *HotelOrderPreValidateResponse) SetHeaders(v map[string]*string) *HotelOrderPreValidateResponse {
	s.Headers = v
	return s
}

func (s *HotelOrderPreValidateResponse) SetStatusCode(v int32) *HotelOrderPreValidateResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelOrderPreValidateResponse) SetBody(v *HotelOrderPreValidateResponseBody) *HotelOrderPreValidateResponse {
	s.Body = v
	return s
}

type HotelOrderQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s HotelOrderQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderQueryHeaders) GoString() string {
	return s.String()
}

func (s *HotelOrderQueryHeaders) SetCommonHeaders(v map[string]*string) *HotelOrderQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelOrderQueryHeaders) SetXAcsBtripSoCorpToken(v string) *HotelOrderQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type HotelOrderQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1002145190081005400
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
}

func (s HotelOrderQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderQueryRequest) GoString() string {
	return s.String()
}

func (s *HotelOrderQueryRequest) SetOrderId(v int64) *HotelOrderQueryRequest {
	s.OrderId = &v
	return s
}

type HotelOrderQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	Module *HotelOrderQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelOrderQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderQueryResponseBody) GoString() string {
	return s.String()
}

func (s *HotelOrderQueryResponseBody) SetCode(v string) *HotelOrderQueryResponseBody {
	s.Code = &v
	return s
}

func (s *HotelOrderQueryResponseBody) SetMessage(v string) *HotelOrderQueryResponseBody {
	s.Message = &v
	return s
}

func (s *HotelOrderQueryResponseBody) SetModule(v *HotelOrderQueryResponseBodyModule) *HotelOrderQueryResponseBody {
	s.Module = v
	return s
}

func (s *HotelOrderQueryResponseBody) SetRequestId(v string) *HotelOrderQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelOrderQueryResponseBody) SetSuccess(v bool) *HotelOrderQueryResponseBody {
	s.Success = &v
	return s
}

func (s *HotelOrderQueryResponseBody) SetTraceId(v string) *HotelOrderQueryResponseBody {
	s.TraceId = &v
	return s
}

type HotelOrderQueryResponseBodyModule struct {
	HotelInfo     *HotelOrderQueryResponseBodyModuleHotelInfo       `json:"hotel_info,omitempty" xml:"hotel_info,omitempty" type:"Struct"`
	InvoiceInfo   *HotelOrderQueryResponseBodyModuleInvoiceInfo     `json:"invoice_info,omitempty" xml:"invoice_info,omitempty" type:"Struct"`
	OrderBaseInfo *HotelOrderQueryResponseBodyModuleOrderBaseInfo   `json:"order_base_info,omitempty" xml:"order_base_info,omitempty" type:"Struct"`
	PassengerList []*HotelOrderQueryResponseBodyModulePassengerList `json:"passenger_list,omitempty" xml:"passenger_list,omitempty" type:"Repeated"`
	PriceInfoList []*HotelOrderQueryResponseBodyModulePriceInfoList `json:"price_info_list,omitempty" xml:"price_info_list,omitempty" type:"Repeated"`
}

func (s HotelOrderQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelOrderQueryResponseBodyModule) SetHotelInfo(v *HotelOrderQueryResponseBodyModuleHotelInfo) *HotelOrderQueryResponseBodyModule {
	s.HotelInfo = v
	return s
}

func (s *HotelOrderQueryResponseBodyModule) SetInvoiceInfo(v *HotelOrderQueryResponseBodyModuleInvoiceInfo) *HotelOrderQueryResponseBodyModule {
	s.InvoiceInfo = v
	return s
}

func (s *HotelOrderQueryResponseBodyModule) SetOrderBaseInfo(v *HotelOrderQueryResponseBodyModuleOrderBaseInfo) *HotelOrderQueryResponseBodyModule {
	s.OrderBaseInfo = v
	return s
}

func (s *HotelOrderQueryResponseBodyModule) SetPassengerList(v []*HotelOrderQueryResponseBodyModulePassengerList) *HotelOrderQueryResponseBodyModule {
	s.PassengerList = v
	return s
}

func (s *HotelOrderQueryResponseBodyModule) SetPriceInfoList(v []*HotelOrderQueryResponseBodyModulePriceInfoList) *HotelOrderQueryResponseBodyModule {
	s.PriceInfoList = v
	return s
}

type HotelOrderQueryResponseBodyModuleHotelInfo struct {
	BrandCode  *string `json:"brand_code,omitempty" xml:"brand_code,omitempty"`
	BrandGroup *string `json:"brand_group,omitempty" xml:"brand_group,omitempty"`
	BrandName  *string `json:"brand_name,omitempty" xml:"brand_name,omitempty"`
	// example:
	//
	// 1669344020
	CheckIn *int64 `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// example:
	//
	// 1669344020
	CheckOut     *int64  `json:"check_out,omitempty" xml:"check_out,omitempty"`
	City         *string `json:"city,omitempty" xml:"city,omitempty"`
	CityAdCode   *string `json:"city_ad_code,omitempty" xml:"city_ad_code,omitempty"`
	HotelAddress *string `json:"hotel_address,omitempty" xml:"hotel_address,omitempty"`
	HotelName    *string `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	HotelPhone   *string `json:"hotel_phone,omitempty" xml:"hotel_phone,omitempty"`
	// example:
	//
	// 11
	HotelSupportVatInvoiceType *int32 `json:"hotel_support_vat_invoice_type,omitempty" xml:"hotel_support_vat_invoice_type,omitempty"`
	// example:
	//
	// 1
	Night *int32 `json:"night,omitempty" xml:"night,omitempty"`
	// example:
	//
	// 1
	RoomNum  *int32  `json:"room_num,omitempty" xml:"room_num,omitempty"`
	RoomType *string `json:"room_type,omitempty" xml:"room_type,omitempty"`
}

func (s HotelOrderQueryResponseBodyModuleHotelInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderQueryResponseBodyModuleHotelInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetBrandCode(v string) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.BrandCode = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetBrandGroup(v string) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.BrandGroup = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetBrandName(v string) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.BrandName = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetCheckIn(v int64) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.CheckIn = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetCheckOut(v int64) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.CheckOut = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetCity(v string) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.City = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetCityAdCode(v string) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.CityAdCode = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetHotelAddress(v string) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.HotelAddress = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetHotelName(v string) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.HotelName = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetHotelPhone(v string) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.HotelPhone = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetHotelSupportVatInvoiceType(v int32) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.HotelSupportVatInvoiceType = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetNight(v int32) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.Night = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetRoomNum(v int32) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.RoomNum = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleHotelInfo) SetRoomType(v string) *HotelOrderQueryResponseBodyModuleHotelInfo {
	s.RoomType = &v
	return s
}

type HotelOrderQueryResponseBodyModuleInvoiceInfo struct {
	// example:
	//
	// 12345678
	Id    *int64  `json:"id,omitempty" xml:"id,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s HotelOrderQueryResponseBodyModuleInvoiceInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderQueryResponseBodyModuleInvoiceInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderQueryResponseBodyModuleInvoiceInfo) SetId(v int64) *HotelOrderQueryResponseBodyModuleInvoiceInfo {
	s.Id = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleInvoiceInfo) SetTitle(v string) *HotelOrderQueryResponseBodyModuleInvoiceInfo {
	s.Title = &v
	return s
}

type HotelOrderQueryResponseBodyModuleOrderBaseInfo struct {
	// example:
	//
	// 12345678
	ApplyId    *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	BtripTitle *string `json:"btrip_title,omitempty" xml:"btrip_title,omitempty"`
	// example:
	//
	// iscorpId
	CorpId   *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	// example:
	//
	// 12345678
	DepartId       *string   `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName     *string   `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	ExceedApplyNos []*string `json:"exceed_apply_nos,omitempty" xml:"exceed_apply_nos,omitempty" type:"Repeated"`
	ExtendField    *string   `json:"extend_field,omitempty" xml:"extend_field,omitempty"`
	// example:
	//
	// 1669344020
	GmtCreate *int64 `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 1669344020
	GmtModified *int64 `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	// example:
	//
	// 1002145190081005400
	Id *int64 `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// 12345678
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	// example:
	//
	// 1
	OrderStatus *int32 `json:"order_status,omitempty" xml:"order_status,omitempty"`
	// example:
	//
	// 1
	OrderType *int32 `json:"order_type,omitempty" xml:"order_type,omitempty"`
	// example:
	//
	// 12345678
	ThirdpartApplyId    *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	ThirdpartBusinessId *string `json:"thirdpart_business_id,omitempty" xml:"thirdpart_business_id,omitempty"`
	// example:
	//
	// 12345678
	ThirdpartDepartId *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	// example:
	//
	// 12345678
	ThirdpartItineraryId *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// 12345678
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s HotelOrderQueryResponseBodyModuleOrderBaseInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderQueryResponseBodyModuleOrderBaseInfo) GoString() string {
	return s.String()
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetApplyId(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ApplyId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetBtripTitle(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.BtripTitle = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetCorpId(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.CorpId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetCorpName(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.CorpName = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetDepartId(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.DepartId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetDepartName(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.DepartName = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetExceedApplyNos(v []*string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ExceedApplyNos = v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetExtendField(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ExtendField = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetGmtCreate(v int64) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.GmtCreate = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetGmtModified(v int64) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.GmtModified = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetId(v int64) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.Id = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetItineraryId(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ItineraryId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetOrderStatus(v int32) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.OrderStatus = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetOrderType(v int32) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.OrderType = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartApplyId(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartApplyId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartBusinessId(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartBusinessId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartDepartId(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartDepartId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartItineraryId(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetUserId(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.UserId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModuleOrderBaseInfo) SetUserName(v string) *HotelOrderQueryResponseBodyModuleOrderBaseInfo {
	s.UserName = &v
	return s
}

type HotelOrderQueryResponseBodyModulePassengerList struct {
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 12345678
	CostCenterId   *int64  `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// 12345678
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	ItineraryId      *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	OccupantType     *int32  `json:"occupant_type,omitempty" xml:"occupant_type,omitempty"`
	ProjectCode      *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	// example:
	//
	// 12345678
	ProjectId        *int64  `json:"project_id,omitempty" xml:"project_id,omitempty"`
	ProjectTitle     *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 12345678
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	// example:
	//
	// 12345678
	ThirdpartProjectId *string `json:"thirdpart_project_id,omitempty" xml:"thirdpart_project_id,omitempty"`
	// example:
	//
	// 12345678
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	// example:
	//
	// 0
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s HotelOrderQueryResponseBodyModulePassengerList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderQueryResponseBodyModulePassengerList) GoString() string {
	return s.String()
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetApplyId(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.ApplyId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetCostCenterId(v int64) *HotelOrderQueryResponseBodyModulePassengerList {
	s.CostCenterId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetCostCenterName(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.CostCenterName = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetCostCenterNumber(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.CostCenterNumber = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetItineraryId(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.ItineraryId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetOccupantType(v int32) *HotelOrderQueryResponseBodyModulePassengerList {
	s.OccupantType = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetProjectCode(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.ProjectCode = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetProjectId(v int64) *HotelOrderQueryResponseBodyModulePassengerList {
	s.ProjectId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetProjectTitle(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.ProjectTitle = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetThirdpartApplyId(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.ThirdpartApplyId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetThirdpartCostCenterId(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetThirdpartProjectId(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.ThirdpartProjectId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetUserId(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.UserId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetUserName(v string) *HotelOrderQueryResponseBodyModulePassengerList {
	s.UserName = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePassengerList) SetUserType(v int32) *HotelOrderQueryResponseBodyModulePassengerList {
	s.UserType = &v
	return s
}

type HotelOrderQueryResponseBodyModulePriceInfoList struct {
	// example:
	//
	// 1
	CategoryCode *int32 `json:"category_code,omitempty" xml:"category_code,omitempty"`
	// example:
	//
	// 1669344020
	GmtCreate *int64 `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 1
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 200
	Price *float64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 12345678910987654321
	TradeId *string `json:"trade_id,omitempty" xml:"trade_id,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s HotelOrderQueryResponseBodyModulePriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderQueryResponseBodyModulePriceInfoList) GoString() string {
	return s.String()
}

func (s *HotelOrderQueryResponseBodyModulePriceInfoList) SetCategoryCode(v int32) *HotelOrderQueryResponseBodyModulePriceInfoList {
	s.CategoryCode = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePriceInfoList) SetGmtCreate(v int64) *HotelOrderQueryResponseBodyModulePriceInfoList {
	s.GmtCreate = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePriceInfoList) SetPayType(v int32) *HotelOrderQueryResponseBodyModulePriceInfoList {
	s.PayType = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePriceInfoList) SetPrice(v float64) *HotelOrderQueryResponseBodyModulePriceInfoList {
	s.Price = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePriceInfoList) SetTradeId(v string) *HotelOrderQueryResponseBodyModulePriceInfoList {
	s.TradeId = &v
	return s
}

func (s *HotelOrderQueryResponseBodyModulePriceInfoList) SetType(v int32) *HotelOrderQueryResponseBodyModulePriceInfoList {
	s.Type = &v
	return s
}

type HotelOrderQueryResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelOrderQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelOrderQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelOrderQueryResponse) GoString() string {
	return s.String()
}

func (s *HotelOrderQueryResponse) SetHeaders(v map[string]*string) *HotelOrderQueryResponse {
	s.Headers = v
	return s
}

func (s *HotelOrderQueryResponse) SetStatusCode(v int32) *HotelOrderQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelOrderQueryResponse) SetBody(v *HotelOrderQueryResponseBody) *HotelOrderQueryResponse {
	s.Body = v
	return s
}

type HotelPricePullHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelPricePullHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullHeaders) GoString() string {
	return s.String()
}

func (s *HotelPricePullHeaders) SetCommonHeaders(v map[string]*string) *HotelPricePullHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelPricePullHeaders) SetXAcsBtripCorpToken(v string) *HotelPricePullHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelPricePullRequest struct {
	// example:
	//
	// 1000
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// example:
	//
	// 2022-05-15
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// example:
	//
	// 2022-05-15
	CheckOut *string `json:"check_out,omitempty" xml:"check_out,omitempty"`
	// example:
	//
	// 330100
	CityCode *int32    `json:"city_code,omitempty" xml:"city_code,omitempty"`
	HotelIds []*string `json:"hotel_ids,omitempty" xml:"hotel_ids,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	PaymentType *int32 `json:"payment_type,omitempty" xml:"payment_type,omitempty"`
}

func (s HotelPricePullRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullRequest) GoString() string {
	return s.String()
}

func (s *HotelPricePullRequest) SetBtripUserId(v string) *HotelPricePullRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelPricePullRequest) SetCheckIn(v string) *HotelPricePullRequest {
	s.CheckIn = &v
	return s
}

func (s *HotelPricePullRequest) SetCheckOut(v string) *HotelPricePullRequest {
	s.CheckOut = &v
	return s
}

func (s *HotelPricePullRequest) SetCityCode(v int32) *HotelPricePullRequest {
	s.CityCode = &v
	return s
}

func (s *HotelPricePullRequest) SetHotelIds(v []*string) *HotelPricePullRequest {
	s.HotelIds = v
	return s
}

func (s *HotelPricePullRequest) SetPaymentType(v int32) *HotelPricePullRequest {
	s.PaymentType = &v
	return s
}

type HotelPricePullShrinkRequest struct {
	// example:
	//
	// 1000
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// example:
	//
	// 2022-05-15
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// example:
	//
	// 2022-05-15
	CheckOut *string `json:"check_out,omitempty" xml:"check_out,omitempty"`
	// example:
	//
	// 330100
	CityCode       *int32  `json:"city_code,omitempty" xml:"city_code,omitempty"`
	HotelIdsShrink *string `json:"hotel_ids,omitempty" xml:"hotel_ids,omitempty"`
	// example:
	//
	// 0
	PaymentType *int32 `json:"payment_type,omitempty" xml:"payment_type,omitempty"`
}

func (s HotelPricePullShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullShrinkRequest) GoString() string {
	return s.String()
}

func (s *HotelPricePullShrinkRequest) SetBtripUserId(v string) *HotelPricePullShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelPricePullShrinkRequest) SetCheckIn(v string) *HotelPricePullShrinkRequest {
	s.CheckIn = &v
	return s
}

func (s *HotelPricePullShrinkRequest) SetCheckOut(v string) *HotelPricePullShrinkRequest {
	s.CheckOut = &v
	return s
}

func (s *HotelPricePullShrinkRequest) SetCityCode(v int32) *HotelPricePullShrinkRequest {
	s.CityCode = &v
	return s
}

func (s *HotelPricePullShrinkRequest) SetHotelIdsShrink(v string) *HotelPricePullShrinkRequest {
	s.HotelIdsShrink = &v
	return s
}

func (s *HotelPricePullShrinkRequest) SetPaymentType(v int32) *HotelPricePullShrinkRequest {
	s.PaymentType = &v
	return s
}

type HotelPricePullResponseBody struct {
	// example:
	//
	// 0
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// None
	Message *string                           `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelPricePullResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 9BCDD5DE-E6CB-5C25-93B9-9BE178A0AA56
	RequestId *string `json:"request_id,omitempty" xml:"request_id,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelPricePullResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullResponseBody) GoString() string {
	return s.String()
}

func (s *HotelPricePullResponseBody) SetCode(v string) *HotelPricePullResponseBody {
	s.Code = &v
	return s
}

func (s *HotelPricePullResponseBody) SetMessage(v string) *HotelPricePullResponseBody {
	s.Message = &v
	return s
}

func (s *HotelPricePullResponseBody) SetModule(v *HotelPricePullResponseBodyModule) *HotelPricePullResponseBody {
	s.Module = v
	return s
}

func (s *HotelPricePullResponseBody) SetRequestId(v string) *HotelPricePullResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelPricePullResponseBody) SetSuccess(v bool) *HotelPricePullResponseBody {
	s.Success = &v
	return s
}

func (s *HotelPricePullResponseBody) SetTraceId(v string) *HotelPricePullResponseBody {
	s.TraceId = &v
	return s
}

type HotelPricePullResponseBodyModule struct {
	HotelPriceInfos []*HotelPricePullResponseBodyModuleHotelPriceInfos `json:"hotel_price_infos,omitempty" xml:"hotel_price_infos,omitempty" type:"Repeated"`
}

func (s HotelPricePullResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelPricePullResponseBodyModule) SetHotelPriceInfos(v []*HotelPricePullResponseBodyModuleHotelPriceInfos) *HotelPricePullResponseBodyModule {
	s.HotelPriceInfos = v
	return s
}

type HotelPricePullResponseBodyModuleHotelPriceInfos struct {
	Address *string `json:"address,omitempty" xml:"address,omitempty"`
	// example:
	//
	// 64389015
	HotelId   *string                                                 `json:"hotel_id,omitempty" xml:"hotel_id,omitempty"`
	HotelName *string                                                 `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	Rooms     []*HotelPricePullResponseBodyModuleHotelPriceInfosRooms `json:"rooms,omitempty" xml:"rooms,omitempty" type:"Repeated"`
	// example:
	//
	// 9BCDD5DE-E6CB-5C25-93B9-9BE178A0AA56
	SearchId *string `json:"search_id,omitempty" xml:"search_id,omitempty"`
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfos) GoString() string {
	return s.String()
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfos) SetAddress(v string) *HotelPricePullResponseBodyModuleHotelPriceInfos {
	s.Address = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfos) SetHotelId(v string) *HotelPricePullResponseBodyModuleHotelPriceInfos {
	s.HotelId = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfos) SetHotelName(v string) *HotelPricePullResponseBodyModuleHotelPriceInfos {
	s.HotelName = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfos) SetRooms(v []*HotelPricePullResponseBodyModuleHotelPriceInfosRooms) *HotelPricePullResponseBodyModuleHotelPriceInfos {
	s.Rooms = v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfos) SetSearchId(v string) *HotelPricePullResponseBodyModuleHotelPriceInfos {
	s.SearchId = &v
	return s
}

type HotelPricePullResponseBodyModuleHotelPriceInfosRooms struct {
	// example:
	//
	// 32
	Area          *string `json:"area,omitempty" xml:"area,omitempty"`
	Bed           *string `json:"bed,omitempty" xml:"bed,omitempty"`
	BedTypeString *string `json:"bed_type_string,omitempty" xml:"bed_type_string,omitempty"`
	// example:
	//
	// {\\"bathtub\\":true}
	Facility *string `json:"facility,omitempty" xml:"facility,omitempty"`
	// example:
	//
	// 1,2,3,4,5,6
	Floor *string `json:"floor,omitempty" xml:"floor,omitempty"`
	// example:
	//
	// 2
	MaxOccupancy *int32 `json:"max_occupancy,omitempty" xml:"max_occupancy,omitempty"`
	// example:
	//
	// 0
	NetworkService *string                                                      `json:"network_service,omitempty" xml:"network_service,omitempty"`
	Pics           []*string                                                    `json:"pics,omitempty" xml:"pics,omitempty" type:"Repeated"`
	Rates          []*HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates `json:"rates,omitempty" xml:"rates,omitempty" type:"Repeated"`
	// example:
	//
	// 64681618
	RoomId   *string `json:"room_id,omitempty" xml:"room_id,omitempty"`
	RoomName *string `json:"room_name,omitempty" xml:"room_name,omitempty"`
	// example:
	//
	// 0
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 1
	WindowType *string `json:"window_type,omitempty" xml:"window_type,omitempty"`
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfosRooms) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfosRooms) GoString() string {
	return s.String()
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetArea(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.Area = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetBed(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.Bed = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetBedTypeString(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.BedTypeString = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetFacility(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.Facility = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetFloor(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.Floor = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetMaxOccupancy(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.MaxOccupancy = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetNetworkService(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.NetworkService = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetPics(v []*string) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.Pics = v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetRates(v []*HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.Rates = v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetRoomId(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.RoomId = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetRoomName(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.RoomName = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetStatus(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.Status = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRooms) SetWindowType(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRooms {
	s.WindowType = &v
	return s
}

type HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates struct {
	// example:
	//
	// demo
	Breakfast *string `json:"breakfast,omitempty" xml:"breakfast,omitempty"`
	// example:
	//
	// 1
	BreakfastCount         *int32                                                                           `json:"breakfast_count,omitempty" xml:"breakfast_count,omitempty"`
	BtripHotelCancelPolicy *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicy `json:"btrip_hotel_cancel_policy,omitempty" xml:"btrip_hotel_cancel_policy,omitempty" type:"Struct"`
	CancelPolicyDesc       *string                                                                          `json:"cancel_policy_desc,omitempty" xml:"cancel_policy_desc,omitempty"`
	// example:
	//
	// 1
	CompanyAassist *string `json:"company_aassist,omitempty" xml:"company_aassist,omitempty"`
	// example:
	//
	// CNY
	CurrencyCode *string `json:"currency_code,omitempty" xml:"currency_code,omitempty"`
	// example:
	//
	// true
	InstantConfirm *bool `json:"instant_confirm,omitempty" xml:"instant_confirm,omitempty"`
	// example:
	//
	// 721700504622
	ItemId *string `json:"item_id,omitempty" xml:"item_id,omitempty"`
	// example:
	//
	// 4
	MaxAdvHours *int32 `json:"max_adv_hours,omitempty" xml:"max_adv_hours,omitempty"`
	// example:
	//
	// 4344
	MaxDays *int32 `json:"max_days,omitempty" xml:"max_days,omitempty"`
	// example:
	//
	// 0
	MinAdvHours *int32 `json:"min_adv_hours,omitempty" xml:"min_adv_hours,omitempty"`
	// example:
	//
	// 0
	MinDays *int32 `json:"min_days,omitempty" xml:"min_days,omitempty"`
	// example:
	//
	// 0
	Nod *int32 `json:"nod,omitempty" xml:"nod,omitempty"`
	// example:
	//
	// 1
	Nop *int32 `json:"nop,omitempty" xml:"nop,omitempty"`
	// example:
	//
	// 1
	PaymentType *int32 `json:"payment_type,omitempty" xml:"payment_type,omitempty"`
	// example:
	//
	// 30000
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// demo
	PromotionInfo *string `json:"promotion_info,omitempty" xml:"promotion_info,omitempty"`
	// example:
	//
	// 4
	Quota      *int32                                                                 `json:"quota,omitempty" xml:"quota,omitempty"`
	RateDailys []*HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys `json:"rate_dailys,omitempty" xml:"rate_dailys,omitempty" type:"Repeated"`
	// example:
	//
	// 4509447432148
	RateId       *string `json:"rate_id,omitempty" xml:"rate_id,omitempty"`
	RatePlanName *string `json:"rate_plan_name,omitempty" xml:"rate_plan_name,omitempty"`
	// example:
	//
	// 4509447432148
	RpId *string `json:"rp_id,omitempty" xml:"rp_id,omitempty"`
	// example:
	//
	// 2829486701
	SellerId *string `json:"seller_id,omitempty" xml:"seller_id,omitempty"`
	// example:
	//
	// true
	SupportSpecialInvoice *bool `json:"support_special_invoice,omitempty" xml:"support_special_invoice,omitempty"`
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) GoString() string {
	return s.String()
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetBreakfast(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.Breakfast = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetBreakfastCount(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.BreakfastCount = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetBtripHotelCancelPolicy(v *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicy) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.BtripHotelCancelPolicy = v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetCancelPolicyDesc(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.CancelPolicyDesc = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetCompanyAassist(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.CompanyAassist = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetCurrencyCode(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.CurrencyCode = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetInstantConfirm(v bool) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.InstantConfirm = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetItemId(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.ItemId = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetMaxAdvHours(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.MaxAdvHours = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetMaxDays(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.MaxDays = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetMinAdvHours(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.MinAdvHours = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetMinDays(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.MinDays = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetNod(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.Nod = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetNop(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.Nop = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetPaymentType(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.PaymentType = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetPrice(v int64) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.Price = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetPromotionInfo(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.PromotionInfo = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetQuota(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.Quota = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetRateDailys(v []*HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.RateDailys = v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetRateId(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.RateId = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetRatePlanName(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.RatePlanName = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetRpId(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.RpId = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetSellerId(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.SellerId = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates) SetSupportSpecialInvoice(v bool) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRates {
	s.SupportSpecialInvoice = &v
	return s
}

type HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicy struct {
	BtripHotelCancelPolicyInfoDTOList []*HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicyBtripHotelCancelPolicyInfoDTOList `json:"btrip_hotel_cancel_policy_info_d_t_o_list,omitempty" xml:"btrip_hotel_cancel_policy_info_d_t_o_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	CancelPolicyType *int32 `json:"cancel_policy_type,omitempty" xml:"cancel_policy_type,omitempty"`
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicy) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicy) GoString() string {
	return s.String()
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicy) SetBtripHotelCancelPolicyInfoDTOList(v []*HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicyBtripHotelCancelPolicyInfoDTOList) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicy {
	s.BtripHotelCancelPolicyInfoDTOList = v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicy) SetCancelPolicyType(v int32) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicy {
	s.CancelPolicyType = &v
	return s
}

type HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicyBtripHotelCancelPolicyInfoDTOList struct {
	// example:
	//
	// 1
	Hour *int64 `json:"hour,omitempty" xml:"hour,omitempty"`
	// example:
	//
	// 20
	Value *int64 `json:"value,omitempty" xml:"value,omitempty"`
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicyBtripHotelCancelPolicyInfoDTOList) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicyBtripHotelCancelPolicyInfoDTOList) GoString() string {
	return s.String()
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicyBtripHotelCancelPolicyInfoDTOList) SetHour(v int64) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicyBtripHotelCancelPolicyInfoDTOList {
	s.Hour = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicyBtripHotelCancelPolicyInfoDTOList) SetValue(v int64) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesBtripHotelCancelPolicyBtripHotelCancelPolicyInfoDTOList {
	s.Value = &v
	return s
}

type HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys struct {
	// example:
	//
	// 30000
	DiscountPrice *int64 `json:"discount_price,omitempty" xml:"discount_price,omitempty"`
	// example:
	//
	// 62800
	LastDiscountsPrice *int64 `json:"last_discounts_price,omitempty" xml:"last_discounts_price,omitempty"`
	// example:
	//
	// 62800
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 2023-10-17
	StartDate *string `json:"start_date,omitempty" xml:"start_date,omitempty"`
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys) GoString() string {
	return s.String()
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys) SetDiscountPrice(v int64) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys {
	s.DiscountPrice = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys) SetLastDiscountsPrice(v int64) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys {
	s.LastDiscountsPrice = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys) SetPrice(v int64) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys {
	s.Price = &v
	return s
}

func (s *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys) SetStartDate(v string) *HotelPricePullResponseBodyModuleHotelPriceInfosRoomsRatesRateDailys {
	s.StartDate = &v
	return s
}

type HotelPricePullResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelPricePullResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelPricePullResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelPricePullResponse) GoString() string {
	return s.String()
}

func (s *HotelPricePullResponse) SetHeaders(v map[string]*string) *HotelPricePullResponse {
	s.Headers = v
	return s
}

func (s *HotelPricePullResponse) SetStatusCode(v int32) *HotelPricePullResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelPricePullResponse) SetBody(v *HotelPricePullResponseBody) *HotelPricePullResponse {
	s.Body = v
	return s
}

type HotelRoomInfoHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelRoomInfoHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelRoomInfoHeaders) GoString() string {
	return s.String()
}

func (s *HotelRoomInfoHeaders) SetCommonHeaders(v map[string]*string) *HotelRoomInfoHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelRoomInfoHeaders) SetXAcsBtripCorpToken(v string) *HotelRoomInfoHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelRoomInfoRequest struct {
	// This parameter is required.
	RoomIds []*int64 `json:"room_ids,omitempty" xml:"room_ids,omitempty" type:"Repeated"`
}

func (s HotelRoomInfoRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelRoomInfoRequest) GoString() string {
	return s.String()
}

func (s *HotelRoomInfoRequest) SetRoomIds(v []*int64) *HotelRoomInfoRequest {
	s.RoomIds = v
	return s
}

type HotelRoomInfoShrinkRequest struct {
	// This parameter is required.
	RoomIdsShrink *string `json:"room_ids,omitempty" xml:"room_ids,omitempty"`
}

func (s HotelRoomInfoShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelRoomInfoShrinkRequest) GoString() string {
	return s.String()
}

func (s *HotelRoomInfoShrinkRequest) SetRoomIdsShrink(v string) *HotelRoomInfoShrinkRequest {
	s.RoomIdsShrink = &v
	return s
}

type HotelRoomInfoResponseBody struct {
	// example:
	//
	// 0
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// operation success.
	Message *string                            `json:"message,omitempty" xml:"message,omitempty"`
	Module  []*HotelRoomInfoResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// requestId
	//
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelRoomInfoResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelRoomInfoResponseBody) GoString() string {
	return s.String()
}

func (s *HotelRoomInfoResponseBody) SetCode(v string) *HotelRoomInfoResponseBody {
	s.Code = &v
	return s
}

func (s *HotelRoomInfoResponseBody) SetMessage(v string) *HotelRoomInfoResponseBody {
	s.Message = &v
	return s
}

func (s *HotelRoomInfoResponseBody) SetModule(v []*HotelRoomInfoResponseBodyModule) *HotelRoomInfoResponseBody {
	s.Module = v
	return s
}

func (s *HotelRoomInfoResponseBody) SetRequestId(v string) *HotelRoomInfoResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelRoomInfoResponseBody) SetSuccess(v bool) *HotelRoomInfoResponseBody {
	s.Success = &v
	return s
}

func (s *HotelRoomInfoResponseBody) SetTraceId(v string) *HotelRoomInfoResponseBody {
	s.TraceId = &v
	return s
}

type HotelRoomInfoResponseBodyModule struct {
	BedInfoGroupList []*HotelRoomInfoResponseBodyModuleBedInfoGroupList `json:"bed_info_group_list,omitempty" xml:"bed_info_group_list,omitempty" type:"Repeated"`
	BedInfos         []*HotelRoomInfoResponseBodyModuleBedInfos         `json:"bed_infos,omitempty" xml:"bed_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	ExtraBed *int32 `json:"extra_bed,omitempty" xml:"extra_bed,omitempty"`
	// example:
	//
	// demo
	ExtraBedDesc *string `json:"extra_bed_desc,omitempty" xml:"extra_bed_desc,omitempty"`
	// example:
	//
	// 2
	Floor *string `json:"floor,omitempty" xml:"floor,omitempty"`
	// example:
	//
	// 0
	InternetWay *string `json:"internet_way,omitempty" xml:"internet_way,omitempty"`
	// example:
	//
	// 3
	MaxOccupancy     *int32    `json:"max_occupancy,omitempty" xml:"max_occupancy,omitempty"`
	RoomDesc         *string   `json:"room_desc,omitempty" xml:"room_desc,omitempty"`
	RoomFacilities   *string   `json:"room_facilities,omitempty" xml:"room_facilities,omitempty"`
	RoomFacilityList []*string `json:"room_facility_list,omitempty" xml:"room_facility_list,omitempty" type:"Repeated"`
	// example:
	//
	// 84536009
	RoomId *string `json:"room_id,omitempty" xml:"room_id,omitempty"`
	// example:
	//
	// //img.alicdn.com/imgextra/i2/6000000007493/O1CN010Vmxaz25DqUblX82A_!!6000000007493-2-hotel.png
	RoomImage  *string                                      `json:"room_image,omitempty" xml:"room_image,omitempty"`
	RoomImages []*HotelRoomInfoResponseBodyModuleRoomImages `json:"room_images,omitempty" xml:"room_images,omitempty" type:"Repeated"`
	RoomName   *string                                      `json:"room_name,omitempty" xml:"room_name,omitempty"`
	RoomType   *int32                                       `json:"room_type,omitempty" xml:"room_type,omitempty"`
	Roomarea   *string                                      `json:"roomarea,omitempty" xml:"roomarea,omitempty"`
	// example:
	//
	// 3
	Rooms *int32  `json:"rooms,omitempty" xml:"rooms,omitempty"`
	Smoke *string `json:"smoke,omitempty" xml:"smoke,omitempty"`
	// example:
	//
	// 2
	Window *string `json:"window,omitempty" xml:"window,omitempty"`
	// example:
	//
	// 0
	WindowBad *string `json:"window_bad,omitempty" xml:"window_bad,omitempty"`
	// example:
	//
	// demo
	WindowView *string `json:"window_view,omitempty" xml:"window_view,omitempty"`
}

func (s HotelRoomInfoResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelRoomInfoResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelRoomInfoResponseBodyModule) SetBedInfoGroupList(v []*HotelRoomInfoResponseBodyModuleBedInfoGroupList) *HotelRoomInfoResponseBodyModule {
	s.BedInfoGroupList = v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetBedInfos(v []*HotelRoomInfoResponseBodyModuleBedInfos) *HotelRoomInfoResponseBodyModule {
	s.BedInfos = v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetExtraBed(v int32) *HotelRoomInfoResponseBodyModule {
	s.ExtraBed = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetExtraBedDesc(v string) *HotelRoomInfoResponseBodyModule {
	s.ExtraBedDesc = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetFloor(v string) *HotelRoomInfoResponseBodyModule {
	s.Floor = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetInternetWay(v string) *HotelRoomInfoResponseBodyModule {
	s.InternetWay = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetMaxOccupancy(v int32) *HotelRoomInfoResponseBodyModule {
	s.MaxOccupancy = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetRoomDesc(v string) *HotelRoomInfoResponseBodyModule {
	s.RoomDesc = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetRoomFacilities(v string) *HotelRoomInfoResponseBodyModule {
	s.RoomFacilities = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetRoomFacilityList(v []*string) *HotelRoomInfoResponseBodyModule {
	s.RoomFacilityList = v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetRoomId(v string) *HotelRoomInfoResponseBodyModule {
	s.RoomId = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetRoomImage(v string) *HotelRoomInfoResponseBodyModule {
	s.RoomImage = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetRoomImages(v []*HotelRoomInfoResponseBodyModuleRoomImages) *HotelRoomInfoResponseBodyModule {
	s.RoomImages = v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetRoomName(v string) *HotelRoomInfoResponseBodyModule {
	s.RoomName = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetRoomType(v int32) *HotelRoomInfoResponseBodyModule {
	s.RoomType = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetRoomarea(v string) *HotelRoomInfoResponseBodyModule {
	s.Roomarea = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetRooms(v int32) *HotelRoomInfoResponseBodyModule {
	s.Rooms = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetSmoke(v string) *HotelRoomInfoResponseBodyModule {
	s.Smoke = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetWindow(v string) *HotelRoomInfoResponseBodyModule {
	s.Window = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetWindowBad(v string) *HotelRoomInfoResponseBodyModule {
	s.WindowBad = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModule) SetWindowView(v string) *HotelRoomInfoResponseBodyModule {
	s.WindowView = &v
	return s
}

type HotelRoomInfoResponseBodyModuleBedInfoGroupList struct {
	BedInfos []*HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos `json:"bed_infos,omitempty" xml:"bed_infos,omitempty" type:"Repeated"`
}

func (s HotelRoomInfoResponseBodyModuleBedInfoGroupList) String() string {
	return tea.Prettify(s)
}

func (s HotelRoomInfoResponseBodyModuleBedInfoGroupList) GoString() string {
	return s.String()
}

func (s *HotelRoomInfoResponseBodyModuleBedInfoGroupList) SetBedInfos(v []*HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos) *HotelRoomInfoResponseBodyModuleBedInfoGroupList {
	s.BedInfos = v
	return s
}

type HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos struct {
	BedDesc *string `json:"bed_desc,omitempty" xml:"bed_desc,omitempty"`
	BedNum  *int32  `json:"bed_num,omitempty" xml:"bed_num,omitempty"`
	BedSize *string `json:"bed_size,omitempty" xml:"bed_size,omitempty"`
	BedType *string `json:"bed_type,omitempty" xml:"bed_type,omitempty"`
	Length  *string `json:"length,omitempty" xml:"length,omitempty"`
	Width   *string `json:"width,omitempty" xml:"width,omitempty"`
}

func (s HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos) GoString() string {
	return s.String()
}

func (s *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos) SetBedDesc(v string) *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos {
	s.BedDesc = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos) SetBedNum(v int32) *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos {
	s.BedNum = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos) SetBedSize(v string) *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos {
	s.BedSize = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos) SetBedType(v string) *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos {
	s.BedType = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos) SetLength(v string) *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos {
	s.Length = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos) SetWidth(v string) *HotelRoomInfoResponseBodyModuleBedInfoGroupListBedInfos {
	s.Width = &v
	return s
}

type HotelRoomInfoResponseBodyModuleBedInfos struct {
	BedDesc *string `json:"bed_desc,omitempty" xml:"bed_desc,omitempty"`
	// example:
	//
	// 2
	BedNum *int32 `json:"bed_num,omitempty" xml:"bed_num,omitempty"`
	// example:
	//
	// 1.8*2.0m
	BedSize *string `json:"bed_size,omitempty" xml:"bed_size,omitempty"`
	// example:
	//
	// 1
	BedType *string `json:"bed_type,omitempty" xml:"bed_type,omitempty"`
	Length  *string `json:"length,omitempty" xml:"length,omitempty"`
	Width   *string `json:"width,omitempty" xml:"width,omitempty"`
}

func (s HotelRoomInfoResponseBodyModuleBedInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelRoomInfoResponseBodyModuleBedInfos) GoString() string {
	return s.String()
}

func (s *HotelRoomInfoResponseBodyModuleBedInfos) SetBedDesc(v string) *HotelRoomInfoResponseBodyModuleBedInfos {
	s.BedDesc = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleBedInfos) SetBedNum(v int32) *HotelRoomInfoResponseBodyModuleBedInfos {
	s.BedNum = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleBedInfos) SetBedSize(v string) *HotelRoomInfoResponseBodyModuleBedInfos {
	s.BedSize = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleBedInfos) SetBedType(v string) *HotelRoomInfoResponseBodyModuleBedInfos {
	s.BedType = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleBedInfos) SetLength(v string) *HotelRoomInfoResponseBodyModuleBedInfos {
	s.Length = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleBedInfos) SetWidth(v string) *HotelRoomInfoResponseBodyModuleBedInfos {
	s.Width = &v
	return s
}

type HotelRoomInfoResponseBodyModuleRoomImages struct {
	BedInfos2 *string `json:"bed_infos2,omitempty" xml:"bed_infos2,omitempty"`
	Tag       *int32  `json:"tag,omitempty" xml:"tag,omitempty"`
	// example:
	//
	// https://img.alicdn.com/imgextra/i3/6000000000003/O1CN01xkZQR41BtPxK1PQCb_!!6000000000003-0-hotel.jpg
	Url *string `json:"url,omitempty" xml:"url,omitempty"`
}

func (s HotelRoomInfoResponseBodyModuleRoomImages) String() string {
	return tea.Prettify(s)
}

func (s HotelRoomInfoResponseBodyModuleRoomImages) GoString() string {
	return s.String()
}

func (s *HotelRoomInfoResponseBodyModuleRoomImages) SetBedInfos2(v string) *HotelRoomInfoResponseBodyModuleRoomImages {
	s.BedInfos2 = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleRoomImages) SetTag(v int32) *HotelRoomInfoResponseBodyModuleRoomImages {
	s.Tag = &v
	return s
}

func (s *HotelRoomInfoResponseBodyModuleRoomImages) SetUrl(v string) *HotelRoomInfoResponseBodyModuleRoomImages {
	s.Url = &v
	return s
}

type HotelRoomInfoResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelRoomInfoResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelRoomInfoResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelRoomInfoResponse) GoString() string {
	return s.String()
}

func (s *HotelRoomInfoResponse) SetHeaders(v map[string]*string) *HotelRoomInfoResponse {
	s.Headers = v
	return s
}

func (s *HotelRoomInfoResponse) SetStatusCode(v int32) *HotelRoomInfoResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelRoomInfoResponse) SetBody(v *HotelRoomInfoResponseBody) *HotelRoomInfoResponse {
	s.Body = v
	return s
}

type HotelSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelSearchHeaders) GoString() string {
	return s.String()
}

func (s *HotelSearchHeaders) SetCommonHeaders(v map[string]*string) *HotelSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelSearchHeaders) SetXAcsBtripCorpToken(v string) *HotelSearchHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelSearchRequest struct {
	// example:
	//
	// 1
	AdultNum  *string   `json:"adult_num,omitempty" xml:"adult_num,omitempty"`
	BrandCode []*string `json:"brand_code,omitempty" xml:"brand_code,omitempty" type:"Repeated"`
	// example:
	//
	// 1000
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-22
	CheckInDate *string `json:"check_in_date,omitempty" xml:"check_in_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-22
	CheckOutDate *string `json:"check_out_date,omitempty" xml:"check_out_date,omitempty"`
	// example:
	//
	// 330100
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	// example:
	//
	// 1
	Dir *int32 `json:"dir,omitempty" xml:"dir,omitempty"`
	// example:
	//
	// 100
	Distance *int32 `json:"distance,omitempty" xml:"distance,omitempty"`
	// example:
	//
	// 330000
	DistrictCode *string `json:"district_code,omitempty" xml:"district_code,omitempty"`
	// example:
	//
	// 0
	HotelStar *string `json:"hotel_star,omitempty" xml:"hotel_star,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool   `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	KeyWords   *string `json:"key_words,omitempty" xml:"key_words,omitempty"`
	// example:
	//
	// 120.010059, 30.284666
	Location *string `json:"location,omitempty" xml:"location,omitempty"`
	// example:
	//
	// 1000
	MaxPrice *float64 `json:"max_price,omitempty" xml:"max_price,omitempty"`
	// example:
	//
	// 100
	MinPrice *float64 `json:"min_price,omitempty" xml:"min_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 1
	PayOverType *int32 `json:"pay_over_type,omitempty" xml:"pay_over_type,omitempty"`
	// example:
	//
	// 0
	PaymentType *int32   `json:"payment_type,omitempty" xml:"payment_type,omitempty"`
	Shids       []*int64 `json:"shids,omitempty" xml:"shids,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	SortCode *int32 `json:"sort_code,omitempty" xml:"sort_code,omitempty"`
	// example:
	//
	// 0
	SuperMan *int32 `json:"super_man,omitempty" xml:"super_man,omitempty"`
}

func (s HotelSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelSearchRequest) GoString() string {
	return s.String()
}

func (s *HotelSearchRequest) SetAdultNum(v string) *HotelSearchRequest {
	s.AdultNum = &v
	return s
}

func (s *HotelSearchRequest) SetBrandCode(v []*string) *HotelSearchRequest {
	s.BrandCode = v
	return s
}

func (s *HotelSearchRequest) SetBtripUserId(v string) *HotelSearchRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelSearchRequest) SetCheckInDate(v string) *HotelSearchRequest {
	s.CheckInDate = &v
	return s
}

func (s *HotelSearchRequest) SetCheckOutDate(v string) *HotelSearchRequest {
	s.CheckOutDate = &v
	return s
}

func (s *HotelSearchRequest) SetCityCode(v string) *HotelSearchRequest {
	s.CityCode = &v
	return s
}

func (s *HotelSearchRequest) SetDir(v int32) *HotelSearchRequest {
	s.Dir = &v
	return s
}

func (s *HotelSearchRequest) SetDistance(v int32) *HotelSearchRequest {
	s.Distance = &v
	return s
}

func (s *HotelSearchRequest) SetDistrictCode(v string) *HotelSearchRequest {
	s.DistrictCode = &v
	return s
}

func (s *HotelSearchRequest) SetHotelStar(v string) *HotelSearchRequest {
	s.HotelStar = &v
	return s
}

func (s *HotelSearchRequest) SetIsProtocol(v bool) *HotelSearchRequest {
	s.IsProtocol = &v
	return s
}

func (s *HotelSearchRequest) SetKeyWords(v string) *HotelSearchRequest {
	s.KeyWords = &v
	return s
}

func (s *HotelSearchRequest) SetLocation(v string) *HotelSearchRequest {
	s.Location = &v
	return s
}

func (s *HotelSearchRequest) SetMaxPrice(v float64) *HotelSearchRequest {
	s.MaxPrice = &v
	return s
}

func (s *HotelSearchRequest) SetMinPrice(v float64) *HotelSearchRequest {
	s.MinPrice = &v
	return s
}

func (s *HotelSearchRequest) SetPageNo(v int32) *HotelSearchRequest {
	s.PageNo = &v
	return s
}

func (s *HotelSearchRequest) SetPageSize(v int32) *HotelSearchRequest {
	s.PageSize = &v
	return s
}

func (s *HotelSearchRequest) SetPayOverType(v int32) *HotelSearchRequest {
	s.PayOverType = &v
	return s
}

func (s *HotelSearchRequest) SetPaymentType(v int32) *HotelSearchRequest {
	s.PaymentType = &v
	return s
}

func (s *HotelSearchRequest) SetShids(v []*int64) *HotelSearchRequest {
	s.Shids = v
	return s
}

func (s *HotelSearchRequest) SetSortCode(v int32) *HotelSearchRequest {
	s.SortCode = &v
	return s
}

func (s *HotelSearchRequest) SetSuperMan(v int32) *HotelSearchRequest {
	s.SuperMan = &v
	return s
}

type HotelSearchShrinkRequest struct {
	// example:
	//
	// 1
	AdultNum        *string `json:"adult_num,omitempty" xml:"adult_num,omitempty"`
	BrandCodeShrink *string `json:"brand_code,omitempty" xml:"brand_code,omitempty"`
	// example:
	//
	// 1000
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-22
	CheckInDate *string `json:"check_in_date,omitempty" xml:"check_in_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-02-22
	CheckOutDate *string `json:"check_out_date,omitempty" xml:"check_out_date,omitempty"`
	// example:
	//
	// 330100
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	// example:
	//
	// 1
	Dir *int32 `json:"dir,omitempty" xml:"dir,omitempty"`
	// example:
	//
	// 100
	Distance *int32 `json:"distance,omitempty" xml:"distance,omitempty"`
	// example:
	//
	// 330000
	DistrictCode *string `json:"district_code,omitempty" xml:"district_code,omitempty"`
	// example:
	//
	// 0
	HotelStar *string `json:"hotel_star,omitempty" xml:"hotel_star,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool   `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	KeyWords   *string `json:"key_words,omitempty" xml:"key_words,omitempty"`
	// example:
	//
	// 120.010059, 30.284666
	Location *string `json:"location,omitempty" xml:"location,omitempty"`
	// example:
	//
	// 1000
	MaxPrice *float64 `json:"max_price,omitempty" xml:"max_price,omitempty"`
	// example:
	//
	// 100
	MinPrice *float64 `json:"min_price,omitempty" xml:"min_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 1
	PayOverType *int32 `json:"pay_over_type,omitempty" xml:"pay_over_type,omitempty"`
	// example:
	//
	// 0
	PaymentType *int32  `json:"payment_type,omitempty" xml:"payment_type,omitempty"`
	ShidsShrink *string `json:"shids,omitempty" xml:"shids,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	SortCode *int32 `json:"sort_code,omitempty" xml:"sort_code,omitempty"`
	// example:
	//
	// 0
	SuperMan *int32 `json:"super_man,omitempty" xml:"super_man,omitempty"`
}

func (s HotelSearchShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelSearchShrinkRequest) GoString() string {
	return s.String()
}

func (s *HotelSearchShrinkRequest) SetAdultNum(v string) *HotelSearchShrinkRequest {
	s.AdultNum = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetBrandCodeShrink(v string) *HotelSearchShrinkRequest {
	s.BrandCodeShrink = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetBtripUserId(v string) *HotelSearchShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetCheckInDate(v string) *HotelSearchShrinkRequest {
	s.CheckInDate = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetCheckOutDate(v string) *HotelSearchShrinkRequest {
	s.CheckOutDate = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetCityCode(v string) *HotelSearchShrinkRequest {
	s.CityCode = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetDir(v int32) *HotelSearchShrinkRequest {
	s.Dir = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetDistance(v int32) *HotelSearchShrinkRequest {
	s.Distance = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetDistrictCode(v string) *HotelSearchShrinkRequest {
	s.DistrictCode = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetHotelStar(v string) *HotelSearchShrinkRequest {
	s.HotelStar = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetIsProtocol(v bool) *HotelSearchShrinkRequest {
	s.IsProtocol = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetKeyWords(v string) *HotelSearchShrinkRequest {
	s.KeyWords = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetLocation(v string) *HotelSearchShrinkRequest {
	s.Location = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetMaxPrice(v float64) *HotelSearchShrinkRequest {
	s.MaxPrice = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetMinPrice(v float64) *HotelSearchShrinkRequest {
	s.MinPrice = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetPageNo(v int32) *HotelSearchShrinkRequest {
	s.PageNo = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetPageSize(v int32) *HotelSearchShrinkRequest {
	s.PageSize = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetPayOverType(v int32) *HotelSearchShrinkRequest {
	s.PayOverType = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetPaymentType(v int32) *HotelSearchShrinkRequest {
	s.PaymentType = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetShidsShrink(v string) *HotelSearchShrinkRequest {
	s.ShidsShrink = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetSortCode(v int32) *HotelSearchShrinkRequest {
	s.SortCode = &v
	return s
}

func (s *HotelSearchShrinkRequest) SetSuperMan(v int32) *HotelSearchShrinkRequest {
	s.SuperMan = &v
	return s
}

type HotelSearchResponseBody struct {
	// example:
	//
	// 0
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// None
	Message *string                        `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelSearchResponseBody) GoString() string {
	return s.String()
}

func (s *HotelSearchResponseBody) SetCode(v string) *HotelSearchResponseBody {
	s.Code = &v
	return s
}

func (s *HotelSearchResponseBody) SetMessage(v string) *HotelSearchResponseBody {
	s.Message = &v
	return s
}

func (s *HotelSearchResponseBody) SetModule(v *HotelSearchResponseBodyModule) *HotelSearchResponseBody {
	s.Module = v
	return s
}

func (s *HotelSearchResponseBody) SetRequestId(v string) *HotelSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelSearchResponseBody) SetSuccess(v bool) *HotelSearchResponseBody {
	s.Success = &v
	return s
}

func (s *HotelSearchResponseBody) SetTraceId(v string) *HotelSearchResponseBody {
	s.TraceId = &v
	return s
}

type HotelSearchResponseBodyModule struct {
	Items []*HotelSearchResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
}

func (s HotelSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelSearchResponseBodyModule) SetItems(v []*HotelSearchResponseBodyModuleItems) *HotelSearchResponseBodyModule {
	s.Items = v
	return s
}

type HotelSearchResponseBodyModuleItems struct {
	BrandName *string `json:"brand_name,omitempty" xml:"brand_name,omitempty"`
	// example:
	//
	// 1902
	BtandCode *string `json:"btand_code,omitempty" xml:"btand_code,omitempty"`
	// example:
	//
	// 330100
	CityCode     *string                                         `json:"city_code,omitempty" xml:"city_code,omitempty"`
	DiscountDesc *HotelSearchResponseBodyModuleItemsDiscountDesc `json:"discount_desc,omitempty" xml:"discount_desc,omitempty" type:"Struct"`
	// example:
	//
	// 100
	Distance *int32 `json:"distance,omitempty" xml:"distance,omitempty"`
	// example:
	//
	// 330100
	DistrictCode *string `json:"district_code,omitempty" xml:"district_code,omitempty"`
	HotelAddress *string `json:"hotel_address,omitempty" xml:"hotel_address,omitempty"`
	// example:
	//
	// 55335212
	HotelCode *string `json:"hotel_code,omitempty" xml:"hotel_code,omitempty"`
	// example:
	//
	// Business travel hotel
	HotelEnName *string `json:"hotel_en_name,omitempty" xml:"hotel_en_name,omitempty"`
	HotelName   *string `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	// example:
	//
	// 3
	HotelStar *string `json:"hotel_star,omitempty" xml:"hotel_star,omitempty"`
	// example:
	//
	// https://img.alicdn.com/imgextra/i3/6000000000003/O1CN01xkZQR41BtPxK1PQCb_!!6000000000003-0-hotel.jpg
	ImageUrl *string `json:"image_url,omitempty" xml:"image_url,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// 119.844005,30.054384
	Location *string `json:"location,omitempty" xml:"location,omitempty"`
	// example:
	//
	// 100
	MinPrice         *float64 `json:"min_price,omitempty" xml:"min_price,omitempty"`
	OriginalMinPrice *float64 `json:"original_min_price,omitempty" xml:"original_min_price,omitempty"`
	// example:
	//
	// 3.2
	Score *string `json:"score,omitempty" xml:"score,omitempty"`
	// example:
	//
	// 0
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 0571-88886784-8888
	Tel *string `json:"tel,omitempty" xml:"tel,omitempty"`
}

func (s HotelSearchResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s HotelSearchResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *HotelSearchResponseBodyModuleItems) SetBrandName(v string) *HotelSearchResponseBodyModuleItems {
	s.BrandName = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetBtandCode(v string) *HotelSearchResponseBodyModuleItems {
	s.BtandCode = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetCityCode(v string) *HotelSearchResponseBodyModuleItems {
	s.CityCode = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetDiscountDesc(v *HotelSearchResponseBodyModuleItemsDiscountDesc) *HotelSearchResponseBodyModuleItems {
	s.DiscountDesc = v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetDistance(v int32) *HotelSearchResponseBodyModuleItems {
	s.Distance = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetDistrictCode(v string) *HotelSearchResponseBodyModuleItems {
	s.DistrictCode = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetHotelAddress(v string) *HotelSearchResponseBodyModuleItems {
	s.HotelAddress = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetHotelCode(v string) *HotelSearchResponseBodyModuleItems {
	s.HotelCode = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetHotelEnName(v string) *HotelSearchResponseBodyModuleItems {
	s.HotelEnName = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetHotelName(v string) *HotelSearchResponseBodyModuleItems {
	s.HotelName = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetHotelStar(v string) *HotelSearchResponseBodyModuleItems {
	s.HotelStar = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetImageUrl(v string) *HotelSearchResponseBodyModuleItems {
	s.ImageUrl = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetIsProtocol(v bool) *HotelSearchResponseBodyModuleItems {
	s.IsProtocol = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetLocation(v string) *HotelSearchResponseBodyModuleItems {
	s.Location = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetMinPrice(v float64) *HotelSearchResponseBodyModuleItems {
	s.MinPrice = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetOriginalMinPrice(v float64) *HotelSearchResponseBodyModuleItems {
	s.OriginalMinPrice = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetScore(v string) *HotelSearchResponseBodyModuleItems {
	s.Score = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetStatus(v int32) *HotelSearchResponseBodyModuleItems {
	s.Status = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItems) SetTel(v string) *HotelSearchResponseBodyModuleItems {
	s.Tel = &v
	return s
}

type HotelSearchResponseBodyModuleItemsDiscountDesc struct {
	CashReduceTotal *string                                                         `json:"cash_reduce_total,omitempty" xml:"cash_reduce_total,omitempty"`
	DinamicLabel    *string                                                         `json:"dinamic_label,omitempty" xml:"dinamic_label,omitempty"`
	DiscountDetail  []*HotelSearchResponseBodyModuleItemsDiscountDescDiscountDetail `json:"discount_detail,omitempty" xml:"discount_detail,omitempty" type:"Repeated"`
	SubTitle        *string                                                         `json:"sub_title,omitempty" xml:"sub_title,omitempty"`
	Title           *string                                                         `json:"title,omitempty" xml:"title,omitempty"`
}

func (s HotelSearchResponseBodyModuleItemsDiscountDesc) String() string {
	return tea.Prettify(s)
}

func (s HotelSearchResponseBodyModuleItemsDiscountDesc) GoString() string {
	return s.String()
}

func (s *HotelSearchResponseBodyModuleItemsDiscountDesc) SetCashReduceTotal(v string) *HotelSearchResponseBodyModuleItemsDiscountDesc {
	s.CashReduceTotal = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItemsDiscountDesc) SetDinamicLabel(v string) *HotelSearchResponseBodyModuleItemsDiscountDesc {
	s.DinamicLabel = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItemsDiscountDesc) SetDiscountDetail(v []*HotelSearchResponseBodyModuleItemsDiscountDescDiscountDetail) *HotelSearchResponseBodyModuleItemsDiscountDesc {
	s.DiscountDetail = v
	return s
}

func (s *HotelSearchResponseBodyModuleItemsDiscountDesc) SetSubTitle(v string) *HotelSearchResponseBodyModuleItemsDiscountDesc {
	s.SubTitle = &v
	return s
}

func (s *HotelSearchResponseBodyModuleItemsDiscountDesc) SetTitle(v string) *HotelSearchResponseBodyModuleItemsDiscountDesc {
	s.Title = &v
	return s
}

type HotelSearchResponseBodyModuleItemsDiscountDescDiscountDetail struct {
	LabelName []*string `json:"label_name,omitempty" xml:"label_name,omitempty" type:"Repeated"`
	MoneyDesc *string   `json:"money_desc,omitempty" xml:"money_desc,omitempty"`
}

func (s HotelSearchResponseBodyModuleItemsDiscountDescDiscountDetail) String() string {
	return tea.Prettify(s)
}

func (s HotelSearchResponseBodyModuleItemsDiscountDescDiscountDetail) GoString() string {
	return s.String()
}

func (s *HotelSearchResponseBodyModuleItemsDiscountDescDiscountDetail) SetLabelName(v []*string) *HotelSearchResponseBodyModuleItemsDiscountDescDiscountDetail {
	s.LabelName = v
	return s
}

func (s *HotelSearchResponseBodyModuleItemsDiscountDescDiscountDetail) SetMoneyDesc(v string) *HotelSearchResponseBodyModuleItemsDiscountDescDiscountDetail {
	s.MoneyDesc = &v
	return s
}

type HotelSearchResponse struct {
	Headers    map[string]*string       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelSearchResponse) GoString() string {
	return s.String()
}

func (s *HotelSearchResponse) SetHeaders(v map[string]*string) *HotelSearchResponse {
	s.Headers = v
	return s
}

func (s *HotelSearchResponse) SetStatusCode(v int32) *HotelSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelSearchResponse) SetBody(v *HotelSearchResponseBody) *HotelSearchResponse {
	s.Body = v
	return s
}

type HotelStaticInfoHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelStaticInfoHeaders) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoHeaders) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoHeaders) SetCommonHeaders(v map[string]*string) *HotelStaticInfoHeaders {
	s.CommonHeaders = v
	return s
}

func (s *HotelStaticInfoHeaders) SetXAcsBtripCorpToken(v string) *HotelStaticInfoHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelStaticInfoRequest struct {
	// This parameter is required.
	HotelIds []*string `json:"hotel_ids,omitempty" xml:"hotel_ids,omitempty" type:"Repeated"`
}

func (s HotelStaticInfoRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoRequest) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoRequest) SetHotelIds(v []*string) *HotelStaticInfoRequest {
	s.HotelIds = v
	return s
}

type HotelStaticInfoShrinkRequest struct {
	// This parameter is required.
	HotelIdsShrink *string `json:"hotel_ids,omitempty" xml:"hotel_ids,omitempty"`
}

func (s HotelStaticInfoShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoShrinkRequest) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoShrinkRequest) SetHotelIdsShrink(v string) *HotelStaticInfoShrinkRequest {
	s.HotelIdsShrink = &v
	return s
}

type HotelStaticInfoResponseBody struct {
	// example:
	//
	// 200
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// operation success.
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *HotelStaticInfoResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelStaticInfoResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoResponseBody) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoResponseBody) SetCode(v string) *HotelStaticInfoResponseBody {
	s.Code = &v
	return s
}

func (s *HotelStaticInfoResponseBody) SetMessage(v string) *HotelStaticInfoResponseBody {
	s.Message = &v
	return s
}

func (s *HotelStaticInfoResponseBody) SetModule(v *HotelStaticInfoResponseBodyModule) *HotelStaticInfoResponseBody {
	s.Module = v
	return s
}

func (s *HotelStaticInfoResponseBody) SetRequestId(v string) *HotelStaticInfoResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelStaticInfoResponseBody) SetSuccess(v bool) *HotelStaticInfoResponseBody {
	s.Success = &v
	return s
}

func (s *HotelStaticInfoResponseBody) SetTraceId(v string) *HotelStaticInfoResponseBody {
	s.TraceId = &v
	return s
}

type HotelStaticInfoResponseBodyModule struct {
	HotelStaticInfos []*HotelStaticInfoResponseBodyModuleHotelStaticInfos `json:"hotel_static_infos,omitempty" xml:"hotel_static_infos,omitempty" type:"Repeated"`
}

func (s HotelStaticInfoResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoResponseBodyModule) SetHotelStaticInfos(v []*HotelStaticInfoResponseBodyModuleHotelStaticInfos) *HotelStaticInfoResponseBodyModule {
	s.HotelStaticInfos = v
	return s
}

type HotelStaticInfoResponseBodyModuleHotelStaticInfos struct {
	BlockRoomTypeInformation map[string]*string `json:"block_room_type_information,omitempty" xml:"block_room_type_information,omitempty"`
	// example:
	//
	// 19039
	Brand     *string `json:"brand,omitempty" xml:"brand,omitempty"`
	BrandName *string `json:"brand_name,omitempty" xml:"brand_name,omitempty"`
	// example:
	//
	// 330100
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// CN
	Country *string `json:"country,omitempty" xml:"country,omitempty"`
	// example:
	//
	// CN
	CountryCode *string `json:"country_code,omitempty" xml:"country_code,omitempty"`
	Description *string `json:"description,omitempty" xml:"description,omitempty"`
	// example:
	//
	// 330183
	District     *string                                                      `json:"district,omitempty" xml:"district,omitempty"`
	DistrictName *string                                                      `json:"district_name,omitempty" xml:"district_name,omitempty"`
	ExpandInfo   *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo `json:"expand_info,omitempty" xml:"expand_info,omitempty" type:"Struct"`
	HotelAddress *string                                                      `json:"hotel_address,omitempty" xml:"hotel_address,omitempty"`
	// example:
	//
	// Building 5, Haichuang Building, 998 Wenyi West Road
	HotelEnAddress *string `json:"hotel_en_address,omitempty" xml:"hotel_en_address,omitempty"`
	// example:
	//
	// Business travel hotel
	HotelEnName *string `json:"hotel_en_name,omitempty" xml:"hotel_en_name,omitempty"`
	// example:
	//
	// 55335212
	HotelId   *string `json:"hotel_id,omitempty" xml:"hotel_id,omitempty"`
	HotelName *string `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	// example:
	//
	// 2020
	HotelOpenTime *string `json:"hotel_open_time,omitempty" xml:"hotel_open_time,omitempty"`
	// example:
	//
	// 0086#0571#28350117
	HotelPhones *string `json:"hotel_phones,omitempty" xml:"hotel_phones,omitempty"`
	// example:
	//
	// demo
	HotelPolicies *string `json:"hotel_policies,omitempty" xml:"hotel_policies,omitempty"`
	// example:
	//
	// 0086#0571#28350117
	Hotelfax   *string                                                        `json:"hotelfax,omitempty" xml:"hotelfax,omitempty"`
	Hotelpics  *string                                                        `json:"hotelpics,omitempty" xml:"hotelpics,omitempty"`
	Imageinfos []*HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos `json:"imageinfos,omitempty" xml:"imageinfos,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	InvoiceProviderMethod *string  `json:"invoice_provider_method,omitempty" xml:"invoice_provider_method,omitempty"`
	InvoiceTypes          []*int32 `json:"invoice_types,omitempty" xml:"invoice_types,omitempty" type:"Repeated"`
	// example:
	//
	// 119.844005,30.054384
	Location *string `json:"location,omitempty" xml:"location,omitempty"`
	// example:
	//
	// 330000
	Province     *string `json:"province,omitempty" xml:"province,omitempty"`
	ProvinceName *string `json:"province_name,omitempty" xml:"province_name,omitempty"`
	// example:
	//
	// 2
	RatingAverage *string                                                       `json:"rating_average,omitempty" xml:"rating_average,omitempty"`
	RoomInfos     []*HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos `json:"room_infos,omitempty" xml:"room_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Star *string `json:"star,omitempty" xml:"star,omitempty"`
	// example:
	//
	// 2
	StarRate *string `json:"star_rate,omitempty" xml:"star_rate,omitempty"`
	// example:
	//
	// 1
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// demo
	Themes *string `json:"themes,omitempty" xml:"themes,omitempty"`
	// example:
	//
	// demo
	VisaReminding *bool `json:"visa_reminding,omitempty" xml:"visa_reminding,omitempty"`
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfos) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetBlockRoomTypeInformation(v map[string]*string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.BlockRoomTypeInformation = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetBrand(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Brand = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetBrandName(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.BrandName = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetCityCode(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.CityCode = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetCityName(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.CityName = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetCountry(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Country = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetCountryCode(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.CountryCode = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetDescription(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Description = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetDistrict(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.District = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetDistrictName(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.DistrictName = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetExpandInfo(v *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.ExpandInfo = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetHotelAddress(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.HotelAddress = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetHotelEnAddress(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.HotelEnAddress = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetHotelEnName(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.HotelEnName = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetHotelId(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.HotelId = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetHotelName(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.HotelName = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetHotelOpenTime(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.HotelOpenTime = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetHotelPhones(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.HotelPhones = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetHotelPolicies(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.HotelPolicies = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetHotelfax(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Hotelfax = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetHotelpics(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Hotelpics = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetImageinfos(v []*HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Imageinfos = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetInvoiceProviderMethod(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.InvoiceProviderMethod = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetInvoiceTypes(v []*int32) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.InvoiceTypes = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetLocation(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Location = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetProvince(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Province = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetProvinceName(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.ProvinceName = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetRatingAverage(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.RatingAverage = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetRoomInfos(v []*HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.RoomInfos = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetStar(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Star = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetStarRate(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.StarRate = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetStatus(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Status = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetThemes(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.Themes = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfos) SetVisaReminding(v bool) *HotelStaticInfoResponseBodyModuleHotelStaticInfos {
	s.VisaReminding = &v
	return s
}

type HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo struct {
	// example:
	//
	// 17:00
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// example:
	//
	// 12:00
	CheckOut *string `json:"check_out,omitempty" xml:"check_out,omitempty"`
	// example:
	//
	// 2020
	DecorateTime    *string   `json:"decorate_time,omitempty" xml:"decorate_time,omitempty"`
	Floors          *string   `json:"floors,omitempty" xml:"floors,omitempty"`
	HotelFacilities []*string `json:"hotel_facilities,omitempty" xml:"hotel_facilities,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	HotelType *int32 `json:"hotel_type,omitempty" xml:"hotel_type,omitempty"`
	// example:
	//
	// 2020
	OpeningTime    *string   `json:"opening_time,omitempty" xml:"opening_time,omitempty"`
	RoomFacilities []*string `json:"room_facilities,omitempty" xml:"room_facilities,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Rooms   *int32    `json:"rooms,omitempty" xml:"rooms,omitempty"`
	Service []*string `json:"service,omitempty" xml:"service,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	ThemeTag *string `json:"theme_tag,omitempty" xml:"theme_tag,omitempty"`
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetCheckIn(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.CheckIn = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetCheckOut(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.CheckOut = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetDecorateTime(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.DecorateTime = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetFloors(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.Floors = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetHotelFacilities(v []*string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.HotelFacilities = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetHotelType(v int32) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.HotelType = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetOpeningTime(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.OpeningTime = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetRoomFacilities(v []*string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.RoomFacilities = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetRooms(v int32) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.Rooms = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetService(v []*string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.Service = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo) SetThemeTag(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosExpandInfo {
	s.ThemeTag = &v
	return s
}

type HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos struct {
	Desc *string `json:"desc,omitempty" xml:"desc,omitempty"`
	Tag  *int32  `json:"tag,omitempty" xml:"tag,omitempty"`
	// example:
	//
	// https://img.alicdn.com/imgextra/i3/6000000000003/O1CN01xkZQR41BtPxK1PQCb_!!6000000000003-0-hotel.jpg
	Url *string `json:"url,omitempty" xml:"url,omitempty"`
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos) SetDesc(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos {
	s.Desc = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos) SetTag(v int32) *HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos {
	s.Tag = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos) SetUrl(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosImageinfos {
	s.Url = &v
	return s
}

type HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos struct {
	BedInfoGroupList []*HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupList `json:"bed_info_group_list,omitempty" xml:"bed_info_group_list,omitempty" type:"Repeated"`
	BedInfos         []*HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos         `json:"bed_infos,omitempty" xml:"bed_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	ExtraBed *int32 `json:"extra_bed,omitempty" xml:"extra_bed,omitempty"`
	// example:
	//
	// demo
	ExtraBedDesc *string `json:"extra_bed_desc,omitempty" xml:"extra_bed_desc,omitempty"`
	// example:
	//
	// 1,2,3,4,5,6
	Floor *string `json:"floor,omitempty" xml:"floor,omitempty"`
	// example:
	//
	// 0
	InternetWay *string `json:"internet_way,omitempty" xml:"internet_way,omitempty"`
	// example:
	//
	// 1
	MaxOccupancy     *int32    `json:"max_occupancy,omitempty" xml:"max_occupancy,omitempty"`
	RoomFacilities   *string   `json:"room_facilities,omitempty" xml:"room_facilities,omitempty"`
	RoomFacilityList []*string `json:"room_facility_list,omitempty" xml:"room_facility_list,omitempty" type:"Repeated"`
	// example:
	//
	// 71652158
	RoomId *string `json:"room_id,omitempty" xml:"room_id,omitempty"`
	// example:
	//
	// //img.alicdn.com/imgextra/i3/6000000000003/O1CN01xkZQR41BtPxK1PQCb_!!6000000000003-0-hotel.jpg
	RoomImage  *string   `json:"room_image,omitempty" xml:"room_image,omitempty"`
	RoomImages []*string `json:"room_images,omitempty" xml:"room_images,omitempty" type:"Repeated"`
	RoomName   *string   `json:"room_name,omitempty" xml:"room_name,omitempty"`
	RoomType   *int32    `json:"room_type,omitempty" xml:"room_type,omitempty"`
	Roomarea   *string   `json:"roomarea,omitempty" xml:"roomarea,omitempty"`
	// example:
	//
	// 1
	Rooms *int32 `json:"rooms,omitempty" xml:"rooms,omitempty"`
	// example:
	//
	// 0
	Window     *string `json:"window,omitempty" xml:"window,omitempty"`
	WindowBad  *string `json:"window_bad,omitempty" xml:"window_bad,omitempty"`
	WindowView *string `json:"window_view,omitempty" xml:"window_view,omitempty"`
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetBedInfoGroupList(v []*HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupList) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.BedInfoGroupList = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetBedInfos(v []*HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.BedInfos = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetExtraBed(v int32) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.ExtraBed = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetExtraBedDesc(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.ExtraBedDesc = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetFloor(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.Floor = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetInternetWay(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.InternetWay = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetMaxOccupancy(v int32) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.MaxOccupancy = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetRoomFacilities(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.RoomFacilities = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetRoomFacilityList(v []*string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.RoomFacilityList = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetRoomId(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.RoomId = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetRoomImage(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.RoomImage = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetRoomImages(v []*string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.RoomImages = v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetRoomName(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.RoomName = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetRoomType(v int32) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.RoomType = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetRoomarea(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.Roomarea = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetRooms(v int32) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.Rooms = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetWindow(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.Window = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetWindowBad(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.WindowBad = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos) SetWindowView(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfos {
	s.WindowView = &v
	return s
}

type HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupList struct {
	BedInfos []*HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos `json:"bed_Infos,omitempty" xml:"bed_Infos,omitempty" type:"Repeated"`
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupList) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupList) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupList) SetBedInfos(v []*HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupList {
	s.BedInfos = v
	return s
}

type HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos struct {
	BedDesc *string `json:"bed_desc,omitempty" xml:"bed_desc,omitempty"`
	BedNum  *int32  `json:"bed_num,omitempty" xml:"bed_num,omitempty"`
	BedSize *string `json:"bed_size,omitempty" xml:"bed_size,omitempty"`
	BedType *string `json:"bed_type,omitempty" xml:"bed_type,omitempty"`
	Length  *string `json:"length,omitempty" xml:"length,omitempty"`
	Width   *string `json:"width,omitempty" xml:"width,omitempty"`
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos) SetBedDesc(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos {
	s.BedDesc = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos) SetBedNum(v int32) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos {
	s.BedNum = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos) SetBedSize(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos {
	s.BedSize = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos) SetBedType(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos {
	s.BedType = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos) SetLength(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos {
	s.Length = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos) SetWidth(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfoGroupListBedInfos {
	s.Width = &v
	return s
}

type HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos struct {
	BedDesc *string `json:"bed_desc,omitempty" xml:"bed_desc,omitempty"`
	// example:
	//
	// 1
	BedNum *int32 `json:"bed_num,omitempty" xml:"bed_num,omitempty"`
	// example:
	//
	// 1.8m
	BedSize *string `json:"bed_size,omitempty" xml:"bed_size,omitempty"`
	// example:
	//
	// 0
	BedType *string `json:"bed_type,omitempty" xml:"bed_type,omitempty"`
	Length  *string `json:"length,omitempty" xml:"length,omitempty"`
	Width   *string `json:"width,omitempty" xml:"width,omitempty"`
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos) SetBedDesc(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos {
	s.BedDesc = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos) SetBedNum(v int32) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos {
	s.BedNum = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos) SetBedSize(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos {
	s.BedSize = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos) SetBedType(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos {
	s.BedType = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos) SetLength(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos {
	s.Length = &v
	return s
}

func (s *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos) SetWidth(v string) *HotelStaticInfoResponseBodyModuleHotelStaticInfosRoomInfosBedInfos {
	s.Width = &v
	return s
}

type HotelStaticInfoResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelStaticInfoResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelStaticInfoResponse) String() string {
	return tea.Prettify(s)
}

func (s HotelStaticInfoResponse) GoString() string {
	return s.String()
}

func (s *HotelStaticInfoResponse) SetHeaders(v map[string]*string) *HotelStaticInfoResponse {
	s.Headers = v
	return s
}

func (s *HotelStaticInfoResponse) SetStatusCode(v int32) *HotelStaticInfoResponse {
	s.StatusCode = &v
	return s
}

func (s *HotelStaticInfoResponse) SetBody(v *HotelStaticInfoResponseBody) *HotelStaticInfoResponse {
	s.Body = v
	return s
}

type HotelSuggestV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s HotelSuggestV2Headers) String() string {
	return tea.Prettify(s)
}

func (s HotelSuggestV2Headers) GoString() string {
	return s.String()
}

func (s *HotelSuggestV2Headers) SetCommonHeaders(v map[string]*string) *HotelSuggestV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *HotelSuggestV2Headers) SetXAcsBtripCorpToken(v string) *HotelSuggestV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type HotelSuggestV2Request struct {
	// example:
	//
	// 1000
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// example:
	//
	// 2024-05-15
	CheckIn *string `json:"check_in,omitempty" xml:"check_in,omitempty"`
	// example:
	//
	// 2024-06-04
	CheckOut *string `json:"check_out,omitempty" xml:"check_out,omitempty"`
	// example:
	//
	// 330100
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	Keyword  *string `json:"keyword,omitempty" xml:"keyword,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	SearchType *int32 `json:"search_type,omitempty" xml:"search_type,omitempty"`
}

func (s HotelSuggestV2Request) String() string {
	return tea.Prettify(s)
}

func (s HotelSuggestV2Request) GoString() string {
	return s.String()
}

func (s *HotelSuggestV2Request) SetBtripUserId(v string) *HotelSuggestV2Request {
	s.BtripUserId = &v
	return s
}

func (s *HotelSuggestV2Request) SetCheckIn(v string) *HotelSuggestV2Request {
	s.CheckIn = &v
	return s
}

func (s *HotelSuggestV2Request) SetCheckOut(v string) *HotelSuggestV2Request {
	s.CheckOut = &v
	return s
}

func (s *HotelSuggestV2Request) SetCityCode(v string) *HotelSuggestV2Request {
	s.CityCode = &v
	return s
}

func (s *HotelSuggestV2Request) SetKeyword(v string) *HotelSuggestV2Request {
	s.Keyword = &v
	return s
}

func (s *HotelSuggestV2Request) SetSearchType(v int32) *HotelSuggestV2Request {
	s.SearchType = &v
	return s
}

type HotelSuggestV2ResponseBody struct {
	// example:
	//
	// 200
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// None
	Message *string                           `json:"message,omitempty" xml:"message,omitempty"`
	Module  *HotelSuggestV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s HotelSuggestV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s HotelSuggestV2ResponseBody) GoString() string {
	return s.String()
}

func (s *HotelSuggestV2ResponseBody) SetCode(v string) *HotelSuggestV2ResponseBody {
	s.Code = &v
	return s
}

func (s *HotelSuggestV2ResponseBody) SetMessage(v string) *HotelSuggestV2ResponseBody {
	s.Message = &v
	return s
}

func (s *HotelSuggestV2ResponseBody) SetModule(v *HotelSuggestV2ResponseBodyModule) *HotelSuggestV2ResponseBody {
	s.Module = v
	return s
}

func (s *HotelSuggestV2ResponseBody) SetRequestId(v string) *HotelSuggestV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *HotelSuggestV2ResponseBody) SetSuccess(v bool) *HotelSuggestV2ResponseBody {
	s.Success = &v
	return s
}

func (s *HotelSuggestV2ResponseBody) SetTraceId(v string) *HotelSuggestV2ResponseBody {
	s.TraceId = &v
	return s
}

type HotelSuggestV2ResponseBodyModule struct {
	GuessSuggestInfos   []*HotelSuggestV2ResponseBodyModuleGuessSuggestInfos   `json:"guess_suggest_infos,omitempty" xml:"guess_suggest_infos,omitempty" type:"Repeated"`
	KeywordSuggestInfos []*HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos `json:"keyword_suggest_infos,omitempty" xml:"keyword_suggest_infos,omitempty" type:"Repeated"`
	PopularSuggestInfos []*HotelSuggestV2ResponseBodyModulePopularSuggestInfos `json:"popular_suggest_infos,omitempty" xml:"popular_suggest_infos,omitempty" type:"Repeated"`
	Tips                *string                                                `json:"tips,omitempty" xml:"tips,omitempty"`
}

func (s HotelSuggestV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s HotelSuggestV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *HotelSuggestV2ResponseBodyModule) SetGuessSuggestInfos(v []*HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) *HotelSuggestV2ResponseBodyModule {
	s.GuessSuggestInfos = v
	return s
}

func (s *HotelSuggestV2ResponseBodyModule) SetKeywordSuggestInfos(v []*HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) *HotelSuggestV2ResponseBodyModule {
	s.KeywordSuggestInfos = v
	return s
}

func (s *HotelSuggestV2ResponseBodyModule) SetPopularSuggestInfos(v []*HotelSuggestV2ResponseBodyModulePopularSuggestInfos) *HotelSuggestV2ResponseBodyModule {
	s.PopularSuggestInfos = v
	return s
}

func (s *HotelSuggestV2ResponseBodyModule) SetTips(v string) *HotelSuggestV2ResponseBodyModule {
	s.Tips = &v
	return s
}

type HotelSuggestV2ResponseBodyModuleGuessSuggestInfos struct {
	Address *string `json:"address,omitempty" xml:"address,omitempty"`
	// example:
	//
	// 300100
	CityCode    *int32  `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName    *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	DisplayName *string `json:"display_name,omitempty" xml:"display_name,omitempty"`
	// example:
	//
	// 53853318
	HotelId *string `json:"hotel_id,omitempty" xml:"hotel_id,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01qKg25r1rKLOKxT3vB_!!6000000005612-2-tps-32-32.png
	Icon  *string `json:"icon,omitempty" xml:"icon,omitempty"`
	Point *string `json:"point,omitempty" xml:"point,omitempty"`
	// example:
	//
	// 524
	Price *string `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 0
	Region *int32 `json:"region,omitempty" xml:"region,omitempty"`
	// example:
	//
	// 10
	Type     *int32  `json:"type,omitempty" xml:"type,omitempty"`
	TypeDesc *string `json:"type_desc,omitempty" xml:"type_desc,omitempty"`
}

func (s HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) GoString() string {
	return s.String()
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetAddress(v string) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.Address = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetCityCode(v int32) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.CityCode = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetCityName(v string) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.CityName = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetDisplayName(v string) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.DisplayName = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetHotelId(v string) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.HotelId = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetIcon(v string) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.Icon = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetPoint(v string) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.Point = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetPrice(v string) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.Price = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetRegion(v int32) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.Region = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetType(v int32) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.Type = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos) SetTypeDesc(v string) *HotelSuggestV2ResponseBodyModuleGuessSuggestInfos {
	s.TypeDesc = &v
	return s
}

type HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos struct {
	Address              *string                                                                    `json:"address,omitempty" xml:"address,omitempty"`
	BusinessAreaWithCity []*HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity `json:"business_area_with_city,omitempty" xml:"business_area_with_city,omitempty" type:"Repeated"`
	// example:
	//
	// 300100
	CityCode    *int32  `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName    *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	DisplayName *string `json:"display_name,omitempty" xml:"display_name,omitempty"`
	// example:
	//
	// 53853318
	HotelId *string `json:"hotel_id,omitempty" xml:"hotel_id,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01qKg25r1rKLOKxT3vB_!!6000000005612-2-tps-32-32.png
	Icon  *string `json:"icon,omitempty" xml:"icon,omitempty"`
	Point *string `json:"point,omitempty" xml:"point,omitempty"`
	// example:
	//
	// 524
	Price *string `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 0
	Region *int32 `json:"region,omitempty" xml:"region,omitempty"`
	// example:
	//
	// 10
	Type     *int32  `json:"type,omitempty" xml:"type,omitempty"`
	TypeDesc *string `json:"type_desc,omitempty" xml:"type_desc,omitempty"`
}

func (s HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) GoString() string {
	return s.String()
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetAddress(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.Address = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetBusinessAreaWithCity(v []*HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.BusinessAreaWithCity = v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetCityCode(v int32) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.CityCode = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetCityName(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.CityName = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetDisplayName(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.DisplayName = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetHotelId(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.HotelId = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetIcon(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.Icon = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetPoint(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.Point = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetPrice(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.Price = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetRegion(v int32) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.Region = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetType(v int32) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.Type = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos) SetTypeDesc(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfos {
	s.TypeDesc = &v
	return s
}

type HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity struct {
	Address *string `json:"address,omitempty" xml:"address,omitempty"`
	// example:
	//
	// 300100
	CityCode    *int32  `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName    *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	DisplayName *string `json:"display_name,omitempty" xml:"display_name,omitempty"`
	// example:
	//
	// 57140953
	HotelId *string `json:"hotel_id,omitempty" xml:"hotel_id,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01qKg25r1rKLOKxT3vB_!!6000000005612-2-tps-32-32.png
	Icon  *string `json:"icon,omitempty" xml:"icon,omitempty"`
	Point *string `json:"point,omitempty" xml:"point,omitempty"`
	// example:
	//
	// 524
	Price *string `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 0
	Region *int32 `json:"region,omitempty" xml:"region,omitempty"`
	// example:
	//
	// 5
	Type     *int32  `json:"type,omitempty" xml:"type,omitempty"`
	TypeDesc *string `json:"type_desc,omitempty" xml:"type_desc,omitempty"`
}

func (s HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) String() string {
	return tea.Prettify(s)
}

func (s HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) GoString() string {
	return s.String()
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetAddress(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.Address = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetCityCode(v int32) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.CityCode = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetCityName(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.CityName = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetDisplayName(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.DisplayName = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetHotelId(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.HotelId = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetIcon(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.Icon = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetPoint(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.Point = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetPrice(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.Price = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetRegion(v int32) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.Region = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetType(v int32) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.Type = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity) SetTypeDesc(v string) *HotelSuggestV2ResponseBodyModuleKeywordSuggestInfosBusinessAreaWithCity {
	s.TypeDesc = &v
	return s
}

type HotelSuggestV2ResponseBodyModulePopularSuggestInfos struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN01x0q19E1QZSqLHVVNh_!!6000000001990-2-tps-54-54.png
	Icon         *string                                                            `json:"icon,omitempty" xml:"icon,omitempty"`
	PopularInfos []*HotelSuggestV2ResponseBodyModulePopularSuggestInfosPopularInfos `json:"popular_infos,omitempty" xml:"popular_infos,omitempty" type:"Repeated"`
	Title        *string                                                            `json:"title,omitempty" xml:"title,omitempty"`
}

func (s HotelSuggestV2ResponseBodyModulePopularSuggestInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelSuggestV2ResponseBodyModulePopularSuggestInfos) GoString() string {
	return s.String()
}

func (s *HotelSuggestV2ResponseBodyModulePopularSuggestInfos) SetIcon(v string) *HotelSuggestV2ResponseBodyModulePopularSuggestInfos {
	s.Icon = &v
	return s
}

func (s *HotelSuggestV2ResponseBodyModulePopularSuggestInfos) SetPopularInfos(v []*HotelSuggestV2ResponseBodyModulePopularSuggestInfosPopularInfos) *HotelSuggestV2ResponseBodyModulePopularSuggestInfos {
	s.PopularInfos = v
	return s
}

func (s *HotelSuggestV2ResponseBodyModulePopularSuggestInfos) SetTitle(v string) *HotelSuggestV2ResponseBodyModulePopularSuggestInfos {
	s.Title = &v
	return s
}

type HotelSuggestV2ResponseBodyModulePopularSuggestInfosPopularInfos struct {
	DisplayName *string `json:"display_name,omitempty" xml:"display_name,omitempty"`
}

func (s HotelSuggestV2ResponseBodyModulePopularSuggestInfosPopularInfos) String() string {
	return tea.Prettify(s)
}

func (s HotelSuggestV2ResponseBodyModulePopularSuggestInfosPopularInfos) GoString() string {
	return s.String()
}

func (s *HotelSuggestV2ResponseBodyModulePopularSuggestInfosPopularInfos) SetDisplayName(v string) *HotelSuggestV2ResponseBodyModulePopularSuggestInfosPopularInfos {
	s.DisplayName = &v
	return s
}

type HotelSuggestV2Response struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *HotelSuggestV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s HotelSuggestV2Response) String() string {
	return tea.Prettify(s)
}

func (s HotelSuggestV2Response) GoString() string {
	return s.String()
}

func (s *HotelSuggestV2Response) SetHeaders(v map[string]*string) *HotelSuggestV2Response {
	s.Headers = v
	return s
}

func (s *HotelSuggestV2Response) SetStatusCode(v int32) *HotelSuggestV2Response {
	s.StatusCode = &v
	return s
}

func (s *HotelSuggestV2Response) SetBody(v *HotelSuggestV2ResponseBody) *HotelSuggestV2Response {
	s.Body = v
	return s
}

type IeFlightBillSettlementQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s IeFlightBillSettlementQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s IeFlightBillSettlementQueryHeaders) GoString() string {
	return s.String()
}

func (s *IeFlightBillSettlementQueryHeaders) SetCommonHeaders(v map[string]*string) *IeFlightBillSettlementQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IeFlightBillSettlementQueryHeaders) SetXAcsBtripSoCorpToken(v string) *IeFlightBillSettlementQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type IeFlightBillSettlementQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-02
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
}

func (s IeFlightBillSettlementQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s IeFlightBillSettlementQueryRequest) GoString() string {
	return s.String()
}

func (s *IeFlightBillSettlementQueryRequest) SetPageNo(v int32) *IeFlightBillSettlementQueryRequest {
	s.PageNo = &v
	return s
}

func (s *IeFlightBillSettlementQueryRequest) SetPageSize(v int32) *IeFlightBillSettlementQueryRequest {
	s.PageSize = &v
	return s
}

func (s *IeFlightBillSettlementQueryRequest) SetPeriodEnd(v string) *IeFlightBillSettlementQueryRequest {
	s.PeriodEnd = &v
	return s
}

func (s *IeFlightBillSettlementQueryRequest) SetPeriodStart(v string) *IeFlightBillSettlementQueryRequest {
	s.PeriodStart = &v
	return s
}

type IeFlightBillSettlementQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                        `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                        `json:"message,omitempty" xml:"message,omitempty"`
	Module  *IeFlightBillSettlementQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// true
	MorePage *bool `json:"more_page,omitempty" xml:"more_page,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210e842b16611337974412836dae27
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s IeFlightBillSettlementQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IeFlightBillSettlementQueryResponseBody) GoString() string {
	return s.String()
}

func (s *IeFlightBillSettlementQueryResponseBody) SetCode(v string) *IeFlightBillSettlementQueryResponseBody {
	s.Code = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBody) SetMessage(v string) *IeFlightBillSettlementQueryResponseBody {
	s.Message = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBody) SetModule(v *IeFlightBillSettlementQueryResponseBodyModule) *IeFlightBillSettlementQueryResponseBody {
	s.Module = v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBody) SetMorePage(v bool) *IeFlightBillSettlementQueryResponseBody {
	s.MorePage = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBody) SetRequestId(v string) *IeFlightBillSettlementQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBody) SetSuccess(v bool) *IeFlightBillSettlementQueryResponseBody {
	s.Success = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBody) SetTraceId(v string) *IeFlightBillSettlementQueryResponseBody {
	s.TraceId = &v
	return s
}

type IeFlightBillSettlementQueryResponseBodyModule struct {
	// example:
	//
	// 11
	Category *int32 `json:"category,omitempty" xml:"category,omitempty"`
	// example:
	//
	// corp1
	CorpId   *string                                                  `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	DataList []*IeFlightBillSettlementQueryResponseBodyModuleDataList `json:"data_list,omitempty" xml:"data_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2021-10-14
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// example:
	//
	// 2021-10-13
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
	// example:
	//
	// 1402
	TotalNum *int64 `json:"total_num,omitempty" xml:"total_num,omitempty"`
}

func (s IeFlightBillSettlementQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IeFlightBillSettlementQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IeFlightBillSettlementQueryResponseBodyModule) SetCategory(v int32) *IeFlightBillSettlementQueryResponseBodyModule {
	s.Category = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModule) SetCorpId(v string) *IeFlightBillSettlementQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModule) SetDataList(v []*IeFlightBillSettlementQueryResponseBodyModuleDataList) *IeFlightBillSettlementQueryResponseBodyModule {
	s.DataList = v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModule) SetPeriodEnd(v string) *IeFlightBillSettlementQueryResponseBodyModule {
	s.PeriodEnd = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModule) SetPeriodStart(v string) *IeFlightBillSettlementQueryResponseBodyModule {
	s.PeriodStart = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModule) SetTotalNum(v int64) *IeFlightBillSettlementQueryResponseBodyModule {
	s.TotalNum = &v
	return s
}

type IeFlightBillSettlementQueryResponseBodyModuleDataList struct {
	// example:
	//
	// 1
	AdvanceDay *int32 `json:"advance_day,omitempty" xml:"advance_day,omitempty"`
	// example:
	//
	// MU
	AirlineCorpCode *string `json:"airline_corp_code,omitempty" xml:"airline_corp_code,omitempty"`
	AirlineCorpName *string `json:"airline_corp_name,omitempty" xml:"airline_corp_name,omitempty"`
	// example:
	//
	// 2021123432260
	AlipayTradeNo    *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	ApplyArrCityCode *string `json:"apply_arr_city_code,omitempty" xml:"apply_arr_city_code,omitempty"`
	ApplyArrCityName *string `json:"apply_arr_city_name,omitempty" xml:"apply_arr_city_name,omitempty"`
	ApplyDepCityCode *string `json:"apply_dep_city_code,omitempty" xml:"apply_dep_city_code,omitempty"`
	ApplyDepCityName *string `json:"apply_dep_city_name,omitempty" xml:"apply_dep_city_name,omitempty"`
	// 审批扩展自定义字段
	ApplyExtendField *string `json:"apply_extend_field,omitempty" xml:"apply_extend_field,omitempty"`
	// example:
	//
	// 103189557
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// CAN
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrCity        *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrCityCode    *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCountry     *string `json:"arr_country,omitempty" xml:"arr_country,omitempty"`
	ArrCountryCode *string `json:"arr_country_code,omitempty" xml:"arr_country_code,omitempty"`
	// example:
	//
	// 2021-10-02
	ArrDate    *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	ArrStation *string `json:"arr_station,omitempty" xml:"arr_station,omitempty"`
	// example:
	//
	// 13:30:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 2020-12-23T20:18Z
	BillRecordTime *string `json:"bill_record_time,omitempty" xml:"bill_record_time,omitempty"`
	BookMode       *string `json:"book_mode,omitempty" xml:"book_mode,omitempty"`
	// example:
	//
	// 2021-10-01 00:17:05
	BookTime *string `json:"book_time,omitempty" xml:"book_time,omitempty"`
	// example:
	//
	// al_xinuan.zsy
	BookerId *string `json:"booker_id,omitempty" xml:"booker_id,omitempty"`
	// example:
	//
	// 70022164
	BookerJobNo *string `json:"booker_job_no,omitempty" xml:"booker_job_no,omitempty"`
	BookerName  *string `json:"booker_name,omitempty" xml:"booker_name,omitempty"`
	// example:
	//
	// 23.9
	BtripCouponFee     *float64 `json:"btrip_coupon_fee,omitempty" xml:"btrip_coupon_fee,omitempty"`
	BusinessTripResult *string  `json:"business_trip_result,omitempty" xml:"business_trip_result,omitempty"`
	// example:
	//
	// R
	Cabin      *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// example:
	//
	// 1
	CapitalDirection  *string `json:"capital_direction,omitempty" xml:"capital_direction,omitempty"`
	CascadeDepartment *string `json:"cascade_department,omitempty" xml:"cascade_department,omitempty"`
	// example:
	//
	// 23.0
	ChangeFee    *float64 `json:"change_fee,omitempty" xml:"change_fee,omitempty"`
	ChangeResult *string  `json:"change_result,omitempty" xml:"change_result,omitempty"`
	// example:
	//
	// 460
	CorpPayOrderFee *float64 `json:"corp_pay_order_fee,omitempty" xml:"corp_pay_order_fee,omitempty"`
	CostCenter      *string  `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	// example:
	//
	// 8b7f3cd-24324-097
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// 1
	Coupon *float64 `json:"coupon,omitempty" xml:"coupon,omitempty"`
	// example:
	//
	// KHN
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepCityCode    *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCountry     *string `json:"dep_country,omitempty" xml:"dep_country,omitempty"`
	DepCountryCode *string `json:"dep_country_code,omitempty" xml:"dep_country_code,omitempty"`
	Department     *string `json:"department,omitempty" xml:"department,omitempty"`
	// example:
	//
	// 2345866
	DepartmentId *string `json:"department_id,omitempty" xml:"department_id,omitempty"`
	DeptCity     *string `json:"dept_city,omitempty" xml:"dept_city,omitempty"`
	// example:
	//
	// 2021-10-02
	DeptDate    *string `json:"dept_date,omitempty" xml:"dept_date,omitempty"`
	DeptStation *string `json:"dept_station,omitempty" xml:"dept_station,omitempty"`
	// example:
	//
	// 12:00:00
	DeptTime *string `json:"dept_time,omitempty" xml:"dept_time,omitempty"`
	// example:
	//
	// 51%
	Discount     *string `json:"discount,omitempty" xml:"discount,omitempty"`
	ExceedReason *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	// example:
	//
	// 20101
	FeeType *string `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	// example:
	//
	// MU9684
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// 4564547
	Index *string `json:"index,omitempty" xml:"index,omitempty"`
	// example:
	//
	// 23.9
	InsuranceFee *float64 `json:"insurance_fee,omitempty" xml:"insurance_fee,omitempty"`
	// example:
	//
	// 15548214852
	InsuranceNumber *string `json:"insurance_number,omitempty" xml:"insurance_number,omitempty"`
	InvoiceTitle    *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// 2021-10-01 00:17:13
	MostDifferenceDeptTime *string `json:"most_difference_dept_time,omitempty" xml:"most_difference_dept_time,omitempty"`
	// example:
	//
	// 23%
	MostDifferenceDiscount *string `json:"most_difference_discount,omitempty" xml:"most_difference_discount,omitempty"`
	// example:
	//
	// MU9684
	MostDifferenceFlightNo *string `json:"most_difference_flight_no,omitempty" xml:"most_difference_flight_no,omitempty"`
	// example:
	//
	// 23.9
	MostDifferencePrice  *float64 `json:"most_difference_price,omitempty" xml:"most_difference_price,omitempty"`
	MostDifferenceReason *string  `json:"most_difference_reason,omitempty" xml:"most_difference_reason,omitempty"`
	// example:
	//
	// 23.9
	MostPrice *float64 `json:"most_price,omitempty" xml:"most_price,omitempty"`
	// example:
	//
	// 23.9
	NegotiationCouponFee *float64 `json:"negotiation_coupon_fee,omitempty" xml:"negotiation_coupon_fee,omitempty"`
	// example:
	//
	// 234223423423
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// null
	OrderStatusDesc *string `json:"order_status_desc,omitempty" xml:"order_status_desc,omitempty"`
	// example:
	//
	// 234324324423
	OverApplyId           *string `json:"over_apply_id,omitempty" xml:"over_apply_id,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 4564547
	PrimaryId *int64 `json:"primary_id,omitempty" xml:"primary_id,omitempty"`
	// example:
	//
	// 23423432423
	ProjectCode      *string  `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName      *string  `json:"project_name,omitempty" xml:"project_name,omitempty"`
	RefundChangeCost *float64 `json:"refund_change_cost,omitempty" xml:"refund_change_cost,omitempty"`
	// example:
	//
	// 23.9
	RefundFee    *float64 `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	RefundResult *string  `json:"refund_result,omitempty" xml:"refund_result,omitempty"`
	Remark       *string  `json:"remark,omitempty" xml:"remark,omitempty"`
	RepeatRefund *string  `json:"repeat_refund,omitempty" xml:"repeat_refund,omitempty"`
	// example:
	//
	// 410
	SealPrice   *float64 `json:"seal_price,omitempty" xml:"seal_price,omitempty"`
	SegmentType *string  `json:"segment_type,omitempty" xml:"segment_type,omitempty"`
	// example:
	//
	// 23.9
	ServiceFee *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 350
	SettlementFee *float64 `json:"settlement_fee,omitempty" xml:"settlement_fee,omitempty"`
	// example:
	//
	// 6.11
	SettlementGrantFee *float64 `json:"settlement_grant_fee,omitempty" xml:"settlement_grant_fee,omitempty"`
	// example:
	//
	// 2021-10-08 23:39:01
	SettlementTime *string `json:"settlement_time,omitempty" xml:"settlement_time,omitempty"`
	// example:
	//
	// 4
	SettlementType *string `json:"settlement_type,omitempty" xml:"settlement_type,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 123123232
	SubOrderId *string `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
	// example:
	//
	// 125.6
	TaxFee *float64 `json:"tax_fee,omitempty" xml:"tax_fee,omitempty"`
	// 税率
	//
	// example:
	//
	// 6%
	TaxRate          *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	ThirdItineraryId *string `json:"third_itinerary_id,omitempty" xml:"third_itinerary_id,omitempty"`
	// example:
	//
	// 781-6586234234324
	TicketId *string `json:"ticket_id,omitempty" xml:"ticket_id,omitempty"`
	// example:
	//
	// CAN-KUL-BKK
	Trade *string `json:"trade,omitempty" xml:"trade,omitempty"`
	// example:
	//
	// 54463464
	TravelerId *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	// example:
	//
	// 326246
	TravelerJobNo *string `json:"traveler_job_no,omitempty" xml:"traveler_job_no,omitempty"`
	TravelerName  *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
	// example:
	//
	// 11
	VoucherType *int32 `json:"voucher_type,omitempty" xml:"voucher_type,omitempty"`
}

func (s IeFlightBillSettlementQueryResponseBodyModuleDataList) String() string {
	return tea.Prettify(s)
}

func (s IeFlightBillSettlementQueryResponseBodyModuleDataList) GoString() string {
	return s.String()
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetAdvanceDay(v int32) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.AdvanceDay = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetAirlineCorpCode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.AirlineCorpCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetAirlineCorpName(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.AirlineCorpName = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetAlipayTradeNo(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.AlipayTradeNo = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityCode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityName(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityName = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityCode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityName(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityName = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetApplyExtendField(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyExtendField = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetApplyId(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetArrAirportCode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrAirportCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetArrCity(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrCity = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetArrCityCode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrCityCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetArrCountry(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrCountry = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetArrCountryCode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrCountryCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetArrDate(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrDate = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetArrStation(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrStation = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetArrTime(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ArrTime = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetBillRecordTime(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.BillRecordTime = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetBookMode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.BookMode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetBookTime(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.BookTime = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetBookerId(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.BookerId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetBookerJobNo(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.BookerJobNo = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetBookerName(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.BookerName = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetBtripCouponFee(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.BtripCouponFee = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetBusinessTripResult(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.BusinessTripResult = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetCabin(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.Cabin = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetCabinClass(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.CabinClass = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetCapitalDirection(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.CapitalDirection = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetCascadeDepartment(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.CascadeDepartment = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetChangeFee(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ChangeFee = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetChangeResult(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ChangeResult = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetCorpPayOrderFee(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.CorpPayOrderFee = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetCostCenter(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenter = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetCostCenterNumber(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenterNumber = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetCoupon(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.Coupon = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDepAirportCode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.DepAirportCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDepCityCode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.DepCityCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDepCountry(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.DepCountry = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDepCountryCode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.DepCountryCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDepartment(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.Department = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDepartmentId(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.DepartmentId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDeptCity(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.DeptCity = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDeptDate(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.DeptDate = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDeptStation(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.DeptStation = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDeptTime(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.DeptTime = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetDiscount(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.Discount = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetExceedReason(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ExceedReason = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetFeeType(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.FeeType = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetFlightNo(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.FlightNo = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetIndex(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.Index = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetInsuranceFee(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.InsuranceFee = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetInsuranceNumber(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.InsuranceNumber = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetInvoiceTitle(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.InvoiceTitle = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetMostDifferenceDeptTime(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostDifferenceDeptTime = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetMostDifferenceDiscount(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostDifferenceDiscount = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetMostDifferenceFlightNo(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostDifferenceFlightNo = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetMostDifferencePrice(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostDifferencePrice = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetMostDifferenceReason(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostDifferenceReason = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetMostPrice(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.MostPrice = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetNegotiationCouponFee(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.NegotiationCouponFee = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetOrderId(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.OrderId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetOrderStatusDesc(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.OrderStatusDesc = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetOverApplyId(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.OverApplyId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentId(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentName(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetPrimaryId(v int64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.PrimaryId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetProjectCode(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetProjectName(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectName = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetRefundChangeCost(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.RefundChangeCost = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetRefundFee(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.RefundFee = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetRefundResult(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.RefundResult = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetRemark(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.Remark = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetRepeatRefund(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.RepeatRefund = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetSealPrice(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.SealPrice = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetSegmentType(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.SegmentType = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetServiceFee(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ServiceFee = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetSettlementFee(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementFee = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetSettlementGrantFee(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementGrantFee = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetSettlementTime(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementTime = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetSettlementType(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementType = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetStatus(v int32) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.Status = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetSubOrderId(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.SubOrderId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetTaxFee(v float64) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.TaxFee = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetTaxRate(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.TaxRate = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetThirdItineraryId(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.ThirdItineraryId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetTicketId(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.TicketId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetTrade(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.Trade = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetTravelerId(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerId = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetTravelerJobNo(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerJobNo = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetTravelerName(v string) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerName = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponseBodyModuleDataList) SetVoucherType(v int32) *IeFlightBillSettlementQueryResponseBodyModuleDataList {
	s.VoucherType = &v
	return s
}

type IeFlightBillSettlementQueryResponse struct {
	Headers    map[string]*string                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IeFlightBillSettlementQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IeFlightBillSettlementQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s IeFlightBillSettlementQueryResponse) GoString() string {
	return s.String()
}

func (s *IeFlightBillSettlementQueryResponse) SetHeaders(v map[string]*string) *IeFlightBillSettlementQueryResponse {
	s.Headers = v
	return s
}

func (s *IeFlightBillSettlementQueryResponse) SetStatusCode(v int32) *IeFlightBillSettlementQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *IeFlightBillSettlementQueryResponse) SetBody(v *IeFlightBillSettlementQueryResponseBody) *IeFlightBillSettlementQueryResponse {
	s.Body = v
	return s
}

type IeHotelBillSettlementQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s IeHotelBillSettlementQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s IeHotelBillSettlementQueryHeaders) GoString() string {
	return s.String()
}

func (s *IeHotelBillSettlementQueryHeaders) SetCommonHeaders(v map[string]*string) *IeHotelBillSettlementQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IeHotelBillSettlementQueryHeaders) SetXAcsBtripSoCorpToken(v string) *IeHotelBillSettlementQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type IeHotelBillSettlementQueryRequest struct {
	// example:
	//
	// 12
	Category *int32 `json:"category,omitempty" xml:"category,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// example:
	//
	// 100
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-02
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
}

func (s IeHotelBillSettlementQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s IeHotelBillSettlementQueryRequest) GoString() string {
	return s.String()
}

func (s *IeHotelBillSettlementQueryRequest) SetCategory(v int32) *IeHotelBillSettlementQueryRequest {
	s.Category = &v
	return s
}

func (s *IeHotelBillSettlementQueryRequest) SetPageNo(v int32) *IeHotelBillSettlementQueryRequest {
	s.PageNo = &v
	return s
}

func (s *IeHotelBillSettlementQueryRequest) SetPageSize(v int32) *IeHotelBillSettlementQueryRequest {
	s.PageSize = &v
	return s
}

func (s *IeHotelBillSettlementQueryRequest) SetPeriodEnd(v string) *IeHotelBillSettlementQueryRequest {
	s.PeriodEnd = &v
	return s
}

func (s *IeHotelBillSettlementQueryRequest) SetPeriodStart(v string) *IeHotelBillSettlementQueryRequest {
	s.PeriodStart = &v
	return s
}

type IeHotelBillSettlementQueryResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *IeHotelBillSettlementQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 210e877f16763560074236874d5268
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// True
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 2103a08a16861217249785276d5a87
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s IeHotelBillSettlementQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IeHotelBillSettlementQueryResponseBody) GoString() string {
	return s.String()
}

func (s *IeHotelBillSettlementQueryResponseBody) SetCode(v string) *IeHotelBillSettlementQueryResponseBody {
	s.Code = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBody) SetMessage(v string) *IeHotelBillSettlementQueryResponseBody {
	s.Message = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBody) SetModule(v *IeHotelBillSettlementQueryResponseBodyModule) *IeHotelBillSettlementQueryResponseBody {
	s.Module = v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBody) SetRequestId(v string) *IeHotelBillSettlementQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBody) SetSuccess(v bool) *IeHotelBillSettlementQueryResponseBody {
	s.Success = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBody) SetTraceId(v string) *IeHotelBillSettlementQueryResponseBody {
	s.TraceId = &v
	return s
}

type IeHotelBillSettlementQueryResponseBodyModule struct {
	// example:
	//
	// 12
	Category *int32 `json:"category,omitempty" xml:"category,omitempty"`
	// example:
	//
	// corp1
	CorpId   *string                                                 `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	DataList []*IeHotelBillSettlementQueryResponseBodyModuleDataList `json:"data_list,omitempty" xml:"data_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1012039195340093034
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 2022-11-02
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// example:
	//
	// 2022-11-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
	// example:
	//
	// 30
	TotalSize *int64 `json:"total_size,omitempty" xml:"total_size,omitempty"`
}

func (s IeHotelBillSettlementQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IeHotelBillSettlementQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IeHotelBillSettlementQueryResponseBodyModule) SetCategory(v int32) *IeHotelBillSettlementQueryResponseBodyModule {
	s.Category = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModule) SetCorpId(v string) *IeHotelBillSettlementQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModule) SetDataList(v []*IeHotelBillSettlementQueryResponseBodyModuleDataList) *IeHotelBillSettlementQueryResponseBodyModule {
	s.DataList = v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModule) SetOrderId(v string) *IeHotelBillSettlementQueryResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModule) SetPeriodEnd(v string) *IeHotelBillSettlementQueryResponseBodyModule {
	s.PeriodEnd = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModule) SetPeriodStart(v string) *IeHotelBillSettlementQueryResponseBodyModule {
	s.PeriodStart = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModule) SetTotalSize(v int64) *IeHotelBillSettlementQueryResponseBodyModule {
	s.TotalSize = &v
	return s
}

type IeHotelBillSettlementQueryResponseBodyModuleDataList struct {
	// example:
	//
	// 2021123432260
	AlipayTradeNo *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	// example:
	//
	// AUD
	AmountCurrency *string `json:"amount_currency,omitempty" xml:"amount_currency,omitempty"`
	// example:
	//
	// MDG
	ApplyArrCityCode *string `json:"apply_arr_city_code,omitempty" xml:"apply_arr_city_code,omitempty"`
	ApplyArrCityName *string `json:"apply_arr_city_name,omitempty" xml:"apply_arr_city_name,omitempty"`
	// example:
	//
	// HRB
	ApplyDepCityCode *string `json:"apply_dep_city_code,omitempty" xml:"apply_dep_city_code,omitempty"`
	ApplyDepCityName *string `json:"apply_dep_city_name,omitempty" xml:"apply_dep_city_name,omitempty"`
	ApplyExtendField *string `json:"apply_extend_field,omitempty" xml:"apply_extend_field,omitempty"`
	// example:
	//
	// 103189557
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 1.0
	AverageNights *float64 `json:"average_nights,omitempty" xml:"average_nights,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	BillRecordTime *string `json:"bill_record_time,omitempty" xml:"bill_record_time,omitempty"`
	BookReason     *string `json:"book_reason,omitempty" xml:"book_reason,omitempty"`
	// example:
	//
	// 2021-10-08 23:38:55
	BookTime *string `json:"book_time,omitempty" xml:"book_time,omitempty"`
	// example:
	//
	// al_xinuan.zsy
	BookerId *string `json:"booker_id,omitempty" xml:"booker_id,omitempty"`
	// example:
	//
	// 70022164
	BookerJobNo *string `json:"booker_job_no,omitempty" xml:"booker_job_no,omitempty"`
	BookerName  *string `json:"booker_name,omitempty" xml:"booker_name,omitempty"`
	BrandGroup  *string `json:"brand_group,omitempty" xml:"brand_group,omitempty"`
	// example:
	//
	// XXX
	BrandName *string `json:"brand_name,omitempty" xml:"brand_name,omitempty"`
	// example:
	//
	// 1345
	BusinessExpense    *int64  `json:"business_expense,omitempty" xml:"business_expense,omitempty"`
	BusinessTripResult *string `json:"business_trip_result,omitempty" xml:"business_trip_result,omitempty"`
	// example:
	//
	// 1
	CapitalDirection  *string `json:"capital_direction,omitempty" xml:"capital_direction,omitempty"`
	CascadeDepartment *string `json:"cascade_department,omitempty" xml:"cascade_department,omitempty"`
	// example:
	//
	// 2021-10-14 00:00:00
	CheckInDate *string `json:"check_in_date,omitempty" xml:"check_in_date,omitempty"`
	// example:
	//
	// 2021-10-16 00:00:00
	CheckoutDate *string `json:"checkout_date,omitempty" xml:"checkout_date,omitempty"`
	City         *string `json:"city,omitempty" xml:"city,omitempty"`
	// example:
	//
	// 110100
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	// example:
	//
	// 12
	CorpRefundFee *float64 `json:"corp_refund_fee,omitempty" xml:"corp_refund_fee,omitempty"`
	// example:
	//
	// 1000
	CorpTotalFee *float64 `json:"corp_total_fee,omitempty" xml:"corp_total_fee,omitempty"`
	CostCenter   *string  `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	// example:
	//
	// 8b7f3cd-24324-097
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	Country          *string `json:"country,omitempty" xml:"country,omitempty"`
	// example:
	//
	// 1454567
	CountryCode  *string `json:"country_code,omitempty" xml:"country_code,omitempty"`
	Department   *string `json:"department,omitempty" xml:"department,omitempty"`
	DepartmentId *string `json:"department_id,omitempty" xml:"department_id,omitempty"`
	ExceedReason *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	// example:
	//
	// 20101
	FeeType *string `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	// example:
	//
	// 10.1
	Fines *float64 `json:"fines,omitempty" xml:"fines,omitempty"`
	// example:
	//
	// 345
	ForeignBusinessExpense *int64  `json:"foreign_business_expense,omitempty" xml:"foreign_business_expense,omitempty"`
	HotelName              *string `json:"hotel_name,omitempty" xml:"hotel_name,omitempty"`
	// example:
	//
	// 5
	HotelStar *string `json:"hotel_star,omitempty" xml:"hotel_star,omitempty"`
	// example:
	//
	// 4564547
	Index            *string `json:"index,omitempty" xml:"index,omitempty"`
	InvoiceTitle     *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	IsEarlyDeparture *string `json:"is_early_departure,omitempty" xml:"is_early_departure,omitempty"`
	IsNegotiation    *string `json:"is_negotiation,omitempty" xml:"is_negotiation,omitempty"`
	IsShareStr       *string `json:"is_share_str,omitempty" xml:"is_share_str,omitempty"`
	// example:
	//
	// 132143534543
	MainApplyId *string `json:"main_apply_id,omitempty" xml:"main_apply_id,omitempty"`
	// example:
	//
	// 2
	Nights *int32 `json:"nights,omitempty" xml:"nights,omitempty"`
	// example:
	//
	// 110285961234324
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1088.96
	OrderPrice *float64 `json:"order_price,omitempty" xml:"order_price,omitempty"`
	// example:
	//
	// null
	OrderStatusDesc *string `json:"order_status_desc,omitempty" xml:"order_status_desc,omitempty"`
	OrderType       *string `json:"order_type,omitempty" xml:"order_type,omitempty"`
	// example:
	//
	// 534545345
	OverApplyId           *string `json:"over_apply_id,omitempty" xml:"over_apply_id,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 34
	PersonRefundFee *float64 `json:"person_refund_fee,omitempty" xml:"person_refund_fee,omitempty"`
	// example:
	//
	// 88.96
	PersonSettlePrice *float64 `json:"person_settle_price,omitempty" xml:"person_settle_price,omitempty"`
	// example:
	//
	// 4564547
	PrimaryId *int64 `json:"primary_id,omitempty" xml:"primary_id,omitempty"`
	// example:
	//
	// 2345235435
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	// example:
	//
	// 113.02
	PromotionFee *float64 `json:"promotion_fee,omitempty" xml:"promotion_fee,omitempty"`
	// example:
	//
	// 1.0d
	Rate   *string `json:"rate,omitempty" xml:"rate,omitempty"`
	Remark *string `json:"remark,omitempty" xml:"remark,omitempty"`
	// example:
	//
	// 1
	ReserveRule *int32  `json:"reserve_rule,omitempty" xml:"reserve_rule,omitempty"`
	RoomNo      *string `json:"room_no,omitempty" xml:"room_no,omitempty"`
	// example:
	//
	// 1
	RoomNumber *int32 `json:"room_number,omitempty" xml:"room_number,omitempty"`
	// example:
	//
	// 1201.98
	RoomPrice *float64 `json:"room_price,omitempty" xml:"room_price,omitempty"`
	RoomType  *string  `json:"room_type,omitempty" xml:"room_type,omitempty"`
	// example:
	//
	// 23.9
	ServiceFee *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 350
	SettlementFee *float64 `json:"settlement_fee,omitempty" xml:"settlement_fee,omitempty"`
	// example:
	//
	// 6.11
	SettlementGrantFee *float64 `json:"settlement_grant_fee,omitempty" xml:"settlement_grant_fee,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	SettlementTime *string `json:"settlement_time,omitempty" xml:"settlement_time,omitempty"`
	// example:
	//
	// 4
	SettlementType *string `json:"settlement_type,omitempty" xml:"settlement_type,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 123123232
	SubOrderId *string `json:"sub_order_id,omitempty" xml:"sub_order_id,omitempty"`
	// example:
	//
	// 6%
	TaxRate *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	// example:
	//
	// 1321445511345
	ThirdInvoiceId *string `json:"third_invoice_id,omitempty" xml:"third_invoice_id,omitempty"`
	// example:
	//
	// AB0-CDE-1-F-1234567891011
	ThirdItineraryId *string `json:"third_itinerary_id,omitempty" xml:"third_itinerary_id,omitempty"`
	// example:
	//
	// 202311081011000348578
	ThirdPartBusinessId *string `json:"third_part_business_id,omitempty" xml:"third_part_business_id,omitempty"`
	// example:
	//
	// MGI18000230221072483
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 2
	TotalNights *int32 `json:"total_nights,omitempty" xml:"total_nights,omitempty"`
	// example:
	//
	// al_xinuan.zsy
	TravelerId *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	// example:
	//
	// 345345
	TravelerJobNo      *string `json:"traveler_job_no,omitempty" xml:"traveler_job_no,omitempty"`
	TravelerMemberType *string `json:"traveler_member_type,omitempty" xml:"traveler_member_type,omitempty"`
	TravelerName       *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
	// example:
	//
	// 11
	VoucherType *int32 `json:"voucher_type,omitempty" xml:"voucher_type,omitempty"`
}

func (s IeHotelBillSettlementQueryResponseBodyModuleDataList) String() string {
	return tea.Prettify(s)
}

func (s IeHotelBillSettlementQueryResponseBodyModuleDataList) GoString() string {
	return s.String()
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetAlipayTradeNo(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.AlipayTradeNo = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetAmountCurrency(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.AmountCurrency = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityCode(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityCode = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityName(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityName = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityCode(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityCode = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityName(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityName = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetApplyExtendField(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyExtendField = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetApplyId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetAverageNights(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.AverageNights = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetBillRecordTime(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.BillRecordTime = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetBookReason(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.BookReason = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetBookTime(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.BookTime = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetBookerId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.BookerId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetBookerJobNo(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.BookerJobNo = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetBookerName(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.BookerName = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetBrandGroup(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.BrandGroup = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetBrandName(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.BrandName = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetBusinessExpense(v int64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.BusinessExpense = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetBusinessTripResult(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.BusinessTripResult = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCapitalDirection(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.CapitalDirection = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCascadeDepartment(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.CascadeDepartment = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCheckInDate(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.CheckInDate = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCheckoutDate(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.CheckoutDate = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCity(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.City = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCityCode(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.CityCode = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCorpRefundFee(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.CorpRefundFee = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCorpTotalFee(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.CorpTotalFee = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCostCenter(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenter = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCostCenterNumber(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenterNumber = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCountry(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.Country = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetCountryCode(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.CountryCode = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetDepartment(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.Department = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetDepartmentId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.DepartmentId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetExceedReason(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ExceedReason = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetFeeType(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.FeeType = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetFines(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.Fines = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetForeignBusinessExpense(v int64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ForeignBusinessExpense = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetHotelName(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.HotelName = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetHotelStar(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.HotelStar = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetIndex(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.Index = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetInvoiceTitle(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.InvoiceTitle = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetIsEarlyDeparture(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.IsEarlyDeparture = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetIsNegotiation(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.IsNegotiation = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetIsShareStr(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.IsShareStr = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetMainApplyId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.MainApplyId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetNights(v int32) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.Nights = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetOrderId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.OrderId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetOrderPrice(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.OrderPrice = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetOrderStatusDesc(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.OrderStatusDesc = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetOrderType(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.OrderType = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetOverApplyId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.OverApplyId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentName(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetPersonRefundFee(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.PersonRefundFee = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetPersonSettlePrice(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.PersonSettlePrice = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetPrimaryId(v int64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.PrimaryId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetProjectCode(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectCode = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetProjectName(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectName = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetPromotionFee(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.PromotionFee = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetRate(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.Rate = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetRemark(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.Remark = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetReserveRule(v int32) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ReserveRule = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetRoomNo(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.RoomNo = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetRoomNumber(v int32) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.RoomNumber = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetRoomPrice(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.RoomPrice = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetRoomType(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.RoomType = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetServiceFee(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ServiceFee = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetSettlementFee(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementFee = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetSettlementGrantFee(v float64) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementGrantFee = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetSettlementTime(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementTime = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetSettlementType(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementType = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetStatus(v int32) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.Status = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetSubOrderId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.SubOrderId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetTaxRate(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.TaxRate = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetThirdInvoiceId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ThirdInvoiceId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetThirdItineraryId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ThirdItineraryId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetThirdPartBusinessId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ThirdPartBusinessId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetThirdpartApplyId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.ThirdpartApplyId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetTotalNights(v int32) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.TotalNights = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetTravelerId(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerId = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetTravelerJobNo(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerJobNo = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetTravelerMemberType(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerMemberType = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetTravelerName(v string) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerName = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponseBodyModuleDataList) SetVoucherType(v int32) *IeHotelBillSettlementQueryResponseBodyModuleDataList {
	s.VoucherType = &v
	return s
}

type IeHotelBillSettlementQueryResponse struct {
	Headers    map[string]*string                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IeHotelBillSettlementQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IeHotelBillSettlementQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s IeHotelBillSettlementQueryResponse) GoString() string {
	return s.String()
}

func (s *IeHotelBillSettlementQueryResponse) SetHeaders(v map[string]*string) *IeHotelBillSettlementQueryResponse {
	s.Headers = v
	return s
}

func (s *IeHotelBillSettlementQueryResponse) SetStatusCode(v int32) *IeHotelBillSettlementQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *IeHotelBillSettlementQueryResponse) SetBody(v *IeHotelBillSettlementQueryResponseBody) *IeHotelBillSettlementQueryResponse {
	s.Body = v
	return s
}

type InsInvoiceScanQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s InsInvoiceScanQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s InsInvoiceScanQueryHeaders) GoString() string {
	return s.String()
}

func (s *InsInvoiceScanQueryHeaders) SetCommonHeaders(v map[string]*string) *InsInvoiceScanQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InsInvoiceScanQueryHeaders) SetXAcsBtripSoCorpToken(v string) *InsInvoiceScanQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type InsInvoiceScanQueryRequest struct {
	// example:
	//
	// 2022-12-01
	BillDate *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
	// example:
	//
	// 123
	BillId *int64 `json:"bill_id,omitempty" xml:"bill_id,omitempty"`
	// example:
	//
	// 456
	InvoiceSubTaskId *int64 `json:"invoice_sub_task_id,omitempty" xml:"invoice_sub_task_id,omitempty"`
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
}

func (s InsInvoiceScanQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s InsInvoiceScanQueryRequest) GoString() string {
	return s.String()
}

func (s *InsInvoiceScanQueryRequest) SetBillDate(v string) *InsInvoiceScanQueryRequest {
	s.BillDate = &v
	return s
}

func (s *InsInvoiceScanQueryRequest) SetBillId(v int64) *InsInvoiceScanQueryRequest {
	s.BillId = &v
	return s
}

func (s *InsInvoiceScanQueryRequest) SetInvoiceSubTaskId(v int64) *InsInvoiceScanQueryRequest {
	s.InvoiceSubTaskId = &v
	return s
}

func (s *InsInvoiceScanQueryRequest) SetPageNo(v int32) *InsInvoiceScanQueryRequest {
	s.PageNo = &v
	return s
}

func (s *InsInvoiceScanQueryRequest) SetPageSize(v int32) *InsInvoiceScanQueryRequest {
	s.PageSize = &v
	return s
}

type InsInvoiceScanQueryResponseBody struct {
	// example:
	//
	// 200
	Code    *string                                `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                `json:"message,omitempty" xml:"message,omitempty"`
	Module  *InsInvoiceScanQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210e847f16611516748613869de4f6
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InsInvoiceScanQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InsInvoiceScanQueryResponseBody) GoString() string {
	return s.String()
}

func (s *InsInvoiceScanQueryResponseBody) SetCode(v string) *InsInvoiceScanQueryResponseBody {
	s.Code = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBody) SetMessage(v string) *InsInvoiceScanQueryResponseBody {
	s.Message = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBody) SetModule(v *InsInvoiceScanQueryResponseBodyModule) *InsInvoiceScanQueryResponseBody {
	s.Module = v
	return s
}

func (s *InsInvoiceScanQueryResponseBody) SetRequestId(v string) *InsInvoiceScanQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBody) SetSuccess(v bool) *InsInvoiceScanQueryResponseBody {
	s.Success = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBody) SetTraceId(v string) *InsInvoiceScanQueryResponseBody {
	s.TraceId = &v
	return s
}

type InsInvoiceScanQueryResponseBodyModule struct {
	Items []*InsInvoiceScanQueryResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 2
	TotalPage *int32 `json:"total_page,omitempty" xml:"total_page,omitempty"`
	// example:
	//
	// 30
	TotalSize *int32 `json:"total_size,omitempty" xml:"total_size,omitempty"`
}

func (s InsInvoiceScanQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s InsInvoiceScanQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *InsInvoiceScanQueryResponseBodyModule) SetItems(v []*InsInvoiceScanQueryResponseBodyModuleItems) *InsInvoiceScanQueryResponseBodyModule {
	s.Items = v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModule) SetPageNo(v int32) *InsInvoiceScanQueryResponseBodyModule {
	s.PageNo = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModule) SetPageSize(v int32) *InsInvoiceScanQueryResponseBodyModule {
	s.PageSize = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModule) SetTotalPage(v int32) *InsInvoiceScanQueryResponseBodyModule {
	s.TotalPage = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModule) SetTotalSize(v int32) *InsInvoiceScanQueryResponseBodyModule {
	s.TotalSize = &v
	return s
}

type InsInvoiceScanQueryResponseBodyModuleItems struct {
	// example:
	//
	// 20
	AmountWithTax *string `json:"amount_with_tax,omitempty" xml:"amount_with_tax,omitempty"`
	// example:
	//
	// 18.87
	AmountWithoutTax *string `json:"amount_without_tax,omitempty" xml:"amount_without_tax,omitempty"`
	// example:
	//
	// 2022-12-01
	BillDate *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
	Category *int32  `json:"category,omitempty" xml:"category,omitempty"`
	// 校验码
	//
	// example:
	//
	// 07122942791187744475
	CheckCode  *string `json:"check_code,omitempty" xml:"check_code,omitempty"`
	CostCenter *string `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	Department *string `json:"department,omitempty" xml:"department,omitempty"`
	// 开票人
	Drawer *string `json:"drawer,omitempty" xml:"drawer,omitempty"`
	// 应用ID
	//
	// example:
	//
	// 566
	Id               *string `json:"id,omitempty" xml:"id,omitempty"`
	InsuranceCompany *string `json:"insurance_company,omitempty" xml:"insurance_company,omitempty"`
	// example:
	//
	// T123343234242323232
	InsuranceOrderId *string `json:"insurance_order_id,omitempty" xml:"insurance_order_id,omitempty"`
	InsuranceType    *string `json:"insurance_type,omitempty" xml:"insurance_type,omitempty"`
	// example:
	//
	// 3300111303
	InvoiceCode *string `json:"invoice_code,omitempty" xml:"invoice_code,omitempty"`
	// example:
	//
	// 2022-12-01
	InvoiceDay *string `json:"invoice_day,omitempty" xml:"invoice_day,omitempty"`
	// 发票明细
	InvoiceDetails []*InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails `json:"invoice_details,omitempty" xml:"invoice_details,omitempty" type:"Repeated"`
	// 发票地区
	InvoiceLocation *string `json:"invoice_location,omitempty" xml:"invoice_location,omitempty"`
	// example:
	//
	// 24021111
	InvoiceNo *string `json:"invoice_no,omitempty" xml:"invoice_no,omitempty"`
	// 发票抬头
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	InvoiceType  *int32  `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	// 机器码
	//
	// example:
	//
	// 661619906841
	MachineCode *string `json:"machine_code,omitempty" xml:"machine_code,omitempty"`
	OfdOssUrl   *string `json:"ofd_oss_url,omitempty" xml:"ofd_oss_url,omitempty"`
	// example:
	//
	// 3137168772101111000
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// https://www.testurl.com
	OssUrl    *string `json:"oss_url,omitempty" xml:"oss_url,omitempty"`
	Passenger *string `json:"passenger,omitempty" xml:"passenger,omitempty"`
	// 密码区
	//
	// example:
	//
	// <87*>>53>5023>-446>/4+83/5	- *>5/81<75/1931>4>>
	PasswordArea *string `json:"password_area,omitempty" xml:"password_area,omitempty"`
	Project      *string `json:"project,omitempty" xml:"project,omitempty"`
	// 购方银行信息
	PurchaserBankAccountInfo *string `json:"purchaser_bank_account_info,omitempty" xml:"purchaser_bank_account_info,omitempty"`
	// 购方联系方式
	PurchaserContactInfo *string `json:"purchaser_contact_info,omitempty" xml:"purchaser_contact_info,omitempty"`
	PurchaserName        *string `json:"purchaser_name,omitempty" xml:"purchaser_name,omitempty"`
	// example:
	//
	// 91441111111111111S
	PurchaserTaxNo *string `json:"purchaser_tax_no,omitempty" xml:"purchaser_tax_no,omitempty"`
	// 收款人
	Recipient *string `json:"recipient,omitempty" xml:"recipient,omitempty"`
	// 备注
	Remarks *string `json:"remarks,omitempty" xml:"remarks,omitempty"`
	// 复核人
	Reviewer *string `json:"reviewer,omitempty" xml:"reviewer,omitempty"`
	// 销售方银行信息
	SellerBankAccountInfo *string `json:"seller_bank_account_info,omitempty" xml:"seller_bank_account_info,omitempty"`
	// 销售方联系方式
	SellerContactInfo *string `json:"seller_contact_info,omitempty" xml:"seller_contact_info,omitempty"`
	SellerName        *string `json:"seller_name,omitempty" xml:"seller_name,omitempty"`
	// example:
	//
	// 91441111111111111N
	SellerTaxNo *string `json:"seller_tax_no,omitempty" xml:"seller_tax_no,omitempty"`
	// 校验码
	//
	// example:
	//
	// 4475
	SmartCheckCode *string `json:"smart_check_code,omitempty" xml:"smart_check_code,omitempty"`
	// example:
	//
	// 1.13
	TaxAmount *string `json:"tax_amount,omitempty" xml:"tax_amount,omitempty"`
	// example:
	//
	// 6%
	TaxRate *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	// 大写金额
	TotalAmountInWords *string `json:"total_amount_in_words,omitempty" xml:"total_amount_in_words,omitempty"`
	XmlOssUrl          *string `json:"xml_oss_url,omitempty" xml:"xml_oss_url,omitempty"`
}

func (s InsInvoiceScanQueryResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s InsInvoiceScanQueryResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetAmountWithTax(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.AmountWithTax = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetAmountWithoutTax(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.AmountWithoutTax = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetBillDate(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.BillDate = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetCategory(v int32) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.Category = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetCheckCode(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.CheckCode = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetCostCenter(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.CostCenter = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetDepartment(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.Department = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetDrawer(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.Drawer = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetId(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.Id = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetInsuranceCompany(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.InsuranceCompany = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetInsuranceOrderId(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.InsuranceOrderId = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetInsuranceType(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.InsuranceType = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetInvoiceCode(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceCode = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetInvoiceDay(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceDay = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetInvoiceDetails(v []*InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceDetails = v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetInvoiceLocation(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceLocation = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetInvoiceNo(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceNo = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetInvoiceTitle(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceTitle = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetInvoiceType(v int32) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceType = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetMachineCode(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.MachineCode = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetOfdOssUrl(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.OfdOssUrl = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetOrderId(v int64) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.OrderId = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetOssUrl(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.OssUrl = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetPassenger(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.Passenger = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetPasswordArea(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.PasswordArea = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetProject(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.Project = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetPurchaserBankAccountInfo(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.PurchaserBankAccountInfo = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetPurchaserContactInfo(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.PurchaserContactInfo = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetPurchaserName(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.PurchaserName = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetPurchaserTaxNo(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.PurchaserTaxNo = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetRecipient(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.Recipient = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetRemarks(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.Remarks = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetReviewer(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.Reviewer = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetSellerBankAccountInfo(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.SellerBankAccountInfo = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetSellerContactInfo(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.SellerContactInfo = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetSellerName(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.SellerName = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetSellerTaxNo(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.SellerTaxNo = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetSmartCheckCode(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.SmartCheckCode = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetTaxAmount(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.TaxAmount = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetTaxRate(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.TaxRate = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetTotalAmountInWords(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.TotalAmountInWords = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItems) SetXmlOssUrl(v string) *InsInvoiceScanQueryResponseBodyModuleItems {
	s.XmlOssUrl = &v
	return s
}

type InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails struct {
	// 金额
	//
	// example:
	//
	// 75.21
	Amount *string `json:"amount,omitempty" xml:"amount,omitempty"`
	// 行号
	//
	// example:
	//
	// 0
	Index *string `json:"index,omitempty" xml:"index,omitempty"`
	// 货物或应税劳务、服务名称
	ItemName *string `json:"item_name,omitempty" xml:"item_name,omitempty"`
	// 数量
	//
	// example:
	//
	// 1
	Quantity *string `json:"quantity,omitempty" xml:"quantity,omitempty"`
	// 规格型号
	//
	// example:
	//
	// 66PT11230069
	Specification *string `json:"specification,omitempty" xml:"specification,omitempty"`
	// 税额
	//
	// example:
	//
	// 12.79
	Tax *string `json:"tax,omitempty" xml:"tax,omitempty"`
	// 税率
	//
	// example:
	//
	// 17%
	TaxRate *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	// 单位
	Unit *string `json:"unit,omitempty" xml:"unit,omitempty"`
	// 单价
	//
	// example:
	//
	// 75.21
	UnitPrice *string `json:"unit_price,omitempty" xml:"unit_price,omitempty"`
}

func (s InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) String() string {
	return tea.Prettify(s)
}

func (s InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) GoString() string {
	return s.String()
}

func (s *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetAmount(v string) *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Amount = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetIndex(v string) *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Index = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetItemName(v string) *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.ItemName = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetQuantity(v string) *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Quantity = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetSpecification(v string) *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Specification = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetTax(v string) *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Tax = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetTaxRate(v string) *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.TaxRate = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetUnit(v string) *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Unit = &v
	return s
}

func (s *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetUnitPrice(v string) *InsInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.UnitPrice = &v
	return s
}

type InsInvoiceScanQueryResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InsInvoiceScanQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InsInvoiceScanQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s InsInvoiceScanQueryResponse) GoString() string {
	return s.String()
}

func (s *InsInvoiceScanQueryResponse) SetHeaders(v map[string]*string) *InsInvoiceScanQueryResponse {
	s.Headers = v
	return s
}

func (s *InsInvoiceScanQueryResponse) SetStatusCode(v int32) *InsInvoiceScanQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *InsInvoiceScanQueryResponse) SetBody(v *InsInvoiceScanQueryResponseBody) *InsInvoiceScanQueryResponse {
	s.Body = v
	return s
}

type InsureOrderApplyHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s InsureOrderApplyHeaders) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderApplyHeaders) GoString() string {
	return s.String()
}

func (s *InsureOrderApplyHeaders) SetCommonHeaders(v map[string]*string) *InsureOrderApplyHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InsureOrderApplyHeaders) SetXAcsBtripCorpToken(v string) *InsureOrderApplyHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type InsureOrderApplyRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 100000102
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1000003000000490
	InsOrderId *string `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	// example:
	//
	// PostalSavingsBank
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 202310101026030
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1020030003332000
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	// example:
	//
	// fliggy
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
}

func (s InsureOrderApplyRequest) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderApplyRequest) GoString() string {
	return s.String()
}

func (s *InsureOrderApplyRequest) SetBtripUserId(v string) *InsureOrderApplyRequest {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderApplyRequest) SetBuyerName(v string) *InsureOrderApplyRequest {
	s.BuyerName = &v
	return s
}

func (s *InsureOrderApplyRequest) SetInsOrderId(v string) *InsureOrderApplyRequest {
	s.InsOrderId = &v
	return s
}

func (s *InsureOrderApplyRequest) SetIsvName(v string) *InsureOrderApplyRequest {
	s.IsvName = &v
	return s
}

func (s *InsureOrderApplyRequest) SetOutOrderId(v string) *InsureOrderApplyRequest {
	s.OutOrderId = &v
	return s
}

func (s *InsureOrderApplyRequest) SetOutSubOrderId(v string) *InsureOrderApplyRequest {
	s.OutSubOrderId = &v
	return s
}

func (s *InsureOrderApplyRequest) SetSupplierCode(v string) *InsureOrderApplyRequest {
	s.SupplierCode = &v
	return s
}

type InsureOrderApplyResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                             `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                             `json:"message,omitempty" xml:"message,omitempty"`
	Module  *InsureOrderApplyResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210e800316781571635951548d1e9d
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InsureOrderApplyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderApplyResponseBody) GoString() string {
	return s.String()
}

func (s *InsureOrderApplyResponseBody) SetCode(v string) *InsureOrderApplyResponseBody {
	s.Code = &v
	return s
}

func (s *InsureOrderApplyResponseBody) SetMessage(v string) *InsureOrderApplyResponseBody {
	s.Message = &v
	return s
}

func (s *InsureOrderApplyResponseBody) SetModule(v *InsureOrderApplyResponseBodyModule) *InsureOrderApplyResponseBody {
	s.Module = v
	return s
}

func (s *InsureOrderApplyResponseBody) SetRequestId(v string) *InsureOrderApplyResponseBody {
	s.RequestId = &v
	return s
}

func (s *InsureOrderApplyResponseBody) SetSuccess(v bool) *InsureOrderApplyResponseBody {
	s.Success = &v
	return s
}

func (s *InsureOrderApplyResponseBody) SetTraceId(v string) *InsureOrderApplyResponseBody {
	s.TraceId = &v
	return s
}

type InsureOrderApplyResponseBodyModule struct {
	// example:
	//
	// 1021000196500370003
	InsOrderId         *string                                                 `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	InsOrderPolicyList []*InsureOrderApplyResponseBodyModuleInsOrderPolicyList `json:"ins_order_policy_list,omitempty" xml:"ins_order_policy_list,omitempty" type:"Repeated"`
}

func (s InsureOrderApplyResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderApplyResponseBodyModule) GoString() string {
	return s.String()
}

func (s *InsureOrderApplyResponseBodyModule) SetInsOrderId(v string) *InsureOrderApplyResponseBodyModule {
	s.InsOrderId = &v
	return s
}

func (s *InsureOrderApplyResponseBodyModule) SetInsOrderPolicyList(v []*InsureOrderApplyResponseBodyModuleInsOrderPolicyList) *InsureOrderApplyResponseBodyModule {
	s.InsOrderPolicyList = v
	return s
}

type InsureOrderApplyResponseBodyModuleInsOrderPolicyList struct {
	// example:
	//
	// 1022196500378006
	OutSubInsOrderId *string `json:"out_sub_ins_order_id,omitempty" xml:"out_sub_ins_order_id,omitempty"`
	// example:
	//
	// po10002300201
	PolicyNo *string `json:"policy_no,omitempty" xml:"policy_no,omitempty"`
	// example:
	//
	// INIT
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 1022196500378003
	SubInsOrderId *string `json:"sub_ins_order_id,omitempty" xml:"sub_ins_order_id,omitempty"`
}

func (s InsureOrderApplyResponseBodyModuleInsOrderPolicyList) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderApplyResponseBodyModuleInsOrderPolicyList) GoString() string {
	return s.String()
}

func (s *InsureOrderApplyResponseBodyModuleInsOrderPolicyList) SetOutSubInsOrderId(v string) *InsureOrderApplyResponseBodyModuleInsOrderPolicyList {
	s.OutSubInsOrderId = &v
	return s
}

func (s *InsureOrderApplyResponseBodyModuleInsOrderPolicyList) SetPolicyNo(v string) *InsureOrderApplyResponseBodyModuleInsOrderPolicyList {
	s.PolicyNo = &v
	return s
}

func (s *InsureOrderApplyResponseBodyModuleInsOrderPolicyList) SetStatus(v string) *InsureOrderApplyResponseBodyModuleInsOrderPolicyList {
	s.Status = &v
	return s
}

func (s *InsureOrderApplyResponseBodyModuleInsOrderPolicyList) SetSubInsOrderId(v string) *InsureOrderApplyResponseBodyModuleInsOrderPolicyList {
	s.SubInsOrderId = &v
	return s
}

type InsureOrderApplyResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InsureOrderApplyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InsureOrderApplyResponse) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderApplyResponse) GoString() string {
	return s.String()
}

func (s *InsureOrderApplyResponse) SetHeaders(v map[string]*string) *InsureOrderApplyResponse {
	s.Headers = v
	return s
}

func (s *InsureOrderApplyResponse) SetStatusCode(v int32) *InsureOrderApplyResponse {
	s.StatusCode = &v
	return s
}

func (s *InsureOrderApplyResponse) SetBody(v *InsureOrderApplyResponseBody) *InsureOrderApplyResponse {
	s.Body = v
	return s
}

type InsureOrderCancelHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s InsureOrderCancelHeaders) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCancelHeaders) GoString() string {
	return s.String()
}

func (s *InsureOrderCancelHeaders) SetCommonHeaders(v map[string]*string) *InsureOrderCancelHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InsureOrderCancelHeaders) SetXAcsBtripCorpToken(v string) *InsureOrderCancelHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type InsureOrderCancelRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 2000310301
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// example:
	//
	// open12igetbis4o07v10B1TlOWcM00
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// fliggy
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
}

func (s InsureOrderCancelRequest) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCancelRequest) GoString() string {
	return s.String()
}

func (s *InsureOrderCancelRequest) SetBtripUserId(v string) *InsureOrderCancelRequest {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderCancelRequest) SetBuyerName(v string) *InsureOrderCancelRequest {
	s.BuyerName = &v
	return s
}

func (s *InsureOrderCancelRequest) SetIsvName(v string) *InsureOrderCancelRequest {
	s.IsvName = &v
	return s
}

func (s *InsureOrderCancelRequest) SetSupplierCode(v string) *InsureOrderCancelRequest {
	s.SupplierCode = &v
	return s
}

type InsureOrderCancelResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 210bc41416861901778051918d1942
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InsureOrderCancelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCancelResponseBody) GoString() string {
	return s.String()
}

func (s *InsureOrderCancelResponseBody) SetCode(v string) *InsureOrderCancelResponseBody {
	s.Code = &v
	return s
}

func (s *InsureOrderCancelResponseBody) SetMessage(v string) *InsureOrderCancelResponseBody {
	s.Message = &v
	return s
}

func (s *InsureOrderCancelResponseBody) SetRequestId(v string) *InsureOrderCancelResponseBody {
	s.RequestId = &v
	return s
}

func (s *InsureOrderCancelResponseBody) SetSuccess(v bool) *InsureOrderCancelResponseBody {
	s.Success = &v
	return s
}

func (s *InsureOrderCancelResponseBody) SetTraceId(v string) *InsureOrderCancelResponseBody {
	s.TraceId = &v
	return s
}

type InsureOrderCancelResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InsureOrderCancelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InsureOrderCancelResponse) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCancelResponse) GoString() string {
	return s.String()
}

func (s *InsureOrderCancelResponse) SetHeaders(v map[string]*string) *InsureOrderCancelResponse {
	s.Headers = v
	return s
}

func (s *InsureOrderCancelResponse) SetStatusCode(v int32) *InsureOrderCancelResponse {
	s.StatusCode = &v
	return s
}

func (s *InsureOrderCancelResponse) SetBody(v *InsureOrderCancelResponseBody) *InsureOrderCancelResponse {
	s.Body = v
	return s
}

type InsureOrderCreateHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s InsureOrderCreateHeaders) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateHeaders) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateHeaders) SetCommonHeaders(v map[string]*string) *InsureOrderCreateHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InsureOrderCreateHeaders) SetXAcsBtripCorpToken(v string) *InsureOrderCreateHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type InsureOrderCreateRequest struct {
	// This parameter is required.
	Applicant *InsureOrderCreateRequestApplicant `json:"applicant,omitempty" xml:"applicant,omitempty" type:"Struct"`
	// example:
	//
	// 20202109390122
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	InsPersonAndSegmentList []*InsureOrderCreateRequestInsPersonAndSegmentList `json:"ins_person_and_segment_list,omitempty" xml:"ins_person_and_segment_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// PostalSavingsBank
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 100000320302020
	OutInsOrderId *string `json:"out_ins_order_id,omitempty" xml:"out_ins_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 202310101026030
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1020030003332000
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	// example:
	//
	// fliggy
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
}

func (s InsureOrderCreateRequest) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateRequest) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateRequest) SetApplicant(v *InsureOrderCreateRequestApplicant) *InsureOrderCreateRequest {
	s.Applicant = v
	return s
}

func (s *InsureOrderCreateRequest) SetBtripUserId(v string) *InsureOrderCreateRequest {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderCreateRequest) SetBuyerName(v string) *InsureOrderCreateRequest {
	s.BuyerName = &v
	return s
}

func (s *InsureOrderCreateRequest) SetInsPersonAndSegmentList(v []*InsureOrderCreateRequestInsPersonAndSegmentList) *InsureOrderCreateRequest {
	s.InsPersonAndSegmentList = v
	return s
}

func (s *InsureOrderCreateRequest) SetIsvName(v string) *InsureOrderCreateRequest {
	s.IsvName = &v
	return s
}

func (s *InsureOrderCreateRequest) SetOutInsOrderId(v string) *InsureOrderCreateRequest {
	s.OutInsOrderId = &v
	return s
}

func (s *InsureOrderCreateRequest) SetOutOrderId(v string) *InsureOrderCreateRequest {
	s.OutOrderId = &v
	return s
}

func (s *InsureOrderCreateRequest) SetOutSubOrderId(v string) *InsureOrderCreateRequest {
	s.OutSubOrderId = &v
	return s
}

func (s *InsureOrderCreateRequest) SetSupplierCode(v string) *InsureOrderCreateRequest {
	s.SupplierCode = &v
	return s
}

type InsureOrderCreateRequestApplicant struct {
	// example:
	//
	// 2000-11-01
	Birthday *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	// example:
	//
	// 20202109390122
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	CertName    *string `json:"cert_name,omitempty" xml:"cert_name,omitempty"`
	// example:
	//
	// 110102200011018872
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 100
	CertType *string `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// F
	Gender *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// 1000000
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
}

func (s InsureOrderCreateRequestApplicant) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateRequestApplicant) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateRequestApplicant) SetBirthday(v string) *InsureOrderCreateRequestApplicant {
	s.Birthday = &v
	return s
}

func (s *InsureOrderCreateRequestApplicant) SetBtripUserId(v string) *InsureOrderCreateRequestApplicant {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderCreateRequestApplicant) SetCertName(v string) *InsureOrderCreateRequestApplicant {
	s.CertName = &v
	return s
}

func (s *InsureOrderCreateRequestApplicant) SetCertNo(v string) *InsureOrderCreateRequestApplicant {
	s.CertNo = &v
	return s
}

func (s *InsureOrderCreateRequestApplicant) SetCertType(v string) *InsureOrderCreateRequestApplicant {
	s.CertType = &v
	return s
}

func (s *InsureOrderCreateRequestApplicant) SetGender(v string) *InsureOrderCreateRequestApplicant {
	s.Gender = &v
	return s
}

func (s *InsureOrderCreateRequestApplicant) SetPhone(v string) *InsureOrderCreateRequestApplicant {
	s.Phone = &v
	return s
}

type InsureOrderCreateRequestInsPersonAndSegmentList struct {
	InsureSegment *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment `json:"insure_segment,omitempty" xml:"insure_segment,omitempty" type:"Struct"`
	Insured       *InsureOrderCreateRequestInsPersonAndSegmentListInsured       `json:"insured,omitempty" xml:"insured,omitempty" type:"Struct"`
	// example:
	//
	// 12399992002002010
	OutSubInsOrderId *string `json:"out_sub_ins_order_id,omitempty" xml:"out_sub_ins_order_id,omitempty"`
}

func (s InsureOrderCreateRequestInsPersonAndSegmentList) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateRequestInsPersonAndSegmentList) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentList) SetInsureSegment(v *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) *InsureOrderCreateRequestInsPersonAndSegmentList {
	s.InsureSegment = v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentList) SetInsured(v *InsureOrderCreateRequestInsPersonAndSegmentListInsured) *InsureOrderCreateRequestInsPersonAndSegmentList {
	s.Insured = v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentList) SetOutSubInsOrderId(v string) *InsureOrderCreateRequestInsPersonAndSegmentList {
	s.OutSubInsOrderId = &v
	return s
}

type InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment struct {
	// example:
	//
	// YNT
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	// example:
	//
	// CKG
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 2023-10-31 13:10:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// HGH
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	// example:
	//
	// HGH
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// CAN
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2023-10-31 10:55:00
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// ZH9891
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
}

func (s InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) SetArrAirportCode(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment {
	s.ArrAirportCode = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) SetArrCity(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment {
	s.ArrCity = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) SetArrCityCode(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment {
	s.ArrCityCode = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) SetArrTime(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment {
	s.ArrTime = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) SetDepAirportCode(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment {
	s.DepAirportCode = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) SetDepCity(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment {
	s.DepCity = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) SetDepCityCode(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment {
	s.DepCityCode = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) SetDepTime(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment {
	s.DepTime = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment) SetFlightNo(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsureSegment {
	s.FlightNo = &v
	return s
}

type InsureOrderCreateRequestInsPersonAndSegmentListInsured struct {
	// example:
	//
	// 2000-11-01
	Birthday *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	// example:
	//
	// 20202109390122
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	CertName    *string `json:"cert_name,omitempty" xml:"cert_name,omitempty"`
	// example:
	//
	// 110102200011018872
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 100
	CertType *string `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// F
	Gender *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// 1000000
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
}

func (s InsureOrderCreateRequestInsPersonAndSegmentListInsured) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateRequestInsPersonAndSegmentListInsured) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsured) SetBirthday(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsured {
	s.Birthday = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsured) SetBtripUserId(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsured {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsured) SetCertName(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsured {
	s.CertName = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsured) SetCertNo(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsured {
	s.CertNo = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsured) SetCertType(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsured {
	s.CertType = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsured) SetGender(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsured {
	s.Gender = &v
	return s
}

func (s *InsureOrderCreateRequestInsPersonAndSegmentListInsured) SetPhone(v string) *InsureOrderCreateRequestInsPersonAndSegmentListInsured {
	s.Phone = &v
	return s
}

type InsureOrderCreateShrinkRequest struct {
	// This parameter is required.
	ApplicantShrink *string `json:"applicant,omitempty" xml:"applicant,omitempty"`
	// example:
	//
	// 20202109390122
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	InsPersonAndSegmentListShrink *string `json:"ins_person_and_segment_list,omitempty" xml:"ins_person_and_segment_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// PostalSavingsBank
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 100000320302020
	OutInsOrderId *string `json:"out_ins_order_id,omitempty" xml:"out_ins_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 202310101026030
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1020030003332000
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	// example:
	//
	// fliggy
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
}

func (s InsureOrderCreateShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateShrinkRequest) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateShrinkRequest) SetApplicantShrink(v string) *InsureOrderCreateShrinkRequest {
	s.ApplicantShrink = &v
	return s
}

func (s *InsureOrderCreateShrinkRequest) SetBtripUserId(v string) *InsureOrderCreateShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderCreateShrinkRequest) SetBuyerName(v string) *InsureOrderCreateShrinkRequest {
	s.BuyerName = &v
	return s
}

func (s *InsureOrderCreateShrinkRequest) SetInsPersonAndSegmentListShrink(v string) *InsureOrderCreateShrinkRequest {
	s.InsPersonAndSegmentListShrink = &v
	return s
}

func (s *InsureOrderCreateShrinkRequest) SetIsvName(v string) *InsureOrderCreateShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *InsureOrderCreateShrinkRequest) SetOutInsOrderId(v string) *InsureOrderCreateShrinkRequest {
	s.OutInsOrderId = &v
	return s
}

func (s *InsureOrderCreateShrinkRequest) SetOutOrderId(v string) *InsureOrderCreateShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *InsureOrderCreateShrinkRequest) SetOutSubOrderId(v string) *InsureOrderCreateShrinkRequest {
	s.OutSubOrderId = &v
	return s
}

func (s *InsureOrderCreateShrinkRequest) SetSupplierCode(v string) *InsureOrderCreateShrinkRequest {
	s.SupplierCode = &v
	return s
}

type InsureOrderCreateResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  *InsureOrderCreateResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C6055EA5-C566-511D-9FC4-5E4D45182711
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f079916782711059363565d6be1
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InsureOrderCreateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateResponseBody) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateResponseBody) SetCode(v string) *InsureOrderCreateResponseBody {
	s.Code = &v
	return s
}

func (s *InsureOrderCreateResponseBody) SetMessage(v string) *InsureOrderCreateResponseBody {
	s.Message = &v
	return s
}

func (s *InsureOrderCreateResponseBody) SetModule(v *InsureOrderCreateResponseBodyModule) *InsureOrderCreateResponseBody {
	s.Module = v
	return s
}

func (s *InsureOrderCreateResponseBody) SetRequestId(v string) *InsureOrderCreateResponseBody {
	s.RequestId = &v
	return s
}

func (s *InsureOrderCreateResponseBody) SetSuccess(v bool) *InsureOrderCreateResponseBody {
	s.Success = &v
	return s
}

func (s *InsureOrderCreateResponseBody) SetTraceId(v string) *InsureOrderCreateResponseBody {
	s.TraceId = &v
	return s
}

type InsureOrderCreateResponseBodyModule struct {
	// example:
	//
	// 1
	Copies                *int32                                                      `json:"copies,omitempty" xml:"copies,omitempty"`
	InsureOrderDetailList []*InsureOrderCreateResponseBodyModuleInsureOrderDetailList `json:"insure_order_detail_list,omitempty" xml:"insure_order_detail_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1021000196500370001
	InsureOrderId *string `json:"insure_order_id,omitempty" xml:"insure_order_id,omitempty"`
	// example:
	//
	// 3000
	Premium *int64 `json:"premium,omitempty" xml:"premium,omitempty"`
}

func (s InsureOrderCreateResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateResponseBodyModule) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateResponseBodyModule) SetCopies(v int32) *InsureOrderCreateResponseBodyModule {
	s.Copies = &v
	return s
}

func (s *InsureOrderCreateResponseBodyModule) SetInsureOrderDetailList(v []*InsureOrderCreateResponseBodyModuleInsureOrderDetailList) *InsureOrderCreateResponseBodyModule {
	s.InsureOrderDetailList = v
	return s
}

func (s *InsureOrderCreateResponseBodyModule) SetInsureOrderId(v string) *InsureOrderCreateResponseBodyModule {
	s.InsureOrderId = &v
	return s
}

func (s *InsureOrderCreateResponseBodyModule) SetPremium(v int64) *InsureOrderCreateResponseBodyModule {
	s.Premium = &v
	return s
}

type InsureOrderCreateResponseBodyModuleInsureOrderDetailList struct {
	// example:
	//
	// 1992939412431231
	OutSubInsOrderId *string `json:"out_sub_ins_order_id,omitempty" xml:"out_sub_ins_order_id,omitempty"`
	// example:
	//
	// 121234444
	PolicyNo *string `json:"policy_no,omitempty" xml:"policy_no,omitempty"`
	// example:
	//
	// INIT
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 1022196500378001
	SubInsOrderId *string `json:"sub_ins_order_id,omitempty" xml:"sub_ins_order_id,omitempty"`
}

func (s InsureOrderCreateResponseBodyModuleInsureOrderDetailList) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateResponseBodyModuleInsureOrderDetailList) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateResponseBodyModuleInsureOrderDetailList) SetOutSubInsOrderId(v string) *InsureOrderCreateResponseBodyModuleInsureOrderDetailList {
	s.OutSubInsOrderId = &v
	return s
}

func (s *InsureOrderCreateResponseBodyModuleInsureOrderDetailList) SetPolicyNo(v string) *InsureOrderCreateResponseBodyModuleInsureOrderDetailList {
	s.PolicyNo = &v
	return s
}

func (s *InsureOrderCreateResponseBodyModuleInsureOrderDetailList) SetStatus(v string) *InsureOrderCreateResponseBodyModuleInsureOrderDetailList {
	s.Status = &v
	return s
}

func (s *InsureOrderCreateResponseBodyModuleInsureOrderDetailList) SetSubInsOrderId(v string) *InsureOrderCreateResponseBodyModuleInsureOrderDetailList {
	s.SubInsOrderId = &v
	return s
}

type InsureOrderCreateResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InsureOrderCreateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InsureOrderCreateResponse) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderCreateResponse) GoString() string {
	return s.String()
}

func (s *InsureOrderCreateResponse) SetHeaders(v map[string]*string) *InsureOrderCreateResponse {
	s.Headers = v
	return s
}

func (s *InsureOrderCreateResponse) SetStatusCode(v int32) *InsureOrderCreateResponse {
	s.StatusCode = &v
	return s
}

func (s *InsureOrderCreateResponse) SetBody(v *InsureOrderCreateResponseBody) *InsureOrderCreateResponse {
	s.Body = v
	return s
}

type InsureOrderDetailHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s InsureOrderDetailHeaders) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderDetailHeaders) GoString() string {
	return s.String()
}

func (s *InsureOrderDetailHeaders) SetCommonHeaders(v map[string]*string) *InsureOrderDetailHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InsureOrderDetailHeaders) SetXAcsBtripCorpToken(v string) *InsureOrderDetailHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type InsureOrderDetailRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 10000001
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1021000196440356901
	InsOrderId *string `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	// example:
	//
	// PostalSavingsBank
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// fliggy
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
}

func (s InsureOrderDetailRequest) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderDetailRequest) GoString() string {
	return s.String()
}

func (s *InsureOrderDetailRequest) SetBtripUserId(v string) *InsureOrderDetailRequest {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderDetailRequest) SetBuyerName(v string) *InsureOrderDetailRequest {
	s.BuyerName = &v
	return s
}

func (s *InsureOrderDetailRequest) SetInsOrderId(v string) *InsureOrderDetailRequest {
	s.InsOrderId = &v
	return s
}

func (s *InsureOrderDetailRequest) SetIsvName(v string) *InsureOrderDetailRequest {
	s.IsvName = &v
	return s
}

func (s *InsureOrderDetailRequest) SetSupplierCode(v string) *InsureOrderDetailRequest {
	s.SupplierCode = &v
	return s
}

type InsureOrderDetailResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  *InsureOrderDetailResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 4498BDAB-2AAF-5B6F-942A-3C1C935345C9
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InsureOrderDetailResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderDetailResponseBody) GoString() string {
	return s.String()
}

func (s *InsureOrderDetailResponseBody) SetCode(v string) *InsureOrderDetailResponseBody {
	s.Code = &v
	return s
}

func (s *InsureOrderDetailResponseBody) SetMessage(v string) *InsureOrderDetailResponseBody {
	s.Message = &v
	return s
}

func (s *InsureOrderDetailResponseBody) SetModule(v *InsureOrderDetailResponseBodyModule) *InsureOrderDetailResponseBody {
	s.Module = v
	return s
}

func (s *InsureOrderDetailResponseBody) SetRequestId(v string) *InsureOrderDetailResponseBody {
	s.RequestId = &v
	return s
}

func (s *InsureOrderDetailResponseBody) SetSuccess(v bool) *InsureOrderDetailResponseBody {
	s.Success = &v
	return s
}

func (s *InsureOrderDetailResponseBody) SetTraceId(v string) *InsureOrderDetailResponseBody {
	s.TraceId = &v
	return s
}

type InsureOrderDetailResponseBodyModule struct {
	Applicant *InsureOrderDetailResponseBodyModuleApplicant `json:"applicant,omitempty" xml:"applicant,omitempty" type:"Struct"`
	// example:
	//
	// 1021000196440356901
	InsOrderId            *string                                                     `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	InsureOrderDetailList []*InsureOrderDetailResponseBodyModuleInsureOrderDetailList `json:"insure_order_detail_list,omitempty" xml:"insure_order_detail_list,omitempty" type:"Repeated"`
	// example:
	//
	// CLOSED
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
}

func (s InsureOrderDetailResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderDetailResponseBodyModule) GoString() string {
	return s.String()
}

func (s *InsureOrderDetailResponseBodyModule) SetApplicant(v *InsureOrderDetailResponseBodyModuleApplicant) *InsureOrderDetailResponseBodyModule {
	s.Applicant = v
	return s
}

func (s *InsureOrderDetailResponseBodyModule) SetInsOrderId(v string) *InsureOrderDetailResponseBodyModule {
	s.InsOrderId = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModule) SetInsureOrderDetailList(v []*InsureOrderDetailResponseBodyModuleInsureOrderDetailList) *InsureOrderDetailResponseBodyModule {
	s.InsureOrderDetailList = v
	return s
}

func (s *InsureOrderDetailResponseBodyModule) SetStatus(v string) *InsureOrderDetailResponseBodyModule {
	s.Status = &v
	return s
}

type InsureOrderDetailResponseBodyModuleApplicant struct {
	CertName *string `json:"cert_name,omitempty" xml:"cert_name,omitempty"`
	// example:
	//
	// 3300000000000
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 100
	CertType *string `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 13000000000
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
}

func (s InsureOrderDetailResponseBodyModuleApplicant) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderDetailResponseBodyModuleApplicant) GoString() string {
	return s.String()
}

func (s *InsureOrderDetailResponseBodyModuleApplicant) SetCertName(v string) *InsureOrderDetailResponseBodyModuleApplicant {
	s.CertName = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleApplicant) SetCertNo(v string) *InsureOrderDetailResponseBodyModuleApplicant {
	s.CertNo = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleApplicant) SetCertType(v string) *InsureOrderDetailResponseBodyModuleApplicant {
	s.CertType = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleApplicant) SetPhone(v string) *InsureOrderDetailResponseBodyModuleApplicant {
	s.Phone = &v
	return s
}

type InsureOrderDetailResponseBodyModuleInsureOrderDetailList struct {
	// example:
	//
	// 2023-10-12 10:00:00
	EffectiveEndTime *string `json:"effective_end_time,omitempty" xml:"effective_end_time,omitempty"`
	// example:
	//
	// 2023-10-11 10:00:00
	EffectiveStartTime *string                                                                `json:"effective_start_time,omitempty" xml:"effective_start_time,omitempty"`
	InsureSegment      *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment `json:"insure_segment,omitempty" xml:"insure_segment,omitempty" type:"Struct"`
	// example:
	//
	// 2023-10-11 11:30:00
	InsureTime *string                                                          `json:"insure_time,omitempty" xml:"insure_time,omitempty"`
	Insured    *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured `json:"insured,omitempty" xml:"insured,omitempty" type:"Struct"`
	// example:
	//
	// 1021000196440356922
	OutSubInsOrderId *string `json:"out_sub_ins_order_id,omitempty" xml:"out_sub_ins_order_id,omitempty"`
	// example:
	//
	// 22222222222
	PolicyNo *string `json:"policy_no,omitempty" xml:"policy_no,omitempty"`
	// example:
	//
	// 30
	Price       *int64  `json:"price,omitempty" xml:"price,omitempty"`
	ProductName *string `json:"product_name,omitempty" xml:"product_name,omitempty"`
	// example:
	//
	// 008801.accident.flight.104000
	ProductNo *string `json:"product_no,omitempty" xml:"product_no,omitempty"`
	// example:
	//
	// CLOSED
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 1021000196440356901
	SubInsOrderId *string `json:"sub_ins_order_id,omitempty" xml:"sub_ins_order_id,omitempty"`
}

func (s InsureOrderDetailResponseBodyModuleInsureOrderDetailList) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderDetailResponseBodyModuleInsureOrderDetailList) GoString() string {
	return s.String()
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetEffectiveEndTime(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.EffectiveEndTime = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetEffectiveStartTime(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.EffectiveStartTime = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetInsureSegment(v *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.InsureSegment = v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetInsureTime(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.InsureTime = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetInsured(v *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.Insured = v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetOutSubInsOrderId(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.OutSubInsOrderId = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetPolicyNo(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.PolicyNo = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetPrice(v int64) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.Price = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetProductName(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.ProductName = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetProductNo(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.ProductNo = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetStatus(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.Status = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailList) SetSubInsOrderId(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailList {
	s.SubInsOrderId = &v
	return s
}

type InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment struct {
	// example:
	//
	// TYN
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	// example:
	//
	// HYN
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// SYX
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 2023-10-11 11:30:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// TYN
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	// example:
	//
	// CTU
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// LXA
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2023-10-11 11:30:00
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// CZ3501
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
}

func (s InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) GoString() string {
	return s.String()
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) SetArrAirportCode(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment {
	s.ArrAirportCode = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) SetArrCity(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment {
	s.ArrCity = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) SetArrCityCode(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment {
	s.ArrCityCode = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) SetArrTime(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment {
	s.ArrTime = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) SetDepAirportCode(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment {
	s.DepAirportCode = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) SetDepCity(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment {
	s.DepCity = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) SetDepCityCode(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment {
	s.DepCityCode = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) SetDepTime(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment {
	s.DepTime = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment) SetFlightNo(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsureSegment {
	s.FlightNo = &v
	return s
}

type InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured struct {
	// example:
	//
	// 1983-11-25
	Birthday *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	// example:
	//
	// 100001
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	CertName    *string `json:"cert_name,omitempty" xml:"cert_name,omitempty"`
	// example:
	//
	// 30000000000
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 100
	CertType *string `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// F
	Gender *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// 130000000
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
}

func (s InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured) GoString() string {
	return s.String()
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured) SetBirthday(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured {
	s.Birthday = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured) SetBtripUserId(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured) SetCertName(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured {
	s.CertName = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured) SetCertNo(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured {
	s.CertNo = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured) SetCertType(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured {
	s.CertType = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured) SetGender(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured {
	s.Gender = &v
	return s
}

func (s *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured) SetPhone(v string) *InsureOrderDetailResponseBodyModuleInsureOrderDetailListInsured {
	s.Phone = &v
	return s
}

type InsureOrderDetailResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InsureOrderDetailResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InsureOrderDetailResponse) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderDetailResponse) GoString() string {
	return s.String()
}

func (s *InsureOrderDetailResponse) SetHeaders(v map[string]*string) *InsureOrderDetailResponse {
	s.Headers = v
	return s
}

func (s *InsureOrderDetailResponse) SetStatusCode(v int32) *InsureOrderDetailResponse {
	s.StatusCode = &v
	return s
}

func (s *InsureOrderDetailResponse) SetBody(v *InsureOrderDetailResponseBody) *InsureOrderDetailResponse {
	s.Body = v
	return s
}

type InsureOrderPayHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s InsureOrderPayHeaders) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderPayHeaders) GoString() string {
	return s.String()
}

func (s *InsureOrderPayHeaders) SetCommonHeaders(v map[string]*string) *InsureOrderPayHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InsureOrderPayHeaders) SetXAcsBtripCorpToken(v string) *InsureOrderPayHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type InsureOrderPayRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 100000001
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// example:
	//
	// PostalSavingsBank
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 202310101026030
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1020030003332000
	OutSubOrderId *string `json:"out_sub_order_id,omitempty" xml:"out_sub_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 3000
	PaymentAmount *int64 `json:"payment_amount,omitempty" xml:"payment_amount,omitempty"`
	// example:
	//
	// fliggy
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
}

func (s InsureOrderPayRequest) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderPayRequest) GoString() string {
	return s.String()
}

func (s *InsureOrderPayRequest) SetBtripUserId(v string) *InsureOrderPayRequest {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderPayRequest) SetBuyerName(v string) *InsureOrderPayRequest {
	s.BuyerName = &v
	return s
}

func (s *InsureOrderPayRequest) SetIsvName(v string) *InsureOrderPayRequest {
	s.IsvName = &v
	return s
}

func (s *InsureOrderPayRequest) SetOutOrderId(v string) *InsureOrderPayRequest {
	s.OutOrderId = &v
	return s
}

func (s *InsureOrderPayRequest) SetOutSubOrderId(v string) *InsureOrderPayRequest {
	s.OutSubOrderId = &v
	return s
}

func (s *InsureOrderPayRequest) SetPaymentAmount(v int64) *InsureOrderPayRequest {
	s.PaymentAmount = &v
	return s
}

func (s *InsureOrderPayRequest) SetSupplierCode(v string) *InsureOrderPayRequest {
	s.SupplierCode = &v
	return s
}

type InsureOrderPayResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 210bc4ba16799697693368683dbafc
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InsureOrderPayResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderPayResponseBody) GoString() string {
	return s.String()
}

func (s *InsureOrderPayResponseBody) SetCode(v string) *InsureOrderPayResponseBody {
	s.Code = &v
	return s
}

func (s *InsureOrderPayResponseBody) SetMessage(v string) *InsureOrderPayResponseBody {
	s.Message = &v
	return s
}

func (s *InsureOrderPayResponseBody) SetRequestId(v string) *InsureOrderPayResponseBody {
	s.RequestId = &v
	return s
}

func (s *InsureOrderPayResponseBody) SetSuccess(v bool) *InsureOrderPayResponseBody {
	s.Success = &v
	return s
}

func (s *InsureOrderPayResponseBody) SetTraceId(v string) *InsureOrderPayResponseBody {
	s.TraceId = &v
	return s
}

type InsureOrderPayResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InsureOrderPayResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InsureOrderPayResponse) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderPayResponse) GoString() string {
	return s.String()
}

func (s *InsureOrderPayResponse) SetHeaders(v map[string]*string) *InsureOrderPayResponse {
	s.Headers = v
	return s
}

func (s *InsureOrderPayResponse) SetStatusCode(v int32) *InsureOrderPayResponse {
	s.StatusCode = &v
	return s
}

func (s *InsureOrderPayResponse) SetBody(v *InsureOrderPayResponseBody) *InsureOrderPayResponse {
	s.Body = v
	return s
}

type InsureOrderRefundHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s InsureOrderRefundHeaders) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderRefundHeaders) GoString() string {
	return s.String()
}

func (s *InsureOrderRefundHeaders) SetCommonHeaders(v map[string]*string) *InsureOrderRefundHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InsureOrderRefundHeaders) SetXAcsBtripCorpToken(v string) *InsureOrderRefundHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type InsureOrderRefundRequest struct {
	// example:
	//
	// 1000001
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// example:
	//
	// PostalSavingsBank
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1021000196440356908
	OutApplyId     *string   `json:"out_apply_id,omitempty" xml:"out_apply_id,omitempty"`
	PolicyNoList   []*string `json:"policy_no_list,omitempty" xml:"policy_no_list,omitempty" type:"Repeated"`
	SubInsOrderIds []*string `json:"sub_ins_order_ids,omitempty" xml:"sub_ins_order_ids,omitempty" type:"Repeated"`
	// example:
	//
	// fliggy
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
}

func (s InsureOrderRefundRequest) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderRefundRequest) GoString() string {
	return s.String()
}

func (s *InsureOrderRefundRequest) SetBtripUserId(v string) *InsureOrderRefundRequest {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderRefundRequest) SetBuyerName(v string) *InsureOrderRefundRequest {
	s.BuyerName = &v
	return s
}

func (s *InsureOrderRefundRequest) SetIsvName(v string) *InsureOrderRefundRequest {
	s.IsvName = &v
	return s
}

func (s *InsureOrderRefundRequest) SetOutApplyId(v string) *InsureOrderRefundRequest {
	s.OutApplyId = &v
	return s
}

func (s *InsureOrderRefundRequest) SetPolicyNoList(v []*string) *InsureOrderRefundRequest {
	s.PolicyNoList = v
	return s
}

func (s *InsureOrderRefundRequest) SetSubInsOrderIds(v []*string) *InsureOrderRefundRequest {
	s.SubInsOrderIds = v
	return s
}

func (s *InsureOrderRefundRequest) SetSupplierCode(v string) *InsureOrderRefundRequest {
	s.SupplierCode = &v
	return s
}

type InsureOrderRefundShrinkRequest struct {
	// example:
	//
	// 1000001
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// example:
	//
	// PostalSavingsBank
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1021000196440356908
	OutApplyId           *string `json:"out_apply_id,omitempty" xml:"out_apply_id,omitempty"`
	PolicyNoListShrink   *string `json:"policy_no_list,omitempty" xml:"policy_no_list,omitempty"`
	SubInsOrderIdsShrink *string `json:"sub_ins_order_ids,omitempty" xml:"sub_ins_order_ids,omitempty"`
	// example:
	//
	// fliggy
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
}

func (s InsureOrderRefundShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderRefundShrinkRequest) GoString() string {
	return s.String()
}

func (s *InsureOrderRefundShrinkRequest) SetBtripUserId(v string) *InsureOrderRefundShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *InsureOrderRefundShrinkRequest) SetBuyerName(v string) *InsureOrderRefundShrinkRequest {
	s.BuyerName = &v
	return s
}

func (s *InsureOrderRefundShrinkRequest) SetIsvName(v string) *InsureOrderRefundShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *InsureOrderRefundShrinkRequest) SetOutApplyId(v string) *InsureOrderRefundShrinkRequest {
	s.OutApplyId = &v
	return s
}

func (s *InsureOrderRefundShrinkRequest) SetPolicyNoListShrink(v string) *InsureOrderRefundShrinkRequest {
	s.PolicyNoListShrink = &v
	return s
}

func (s *InsureOrderRefundShrinkRequest) SetSubInsOrderIdsShrink(v string) *InsureOrderRefundShrinkRequest {
	s.SubInsOrderIdsShrink = &v
	return s
}

func (s *InsureOrderRefundShrinkRequest) SetSupplierCode(v string) *InsureOrderRefundShrinkRequest {
	s.SupplierCode = &v
	return s
}

type InsureOrderRefundResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  *InsureOrderRefundResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 2103ad3116824902540648188de7ac
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210e846c16726306481681232d441f
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InsureOrderRefundResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderRefundResponseBody) GoString() string {
	return s.String()
}

func (s *InsureOrderRefundResponseBody) SetCode(v string) *InsureOrderRefundResponseBody {
	s.Code = &v
	return s
}

func (s *InsureOrderRefundResponseBody) SetMessage(v string) *InsureOrderRefundResponseBody {
	s.Message = &v
	return s
}

func (s *InsureOrderRefundResponseBody) SetModule(v *InsureOrderRefundResponseBodyModule) *InsureOrderRefundResponseBody {
	s.Module = v
	return s
}

func (s *InsureOrderRefundResponseBody) SetRequestId(v string) *InsureOrderRefundResponseBody {
	s.RequestId = &v
	return s
}

func (s *InsureOrderRefundResponseBody) SetSuccess(v bool) *InsureOrderRefundResponseBody {
	s.Success = &v
	return s
}

func (s *InsureOrderRefundResponseBody) SetTraceId(v string) *InsureOrderRefundResponseBody {
	s.TraceId = &v
	return s
}

type InsureOrderRefundResponseBodyModule struct {
	// example:
	//
	// 118526587
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 1423041410342678003
	InsOrderId    *string                                             `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	InsRefundList []*InsureOrderRefundResponseBodyModuleInsRefundList `json:"ins_refund_list,omitempty" xml:"ins_refund_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1423041410342678022
	OutApplyId *string `json:"out_apply_id,omitempty" xml:"out_apply_id,omitempty"`
}

func (s InsureOrderRefundResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderRefundResponseBodyModule) GoString() string {
	return s.String()
}

func (s *InsureOrderRefundResponseBodyModule) SetApplyId(v string) *InsureOrderRefundResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *InsureOrderRefundResponseBodyModule) SetInsOrderId(v string) *InsureOrderRefundResponseBodyModule {
	s.InsOrderId = &v
	return s
}

func (s *InsureOrderRefundResponseBodyModule) SetInsRefundList(v []*InsureOrderRefundResponseBodyModuleInsRefundList) *InsureOrderRefundResponseBodyModule {
	s.InsRefundList = v
	return s
}

func (s *InsureOrderRefundResponseBodyModule) SetOutApplyId(v string) *InsureOrderRefundResponseBodyModule {
	s.OutApplyId = &v
	return s
}

type InsureOrderRefundResponseBodyModuleInsRefundList struct {
	// example:
	//
	// po102000399221
	PolicyRefundNo *string `json:"policy_refund_no,omitempty" xml:"policy_refund_no,omitempty"`
	// example:
	//
	// REFUND_SUCCESS
	RefundStatus *string `json:"refund_status,omitempty" xml:"refund_status,omitempty"`
	// example:
	//
	// 1230012499921
	SubInsOrderId *string `json:"sub_ins_order_id,omitempty" xml:"sub_ins_order_id,omitempty"`
}

func (s InsureOrderRefundResponseBodyModuleInsRefundList) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderRefundResponseBodyModuleInsRefundList) GoString() string {
	return s.String()
}

func (s *InsureOrderRefundResponseBodyModuleInsRefundList) SetPolicyRefundNo(v string) *InsureOrderRefundResponseBodyModuleInsRefundList {
	s.PolicyRefundNo = &v
	return s
}

func (s *InsureOrderRefundResponseBodyModuleInsRefundList) SetRefundStatus(v string) *InsureOrderRefundResponseBodyModuleInsRefundList {
	s.RefundStatus = &v
	return s
}

func (s *InsureOrderRefundResponseBodyModuleInsRefundList) SetSubInsOrderId(v string) *InsureOrderRefundResponseBodyModuleInsRefundList {
	s.SubInsOrderId = &v
	return s
}

type InsureOrderRefundResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InsureOrderRefundResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InsureOrderRefundResponse) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderRefundResponse) GoString() string {
	return s.String()
}

func (s *InsureOrderRefundResponse) SetHeaders(v map[string]*string) *InsureOrderRefundResponse {
	s.Headers = v
	return s
}

func (s *InsureOrderRefundResponse) SetStatusCode(v int32) *InsureOrderRefundResponse {
	s.StatusCode = &v
	return s
}

func (s *InsureOrderRefundResponse) SetBody(v *InsureOrderRefundResponseBody) *InsureOrderRefundResponse {
	s.Body = v
	return s
}

type InsureOrderUrlDetailHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s InsureOrderUrlDetailHeaders) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderUrlDetailHeaders) GoString() string {
	return s.String()
}

func (s *InsureOrderUrlDetailHeaders) SetCommonHeaders(v map[string]*string) *InsureOrderUrlDetailHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InsureOrderUrlDetailHeaders) SetXAcsBtripCorpToken(v string) *InsureOrderUrlDetailHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type InsureOrderUrlDetailResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// https://siopuat.mingya.com.cn/siop-fliggy/index.html#/list?token=fR4iOOZWgG
	Module *string `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// 210bc59616861088185764700d7589
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 213e212c16975080875814628effac
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InsureOrderUrlDetailResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderUrlDetailResponseBody) GoString() string {
	return s.String()
}

func (s *InsureOrderUrlDetailResponseBody) SetCode(v string) *InsureOrderUrlDetailResponseBody {
	s.Code = &v
	return s
}

func (s *InsureOrderUrlDetailResponseBody) SetMessage(v string) *InsureOrderUrlDetailResponseBody {
	s.Message = &v
	return s
}

func (s *InsureOrderUrlDetailResponseBody) SetModule(v string) *InsureOrderUrlDetailResponseBody {
	s.Module = &v
	return s
}

func (s *InsureOrderUrlDetailResponseBody) SetRequestId(v string) *InsureOrderUrlDetailResponseBody {
	s.RequestId = &v
	return s
}

func (s *InsureOrderUrlDetailResponseBody) SetSuccess(v bool) *InsureOrderUrlDetailResponseBody {
	s.Success = &v
	return s
}

func (s *InsureOrderUrlDetailResponseBody) SetTraceId(v string) *InsureOrderUrlDetailResponseBody {
	s.TraceId = &v
	return s
}

type InsureOrderUrlDetailResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InsureOrderUrlDetailResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InsureOrderUrlDetailResponse) String() string {
	return tea.Prettify(s)
}

func (s InsureOrderUrlDetailResponse) GoString() string {
	return s.String()
}

func (s *InsureOrderUrlDetailResponse) SetHeaders(v map[string]*string) *InsureOrderUrlDetailResponse {
	s.Headers = v
	return s
}

func (s *InsureOrderUrlDetailResponse) SetStatusCode(v int32) *InsureOrderUrlDetailResponse {
	s.StatusCode = &v
	return s
}

func (s *InsureOrderUrlDetailResponse) SetBody(v *InsureOrderUrlDetailResponseBody) *InsureOrderUrlDetailResponse {
	s.Body = v
	return s
}

type InsureRefundDetailHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s InsureRefundDetailHeaders) String() string {
	return tea.Prettify(s)
}

func (s InsureRefundDetailHeaders) GoString() string {
	return s.String()
}

func (s *InsureRefundDetailHeaders) SetCommonHeaders(v map[string]*string) *InsureRefundDetailHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InsureRefundDetailHeaders) SetXAcsBtripCorpToken(v string) *InsureRefundDetailHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type InsureRefundDetailRequest struct {
	// example:
	//
	// 1423052318072952023
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 1000000001
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// example:
	//
	// 1000003000000490
	InsOrderId *string `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	// example:
	//
	// PostalSavingsBank
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1021000196440356908
	OutApplyId *string `json:"out_apply_id,omitempty" xml:"out_apply_id,omitempty"`
	// example:
	//
	// fliggy
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
}

func (s InsureRefundDetailRequest) String() string {
	return tea.Prettify(s)
}

func (s InsureRefundDetailRequest) GoString() string {
	return s.String()
}

func (s *InsureRefundDetailRequest) SetApplyId(v string) *InsureRefundDetailRequest {
	s.ApplyId = &v
	return s
}

func (s *InsureRefundDetailRequest) SetBtripUserId(v string) *InsureRefundDetailRequest {
	s.BtripUserId = &v
	return s
}

func (s *InsureRefundDetailRequest) SetBuyerName(v string) *InsureRefundDetailRequest {
	s.BuyerName = &v
	return s
}

func (s *InsureRefundDetailRequest) SetInsOrderId(v string) *InsureRefundDetailRequest {
	s.InsOrderId = &v
	return s
}

func (s *InsureRefundDetailRequest) SetIsvName(v string) *InsureRefundDetailRequest {
	s.IsvName = &v
	return s
}

func (s *InsureRefundDetailRequest) SetOutApplyId(v string) *InsureRefundDetailRequest {
	s.OutApplyId = &v
	return s
}

func (s *InsureRefundDetailRequest) SetSupplierCode(v string) *InsureRefundDetailRequest {
	s.SupplierCode = &v
	return s
}

type InsureRefundDetailResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                               `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                               `json:"message,omitempty" xml:"message,omitempty"`
	Module  *InsureRefundDetailResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 2103a75b16843756660655464d56a9
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210bc44e16818128994413918de6c1
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InsureRefundDetailResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InsureRefundDetailResponseBody) GoString() string {
	return s.String()
}

func (s *InsureRefundDetailResponseBody) SetCode(v string) *InsureRefundDetailResponseBody {
	s.Code = &v
	return s
}

func (s *InsureRefundDetailResponseBody) SetMessage(v string) *InsureRefundDetailResponseBody {
	s.Message = &v
	return s
}

func (s *InsureRefundDetailResponseBody) SetModule(v *InsureRefundDetailResponseBodyModule) *InsureRefundDetailResponseBody {
	s.Module = v
	return s
}

func (s *InsureRefundDetailResponseBody) SetRequestId(v string) *InsureRefundDetailResponseBody {
	s.RequestId = &v
	return s
}

func (s *InsureRefundDetailResponseBody) SetSuccess(v bool) *InsureRefundDetailResponseBody {
	s.Success = &v
	return s
}

func (s *InsureRefundDetailResponseBody) SetTraceId(v string) *InsureRefundDetailResponseBody {
	s.TraceId = &v
	return s
}

type InsureRefundDetailResponseBodyModule struct {
	// example:
	//
	// 1423050918202760437
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-07-04T16:13Z
	GmtModified *string `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	// example:
	//
	// 100000000001
	InsOrderId  *string                                          `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	InsureOrder *InsureRefundDetailResponseBodyModuleInsureOrder `json:"insure_order,omitempty" xml:"insure_order,omitempty" type:"Struct"`
	// example:
	//
	// 23102301010
	OutApplyId         *string                                                   `json:"out_apply_id,omitempty" xml:"out_apply_id,omitempty"`
	SubOrderRefundList []*InsureRefundDetailResponseBodyModuleSubOrderRefundList `json:"sub_order_refund_list,omitempty" xml:"sub_order_refund_list,omitempty" type:"Repeated"`
}

func (s InsureRefundDetailResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s InsureRefundDetailResponseBodyModule) GoString() string {
	return s.String()
}

func (s *InsureRefundDetailResponseBodyModule) SetApplyId(v string) *InsureRefundDetailResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModule) SetGmtCreate(v string) *InsureRefundDetailResponseBodyModule {
	s.GmtCreate = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModule) SetGmtModified(v string) *InsureRefundDetailResponseBodyModule {
	s.GmtModified = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModule) SetInsOrderId(v string) *InsureRefundDetailResponseBodyModule {
	s.InsOrderId = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModule) SetInsureOrder(v *InsureRefundDetailResponseBodyModuleInsureOrder) *InsureRefundDetailResponseBodyModule {
	s.InsureOrder = v
	return s
}

func (s *InsureRefundDetailResponseBodyModule) SetOutApplyId(v string) *InsureRefundDetailResponseBodyModule {
	s.OutApplyId = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModule) SetSubOrderRefundList(v []*InsureRefundDetailResponseBodyModuleSubOrderRefundList) *InsureRefundDetailResponseBodyModule {
	s.SubOrderRefundList = v
	return s
}

type InsureRefundDetailResponseBodyModuleInsureOrder struct {
	Applicant *InsureRefundDetailResponseBodyModuleInsureOrderApplicant `json:"applicant,omitempty" xml:"applicant,omitempty" type:"Struct"`
	// example:
	//
	// 5142701029379
	BizOrderId *string `json:"biz_order_id,omitempty" xml:"biz_order_id,omitempty"`
	// example:
	//
	// 1
	BizType *int32 `json:"biz_type,omitempty" xml:"biz_type,omitempty"`
	// example:
	//
	// 2023-04-11T21:21Z
	CloseTime *string `json:"close_time,omitempty" xml:"close_time,omitempty"`
	// example:
	//
	// 100000000001
	InsOrderId *string `json:"ins_order_id,omitempty" xml:"ins_order_id,omitempty"`
	// example:
	//
	// 200300333333
	OutInsOrderId *string `json:"out_ins_order_id,omitempty" xml:"out_ins_order_id,omitempty"`
	// example:
	//
	// 2023-04-11T21:21Z
	PayTime *string `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	// example:
	//
	// 83000
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 4
	SettleType *int32 `json:"settle_type,omitempty" xml:"settle_type,omitempty"`
	// example:
	//
	// PAID
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
}

func (s InsureRefundDetailResponseBodyModuleInsureOrder) String() string {
	return tea.Prettify(s)
}

func (s InsureRefundDetailResponseBodyModuleInsureOrder) GoString() string {
	return s.String()
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrder) SetApplicant(v *InsureRefundDetailResponseBodyModuleInsureOrderApplicant) *InsureRefundDetailResponseBodyModuleInsureOrder {
	s.Applicant = v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrder) SetBizOrderId(v string) *InsureRefundDetailResponseBodyModuleInsureOrder {
	s.BizOrderId = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrder) SetBizType(v int32) *InsureRefundDetailResponseBodyModuleInsureOrder {
	s.BizType = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrder) SetCloseTime(v string) *InsureRefundDetailResponseBodyModuleInsureOrder {
	s.CloseTime = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrder) SetInsOrderId(v string) *InsureRefundDetailResponseBodyModuleInsureOrder {
	s.InsOrderId = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrder) SetOutInsOrderId(v string) *InsureRefundDetailResponseBodyModuleInsureOrder {
	s.OutInsOrderId = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrder) SetPayTime(v string) *InsureRefundDetailResponseBodyModuleInsureOrder {
	s.PayTime = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrder) SetPrice(v int64) *InsureRefundDetailResponseBodyModuleInsureOrder {
	s.Price = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrder) SetSettleType(v int32) *InsureRefundDetailResponseBodyModuleInsureOrder {
	s.SettleType = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrder) SetStatus(v string) *InsureRefundDetailResponseBodyModuleInsureOrder {
	s.Status = &v
	return s
}

type InsureRefundDetailResponseBodyModuleInsureOrderApplicant struct {
	CertName *string `json:"cert_name,omitempty" xml:"cert_name,omitempty"`
	// example:
	//
	// 300000000000000001
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 102
	CertType *string `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 10000000
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
}

func (s InsureRefundDetailResponseBodyModuleInsureOrderApplicant) String() string {
	return tea.Prettify(s)
}

func (s InsureRefundDetailResponseBodyModuleInsureOrderApplicant) GoString() string {
	return s.String()
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrderApplicant) SetCertName(v string) *InsureRefundDetailResponseBodyModuleInsureOrderApplicant {
	s.CertName = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrderApplicant) SetCertNo(v string) *InsureRefundDetailResponseBodyModuleInsureOrderApplicant {
	s.CertNo = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrderApplicant) SetCertType(v string) *InsureRefundDetailResponseBodyModuleInsureOrderApplicant {
	s.CertType = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleInsureOrderApplicant) SetPhone(v string) *InsureRefundDetailResponseBodyModuleInsureOrderApplicant {
	s.Phone = &v
	return s
}

type InsureRefundDetailResponseBodyModuleSubOrderRefundList struct {
	// example:
	//
	// 2023-04-17T20:25Z
	EffectiveEndTime *string `json:"effective_end_time,omitempty" xml:"effective_end_time,omitempty"`
	// example:
	//
	// 2023-04-17T20:25Z
	EffectiveStartTime *string                                                              `json:"effective_start_time,omitempty" xml:"effective_start_time,omitempty"`
	InsureSegment      *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment `json:"insure_segment,omitempty" xml:"insure_segment,omitempty" type:"Struct"`
	// example:
	//
	// 2023-04-17T20:07Z
	InsureTime *string                                                        `json:"insure_time,omitempty" xml:"insure_time,omitempty"`
	Insured    *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured `json:"insured,omitempty" xml:"insured,omitempty" type:"Struct"`
	// example:
	//
	// OUT123333444
	OutSubInsOrderId *string `json:"out_sub_ins_order_id,omitempty" xml:"out_sub_ins_order_id,omitempty"`
	// example:
	//
	// T230411000000140183629
	PolicyNo *string `json:"policy_no,omitempty" xml:"policy_no,omitempty"`
	// example:
	//
	// 1024194640018002
	PolicyRefundNo *string `json:"policy_refund_no,omitempty" xml:"policy_refund_no,omitempty"`
	// example:
	//
	// 73000
	Price       *int64  `json:"price,omitempty" xml:"price,omitempty"`
	ProductName *string `json:"product_name,omitempty" xml:"product_name,omitempty"`
	// example:
	//
	// 008801.accident.flight.104000
	ProductNo *string `json:"product_no,omitempty" xml:"product_no,omitempty"`
	// example:
	//
	// REFUND_SUCCESS
	RefundStatus *string `json:"refund_status,omitempty" xml:"refund_status,omitempty"`
	// example:
	//
	// 2023-04-17T20:25Z
	RefundTime *string `json:"refund_time,omitempty" xml:"refund_time,omitempty"`
	// example:
	//
	// REFUND_SUCCESS
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// s1231231344
	SubInsOrderId *string `json:"sub_ins_order_id,omitempty" xml:"sub_ins_order_id,omitempty"`
}

func (s InsureRefundDetailResponseBodyModuleSubOrderRefundList) String() string {
	return tea.Prettify(s)
}

func (s InsureRefundDetailResponseBodyModuleSubOrderRefundList) GoString() string {
	return s.String()
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetEffectiveEndTime(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.EffectiveEndTime = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetEffectiveStartTime(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.EffectiveStartTime = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetInsureSegment(v *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.InsureSegment = v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetInsureTime(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.InsureTime = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetInsured(v *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.Insured = v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetOutSubInsOrderId(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.OutSubInsOrderId = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetPolicyNo(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.PolicyNo = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetPolicyRefundNo(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.PolicyRefundNo = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetPrice(v int64) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.Price = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetProductName(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.ProductName = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetProductNo(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.ProductNo = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetRefundStatus(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.RefundStatus = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetRefundTime(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.RefundTime = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetStatus(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.Status = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundList) SetSubInsOrderId(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundList {
	s.SubInsOrderId = &v
	return s
}

type InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment struct {
	// example:
	//
	// WHA
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrCity        *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// YTY
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 2023-05-27 23:00:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// NGB
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepCity        *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// NGB
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// 2023-05-27 20:30:00
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// CZ3501
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
}

func (s InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) String() string {
	return tea.Prettify(s)
}

func (s InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) GoString() string {
	return s.String()
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) SetArrAirportCode(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment {
	s.ArrAirportCode = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) SetArrCity(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment {
	s.ArrCity = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) SetArrCityCode(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment {
	s.ArrCityCode = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) SetArrTime(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment {
	s.ArrTime = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) SetDepAirportCode(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment {
	s.DepAirportCode = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) SetDepCity(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment {
	s.DepCity = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) SetDepCityCode(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment {
	s.DepCityCode = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) SetDepTime(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment {
	s.DepTime = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment) SetFlightNo(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsureSegment {
	s.FlightNo = &v
	return s
}

type InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured struct {
	// example:
	//
	// 1996-07-25
	Birthday *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	// example:
	//
	// 10000001
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	CertName    *string `json:"cert_name,omitempty" xml:"cert_name,omitempty"`
	// example:
	//
	// 300000000000000000
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 102
	CertType *string `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// F
	Gender *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// 1000000
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
}

func (s InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured) String() string {
	return tea.Prettify(s)
}

func (s InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured) GoString() string {
	return s.String()
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured) SetBirthday(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured {
	s.Birthday = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured) SetBtripUserId(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured {
	s.BtripUserId = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured) SetCertName(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured {
	s.CertName = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured) SetCertNo(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured {
	s.CertNo = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured) SetCertType(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured {
	s.CertType = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured) SetGender(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured {
	s.Gender = &v
	return s
}

func (s *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured) SetPhone(v string) *InsureRefundDetailResponseBodyModuleSubOrderRefundListInsured {
	s.Phone = &v
	return s
}

type InsureRefundDetailResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InsureRefundDetailResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InsureRefundDetailResponse) String() string {
	return tea.Prettify(s)
}

func (s InsureRefundDetailResponse) GoString() string {
	return s.String()
}

func (s *InsureRefundDetailResponse) SetHeaders(v map[string]*string) *InsureRefundDetailResponse {
	s.Headers = v
	return s
}

func (s *InsureRefundDetailResponse) SetStatusCode(v int32) *InsureRefundDetailResponse {
	s.StatusCode = &v
	return s
}

func (s *InsureRefundDetailResponse) SetBody(v *InsureRefundDetailResponseBody) *InsureRefundDetailResponse {
	s.Body = v
	return s
}

type IntlFlightCreateOrderHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s IntlFlightCreateOrderHeaders) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderHeaders) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderHeaders) SetCommonHeaders(v map[string]*string) *IntlFlightCreateOrderHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IntlFlightCreateOrderHeaders) SetXAcsBtripCorpToken(v string) *IntlFlightCreateOrderHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type IntlFlightCreateOrderRequest struct {
	// example:
	//
	// fcoid_deb6372db8194f1c94c23bc4fadc508d
	AsyncCreateOrderKey *string `json:"async_create_order_key,omitempty" xml:"async_create_order_key,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// false
	AsyncCreateOrderMode *bool                                    `json:"async_create_order_mode,omitempty" xml:"async_create_order_mode,omitempty"`
	ContactInfo          *IntlFlightCreateOrderRequestContactInfo `json:"contact_info,omitempty" xml:"contact_info,omitempty" type:"Struct"`
	CostCenter           *IntlFlightCreateOrderRequestCostCenter  `json:"cost_center,omitempty" xml:"cost_center,omitempty" type:"Struct"`
	ExtraInfo            map[string]*string                       `json:"extra_info,omitempty" xml:"extra_info,omitempty"`
	// example:
	//
	// open12k0lclldfdc7v10E2HaRrOr00
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// chinese
	Language *string `json:"language,omitempty" xml:"language,omitempty"`
	// example:
	//
	// 56319a175bdf4b1898190bd7edb603b5_0
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// example:
	//
	// F11380075736888770560
	OutOrderId    *string                                      `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerList []*IntlFlightCreateOrderRequestPassengerList `json:"passenger_list,omitempty" xml:"passenger_list,omitempty" type:"Repeated"`
	// example:
	//
	// fcoid_deb6372db8194f1c94c23bc4fadc508d
	RenderKey *string `json:"render_key,omitempty" xml:"render_key,omitempty"`
	// example:
	//
	// 120000
	TotalPriceCent *int64 `json:"total_price_cent,omitempty" xml:"total_price_cent,omitempty"`
	// example:
	//
	// 12341234
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s IntlFlightCreateOrderRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderRequest) SetAsyncCreateOrderKey(v string) *IntlFlightCreateOrderRequest {
	s.AsyncCreateOrderKey = &v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetAsyncCreateOrderMode(v bool) *IntlFlightCreateOrderRequest {
	s.AsyncCreateOrderMode = &v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetContactInfo(v *IntlFlightCreateOrderRequestContactInfo) *IntlFlightCreateOrderRequest {
	s.ContactInfo = v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetCostCenter(v *IntlFlightCreateOrderRequestCostCenter) *IntlFlightCreateOrderRequest {
	s.CostCenter = v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetExtraInfo(v map[string]*string) *IntlFlightCreateOrderRequest {
	s.ExtraInfo = v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetIsvName(v string) *IntlFlightCreateOrderRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetLanguage(v string) *IntlFlightCreateOrderRequest {
	s.Language = &v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetOtaItemId(v string) *IntlFlightCreateOrderRequest {
	s.OtaItemId = &v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetOutOrderId(v string) *IntlFlightCreateOrderRequest {
	s.OutOrderId = &v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetPassengerList(v []*IntlFlightCreateOrderRequestPassengerList) *IntlFlightCreateOrderRequest {
	s.PassengerList = v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetRenderKey(v string) *IntlFlightCreateOrderRequest {
	s.RenderKey = &v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetTotalPriceCent(v int64) *IntlFlightCreateOrderRequest {
	s.TotalPriceCent = &v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetUserId(v string) *IntlFlightCreateOrderRequest {
	s.UserId = &v
	return s
}

func (s *IntlFlightCreateOrderRequest) SetUserName(v string) *IntlFlightCreateOrderRequest {
	s.UserName = &v
	return s
}

type IntlFlightCreateOrderRequestContactInfo struct {
	// This parameter is required.
	//
	// example:
	//
	// XXX@aliyun.com
	ContactEmail *string `json:"contact_email,omitempty" xml:"contact_email,omitempty"`
	// This parameter is required.
	ContactName *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 13812341234
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// true
	SendMsgToPassenger *bool `json:"send_msg_to_passenger,omitempty" xml:"send_msg_to_passenger,omitempty"`
}

func (s IntlFlightCreateOrderRequestContactInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderRequestContactInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderRequestContactInfo) SetContactEmail(v string) *IntlFlightCreateOrderRequestContactInfo {
	s.ContactEmail = &v
	return s
}

func (s *IntlFlightCreateOrderRequestContactInfo) SetContactName(v string) *IntlFlightCreateOrderRequestContactInfo {
	s.ContactName = &v
	return s
}

func (s *IntlFlightCreateOrderRequestContactInfo) SetContactPhone(v string) *IntlFlightCreateOrderRequestContactInfo {
	s.ContactPhone = &v
	return s
}

func (s *IntlFlightCreateOrderRequestContactInfo) SetSendMsgToPassenger(v bool) *IntlFlightCreateOrderRequestContactInfo {
	s.SendMsgToPassenger = &v
	return s
}

type IntlFlightCreateOrderRequestCostCenter struct {
	// This parameter is required.
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 312434
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
}

func (s IntlFlightCreateOrderRequestCostCenter) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderRequestCostCenter) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderRequestCostCenter) SetCostCenterName(v string) *IntlFlightCreateOrderRequestCostCenter {
	s.CostCenterName = &v
	return s
}

func (s *IntlFlightCreateOrderRequestCostCenter) SetCostCenterNumber(v string) *IntlFlightCreateOrderRequestCostCenter {
	s.CostCenterNumber = &v
	return s
}

type IntlFlightCreateOrderRequestPassengerList struct {
	// This parameter is required.
	//
	// example:
	//
	// 2020-01-01
	Birthday *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	// example:
	//
	// 100/12131231
	CascadeDeptMask *string `json:"cascade_dept_mask,omitempty" xml:"cascade_dept_mask,omitempty"`
	CascadeDeptName *string `json:"cascade_dept_name,omitempty" xml:"cascade_dept_name,omitempty"`
	// This parameter is required.
	CertInfo       *IntlFlightCreateOrderRequestPassengerListCertInfo `json:"cert_info,omitempty" xml:"cert_info,omitempty" type:"Struct"`
	CostCenterName *string                                            `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// 312434
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// 12131231
	DeptId   *string `json:"dept_id,omitempty" xml:"dept_id,omitempty"`
	DeptName *string `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	// example:
	//
	// 0
	Gender *int32 `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// 10001313
	InvoiceId    *string `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// ZNW0525
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// 086
	MobileCountryCode *string `json:"mobile_country_code,omitempty" xml:"mobile_country_code,omitempty"`
	Nationality       *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
	// example:
	//
	// CN
	NationalityCode *string `json:"nationality_code,omitempty" xml:"nationality_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 18012341234
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// 10123143
	ProjectCode            *string                                                            `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle           *string                                                            `json:"project_title,omitempty" xml:"project_title,omitempty"`
	SubsidiaryCertInfoList []*IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList `json:"subsidiary_cert_info_list,omitempty" xml:"subsidiary_cert_info_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 13123123212
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	// example:
	//
	// 0
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s IntlFlightCreateOrderRequestPassengerList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderRequestPassengerList) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetBirthday(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.Birthday = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetCascadeDeptMask(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.CascadeDeptMask = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetCascadeDeptName(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.CascadeDeptName = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetCertInfo(v *IntlFlightCreateOrderRequestPassengerListCertInfo) *IntlFlightCreateOrderRequestPassengerList {
	s.CertInfo = v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetCostCenterName(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.CostCenterName = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetCostCenterNumber(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.CostCenterNumber = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetDeptId(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.DeptId = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetDeptName(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.DeptName = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetGender(v int32) *IntlFlightCreateOrderRequestPassengerList {
	s.Gender = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetInvoiceId(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.InvoiceId = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetInvoiceTitle(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.InvoiceTitle = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetJobNo(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.JobNo = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetMobileCountryCode(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.MobileCountryCode = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetNationality(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.Nationality = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetNationalityCode(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.NationalityCode = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetPassengerType(v int32) *IntlFlightCreateOrderRequestPassengerList {
	s.PassengerType = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetPhone(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.Phone = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetProjectCode(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.ProjectCode = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetProjectTitle(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.ProjectTitle = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetSubsidiaryCertInfoList(v []*IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList) *IntlFlightCreateOrderRequestPassengerList {
	s.SubsidiaryCertInfoList = v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetUserId(v string) *IntlFlightCreateOrderRequestPassengerList {
	s.UserId = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerList) SetUserType(v int32) *IntlFlightCreateOrderRequestPassengerList {
	s.UserType = &v
	return s
}

type IntlFlightCreateOrderRequestPassengerListCertInfo struct {
	// example:
	//
	// CN
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// H123456
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 2030-01-01
	CertValidDate *string `json:"cert_valid_date,omitempty" xml:"cert_valid_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// ZHANG/SAN
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
}

func (s IntlFlightCreateOrderRequestPassengerListCertInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderRequestPassengerListCertInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderRequestPassengerListCertInfo) SetCertNation(v string) *IntlFlightCreateOrderRequestPassengerListCertInfo {
	s.CertNation = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerListCertInfo) SetCertNo(v string) *IntlFlightCreateOrderRequestPassengerListCertInfo {
	s.CertNo = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerListCertInfo) SetCertType(v int32) *IntlFlightCreateOrderRequestPassengerListCertInfo {
	s.CertType = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerListCertInfo) SetCertValidDate(v string) *IntlFlightCreateOrderRequestPassengerListCertInfo {
	s.CertValidDate = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerListCertInfo) SetName(v string) *IntlFlightCreateOrderRequestPassengerListCertInfo {
	s.Name = &v
	return s
}

type IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList struct {
	// example:
	//
	// CN
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// H123456
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 2030-01-01
	CertValidDate *string `json:"cert_valid_date,omitempty" xml:"cert_valid_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// ZHANG/SAN
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
}

func (s IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList) SetCertNation(v string) *IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList {
	s.CertNation = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList) SetCertNo(v string) *IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList {
	s.CertNo = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList) SetCertType(v int32) *IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList {
	s.CertType = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList) SetCertValidDate(v string) *IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList {
	s.CertValidDate = &v
	return s
}

func (s *IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList) SetName(v string) *IntlFlightCreateOrderRequestPassengerListSubsidiaryCertInfoList {
	s.Name = &v
	return s
}

type IntlFlightCreateOrderShrinkRequest struct {
	// example:
	//
	// fcoid_deb6372db8194f1c94c23bc4fadc508d
	AsyncCreateOrderKey *string `json:"async_create_order_key,omitempty" xml:"async_create_order_key,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// false
	AsyncCreateOrderMode *bool   `json:"async_create_order_mode,omitempty" xml:"async_create_order_mode,omitempty"`
	ContactInfoShrink    *string `json:"contact_info,omitempty" xml:"contact_info,omitempty"`
	CostCenterShrink     *string `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	ExtraInfoShrink      *string `json:"extra_info,omitempty" xml:"extra_info,omitempty"`
	// example:
	//
	// open12k0lclldfdc7v10E2HaRrOr00
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// chinese
	Language *string `json:"language,omitempty" xml:"language,omitempty"`
	// example:
	//
	// 56319a175bdf4b1898190bd7edb603b5_0
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// example:
	//
	// F11380075736888770560
	OutOrderId          *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerListShrink *string `json:"passenger_list,omitempty" xml:"passenger_list,omitempty"`
	// example:
	//
	// fcoid_deb6372db8194f1c94c23bc4fadc508d
	RenderKey *string `json:"render_key,omitempty" xml:"render_key,omitempty"`
	// example:
	//
	// 120000
	TotalPriceCent *int64 `json:"total_price_cent,omitempty" xml:"total_price_cent,omitempty"`
	// example:
	//
	// 12341234
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s IntlFlightCreateOrderShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderShrinkRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderShrinkRequest) SetAsyncCreateOrderKey(v string) *IntlFlightCreateOrderShrinkRequest {
	s.AsyncCreateOrderKey = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetAsyncCreateOrderMode(v bool) *IntlFlightCreateOrderShrinkRequest {
	s.AsyncCreateOrderMode = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetContactInfoShrink(v string) *IntlFlightCreateOrderShrinkRequest {
	s.ContactInfoShrink = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetCostCenterShrink(v string) *IntlFlightCreateOrderShrinkRequest {
	s.CostCenterShrink = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetExtraInfoShrink(v string) *IntlFlightCreateOrderShrinkRequest {
	s.ExtraInfoShrink = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetIsvName(v string) *IntlFlightCreateOrderShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetLanguage(v string) *IntlFlightCreateOrderShrinkRequest {
	s.Language = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetOtaItemId(v string) *IntlFlightCreateOrderShrinkRequest {
	s.OtaItemId = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetOutOrderId(v string) *IntlFlightCreateOrderShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetPassengerListShrink(v string) *IntlFlightCreateOrderShrinkRequest {
	s.PassengerListShrink = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetRenderKey(v string) *IntlFlightCreateOrderShrinkRequest {
	s.RenderKey = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetTotalPriceCent(v int64) *IntlFlightCreateOrderShrinkRequest {
	s.TotalPriceCent = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetUserId(v string) *IntlFlightCreateOrderShrinkRequest {
	s.UserId = &v
	return s
}

func (s *IntlFlightCreateOrderShrinkRequest) SetUserName(v string) *IntlFlightCreateOrderShrinkRequest {
	s.UserName = &v
	return s
}

type IntlFlightCreateOrderResponseBody struct {
	// example:
	//
	// 200
	HttpStatusCode *int32                                   `json:"http_status_code,omitempty" xml:"http_status_code,omitempty"`
	Module         *IntlFlightCreateOrderResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// 0
	ResultCode *string `json:"result_code,omitempty" xml:"result_code,omitempty"`
	ResultMsg  *string `json:"result_msg,omitempty" xml:"result_msg,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 2103ad1116826479016562032da98c
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s IntlFlightCreateOrderResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderResponseBody) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderResponseBody) SetHttpStatusCode(v int32) *IntlFlightCreateOrderResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBody) SetModule(v *IntlFlightCreateOrderResponseBodyModule) *IntlFlightCreateOrderResponseBody {
	s.Module = v
	return s
}

func (s *IntlFlightCreateOrderResponseBody) SetRequestId(v string) *IntlFlightCreateOrderResponseBody {
	s.RequestId = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBody) SetResultCode(v string) *IntlFlightCreateOrderResponseBody {
	s.ResultCode = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBody) SetResultMsg(v string) *IntlFlightCreateOrderResponseBody {
	s.ResultMsg = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBody) SetSuccess(v bool) *IntlFlightCreateOrderResponseBody {
	s.Success = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBody) SetTraceId(v string) *IntlFlightCreateOrderResponseBody {
	s.TraceId = &v
	return s
}

type IntlFlightCreateOrderResponseBodyModule struct {
	// example:
	//
	// deb6372db8194f1c94c23bc4fadc508d
	AsyncCreateOrderKey *string `json:"async_create_order_key,omitempty" xml:"async_create_order_key,omitempty"`
	// example:
	//
	// 2023-08-10 17:42:32
	LatestPayTime *string `json:"latest_pay_time,omitempty" xml:"latest_pay_time,omitempty"`
	// example:
	//
	// 1003038197806523003
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// F11378244642107293696
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 0
	PayStatus *int32 `json:"pay_status,omitempty" xml:"pay_status,omitempty"`
	// example:
	//
	// -1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 22300
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
}

func (s IntlFlightCreateOrderResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderResponseBodyModule) SetAsyncCreateOrderKey(v string) *IntlFlightCreateOrderResponseBodyModule {
	s.AsyncCreateOrderKey = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBodyModule) SetLatestPayTime(v string) *IntlFlightCreateOrderResponseBodyModule {
	s.LatestPayTime = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBodyModule) SetOrderId(v int64) *IntlFlightCreateOrderResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBodyModule) SetOutOrderId(v string) *IntlFlightCreateOrderResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBodyModule) SetPayStatus(v int32) *IntlFlightCreateOrderResponseBodyModule {
	s.PayStatus = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBodyModule) SetStatus(v int32) *IntlFlightCreateOrderResponseBodyModule {
	s.Status = &v
	return s
}

func (s *IntlFlightCreateOrderResponseBodyModule) SetTotalPrice(v int64) *IntlFlightCreateOrderResponseBodyModule {
	s.TotalPrice = &v
	return s
}

type IntlFlightCreateOrderResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IntlFlightCreateOrderResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IntlFlightCreateOrderResponse) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightCreateOrderResponse) GoString() string {
	return s.String()
}

func (s *IntlFlightCreateOrderResponse) SetHeaders(v map[string]*string) *IntlFlightCreateOrderResponse {
	s.Headers = v
	return s
}

func (s *IntlFlightCreateOrderResponse) SetStatusCode(v int32) *IntlFlightCreateOrderResponse {
	s.StatusCode = &v
	return s
}

func (s *IntlFlightCreateOrderResponse) SetBody(v *IntlFlightCreateOrderResponseBody) *IntlFlightCreateOrderResponse {
	s.Body = v
	return s
}

type IntlFlightInventoryPriceCheckHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s IntlFlightInventoryPriceCheckHeaders) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckHeaders) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckHeaders) SetCommonHeaders(v map[string]*string) *IntlFlightInventoryPriceCheckHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IntlFlightInventoryPriceCheckHeaders) SetXAcsBtripCorpToken(v string) *IntlFlightInventoryPriceCheckHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type IntlFlightInventoryPriceCheckRequest struct {
	// example:
	//
	// ZJTD
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// chinese
	Language *string `json:"language,omitempty" xml:"language,omitempty"`
	// example:
	//
	// 102000
	OrderPrice *int64 `json:"order_price,omitempty" xml:"order_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 22111acaf9ea47c09ed0db6abc45be2d_0
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// This parameter is required.
	PassengerList []*IntlFlightInventoryPriceCheckRequestPassengerList `json:"passenger_list,omitempty" xml:"passenger_list,omitempty" type:"Repeated"`
	// example:
	//
	// 12412341234
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s IntlFlightInventoryPriceCheckRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckRequest) SetIsvName(v string) *IntlFlightInventoryPriceCheckRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequest) SetLanguage(v string) *IntlFlightInventoryPriceCheckRequest {
	s.Language = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequest) SetOrderPrice(v int64) *IntlFlightInventoryPriceCheckRequest {
	s.OrderPrice = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequest) SetOtaItemId(v string) *IntlFlightInventoryPriceCheckRequest {
	s.OtaItemId = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequest) SetPassengerList(v []*IntlFlightInventoryPriceCheckRequestPassengerList) *IntlFlightInventoryPriceCheckRequest {
	s.PassengerList = v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequest) SetUserId(v string) *IntlFlightInventoryPriceCheckRequest {
	s.UserId = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequest) SetUserName(v string) *IntlFlightInventoryPriceCheckRequest {
	s.UserName = &v
	return s
}

type IntlFlightInventoryPriceCheckRequestPassengerList struct {
	// This parameter is required.
	//
	// example:
	//
	// 2020-01-01
	Birthday *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	// example:
	//
	// 100/1001
	CascadeDeptMask *string `json:"cascade_dept_mask,omitempty" xml:"cascade_dept_mask,omitempty"`
	CascadeDeptName *string `json:"cascade_dept_name,omitempty" xml:"cascade_dept_name,omitempty"`
	// This parameter is required.
	CertInfo       *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo `json:"cert_info,omitempty" xml:"cert_info,omitempty" type:"Struct"`
	CostCenterName *string                                                    `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// 100231
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// 1001
	DeptId   *string `json:"dept_id,omitempty" xml:"dept_id,omitempty"`
	DeptName *string `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	// example:
	//
	// 0
	Gender *int32 `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// 10001313
	InvoiceId    *string `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// L5000924
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// 086
	MobileCountryCode *string `json:"mobile_country_code,omitempty" xml:"mobile_country_code,omitempty"`
	Nationality       *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
	// example:
	//
	// CN
	NationalityCode *string `json:"nationality_code,omitempty" xml:"nationality_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 18012341234
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// 10123143
	ProjectCode            *string                                                                    `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle           *string                                                                    `json:"project_title,omitempty" xml:"project_title,omitempty"`
	SubsidiaryCertInfoList []*IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList `json:"subsidiary_cert_info_list,omitempty" xml:"subsidiary_cert_info_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 10001
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	// example:
	//
	// 0
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s IntlFlightInventoryPriceCheckRequestPassengerList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckRequestPassengerList) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetBirthday(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.Birthday = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetCascadeDeptMask(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.CascadeDeptMask = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetCascadeDeptName(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.CascadeDeptName = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetCertInfo(v *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.CertInfo = v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetCostCenterName(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.CostCenterName = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetCostCenterNumber(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.CostCenterNumber = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetDeptId(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.DeptId = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetDeptName(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.DeptName = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetGender(v int32) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.Gender = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetInvoiceId(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.InvoiceId = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetInvoiceTitle(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.InvoiceTitle = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetJobNo(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.JobNo = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetMobileCountryCode(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.MobileCountryCode = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetNationality(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.Nationality = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetNationalityCode(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.NationalityCode = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetPassengerType(v int32) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.PassengerType = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetPhone(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.Phone = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetProjectCode(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.ProjectCode = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetProjectTitle(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.ProjectTitle = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetSubsidiaryCertInfoList(v []*IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.SubsidiaryCertInfoList = v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetUserId(v string) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.UserId = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerList) SetUserType(v int32) *IntlFlightInventoryPriceCheckRequestPassengerList {
	s.UserType = &v
	return s
}

type IntlFlightInventoryPriceCheckRequestPassengerListCertInfo struct {
	// example:
	//
	// CN
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// H123456
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 2033-01-09
	CertValidDate *string `json:"cert_valid_date,omitempty" xml:"cert_valid_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// ZHANG/SAN
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
}

func (s IntlFlightInventoryPriceCheckRequestPassengerListCertInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckRequestPassengerListCertInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo) SetCertNation(v string) *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo {
	s.CertNation = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo) SetCertNo(v string) *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo {
	s.CertNo = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo) SetCertType(v int32) *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo {
	s.CertType = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo) SetCertValidDate(v string) *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo {
	s.CertValidDate = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo) SetName(v string) *IntlFlightInventoryPriceCheckRequestPassengerListCertInfo {
	s.Name = &v
	return s
}

type IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList struct {
	// example:
	//
	// CN
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// example:
	//
	// H123456
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 1
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 2033-01-09
	CertValidDate *string `json:"cert_valid_date,omitempty" xml:"cert_valid_date,omitempty"`
	// example:
	//
	// ZHANG/SAN
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
}

func (s IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList) SetCertNation(v string) *IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList {
	s.CertNation = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList) SetCertNo(v string) *IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList {
	s.CertNo = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList) SetCertType(v int32) *IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList {
	s.CertType = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList) SetCertValidDate(v string) *IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList {
	s.CertValidDate = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList) SetName(v string) *IntlFlightInventoryPriceCheckRequestPassengerListSubsidiaryCertInfoList {
	s.Name = &v
	return s
}

type IntlFlightInventoryPriceCheckShrinkRequest struct {
	// example:
	//
	// ZJTD
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// chinese
	Language *string `json:"language,omitempty" xml:"language,omitempty"`
	// example:
	//
	// 102000
	OrderPrice *int64 `json:"order_price,omitempty" xml:"order_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 22111acaf9ea47c09ed0db6abc45be2d_0
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	// This parameter is required.
	PassengerListShrink *string `json:"passenger_list,omitempty" xml:"passenger_list,omitempty"`
	// example:
	//
	// 12412341234
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s IntlFlightInventoryPriceCheckShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckShrinkRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckShrinkRequest) SetIsvName(v string) *IntlFlightInventoryPriceCheckShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckShrinkRequest) SetLanguage(v string) *IntlFlightInventoryPriceCheckShrinkRequest {
	s.Language = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckShrinkRequest) SetOrderPrice(v int64) *IntlFlightInventoryPriceCheckShrinkRequest {
	s.OrderPrice = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckShrinkRequest) SetOtaItemId(v string) *IntlFlightInventoryPriceCheckShrinkRequest {
	s.OtaItemId = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckShrinkRequest) SetPassengerListShrink(v string) *IntlFlightInventoryPriceCheckShrinkRequest {
	s.PassengerListShrink = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckShrinkRequest) SetUserId(v string) *IntlFlightInventoryPriceCheckShrinkRequest {
	s.UserId = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckShrinkRequest) SetUserName(v string) *IntlFlightInventoryPriceCheckShrinkRequest {
	s.UserName = &v
	return s
}

type IntlFlightInventoryPriceCheckResponseBody struct {
	Module *IntlFlightInventoryPriceCheckResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 92359A00-85D8-16C4-AED0-249618DEEC17
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// 0
	ResultCode *string `json:"result_code,omitempty" xml:"result_code,omitempty"`
	ResultMsg  *string `json:"result_msg,omitempty" xml:"result_msg,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 2103ad1516839612078738332dea5c
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s IntlFlightInventoryPriceCheckResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckResponseBody) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckResponseBody) SetModule(v *IntlFlightInventoryPriceCheckResponseBodyModule) *IntlFlightInventoryPriceCheckResponseBody {
	s.Module = v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBody) SetRequestId(v string) *IntlFlightInventoryPriceCheckResponseBody {
	s.RequestId = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBody) SetResultCode(v string) *IntlFlightInventoryPriceCheckResponseBody {
	s.ResultCode = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBody) SetResultMsg(v string) *IntlFlightInventoryPriceCheckResponseBody {
	s.ResultMsg = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBody) SetSuccess(v bool) *IntlFlightInventoryPriceCheckResponseBody {
	s.Success = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBody) SetTraceId(v string) *IntlFlightInventoryPriceCheckResponseBody {
	s.TraceId = &v
	return s
}

type IntlFlightInventoryPriceCheckResponseBodyModule struct {
	// example:
	//
	// true
	CheckSuccess *bool `json:"check_success,omitempty" xml:"check_success,omitempty"`
	// example:
	//
	// 0
	FailType                      *int32                                                                          `json:"fail_type,omitempty" xml:"fail_type,omitempty"`
	PassengerChangedPriceInfoList []*IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList `json:"passenger_changed_price_info_list,omitempty" xml:"passenger_changed_price_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// fcoid_deb6372db8194f1c94c23bc4fadc508d
	RenderKey *string `json:"render_key,omitempty" xml:"render_key,omitempty"`
}

func (s IntlFlightInventoryPriceCheckResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModule) SetCheckSuccess(v bool) *IntlFlightInventoryPriceCheckResponseBodyModule {
	s.CheckSuccess = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModule) SetFailType(v int32) *IntlFlightInventoryPriceCheckResponseBodyModule {
	s.FailType = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModule) SetPassengerChangedPriceInfoList(v []*IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList) *IntlFlightInventoryPriceCheckResponseBodyModule {
	s.PassengerChangedPriceInfoList = v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModule) SetRenderKey(v string) *IntlFlightInventoryPriceCheckResponseBodyModule {
	s.RenderKey = &v
	return s
}

type IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList struct {
	// example:
	//
	// false
	Changed       *bool                                                                                      `json:"changed,omitempty" xml:"changed,omitempty"`
	ChangedPrice  *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice  `json:"changed_price,omitempty" xml:"changed_price,omitempty" type:"Struct"`
	OriginalPrice *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice `json:"original_price,omitempty" xml:"original_price,omitempty" type:"Struct"`
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
}

func (s IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList) SetChanged(v bool) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList {
	s.Changed = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList) SetChangedPrice(v *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList {
	s.ChangedPrice = v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList) SetOriginalPrice(v *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList {
	s.OriginalPrice = v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList) SetPassengerType(v int32) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoList {
	s.PassengerType = &v
	return s
}

type IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice struct {
	// example:
	//
	// 9000
	BuildPrice *int64 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 5000
	OilPrice *int64 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	// example:
	//
	// 12000
	TaxPrice *int64 `json:"tax_price,omitempty" xml:"tax_price,omitempty"`
	// example:
	//
	// 90000
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
}

func (s IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice) SetBuildPrice(v int64) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice {
	s.BuildPrice = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice) SetOilPrice(v int64) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice {
	s.OilPrice = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice) SetTaxPrice(v int64) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice {
	s.TaxPrice = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice) SetTicketPrice(v int64) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListChangedPrice {
	s.TicketPrice = &v
	return s
}

type IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice struct {
	// example:
	//
	// 9000
	BuildPrice *int64 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// 5000
	OilPrice *int64 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	// example:
	//
	// 12000
	TaxPrice *int64 `json:"tax_price,omitempty" xml:"tax_price,omitempty"`
	// example:
	//
	// 80000
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
}

func (s IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice) SetBuildPrice(v int64) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice {
	s.BuildPrice = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice) SetOilPrice(v int64) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice {
	s.OilPrice = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice) SetTaxPrice(v int64) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice {
	s.TaxPrice = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice) SetTicketPrice(v int64) *IntlFlightInventoryPriceCheckResponseBodyModulePassengerChangedPriceInfoListOriginalPrice {
	s.TicketPrice = &v
	return s
}

type IntlFlightInventoryPriceCheckResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IntlFlightInventoryPriceCheckResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IntlFlightInventoryPriceCheckResponse) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightInventoryPriceCheckResponse) GoString() string {
	return s.String()
}

func (s *IntlFlightInventoryPriceCheckResponse) SetHeaders(v map[string]*string) *IntlFlightInventoryPriceCheckResponse {
	s.Headers = v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponse) SetStatusCode(v int32) *IntlFlightInventoryPriceCheckResponse {
	s.StatusCode = &v
	return s
}

func (s *IntlFlightInventoryPriceCheckResponse) SetBody(v *IntlFlightInventoryPriceCheckResponseBody) *IntlFlightInventoryPriceCheckResponse {
	s.Body = v
	return s
}

type IntlFlightListingSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s IntlFlightListingSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchHeaders) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchHeaders) SetCommonHeaders(v map[string]*string) *IntlFlightListingSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IntlFlightListingSearchHeaders) SetXAcsBtripCorpToken(v string) *IntlFlightListingSearchHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type IntlFlightListingSearchRequest struct {
	// example:
	//
	// 10001
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// example:
	//
	// ZHANGSAN
	BuyerName *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	CabinType *int32 `json:"cabin_type,omitempty" xml:"cabin_type,omitempty"`
	// example:
	//
	// false
	DirectOnly *bool `json:"direct_only,omitempty" xml:"direct_only,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// TEST
	IsvName  *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	Language *string `json:"language,omitempty" xml:"language,omitempty"`
	// example:
	//
	// true
	NeedShareFlight *bool `json:"need_share_flight,omitempty" xml:"need_share_flight,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// false
	OutWheelSearch *bool `json:"out_wheel_search,omitempty" xml:"out_wheel_search,omitempty"`
	// example:
	//
	// 60b412-cc05-4d10-b570-
	QueryRecordId *string `json:"query_record_id,omitempty" xml:"query_record_id,omitempty"`
	// This parameter is required.
	SearchJourneys []*IntlFlightListingSearchRequestSearchJourneys `json:"search_journeys,omitempty" xml:"search_journeys,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	SearchMode          *int32                                               `json:"search_mode,omitempty" xml:"search_mode,omitempty"`
	SearchPassengerList []*IntlFlightListingSearchRequestSearchPassengerList `json:"search_passenger_list,omitempty" xml:"search_passenger_list,omitempty" type:"Repeated"`
	// example:
	//
	// JIANHANG
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
	// example:
	//
	// 9960b412-cc05-4d10-b570-93372d816807
	Token *string `json:"token,omitempty" xml:"token,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s IntlFlightListingSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchRequest) SetBtripUserId(v string) *IntlFlightListingSearchRequest {
	s.BtripUserId = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetBuyerName(v string) *IntlFlightListingSearchRequest {
	s.BuyerName = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetCabinType(v int32) *IntlFlightListingSearchRequest {
	s.CabinType = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetDirectOnly(v bool) *IntlFlightListingSearchRequest {
	s.DirectOnly = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetIsvName(v string) *IntlFlightListingSearchRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetLanguage(v string) *IntlFlightListingSearchRequest {
	s.Language = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetNeedShareFlight(v bool) *IntlFlightListingSearchRequest {
	s.NeedShareFlight = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetOutWheelSearch(v bool) *IntlFlightListingSearchRequest {
	s.OutWheelSearch = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetQueryRecordId(v string) *IntlFlightListingSearchRequest {
	s.QueryRecordId = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetSearchJourneys(v []*IntlFlightListingSearchRequestSearchJourneys) *IntlFlightListingSearchRequest {
	s.SearchJourneys = v
	return s
}

func (s *IntlFlightListingSearchRequest) SetSearchMode(v int32) *IntlFlightListingSearchRequest {
	s.SearchMode = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetSearchPassengerList(v []*IntlFlightListingSearchRequestSearchPassengerList) *IntlFlightListingSearchRequest {
	s.SearchPassengerList = v
	return s
}

func (s *IntlFlightListingSearchRequest) SetSupplierCode(v string) *IntlFlightListingSearchRequest {
	s.SupplierCode = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetToken(v string) *IntlFlightListingSearchRequest {
	s.Token = &v
	return s
}

func (s *IntlFlightListingSearchRequest) SetTripType(v int32) *IntlFlightListingSearchRequest {
	s.TripType = &v
	return s
}

type IntlFlightListingSearchRequestSearchJourneys struct {
	// This parameter is required.
	//
	// example:
	//
	// MEL
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HKG
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-12-28
	DepDate         *string                                                        `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	SelectedFlights []*IntlFlightListingSearchRequestSearchJourneysSelectedFlights `json:"selected_flights,omitempty" xml:"selected_flights,omitempty" type:"Repeated"`
}

func (s IntlFlightListingSearchRequestSearchJourneys) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchRequestSearchJourneys) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchRequestSearchJourneys) SetArrCityCode(v string) *IntlFlightListingSearchRequestSearchJourneys {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchJourneys) SetDepCityCode(v string) *IntlFlightListingSearchRequestSearchJourneys {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchJourneys) SetDepDate(v string) *IntlFlightListingSearchRequestSearchJourneys {
	s.DepDate = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchJourneys) SetSelectedFlights(v []*IntlFlightListingSearchRequestSearchJourneysSelectedFlights) *IntlFlightListingSearchRequestSearchJourneys {
	s.SelectedFlights = v
	return s
}

type IntlFlightListingSearchRequestSearchJourneysSelectedFlights struct {
	// example:
	//
	// HNY
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// MEL
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 0
	CabinType *int32 `json:"cabin_type,omitempty" xml:"cabin_type,omitempty"`
	// example:
	//
	// SZX
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HKG
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-12-28 12:00:00
	FlightTime *string `json:"flight_time,omitempty" xml:"flight_time,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// KA5809
	MarketFlightNo *string `json:"market_flight_no,omitempty" xml:"market_flight_no,omitempty"`
	// example:
	//
	// CX601
	OperateFlightNo *string `json:"operate_flight_no,omitempty" xml:"operate_flight_no,omitempty"`
}

func (s IntlFlightListingSearchRequestSearchJourneysSelectedFlights) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchRequestSearchJourneysSelectedFlights) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchRequestSearchJourneysSelectedFlights) SetArrAirportCode(v string) *IntlFlightListingSearchRequestSearchJourneysSelectedFlights {
	s.ArrAirportCode = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchJourneysSelectedFlights) SetArrCityCode(v string) *IntlFlightListingSearchRequestSearchJourneysSelectedFlights {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchJourneysSelectedFlights) SetCabinType(v int32) *IntlFlightListingSearchRequestSearchJourneysSelectedFlights {
	s.CabinType = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchJourneysSelectedFlights) SetDepAirportCode(v string) *IntlFlightListingSearchRequestSearchJourneysSelectedFlights {
	s.DepAirportCode = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchJourneysSelectedFlights) SetDepCityCode(v string) *IntlFlightListingSearchRequestSearchJourneysSelectedFlights {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchJourneysSelectedFlights) SetFlightTime(v string) *IntlFlightListingSearchRequestSearchJourneysSelectedFlights {
	s.FlightTime = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchJourneysSelectedFlights) SetMarketFlightNo(v string) *IntlFlightListingSearchRequestSearchJourneysSelectedFlights {
	s.MarketFlightNo = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchJourneysSelectedFlights) SetOperateFlightNo(v string) *IntlFlightListingSearchRequestSearchJourneysSelectedFlights {
	s.OperateFlightNo = &v
	return s
}

type IntlFlightListingSearchRequestSearchPassengerList struct {
	// This parameter is required.
	//
	// example:
	//
	// 10012301201
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// ZHANGSAN
	FullName *string `json:"full_name,omitempty" xml:"full_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s IntlFlightListingSearchRequestSearchPassengerList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchRequestSearchPassengerList) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchRequestSearchPassengerList) SetCertNo(v string) *IntlFlightListingSearchRequestSearchPassengerList {
	s.CertNo = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchPassengerList) SetCertType(v int32) *IntlFlightListingSearchRequestSearchPassengerList {
	s.CertType = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchPassengerList) SetFullName(v string) *IntlFlightListingSearchRequestSearchPassengerList {
	s.FullName = &v
	return s
}

func (s *IntlFlightListingSearchRequestSearchPassengerList) SetType(v int32) *IntlFlightListingSearchRequestSearchPassengerList {
	s.Type = &v
	return s
}

type IntlFlightListingSearchShrinkRequest struct {
	// example:
	//
	// 10001
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// example:
	//
	// ZHANGSAN
	BuyerName *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	CabinType *int32 `json:"cabin_type,omitempty" xml:"cabin_type,omitempty"`
	// example:
	//
	// false
	DirectOnly *bool `json:"direct_only,omitempty" xml:"direct_only,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// TEST
	IsvName  *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	Language *string `json:"language,omitempty" xml:"language,omitempty"`
	// example:
	//
	// true
	NeedShareFlight *bool `json:"need_share_flight,omitempty" xml:"need_share_flight,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// false
	OutWheelSearch *bool `json:"out_wheel_search,omitempty" xml:"out_wheel_search,omitempty"`
	// example:
	//
	// 60b412-cc05-4d10-b570-
	QueryRecordId *string `json:"query_record_id,omitempty" xml:"query_record_id,omitempty"`
	// This parameter is required.
	SearchJourneysShrink *string `json:"search_journeys,omitempty" xml:"search_journeys,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	SearchMode                *int32  `json:"search_mode,omitempty" xml:"search_mode,omitempty"`
	SearchPassengerListShrink *string `json:"search_passenger_list,omitempty" xml:"search_passenger_list,omitempty"`
	// example:
	//
	// JIANHANG
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
	// example:
	//
	// 9960b412-cc05-4d10-b570-93372d816807
	Token *string `json:"token,omitempty" xml:"token,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s IntlFlightListingSearchShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchShrinkRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchShrinkRequest) SetBtripUserId(v string) *IntlFlightListingSearchShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetBuyerName(v string) *IntlFlightListingSearchShrinkRequest {
	s.BuyerName = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetCabinType(v int32) *IntlFlightListingSearchShrinkRequest {
	s.CabinType = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetDirectOnly(v bool) *IntlFlightListingSearchShrinkRequest {
	s.DirectOnly = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetIsvName(v string) *IntlFlightListingSearchShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetLanguage(v string) *IntlFlightListingSearchShrinkRequest {
	s.Language = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetNeedShareFlight(v bool) *IntlFlightListingSearchShrinkRequest {
	s.NeedShareFlight = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetOutWheelSearch(v bool) *IntlFlightListingSearchShrinkRequest {
	s.OutWheelSearch = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetQueryRecordId(v string) *IntlFlightListingSearchShrinkRequest {
	s.QueryRecordId = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetSearchJourneysShrink(v string) *IntlFlightListingSearchShrinkRequest {
	s.SearchJourneysShrink = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetSearchMode(v int32) *IntlFlightListingSearchShrinkRequest {
	s.SearchMode = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetSearchPassengerListShrink(v string) *IntlFlightListingSearchShrinkRequest {
	s.SearchPassengerListShrink = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetSupplierCode(v string) *IntlFlightListingSearchShrinkRequest {
	s.SupplierCode = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetToken(v string) *IntlFlightListingSearchShrinkRequest {
	s.Token = &v
	return s
}

func (s *IntlFlightListingSearchShrinkRequest) SetTripType(v int32) *IntlFlightListingSearchShrinkRequest {
	s.TripType = &v
	return s
}

type IntlFlightListingSearchResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                    `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                    `json:"message,omitempty" xml:"message,omitempty"`
	Module  *IntlFlightListingSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210bc4b116835992457938931db4de
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s IntlFlightListingSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBody) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBody) SetCode(v string) *IntlFlightListingSearchResponseBody {
	s.Code = &v
	return s
}

func (s *IntlFlightListingSearchResponseBody) SetMessage(v string) *IntlFlightListingSearchResponseBody {
	s.Message = &v
	return s
}

func (s *IntlFlightListingSearchResponseBody) SetModule(v *IntlFlightListingSearchResponseBodyModule) *IntlFlightListingSearchResponseBody {
	s.Module = v
	return s
}

func (s *IntlFlightListingSearchResponseBody) SetRequestId(v string) *IntlFlightListingSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *IntlFlightListingSearchResponseBody) SetSuccess(v bool) *IntlFlightListingSearchResponseBody {
	s.Success = &v
	return s
}

func (s *IntlFlightListingSearchResponseBody) SetTraceId(v string) *IntlFlightListingSearchResponseBody {
	s.TraceId = &v
	return s
}

type IntlFlightListingSearchResponseBodyModule struct {
	FlightItemList []*IntlFlightListingSearchResponseBodyModuleFlightItemList `json:"flight_item_list,omitempty" xml:"flight_item_list,omitempty" type:"Repeated"`
	// example:
	//
	// false
	NeedContinue *bool `json:"need_continue,omitempty" xml:"need_continue,omitempty"`
	// example:
	//
	// ASDFASDFASDFASDFASDF
	QueryRecordId *string `json:"query_record_id,omitempty" xml:"query_record_id,omitempty"`
	// example:
	//
	// ee229f2d-1835-4199-bfe6-fd14afe8645e
	Token *string `json:"token,omitempty" xml:"token,omitempty"`
}

func (s IntlFlightListingSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModule) SetFlightItemList(v []*IntlFlightListingSearchResponseBodyModuleFlightItemList) *IntlFlightListingSearchResponseBodyModule {
	s.FlightItemList = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModule) SetNeedContinue(v bool) *IntlFlightListingSearchResponseBodyModule {
	s.NeedContinue = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModule) SetQueryRecordId(v string) *IntlFlightListingSearchResponseBodyModule {
	s.QueryRecordId = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModule) SetToken(v string) *IntlFlightListingSearchResponseBodyModule {
	s.Token = &v
	return s
}

type IntlFlightListingSearchResponseBodyModuleFlightItemList struct {
	BestPriceItem      *IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem        `json:"best_price_item,omitempty" xml:"best_price_item,omitempty" type:"Struct"`
	FlightJourneyInfos []*IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos `json:"flight_journey_infos,omitempty" xml:"flight_journey_infos,omitempty" type:"Repeated"`
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemList) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemList) SetBestPriceItem(v *IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem) *IntlFlightListingSearchResponseBodyModuleFlightItemList {
	s.BestPriceItem = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemList) SetFlightJourneyInfos(v []*IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) *IntlFlightListingSearchResponseBodyModuleFlightItemList {
	s.FlightJourneyInfos = v
	return s
}

type IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem struct {
	AgreementPriceCodes []*string                                                         `json:"agreement_price_codes,omitempty" xml:"agreement_price_codes,omitempty" type:"Repeated"`
	ItemType            *string                                                           `json:"item_type,omitempty" xml:"item_type,omitempty"`
	ShoppingItemMap     map[string]*ModuleFlightItemListBestPriceItemShoppingItemMapValue `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem) SetAgreementPriceCodes(v []*string) *IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem {
	s.AgreementPriceCodes = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem) SetItemType(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem {
	s.ItemType = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem) SetShoppingItemMap(v map[string]*ModuleFlightItemListBestPriceItemShoppingItemMapValue) *IntlFlightListingSearchResponseBodyModuleFlightItemListBestPriceItem {
	s.ShoppingItemMap = v
	return s
}

type IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos struct {
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 09:45
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 60
	Duration           *int32                                                                                         `json:"duration,omitempty" xml:"duration,omitempty"`
	FlightSegmentInfos []*IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos `json:"flight_segment_infos,omitempty" xml:"flight_segment_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	TransferTime *int32 `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) SetArrCityCode(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) SetArrCityName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.ArrCityName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) SetArrTime(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.ArrTime = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) SetDepCityCode(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) SetDepCityName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.DepCityName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) SetDepTime(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.DepTime = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) SetDuration(v int32) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.Duration = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) SetFlightSegmentInfos(v []*IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.FlightSegmentInfos = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) SetJourneyIndex(v int32) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.JourneyIndex = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos) SetTransferTime(v int32) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfos {
	s.TransferTime = &v
	return s
}

type IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos struct {
	AirlineInfo    *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// BJS
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 09:45
	ArrTime        *string                                                                                                    `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	BaggageDesc    *string                                                                                                    `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
	DepAirportInfo *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// HGH
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// duration
	//
	// example:
	//
	// 140
	Duration *int32 `json:"duration,omitempty" xml:"duration,omitempty"`
	// example:
	//
	// HO1116
	FlightNo        *string                                                                                                     `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightShareInfo *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo `json:"flight_share_info,omitempty" xml:"flight_share_info,omitempty" type:"Struct"`
	FlightSize      *string                                                                                                     `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	FlightStopInfo  *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo  `json:"flight_stop_info,omitempty" xml:"flight_stop_info,omitempty" type:"Struct"`
	// example:
	//
	// 320
	FlightType   *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty" xml:"manufacturer,omitempty"`
	MealDesc     *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	// example:
	//
	// 100099
	Miles *int32 `json:"miles,omitempty" xml:"miles,omitempty"`
	// example:
	//
	// 80.20%
	OnTimeRate *string `json:"on_time_rate,omitempty" xml:"on_time_rate,omitempty"`
	// example:
	//
	// 0
	OneMore     *int32  `json:"one_more,omitempty" xml:"one_more,omitempty"`
	OneMoreShow *string `json:"one_more_show,omitempty" xml:"one_more_show,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	// example:
	//
	// KN6728HGHPKX0725
	SegmentKey *string `json:"segment_key,omitempty" xml:"segment_key,omitempty"`
	// example:
	//
	// false
	Share           *bool   `json:"share,omitempty" xml:"share,omitempty"`
	ShortFlightSize *string `json:"short_flight_size,omitempty" xml:"short_flight_size,omitempty"`
	// example:
	//
	// false
	Stop         *bool   `json:"stop,omitempty" xml:"stop,omitempty"`
	TotalTime    *string `json:"total_time,omitempty" xml:"total_time,omitempty"`
	TransferTime *string `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
	// example:
	//
	// 150
	TransferTimeNumber *int32 `json:"transfer_time_number,omitempty" xml:"transfer_time_number,omitempty"`
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetAirlineInfo(v *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.AirlineInfo = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetArrAirportInfo(v *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ArrAirportInfo = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetArrCityCode(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetArrCityName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ArrCityName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetArrTime(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ArrTime = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetBaggageDesc(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.BaggageDesc = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetDepAirportInfo(v *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.DepAirportInfo = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetDepCityCode(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetDepCityName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.DepCityName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetDepTime(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.DepTime = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetDuration(v int32) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.Duration = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetFlightNo(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.FlightNo = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetFlightShareInfo(v *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.FlightShareInfo = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetFlightSize(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.FlightSize = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetFlightStopInfo(v *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.FlightStopInfo = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetFlightType(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.FlightType = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetManufacturer(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.Manufacturer = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetMealDesc(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.MealDesc = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetMiles(v int32) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.Miles = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetOnTimeRate(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.OnTimeRate = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetOneMore(v int32) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.OneMore = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetOneMoreShow(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.OneMoreShow = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetSegmentIndex(v int32) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.SegmentIndex = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetSegmentKey(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.SegmentKey = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetShare(v bool) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.Share = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetShortFlightSize(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.ShortFlightSize = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetStop(v bool) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.Stop = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetTotalTime(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.TotalTime = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetTransferTime(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.TransferTime = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos) SetTransferTimeNumber(v int32) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfos {
	s.TransferTimeNumber = &v
	return s
}

type IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// 9H
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB15EXDFHY1gK0jSZTEXXXDQVXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineChineseName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineChineseShortName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineCode(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineIcon(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetCheapFlight(v bool) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.CheapFlight = &v
	return s
}

type IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo struct {
	// example:
	//
	// PKX
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// --
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportCode(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportShortName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetTerminal(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.Terminal = &v
	return s
}

type IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportCode(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportShortName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetTerminal(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.Terminal = &v
	return s
}

type IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo struct {
	OperatingAirlineInfo *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo `json:"operating_airline_info,omitempty" xml:"operating_airline_info,omitempty" type:"Struct"`
	// example:
	//
	// CX601
	OperatingFlightNo *string `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo) SetOperatingAirlineInfo(v *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo {
	s.OperatingAirlineInfo = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo) SetOperatingFlightNo(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfo {
	s.OperatingFlightNo = &v
	return s
}

type IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// DR
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB1gSXBFUT1gK0jSZFhXXaAtVXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineChineseName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineChineseShortName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineCode(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineIcon(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetCheapFlight(v bool) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.CheapFlight = &v
	return s
}

type IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo struct {
	// example:
	//
	// HGH
	StopAirport     *string `json:"stop_airport,omitempty" xml:"stop_airport,omitempty"`
	StopAirportName *string `json:"stop_airport_name,omitempty" xml:"stop_airport_name,omitempty"`
	// example:
	//
	// T3
	StopArrTerm *string `json:"stop_arr_term,omitempty" xml:"stop_arr_term,omitempty"`
	// example:
	//
	// BJS
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// HGH
	StopCityCode *string `json:"stop_city_code,omitempty" xml:"stop_city_code,omitempty"`
	// example:
	//
	// HGH
	StopCityName  *string   `json:"stop_city_name,omitempty" xml:"stop_city_name,omitempty"`
	StopCityNames []*string `json:"stop_city_names,omitempty" xml:"stop_city_names,omitempty" type:"Repeated"`
	// example:
	//
	// T4
	StopDepTerm *string `json:"stop_dep_term,omitempty" xml:"stop_dep_term,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	StopTime    *string `json:"stop_time,omitempty" xml:"stop_time,omitempty"`
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopAirport(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopAirport = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopAirportName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopAirportName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopArrTerm(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopArrTerm = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopArrTime(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopArrTime = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityCode(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityCode = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityName(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityName = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityNames(v []*string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityNames = v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopDepTerm(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopDepTerm = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopDepTime(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopDepTime = &v
	return s
}

func (s *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopTime(v string) *IntlFlightListingSearchResponseBodyModuleFlightItemListFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopTime = &v
	return s
}

type IntlFlightListingSearchResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IntlFlightListingSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IntlFlightListingSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightListingSearchResponse) GoString() string {
	return s.String()
}

func (s *IntlFlightListingSearchResponse) SetHeaders(v map[string]*string) *IntlFlightListingSearchResponse {
	s.Headers = v
	return s
}

func (s *IntlFlightListingSearchResponse) SetStatusCode(v int32) *IntlFlightListingSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *IntlFlightListingSearchResponse) SetBody(v *IntlFlightListingSearchResponseBody) *IntlFlightListingSearchResponse {
	s.Body = v
	return s
}

type IntlFlightOrderCancelHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s IntlFlightOrderCancelHeaders) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderCancelHeaders) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderCancelHeaders) SetCommonHeaders(v map[string]*string) *IntlFlightOrderCancelHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IntlFlightOrderCancelHeaders) SetXAcsBtripCorpToken(v string) *IntlFlightOrderCancelHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type IntlFlightOrderCancelRequest struct {
	// example:
	//
	// TRAVEL
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	Memo    *string `json:"memo,omitempty" xml:"memo,omitempty"`
	// example:
	//
	// 1012000000000000
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// F11374007131319304192
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s IntlFlightOrderCancelRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderCancelRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderCancelRequest) SetIsvName(v string) *IntlFlightOrderCancelRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightOrderCancelRequest) SetMemo(v string) *IntlFlightOrderCancelRequest {
	s.Memo = &v
	return s
}

func (s *IntlFlightOrderCancelRequest) SetOrderId(v string) *IntlFlightOrderCancelRequest {
	s.OrderId = &v
	return s
}

func (s *IntlFlightOrderCancelRequest) SetOutOrderId(v string) *IntlFlightOrderCancelRequest {
	s.OutOrderId = &v
	return s
}

type IntlFlightOrderCancelResponseBody struct {
	Module *IntlFlightOrderCancelResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A3F8DCAB-8301-5770-BD9F-71B0BF9E1A6E
	RequestId *string `json:"request_id,omitempty" xml:"request_id,omitempty"`
	// example:
	//
	// 0
	ResultCode *string `json:"result_code,omitempty" xml:"result_code,omitempty"`
	ResultMsg  *string `json:"result_msg,omitempty" xml:"result_msg,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"trace_id,omitempty" xml:"trace_id,omitempty"`
}

func (s IntlFlightOrderCancelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderCancelResponseBody) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderCancelResponseBody) SetModule(v *IntlFlightOrderCancelResponseBodyModule) *IntlFlightOrderCancelResponseBody {
	s.Module = v
	return s
}

func (s *IntlFlightOrderCancelResponseBody) SetRequestId(v string) *IntlFlightOrderCancelResponseBody {
	s.RequestId = &v
	return s
}

func (s *IntlFlightOrderCancelResponseBody) SetResultCode(v string) *IntlFlightOrderCancelResponseBody {
	s.ResultCode = &v
	return s
}

func (s *IntlFlightOrderCancelResponseBody) SetResultMsg(v string) *IntlFlightOrderCancelResponseBody {
	s.ResultMsg = &v
	return s
}

func (s *IntlFlightOrderCancelResponseBody) SetSuccess(v bool) *IntlFlightOrderCancelResponseBody {
	s.Success = &v
	return s
}

func (s *IntlFlightOrderCancelResponseBody) SetTraceId(v string) *IntlFlightOrderCancelResponseBody {
	s.TraceId = &v
	return s
}

type IntlFlightOrderCancelResponseBodyModule struct {
	// example:
	//
	// 2023-08-10 17:45:32
	CancelTime *string `json:"cancel_time,omitempty" xml:"cancel_time,omitempty"`
}

func (s IntlFlightOrderCancelResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderCancelResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderCancelResponseBodyModule) SetCancelTime(v string) *IntlFlightOrderCancelResponseBodyModule {
	s.CancelTime = &v
	return s
}

type IntlFlightOrderCancelResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IntlFlightOrderCancelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IntlFlightOrderCancelResponse) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderCancelResponse) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderCancelResponse) SetHeaders(v map[string]*string) *IntlFlightOrderCancelResponse {
	s.Headers = v
	return s
}

func (s *IntlFlightOrderCancelResponse) SetStatusCode(v int32) *IntlFlightOrderCancelResponse {
	s.StatusCode = &v
	return s
}

func (s *IntlFlightOrderCancelResponse) SetBody(v *IntlFlightOrderCancelResponseBody) *IntlFlightOrderCancelResponse {
	s.Body = v
	return s
}

type IntlFlightOrderDetailHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s IntlFlightOrderDetailHeaders) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailHeaders) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailHeaders) SetCommonHeaders(v map[string]*string) *IntlFlightOrderDetailHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IntlFlightOrderDetailHeaders) SetXAcsBtripCorpToken(v string) *IntlFlightOrderDetailHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type IntlFlightOrderDetailRequest struct {
	// example:
	//
	// TRAVEL
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1012000000000000
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// F11374007131319304192
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s IntlFlightOrderDetailRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailRequest) SetIsvName(v string) *IntlFlightOrderDetailRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightOrderDetailRequest) SetOrderId(v string) *IntlFlightOrderDetailRequest {
	s.OrderId = &v
	return s
}

func (s *IntlFlightOrderDetailRequest) SetOutOrderId(v string) *IntlFlightOrderDetailRequest {
	s.OutOrderId = &v
	return s
}

type IntlFlightOrderDetailResponseBody struct {
	Module *IntlFlightOrderDetailResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A3F8DCAB-8301-5770-BD9F-71B0BF9E1A6E
	RequestId *string `json:"request_id,omitempty" xml:"request_id,omitempty"`
	// example:
	//
	// 0
	ResultCode *string `json:"result_code,omitempty" xml:"result_code,omitempty"`
	ResultMsg  *string `json:"result_msg,omitempty" xml:"result_msg,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"trace_id,omitempty" xml:"trace_id,omitempty"`
}

func (s IntlFlightOrderDetailResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBody) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBody) SetModule(v *IntlFlightOrderDetailResponseBodyModule) *IntlFlightOrderDetailResponseBody {
	s.Module = v
	return s
}

func (s *IntlFlightOrderDetailResponseBody) SetRequestId(v string) *IntlFlightOrderDetailResponseBody {
	s.RequestId = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBody) SetResultCode(v string) *IntlFlightOrderDetailResponseBody {
	s.ResultCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBody) SetResultMsg(v string) *IntlFlightOrderDetailResponseBody {
	s.ResultMsg = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBody) SetSuccess(v bool) *IntlFlightOrderDetailResponseBody {
	s.Success = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBody) SetTraceId(v string) *IntlFlightOrderDetailResponseBody {
	s.TraceId = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModule struct {
	// example:
	//
	// 122928120369012
	BookUserId *string `json:"book_user_id,omitempty" xml:"book_user_id,omitempty"`
	// example:
	//
	// ZHANG/SAN
	BookUserName *string `json:"book_user_name,omitempty" xml:"book_user_name,omitempty"`
	CloseReason  *string `json:"close_reason,omitempty" xml:"close_reason,omitempty"`
	// example:
	//
	// 1709708165000
	CloseTime *int64 `json:"close_time,omitempty" xml:"close_time,omitempty"`
	// example:
	//
	// 2024-03-06 14:56:05
	CloseTimeStr *string                                             `json:"close_time_str,omitempty" xml:"close_time_str,omitempty"`
	ContactInfo  *IntlFlightOrderDetailResponseBodyModuleContactInfo `json:"contact_info,omitempty" xml:"contact_info,omitempty" type:"Struct"`
	// example:
	//
	// 1709708165000
	CreateTime *int64 `json:"create_time,omitempty" xml:"create_time,omitempty"`
	// example:
	//
	// 2024-03-06 14:56:05
	CreateTimeStr *string                                               `json:"create_time_str,omitempty" xml:"create_time_str,omitempty"`
	ExtInfoMap    map[string]*string                                    `json:"ext_info_map,omitempty" xml:"ext_info_map,omitempty"`
	JourneyList   []*IntlFlightOrderDetailResponseBodyModuleJourneyList `json:"journey_list,omitempty" xml:"journey_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1012000000000000
	OrderId       *int64                                                  `json:"order_id,omitempty" xml:"order_id,omitempty"`
	OrderItemList []*IntlFlightOrderDetailResponseBodyModuleOrderItemList `json:"order_item_list,omitempty" xml:"order_item_list,omitempty" type:"Repeated"`
	// example:
	//
	// F11374007131319304192
	OutOrderId              *string                                                           `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerItemDetailList []*IntlFlightOrderDetailResponseBodyModulePassengerItemDetailList `json:"passenger_item_detail_list,omitempty" xml:"passenger_item_detail_list,omitempty" type:"Repeated"`
	PassengerList           []*IntlFlightOrderDetailResponseBodyModulePassengerList           `json:"passenger_list,omitempty" xml:"passenger_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1709711779000
	PayExpireTime *int64 `json:"pay_expire_time,omitempty" xml:"pay_expire_time,omitempty"`
	// example:
	//
	// 2024-03-06 15:56:19
	PayExpireTimeStr *string `json:"pay_expire_time_str,omitempty" xml:"pay_expire_time_str,omitempty"`
	// example:
	//
	// 1
	PayStatus *int32 `json:"pay_status,omitempty" xml:"pay_status,omitempty"`
	// example:
	//
	// 2024-03-06 15:00:35
	PayTime *int64 `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	// example:
	//
	// 1709708435000
	PayTimeStr *string `json:"pay_time_str,omitempty" xml:"pay_time_str,omitempty"`
	// example:
	//
	// 8
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 4
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 1709711779000
	SucceedTime *int64 `json:"succeed_time,omitempty" xml:"succeed_time,omitempty"`
	// example:
	//
	// 2024-03-06 15:56:19
	SucceedTimeStr *string `json:"succeed_time_str,omitempty" xml:"succeed_time_str,omitempty"`
	// example:
	//
	// 21300
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
	// example:
	//
	// 0
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetBookUserId(v string) *IntlFlightOrderDetailResponseBodyModule {
	s.BookUserId = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetBookUserName(v string) *IntlFlightOrderDetailResponseBodyModule {
	s.BookUserName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetCloseReason(v string) *IntlFlightOrderDetailResponseBodyModule {
	s.CloseReason = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetCloseTime(v int64) *IntlFlightOrderDetailResponseBodyModule {
	s.CloseTime = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetCloseTimeStr(v string) *IntlFlightOrderDetailResponseBodyModule {
	s.CloseTimeStr = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetContactInfo(v *IntlFlightOrderDetailResponseBodyModuleContactInfo) *IntlFlightOrderDetailResponseBodyModule {
	s.ContactInfo = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetCreateTime(v int64) *IntlFlightOrderDetailResponseBodyModule {
	s.CreateTime = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetCreateTimeStr(v string) *IntlFlightOrderDetailResponseBodyModule {
	s.CreateTimeStr = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetExtInfoMap(v map[string]*string) *IntlFlightOrderDetailResponseBodyModule {
	s.ExtInfoMap = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetJourneyList(v []*IntlFlightOrderDetailResponseBodyModuleJourneyList) *IntlFlightOrderDetailResponseBodyModule {
	s.JourneyList = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetOrderId(v int64) *IntlFlightOrderDetailResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetOrderItemList(v []*IntlFlightOrderDetailResponseBodyModuleOrderItemList) *IntlFlightOrderDetailResponseBodyModule {
	s.OrderItemList = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetOutOrderId(v string) *IntlFlightOrderDetailResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetPassengerItemDetailList(v []*IntlFlightOrderDetailResponseBodyModulePassengerItemDetailList) *IntlFlightOrderDetailResponseBodyModule {
	s.PassengerItemDetailList = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetPassengerList(v []*IntlFlightOrderDetailResponseBodyModulePassengerList) *IntlFlightOrderDetailResponseBodyModule {
	s.PassengerList = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetPayExpireTime(v int64) *IntlFlightOrderDetailResponseBodyModule {
	s.PayExpireTime = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetPayExpireTimeStr(v string) *IntlFlightOrderDetailResponseBodyModule {
	s.PayExpireTimeStr = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetPayStatus(v int32) *IntlFlightOrderDetailResponseBodyModule {
	s.PayStatus = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetPayTime(v int64) *IntlFlightOrderDetailResponseBodyModule {
	s.PayTime = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetPayTimeStr(v string) *IntlFlightOrderDetailResponseBodyModule {
	s.PayTimeStr = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetPayType(v int32) *IntlFlightOrderDetailResponseBodyModule {
	s.PayType = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetStatus(v int32) *IntlFlightOrderDetailResponseBodyModule {
	s.Status = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetSucceedTime(v int64) *IntlFlightOrderDetailResponseBodyModule {
	s.SucceedTime = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetSucceedTimeStr(v string) *IntlFlightOrderDetailResponseBodyModule {
	s.SucceedTimeStr = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetTotalPrice(v int64) *IntlFlightOrderDetailResponseBodyModule {
	s.TotalPrice = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModule) SetTripType(v int32) *IntlFlightOrderDetailResponseBodyModule {
	s.TripType = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleContactInfo struct {
	// example:
	//
	// test@cainiao.com
	ContactEmail *string `json:"contact_email,omitempty" xml:"contact_email,omitempty"`
	ContactName  *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	// example:
	//
	// 185006022345
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	// example:
	//
	// false
	SendMsgToPassenger *bool `json:"send_msg_to_passenger,omitempty" xml:"send_msg_to_passenger,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleContactInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleContactInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleContactInfo) SetContactEmail(v string) *IntlFlightOrderDetailResponseBodyModuleContactInfo {
	s.ContactEmail = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleContactInfo) SetContactName(v string) *IntlFlightOrderDetailResponseBodyModuleContactInfo {
	s.ContactName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleContactInfo) SetContactPhone(v string) *IntlFlightOrderDetailResponseBodyModuleContactInfo {
	s.ContactPhone = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleContactInfo) SetSendMsgToPassenger(v bool) *IntlFlightOrderDetailResponseBodyModuleContactInfo {
	s.SendMsgToPassenger = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleJourneyList struct {
	// example:
	//
	// HKG
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// SHA
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2024-07-06
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// example:
	//
	// 0
	JourneyIndex *int32                                                           `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	SegmentList  []*IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList `json:"segment_list,omitempty" xml:"segment_list,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	TransferCount *int32 `json:"transfer_count,omitempty" xml:"transfer_count,omitempty"`
	// example:
	//
	// 0
	TransferTime *int32 `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyList) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyList) SetArrCityCode(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyList {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyList) SetArrCityName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyList {
	s.ArrCityName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyList) SetDepCityCode(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyList {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyList) SetDepCityName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyList {
	s.DepCityName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyList) SetDepDate(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyList {
	s.DepDate = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyList) SetJourneyIndex(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyList {
	s.JourneyIndex = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyList) SetSegmentList(v []*IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) *IntlFlightOrderDetailResponseBodyModuleJourneyList {
	s.SegmentList = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyList) SetTransferCount(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyList {
	s.TransferCount = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyList) SetTransferTime(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyList {
	s.TransferTime = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList struct {
	// example:
	//
	// HKG
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrAirportName *string `json:"arr_airport_name,omitempty" xml:"arr_airport_name,omitempty"`
	// example:
	//
	// HKG
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// T1
	ArrTerminal *string `json:"arr_terminal,omitempty" xml:"arr_terminal,omitempty"`
	// example:
	//
	// 2024-07-06 14:05:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// false
	CodeShare *bool `json:"code_share,omitempty" xml:"code_share,omitempty"`
	// example:
	//
	// PVG
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepAirportName *string `json:"dep_airport_name,omitempty" xml:"dep_airport_name,omitempty"`
	// example:
	//
	// SHA
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// T1
	DepTerminal *string `json:"dep_terminal,omitempty" xml:"dep_terminal,omitempty"`
	// example:
	//
	// 2024-07-06 11:10:00
	DepTime         *string                                                                       `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	FlightOtherInfo *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo `json:"flight_other_info,omitempty" xml:"flight_other_info,omitempty" type:"Struct"`
	// example:
	//
	// 0
	JourneyIndex      *int32                                                                          `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	LuggageDirectInfo *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListLuggageDirectInfo `json:"luggage_direct_info,omitempty" xml:"luggage_direct_info,omitempty" type:"Struct"`
	// example:
	//
	// MU
	MarketingAirline     *string                                                                            `json:"marketing_airline,omitempty" xml:"marketing_airline,omitempty"`
	MarketingAirlineInfo *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo `json:"marketing_airline_info,omitempty" xml:"marketing_airline_info,omitempty" type:"Struct"`
	// example:
	//
	// MU507
	MarketingFlightNo *string `json:"marketing_flight_no,omitempty" xml:"marketing_flight_no,omitempty"`
	// example:
	//
	// MU
	OperatingAirline     *string                                                                            `json:"operating_airline,omitempty" xml:"operating_airline,omitempty"`
	OperatingAirlineInfo *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo `json:"operating_airline_info,omitempty" xml:"operating_airline_info,omitempty" type:"Struct"`
	// example:
	//
	// MU507
	OperatingFlightNo *string `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	// example:
	//
	// MU507PVGHKG0706
	SegmentKey        *string                                                                         `json:"segment_key,omitempty" xml:"segment_key,omitempty"`
	SegmentVisaRemark *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark `json:"segment_visa_remark,omitempty" xml:"segment_visa_remark,omitempty" type:"Struct"`
	StopCityList      []*IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList    `json:"stop_city_list,omitempty" xml:"stop_city_list,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	StopQuantity *int32 `json:"stop_quantity,omitempty" xml:"stop_quantity,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetArrAirportCode(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.ArrAirportCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetArrAirportName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.ArrAirportName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetArrCityCode(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetArrCityName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.ArrCityName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetArrTerminal(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.ArrTerminal = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetArrTime(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.ArrTime = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetCodeShare(v bool) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.CodeShare = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetDepAirportCode(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.DepAirportCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetDepAirportName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.DepAirportName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetDepCityCode(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetDepCityName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.DepCityName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetDepTerminal(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.DepTerminal = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetDepTime(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.DepTime = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetFlightOtherInfo(v *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.FlightOtherInfo = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetJourneyIndex(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.JourneyIndex = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetLuggageDirectInfo(v *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListLuggageDirectInfo) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.LuggageDirectInfo = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetMarketingAirline(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.MarketingAirline = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetMarketingAirlineInfo(v *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.MarketingAirlineInfo = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetMarketingFlightNo(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.MarketingFlightNo = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetOperatingAirline(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.OperatingAirline = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetOperatingAirlineInfo(v *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.OperatingAirlineInfo = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetOperatingFlightNo(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.OperatingFlightNo = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetSegmentIndex(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.SegmentIndex = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetSegmentKey(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.SegmentKey = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetSegmentVisaRemark(v *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.SegmentVisaRemark = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetStopCityList(v []*IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.StopCityList = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList) SetStopQuantity(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentList {
	s.StopQuantity = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo struct {
	// example:
	//
	// 100
	AircraftAge *string `json:"aircraft_age,omitempty" xml:"aircraft_age,omitempty"`
	// example:
	//
	// 10
	AvgDelayTime *string `json:"avg_delay_time,omitempty" xml:"avg_delay_time,omitempty"`
	// example:
	//
	// 32Q
	EquipType *string `json:"equip_type,omitempty" xml:"equip_type,omitempty"`
	// example:
	//
	// 20
	FlightCancelRate *string `json:"flight_cancel_rate,omitempty" xml:"flight_cancel_rate,omitempty"`
	// example:
	//
	// 195
	FlightDistance *int32 `json:"flight_distance,omitempty" xml:"flight_distance,omitempty"`
	// example:
	//
	// 165
	FlightDuration *int32  `json:"flight_duration,omitempty" xml:"flight_duration,omitempty"`
	FlightSize     *string `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	// example:
	//
	// 70
	JetBridgeRate *string `json:"jet_bridge_rate,omitempty" xml:"jet_bridge_rate,omitempty"`
	Manufacturer  *string `json:"manufacturer,omitempty" xml:"manufacturer,omitempty"`
	// example:
	//
	// 0
	Meal     *int32  `json:"meal,omitempty" xml:"meal,omitempty"`
	MealDesc *string `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	// example:
	//
	// 80
	OnTimeRate *string `json:"on_time_rate,omitempty" xml:"on_time_rate,omitempty"`
	// example:
	//
	// true
	Wifi *bool `json:"wifi,omitempty" xml:"wifi,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetAircraftAge(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.AircraftAge = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetAvgDelayTime(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.AvgDelayTime = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetEquipType(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.EquipType = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetFlightCancelRate(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.FlightCancelRate = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetFlightDistance(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.FlightDistance = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetFlightDuration(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.FlightDuration = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetFlightSize(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.FlightSize = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetJetBridgeRate(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.JetBridgeRate = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetManufacturer(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.Manufacturer = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetMeal(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.Meal = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetMealDesc(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.MealDesc = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetOnTimeRate(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.OnTimeRate = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo) SetWifi(v bool) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListFlightOtherInfo {
	s.Wifi = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListLuggageDirectInfo struct {
	// example:
	//
	// 0
	DepCityLuggageDirect *int32 `json:"dep_city_luggage_direct,omitempty" xml:"dep_city_luggage_direct,omitempty"`
	// example:
	//
	// 0
	StopCityLuggageDirect *int32 `json:"stop_city_luggage_direct,omitempty" xml:"stop_city_luggage_direct,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListLuggageDirectInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListLuggageDirectInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListLuggageDirectInfo) SetDepCityLuggageDirect(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListLuggageDirectInfo {
	s.DepCityLuggageDirect = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListLuggageDirectInfo) SetStopCityLuggageDirect(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListLuggageDirectInfo {
	s.StopCityLuggageDirect = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo struct {
	// example:
	//
	// MU
	AirlineCode  *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName  *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	AllianceName *string `json:"alliance_name,omitempty" xml:"alliance_name,omitempty"`
	// example:
	//
	// false
	CheapAirline *bool `json:"cheap_airline,omitempty" xml:"cheap_airline,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB15EXDFHY1gK0jSZTEXXXDQVXa-450-450.png
	IconUrl *string `json:"icon_url,omitempty" xml:"icon_url,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB15EXDFHY1gK0jSZTEXXXDQVXa-450-450.png
	LogoUrl   *string `json:"logo_url,omitempty" xml:"logo_url,omitempty"`
	ShortName *string `json:"short_name,omitempty" xml:"short_name,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo) SetAirlineCode(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo) SetAirlineName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo {
	s.AirlineName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo) SetAllianceName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo {
	s.AllianceName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo) SetCheapAirline(v bool) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo {
	s.CheapAirline = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo) SetIconUrl(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo {
	s.IconUrl = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo) SetLogoUrl(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo {
	s.LogoUrl = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo) SetShortName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListMarketingAirlineInfo {
	s.ShortName = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo struct {
	// example:
	//
	// MU
	AirlineCode  *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName  *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	AllianceName *string `json:"alliance_name,omitempty" xml:"alliance_name,omitempty"`
	// example:
	//
	// false
	CheapAirline *bool `json:"cheap_airline,omitempty" xml:"cheap_airline,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB15EXDFHY1gK0jSZTEXXXDQVXa-450-450.png
	IconUrl *string `json:"icon_url,omitempty" xml:"icon_url,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB15EXDFHY1gK0jSZTEXXXDQVXa-450-450.png
	LogoUrl   *string `json:"logo_url,omitempty" xml:"logo_url,omitempty"`
	ShortName *string `json:"short_name,omitempty" xml:"short_name,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo) SetAirlineCode(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo) SetAirlineName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo {
	s.AirlineName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo) SetAllianceName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo {
	s.AllianceName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo) SetCheapAirline(v bool) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo {
	s.CheapAirline = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo) SetIconUrl(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo {
	s.IconUrl = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo) SetLogoUrl(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo {
	s.LogoUrl = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo) SetShortName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListOperatingAirlineInfo {
	s.ShortName = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark struct {
	DepCityVisaRemark *string `json:"dep_city_visa_remark,omitempty" xml:"dep_city_visa_remark,omitempty"`
	// example:
	//
	// 0
	DepCityVisaType     *int32    `json:"dep_city_visa_type,omitempty" xml:"dep_city_visa_type,omitempty"`
	StopCityVisaRemarks []*string `json:"stop_city_visa_remarks,omitempty" xml:"stop_city_visa_remarks,omitempty" type:"Repeated"`
	StopCityVisaTypes   []*int32  `json:"stop_city_visa_types,omitempty" xml:"stop_city_visa_types,omitempty" type:"Repeated"`
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark) SetDepCityVisaRemark(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark {
	s.DepCityVisaRemark = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark) SetDepCityVisaType(v int32) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark {
	s.DepCityVisaType = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark) SetStopCityVisaRemarks(v []*string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark {
	s.StopCityVisaRemarks = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark) SetStopCityVisaTypes(v []*int32) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListSegmentVisaRemark {
	s.StopCityVisaTypes = v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList struct {
	// example:
	//
	// PVG
	StopAirport     *string `json:"stop_airport,omitempty" xml:"stop_airport,omitempty"`
	StopAirportName *string `json:"stop_airport_name,omitempty" xml:"stop_airport_name,omitempty"`
	// example:
	//
	// T1
	StopArrTerminal *string `json:"stop_arr_terminal,omitempty" xml:"stop_arr_terminal,omitempty"`
	// example:
	//
	// 2024-07-06 11:10:00
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// SHA
	StopCityCode *string `json:"stop_city_code,omitempty" xml:"stop_city_code,omitempty"`
	StopCityName *string `json:"stop_city_name,omitempty" xml:"stop_city_name,omitempty"`
	// example:
	//
	// T1
	StopDepTerminal *string `json:"stop_dep_terminal,omitempty" xml:"stop_dep_terminal,omitempty"`
	// example:
	//
	// 2024-07-06 11:10:00
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) SetStopAirport(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList {
	s.StopAirport = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) SetStopAirportName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList {
	s.StopAirportName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) SetStopArrTerminal(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList {
	s.StopArrTerminal = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) SetStopArrTime(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList {
	s.StopArrTime = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) SetStopCityCode(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList {
	s.StopCityCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) SetStopCityName(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList {
	s.StopCityName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) SetStopDepTerminal(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList {
	s.StopDepTerminal = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList) SetStopDepTime(v string) *IntlFlightOrderDetailResponseBodyModuleJourneyListSegmentListStopCityList {
	s.StopDepTime = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleOrderItemList struct {
	BaggageRule        *IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule          `json:"baggage_rule,omitempty" xml:"baggage_rule,omitempty" type:"Struct"`
	PassengerPriceList []*IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList `json:"passenger_price_list,omitempty" xml:"passenger_price_list,omitempty" type:"Repeated"`
	RefundChangeRule   *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule     `json:"refund_change_rule,omitempty" xml:"refund_change_rule,omitempty" type:"Struct"`
	SegmentKeyList     []*string                                                                 `json:"segment_key_list,omitempty" xml:"segment_key_list,omitempty" type:"Repeated"`
}

func (s IntlFlightOrderDetailResponseBodyModuleOrderItemList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleOrderItemList) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemList) SetBaggageRule(v *IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule) *IntlFlightOrderDetailResponseBodyModuleOrderItemList {
	s.BaggageRule = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemList) SetPassengerPriceList(v []*IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) *IntlFlightOrderDetailResponseBodyModuleOrderItemList {
	s.PassengerPriceList = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemList) SetRefundChangeRule(v *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule) *IntlFlightOrderDetailResponseBodyModuleOrderItemList {
	s.RefundChangeRule = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemList) SetSegmentKeyList(v []*string) *IntlFlightOrderDetailResponseBodyModuleOrderItemList {
	s.SegmentKeyList = v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule struct {
	BaggageDigest  *string                                                         `json:"baggage_digest,omitempty" xml:"baggage_digest,omitempty"`
	BaggageInfoMap map[string][]*ModuleOrderItemListBaggageRuleBaggageInfoMapValue `json:"baggage_info_map,omitempty" xml:"baggage_info_map,omitempty"`
	// example:
	//
	// true
	StructuredBaggage *bool `json:"structured_baggage,omitempty" xml:"structured_baggage,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule) SetBaggageDigest(v string) *IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule {
	s.BaggageDigest = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule) SetBaggageInfoMap(v map[string][]*ModuleOrderItemListBaggageRuleBaggageInfoMapValue) *IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule {
	s.BaggageInfoMap = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule) SetStructuredBaggage(v bool) *IntlFlightOrderDetailResponseBodyModuleOrderItemListBaggageRule {
	s.StructuredBaggage = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList struct {
	// example:
	//
	// 3.5
	Discount *float64 `json:"discount,omitempty" xml:"discount,omitempty"`
	// example:
	//
	// 3.5折
	DiscountInfo *string `json:"discount_info,omitempty" xml:"discount_info,omitempty"`
	// example:
	//
	// 0
	ModifyFee *int64 `json:"modify_fee,omitempty" xml:"modify_fee,omitempty"`
	// example:
	//
	// 0
	ModifyTaxSpread *int64 `json:"modify_tax_spread,omitempty" xml:"modify_tax_spread,omitempty"`
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// example:
	//
	// 21300
	SellPrice *int64 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 19300
	Tax *int64 `json:"tax,omitempty" xml:"tax,omitempty"`
	// example:
	//
	// 2000
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 0
	UpgradeFee *int64 `json:"upgrade_fee,omitempty" xml:"upgrade_fee,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) SetDiscount(v float64) *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList {
	s.Discount = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) SetDiscountInfo(v string) *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList {
	s.DiscountInfo = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) SetModifyFee(v int64) *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList {
	s.ModifyFee = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) SetModifyTaxSpread(v int64) *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList {
	s.ModifyTaxSpread = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) SetPassengerType(v int32) *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList {
	s.PassengerType = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) SetSellPrice(v int64) *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList {
	s.SellPrice = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) SetTax(v int64) *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList {
	s.Tax = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) SetTicketPrice(v int64) *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList {
	s.TicketPrice = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList) SetUpgradeFee(v int64) *IntlFlightOrderDetailResponseBodyModuleOrderItemListPassengerPriceList {
	s.UpgradeFee = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule struct {
	// example:
	//
	// false
	CancelFeeInd *bool `json:"cancel_fee_ind,omitempty" xml:"cancel_fee_ind,omitempty"`
	// example:
	//
	// false
	ChangeFeeInd        *bool                                                                     `json:"change_fee_ind,omitempty" xml:"change_fee_ind,omitempty"`
	OfferPenaltyInfoMap map[string][]*ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue `json:"offer_penalty_info_map,omitempty" xml:"offer_penalty_info_map,omitempty"`
	RefundChangeDigest  *string                                                                   `json:"refund_change_digest,omitempty" xml:"refund_change_digest,omitempty"`
	// example:
	//
	// true
	StructuredRefund *bool `json:"structured_refund,omitempty" xml:"structured_refund,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule) SetCancelFeeInd(v bool) *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule {
	s.CancelFeeInd = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule) SetChangeFeeInd(v bool) *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule {
	s.ChangeFeeInd = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule) SetOfferPenaltyInfoMap(v map[string][]*ModuleOrderItemListRefundChangeRuleOfferPenaltyInfoMapValue) *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule {
	s.OfferPenaltyInfoMap = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule) SetRefundChangeDigest(v string) *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule {
	s.RefundChangeDigest = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule) SetStructuredRefund(v bool) *IntlFlightOrderDetailResponseBodyModuleOrderItemListRefundChangeRule {
	s.StructuredRefund = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModulePassengerItemDetailList struct {
	// example:
	//
	// 8432002
	PassengerId *int64                                                                      `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	TicketList  []*IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList `json:"ticket_list,omitempty" xml:"ticket_list,omitempty" type:"Repeated"`
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerItemDetailList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerItemDetailList) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailList) SetPassengerId(v int64) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailList {
	s.PassengerId = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailList) SetTicketList(v []*IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailList {
	s.TicketList = v
	return s
}

type IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList struct {
	// example:
	//
	// 2024-03-05 00:00:00
	IssueTime *string                                                                            `json:"issue_time,omitempty" xml:"issue_time,omitempty"`
	PriceInfo *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo `json:"price_info,omitempty" xml:"price_info,omitempty" type:"Struct"`
	// example:
	//
	// 000-1709625883
	TicketNo          *string                                                                                      `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	TicketSegmentList []*IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList `json:"ticket_segment_list,omitempty" xml:"ticket_segment_list,omitempty" type:"Repeated"`
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList) SetIssueTime(v string) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList {
	s.IssueTime = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList) SetPriceInfo(v *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList {
	s.PriceInfo = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList) SetTicketNo(v string) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList {
	s.TicketNo = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList) SetTicketSegmentList(v []*IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketList {
	s.TicketSegmentList = v
	return s
}

type IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo struct {
	// example:
	//
	// 0
	ModifyFee *int64 `json:"modify_fee,omitempty" xml:"modify_fee,omitempty"`
	// example:
	//
	// 0
	ModifyTaxSpread *int64 `json:"modify_tax_spread,omitempty" xml:"modify_tax_spread,omitempty"`
	// example:
	//
	// 26900
	SellPrice *int64 `json:"sell_price,omitempty" xml:"sell_price,omitempty"`
	// example:
	//
	// 24900
	Tax *int64 `json:"tax,omitempty" xml:"tax,omitempty"`
	// example:
	//
	// 2000
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 0
	UpgradeFee *int64 `json:"upgrade_fee,omitempty" xml:"upgrade_fee,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo) SetModifyFee(v int64) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo {
	s.ModifyFee = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo) SetModifyTaxSpread(v int64) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo {
	s.ModifyTaxSpread = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo) SetSellPrice(v int64) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo {
	s.SellPrice = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo) SetTax(v int64) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo {
	s.Tax = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo) SetTicketPrice(v int64) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo {
	s.TicketPrice = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo) SetUpgradeFee(v int64) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListPriceInfo {
	s.UpgradeFee = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList struct {
	// example:
	//
	// K
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// example:
	//
	// false
	Modified *bool `json:"modified,omitempty" xml:"modified,omitempty"`
	// example:
	//
	// OPEN FOR USE
	OpenTicketStatus *string `json:"open_ticket_status,omitempty" xml:"open_ticket_status,omitempty"`
	// example:
	//
	// false
	Refunded *bool `json:"refunded,omitempty" xml:"refunded,omitempty"`
	// example:
	//
	// MU507PVGHKG0706
	SegmentKey *string `json:"segment_key,omitempty" xml:"segment_key,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList) SetCabin(v string) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList {
	s.Cabin = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList) SetCabinClass(v string) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList {
	s.CabinClass = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList) SetModified(v bool) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList {
	s.Modified = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList) SetOpenTicketStatus(v string) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList {
	s.OpenTicketStatus = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList) SetRefunded(v bool) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList {
	s.Refunded = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList) SetSegmentKey(v string) *IntlFlightOrderDetailResponseBodyModulePassengerItemDetailListTicketListTicketSegmentList {
	s.SegmentKey = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModulePassengerList struct {
	// example:
	//
	// 1996-09-13
	Birthday *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	// example:
	//
	// 1000
	CascadeDeptMask *string                                                       `json:"cascade_dept_mask,omitempty" xml:"cascade_dept_mask,omitempty"`
	CascadeDeptName *string                                                       `json:"cascade_dept_name,omitempty" xml:"cascade_dept_name,omitempty"`
	CertInfo        *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo `json:"cert_info,omitempty" xml:"cert_info,omitempty" type:"Struct"`
	CostCenterName  *string                                                       `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// 1009909
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// 1001
	DeptId   *string `json:"dept_id,omitempty" xml:"dept_id,omitempty"`
	DeptName *string `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	// example:
	//
	// 0
	Gender       *int32  `json:"gender,omitempty" xml:"gender,omitempty"`
	InvoiceId    *string `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// 1001101
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// 86
	MobileCountryCode *string `json:"mobile_country_code,omitempty" xml:"mobile_country_code,omitempty"`
	Nationality       *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
	// example:
	//
	// CN
	NationalityCode *string `json:"nationality_code,omitempty" xml:"nationality_code,omitempty"`
	// example:
	//
	// 8432002
	PassengerId *int64 `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// example:
	//
	// 185006021321
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// testcode
	ProjectCode            *string                                                                       `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle           *string                                                                       `json:"project_title,omitempty" xml:"project_title,omitempty"`
	SubsidiaryCertInfoList []*IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList `json:"subsidiary_cert_info_list,omitempty" xml:"subsidiary_cert_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 12292812036903456
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	// example:
	//
	// 0
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerList) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetBirthday(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.Birthday = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetCascadeDeptMask(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.CascadeDeptMask = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetCascadeDeptName(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.CascadeDeptName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetCertInfo(v *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.CertInfo = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetCostCenterName(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.CostCenterName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetCostCenterNumber(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.CostCenterNumber = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetDeptId(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.DeptId = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetDeptName(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.DeptName = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetGender(v int32) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.Gender = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetInvoiceId(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.InvoiceId = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetInvoiceTitle(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.InvoiceTitle = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetJobNo(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.JobNo = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetMobileCountryCode(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.MobileCountryCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetNationality(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.Nationality = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetNationalityCode(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.NationalityCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetPassengerId(v int64) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.PassengerId = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetPassengerType(v int32) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.PassengerType = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetPhone(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.Phone = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetProjectCode(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.ProjectCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetProjectTitle(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.ProjectTitle = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetSubsidiaryCertInfoList(v []*IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.SubsidiaryCertInfoList = v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetUserId(v string) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.UserId = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerList) SetUserType(v int32) *IntlFlightOrderDetailResponseBodyModulePassengerList {
	s.UserType = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo struct {
	// example:
	//
	// CN
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// example:
	//
	// H123456
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 1
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 2025-09-09
	CertValidDate *string `json:"cert_valid_date,omitempty" xml:"cert_valid_date,omitempty"`
	// example:
	//
	// ZHANG/SAN
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo) SetCertNation(v string) *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo {
	s.CertNation = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo) SetCertNo(v string) *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo {
	s.CertNo = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo) SetCertType(v int32) *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo {
	s.CertType = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo) SetCertValidDate(v string) *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo {
	s.CertValidDate = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo) SetName(v string) *IntlFlightOrderDetailResponseBodyModulePassengerListCertInfo {
	s.Name = &v
	return s
}

type IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList struct {
	// example:
	//
	// CN
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// example:
	//
	// H123456
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 1
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 2025-09-09
	CertValidDate *string `json:"cert_valid_date,omitempty" xml:"cert_valid_date,omitempty"`
	// example:
	//
	// ZHANG/SAN
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList) SetCertNation(v string) *IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList {
	s.CertNation = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList) SetCertNo(v string) *IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList {
	s.CertNo = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList) SetCertType(v int32) *IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList {
	s.CertType = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList) SetCertValidDate(v string) *IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList {
	s.CertValidDate = &v
	return s
}

func (s *IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList) SetName(v string) *IntlFlightOrderDetailResponseBodyModulePassengerListSubsidiaryCertInfoList {
	s.Name = &v
	return s
}

type IntlFlightOrderDetailResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IntlFlightOrderDetailResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IntlFlightOrderDetailResponse) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderDetailResponse) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderDetailResponse) SetHeaders(v map[string]*string) *IntlFlightOrderDetailResponse {
	s.Headers = v
	return s
}

func (s *IntlFlightOrderDetailResponse) SetStatusCode(v int32) *IntlFlightOrderDetailResponse {
	s.StatusCode = &v
	return s
}

func (s *IntlFlightOrderDetailResponse) SetBody(v *IntlFlightOrderDetailResponseBody) *IntlFlightOrderDetailResponse {
	s.Body = v
	return s
}

type IntlFlightOrderPayHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s IntlFlightOrderPayHeaders) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderPayHeaders) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderPayHeaders) SetCommonHeaders(v map[string]*string) *IntlFlightOrderPayHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IntlFlightOrderPayHeaders) SetXAcsBtripCorpToken(v string) *IntlFlightOrderPayHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type IntlFlightOrderPayRequest struct {
	ExtParams map[string]interface{} `json:"ext_params,omitempty" xml:"ext_params,omitempty"`
	// example:
	//
	// TRAVEL
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1002145190081005400
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// F11372878673688133632
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 15500
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
}

func (s IntlFlightOrderPayRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderPayRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderPayRequest) SetExtParams(v map[string]interface{}) *IntlFlightOrderPayRequest {
	s.ExtParams = v
	return s
}

func (s *IntlFlightOrderPayRequest) SetIsvName(v string) *IntlFlightOrderPayRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightOrderPayRequest) SetOrderId(v string) *IntlFlightOrderPayRequest {
	s.OrderId = &v
	return s
}

func (s *IntlFlightOrderPayRequest) SetOutOrderId(v string) *IntlFlightOrderPayRequest {
	s.OutOrderId = &v
	return s
}

func (s *IntlFlightOrderPayRequest) SetTotalPrice(v int64) *IntlFlightOrderPayRequest {
	s.TotalPrice = &v
	return s
}

type IntlFlightOrderPayShrinkRequest struct {
	ExtParamsShrink *string `json:"ext_params,omitempty" xml:"ext_params,omitempty"`
	// example:
	//
	// TRAVEL
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1002145190081005400
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// F11372878673688133632
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 15500
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
}

func (s IntlFlightOrderPayShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderPayShrinkRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderPayShrinkRequest) SetExtParamsShrink(v string) *IntlFlightOrderPayShrinkRequest {
	s.ExtParamsShrink = &v
	return s
}

func (s *IntlFlightOrderPayShrinkRequest) SetIsvName(v string) *IntlFlightOrderPayShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightOrderPayShrinkRequest) SetOrderId(v string) *IntlFlightOrderPayShrinkRequest {
	s.OrderId = &v
	return s
}

func (s *IntlFlightOrderPayShrinkRequest) SetOutOrderId(v string) *IntlFlightOrderPayShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *IntlFlightOrderPayShrinkRequest) SetTotalPrice(v int64) *IntlFlightOrderPayShrinkRequest {
	s.TotalPrice = &v
	return s
}

type IntlFlightOrderPayResponseBody struct {
	Module *IntlFlightOrderPayResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 9BCDD5DE-E6CB-5C25-93B9-9BE178A0AA56
	RequestId *string `json:"request_id,omitempty" xml:"request_id,omitempty"`
	// example:
	//
	// 0
	ResultCode *string `json:"result_code,omitempty" xml:"result_code,omitempty"`
	ResultMsg  *string `json:"result_msg,omitempty" xml:"result_msg,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"trace_id,omitempty" xml:"trace_id,omitempty"`
}

func (s IntlFlightOrderPayResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderPayResponseBody) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderPayResponseBody) SetModule(v *IntlFlightOrderPayResponseBodyModule) *IntlFlightOrderPayResponseBody {
	s.Module = v
	return s
}

func (s *IntlFlightOrderPayResponseBody) SetRequestId(v string) *IntlFlightOrderPayResponseBody {
	s.RequestId = &v
	return s
}

func (s *IntlFlightOrderPayResponseBody) SetResultCode(v string) *IntlFlightOrderPayResponseBody {
	s.ResultCode = &v
	return s
}

func (s *IntlFlightOrderPayResponseBody) SetResultMsg(v string) *IntlFlightOrderPayResponseBody {
	s.ResultMsg = &v
	return s
}

func (s *IntlFlightOrderPayResponseBody) SetSuccess(v bool) *IntlFlightOrderPayResponseBody {
	s.Success = &v
	return s
}

func (s *IntlFlightOrderPayResponseBody) SetTraceId(v string) *IntlFlightOrderPayResponseBody {
	s.TraceId = &v
	return s
}

type IntlFlightOrderPayResponseBodyModule struct {
	// example:
	//
	// 51000
	Price *int64 `json:"price,omitempty" xml:"price,omitempty"`
}

func (s IntlFlightOrderPayResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderPayResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderPayResponseBodyModule) SetPrice(v int64) *IntlFlightOrderPayResponseBodyModule {
	s.Price = &v
	return s
}

type IntlFlightOrderPayResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IntlFlightOrderPayResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IntlFlightOrderPayResponse) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderPayResponse) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderPayResponse) SetHeaders(v map[string]*string) *IntlFlightOrderPayResponse {
	s.Headers = v
	return s
}

func (s *IntlFlightOrderPayResponse) SetStatusCode(v int32) *IntlFlightOrderPayResponse {
	s.StatusCode = &v
	return s
}

func (s *IntlFlightOrderPayResponse) SetBody(v *IntlFlightOrderPayResponseBody) *IntlFlightOrderPayResponse {
	s.Body = v
	return s
}

type IntlFlightOrderPayCheckHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s IntlFlightOrderPayCheckHeaders) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderPayCheckHeaders) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderPayCheckHeaders) SetCommonHeaders(v map[string]*string) *IntlFlightOrderPayCheckHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IntlFlightOrderPayCheckHeaders) SetXAcsBtripCorpToken(v string) *IntlFlightOrderPayCheckHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type IntlFlightOrderPayCheckRequest struct {
	// example:
	//
	// TRAVEL
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// 1002094194679957528
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// F11374007131319304192
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s IntlFlightOrderPayCheckRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderPayCheckRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderPayCheckRequest) SetIsvName(v string) *IntlFlightOrderPayCheckRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightOrderPayCheckRequest) SetOrderId(v string) *IntlFlightOrderPayCheckRequest {
	s.OrderId = &v
	return s
}

func (s *IntlFlightOrderPayCheckRequest) SetOutOrderId(v string) *IntlFlightOrderPayCheckRequest {
	s.OutOrderId = &v
	return s
}

type IntlFlightOrderPayCheckResponseBody struct {
	// example:
	//
	// 9BCDD5DE-E6CB-5C25-93B9-9BE178A0AA56
	RequestId *string `json:"request_id,omitempty" xml:"request_id,omitempty"`
	// example:
	//
	// 0
	ResultCode *string `json:"result_code,omitempty" xml:"result_code,omitempty"`
	ResultMsg  *string `json:"result_msg,omitempty" xml:"result_msg,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"trace_id,omitempty" xml:"trace_id,omitempty"`
}

func (s IntlFlightOrderPayCheckResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderPayCheckResponseBody) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderPayCheckResponseBody) SetRequestId(v string) *IntlFlightOrderPayCheckResponseBody {
	s.RequestId = &v
	return s
}

func (s *IntlFlightOrderPayCheckResponseBody) SetResultCode(v string) *IntlFlightOrderPayCheckResponseBody {
	s.ResultCode = &v
	return s
}

func (s *IntlFlightOrderPayCheckResponseBody) SetResultMsg(v string) *IntlFlightOrderPayCheckResponseBody {
	s.ResultMsg = &v
	return s
}

func (s *IntlFlightOrderPayCheckResponseBody) SetSuccess(v bool) *IntlFlightOrderPayCheckResponseBody {
	s.Success = &v
	return s
}

func (s *IntlFlightOrderPayCheckResponseBody) SetTraceId(v string) *IntlFlightOrderPayCheckResponseBody {
	s.TraceId = &v
	return s
}

type IntlFlightOrderPayCheckResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IntlFlightOrderPayCheckResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IntlFlightOrderPayCheckResponse) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOrderPayCheckResponse) GoString() string {
	return s.String()
}

func (s *IntlFlightOrderPayCheckResponse) SetHeaders(v map[string]*string) *IntlFlightOrderPayCheckResponse {
	s.Headers = v
	return s
}

func (s *IntlFlightOrderPayCheckResponse) SetStatusCode(v int32) *IntlFlightOrderPayCheckResponse {
	s.StatusCode = &v
	return s
}

func (s *IntlFlightOrderPayCheckResponse) SetBody(v *IntlFlightOrderPayCheckResponseBody) *IntlFlightOrderPayCheckResponse {
	s.Body = v
	return s
}

type IntlFlightOtaItemDetailHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s IntlFlightOtaItemDetailHeaders) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailHeaders) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailHeaders) SetCommonHeaders(v map[string]*string) *IntlFlightOtaItemDetailHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IntlFlightOtaItemDetailHeaders) SetXAcsBtripCorpToken(v string) *IntlFlightOtaItemDetailHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type IntlFlightOtaItemDetailRequest struct {
	// example:
	//
	// 10001
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// example:
	//
	// open12igetbis4o07v10B1TlOWcM00
	IsvName  *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	Language *string `json:"language,omitempty" xml:"language,omitempty"`
	// example:
	//
	// JIANHANG
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
}

func (s IntlFlightOtaItemDetailRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailRequest) SetBtripUserId(v string) *IntlFlightOtaItemDetailRequest {
	s.BtripUserId = &v
	return s
}

func (s *IntlFlightOtaItemDetailRequest) SetBuyerName(v string) *IntlFlightOtaItemDetailRequest {
	s.BuyerName = &v
	return s
}

func (s *IntlFlightOtaItemDetailRequest) SetIsvName(v string) *IntlFlightOtaItemDetailRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightOtaItemDetailRequest) SetLanguage(v string) *IntlFlightOtaItemDetailRequest {
	s.Language = &v
	return s
}

func (s *IntlFlightOtaItemDetailRequest) SetSupplierCode(v string) *IntlFlightOtaItemDetailRequest {
	s.SupplierCode = &v
	return s
}

type IntlFlightOtaItemDetailResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                    `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                    `json:"message,omitempty" xml:"message,omitempty"`
	Module  *IntlFlightOtaItemDetailResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBody) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBody) SetCode(v string) *IntlFlightOtaItemDetailResponseBody {
	s.Code = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBody) SetMessage(v string) *IntlFlightOtaItemDetailResponseBody {
	s.Message = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBody) SetModule(v *IntlFlightOtaItemDetailResponseBodyModule) *IntlFlightOtaItemDetailResponseBody {
	s.Module = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBody) SetRequestId(v string) *IntlFlightOtaItemDetailResponseBody {
	s.RequestId = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBody) SetSuccess(v bool) *IntlFlightOtaItemDetailResponseBody {
	s.Success = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBody) SetTraceId(v string) *IntlFlightOtaItemDetailResponseBody {
	s.TraceId = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModule struct {
	FlightJourneyInfos []*IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos `json:"flight_journey_infos,omitempty" xml:"flight_journey_infos,omitempty" type:"Repeated"`
	GroupItem          *IntlFlightOtaItemDetailResponseBodyModuleGroupItem            `json:"group_item,omitempty" xml:"group_item,omitempty" type:"Struct"`
	ShutterDocs        []*IntlFlightOtaItemDetailResponseBodyModuleShutterDocs        `json:"shutter_docs,omitempty" xml:"shutter_docs,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModule) SetFlightJourneyInfos(v []*IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) *IntlFlightOtaItemDetailResponseBodyModule {
	s.FlightJourneyInfos = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModule) SetGroupItem(v *IntlFlightOtaItemDetailResponseBodyModuleGroupItem) *IntlFlightOtaItemDetailResponseBodyModule {
	s.GroupItem = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModule) SetShutterDocs(v []*IntlFlightOtaItemDetailResponseBodyModuleShutterDocs) *IntlFlightOtaItemDetailResponseBodyModule {
	s.ShutterDocs = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModule) SetTripType(v int32) *IntlFlightOtaItemDetailResponseBodyModule {
	s.TripType = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos struct {
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 09:45
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 140
	Duration           *int32                                                                           `json:"duration,omitempty" xml:"duration,omitempty"`
	Extensions         map[string]*string                                                               `json:"extensions,omitempty" xml:"extensions,omitempty"`
	FlightSegmentInfos []*IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos `json:"flight_segment_infos,omitempty" xml:"flight_segment_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	TransferTime *int32 `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetArrCityCode(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetArrCityName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.ArrCityName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetArrTime(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.ArrTime = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetDepCityCode(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetDepCityName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.DepCityName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetDepTime(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.DepTime = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetDuration(v int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.Duration = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetExtensions(v map[string]*string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.Extensions = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetFlightSegmentInfos(v []*IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.FlightSegmentInfos = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetJourneyIndex(v int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.JourneyIndex = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos) SetTransferTime(v int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfos {
	s.TransferTime = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos struct {
	AirlineInfo    *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// BJS
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 09:45
	ArrTime        *string                                                                                      `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	BaggageDesc    *string                                                                                      `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
	DepAirportInfo *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// HGH
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 140
	Duration *int32 `json:"duration,omitempty" xml:"duration,omitempty"`
	// example:
	//
	// MU5131
	FlightNo        *string                                                                                       `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightShareInfo *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo `json:"flight_share_info,omitempty" xml:"flight_share_info,omitempty" type:"Struct"`
	FlightSize      *string                                                                                       `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	FlightStopInfo  *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo  `json:"flight_stop_info,omitempty" xml:"flight_stop_info,omitempty" type:"Struct"`
	// example:
	//
	// 320
	FlightType        *string                                                                                         `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	LuggageDirectInfo *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo `json:"luggage_direct_info,omitempty" xml:"luggage_direct_info,omitempty" type:"Struct"`
	Manufacturer      *string                                                                                         `json:"manufacturer,omitempty" xml:"manufacturer,omitempty"`
	MealDesc          *string                                                                                         `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	// example:
	//
	// 80%
	OnTimeRate *string `json:"on_time_rate,omitempty" xml:"on_time_rate,omitempty"`
	// example:
	//
	// 0
	OneMore     *int32  `json:"one_more,omitempty" xml:"one_more,omitempty"`
	OneMoreShow *string `json:"one_more_show,omitempty" xml:"one_more_show,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	// example:
	//
	// KN6728HGHPKX0725
	SegmentKey        *string                                                                                         `json:"segment_key,omitempty" xml:"segment_key,omitempty"`
	SegmentVisaRemark *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark `json:"segment_visa_remark,omitempty" xml:"segment_visa_remark,omitempty" type:"Struct"`
	// example:
	//
	// false
	Share           *bool   `json:"share,omitempty" xml:"share,omitempty"`
	ShortFlightSize *string `json:"short_flight_size,omitempty" xml:"short_flight_size,omitempty"`
	// example:
	//
	// false
	Stop         *bool   `json:"stop,omitempty" xml:"stop,omitempty"`
	TotalTime    *string `json:"total_time,omitempty" xml:"total_time,omitempty"`
	TransferTime *string `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
	// example:
	//
	// 80
	TransferTimeNumber *int32 `json:"transfer_time_number,omitempty" xml:"transfer_time_number,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetAirlineInfo(v *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.AirlineInfo = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrAirportInfo(v *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrAirportInfo = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrCityCode(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrCityName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrCityName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrTime(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrTime = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetBaggageDesc(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.BaggageDesc = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepAirportInfo(v *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepAirportInfo = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepCityCode(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepCityName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepCityName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepTime(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepTime = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDuration(v int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Duration = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightNo(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightNo = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightShareInfo(v *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightShareInfo = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightSize(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightSize = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightStopInfo(v *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightStopInfo = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightType(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightType = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetLuggageDirectInfo(v *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.LuggageDirectInfo = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetManufacturer(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Manufacturer = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetMealDesc(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.MealDesc = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetOnTimeRate(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.OnTimeRate = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetOneMore(v int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.OneMore = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetOneMoreShow(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.OneMoreShow = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetSegmentIndex(v int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.SegmentIndex = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetSegmentKey(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.SegmentKey = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetSegmentVisaRemark(v *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.SegmentVisaRemark = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetShare(v bool) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Share = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetShortFlightSize(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ShortFlightSize = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetStop(v bool) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Stop = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetTotalTime(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.TotalTime = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetTransferTime(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.TransferTime = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetTransferTimeNumber(v int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.TransferTimeNumber = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// MU
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB15EXDFHY1gK0jSZTEXXXDQVXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineChineseName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineChineseShortName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineCode(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineIcon(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetCheapFlight(v bool) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.CheapFlight = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo struct {
	// example:
	//
	// PKX
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// --
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportCode(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportShortName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetTerminal(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.Terminal = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportCode(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportShortName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetTerminal(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.Terminal = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo struct {
	OperatingAirlineInfo *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo `json:"operating_airline_info,omitempty" xml:"operating_airline_info,omitempty" type:"Struct"`
	// example:
	//
	// CX601
	OperatingFlightNo *string `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) SetOperatingAirlineInfo(v *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo {
	s.OperatingAirlineInfo = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) SetOperatingFlightNo(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo {
	s.OperatingFlightNo = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// KN
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB1gSXBFUT1gK0jSZFhXXaAtVXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineChineseName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineChineseShortName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineCode(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineIcon(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetCheapFlight(v bool) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.CheapFlight = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo struct {
	// example:
	//
	// HGH
	StopAirport     *string `json:"stop_airport,omitempty" xml:"stop_airport,omitempty"`
	StopAirportName *string `json:"stop_airport_name,omitempty" xml:"stop_airport_name,omitempty"`
	// example:
	//
	// T3
	StopArrTerm *string `json:"stop_arr_term,omitempty" xml:"stop_arr_term,omitempty"`
	// example:
	//
	// BJS
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// HGH
	StopCityCode *string `json:"stop_city_code,omitempty" xml:"stop_city_code,omitempty"`
	// example:
	//
	// HGH
	StopCityName  *string   `json:"stop_city_name,omitempty" xml:"stop_city_name,omitempty"`
	StopCityNames []*string `json:"stop_city_names,omitempty" xml:"stop_city_names,omitempty" type:"Repeated"`
	// example:
	//
	// T4
	StopDepTerm *string `json:"stop_dep_term,omitempty" xml:"stop_dep_term,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	StopTime    *string `json:"stop_time,omitempty" xml:"stop_time,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopAirport(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopAirport = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopAirportName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopAirportName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopArrTerm(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopArrTerm = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopArrTime(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopArrTime = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityCode(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityCode = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityName(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityName = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityNames(v []*string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityNames = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopDepTerm(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopDepTerm = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopDepTime(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopDepTime = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopTime(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopTime = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo struct {
	// example:
	//
	// 1
	DepCityLuggageDirect *int32 `json:"dep_city_luggage_direct,omitempty" xml:"dep_city_luggage_direct,omitempty"`
	// example:
	//
	// 0
	StopCityLuggageDirect *int32 `json:"stop_city_luggage_direct,omitempty" xml:"stop_city_luggage_direct,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo) SetDepCityLuggageDirect(v int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo {
	s.DepCityLuggageDirect = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo) SetStopCityLuggageDirect(v int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo {
	s.StopCityLuggageDirect = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark struct {
	DepCityVisaRemark *string `json:"dep_city_visa_remark,omitempty" xml:"dep_city_visa_remark,omitempty"`
	// example:
	//
	// 1
	DepCityVisaType     *int32    `json:"dep_city_visa_type,omitempty" xml:"dep_city_visa_type,omitempty"`
	StopCityVisaRemarks []*string `json:"stop_city_visa_remarks,omitempty" xml:"stop_city_visa_remarks,omitempty" type:"Repeated"`
	StopCityVisaTypes   []*int32  `json:"stop_city_visa_types,omitempty" xml:"stop_city_visa_types,omitempty" type:"Repeated"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) SetDepCityVisaRemark(v string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark {
	s.DepCityVisaRemark = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) SetDepCityVisaType(v int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark {
	s.DepCityVisaType = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) SetStopCityVisaRemarks(v []*string) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark {
	s.StopCityVisaRemarks = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) SetStopCityVisaTypes(v []*int32) *IntlFlightOtaItemDetailResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark {
	s.StopCityVisaTypes = v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleGroupItem struct {
	AgreementPriceCodes []*string                                                               `json:"agreement_price_codes,omitempty" xml:"agreement_price_codes,omitempty" type:"Repeated"`
	FlightRuleInfoList  []*IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoList `json:"flight_rule_info_list,omitempty" xml:"flight_rule_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 669845158418
	ItemId             *string                                                       `json:"item_id,omitempty" xml:"item_id,omitempty"`
	ItemType           *string                                                       `json:"item_type,omitempty" xml:"item_type,omitempty"`
	ShoppingItemMap    map[string]*ModuleGroupItemShoppingItemMapValue               `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
	SubItemPositionMap map[string][]*ModuleGroupItemSubItemPositionMapValue          `json:"sub_item_position_map,omitempty" xml:"sub_item_position_map,omitempty"`
	SubItems           []*IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems `json:"sub_items,omitempty" xml:"sub_items,omitempty" type:"Repeated"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItem) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItem) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItem) SetAgreementPriceCodes(v []*string) *IntlFlightOtaItemDetailResponseBodyModuleGroupItem {
	s.AgreementPriceCodes = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItem) SetFlightRuleInfoList(v []*IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoList) *IntlFlightOtaItemDetailResponseBodyModuleGroupItem {
	s.FlightRuleInfoList = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItem) SetItemId(v string) *IntlFlightOtaItemDetailResponseBodyModuleGroupItem {
	s.ItemId = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItem) SetItemType(v string) *IntlFlightOtaItemDetailResponseBodyModuleGroupItem {
	s.ItemType = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItem) SetShoppingItemMap(v map[string]*ModuleGroupItemShoppingItemMapValue) *IntlFlightOtaItemDetailResponseBodyModuleGroupItem {
	s.ShoppingItemMap = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItem) SetSubItemPositionMap(v map[string][]*ModuleGroupItemSubItemPositionMapValue) *IntlFlightOtaItemDetailResponseBodyModuleGroupItem {
	s.SubItemPositionMap = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItem) SetSubItems(v []*IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems) *IntlFlightOtaItemDetailResponseBodyModuleGroupItem {
	s.SubItems = v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoList struct {
	FlightRuleInfo  *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListFlightRuleInfo  `json:"flight_rule_info,omitempty" xml:"flight_rule_info,omitempty" type:"Struct"`
	SegmentPosition *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoList) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoList) SetFlightRuleInfo(v *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListFlightRuleInfo) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoList {
	s.FlightRuleInfo = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoList) SetSegmentPosition(v *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListSegmentPosition) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoList {
	s.SegmentPosition = v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListFlightRuleInfo struct {
	BaggageDesc          *string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
	RefundChangeRuleDesc *string `json:"refund_change_rule_desc,omitempty" xml:"refund_change_rule_desc,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListFlightRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListFlightRuleInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListFlightRuleInfo) SetBaggageDesc(v string) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListFlightRuleInfo {
	s.BaggageDesc = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListFlightRuleInfo) SetRefundChangeRuleDesc(v string) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListFlightRuleInfo {
	s.RefundChangeRuleDesc = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListSegmentPosition struct {
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListSegmentPosition) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListSegmentPosition) SetJourneyIndex(v int32) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListSegmentPosition) SetSegmentIndex(v int32) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemFlightRuleInfoListSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems struct {
	BaggageRule      *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule      `json:"baggage_rule,omitempty" xml:"baggage_rule,omitempty" type:"Struct"`
	RefundChangeRule *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule `json:"refund_change_rule,omitempty" xml:"refund_change_rule,omitempty" type:"Struct"`
	SegmentKeys      []*string                                                                   `json:"segment_keys,omitempty" xml:"segment_keys,omitempty" type:"Repeated"`
	ShoppingItemMap  map[string]*ModuleGroupItemSubItemsShoppingItemMapValue                     `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
	// example:
	//
	// 23412341234124
	UniqKey *string `json:"uniq_key,omitempty" xml:"uniq_key,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems) SetBaggageRule(v *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems {
	s.BaggageRule = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems) SetRefundChangeRule(v *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems {
	s.RefundChangeRule = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems) SetSegmentKeys(v []*string) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems {
	s.SegmentKeys = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems) SetShoppingItemMap(v map[string]*ModuleGroupItemSubItemsShoppingItemMapValue) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems {
	s.ShoppingItemMap = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems) SetUniqKey(v string) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItems {
	s.UniqKey = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule struct {
	BaggageDigest  *string                                                             `json:"baggage_digest,omitempty" xml:"baggage_digest,omitempty"`
	BaggageInfoMap map[string][]*ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue `json:"baggage_info_map,omitempty" xml:"baggage_info_map,omitempty"`
	// example:
	//
	// true
	StructuredBaggage *bool `json:"structured_baggage,omitempty" xml:"structured_baggage,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule) SetBaggageDigest(v string) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule {
	s.BaggageDigest = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule) SetBaggageInfoMap(v map[string][]*ModuleGroupItemSubItemsBaggageRuleBaggageInfoMapValue) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule {
	s.BaggageInfoMap = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule) SetStructuredBaggage(v bool) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsBaggageRule {
	s.StructuredBaggage = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule struct {
	// example:
	//
	// false
	CancelFeeInd *bool `json:"cancel_fee_ind,omitempty" xml:"cancel_fee_ind,omitempty"`
	// example:
	//
	// false
	ChangeFeeInd        *bool                                                                         `json:"change_fee_ind,omitempty" xml:"change_fee_ind,omitempty"`
	OfferPenaltyInfoMap map[string][]*ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue `json:"offer_penalty_info_map,omitempty" xml:"offer_penalty_info_map,omitempty"`
	RefundChangeDigest  *string                                                                       `json:"refund_change_digest,omitempty" xml:"refund_change_digest,omitempty"`
	// example:
	//
	// false
	StructuredRefund *bool `json:"structured_refund,omitempty" xml:"structured_refund,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule) SetCancelFeeInd(v bool) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule {
	s.CancelFeeInd = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule) SetChangeFeeInd(v bool) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule {
	s.ChangeFeeInd = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule) SetOfferPenaltyInfoMap(v map[string][]*ModuleGroupItemSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule {
	s.OfferPenaltyInfoMap = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule) SetRefundChangeDigest(v string) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule {
	s.RefundChangeDigest = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule) SetStructuredRefund(v bool) *IntlFlightOtaItemDetailResponseBodyModuleGroupItemSubItemsRefundChangeRule {
	s.StructuredRefund = &v
	return s
}

type IntlFlightOtaItemDetailResponseBodyModuleShutterDocs struct {
	Contents  []*string `json:"contents,omitempty" xml:"contents,omitempty" type:"Repeated"`
	MainTitle *string   `json:"main_title,omitempty" xml:"main_title,omitempty"`
}

func (s IntlFlightOtaItemDetailResponseBodyModuleShutterDocs) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponseBodyModuleShutterDocs) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleShutterDocs) SetContents(v []*string) *IntlFlightOtaItemDetailResponseBodyModuleShutterDocs {
	s.Contents = v
	return s
}

func (s *IntlFlightOtaItemDetailResponseBodyModuleShutterDocs) SetMainTitle(v string) *IntlFlightOtaItemDetailResponseBodyModuleShutterDocs {
	s.MainTitle = &v
	return s
}

type IntlFlightOtaItemDetailResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IntlFlightOtaItemDetailResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IntlFlightOtaItemDetailResponse) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaItemDetailResponse) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaItemDetailResponse) SetHeaders(v map[string]*string) *IntlFlightOtaItemDetailResponse {
	s.Headers = v
	return s
}

func (s *IntlFlightOtaItemDetailResponse) SetStatusCode(v int32) *IntlFlightOtaItemDetailResponse {
	s.StatusCode = &v
	return s
}

func (s *IntlFlightOtaItemDetailResponse) SetBody(v *IntlFlightOtaItemDetailResponseBody) *IntlFlightOtaItemDetailResponse {
	s.Body = v
	return s
}

type IntlFlightOtaSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s IntlFlightOtaSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchHeaders) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchHeaders) SetCommonHeaders(v map[string]*string) *IntlFlightOtaSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IntlFlightOtaSearchHeaders) SetXAcsBtripCorpToken(v string) *IntlFlightOtaSearchHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type IntlFlightOtaSearchRequest struct {
	// example:
	//
	// 10023
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	CabinType *int32 `json:"cabin_type,omitempty" xml:"cabin_type,omitempty"`
	// example:
	//
	// false
	DirectOnly *bool `json:"direct_only,omitempty" xml:"direct_only,omitempty"`
	// example:
	//
	// open12igetbis4o07v10B1TlOWcM00
	IsvName  *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	Language *string `json:"language,omitempty" xml:"language,omitempty"`
	// example:
	//
	// true
	NeedShareFlight *bool `json:"need_share_flight,omitempty" xml:"need_share_flight,omitempty"`
	// This parameter is required.
	SearchJourneys      []*IntlFlightOtaSearchRequestSearchJourneys      `json:"search_journeys,omitempty" xml:"search_journeys,omitempty" type:"Repeated"`
	SearchPassengerList []*IntlFlightOtaSearchRequestSearchPassengerList `json:"search_passenger_list,omitempty" xml:"search_passenger_list,omitempty" type:"Repeated"`
	// example:
	//
	// TEST
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s IntlFlightOtaSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchRequest) SetBtripUserId(v string) *IntlFlightOtaSearchRequest {
	s.BtripUserId = &v
	return s
}

func (s *IntlFlightOtaSearchRequest) SetBuyerName(v string) *IntlFlightOtaSearchRequest {
	s.BuyerName = &v
	return s
}

func (s *IntlFlightOtaSearchRequest) SetCabinType(v int32) *IntlFlightOtaSearchRequest {
	s.CabinType = &v
	return s
}

func (s *IntlFlightOtaSearchRequest) SetDirectOnly(v bool) *IntlFlightOtaSearchRequest {
	s.DirectOnly = &v
	return s
}

func (s *IntlFlightOtaSearchRequest) SetIsvName(v string) *IntlFlightOtaSearchRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightOtaSearchRequest) SetLanguage(v string) *IntlFlightOtaSearchRequest {
	s.Language = &v
	return s
}

func (s *IntlFlightOtaSearchRequest) SetNeedShareFlight(v bool) *IntlFlightOtaSearchRequest {
	s.NeedShareFlight = &v
	return s
}

func (s *IntlFlightOtaSearchRequest) SetSearchJourneys(v []*IntlFlightOtaSearchRequestSearchJourneys) *IntlFlightOtaSearchRequest {
	s.SearchJourneys = v
	return s
}

func (s *IntlFlightOtaSearchRequest) SetSearchPassengerList(v []*IntlFlightOtaSearchRequestSearchPassengerList) *IntlFlightOtaSearchRequest {
	s.SearchPassengerList = v
	return s
}

func (s *IntlFlightOtaSearchRequest) SetSupplierCode(v string) *IntlFlightOtaSearchRequest {
	s.SupplierCode = &v
	return s
}

func (s *IntlFlightOtaSearchRequest) SetTripType(v int32) *IntlFlightOtaSearchRequest {
	s.TripType = &v
	return s
}

type IntlFlightOtaSearchRequestSearchJourneys struct {
	// This parameter is required.
	//
	// example:
	//
	// ZQZ
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HGH
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-08-15
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	SelectedFlights []*IntlFlightOtaSearchRequestSearchJourneysSelectedFlights `json:"selected_flights,omitempty" xml:"selected_flights,omitempty" type:"Repeated"`
}

func (s IntlFlightOtaSearchRequestSearchJourneys) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchRequestSearchJourneys) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchRequestSearchJourneys) SetArrCityCode(v string) *IntlFlightOtaSearchRequestSearchJourneys {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchJourneys) SetDepCityCode(v string) *IntlFlightOtaSearchRequestSearchJourneys {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchJourneys) SetDepDate(v string) *IntlFlightOtaSearchRequestSearchJourneys {
	s.DepDate = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchJourneys) SetSelectedFlights(v []*IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) *IntlFlightOtaSearchRequestSearchJourneys {
	s.SelectedFlights = v
	return s
}

type IntlFlightOtaSearchRequestSearchJourneysSelectedFlights struct {
	// example:
	//
	// HGH
	ArrAirportCode *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// NNG
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// 0
	CabinType *int32 `json:"cabin_type,omitempty" xml:"cabin_type,omitempty"`
	// example:
	//
	// KOW
	DepAirportCode *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// CTU
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-08-15 12:00:00
	FlightTime *string `json:"flight_time,omitempty" xml:"flight_time,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// KA5809
	MarketFlightNo *string `json:"market_flight_no,omitempty" xml:"market_flight_no,omitempty"`
	// example:
	//
	// CX601
	OperateFlightNo *string `json:"operate_flight_no,omitempty" xml:"operate_flight_no,omitempty"`
}

func (s IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) SetArrAirportCode(v string) *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights {
	s.ArrAirportCode = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) SetArrCityCode(v string) *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) SetCabinType(v int32) *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights {
	s.CabinType = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) SetDepAirportCode(v string) *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights {
	s.DepAirportCode = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) SetDepCityCode(v string) *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) SetFlightTime(v string) *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights {
	s.FlightTime = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) SetMarketFlightNo(v string) *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights {
	s.MarketFlightNo = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights) SetOperateFlightNo(v string) *IntlFlightOtaSearchRequestSearchJourneysSelectedFlights {
	s.OperateFlightNo = &v
	return s
}

type IntlFlightOtaSearchRequestSearchPassengerList struct {
	// This parameter is required.
	//
	// example:
	//
	// 13412341234
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// ZHANGSAN
	FullName *string `json:"full_name,omitempty" xml:"full_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s IntlFlightOtaSearchRequestSearchPassengerList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchRequestSearchPassengerList) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchRequestSearchPassengerList) SetCertNo(v string) *IntlFlightOtaSearchRequestSearchPassengerList {
	s.CertNo = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchPassengerList) SetCertType(v int32) *IntlFlightOtaSearchRequestSearchPassengerList {
	s.CertType = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchPassengerList) SetFullName(v string) *IntlFlightOtaSearchRequestSearchPassengerList {
	s.FullName = &v
	return s
}

func (s *IntlFlightOtaSearchRequestSearchPassengerList) SetType(v int32) *IntlFlightOtaSearchRequestSearchPassengerList {
	s.Type = &v
	return s
}

type IntlFlightOtaSearchShrinkRequest struct {
	// example:
	//
	// 10023
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	BuyerName   *string `json:"buyer_name,omitempty" xml:"buyer_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	CabinType *int32 `json:"cabin_type,omitempty" xml:"cabin_type,omitempty"`
	// example:
	//
	// false
	DirectOnly *bool `json:"direct_only,omitempty" xml:"direct_only,omitempty"`
	// example:
	//
	// open12igetbis4o07v10B1TlOWcM00
	IsvName  *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	Language *string `json:"language,omitempty" xml:"language,omitempty"`
	// example:
	//
	// true
	NeedShareFlight *bool `json:"need_share_flight,omitempty" xml:"need_share_flight,omitempty"`
	// This parameter is required.
	SearchJourneysShrink      *string `json:"search_journeys,omitempty" xml:"search_journeys,omitempty"`
	SearchPassengerListShrink *string `json:"search_passenger_list,omitempty" xml:"search_passenger_list,omitempty"`
	// example:
	//
	// TEST
	SupplierCode *string `json:"supplier_code,omitempty" xml:"supplier_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
}

func (s IntlFlightOtaSearchShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchShrinkRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchShrinkRequest) SetBtripUserId(v string) *IntlFlightOtaSearchShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *IntlFlightOtaSearchShrinkRequest) SetBuyerName(v string) *IntlFlightOtaSearchShrinkRequest {
	s.BuyerName = &v
	return s
}

func (s *IntlFlightOtaSearchShrinkRequest) SetCabinType(v int32) *IntlFlightOtaSearchShrinkRequest {
	s.CabinType = &v
	return s
}

func (s *IntlFlightOtaSearchShrinkRequest) SetDirectOnly(v bool) *IntlFlightOtaSearchShrinkRequest {
	s.DirectOnly = &v
	return s
}

func (s *IntlFlightOtaSearchShrinkRequest) SetIsvName(v string) *IntlFlightOtaSearchShrinkRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightOtaSearchShrinkRequest) SetLanguage(v string) *IntlFlightOtaSearchShrinkRequest {
	s.Language = &v
	return s
}

func (s *IntlFlightOtaSearchShrinkRequest) SetNeedShareFlight(v bool) *IntlFlightOtaSearchShrinkRequest {
	s.NeedShareFlight = &v
	return s
}

func (s *IntlFlightOtaSearchShrinkRequest) SetSearchJourneysShrink(v string) *IntlFlightOtaSearchShrinkRequest {
	s.SearchJourneysShrink = &v
	return s
}

func (s *IntlFlightOtaSearchShrinkRequest) SetSearchPassengerListShrink(v string) *IntlFlightOtaSearchShrinkRequest {
	s.SearchPassengerListShrink = &v
	return s
}

func (s *IntlFlightOtaSearchShrinkRequest) SetSupplierCode(v string) *IntlFlightOtaSearchShrinkRequest {
	s.SupplierCode = &v
	return s
}

func (s *IntlFlightOtaSearchShrinkRequest) SetTripType(v int32) *IntlFlightOtaSearchShrinkRequest {
	s.TripType = &v
	return s
}

type IntlFlightOtaSearchResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	Module *IntlFlightOtaSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 2150435016896473589786246e03e9
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s IntlFlightOtaSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBody) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBody) SetCode(v string) *IntlFlightOtaSearchResponseBody {
	s.Code = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBody) SetMessage(v string) *IntlFlightOtaSearchResponseBody {
	s.Message = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBody) SetModule(v *IntlFlightOtaSearchResponseBodyModule) *IntlFlightOtaSearchResponseBody {
	s.Module = v
	return s
}

func (s *IntlFlightOtaSearchResponseBody) SetRequestId(v string) *IntlFlightOtaSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBody) SetSuccess(v bool) *IntlFlightOtaSearchResponseBody {
	s.Success = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBody) SetTraceId(v string) *IntlFlightOtaSearchResponseBody {
	s.TraceId = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModule struct {
	FlightJourneyInfos []*IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos `json:"flight_journey_infos,omitempty" xml:"flight_journey_infos,omitempty" type:"Repeated"`
	ItemList           []*IntlFlightOtaSearchResponseBodyModuleItemList           `json:"item_list,omitempty" xml:"item_list,omitempty" type:"Repeated"`
}

func (s IntlFlightOtaSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModule) SetFlightJourneyInfos(v []*IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) *IntlFlightOtaSearchResponseBodyModule {
	s.FlightJourneyInfos = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModule) SetItemList(v []*IntlFlightOtaSearchResponseBodyModuleItemList) *IntlFlightOtaSearchResponseBodyModule {
	s.ItemList = v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos struct {
	// example:
	//
	// HGH
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 09:45
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// BJS
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 140
	Duration           *int32                                                                       `json:"duration,omitempty" xml:"duration,omitempty"`
	FlightSegmentInfos []*IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos `json:"flight_segment_infos,omitempty" xml:"flight_segment_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	TransferTime *int32 `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) SetArrCityCode(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) SetArrCityName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos {
	s.ArrCityName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) SetArrTime(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos {
	s.ArrTime = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) SetDepCityCode(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) SetDepCityName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos {
	s.DepCityName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) SetDepTime(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos {
	s.DepTime = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) SetDuration(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos {
	s.Duration = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) SetFlightSegmentInfos(v []*IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos {
	s.FlightSegmentInfos = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) SetJourneyIndex(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos {
	s.JourneyIndex = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos) SetTransferTime(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfos {
	s.TransferTime = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos struct {
	AirlineInfo    *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// BJS
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 09:45
	ArrTime        *string                                                                                  `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	BaggageDesc    *string                                                                                  `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
	DepAirportInfo *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// HGH
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 140
	Duration *int32 `json:"duration,omitempty" xml:"duration,omitempty"`
	// example:
	//
	// MU5131
	FlightNo        *string                                                                                   `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightShareInfo *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo `json:"flight_share_info,omitempty" xml:"flight_share_info,omitempty" type:"Struct"`
	FlightSize      *string                                                                                   `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	FlightStopInfo  *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo  `json:"flight_stop_info,omitempty" xml:"flight_stop_info,omitempty" type:"Struct"`
	// example:
	//
	// 320
	FlightType        *string                                                                                     `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	LuggageDirectInfo *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo `json:"luggage_direct_info,omitempty" xml:"luggage_direct_info,omitempty" type:"Struct"`
	Manufacturer      *string                                                                                     `json:"manufacturer,omitempty" xml:"manufacturer,omitempty"`
	MealDesc          *string                                                                                     `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	// example:
	//
	// 1200
	Miles *int32 `json:"miles,omitempty" xml:"miles,omitempty"`
	// example:
	//
	// 80%
	OnTimeRate *string `json:"on_time_rate,omitempty" xml:"on_time_rate,omitempty"`
	// example:
	//
	// 0
	OneMore     *int32  `json:"one_more,omitempty" xml:"one_more,omitempty"`
	OneMoreShow *string `json:"one_more_show,omitempty" xml:"one_more_show,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	// example:
	//
	// KN6728HGHPKX0725
	SegmentKey        *string                                                                                     `json:"segment_key,omitempty" xml:"segment_key,omitempty"`
	SegmentVisaRemark *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark `json:"segment_visa_remark,omitempty" xml:"segment_visa_remark,omitempty" type:"Struct"`
	// example:
	//
	// false
	Share           *bool   `json:"share,omitempty" xml:"share,omitempty"`
	ShortFlightSize *string `json:"short_flight_size,omitempty" xml:"short_flight_size,omitempty"`
	// example:
	//
	// false
	Stop         *bool   `json:"stop,omitempty" xml:"stop,omitempty"`
	TotalTime    *string `json:"total_time,omitempty" xml:"total_time,omitempty"`
	TransferTime *string `json:"transfer_time,omitempty" xml:"transfer_time,omitempty"`
	// example:
	//
	// 120
	TransferTimeNumber *int32 `json:"transfer_time_number,omitempty" xml:"transfer_time_number,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetAirlineInfo(v *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.AirlineInfo = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrAirportInfo(v *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrAirportInfo = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrCityCode(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrCityCode = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrCityName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrCityName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetArrTime(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ArrTime = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetBaggageDesc(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.BaggageDesc = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepAirportInfo(v *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepAirportInfo = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepCityCode(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepCityCode = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepCityName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepCityName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDepTime(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.DepTime = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetDuration(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Duration = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightNo(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightNo = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightShareInfo(v *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightShareInfo = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightSize(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightSize = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightStopInfo(v *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightStopInfo = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetFlightType(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.FlightType = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetLuggageDirectInfo(v *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.LuggageDirectInfo = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetManufacturer(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Manufacturer = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetMealDesc(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.MealDesc = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetMiles(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Miles = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetOnTimeRate(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.OnTimeRate = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetOneMore(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.OneMore = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetOneMoreShow(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.OneMoreShow = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetSegmentIndex(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.SegmentIndex = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetSegmentKey(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.SegmentKey = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetSegmentVisaRemark(v *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.SegmentVisaRemark = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetShare(v bool) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Share = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetShortFlightSize(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.ShortFlightSize = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetStop(v bool) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.Stop = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetTotalTime(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.TotalTime = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetTransferTime(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.TransferTime = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos) SetTransferTimeNumber(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfos {
	s.TransferTimeNumber = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// MU
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB15EXDFHY1gK0jSZTEXXXDQVXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineChineseName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineChineseShortName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineCode(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetAirlineIcon(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo) SetCheapFlight(v bool) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosAirlineInfo {
	s.CheapFlight = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo struct {
	// example:
	//
	// PKX
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// --
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportCode(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetAirportShortName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo) SetTerminal(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosArrAirportInfo {
	s.Terminal = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode      *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName      *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	AirportShortName *string `json:"airport_short_name,omitempty" xml:"airport_short_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportCode(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetAirportShortName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.AirportShortName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo) SetTerminal(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosDepAirportInfo {
	s.Terminal = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo struct {
	OperatingAirlineInfo *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo `json:"operating_airline_info,omitempty" xml:"operating_airline_info,omitempty" type:"Struct"`
	// example:
	//
	// CX601
	OperatingFlightNo *string `json:"operating_flight_no,omitempty" xml:"operating_flight_no,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) SetOperatingAirlineInfo(v *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo {
	s.OperatingAirlineInfo = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo) SetOperatingFlightNo(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfo {
	s.OperatingFlightNo = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo struct {
	AirlineChineseName      *string `json:"airline_chinese_name,omitempty" xml:"airline_chinese_name,omitempty"`
	AirlineChineseShortName *string `json:"airline_chinese_short_name,omitempty" xml:"airline_chinese_short_name,omitempty"`
	// example:
	//
	// DR
	AirlineCode *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/tfs/TB1gSXBFUT1gK0jSZFhXXaAtVXa-450-450.png_80x80.jpg
	AirlineIcon *string `json:"airline_icon,omitempty" xml:"airline_icon,omitempty"`
	// example:
	//
	// false
	CheapFlight *bool `json:"cheap_flight,omitempty" xml:"cheap_flight,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineChineseName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineChineseShortName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineChineseShortName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineCode(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetAirlineIcon(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.AirlineIcon = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo) SetCheapFlight(v bool) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightShareInfoOperatingAirlineInfo {
	s.CheapFlight = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo struct {
	// example:
	//
	// HGH
	StopAirport     *string `json:"stop_airport,omitempty" xml:"stop_airport,omitempty"`
	StopAirportName *string `json:"stop_airport_name,omitempty" xml:"stop_airport_name,omitempty"`
	// example:
	//
	// T3
	StopArrTerm *string `json:"stop_arr_term,omitempty" xml:"stop_arr_term,omitempty"`
	// example:
	//
	// BJS
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// HGH
	StopCityCode *string `json:"stop_city_code,omitempty" xml:"stop_city_code,omitempty"`
	// example:
	//
	// HGH
	StopCityName  *string   `json:"stop_city_name,omitempty" xml:"stop_city_name,omitempty"`
	StopCityNames []*string `json:"stop_city_names,omitempty" xml:"stop_city_names,omitempty" type:"Repeated"`
	// example:
	//
	// T4
	StopDepTerm *string `json:"stop_dep_term,omitempty" xml:"stop_dep_term,omitempty"`
	// example:
	//
	// 2023-08-13 07:25
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	StopTime    *string `json:"stop_time,omitempty" xml:"stop_time,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopAirport(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopAirport = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopAirportName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopAirportName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopArrTerm(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopArrTerm = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopArrTime(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopArrTime = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityCode(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityCode = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityName(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityName = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopCityNames(v []*string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopCityNames = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopDepTerm(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopDepTerm = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopDepTime(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopDepTime = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo) SetStopTime(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosFlightStopInfo {
	s.StopTime = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo struct {
	// example:
	//
	// 1
	DepCityLuggageDirect *int32 `json:"dep_city_luggage_direct,omitempty" xml:"dep_city_luggage_direct,omitempty"`
	// example:
	//
	// 0
	StopCityLuggageDirect *int32 `json:"stop_city_luggage_direct,omitempty" xml:"stop_city_luggage_direct,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo) SetDepCityLuggageDirect(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo {
	s.DepCityLuggageDirect = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo) SetStopCityLuggageDirect(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosLuggageDirectInfo {
	s.StopCityLuggageDirect = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark struct {
	DepCityVisaRemark *string `json:"dep_city_visa_remark,omitempty" xml:"dep_city_visa_remark,omitempty"`
	// example:
	//
	// 1
	DepCityVisaType     *int32    `json:"dep_city_visa_type,omitempty" xml:"dep_city_visa_type,omitempty"`
	StopCityVisaRemarks []*string `json:"stop_city_visa_remarks,omitempty" xml:"stop_city_visa_remarks,omitempty" type:"Repeated"`
	StopCityVisaTypes   []*int32  `json:"stop_city_visa_types,omitempty" xml:"stop_city_visa_types,omitempty" type:"Repeated"`
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) SetDepCityVisaRemark(v string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark {
	s.DepCityVisaRemark = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) SetDepCityVisaType(v int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark {
	s.DepCityVisaType = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) SetStopCityVisaRemarks(v []*string) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark {
	s.StopCityVisaRemarks = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark) SetStopCityVisaTypes(v []*int32) *IntlFlightOtaSearchResponseBodyModuleFlightJourneyInfosFlightSegmentInfosSegmentVisaRemark {
	s.StopCityVisaTypes = v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleItemList struct {
	AgreementPriceCodes []*string                                                          `json:"agreement_price_codes,omitempty" xml:"agreement_price_codes,omitempty" type:"Repeated"`
	FlightRuleInfoList  []*IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoList `json:"flight_rule_info_list,omitempty" xml:"flight_rule_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// e50d380fc05942cc8ac57af8ae02f448_0
	ItemId             *string                                                  `json:"item_id,omitempty" xml:"item_id,omitempty"`
	ItemType           *string                                                  `json:"item_type,omitempty" xml:"item_type,omitempty"`
	ShoppingItemMap    map[string]*ModuleItemListShoppingItemMapValue           `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
	SubItemPositionMap map[string][]*ModuleItemListSubItemPositionMapValue      `json:"sub_item_position_map,omitempty" xml:"sub_item_position_map,omitempty"`
	SubItems           []*IntlFlightOtaSearchResponseBodyModuleItemListSubItems `json:"sub_items,omitempty" xml:"sub_items,omitempty" type:"Repeated"`
}

func (s IntlFlightOtaSearchResponseBodyModuleItemList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleItemList) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemList) SetAgreementPriceCodes(v []*string) *IntlFlightOtaSearchResponseBodyModuleItemList {
	s.AgreementPriceCodes = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemList) SetFlightRuleInfoList(v []*IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoList) *IntlFlightOtaSearchResponseBodyModuleItemList {
	s.FlightRuleInfoList = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemList) SetItemId(v string) *IntlFlightOtaSearchResponseBodyModuleItemList {
	s.ItemId = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemList) SetItemType(v string) *IntlFlightOtaSearchResponseBodyModuleItemList {
	s.ItemType = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemList) SetShoppingItemMap(v map[string]*ModuleItemListShoppingItemMapValue) *IntlFlightOtaSearchResponseBodyModuleItemList {
	s.ShoppingItemMap = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemList) SetSubItemPositionMap(v map[string][]*ModuleItemListSubItemPositionMapValue) *IntlFlightOtaSearchResponseBodyModuleItemList {
	s.SubItemPositionMap = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemList) SetSubItems(v []*IntlFlightOtaSearchResponseBodyModuleItemListSubItems) *IntlFlightOtaSearchResponseBodyModuleItemList {
	s.SubItems = v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoList struct {
	FlightRuleInfo  *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListFlightRuleInfo  `json:"flight_rule_info,omitempty" xml:"flight_rule_info,omitempty" type:"Struct"`
	SegmentPosition *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoList) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoList) SetFlightRuleInfo(v *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListFlightRuleInfo) *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoList {
	s.FlightRuleInfo = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoList) SetSegmentPosition(v *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListSegmentPosition) *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoList {
	s.SegmentPosition = v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListFlightRuleInfo struct {
	BaggageDesc          *string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
	RefundChangeRuleDesc *string `json:"refund_change_rule_desc,omitempty" xml:"refund_change_rule_desc,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListFlightRuleInfo) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListFlightRuleInfo) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListFlightRuleInfo) SetBaggageDesc(v string) *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListFlightRuleInfo {
	s.BaggageDesc = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListFlightRuleInfo) SetRefundChangeRuleDesc(v string) *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListFlightRuleInfo {
	s.RefundChangeRuleDesc = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListSegmentPosition struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListSegmentPosition) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListSegmentPosition) SetJourneyIndex(v int32) *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListSegmentPosition) SetSegmentIndex(v int32) *IntlFlightOtaSearchResponseBodyModuleItemListFlightRuleInfoListSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleItemListSubItems struct {
	BaggageRule      *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule      `json:"baggage_rule,omitempty" xml:"baggage_rule,omitempty" type:"Struct"`
	RefundChangeRule *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule `json:"refund_change_rule,omitempty" xml:"refund_change_rule,omitempty" type:"Struct"`
	SegmentKeys      []*string                                                              `json:"segment_keys,omitempty" xml:"segment_keys,omitempty" type:"Repeated"`
	ShoppingItemMap  map[string]*ModuleItemListSubItemsShoppingItemMapValue                 `json:"shopping_item_map,omitempty" xml:"shopping_item_map,omitempty"`
	// example:
	//
	// 07df0bd9-f803-4a50-8449-f4bd675d9939
	UniqKey *string `json:"uniq_key,omitempty" xml:"uniq_key,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListSubItems) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListSubItems) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItems) SetBaggageRule(v *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule) *IntlFlightOtaSearchResponseBodyModuleItemListSubItems {
	s.BaggageRule = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItems) SetRefundChangeRule(v *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule) *IntlFlightOtaSearchResponseBodyModuleItemListSubItems {
	s.RefundChangeRule = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItems) SetSegmentKeys(v []*string) *IntlFlightOtaSearchResponseBodyModuleItemListSubItems {
	s.SegmentKeys = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItems) SetShoppingItemMap(v map[string]*ModuleItemListSubItemsShoppingItemMapValue) *IntlFlightOtaSearchResponseBodyModuleItemListSubItems {
	s.ShoppingItemMap = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItems) SetUniqKey(v string) *IntlFlightOtaSearchResponseBodyModuleItemListSubItems {
	s.UniqKey = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule struct {
	BaggageDigest  *string                                                            `json:"baggage_digest,omitempty" xml:"baggage_digest,omitempty"`
	BaggageInfoMap map[string][]*ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue `json:"baggage_info_map,omitempty" xml:"baggage_info_map,omitempty"`
	// example:
	//
	// true
	StructuredBaggage *bool `json:"structured_baggage,omitempty" xml:"structured_baggage,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule) SetBaggageDigest(v string) *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule {
	s.BaggageDigest = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule) SetBaggageInfoMap(v map[string][]*ModuleItemListSubItemsBaggageRuleBaggageInfoMapValue) *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule {
	s.BaggageInfoMap = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule) SetStructuredBaggage(v bool) *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsBaggageRule {
	s.StructuredBaggage = &v
	return s
}

type IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule struct {
	// example:
	//
	// true
	CancelFeeInd *bool `json:"cancel_fee_ind,omitempty" xml:"cancel_fee_ind,omitempty"`
	// example:
	//
	// true
	ChangeFeeInd        *bool                                                                        `json:"change_fee_ind,omitempty" xml:"change_fee_ind,omitempty"`
	OfferPenaltyInfoMap map[string][]*ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue `json:"offer_penalty_info_map,omitempty" xml:"offer_penalty_info_map,omitempty"`
	RefundChangeDigest  *string                                                                      `json:"refund_change_digest,omitempty" xml:"refund_change_digest,omitempty"`
	// example:
	//
	// false
	StructuredRefund *bool `json:"structured_refund,omitempty" xml:"structured_refund,omitempty"`
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule) SetCancelFeeInd(v bool) *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule {
	s.CancelFeeInd = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule) SetChangeFeeInd(v bool) *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule {
	s.ChangeFeeInd = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule) SetOfferPenaltyInfoMap(v map[string][]*ModuleItemListSubItemsRefundChangeRuleOfferPenaltyInfoMapValue) *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule {
	s.OfferPenaltyInfoMap = v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule) SetRefundChangeDigest(v string) *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule {
	s.RefundChangeDigest = &v
	return s
}

func (s *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule) SetStructuredRefund(v bool) *IntlFlightOtaSearchResponseBodyModuleItemListSubItemsRefundChangeRule {
	s.StructuredRefund = &v
	return s
}

type IntlFlightOtaSearchResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IntlFlightOtaSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IntlFlightOtaSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightOtaSearchResponse) GoString() string {
	return s.String()
}

func (s *IntlFlightOtaSearchResponse) SetHeaders(v map[string]*string) *IntlFlightOtaSearchResponse {
	s.Headers = v
	return s
}

func (s *IntlFlightOtaSearchResponse) SetStatusCode(v int32) *IntlFlightOtaSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *IntlFlightOtaSearchResponse) SetBody(v *IntlFlightOtaSearchResponseBody) *IntlFlightOtaSearchResponse {
	s.Body = v
	return s
}

type IntlFlightSegmentAvailableCertHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s IntlFlightSegmentAvailableCertHeaders) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightSegmentAvailableCertHeaders) GoString() string {
	return s.String()
}

func (s *IntlFlightSegmentAvailableCertHeaders) SetCommonHeaders(v map[string]*string) *IntlFlightSegmentAvailableCertHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IntlFlightSegmentAvailableCertHeaders) SetXAcsBtripCorpToken(v string) *IntlFlightSegmentAvailableCertHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type IntlFlightSegmentAvailableCertRequest struct {
	// example:
	//
	// ZJTD
	IsvName *string `json:"isv_name,omitempty" xml:"isv_name,omitempty"`
	// example:
	//
	// chinese
	Language *string `json:"language,omitempty" xml:"language,omitempty"`
	// example:
	//
	// 21341234
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s IntlFlightSegmentAvailableCertRequest) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightSegmentAvailableCertRequest) GoString() string {
	return s.String()
}

func (s *IntlFlightSegmentAvailableCertRequest) SetIsvName(v string) *IntlFlightSegmentAvailableCertRequest {
	s.IsvName = &v
	return s
}

func (s *IntlFlightSegmentAvailableCertRequest) SetLanguage(v string) *IntlFlightSegmentAvailableCertRequest {
	s.Language = &v
	return s
}

func (s *IntlFlightSegmentAvailableCertRequest) SetUserId(v string) *IntlFlightSegmentAvailableCertRequest {
	s.UserId = &v
	return s
}

func (s *IntlFlightSegmentAvailableCertRequest) SetUserName(v string) *IntlFlightSegmentAvailableCertRequest {
	s.UserName = &v
	return s
}

type IntlFlightSegmentAvailableCertResponseBody struct {
	Module *IntlFlightSegmentAvailableCertResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 210bc81a17090871660176894d008c
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// 0
	ResultCode *string `json:"result_code,omitempty" xml:"result_code,omitempty"`
	ResultMsg  *string `json:"result_msg,omitempty" xml:"result_msg,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 213e1ea516895592036143147e5864
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s IntlFlightSegmentAvailableCertResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightSegmentAvailableCertResponseBody) GoString() string {
	return s.String()
}

func (s *IntlFlightSegmentAvailableCertResponseBody) SetModule(v *IntlFlightSegmentAvailableCertResponseBodyModule) *IntlFlightSegmentAvailableCertResponseBody {
	s.Module = v
	return s
}

func (s *IntlFlightSegmentAvailableCertResponseBody) SetRequestId(v string) *IntlFlightSegmentAvailableCertResponseBody {
	s.RequestId = &v
	return s
}

func (s *IntlFlightSegmentAvailableCertResponseBody) SetResultCode(v string) *IntlFlightSegmentAvailableCertResponseBody {
	s.ResultCode = &v
	return s
}

func (s *IntlFlightSegmentAvailableCertResponseBody) SetResultMsg(v string) *IntlFlightSegmentAvailableCertResponseBody {
	s.ResultMsg = &v
	return s
}

func (s *IntlFlightSegmentAvailableCertResponseBody) SetSuccess(v bool) *IntlFlightSegmentAvailableCertResponseBody {
	s.Success = &v
	return s
}

func (s *IntlFlightSegmentAvailableCertResponseBody) SetTraceId(v string) *IntlFlightSegmentAvailableCertResponseBody {
	s.TraceId = &v
	return s
}

type IntlFlightSegmentAvailableCertResponseBodyModule struct {
	SegmentAvailableCertList []*IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertList `json:"segment_available_cert_list,omitempty" xml:"segment_available_cert_list,omitempty" type:"Repeated"`
}

func (s IntlFlightSegmentAvailableCertResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightSegmentAvailableCertResponseBodyModule) GoString() string {
	return s.String()
}

func (s *IntlFlightSegmentAvailableCertResponseBodyModule) SetSegmentAvailableCertList(v []*IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertList) *IntlFlightSegmentAvailableCertResponseBodyModule {
	s.SegmentAvailableCertList = v
	return s
}

type IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertList struct {
	CertTypes       []*int32                                                                                 `json:"cert_types,omitempty" xml:"cert_types,omitempty" type:"Repeated"`
	SegmentPosition *IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertListSegmentPosition `json:"segment_position,omitempty" xml:"segment_position,omitempty" type:"Struct"`
}

func (s IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertList) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertList) GoString() string {
	return s.String()
}

func (s *IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertList) SetCertTypes(v []*int32) *IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertList {
	s.CertTypes = v
	return s
}

func (s *IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertList) SetSegmentPosition(v *IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertListSegmentPosition) *IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertList {
	s.SegmentPosition = v
	return s
}

type IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertListSegmentPosition struct {
	// example:
	//
	// 0
	JourneyIndex *int32 `json:"journey_index,omitempty" xml:"journey_index,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
}

func (s IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertListSegmentPosition) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertListSegmentPosition) GoString() string {
	return s.String()
}

func (s *IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertListSegmentPosition) SetJourneyIndex(v int32) *IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertListSegmentPosition {
	s.JourneyIndex = &v
	return s
}

func (s *IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertListSegmentPosition) SetSegmentIndex(v int32) *IntlFlightSegmentAvailableCertResponseBodyModuleSegmentAvailableCertListSegmentPosition {
	s.SegmentIndex = &v
	return s
}

type IntlFlightSegmentAvailableCertResponse struct {
	Headers    map[string]*string                          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IntlFlightSegmentAvailableCertResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IntlFlightSegmentAvailableCertResponse) String() string {
	return tea.Prettify(s)
}

func (s IntlFlightSegmentAvailableCertResponse) GoString() string {
	return s.String()
}

func (s *IntlFlightSegmentAvailableCertResponse) SetHeaders(v map[string]*string) *IntlFlightSegmentAvailableCertResponse {
	s.Headers = v
	return s
}

func (s *IntlFlightSegmentAvailableCertResponse) SetStatusCode(v int32) *IntlFlightSegmentAvailableCertResponse {
	s.StatusCode = &v
	return s
}

func (s *IntlFlightSegmentAvailableCertResponse) SetBody(v *IntlFlightSegmentAvailableCertResponseBody) *IntlFlightSegmentAvailableCertResponse {
	s.Body = v
	return s
}

type InvoiceAddHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s InvoiceAddHeaders) String() string {
	return tea.Prettify(s)
}

func (s InvoiceAddHeaders) GoString() string {
	return s.String()
}

func (s *InvoiceAddHeaders) SetCommonHeaders(v map[string]*string) *InvoiceAddHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InvoiceAddHeaders) SetXAcsBtripSoCorpToken(v string) *InvoiceAddHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type InvoiceAddRequest struct {
	// example:
	//
	// xxx
	Address  *string `json:"address,omitempty" xml:"address,omitempty"`
	BankName *string `json:"bank_name,omitempty" xml:"bank_name,omitempty"`
	// example:
	//
	// 123456
	BankNo *string `json:"bank_no,omitempty" xml:"bank_no,omitempty"`
	// example:
	//
	// 12345
	TaxNo *string `json:"tax_no,omitempty" xml:"tax_no,omitempty"`
	// example:
	//
	// 123
	Tel *string `json:"tel,omitempty" xml:"tel,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
	// This parameter is required.
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Type     *int32 `json:"type,omitempty" xml:"type,omitempty"`
	UnitType *int32 `json:"unit_type,omitempty" xml:"unit_type,omitempty"`
}

func (s InvoiceAddRequest) String() string {
	return tea.Prettify(s)
}

func (s InvoiceAddRequest) GoString() string {
	return s.String()
}

func (s *InvoiceAddRequest) SetAddress(v string) *InvoiceAddRequest {
	s.Address = &v
	return s
}

func (s *InvoiceAddRequest) SetBankName(v string) *InvoiceAddRequest {
	s.BankName = &v
	return s
}

func (s *InvoiceAddRequest) SetBankNo(v string) *InvoiceAddRequest {
	s.BankNo = &v
	return s
}

func (s *InvoiceAddRequest) SetTaxNo(v string) *InvoiceAddRequest {
	s.TaxNo = &v
	return s
}

func (s *InvoiceAddRequest) SetTel(v string) *InvoiceAddRequest {
	s.Tel = &v
	return s
}

func (s *InvoiceAddRequest) SetThirdPartId(v string) *InvoiceAddRequest {
	s.ThirdPartId = &v
	return s
}

func (s *InvoiceAddRequest) SetTitle(v string) *InvoiceAddRequest {
	s.Title = &v
	return s
}

func (s *InvoiceAddRequest) SetType(v int32) *InvoiceAddRequest {
	s.Type = &v
	return s
}

func (s *InvoiceAddRequest) SetUnitType(v int32) *InvoiceAddRequest {
	s.UnitType = &v
	return s
}

type InvoiceAddResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InvoiceAddResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InvoiceAddResponseBody) GoString() string {
	return s.String()
}

func (s *InvoiceAddResponseBody) SetCode(v string) *InvoiceAddResponseBody {
	s.Code = &v
	return s
}

func (s *InvoiceAddResponseBody) SetMessage(v string) *InvoiceAddResponseBody {
	s.Message = &v
	return s
}

func (s *InvoiceAddResponseBody) SetRequestId(v string) *InvoiceAddResponseBody {
	s.RequestId = &v
	return s
}

func (s *InvoiceAddResponseBody) SetSuccess(v bool) *InvoiceAddResponseBody {
	s.Success = &v
	return s
}

func (s *InvoiceAddResponseBody) SetTraceId(v string) *InvoiceAddResponseBody {
	s.TraceId = &v
	return s
}

type InvoiceAddResponse struct {
	Headers    map[string]*string      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InvoiceAddResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InvoiceAddResponse) String() string {
	return tea.Prettify(s)
}

func (s InvoiceAddResponse) GoString() string {
	return s.String()
}

func (s *InvoiceAddResponse) SetHeaders(v map[string]*string) *InvoiceAddResponse {
	s.Headers = v
	return s
}

func (s *InvoiceAddResponse) SetStatusCode(v int32) *InvoiceAddResponse {
	s.StatusCode = &v
	return s
}

func (s *InvoiceAddResponse) SetBody(v *InvoiceAddResponseBody) *InvoiceAddResponse {
	s.Body = v
	return s
}

type InvoiceDeleteHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s InvoiceDeleteHeaders) String() string {
	return tea.Prettify(s)
}

func (s InvoiceDeleteHeaders) GoString() string {
	return s.String()
}

func (s *InvoiceDeleteHeaders) SetCommonHeaders(v map[string]*string) *InvoiceDeleteHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InvoiceDeleteHeaders) SetXAcsBtripSoCorpToken(v string) *InvoiceDeleteHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type InvoiceDeleteRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s InvoiceDeleteRequest) String() string {
	return tea.Prettify(s)
}

func (s InvoiceDeleteRequest) GoString() string {
	return s.String()
}

func (s *InvoiceDeleteRequest) SetThirdPartId(v string) *InvoiceDeleteRequest {
	s.ThirdPartId = &v
	return s
}

type InvoiceDeleteResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InvoiceDeleteResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InvoiceDeleteResponseBody) GoString() string {
	return s.String()
}

func (s *InvoiceDeleteResponseBody) SetCode(v string) *InvoiceDeleteResponseBody {
	s.Code = &v
	return s
}

func (s *InvoiceDeleteResponseBody) SetMessage(v string) *InvoiceDeleteResponseBody {
	s.Message = &v
	return s
}

func (s *InvoiceDeleteResponseBody) SetRequestId(v string) *InvoiceDeleteResponseBody {
	s.RequestId = &v
	return s
}

func (s *InvoiceDeleteResponseBody) SetSuccess(v bool) *InvoiceDeleteResponseBody {
	s.Success = &v
	return s
}

func (s *InvoiceDeleteResponseBody) SetTraceId(v string) *InvoiceDeleteResponseBody {
	s.TraceId = &v
	return s
}

type InvoiceDeleteResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InvoiceDeleteResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InvoiceDeleteResponse) String() string {
	return tea.Prettify(s)
}

func (s InvoiceDeleteResponse) GoString() string {
	return s.String()
}

func (s *InvoiceDeleteResponse) SetHeaders(v map[string]*string) *InvoiceDeleteResponse {
	s.Headers = v
	return s
}

func (s *InvoiceDeleteResponse) SetStatusCode(v int32) *InvoiceDeleteResponse {
	s.StatusCode = &v
	return s
}

func (s *InvoiceDeleteResponse) SetBody(v *InvoiceDeleteResponseBody) *InvoiceDeleteResponse {
	s.Body = v
	return s
}

type InvoiceModifyHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s InvoiceModifyHeaders) String() string {
	return tea.Prettify(s)
}

func (s InvoiceModifyHeaders) GoString() string {
	return s.String()
}

func (s *InvoiceModifyHeaders) SetCommonHeaders(v map[string]*string) *InvoiceModifyHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InvoiceModifyHeaders) SetXAcsBtripSoCorpToken(v string) *InvoiceModifyHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type InvoiceModifyRequest struct {
	Address *string `json:"address,omitempty" xml:"address,omitempty"`
	// example:
	//
	// 12345678
	BankName *string `json:"bank_name,omitempty" xml:"bank_name,omitempty"`
	// example:
	//
	// 2222
	BankNo *string `json:"bank_no,omitempty" xml:"bank_no,omitempty"`
	// example:
	//
	// 122333121
	TaxNo *string `json:"tax_no,omitempty" xml:"tax_no,omitempty"`
	// example:
	//
	// 12345678
	Tel *string `json:"tel,omitempty" xml:"tel,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
	// This parameter is required.
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Type     *int32 `json:"type,omitempty" xml:"type,omitempty"`
	UnitType *int32 `json:"unit_type,omitempty" xml:"unit_type,omitempty"`
}

func (s InvoiceModifyRequest) String() string {
	return tea.Prettify(s)
}

func (s InvoiceModifyRequest) GoString() string {
	return s.String()
}

func (s *InvoiceModifyRequest) SetAddress(v string) *InvoiceModifyRequest {
	s.Address = &v
	return s
}

func (s *InvoiceModifyRequest) SetBankName(v string) *InvoiceModifyRequest {
	s.BankName = &v
	return s
}

func (s *InvoiceModifyRequest) SetBankNo(v string) *InvoiceModifyRequest {
	s.BankNo = &v
	return s
}

func (s *InvoiceModifyRequest) SetTaxNo(v string) *InvoiceModifyRequest {
	s.TaxNo = &v
	return s
}

func (s *InvoiceModifyRequest) SetTel(v string) *InvoiceModifyRequest {
	s.Tel = &v
	return s
}

func (s *InvoiceModifyRequest) SetThirdPartId(v string) *InvoiceModifyRequest {
	s.ThirdPartId = &v
	return s
}

func (s *InvoiceModifyRequest) SetTitle(v string) *InvoiceModifyRequest {
	s.Title = &v
	return s
}

func (s *InvoiceModifyRequest) SetType(v int32) *InvoiceModifyRequest {
	s.Type = &v
	return s
}

func (s *InvoiceModifyRequest) SetUnitType(v int32) *InvoiceModifyRequest {
	s.UnitType = &v
	return s
}

type InvoiceModifyResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InvoiceModifyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InvoiceModifyResponseBody) GoString() string {
	return s.String()
}

func (s *InvoiceModifyResponseBody) SetCode(v string) *InvoiceModifyResponseBody {
	s.Code = &v
	return s
}

func (s *InvoiceModifyResponseBody) SetMessage(v string) *InvoiceModifyResponseBody {
	s.Message = &v
	return s
}

func (s *InvoiceModifyResponseBody) SetRequestId(v string) *InvoiceModifyResponseBody {
	s.RequestId = &v
	return s
}

func (s *InvoiceModifyResponseBody) SetSuccess(v bool) *InvoiceModifyResponseBody {
	s.Success = &v
	return s
}

func (s *InvoiceModifyResponseBody) SetTraceId(v string) *InvoiceModifyResponseBody {
	s.TraceId = &v
	return s
}

type InvoiceModifyResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InvoiceModifyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InvoiceModifyResponse) String() string {
	return tea.Prettify(s)
}

func (s InvoiceModifyResponse) GoString() string {
	return s.String()
}

func (s *InvoiceModifyResponse) SetHeaders(v map[string]*string) *InvoiceModifyResponse {
	s.Headers = v
	return s
}

func (s *InvoiceModifyResponse) SetStatusCode(v int32) *InvoiceModifyResponse {
	s.StatusCode = &v
	return s
}

func (s *InvoiceModifyResponse) SetBody(v *InvoiceModifyResponseBody) *InvoiceModifyResponse {
	s.Body = v
	return s
}

type InvoiceRuleAddHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s InvoiceRuleAddHeaders) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleAddHeaders) GoString() string {
	return s.String()
}

func (s *InvoiceRuleAddHeaders) SetCommonHeaders(v map[string]*string) *InvoiceRuleAddHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InvoiceRuleAddHeaders) SetXAcsBtripCorpToken(v string) *InvoiceRuleAddHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type InvoiceRuleAddRequest struct {
	// This parameter is required.
	Entities []*InvoiceRuleAddRequestEntities `json:"entities,omitempty" xml:"entities,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 4854821
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s InvoiceRuleAddRequest) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleAddRequest) GoString() string {
	return s.String()
}

func (s *InvoiceRuleAddRequest) SetEntities(v []*InvoiceRuleAddRequestEntities) *InvoiceRuleAddRequest {
	s.Entities = v
	return s
}

func (s *InvoiceRuleAddRequest) SetThirdPartId(v string) *InvoiceRuleAddRequest {
	s.ThirdPartId = &v
	return s
}

type InvoiceRuleAddRequestEntities struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	EntityId *string `json:"entity_id,omitempty" xml:"entity_id,omitempty"`
	// This parameter is required.
	EntityName *string `json:"entity_name,omitempty" xml:"entity_name,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	EntityType *string `json:"entity_type,omitempty" xml:"entity_type,omitempty"`
}

func (s InvoiceRuleAddRequestEntities) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleAddRequestEntities) GoString() string {
	return s.String()
}

func (s *InvoiceRuleAddRequestEntities) SetEntityId(v string) *InvoiceRuleAddRequestEntities {
	s.EntityId = &v
	return s
}

func (s *InvoiceRuleAddRequestEntities) SetEntityName(v string) *InvoiceRuleAddRequestEntities {
	s.EntityName = &v
	return s
}

func (s *InvoiceRuleAddRequestEntities) SetEntityType(v string) *InvoiceRuleAddRequestEntities {
	s.EntityType = &v
	return s
}

type InvoiceRuleAddShrinkRequest struct {
	// This parameter is required.
	EntitiesShrink *string `json:"entities,omitempty" xml:"entities,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 4854821
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s InvoiceRuleAddShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleAddShrinkRequest) GoString() string {
	return s.String()
}

func (s *InvoiceRuleAddShrinkRequest) SetEntitiesShrink(v string) *InvoiceRuleAddShrinkRequest {
	s.EntitiesShrink = &v
	return s
}

func (s *InvoiceRuleAddShrinkRequest) SetThirdPartId(v string) *InvoiceRuleAddShrinkRequest {
	s.ThirdPartId = &v
	return s
}

type InvoiceRuleAddResponseBody struct {
	// example:
	//
	// 200
	Code    *string                           `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                           `json:"message,omitempty" xml:"message,omitempty"`
	Module  *InvoiceRuleAddResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InvoiceRuleAddResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleAddResponseBody) GoString() string {
	return s.String()
}

func (s *InvoiceRuleAddResponseBody) SetCode(v string) *InvoiceRuleAddResponseBody {
	s.Code = &v
	return s
}

func (s *InvoiceRuleAddResponseBody) SetMessage(v string) *InvoiceRuleAddResponseBody {
	s.Message = &v
	return s
}

func (s *InvoiceRuleAddResponseBody) SetModule(v *InvoiceRuleAddResponseBodyModule) *InvoiceRuleAddResponseBody {
	s.Module = v
	return s
}

func (s *InvoiceRuleAddResponseBody) SetRequestId(v string) *InvoiceRuleAddResponseBody {
	s.RequestId = &v
	return s
}

func (s *InvoiceRuleAddResponseBody) SetSuccess(v bool) *InvoiceRuleAddResponseBody {
	s.Success = &v
	return s
}

func (s *InvoiceRuleAddResponseBody) SetTraceId(v string) *InvoiceRuleAddResponseBody {
	s.TraceId = &v
	return s
}

type InvoiceRuleAddResponseBodyModule struct {
	// example:
	//
	// 1
	AddNum *int32 `json:"add_num,omitempty" xml:"add_num,omitempty"`
	// example:
	//
	// 1
	SelectedUserNum *int32 `json:"selected_user_num,omitempty" xml:"selected_user_num,omitempty"`
}

func (s InvoiceRuleAddResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleAddResponseBodyModule) GoString() string {
	return s.String()
}

func (s *InvoiceRuleAddResponseBodyModule) SetAddNum(v int32) *InvoiceRuleAddResponseBodyModule {
	s.AddNum = &v
	return s
}

func (s *InvoiceRuleAddResponseBodyModule) SetSelectedUserNum(v int32) *InvoiceRuleAddResponseBodyModule {
	s.SelectedUserNum = &v
	return s
}

type InvoiceRuleAddResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InvoiceRuleAddResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InvoiceRuleAddResponse) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleAddResponse) GoString() string {
	return s.String()
}

func (s *InvoiceRuleAddResponse) SetHeaders(v map[string]*string) *InvoiceRuleAddResponse {
	s.Headers = v
	return s
}

func (s *InvoiceRuleAddResponse) SetStatusCode(v int32) *InvoiceRuleAddResponse {
	s.StatusCode = &v
	return s
}

func (s *InvoiceRuleAddResponse) SetBody(v *InvoiceRuleAddResponseBody) *InvoiceRuleAddResponse {
	s.Body = v
	return s
}

type InvoiceRuleDeleteHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s InvoiceRuleDeleteHeaders) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleDeleteHeaders) GoString() string {
	return s.String()
}

func (s *InvoiceRuleDeleteHeaders) SetCommonHeaders(v map[string]*string) *InvoiceRuleDeleteHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InvoiceRuleDeleteHeaders) SetXAcsBtripCorpToken(v string) *InvoiceRuleDeleteHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type InvoiceRuleDeleteRequest struct {
	// example:
	//
	// false
	DelAll   *bool                               `json:"del_all,omitempty" xml:"del_all,omitempty"`
	Entities []*InvoiceRuleDeleteRequestEntities `json:"entities,omitempty" xml:"entities,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s InvoiceRuleDeleteRequest) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleDeleteRequest) GoString() string {
	return s.String()
}

func (s *InvoiceRuleDeleteRequest) SetDelAll(v bool) *InvoiceRuleDeleteRequest {
	s.DelAll = &v
	return s
}

func (s *InvoiceRuleDeleteRequest) SetEntities(v []*InvoiceRuleDeleteRequestEntities) *InvoiceRuleDeleteRequest {
	s.Entities = v
	return s
}

func (s *InvoiceRuleDeleteRequest) SetThirdPartId(v string) *InvoiceRuleDeleteRequest {
	s.ThirdPartId = &v
	return s
}

type InvoiceRuleDeleteRequestEntities struct {
	// example:
	//
	// 12345
	EntityId *string `json:"entity_id,omitempty" xml:"entity_id,omitempty"`
	// example:
	//
	// 1
	EntityType *string `json:"entity_type,omitempty" xml:"entity_type,omitempty"`
}

func (s InvoiceRuleDeleteRequestEntities) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleDeleteRequestEntities) GoString() string {
	return s.String()
}

func (s *InvoiceRuleDeleteRequestEntities) SetEntityId(v string) *InvoiceRuleDeleteRequestEntities {
	s.EntityId = &v
	return s
}

func (s *InvoiceRuleDeleteRequestEntities) SetEntityType(v string) *InvoiceRuleDeleteRequestEntities {
	s.EntityType = &v
	return s
}

type InvoiceRuleDeleteShrinkRequest struct {
	// example:
	//
	// false
	DelAll         *bool   `json:"del_all,omitempty" xml:"del_all,omitempty"`
	EntitiesShrink *string `json:"entities,omitempty" xml:"entities,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s InvoiceRuleDeleteShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleDeleteShrinkRequest) GoString() string {
	return s.String()
}

func (s *InvoiceRuleDeleteShrinkRequest) SetDelAll(v bool) *InvoiceRuleDeleteShrinkRequest {
	s.DelAll = &v
	return s
}

func (s *InvoiceRuleDeleteShrinkRequest) SetEntitiesShrink(v string) *InvoiceRuleDeleteShrinkRequest {
	s.EntitiesShrink = &v
	return s
}

func (s *InvoiceRuleDeleteShrinkRequest) SetThirdPartId(v string) *InvoiceRuleDeleteShrinkRequest {
	s.ThirdPartId = &v
	return s
}

type InvoiceRuleDeleteResponseBody struct {
	// example:
	//
	// 200
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  *InvoiceRuleDeleteResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InvoiceRuleDeleteResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleDeleteResponseBody) GoString() string {
	return s.String()
}

func (s *InvoiceRuleDeleteResponseBody) SetCode(v string) *InvoiceRuleDeleteResponseBody {
	s.Code = &v
	return s
}

func (s *InvoiceRuleDeleteResponseBody) SetMessage(v string) *InvoiceRuleDeleteResponseBody {
	s.Message = &v
	return s
}

func (s *InvoiceRuleDeleteResponseBody) SetModule(v *InvoiceRuleDeleteResponseBodyModule) *InvoiceRuleDeleteResponseBody {
	s.Module = v
	return s
}

func (s *InvoiceRuleDeleteResponseBody) SetRequestId(v string) *InvoiceRuleDeleteResponseBody {
	s.RequestId = &v
	return s
}

func (s *InvoiceRuleDeleteResponseBody) SetSuccess(v bool) *InvoiceRuleDeleteResponseBody {
	s.Success = &v
	return s
}

func (s *InvoiceRuleDeleteResponseBody) SetTraceId(v string) *InvoiceRuleDeleteResponseBody {
	s.TraceId = &v
	return s
}

type InvoiceRuleDeleteResponseBodyModule struct {
	// example:
	//
	// 1
	RemoveNum *int32 `json:"remove_num,omitempty" xml:"remove_num,omitempty"`
	// example:
	//
	// 0
	SelectedUserNum *int32 `json:"selected_user_num,omitempty" xml:"selected_user_num,omitempty"`
}

func (s InvoiceRuleDeleteResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleDeleteResponseBodyModule) GoString() string {
	return s.String()
}

func (s *InvoiceRuleDeleteResponseBodyModule) SetRemoveNum(v int32) *InvoiceRuleDeleteResponseBodyModule {
	s.RemoveNum = &v
	return s
}

func (s *InvoiceRuleDeleteResponseBodyModule) SetSelectedUserNum(v int32) *InvoiceRuleDeleteResponseBodyModule {
	s.SelectedUserNum = &v
	return s
}

type InvoiceRuleDeleteResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InvoiceRuleDeleteResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InvoiceRuleDeleteResponse) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleDeleteResponse) GoString() string {
	return s.String()
}

func (s *InvoiceRuleDeleteResponse) SetHeaders(v map[string]*string) *InvoiceRuleDeleteResponse {
	s.Headers = v
	return s
}

func (s *InvoiceRuleDeleteResponse) SetStatusCode(v int32) *InvoiceRuleDeleteResponse {
	s.StatusCode = &v
	return s
}

func (s *InvoiceRuleDeleteResponse) SetBody(v *InvoiceRuleDeleteResponseBody) *InvoiceRuleDeleteResponse {
	s.Body = v
	return s
}

type InvoiceRuleSaveHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s InvoiceRuleSaveHeaders) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleSaveHeaders) GoString() string {
	return s.String()
}

func (s *InvoiceRuleSaveHeaders) SetCommonHeaders(v map[string]*string) *InvoiceRuleSaveHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InvoiceRuleSaveHeaders) SetXAcsBtripSoCorpToken(v string) *InvoiceRuleSaveHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type InvoiceRuleSaveRequest struct {
	// example:
	//
	// true
	AllEmploye *bool                             `json:"all_employe,omitempty" xml:"all_employe,omitempty"`
	Entities   []*InvoiceRuleSaveRequestEntities `json:"entities,omitempty" xml:"entities,omitempty" type:"Repeated"`
	Scope      *int32                            `json:"scope,omitempty" xml:"scope,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// i123
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s InvoiceRuleSaveRequest) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleSaveRequest) GoString() string {
	return s.String()
}

func (s *InvoiceRuleSaveRequest) SetAllEmploye(v bool) *InvoiceRuleSaveRequest {
	s.AllEmploye = &v
	return s
}

func (s *InvoiceRuleSaveRequest) SetEntities(v []*InvoiceRuleSaveRequestEntities) *InvoiceRuleSaveRequest {
	s.Entities = v
	return s
}

func (s *InvoiceRuleSaveRequest) SetScope(v int32) *InvoiceRuleSaveRequest {
	s.Scope = &v
	return s
}

func (s *InvoiceRuleSaveRequest) SetThirdPartId(v string) *InvoiceRuleSaveRequest {
	s.ThirdPartId = &v
	return s
}

type InvoiceRuleSaveRequestEntities struct {
	// example:
	//
	// 123
	Id   *string `json:"id,omitempty" xml:"id,omitempty"`
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s InvoiceRuleSaveRequestEntities) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleSaveRequestEntities) GoString() string {
	return s.String()
}

func (s *InvoiceRuleSaveRequestEntities) SetId(v string) *InvoiceRuleSaveRequestEntities {
	s.Id = &v
	return s
}

func (s *InvoiceRuleSaveRequestEntities) SetName(v string) *InvoiceRuleSaveRequestEntities {
	s.Name = &v
	return s
}

func (s *InvoiceRuleSaveRequestEntities) SetType(v int32) *InvoiceRuleSaveRequestEntities {
	s.Type = &v
	return s
}

type InvoiceRuleSaveShrinkRequest struct {
	// example:
	//
	// true
	AllEmploye     *bool   `json:"all_employe,omitempty" xml:"all_employe,omitempty"`
	EntitiesShrink *string `json:"entities,omitempty" xml:"entities,omitempty"`
	Scope          *int32  `json:"scope,omitempty" xml:"scope,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// i123
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s InvoiceRuleSaveShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleSaveShrinkRequest) GoString() string {
	return s.String()
}

func (s *InvoiceRuleSaveShrinkRequest) SetAllEmploye(v bool) *InvoiceRuleSaveShrinkRequest {
	s.AllEmploye = &v
	return s
}

func (s *InvoiceRuleSaveShrinkRequest) SetEntitiesShrink(v string) *InvoiceRuleSaveShrinkRequest {
	s.EntitiesShrink = &v
	return s
}

func (s *InvoiceRuleSaveShrinkRequest) SetScope(v int32) *InvoiceRuleSaveShrinkRequest {
	s.Scope = &v
	return s
}

func (s *InvoiceRuleSaveShrinkRequest) SetThirdPartId(v string) *InvoiceRuleSaveShrinkRequest {
	s.ThirdPartId = &v
	return s
}

type InvoiceRuleSaveResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                            `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                            `json:"message,omitempty" xml:"message,omitempty"`
	Module  *InvoiceRuleSaveResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 8465F68D-BC97-5C0F-9161-3E65919D9135
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InvoiceRuleSaveResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleSaveResponseBody) GoString() string {
	return s.String()
}

func (s *InvoiceRuleSaveResponseBody) SetCode(v string) *InvoiceRuleSaveResponseBody {
	s.Code = &v
	return s
}

func (s *InvoiceRuleSaveResponseBody) SetMessage(v string) *InvoiceRuleSaveResponseBody {
	s.Message = &v
	return s
}

func (s *InvoiceRuleSaveResponseBody) SetModule(v *InvoiceRuleSaveResponseBodyModule) *InvoiceRuleSaveResponseBody {
	s.Module = v
	return s
}

func (s *InvoiceRuleSaveResponseBody) SetRequestId(v string) *InvoiceRuleSaveResponseBody {
	s.RequestId = &v
	return s
}

func (s *InvoiceRuleSaveResponseBody) SetSuccess(v bool) *InvoiceRuleSaveResponseBody {
	s.Success = &v
	return s
}

func (s *InvoiceRuleSaveResponseBody) SetTraceId(v string) *InvoiceRuleSaveResponseBody {
	s.TraceId = &v
	return s
}

type InvoiceRuleSaveResponseBodyModule struct {
	// example:
	//
	// 1
	AddNum *int32 `json:"add_num,omitempty" xml:"add_num,omitempty"`
	// example:
	//
	// 1
	RemoveNum *int32 `json:"remove_num,omitempty" xml:"remove_num,omitempty"`
}

func (s InvoiceRuleSaveResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleSaveResponseBodyModule) GoString() string {
	return s.String()
}

func (s *InvoiceRuleSaveResponseBodyModule) SetAddNum(v int32) *InvoiceRuleSaveResponseBodyModule {
	s.AddNum = &v
	return s
}

func (s *InvoiceRuleSaveResponseBodyModule) SetRemoveNum(v int32) *InvoiceRuleSaveResponseBodyModule {
	s.RemoveNum = &v
	return s
}

type InvoiceRuleSaveResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InvoiceRuleSaveResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InvoiceRuleSaveResponse) String() string {
	return tea.Prettify(s)
}

func (s InvoiceRuleSaveResponse) GoString() string {
	return s.String()
}

func (s *InvoiceRuleSaveResponse) SetHeaders(v map[string]*string) *InvoiceRuleSaveResponse {
	s.Headers = v
	return s
}

func (s *InvoiceRuleSaveResponse) SetStatusCode(v int32) *InvoiceRuleSaveResponse {
	s.StatusCode = &v
	return s
}

func (s *InvoiceRuleSaveResponse) SetBody(v *InvoiceRuleSaveResponseBody) *InvoiceRuleSaveResponse {
	s.Body = v
	return s
}

type InvoiceSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s InvoiceSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s InvoiceSearchHeaders) GoString() string {
	return s.String()
}

func (s *InvoiceSearchHeaders) SetCommonHeaders(v map[string]*string) *InvoiceSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *InvoiceSearchHeaders) SetXAcsBtripSoCorpToken(v string) *InvoiceSearchHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type InvoiceSearchRequest struct {
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
	Title       *string `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 12345
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s InvoiceSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s InvoiceSearchRequest) GoString() string {
	return s.String()
}

func (s *InvoiceSearchRequest) SetThirdPartId(v string) *InvoiceSearchRequest {
	s.ThirdPartId = &v
	return s
}

func (s *InvoiceSearchRequest) SetTitle(v string) *InvoiceSearchRequest {
	s.Title = &v
	return s
}

func (s *InvoiceSearchRequest) SetUserId(v string) *InvoiceSearchRequest {
	s.UserId = &v
	return s
}

type InvoiceSearchResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                            `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                            `json:"message,omitempty" xml:"message,omitempty"`
	Module  []*InvoiceSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// EB68C364-F9A0-5046-910A-2DD92C277E71
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s InvoiceSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s InvoiceSearchResponseBody) GoString() string {
	return s.String()
}

func (s *InvoiceSearchResponseBody) SetCode(v string) *InvoiceSearchResponseBody {
	s.Code = &v
	return s
}

func (s *InvoiceSearchResponseBody) SetMessage(v string) *InvoiceSearchResponseBody {
	s.Message = &v
	return s
}

func (s *InvoiceSearchResponseBody) SetModule(v []*InvoiceSearchResponseBodyModule) *InvoiceSearchResponseBody {
	s.Module = v
	return s
}

func (s *InvoiceSearchResponseBody) SetRequestId(v string) *InvoiceSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *InvoiceSearchResponseBody) SetSuccess(v bool) *InvoiceSearchResponseBody {
	s.Success = &v
	return s
}

func (s *InvoiceSearchResponseBody) SetTraceId(v string) *InvoiceSearchResponseBody {
	s.TraceId = &v
	return s
}

type InvoiceSearchResponseBodyModule struct {
	// ID
	//
	// example:
	//
	// 1478652
	Id *int64 `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// 405009
	ThirdPartInvoiceId *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
	Title              *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s InvoiceSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s InvoiceSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *InvoiceSearchResponseBodyModule) SetId(v int64) *InvoiceSearchResponseBodyModule {
	s.Id = &v
	return s
}

func (s *InvoiceSearchResponseBodyModule) SetThirdPartInvoiceId(v string) *InvoiceSearchResponseBodyModule {
	s.ThirdPartInvoiceId = &v
	return s
}

func (s *InvoiceSearchResponseBodyModule) SetTitle(v string) *InvoiceSearchResponseBodyModule {
	s.Title = &v
	return s
}

type InvoiceSearchResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *InvoiceSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s InvoiceSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s InvoiceSearchResponse) GoString() string {
	return s.String()
}

func (s *InvoiceSearchResponse) SetHeaders(v map[string]*string) *InvoiceSearchResponse {
	s.Headers = v
	return s
}

func (s *InvoiceSearchResponse) SetStatusCode(v int32) *InvoiceSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *InvoiceSearchResponse) SetBody(v *InvoiceSearchResponseBody) *InvoiceSearchResponse {
	s.Body = v
	return s
}

type IsvRuleSaveHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s IsvRuleSaveHeaders) String() string {
	return tea.Prettify(s)
}

func (s IsvRuleSaveHeaders) GoString() string {
	return s.String()
}

func (s *IsvRuleSaveHeaders) SetCommonHeaders(v map[string]*string) *IsvRuleSaveHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IsvRuleSaveHeaders) SetXAcsBtripSoCorpToken(v string) *IsvRuleSaveHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type IsvRuleSaveRequest struct {
	ApplyNeed *bool `json:"apply_need,omitempty" xml:"apply_need,omitempty"`
	// This parameter is required.
	BookType     *string                           `json:"book_type,omitempty" xml:"book_type,omitempty"`
	BookuserList []*IsvRuleSaveRequestBookuserList `json:"bookuser_list,omitempty" xml:"bookuser_list,omitempty" type:"Repeated"`
	RuleNeed     *bool                             `json:"rule_need,omitempty" xml:"rule_need,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s IsvRuleSaveRequest) String() string {
	return tea.Prettify(s)
}

func (s IsvRuleSaveRequest) GoString() string {
	return s.String()
}

func (s *IsvRuleSaveRequest) SetApplyNeed(v bool) *IsvRuleSaveRequest {
	s.ApplyNeed = &v
	return s
}

func (s *IsvRuleSaveRequest) SetBookType(v string) *IsvRuleSaveRequest {
	s.BookType = &v
	return s
}

func (s *IsvRuleSaveRequest) SetBookuserList(v []*IsvRuleSaveRequestBookuserList) *IsvRuleSaveRequest {
	s.BookuserList = v
	return s
}

func (s *IsvRuleSaveRequest) SetRuleNeed(v bool) *IsvRuleSaveRequest {
	s.RuleNeed = &v
	return s
}

func (s *IsvRuleSaveRequest) SetStatus(v int32) *IsvRuleSaveRequest {
	s.Status = &v
	return s
}

func (s *IsvRuleSaveRequest) SetUserId(v string) *IsvRuleSaveRequest {
	s.UserId = &v
	return s
}

type IsvRuleSaveRequestBookuserList struct {
	// This parameter is required.
	EntityId *string `json:"entity_id,omitempty" xml:"entity_id,omitempty"`
	// This parameter is required.
	EntityType *int32 `json:"entity_type,omitempty" xml:"entity_type,omitempty"`
}

func (s IsvRuleSaveRequestBookuserList) String() string {
	return tea.Prettify(s)
}

func (s IsvRuleSaveRequestBookuserList) GoString() string {
	return s.String()
}

func (s *IsvRuleSaveRequestBookuserList) SetEntityId(v string) *IsvRuleSaveRequestBookuserList {
	s.EntityId = &v
	return s
}

func (s *IsvRuleSaveRequestBookuserList) SetEntityType(v int32) *IsvRuleSaveRequestBookuserList {
	s.EntityType = &v
	return s
}

type IsvRuleSaveShrinkRequest struct {
	ApplyNeed *bool `json:"apply_need,omitempty" xml:"apply_need,omitempty"`
	// This parameter is required.
	BookType           *string `json:"book_type,omitempty" xml:"book_type,omitempty"`
	BookuserListShrink *string `json:"bookuser_list,omitempty" xml:"bookuser_list,omitempty"`
	RuleNeed           *bool   `json:"rule_need,omitempty" xml:"rule_need,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s IsvRuleSaveShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s IsvRuleSaveShrinkRequest) GoString() string {
	return s.String()
}

func (s *IsvRuleSaveShrinkRequest) SetApplyNeed(v bool) *IsvRuleSaveShrinkRequest {
	s.ApplyNeed = &v
	return s
}

func (s *IsvRuleSaveShrinkRequest) SetBookType(v string) *IsvRuleSaveShrinkRequest {
	s.BookType = &v
	return s
}

func (s *IsvRuleSaveShrinkRequest) SetBookuserListShrink(v string) *IsvRuleSaveShrinkRequest {
	s.BookuserListShrink = &v
	return s
}

func (s *IsvRuleSaveShrinkRequest) SetRuleNeed(v bool) *IsvRuleSaveShrinkRequest {
	s.RuleNeed = &v
	return s
}

func (s *IsvRuleSaveShrinkRequest) SetStatus(v int32) *IsvRuleSaveShrinkRequest {
	s.Status = &v
	return s
}

func (s *IsvRuleSaveShrinkRequest) SetUserId(v string) *IsvRuleSaveShrinkRequest {
	s.UserId = &v
	return s
}

type IsvRuleSaveResponseBody struct {
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	//
	// example:
	//
	// null
	Module *string `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s IsvRuleSaveResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IsvRuleSaveResponseBody) GoString() string {
	return s.String()
}

func (s *IsvRuleSaveResponseBody) SetCode(v string) *IsvRuleSaveResponseBody {
	s.Code = &v
	return s
}

func (s *IsvRuleSaveResponseBody) SetMessage(v string) *IsvRuleSaveResponseBody {
	s.Message = &v
	return s
}

func (s *IsvRuleSaveResponseBody) SetModule(v string) *IsvRuleSaveResponseBody {
	s.Module = &v
	return s
}

func (s *IsvRuleSaveResponseBody) SetRequestId(v string) *IsvRuleSaveResponseBody {
	s.RequestId = &v
	return s
}

func (s *IsvRuleSaveResponseBody) SetSuccess(v bool) *IsvRuleSaveResponseBody {
	s.Success = &v
	return s
}

func (s *IsvRuleSaveResponseBody) SetTraceId(v string) *IsvRuleSaveResponseBody {
	s.TraceId = &v
	return s
}

type IsvRuleSaveResponse struct {
	Headers    map[string]*string       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IsvRuleSaveResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IsvRuleSaveResponse) String() string {
	return tea.Prettify(s)
}

func (s IsvRuleSaveResponse) GoString() string {
	return s.String()
}

func (s *IsvRuleSaveResponse) SetHeaders(v map[string]*string) *IsvRuleSaveResponse {
	s.Headers = v
	return s
}

func (s *IsvRuleSaveResponse) SetStatusCode(v int32) *IsvRuleSaveResponse {
	s.StatusCode = &v
	return s
}

func (s *IsvRuleSaveResponse) SetBody(v *IsvRuleSaveResponseBody) *IsvRuleSaveResponse {
	s.Body = v
	return s
}

type IsvUserSaveHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s IsvUserSaveHeaders) String() string {
	return tea.Prettify(s)
}

func (s IsvUserSaveHeaders) GoString() string {
	return s.String()
}

func (s *IsvUserSaveHeaders) SetCommonHeaders(v map[string]*string) *IsvUserSaveHeaders {
	s.CommonHeaders = v
	return s
}

func (s *IsvUserSaveHeaders) SetXAcsBtripSoCorpToken(v string) *IsvUserSaveHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type IsvUserSaveRequest struct {
	UserList []*IsvUserSaveRequestUserList `json:"user_list,omitempty" xml:"user_list,omitempty" type:"Repeated"`
}

func (s IsvUserSaveRequest) String() string {
	return tea.Prettify(s)
}

func (s IsvUserSaveRequest) GoString() string {
	return s.String()
}

func (s *IsvUserSaveRequest) SetUserList(v []*IsvUserSaveRequestUserList) *IsvUserSaveRequest {
	s.UserList = v
	return s
}

type IsvUserSaveRequestUserList struct {
	BaseCityCode *string                               `json:"base_city_code,omitempty" xml:"base_city_code,omitempty"`
	Birthday     *string                               `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertList     []*IsvUserSaveRequestUserListCertList `json:"cert_list,omitempty" xml:"cert_list,omitempty" type:"Repeated"`
	// example:
	//
	// 10
	DepartId *int64 `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	// example:
	//
	// 123@163.com
	Email   *string `json:"email,omitempty" xml:"email,omitempty"`
	Gender  *string `json:"gender,omitempty" xml:"gender,omitempty"`
	IsAdmin *bool   `json:"is_admin,omitempty" xml:"is_admin,omitempty"`
	// example:
	//
	// 8797
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// 0
	LeaveStatus *int32 `json:"leave_status,omitempty" xml:"leave_status,omitempty"`
	// example:
	//
	// 123456
	ManagerUserId *string `json:"manager_user_id,omitempty" xml:"manager_user_id,omitempty"`
	// example:
	//
	// 15364762829
	Phone    *string `json:"phone,omitempty" xml:"phone,omitempty"`
	Position *string `json:"position,omitempty" xml:"position,omitempty"`
	// example:
	//
	// 20
	PositionLevel *string `json:"position_level,omitempty" xml:"position_level,omitempty"`
	// example:
	//
	// ceshi
	RealNameEn *string   `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	RoleIdList []*string `json:"role_id_list,omitempty" xml:"role_id_list,omitempty" type:"Repeated"`
	// example:
	//
	// 123
	ThirdDepartId     *string   `json:"third_depart_id,omitempty" xml:"third_depart_id,omitempty"`
	ThirdDepartIdList []*string `json:"third_depart_id_list,omitempty" xml:"third_depart_id_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	// This parameter is required.
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	UserNick *string `json:"user_nick,omitempty" xml:"user_nick,omitempty"`
}

func (s IsvUserSaveRequestUserList) String() string {
	return tea.Prettify(s)
}

func (s IsvUserSaveRequestUserList) GoString() string {
	return s.String()
}

func (s *IsvUserSaveRequestUserList) SetBaseCityCode(v string) *IsvUserSaveRequestUserList {
	s.BaseCityCode = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetBirthday(v string) *IsvUserSaveRequestUserList {
	s.Birthday = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetCertList(v []*IsvUserSaveRequestUserListCertList) *IsvUserSaveRequestUserList {
	s.CertList = v
	return s
}

func (s *IsvUserSaveRequestUserList) SetDepartId(v int64) *IsvUserSaveRequestUserList {
	s.DepartId = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetEmail(v string) *IsvUserSaveRequestUserList {
	s.Email = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetGender(v string) *IsvUserSaveRequestUserList {
	s.Gender = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetIsAdmin(v bool) *IsvUserSaveRequestUserList {
	s.IsAdmin = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetJobNo(v string) *IsvUserSaveRequestUserList {
	s.JobNo = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetLeaveStatus(v int32) *IsvUserSaveRequestUserList {
	s.LeaveStatus = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetManagerUserId(v string) *IsvUserSaveRequestUserList {
	s.ManagerUserId = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetPhone(v string) *IsvUserSaveRequestUserList {
	s.Phone = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetPosition(v string) *IsvUserSaveRequestUserList {
	s.Position = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetPositionLevel(v string) *IsvUserSaveRequestUserList {
	s.PositionLevel = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetRealNameEn(v string) *IsvUserSaveRequestUserList {
	s.RealNameEn = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetRoleIdList(v []*string) *IsvUserSaveRequestUserList {
	s.RoleIdList = v
	return s
}

func (s *IsvUserSaveRequestUserList) SetThirdDepartId(v string) *IsvUserSaveRequestUserList {
	s.ThirdDepartId = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetThirdDepartIdList(v []*string) *IsvUserSaveRequestUserList {
	s.ThirdDepartIdList = v
	return s
}

func (s *IsvUserSaveRequestUserList) SetUserId(v string) *IsvUserSaveRequestUserList {
	s.UserId = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetUserName(v string) *IsvUserSaveRequestUserList {
	s.UserName = &v
	return s
}

func (s *IsvUserSaveRequestUserList) SetUserNick(v string) *IsvUserSaveRequestUserList {
	s.UserNick = &v
	return s
}

type IsvUserSaveRequestUserListCertList struct {
	CertExpiredTime *string `json:"cert_expired_time,omitempty" xml:"cert_expired_time,omitempty"`
	CertNation      *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	CertNo          *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	CertType        *int32  `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	Nationality     *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
}

func (s IsvUserSaveRequestUserListCertList) String() string {
	return tea.Prettify(s)
}

func (s IsvUserSaveRequestUserListCertList) GoString() string {
	return s.String()
}

func (s *IsvUserSaveRequestUserListCertList) SetCertExpiredTime(v string) *IsvUserSaveRequestUserListCertList {
	s.CertExpiredTime = &v
	return s
}

func (s *IsvUserSaveRequestUserListCertList) SetCertNation(v string) *IsvUserSaveRequestUserListCertList {
	s.CertNation = &v
	return s
}

func (s *IsvUserSaveRequestUserListCertList) SetCertNo(v string) *IsvUserSaveRequestUserListCertList {
	s.CertNo = &v
	return s
}

func (s *IsvUserSaveRequestUserListCertList) SetCertType(v int32) *IsvUserSaveRequestUserListCertList {
	s.CertType = &v
	return s
}

func (s *IsvUserSaveRequestUserListCertList) SetNationality(v string) *IsvUserSaveRequestUserListCertList {
	s.Nationality = &v
	return s
}

type IsvUserSaveShrinkRequest struct {
	UserListShrink *string `json:"user_list,omitempty" xml:"user_list,omitempty"`
}

func (s IsvUserSaveShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s IsvUserSaveShrinkRequest) GoString() string {
	return s.String()
}

func (s *IsvUserSaveShrinkRequest) SetUserListShrink(v string) *IsvUserSaveShrinkRequest {
	s.UserListShrink = &v
	return s
}

type IsvUserSaveResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	Module  *string `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 707c9fd116393792883244141e4e7d
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s IsvUserSaveResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IsvUserSaveResponseBody) GoString() string {
	return s.String()
}

func (s *IsvUserSaveResponseBody) SetCode(v string) *IsvUserSaveResponseBody {
	s.Code = &v
	return s
}

func (s *IsvUserSaveResponseBody) SetMessage(v string) *IsvUserSaveResponseBody {
	s.Message = &v
	return s
}

func (s *IsvUserSaveResponseBody) SetModule(v string) *IsvUserSaveResponseBody {
	s.Module = &v
	return s
}

func (s *IsvUserSaveResponseBody) SetRequestId(v string) *IsvUserSaveResponseBody {
	s.RequestId = &v
	return s
}

func (s *IsvUserSaveResponseBody) SetSuccess(v bool) *IsvUserSaveResponseBody {
	s.Success = &v
	return s
}

func (s *IsvUserSaveResponseBody) SetTraceId(v string) *IsvUserSaveResponseBody {
	s.TraceId = &v
	return s
}

type IsvUserSaveResponse struct {
	Headers    map[string]*string       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IsvUserSaveResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IsvUserSaveResponse) String() string {
	return tea.Prettify(s)
}

func (s IsvUserSaveResponse) GoString() string {
	return s.String()
}

func (s *IsvUserSaveResponse) SetHeaders(v map[string]*string) *IsvUserSaveResponse {
	s.Headers = v
	return s
}

func (s *IsvUserSaveResponse) SetStatusCode(v int32) *IsvUserSaveResponse {
	s.StatusCode = &v
	return s
}

func (s *IsvUserSaveResponse) SetBody(v *IsvUserSaveResponseBody) *IsvUserSaveResponse {
	s.Body = v
	return s
}

type MealBillSettlementQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s MealBillSettlementQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s MealBillSettlementQueryHeaders) GoString() string {
	return s.String()
}

func (s *MealBillSettlementQueryHeaders) SetCommonHeaders(v map[string]*string) *MealBillSettlementQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *MealBillSettlementQueryHeaders) SetXAcsBtripSoCorpToken(v string) *MealBillSettlementQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type MealBillSettlementQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-07-02
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2022-07-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
}

func (s MealBillSettlementQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s MealBillSettlementQueryRequest) GoString() string {
	return s.String()
}

func (s *MealBillSettlementQueryRequest) SetPageNo(v int32) *MealBillSettlementQueryRequest {
	s.PageNo = &v
	return s
}

func (s *MealBillSettlementQueryRequest) SetPageSize(v int32) *MealBillSettlementQueryRequest {
	s.PageSize = &v
	return s
}

func (s *MealBillSettlementQueryRequest) SetPeriodEnd(v string) *MealBillSettlementQueryRequest {
	s.PeriodEnd = &v
	return s
}

func (s *MealBillSettlementQueryRequest) SetPeriodStart(v string) *MealBillSettlementQueryRequest {
	s.PeriodStart = &v
	return s
}

type MealBillSettlementQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *int32                                     `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                    `json:"message,omitempty" xml:"message,omitempty"`
	Module  *MealBillSettlementQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s MealBillSettlementQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s MealBillSettlementQueryResponseBody) GoString() string {
	return s.String()
}

func (s *MealBillSettlementQueryResponseBody) SetCode(v int32) *MealBillSettlementQueryResponseBody {
	s.Code = &v
	return s
}

func (s *MealBillSettlementQueryResponseBody) SetMessage(v string) *MealBillSettlementQueryResponseBody {
	s.Message = &v
	return s
}

func (s *MealBillSettlementQueryResponseBody) SetModule(v *MealBillSettlementQueryResponseBodyModule) *MealBillSettlementQueryResponseBody {
	s.Module = v
	return s
}

func (s *MealBillSettlementQueryResponseBody) SetRequestId(v string) *MealBillSettlementQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBody) SetSuccess(v bool) *MealBillSettlementQueryResponseBody {
	s.Success = &v
	return s
}

func (s *MealBillSettlementQueryResponseBody) SetTraceId(v string) *MealBillSettlementQueryResponseBody {
	s.TraceId = &v
	return s
}

type MealBillSettlementQueryResponseBodyModule struct {
	// example:
	//
	// 7
	Category *int32                                            `json:"category,omitempty" xml:"category,omitempty"`
	CorpId   *string                                           `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	Items    []*MealBillSettlementQueryResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
	// example:
	//
	// 1002039195025156700
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 2022-07-02
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// example:
	//
	// 2022-07-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
	// example:
	//
	// 2695
	TotalNum *int64 `json:"total_num,omitempty" xml:"total_num,omitempty"`
	// example:
	//
	// 30
	TotalSize *int64 `json:"total_size,omitempty" xml:"total_size,omitempty"`
}

func (s MealBillSettlementQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s MealBillSettlementQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *MealBillSettlementQueryResponseBodyModule) SetCategory(v int32) *MealBillSettlementQueryResponseBodyModule {
	s.Category = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModule) SetCorpId(v string) *MealBillSettlementQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModule) SetItems(v []*MealBillSettlementQueryResponseBodyModuleItems) *MealBillSettlementQueryResponseBodyModule {
	s.Items = v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModule) SetOrderId(v string) *MealBillSettlementQueryResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModule) SetPeriodEnd(v string) *MealBillSettlementQueryResponseBodyModule {
	s.PeriodEnd = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModule) SetPeriodStart(v string) *MealBillSettlementQueryResponseBodyModule {
	s.PeriodStart = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModule) SetTotalNum(v int64) *MealBillSettlementQueryResponseBodyModule {
	s.TotalNum = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModule) SetTotalSize(v int64) *MealBillSettlementQueryResponseBodyModule {
	s.TotalSize = &v
	return s
}

type MealBillSettlementQueryResponseBodyModuleItems struct {
	ApplyExtendField *string `json:"apply_extend_field,omitempty" xml:"apply_extend_field,omitempty"`
	// example:
	//
	// 1004430880
	ApplyId *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 2023-01-01 00:00:00
	BillRecordTime *string `json:"bill_record_time,omitempty" xml:"bill_record_time,omitempty"`
	// example:
	//
	// 2023-01-01 00:00:00
	BookTime *string `json:"book_time,omitempty" xml:"book_time,omitempty"`
	// example:
	//
	// 1234
	BookerId *string `json:"booker_id,omitempty" xml:"booker_id,omitempty"`
	// example:
	//
	// A1234
	BookerJobNo *string `json:"booker_job_no,omitempty" xml:"booker_job_no,omitempty"`
	BookerName  *string `json:"booker_name,omitempty" xml:"booker_name,omitempty"`
	// example:
	//
	// 1
	CapitalDirection      *string `json:"capital_direction,omitempty" xml:"capital_direction,omitempty"`
	CascadeDepartment     *string `json:"cascade_department,omitempty" xml:"cascade_department,omitempty"`
	ConsumeReportAddress  *string `json:"consume_report_address,omitempty" xml:"consume_report_address,omitempty"`
	ConsumeReportCity     *string `json:"consume_report_city,omitempty" xml:"consume_report_city,omitempty"`
	ConsumeReportCityCode *string `json:"consume_report_city_code,omitempty" xml:"consume_report_city_code,omitempty"`
	ConsumerScene         *string `json:"consumer_scene,omitempty" xml:"consumer_scene,omitempty"`
	// example:
	//
	// 100.0
	CorpSettleFee *float64 `json:"corp_settle_fee,omitempty" xml:"corp_settle_fee,omitempty"`
	CostCenter    *string  `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	// example:
	//
	// cs1
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	Department       *string `json:"department,omitempty" xml:"department,omitempty"`
	// example:
	//
	// 1112
	DepartmentId *string `json:"department_id,omitempty" xml:"department_id,omitempty"`
	// example:
	//
	// 70101
	FeeType *string `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	// example:
	//
	// 1
	Index        *string `json:"index,omitempty" xml:"index,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// 123
	MainApplyId *string `json:"main_apply_id,omitempty" xml:"main_apply_id,omitempty"`
	// example:
	//
	// XXXX
	MealAddress *string `json:"meal_address,omitempty" xml:"meal_address,omitempty"`
	MealCity    *string `json:"meal_city,omitempty" xml:"meal_city,omitempty"`
	// example:
	//
	// XXX
	MealCityCode *string `json:"meal_city_code,omitempty" xml:"meal_city_code,omitempty"`
	MealRule     *string `json:"meal_rule,omitempty" xml:"meal_rule,omitempty"`
	MealScene    *string `json:"meal_scene,omitempty" xml:"meal_scene,omitempty"`
	// example:
	//
	// MEAL
	MerchantCategory *string `json:"merchant_category,omitempty" xml:"merchant_category,omitempty"`
	// example:
	//
	// XXXX
	MerchantName *string `json:"merchant_name,omitempty" xml:"merchant_name,omitempty"`
	// example:
	//
	// 1002039196909288346
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 100.0
	OrderPrice      *float64 `json:"order_price,omitempty" xml:"order_price,omitempty"`
	OrderStatusDesc *string  `json:"order_status_desc,omitempty" xml:"order_status_desc,omitempty"`
	// example:
	//
	// 0.0
	PersonSettlePrice *float64 `json:"person_settle_price,omitempty" xml:"person_settle_price,omitempty"`
	// example:
	//
	// 60698599
	PrimaryId *int64 `json:"primary_id,omitempty" xml:"primary_id,omitempty"`
	// example:
	//
	// acs
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	Remark      *string `json:"remark,omitempty" xml:"remark,omitempty"`
	// example:
	//
	// 5.0
	ServiceFee *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 110.0
	SettlementFee *float64 `json:"settlement_fee,omitempty" xml:"settlement_fee,omitempty"`
	// example:
	//
	// 2023-01-01 00:00:00
	SettlementTime *string `json:"settlement_time,omitempty" xml:"settlement_time,omitempty"`
	// example:
	//
	// 4
	SettlementType *string `json:"settlement_type,omitempty" xml:"settlement_type,omitempty"`
	ShareDinner    *string `json:"share_dinner,omitempty" xml:"share_dinner,omitempty"`
	// example:
	//
	// 0
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// XXXX
	StoreAddress *string `json:"store_address,omitempty" xml:"store_address,omitempty"`
	// example:
	//
	// 6%
	TaxRate *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	// example:
	//
	// cs2
	ThirdInvoiceId *string `json:"third_invoice_id,omitempty" xml:"third_invoice_id,omitempty"`
	// example:
	//
	// 123
	ThirdPartBusinessId *string `json:"third_part_business_id,omitempty" xml:"third_part_business_id,omitempty"`
	// example:
	//
	// 7244-1968
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 1234
	TravelerId *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	// example:
	//
	// A1234
	TravelerJobNo          *string `json:"traveler_job_no,omitempty" xml:"traveler_job_no,omitempty"`
	TravelerMemberTypeName *string `json:"traveler_member_type_name,omitempty" xml:"traveler_member_type_name,omitempty"`
	TravelerName           *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
	// example:
	//
	// 1
	VoucherType *int32 `json:"voucher_type,omitempty" xml:"voucher_type,omitempty"`
}

func (s MealBillSettlementQueryResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s MealBillSettlementQueryResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetApplyExtendField(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ApplyExtendField = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetApplyId(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ApplyId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetBillRecordTime(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.BillRecordTime = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetBookTime(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.BookTime = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetBookerId(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.BookerId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetBookerJobNo(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.BookerJobNo = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetBookerName(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.BookerName = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetCapitalDirection(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.CapitalDirection = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetCascadeDepartment(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.CascadeDepartment = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetConsumeReportAddress(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ConsumeReportAddress = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetConsumeReportCity(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ConsumeReportCity = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetConsumeReportCityCode(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ConsumeReportCityCode = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetConsumerScene(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ConsumerScene = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetCorpSettleFee(v float64) *MealBillSettlementQueryResponseBodyModuleItems {
	s.CorpSettleFee = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetCostCenter(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.CostCenter = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetCostCenterNumber(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.CostCenterNumber = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetDepartment(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.Department = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetDepartmentId(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.DepartmentId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetFeeType(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.FeeType = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetIndex(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.Index = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetInvoiceTitle(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.InvoiceTitle = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetMainApplyId(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.MainApplyId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetMealAddress(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.MealAddress = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetMealCity(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.MealCity = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetMealCityCode(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.MealCityCode = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetMealRule(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.MealRule = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetMealScene(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.MealScene = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetMerchantCategory(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.MerchantCategory = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetMerchantName(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.MerchantName = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetOrderId(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.OrderId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetOrderPrice(v float64) *MealBillSettlementQueryResponseBodyModuleItems {
	s.OrderPrice = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetOrderStatusDesc(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.OrderStatusDesc = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetPersonSettlePrice(v float64) *MealBillSettlementQueryResponseBodyModuleItems {
	s.PersonSettlePrice = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetPrimaryId(v int64) *MealBillSettlementQueryResponseBodyModuleItems {
	s.PrimaryId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetProjectCode(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ProjectCode = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetProjectName(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ProjectName = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetRemark(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.Remark = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetServiceFee(v float64) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ServiceFee = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetSettlementFee(v float64) *MealBillSettlementQueryResponseBodyModuleItems {
	s.SettlementFee = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetSettlementTime(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.SettlementTime = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetSettlementType(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.SettlementType = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetShareDinner(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ShareDinner = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetStatus(v int32) *MealBillSettlementQueryResponseBodyModuleItems {
	s.Status = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetStoreAddress(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.StoreAddress = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetTaxRate(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.TaxRate = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetThirdInvoiceId(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ThirdInvoiceId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetThirdPartBusinessId(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ThirdPartBusinessId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetThirdpartApplyId(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.ThirdpartApplyId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetTravelerId(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.TravelerId = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetTravelerJobNo(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.TravelerJobNo = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetTravelerMemberTypeName(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.TravelerMemberTypeName = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetTravelerName(v string) *MealBillSettlementQueryResponseBodyModuleItems {
	s.TravelerName = &v
	return s
}

func (s *MealBillSettlementQueryResponseBodyModuleItems) SetVoucherType(v int32) *MealBillSettlementQueryResponseBodyModuleItems {
	s.VoucherType = &v
	return s
}

type MealBillSettlementQueryResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *MealBillSettlementQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s MealBillSettlementQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s MealBillSettlementQueryResponse) GoString() string {
	return s.String()
}

func (s *MealBillSettlementQueryResponse) SetHeaders(v map[string]*string) *MealBillSettlementQueryResponse {
	s.Headers = v
	return s
}

func (s *MealBillSettlementQueryResponse) SetStatusCode(v int32) *MealBillSettlementQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *MealBillSettlementQueryResponse) SetBody(v *MealBillSettlementQueryResponseBody) *MealBillSettlementQueryResponse {
	s.Body = v
	return s
}

type MealOrderDetailQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s MealOrderDetailQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s MealOrderDetailQueryHeaders) GoString() string {
	return s.String()
}

func (s *MealOrderDetailQueryHeaders) SetCommonHeaders(v map[string]*string) *MealOrderDetailQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *MealOrderDetailQueryHeaders) SetXAcsBtripCorpToken(v string) *MealOrderDetailQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type MealOrderDetailQueryRequest struct {
	// example:
	//
	// 1000
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s MealOrderDetailQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s MealOrderDetailQueryRequest) GoString() string {
	return s.String()
}

func (s *MealOrderDetailQueryRequest) SetUserId(v string) *MealOrderDetailQueryRequest {
	s.UserId = &v
	return s
}

type MealOrderDetailQueryResponseBody struct {
	// example:
	//
	// 0
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// None
	Message *string                                 `json:"message,omitempty" xml:"message,omitempty"`
	Module  *MealOrderDetailQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 9BCDD5DE-E6CB-5C25-93B9-9BE178A0AA56
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s MealOrderDetailQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s MealOrderDetailQueryResponseBody) GoString() string {
	return s.String()
}

func (s *MealOrderDetailQueryResponseBody) SetCode(v string) *MealOrderDetailQueryResponseBody {
	s.Code = &v
	return s
}

func (s *MealOrderDetailQueryResponseBody) SetMessage(v string) *MealOrderDetailQueryResponseBody {
	s.Message = &v
	return s
}

func (s *MealOrderDetailQueryResponseBody) SetModule(v *MealOrderDetailQueryResponseBodyModule) *MealOrderDetailQueryResponseBody {
	s.Module = v
	return s
}

func (s *MealOrderDetailQueryResponseBody) SetRequestId(v string) *MealOrderDetailQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *MealOrderDetailQueryResponseBody) SetSuccess(v bool) *MealOrderDetailQueryResponseBody {
	s.Success = &v
	return s
}

func (s *MealOrderDetailQueryResponseBody) SetTraceId(v string) *MealOrderDetailQueryResponseBody {
	s.TraceId = &v
	return s
}

type MealOrderDetailQueryResponseBodyModule struct {
	ApplyId *int64 `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	// example:
	//
	// 2024032522001423601409393178
	CorpCodeOrderId *string `json:"corp_code_order_id,omitempty" xml:"corp_code_order_id,omitempty"`
	// example:
	//
	// dingaa15ca45cba9ee744a5
	CorpId *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	// example:
	//
	// 100
	CorpPayAmount *int64 `json:"corp_pay_amount,omitempty" xml:"corp_pay_amount,omitempty"`
	// example:
	//
	// 100
	CorpRefundAmount *int64  `json:"corp_refund_amount,omitempty" xml:"corp_refund_amount,omitempty"`
	MerchantName     *string `json:"merchant_name,omitempty" xml:"merchant_name,omitempty"`
	// example:
	//
	// 1034088398073015303
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1
	OrderStatus *int32 `json:"order_status,omitempty" xml:"order_status,omitempty"`
	// example:
	//
	// 1
	OrderSubStatus *int32  `json:"order_sub_status,omitempty" xml:"order_sub_status,omitempty"`
	OrderType      *string `json:"order_type,omitempty" xml:"order_type,omitempty"`
	// example:
	//
	// 100
	PayAmount *int64 `json:"pay_amount,omitempty" xml:"pay_amount,omitempty"`
	// example:
	//
	// 1
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 100
	PersonPayAmount *int64 `json:"person_pay_amount,omitempty" xml:"person_pay_amount,omitempty"`
	// example:
	//
	// 100
	PersonRefundAmount *int64 `json:"person_refund_amount,omitempty" xml:"person_refund_amount,omitempty"`
	// example:
	//
	// 100
	RefundAmount *int64  `json:"refund_amount,omitempty" xml:"refund_amount,omitempty"`
	SceneName    *string `json:"scene_name,omitempty" xml:"scene_name,omitempty"`
	// example:
	//
	// 1711702782
	SettleTime       *string `json:"settle_time,omitempty" xml:"settle_time,omitempty"`
	ThirdPartApplyId *string `json:"third_part_apply_id,omitempty" xml:"third_part_apply_id,omitempty"`
	// example:
	//
	// 17509140000
	UserAlipayId *string `json:"user_alipay_id,omitempty" xml:"user_alipay_id,omitempty"`
	// example:
	//
	// 014134681304653773
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s MealOrderDetailQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s MealOrderDetailQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *MealOrderDetailQueryResponseBodyModule) SetApplyId(v int64) *MealOrderDetailQueryResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetCorpCodeOrderId(v string) *MealOrderDetailQueryResponseBodyModule {
	s.CorpCodeOrderId = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetCorpId(v string) *MealOrderDetailQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetCorpPayAmount(v int64) *MealOrderDetailQueryResponseBodyModule {
	s.CorpPayAmount = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetCorpRefundAmount(v int64) *MealOrderDetailQueryResponseBodyModule {
	s.CorpRefundAmount = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetMerchantName(v string) *MealOrderDetailQueryResponseBodyModule {
	s.MerchantName = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetOrderId(v string) *MealOrderDetailQueryResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetOrderStatus(v int32) *MealOrderDetailQueryResponseBodyModule {
	s.OrderStatus = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetOrderSubStatus(v int32) *MealOrderDetailQueryResponseBodyModule {
	s.OrderSubStatus = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetOrderType(v string) *MealOrderDetailQueryResponseBodyModule {
	s.OrderType = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetPayAmount(v int64) *MealOrderDetailQueryResponseBodyModule {
	s.PayAmount = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetPayType(v int32) *MealOrderDetailQueryResponseBodyModule {
	s.PayType = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetPersonPayAmount(v int64) *MealOrderDetailQueryResponseBodyModule {
	s.PersonPayAmount = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetPersonRefundAmount(v int64) *MealOrderDetailQueryResponseBodyModule {
	s.PersonRefundAmount = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetRefundAmount(v int64) *MealOrderDetailQueryResponseBodyModule {
	s.RefundAmount = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetSceneName(v string) *MealOrderDetailQueryResponseBodyModule {
	s.SceneName = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetSettleTime(v string) *MealOrderDetailQueryResponseBodyModule {
	s.SettleTime = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetThirdPartApplyId(v string) *MealOrderDetailQueryResponseBodyModule {
	s.ThirdPartApplyId = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetUserAlipayId(v string) *MealOrderDetailQueryResponseBodyModule {
	s.UserAlipayId = &v
	return s
}

func (s *MealOrderDetailQueryResponseBodyModule) SetUserId(v string) *MealOrderDetailQueryResponseBodyModule {
	s.UserId = &v
	return s
}

type MealOrderDetailQueryResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *MealOrderDetailQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s MealOrderDetailQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s MealOrderDetailQueryResponse) GoString() string {
	return s.String()
}

func (s *MealOrderDetailQueryResponse) SetHeaders(v map[string]*string) *MealOrderDetailQueryResponse {
	s.Headers = v
	return s
}

func (s *MealOrderDetailQueryResponse) SetStatusCode(v int32) *MealOrderDetailQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *MealOrderDetailQueryResponse) SetBody(v *MealOrderDetailQueryResponseBody) *MealOrderDetailQueryResponse {
	s.Body = v
	return s
}

type MealOrderListQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s MealOrderListQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s MealOrderListQueryHeaders) GoString() string {
	return s.String()
}

func (s *MealOrderListQueryHeaders) SetCommonHeaders(v map[string]*string) *MealOrderListQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *MealOrderListQueryHeaders) SetXAcsBtripCorpToken(v string) *MealOrderListQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type MealOrderListQueryRequest struct {
	// example:
	//
	// 1000
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s MealOrderListQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s MealOrderListQueryRequest) GoString() string {
	return s.String()
}

func (s *MealOrderListQueryRequest) SetUserId(v string) *MealOrderListQueryRequest {
	s.UserId = &v
	return s
}

type MealOrderListQueryResponseBody struct {
	// example:
	//
	// 0
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// noPermission
	Message *string                               `json:"message,omitempty" xml:"message,omitempty"`
	Module  *MealOrderListQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s MealOrderListQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s MealOrderListQueryResponseBody) GoString() string {
	return s.String()
}

func (s *MealOrderListQueryResponseBody) SetCode(v string) *MealOrderListQueryResponseBody {
	s.Code = &v
	return s
}

func (s *MealOrderListQueryResponseBody) SetMessage(v string) *MealOrderListQueryResponseBody {
	s.Message = &v
	return s
}

func (s *MealOrderListQueryResponseBody) SetModule(v *MealOrderListQueryResponseBodyModule) *MealOrderListQueryResponseBody {
	s.Module = v
	return s
}

func (s *MealOrderListQueryResponseBody) SetRequestId(v string) *MealOrderListQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *MealOrderListQueryResponseBody) SetSuccess(v bool) *MealOrderListQueryResponseBody {
	s.Success = &v
	return s
}

func (s *MealOrderListQueryResponseBody) SetTraceId(v string) *MealOrderListQueryResponseBody {
	s.TraceId = &v
	return s
}

type MealOrderListQueryResponseBodyModule struct {
	OrderList []*MealOrderListQueryResponseBodyModuleOrderList `json:"order_list,omitempty" xml:"order_list,omitempty" type:"Repeated"`
}

func (s MealOrderListQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s MealOrderListQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *MealOrderListQueryResponseBodyModule) SetOrderList(v []*MealOrderListQueryResponseBodyModuleOrderList) *MealOrderListQueryResponseBodyModule {
	s.OrderList = v
	return s
}

type MealOrderListQueryResponseBodyModuleOrderList struct {
	// example:
	//
	// 100
	CorpPayAmount *int64  `json:"corp_pay_amount,omitempty" xml:"corp_pay_amount,omitempty"`
	MerchantName  *string `json:"merchant_name,omitempty" xml:"merchant_name,omitempty"`
	// example:
	//
	// 1034124198083211043
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1
	OrderStatus *int32  `json:"order_status,omitempty" xml:"order_status,omitempty"`
	OrderType   *string `json:"order_type,omitempty" xml:"order_type,omitempty"`
	// example:
	//
	// 100
	PayAmount *int64 `json:"pay_amount,omitempty" xml:"pay_amount,omitempty"`
	// example:
	//
	// 100
	PersonPayAmount *int64 `json:"person_pay_amount,omitempty" xml:"person_pay_amount,omitempty"`
	// example:
	//
	// 1711705057
	SettleTime *string `json:"settle_time,omitempty" xml:"settle_time,omitempty"`
}

func (s MealOrderListQueryResponseBodyModuleOrderList) String() string {
	return tea.Prettify(s)
}

func (s MealOrderListQueryResponseBodyModuleOrderList) GoString() string {
	return s.String()
}

func (s *MealOrderListQueryResponseBodyModuleOrderList) SetCorpPayAmount(v int64) *MealOrderListQueryResponseBodyModuleOrderList {
	s.CorpPayAmount = &v
	return s
}

func (s *MealOrderListQueryResponseBodyModuleOrderList) SetMerchantName(v string) *MealOrderListQueryResponseBodyModuleOrderList {
	s.MerchantName = &v
	return s
}

func (s *MealOrderListQueryResponseBodyModuleOrderList) SetOrderId(v string) *MealOrderListQueryResponseBodyModuleOrderList {
	s.OrderId = &v
	return s
}

func (s *MealOrderListQueryResponseBodyModuleOrderList) SetOrderStatus(v int32) *MealOrderListQueryResponseBodyModuleOrderList {
	s.OrderStatus = &v
	return s
}

func (s *MealOrderListQueryResponseBodyModuleOrderList) SetOrderType(v string) *MealOrderListQueryResponseBodyModuleOrderList {
	s.OrderType = &v
	return s
}

func (s *MealOrderListQueryResponseBodyModuleOrderList) SetPayAmount(v int64) *MealOrderListQueryResponseBodyModuleOrderList {
	s.PayAmount = &v
	return s
}

func (s *MealOrderListQueryResponseBodyModuleOrderList) SetPersonPayAmount(v int64) *MealOrderListQueryResponseBodyModuleOrderList {
	s.PersonPayAmount = &v
	return s
}

func (s *MealOrderListQueryResponseBodyModuleOrderList) SetSettleTime(v string) *MealOrderListQueryResponseBodyModuleOrderList {
	s.SettleTime = &v
	return s
}

type MealOrderListQueryResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *MealOrderListQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s MealOrderListQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s MealOrderListQueryResponse) GoString() string {
	return s.String()
}

func (s *MealOrderListQueryResponse) SetHeaders(v map[string]*string) *MealOrderListQueryResponse {
	s.Headers = v
	return s
}

func (s *MealOrderListQueryResponse) SetStatusCode(v int32) *MealOrderListQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *MealOrderListQueryResponse) SetBody(v *MealOrderListQueryResponseBody) *MealOrderListQueryResponse {
	s.Body = v
	return s
}

type MonthBillConfirmHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s MonthBillConfirmHeaders) String() string {
	return tea.Prettify(s)
}

func (s MonthBillConfirmHeaders) GoString() string {
	return s.String()
}

func (s *MonthBillConfirmHeaders) SetCommonHeaders(v map[string]*string) *MonthBillConfirmHeaders {
	s.CommonHeaders = v
	return s
}

func (s *MonthBillConfirmHeaders) SetXAcsBtripCorpToken(v string) *MonthBillConfirmHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type MonthBillConfirmRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 20221001
	MailBillDate *int32 `json:"mail_bill_date,omitempty" xml:"mail_bill_date,omitempty"`
	// example:
	//
	// 12345
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s MonthBillConfirmRequest) String() string {
	return tea.Prettify(s)
}

func (s MonthBillConfirmRequest) GoString() string {
	return s.String()
}

func (s *MonthBillConfirmRequest) SetMailBillDate(v int32) *MonthBillConfirmRequest {
	s.MailBillDate = &v
	return s
}

func (s *MonthBillConfirmRequest) SetUserId(v string) *MonthBillConfirmRequest {
	s.UserId = &v
	return s
}

type MonthBillConfirmResponseBody struct {
	// example:
	//
	// success
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s MonthBillConfirmResponseBody) String() string {
	return tea.Prettify(s)
}

func (s MonthBillConfirmResponseBody) GoString() string {
	return s.String()
}

func (s *MonthBillConfirmResponseBody) SetCode(v string) *MonthBillConfirmResponseBody {
	s.Code = &v
	return s
}

func (s *MonthBillConfirmResponseBody) SetMessage(v string) *MonthBillConfirmResponseBody {
	s.Message = &v
	return s
}

func (s *MonthBillConfirmResponseBody) SetRequestId(v string) *MonthBillConfirmResponseBody {
	s.RequestId = &v
	return s
}

func (s *MonthBillConfirmResponseBody) SetSuccess(v bool) *MonthBillConfirmResponseBody {
	s.Success = &v
	return s
}

func (s *MonthBillConfirmResponseBody) SetTraceId(v string) *MonthBillConfirmResponseBody {
	s.TraceId = &v
	return s
}

type MonthBillConfirmResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *MonthBillConfirmResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s MonthBillConfirmResponse) String() string {
	return tea.Prettify(s)
}

func (s MonthBillConfirmResponse) GoString() string {
	return s.String()
}

func (s *MonthBillConfirmResponse) SetHeaders(v map[string]*string) *MonthBillConfirmResponse {
	s.Headers = v
	return s
}

func (s *MonthBillConfirmResponse) SetStatusCode(v int32) *MonthBillConfirmResponse {
	s.StatusCode = &v
	return s
}

func (s *MonthBillConfirmResponse) SetBody(v *MonthBillConfirmResponseBody) *MonthBillConfirmResponse {
	s.Body = v
	return s
}

type MonthBillGetHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s MonthBillGetHeaders) String() string {
	return tea.Prettify(s)
}

func (s MonthBillGetHeaders) GoString() string {
	return s.String()
}

func (s *MonthBillGetHeaders) SetCommonHeaders(v map[string]*string) *MonthBillGetHeaders {
	s.CommonHeaders = v
	return s
}

func (s *MonthBillGetHeaders) SetXAcsBtripSoCorpToken(v string) *MonthBillGetHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type MonthBillGetRequest struct {
	// example:
	//
	// 202207
	BillMonth *string `json:"bill_month,omitempty" xml:"bill_month,omitempty"`
}

func (s MonthBillGetRequest) String() string {
	return tea.Prettify(s)
}

func (s MonthBillGetRequest) GoString() string {
	return s.String()
}

func (s *MonthBillGetRequest) SetBillMonth(v string) *MonthBillGetRequest {
	s.BillMonth = &v
	return s
}

type MonthBillGetResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                           `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                           `json:"message,omitempty" xml:"message,omitempty"`
	Module  []*MonthBillGetResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s MonthBillGetResponseBody) String() string {
	return tea.Prettify(s)
}

func (s MonthBillGetResponseBody) GoString() string {
	return s.String()
}

func (s *MonthBillGetResponseBody) SetCode(v string) *MonthBillGetResponseBody {
	s.Code = &v
	return s
}

func (s *MonthBillGetResponseBody) SetMessage(v string) *MonthBillGetResponseBody {
	s.Message = &v
	return s
}

func (s *MonthBillGetResponseBody) SetModule(v []*MonthBillGetResponseBodyModule) *MonthBillGetResponseBody {
	s.Module = v
	return s
}

func (s *MonthBillGetResponseBody) SetRequestId(v string) *MonthBillGetResponseBody {
	s.RequestId = &v
	return s
}

func (s *MonthBillGetResponseBody) SetSuccess(v bool) *MonthBillGetResponseBody {
	s.Success = &v
	return s
}

func (s *MonthBillGetResponseBody) SetTraceId(v string) *MonthBillGetResponseBody {
	s.TraceId = &v
	return s
}

type MonthBillGetResponseBodyModule struct {
	EndDate *string `json:"end_date,omitempty" xml:"end_date,omitempty"`
	// CorpMonthAccountBillFeeDetail
	MonthAccountBillDetail *MonthBillGetResponseBodyModuleMonthAccountBillDetail `json:"monthAccountBillDetail,omitempty" xml:"monthAccountBillDetail,omitempty" type:"Struct"`
	StartDate              *string                                               `json:"start_date,omitempty" xml:"start_date,omitempty"`
	// example:
	//
	// https://xxx
	Url *string `json:"url,omitempty" xml:"url,omitempty"`
}

func (s MonthBillGetResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s MonthBillGetResponseBodyModule) GoString() string {
	return s.String()
}

func (s *MonthBillGetResponseBodyModule) SetEndDate(v string) *MonthBillGetResponseBodyModule {
	s.EndDate = &v
	return s
}

func (s *MonthBillGetResponseBodyModule) SetMonthAccountBillDetail(v *MonthBillGetResponseBodyModuleMonthAccountBillDetail) *MonthBillGetResponseBodyModule {
	s.MonthAccountBillDetail = v
	return s
}

func (s *MonthBillGetResponseBodyModule) SetStartDate(v string) *MonthBillGetResponseBodyModule {
	s.StartDate = &v
	return s
}

func (s *MonthBillGetResponseBodyModule) SetUrl(v string) *MonthBillGetResponseBodyModule {
	s.Url = &v
	return s
}

type MonthBillGetResponseBodyModuleMonthAccountBillDetail struct {
	BillConfirmed *int32 `json:"billConfirmed,omitempty" xml:"billConfirmed,omitempty"`
	// 用车金额（单位：元）
	//
	// example:
	//
	// xx.xx
	CarAmount *float64 `json:"carAmount,omitempty" xml:"carAmount,omitempty"`
	// 违约金金额（单位：元）
	//
	// example:
	//
	// xx.xx
	DamageAmount *float64 `json:"damageAmount,omitempty" xml:"damageAmount,omitempty"`
	// 机票金额（单位：元）
	//
	// example:
	//
	// xx.xx
	FlightAmount *float64 `json:"flightAmount,omitempty" xml:"flightAmount,omitempty"`
	// 福豆金额（单位：元）
	//
	// example:
	//
	// xx.xx
	FuPoint *float64 `json:"fuPoint,omitempty" xml:"fuPoint,omitempty"`
	// 酒店金额（单位：元）
	//
	// example:
	//
	// xx.xx
	HotelAmount *float64 `json:"hotelAmount,omitempty" xml:"hotelAmount,omitempty"`
	// 国际机票金额（单位：元）
	//
	// example:
	//
	// xx.xx
	IeFlightAmount *float64 `json:"ieFlightAmount,omitempty" xml:"ieFlightAmount,omitempty"`
	IeHotelAmount  *float64 `json:"ieHotelAmount,omitempty" xml:"ieHotelAmount,omitempty"`
	// 账期日：YYYYMMDD
	//
	// example:
	//
	// 20200501
	MailBillDate *int64 `json:"mailBillDate,omitempty" xml:"mailBillDate,omitempty"`
	// 服务费金额（单位：元）
	//
	// example:
	//
	// xx.xx
	ServiceAmount *float64 `json:"serviceAmount,omitempty" xml:"serviceAmount,omitempty"`
	// 火车票金额（单位：元）
	//
	// example:
	//
	// xx.xx
	TrainAmount *float64 `json:"trainAmount,omitempty" xml:"trainAmount,omitempty"`
}

func (s MonthBillGetResponseBodyModuleMonthAccountBillDetail) String() string {
	return tea.Prettify(s)
}

func (s MonthBillGetResponseBodyModuleMonthAccountBillDetail) GoString() string {
	return s.String()
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetBillConfirmed(v int32) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.BillConfirmed = &v
	return s
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetCarAmount(v float64) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.CarAmount = &v
	return s
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetDamageAmount(v float64) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.DamageAmount = &v
	return s
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetFlightAmount(v float64) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.FlightAmount = &v
	return s
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetFuPoint(v float64) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.FuPoint = &v
	return s
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetHotelAmount(v float64) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.HotelAmount = &v
	return s
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetIeFlightAmount(v float64) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.IeFlightAmount = &v
	return s
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetIeHotelAmount(v float64) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.IeHotelAmount = &v
	return s
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetMailBillDate(v int64) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.MailBillDate = &v
	return s
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetServiceAmount(v float64) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.ServiceAmount = &v
	return s
}

func (s *MonthBillGetResponseBodyModuleMonthAccountBillDetail) SetTrainAmount(v float64) *MonthBillGetResponseBodyModuleMonthAccountBillDetail {
	s.TrainAmount = &v
	return s
}

type MonthBillGetResponse struct {
	Headers    map[string]*string        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *MonthBillGetResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s MonthBillGetResponse) String() string {
	return tea.Prettify(s)
}

func (s MonthBillGetResponse) GoString() string {
	return s.String()
}

func (s *MonthBillGetResponse) SetHeaders(v map[string]*string) *MonthBillGetResponse {
	s.Headers = v
	return s
}

func (s *MonthBillGetResponse) SetStatusCode(v int32) *MonthBillGetResponse {
	s.StatusCode = &v
	return s
}

func (s *MonthBillGetResponse) SetBody(v *MonthBillGetResponseBody) *MonthBillGetResponse {
	s.Body = v
	return s
}

type ProjectAddHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ProjectAddHeaders) String() string {
	return tea.Prettify(s)
}

func (s ProjectAddHeaders) GoString() string {
	return s.String()
}

func (s *ProjectAddHeaders) SetCommonHeaders(v map[string]*string) *ProjectAddHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ProjectAddHeaders) SetXAcsBtripSoCorpToken(v string) *ProjectAddHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ProjectAddRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// pro_code
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// This parameter is required.
	ProjectName *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	// example:
	//
	// 234
	ThirdPartCostCenterId *string `json:"third_part_cost_center_id,omitempty" xml:"third_part_cost_center_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
	// example:
	//
	// 123
	ThirdPartInvoiceId *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
}

func (s ProjectAddRequest) String() string {
	return tea.Prettify(s)
}

func (s ProjectAddRequest) GoString() string {
	return s.String()
}

func (s *ProjectAddRequest) SetCode(v string) *ProjectAddRequest {
	s.Code = &v
	return s
}

func (s *ProjectAddRequest) SetProjectName(v string) *ProjectAddRequest {
	s.ProjectName = &v
	return s
}

func (s *ProjectAddRequest) SetThirdPartCostCenterId(v string) *ProjectAddRequest {
	s.ThirdPartCostCenterId = &v
	return s
}

func (s *ProjectAddRequest) SetThirdPartId(v string) *ProjectAddRequest {
	s.ThirdPartId = &v
	return s
}

func (s *ProjectAddRequest) SetThirdPartInvoiceId(v string) *ProjectAddRequest {
	s.ThirdPartInvoiceId = &v
	return s
}

type ProjectAddResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 530404
	Module *int64 `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// true
	MorePage *bool `json:"more_page,omitempty" xml:"more_page,omitempty"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ProjectAddResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ProjectAddResponseBody) GoString() string {
	return s.String()
}

func (s *ProjectAddResponseBody) SetCode(v string) *ProjectAddResponseBody {
	s.Code = &v
	return s
}

func (s *ProjectAddResponseBody) SetMessage(v string) *ProjectAddResponseBody {
	s.Message = &v
	return s
}

func (s *ProjectAddResponseBody) SetModule(v int64) *ProjectAddResponseBody {
	s.Module = &v
	return s
}

func (s *ProjectAddResponseBody) SetMorePage(v bool) *ProjectAddResponseBody {
	s.MorePage = &v
	return s
}

func (s *ProjectAddResponseBody) SetRequestId(v string) *ProjectAddResponseBody {
	s.RequestId = &v
	return s
}

func (s *ProjectAddResponseBody) SetSuccess(v bool) *ProjectAddResponseBody {
	s.Success = &v
	return s
}

func (s *ProjectAddResponseBody) SetTraceId(v string) *ProjectAddResponseBody {
	s.TraceId = &v
	return s
}

type ProjectAddResponse struct {
	Headers    map[string]*string      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ProjectAddResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ProjectAddResponse) String() string {
	return tea.Prettify(s)
}

func (s ProjectAddResponse) GoString() string {
	return s.String()
}

func (s *ProjectAddResponse) SetHeaders(v map[string]*string) *ProjectAddResponse {
	s.Headers = v
	return s
}

func (s *ProjectAddResponse) SetStatusCode(v int32) *ProjectAddResponse {
	s.StatusCode = &v
	return s
}

func (s *ProjectAddResponse) SetBody(v *ProjectAddResponseBody) *ProjectAddResponse {
	s.Body = v
	return s
}

type ProjectDeleteHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ProjectDeleteHeaders) String() string {
	return tea.Prettify(s)
}

func (s ProjectDeleteHeaders) GoString() string {
	return s.String()
}

func (s *ProjectDeleteHeaders) SetCommonHeaders(v map[string]*string) *ProjectDeleteHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ProjectDeleteHeaders) SetXAcsBtripSoCorpToken(v string) *ProjectDeleteHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ProjectDeleteRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
}

func (s ProjectDeleteRequest) String() string {
	return tea.Prettify(s)
}

func (s ProjectDeleteRequest) GoString() string {
	return s.String()
}

func (s *ProjectDeleteRequest) SetThirdPartId(v string) *ProjectDeleteRequest {
	s.ThirdPartId = &v
	return s
}

type ProjectDeleteResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// true
	Module *bool `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ProjectDeleteResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ProjectDeleteResponseBody) GoString() string {
	return s.String()
}

func (s *ProjectDeleteResponseBody) SetCode(v string) *ProjectDeleteResponseBody {
	s.Code = &v
	return s
}

func (s *ProjectDeleteResponseBody) SetMessage(v string) *ProjectDeleteResponseBody {
	s.Message = &v
	return s
}

func (s *ProjectDeleteResponseBody) SetModule(v bool) *ProjectDeleteResponseBody {
	s.Module = &v
	return s
}

func (s *ProjectDeleteResponseBody) SetRequestId(v string) *ProjectDeleteResponseBody {
	s.RequestId = &v
	return s
}

func (s *ProjectDeleteResponseBody) SetSuccess(v bool) *ProjectDeleteResponseBody {
	s.Success = &v
	return s
}

func (s *ProjectDeleteResponseBody) SetTraceId(v string) *ProjectDeleteResponseBody {
	s.TraceId = &v
	return s
}

type ProjectDeleteResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ProjectDeleteResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ProjectDeleteResponse) String() string {
	return tea.Prettify(s)
}

func (s ProjectDeleteResponse) GoString() string {
	return s.String()
}

func (s *ProjectDeleteResponse) SetHeaders(v map[string]*string) *ProjectDeleteResponse {
	s.Headers = v
	return s
}

func (s *ProjectDeleteResponse) SetStatusCode(v int32) *ProjectDeleteResponse {
	s.StatusCode = &v
	return s
}

func (s *ProjectDeleteResponse) SetBody(v *ProjectDeleteResponseBody) *ProjectDeleteResponse {
	s.Body = v
	return s
}

type ProjectModifyHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s ProjectModifyHeaders) String() string {
	return tea.Prettify(s)
}

func (s ProjectModifyHeaders) GoString() string {
	return s.String()
}

func (s *ProjectModifyHeaders) SetCommonHeaders(v map[string]*string) *ProjectModifyHeaders {
	s.CommonHeaders = v
	return s
}

func (s *ProjectModifyHeaders) SetXAcsBtripSoCorpToken(v string) *ProjectModifyHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type ProjectModifyRequest struct {
	// example:
	//
	// pro_code
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// This parameter is required.
	ProjectName *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	// example:
	//
	// 234
	ThirdPartCostCenterId *string `json:"third_part_cost_center_id,omitempty" xml:"third_part_cost_center_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 340049
	ThirdPartId *string `json:"third_part_id,omitempty" xml:"third_part_id,omitempty"`
	// example:
	//
	// 123
	ThirdPartInvoiceId *string `json:"third_part_invoice_id,omitempty" xml:"third_part_invoice_id,omitempty"`
}

func (s ProjectModifyRequest) String() string {
	return tea.Prettify(s)
}

func (s ProjectModifyRequest) GoString() string {
	return s.String()
}

func (s *ProjectModifyRequest) SetCode(v string) *ProjectModifyRequest {
	s.Code = &v
	return s
}

func (s *ProjectModifyRequest) SetProjectName(v string) *ProjectModifyRequest {
	s.ProjectName = &v
	return s
}

func (s *ProjectModifyRequest) SetThirdPartCostCenterId(v string) *ProjectModifyRequest {
	s.ThirdPartCostCenterId = &v
	return s
}

func (s *ProjectModifyRequest) SetThirdPartId(v string) *ProjectModifyRequest {
	s.ThirdPartId = &v
	return s
}

func (s *ProjectModifyRequest) SetThirdPartInvoiceId(v string) *ProjectModifyRequest {
	s.ThirdPartInvoiceId = &v
	return s
}

type ProjectModifyResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// true
	Module *bool `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s ProjectModifyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ProjectModifyResponseBody) GoString() string {
	return s.String()
}

func (s *ProjectModifyResponseBody) SetCode(v string) *ProjectModifyResponseBody {
	s.Code = &v
	return s
}

func (s *ProjectModifyResponseBody) SetMessage(v string) *ProjectModifyResponseBody {
	s.Message = &v
	return s
}

func (s *ProjectModifyResponseBody) SetModule(v bool) *ProjectModifyResponseBody {
	s.Module = &v
	return s
}

func (s *ProjectModifyResponseBody) SetRequestId(v string) *ProjectModifyResponseBody {
	s.RequestId = &v
	return s
}

func (s *ProjectModifyResponseBody) SetSuccess(v bool) *ProjectModifyResponseBody {
	s.Success = &v
	return s
}

func (s *ProjectModifyResponseBody) SetTraceId(v string) *ProjectModifyResponseBody {
	s.TraceId = &v
	return s
}

type ProjectModifyResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ProjectModifyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ProjectModifyResponse) String() string {
	return tea.Prettify(s)
}

func (s ProjectModifyResponse) GoString() string {
	return s.String()
}

func (s *ProjectModifyResponse) SetHeaders(v map[string]*string) *ProjectModifyResponse {
	s.Headers = v
	return s
}

func (s *ProjectModifyResponse) SetStatusCode(v int32) *ProjectModifyResponse {
	s.StatusCode = &v
	return s
}

func (s *ProjectModifyResponse) SetBody(v *ProjectModifyResponseBody) *ProjectModifyResponse {
	s.Body = v
	return s
}

type QueryGroupCorpListHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s QueryGroupCorpListHeaders) String() string {
	return tea.Prettify(s)
}

func (s QueryGroupCorpListHeaders) GoString() string {
	return s.String()
}

func (s *QueryGroupCorpListHeaders) SetCommonHeaders(v map[string]*string) *QueryGroupCorpListHeaders {
	s.CommonHeaders = v
	return s
}

func (s *QueryGroupCorpListHeaders) SetXAcsBtripCorpToken(v string) *QueryGroupCorpListHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type QueryGroupCorpListRequest struct {
	// example:
	//
	// 123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s QueryGroupCorpListRequest) String() string {
	return tea.Prettify(s)
}

func (s QueryGroupCorpListRequest) GoString() string {
	return s.String()
}

func (s *QueryGroupCorpListRequest) SetUserId(v string) *QueryGroupCorpListRequest {
	s.UserId = &v
	return s
}

type QueryGroupCorpListResponseBody struct {
	// example:
	//
	// A3F8DCAB-8301-5770-BD9F-71B0BF9E1A6E
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// example:
	//
	// 0
	Code    *int32                                  `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                 `json:"message,omitempty" xml:"message,omitempty"`
	Module  []*QueryGroupCorpListResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"trace_id,omitempty" xml:"trace_id,omitempty"`
}

func (s QueryGroupCorpListResponseBody) String() string {
	return tea.Prettify(s)
}

func (s QueryGroupCorpListResponseBody) GoString() string {
	return s.String()
}

func (s *QueryGroupCorpListResponseBody) SetRequestId(v string) *QueryGroupCorpListResponseBody {
	s.RequestId = &v
	return s
}

func (s *QueryGroupCorpListResponseBody) SetCode(v int32) *QueryGroupCorpListResponseBody {
	s.Code = &v
	return s
}

func (s *QueryGroupCorpListResponseBody) SetMessage(v string) *QueryGroupCorpListResponseBody {
	s.Message = &v
	return s
}

func (s *QueryGroupCorpListResponseBody) SetModule(v []*QueryGroupCorpListResponseBodyModule) *QueryGroupCorpListResponseBody {
	s.Module = v
	return s
}

func (s *QueryGroupCorpListResponseBody) SetSuccess(v bool) *QueryGroupCorpListResponseBody {
	s.Success = &v
	return s
}

func (s *QueryGroupCorpListResponseBody) SetTraceId(v string) *QueryGroupCorpListResponseBody {
	s.TraceId = &v
	return s
}

type QueryGroupCorpListResponseBodyModule struct {
	// example:
	//
	// corp1
	CorpId   *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
}

func (s QueryGroupCorpListResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s QueryGroupCorpListResponseBodyModule) GoString() string {
	return s.String()
}

func (s *QueryGroupCorpListResponseBodyModule) SetCorpId(v string) *QueryGroupCorpListResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *QueryGroupCorpListResponseBodyModule) SetCorpName(v string) *QueryGroupCorpListResponseBodyModule {
	s.CorpName = &v
	return s
}

type QueryGroupCorpListResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *QueryGroupCorpListResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s QueryGroupCorpListResponse) String() string {
	return tea.Prettify(s)
}

func (s QueryGroupCorpListResponse) GoString() string {
	return s.String()
}

func (s *QueryGroupCorpListResponse) SetHeaders(v map[string]*string) *QueryGroupCorpListResponse {
	s.Headers = v
	return s
}

func (s *QueryGroupCorpListResponse) SetStatusCode(v int32) *QueryGroupCorpListResponse {
	s.StatusCode = &v
	return s
}

func (s *QueryGroupCorpListResponse) SetBody(v *QueryGroupCorpListResponseBody) *QueryGroupCorpListResponse {
	s.Body = v
	return s
}

type QueryReimbursementOrderHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s QueryReimbursementOrderHeaders) String() string {
	return tea.Prettify(s)
}

func (s QueryReimbursementOrderHeaders) GoString() string {
	return s.String()
}

func (s *QueryReimbursementOrderHeaders) SetCommonHeaders(v map[string]*string) *QueryReimbursementOrderHeaders {
	s.CommonHeaders = v
	return s
}

func (s *QueryReimbursementOrderHeaders) SetXAcsBtripCorpToken(v string) *QueryReimbursementOrderHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type QueryReimbursementOrderRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// RT204396
	ReimbOrderNo *string `json:"reimb_order_no,omitempty" xml:"reimb_order_no,omitempty"`
	// example:
	//
	// ding123
	SubCorpId *string `json:"sub_corp_id,omitempty" xml:"sub_corp_id,omitempty"`
}

func (s QueryReimbursementOrderRequest) String() string {
	return tea.Prettify(s)
}

func (s QueryReimbursementOrderRequest) GoString() string {
	return s.String()
}

func (s *QueryReimbursementOrderRequest) SetReimbOrderNo(v string) *QueryReimbursementOrderRequest {
	s.ReimbOrderNo = &v
	return s
}

func (s *QueryReimbursementOrderRequest) SetSubCorpId(v string) *QueryReimbursementOrderRequest {
	s.SubCorpId = &v
	return s
}

type QueryReimbursementOrderResponseBody struct {
	// example:
	//
	// PARAM_ERROR
	Code    *string                                    `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                    `json:"message,omitempty" xml:"message,omitempty"`
	Module  *QueryReimbursementOrderResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s QueryReimbursementOrderResponseBody) String() string {
	return tea.Prettify(s)
}

func (s QueryReimbursementOrderResponseBody) GoString() string {
	return s.String()
}

func (s *QueryReimbursementOrderResponseBody) SetCode(v string) *QueryReimbursementOrderResponseBody {
	s.Code = &v
	return s
}

func (s *QueryReimbursementOrderResponseBody) SetMessage(v string) *QueryReimbursementOrderResponseBody {
	s.Message = &v
	return s
}

func (s *QueryReimbursementOrderResponseBody) SetModule(v *QueryReimbursementOrderResponseBodyModule) *QueryReimbursementOrderResponseBody {
	s.Module = v
	return s
}

func (s *QueryReimbursementOrderResponseBody) SetRequestId(v string) *QueryReimbursementOrderResponseBody {
	s.RequestId = &v
	return s
}

func (s *QueryReimbursementOrderResponseBody) SetSuccess(v bool) *QueryReimbursementOrderResponseBody {
	s.Success = &v
	return s
}

func (s *QueryReimbursementOrderResponseBody) SetTraceId(v string) *QueryReimbursementOrderResponseBody {
	s.TraceId = &v
	return s
}

type QueryReimbursementOrderResponseBodyModule struct {
	// example:
	//
	// 10.00
	CompanyAmount *string `json:"company_amount,omitempty" xml:"company_amount,omitempty"`
	// example:
	//
	// 20.00
	CompanyPayAmount *string `json:"company_pay_amount,omitempty" xml:"company_pay_amount,omitempty"`
	// example:
	//
	// dinga809ed71b9201f35
	CorpId                    *string                                              `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CostCenterCode            *string                                              `json:"cost_center_code,omitempty" xml:"cost_center_code,omitempty"`
	CostCenterName            *string                                              `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	Expenses                  []*QueryReimbursementOrderResponseBodyModuleExpenses `json:"expenses,omitempty" xml:"expenses,omitempty" type:"Repeated"`
	ExpensesCoverDeptId       *string                                              `json:"expenses_cover_dept_id,omitempty" xml:"expenses_cover_dept_id,omitempty"`
	ExpensesCoverDeptName     *string                                              `json:"expenses_cover_dept_name,omitempty" xml:"expenses_cover_dept_name,omitempty"`
	ExpensesCoverInvoiceTitle *string                                              `json:"expenses_cover_invoice_title,omitempty" xml:"expenses_cover_invoice_title,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-07-20T10:40Z
	GmtModified  *string                                                  `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	IsDeleted    *string                                                  `json:"is_deleted,omitempty" xml:"is_deleted,omitempty"`
	Itineraries  []*QueryReimbursementOrderResponseBodyModuleItineraries  `json:"itineraries,omitempty" xml:"itineraries,omitempty" type:"Repeated"`
	PaymentInfos []*QueryReimbursementOrderResponseBodyModulePaymentInfos `json:"payment_infos,omitempty" xml:"payment_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 10.00
	PersonalAmount *string `json:"personal_amount,omitempty" xml:"personal_amount,omitempty"`
	ProjectCode    *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName    *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	Reason         *string `json:"reason,omitempty" xml:"reason,omitempty"`
	// example:
	//
	// RT203956
	ReimbursementNo    *string `json:"reimbursement_no,omitempty" xml:"reimbursement_no,omitempty"`
	Remark             *string `json:"remark,omitempty" xml:"remark,omitempty"`
	Status             *string `json:"status,omitempty" xml:"status,omitempty"`
	TravelThirdApplyId *string `json:"travel_third_apply_id,omitempty" xml:"travel_third_apply_id,omitempty"`
	// example:
	//
	// userId
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s QueryReimbursementOrderResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s QueryReimbursementOrderResponseBodyModule) GoString() string {
	return s.String()
}

func (s *QueryReimbursementOrderResponseBodyModule) SetCompanyAmount(v string) *QueryReimbursementOrderResponseBodyModule {
	s.CompanyAmount = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetCompanyPayAmount(v string) *QueryReimbursementOrderResponseBodyModule {
	s.CompanyPayAmount = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetCorpId(v string) *QueryReimbursementOrderResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetCostCenterCode(v string) *QueryReimbursementOrderResponseBodyModule {
	s.CostCenterCode = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetCostCenterName(v string) *QueryReimbursementOrderResponseBodyModule {
	s.CostCenterName = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetExpenses(v []*QueryReimbursementOrderResponseBodyModuleExpenses) *QueryReimbursementOrderResponseBodyModule {
	s.Expenses = v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetExpensesCoverDeptId(v string) *QueryReimbursementOrderResponseBodyModule {
	s.ExpensesCoverDeptId = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetExpensesCoverDeptName(v string) *QueryReimbursementOrderResponseBodyModule {
	s.ExpensesCoverDeptName = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetExpensesCoverInvoiceTitle(v string) *QueryReimbursementOrderResponseBodyModule {
	s.ExpensesCoverInvoiceTitle = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetGmtCreate(v string) *QueryReimbursementOrderResponseBodyModule {
	s.GmtCreate = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetGmtModified(v string) *QueryReimbursementOrderResponseBodyModule {
	s.GmtModified = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetIsDeleted(v string) *QueryReimbursementOrderResponseBodyModule {
	s.IsDeleted = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetItineraries(v []*QueryReimbursementOrderResponseBodyModuleItineraries) *QueryReimbursementOrderResponseBodyModule {
	s.Itineraries = v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetPaymentInfos(v []*QueryReimbursementOrderResponseBodyModulePaymentInfos) *QueryReimbursementOrderResponseBodyModule {
	s.PaymentInfos = v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetPersonalAmount(v string) *QueryReimbursementOrderResponseBodyModule {
	s.PersonalAmount = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetProjectCode(v string) *QueryReimbursementOrderResponseBodyModule {
	s.ProjectCode = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetProjectName(v string) *QueryReimbursementOrderResponseBodyModule {
	s.ProjectName = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetReason(v string) *QueryReimbursementOrderResponseBodyModule {
	s.Reason = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetReimbursementNo(v string) *QueryReimbursementOrderResponseBodyModule {
	s.ReimbursementNo = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetRemark(v string) *QueryReimbursementOrderResponseBodyModule {
	s.Remark = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetStatus(v string) *QueryReimbursementOrderResponseBodyModule {
	s.Status = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetTravelThirdApplyId(v string) *QueryReimbursementOrderResponseBodyModule {
	s.TravelThirdApplyId = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetUserId(v string) *QueryReimbursementOrderResponseBodyModule {
	s.UserId = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModule) SetUserName(v string) *QueryReimbursementOrderResponseBodyModule {
	s.UserName = &v
	return s
}

type QueryReimbursementOrderResponseBodyModuleExpenses struct {
	// example:
	//
	// 20
	Amount              *string                                                                 `json:"amount,omitempty" xml:"amount,omitempty"`
	Currency            *string                                                                 `json:"currency,omitempty" xml:"currency,omitempty"`
	ExpenseCity         *string                                                                 `json:"expense_city,omitempty" xml:"expense_city,omitempty"`
	ExpenseCompositions []*QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions `json:"expense_compositions,omitempty" xml:"expense_compositions,omitempty" type:"Repeated"`
	// example:
	//
	// 2022-05-15T22:27Z
	ExpenseTime *string `json:"expense_time,omitempty" xml:"expense_time,omitempty"`
	ExpenseType *string `json:"expense_type,omitempty" xml:"expense_type,omitempty"`
	// example:
	//
	// code
	ExpenseTypeCode *string                                                          `json:"expense_type_code,omitempty" xml:"expense_type_code,omitempty"`
	InvoiceInfos    []*QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos `json:"invoice_infos,omitempty" xml:"invoice_infos,omitempty" type:"Repeated"`
	ReimbExpenseId  *int64                                                           `json:"reimb_expense_id,omitempty" xml:"reimb_expense_id,omitempty"`
	Remark          *string                                                          `json:"remark,omitempty" xml:"remark,omitempty"`
	SettlementType  *string                                                          `json:"settlement_type,omitempty" xml:"settlement_type,omitempty"`
}

func (s QueryReimbursementOrderResponseBodyModuleExpenses) String() string {
	return tea.Prettify(s)
}

func (s QueryReimbursementOrderResponseBodyModuleExpenses) GoString() string {
	return s.String()
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetAmount(v string) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.Amount = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetCurrency(v string) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.Currency = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetExpenseCity(v string) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.ExpenseCity = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetExpenseCompositions(v []*QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.ExpenseCompositions = v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetExpenseTime(v string) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.ExpenseTime = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetExpenseType(v string) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.ExpenseType = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetExpenseTypeCode(v string) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.ExpenseTypeCode = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetInvoiceInfos(v []*QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.InvoiceInfos = v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetReimbExpenseId(v int64) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.ReimbExpenseId = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetRemark(v string) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.Remark = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpenses) SetSettlementType(v string) *QueryReimbursementOrderResponseBodyModuleExpenses {
	s.SettlementType = &v
	return s
}

type QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions struct {
	BillSettlementId *int64    `json:"bill_settlement_id,omitempty" xml:"bill_settlement_id,omitempty"`
	CapitalDirection *string   `json:"capital_direction,omitempty" xml:"capital_direction,omitempty"`
	FeeType          *string   `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	OrderId          *string   `json:"order_id,omitempty" xml:"order_id,omitempty"`
	Remark           *string   `json:"remark,omitempty" xml:"remark,omitempty"`
	RemindTagList    []*string `json:"remind_tag_list,omitempty" xml:"remind_tag_list,omitempty" type:"Repeated"`
	SettlementAmount *string   `json:"settlement_amount,omitempty" xml:"settlement_amount,omitempty"`
	SettlementTime   *string   `json:"settlement_time,omitempty" xml:"settlement_time,omitempty"`
	VoucherType      *int32    `json:"voucher_type,omitempty" xml:"voucher_type,omitempty"`
}

func (s QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) String() string {
	return tea.Prettify(s)
}

func (s QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) GoString() string {
	return s.String()
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) SetBillSettlementId(v int64) *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions {
	s.BillSettlementId = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) SetCapitalDirection(v string) *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions {
	s.CapitalDirection = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) SetFeeType(v string) *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions {
	s.FeeType = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) SetOrderId(v string) *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions {
	s.OrderId = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) SetRemark(v string) *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions {
	s.Remark = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) SetRemindTagList(v []*string) *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions {
	s.RemindTagList = v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) SetSettlementAmount(v string) *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions {
	s.SettlementAmount = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) SetSettlementTime(v string) *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions {
	s.SettlementTime = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions) SetVoucherType(v int32) *QueryReimbursementOrderResponseBodyModuleExpensesExpenseCompositions {
	s.VoucherType = &v
	return s
}

type QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos struct {
	Amount        *string `json:"amount,omitempty" xml:"amount,omitempty"`
	InvoiceCode   *string `json:"invoice_code,omitempty" xml:"invoice_code,omitempty"`
	InvoiceData   *string `json:"invoice_data,omitempty" xml:"invoice_data,omitempty"`
	InvoiceDate   *string `json:"invoice_date,omitempty" xml:"invoice_date,omitempty"`
	InvoiceNumber *string `json:"invoice_number,omitempty" xml:"invoice_number,omitempty"`
	InvoiceType   *string `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
}

func (s QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos) String() string {
	return tea.Prettify(s)
}

func (s QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos) GoString() string {
	return s.String()
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos) SetAmount(v string) *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos {
	s.Amount = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos) SetInvoiceCode(v string) *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos {
	s.InvoiceCode = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos) SetInvoiceData(v string) *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos {
	s.InvoiceData = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos) SetInvoiceDate(v string) *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos {
	s.InvoiceDate = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos) SetInvoiceNumber(v string) *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos {
	s.InvoiceNumber = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos) SetInvoiceType(v string) *QueryReimbursementOrderResponseBodyModuleExpensesInvoiceInfos {
	s.InvoiceType = &v
	return s
}

type QueryReimbursementOrderResponseBodyModuleItineraries struct {
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	ArrDate *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	// example:
	//
	// CTU
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	DepDate    *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	TrafficWay *string `json:"traffic_way,omitempty" xml:"traffic_way,omitempty"`
	TripWay    *string `json:"trip_way,omitempty" xml:"trip_way,omitempty"`
}

func (s QueryReimbursementOrderResponseBodyModuleItineraries) String() string {
	return tea.Prettify(s)
}

func (s QueryReimbursementOrderResponseBodyModuleItineraries) GoString() string {
	return s.String()
}

func (s *QueryReimbursementOrderResponseBodyModuleItineraries) SetArrCity(v string) *QueryReimbursementOrderResponseBodyModuleItineraries {
	s.ArrCity = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleItineraries) SetArrDate(v string) *QueryReimbursementOrderResponseBodyModuleItineraries {
	s.ArrDate = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleItineraries) SetDepCity(v string) *QueryReimbursementOrderResponseBodyModuleItineraries {
	s.DepCity = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleItineraries) SetDepDate(v string) *QueryReimbursementOrderResponseBodyModuleItineraries {
	s.DepDate = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleItineraries) SetTrafficWay(v string) *QueryReimbursementOrderResponseBodyModuleItineraries {
	s.TrafficWay = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModuleItineraries) SetTripWay(v string) *QueryReimbursementOrderResponseBodyModuleItineraries {
	s.TripWay = &v
	return s
}

type QueryReimbursementOrderResponseBodyModulePaymentInfos struct {
	// example:
	//
	// 20.00
	Amount *string `json:"amount,omitempty" xml:"amount,omitempty"`
	// example:
	//
	// userId
	PayeeUserId *string `json:"payee_user_id,omitempty" xml:"payee_user_id,omitempty"`
}

func (s QueryReimbursementOrderResponseBodyModulePaymentInfos) String() string {
	return tea.Prettify(s)
}

func (s QueryReimbursementOrderResponseBodyModulePaymentInfos) GoString() string {
	return s.String()
}

func (s *QueryReimbursementOrderResponseBodyModulePaymentInfos) SetAmount(v string) *QueryReimbursementOrderResponseBodyModulePaymentInfos {
	s.Amount = &v
	return s
}

func (s *QueryReimbursementOrderResponseBodyModulePaymentInfos) SetPayeeUserId(v string) *QueryReimbursementOrderResponseBodyModulePaymentInfos {
	s.PayeeUserId = &v
	return s
}

type QueryReimbursementOrderResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *QueryReimbursementOrderResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s QueryReimbursementOrderResponse) String() string {
	return tea.Prettify(s)
}

func (s QueryReimbursementOrderResponse) GoString() string {
	return s.String()
}

func (s *QueryReimbursementOrderResponse) SetHeaders(v map[string]*string) *QueryReimbursementOrderResponse {
	s.Headers = v
	return s
}

func (s *QueryReimbursementOrderResponse) SetStatusCode(v int32) *QueryReimbursementOrderResponse {
	s.StatusCode = &v
	return s
}

func (s *QueryReimbursementOrderResponse) SetBody(v *QueryReimbursementOrderResponseBody) *QueryReimbursementOrderResponse {
	s.Body = v
	return s
}

type SyncSingleUserHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s SyncSingleUserHeaders) String() string {
	return tea.Prettify(s)
}

func (s SyncSingleUserHeaders) GoString() string {
	return s.String()
}

func (s *SyncSingleUserHeaders) SetCommonHeaders(v map[string]*string) *SyncSingleUserHeaders {
	s.CommonHeaders = v
	return s
}

func (s *SyncSingleUserHeaders) SetXAcsBtripSoCorpToken(v string) *SyncSingleUserHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type SyncSingleUserRequest struct {
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// 1001
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// 0
	LeaveStatus *int32 `json:"leave_status,omitempty" xml:"leave_status,omitempty"`
	// example:
	//
	// 72369
	ManagerUserId *string `json:"manager_user_id,omitempty" xml:"manager_user_id,omitempty"`
	// example:
	//
	// 16392740204
	Phone    *string `json:"phone,omitempty" xml:"phone,omitempty"`
	Position *string `json:"position,omitempty" xml:"position,omitempty"`
	// example:
	//
	// 1
	PositionLevel *string `json:"position_level,omitempty" xml:"position_level,omitempty"`
	// example:
	//
	// ce/shi
	RealNameEn        *string   `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	ThirdDepartIdList []*string `json:"third_depart_id_list,omitempty" xml:"third_depart_id_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 573263
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	// This parameter is required.
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s SyncSingleUserRequest) String() string {
	return tea.Prettify(s)
}

func (s SyncSingleUserRequest) GoString() string {
	return s.String()
}

func (s *SyncSingleUserRequest) SetEmail(v string) *SyncSingleUserRequest {
	s.Email = &v
	return s
}

func (s *SyncSingleUserRequest) SetJobNo(v string) *SyncSingleUserRequest {
	s.JobNo = &v
	return s
}

func (s *SyncSingleUserRequest) SetLeaveStatus(v int32) *SyncSingleUserRequest {
	s.LeaveStatus = &v
	return s
}

func (s *SyncSingleUserRequest) SetManagerUserId(v string) *SyncSingleUserRequest {
	s.ManagerUserId = &v
	return s
}

func (s *SyncSingleUserRequest) SetPhone(v string) *SyncSingleUserRequest {
	s.Phone = &v
	return s
}

func (s *SyncSingleUserRequest) SetPosition(v string) *SyncSingleUserRequest {
	s.Position = &v
	return s
}

func (s *SyncSingleUserRequest) SetPositionLevel(v string) *SyncSingleUserRequest {
	s.PositionLevel = &v
	return s
}

func (s *SyncSingleUserRequest) SetRealNameEn(v string) *SyncSingleUserRequest {
	s.RealNameEn = &v
	return s
}

func (s *SyncSingleUserRequest) SetThirdDepartIdList(v []*string) *SyncSingleUserRequest {
	s.ThirdDepartIdList = v
	return s
}

func (s *SyncSingleUserRequest) SetUserId(v string) *SyncSingleUserRequest {
	s.UserId = &v
	return s
}

func (s *SyncSingleUserRequest) SetUserName(v string) *SyncSingleUserRequest {
	s.UserName = &v
	return s
}

type SyncSingleUserShrinkRequest struct {
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// 1001
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// 0
	LeaveStatus *int32 `json:"leave_status,omitempty" xml:"leave_status,omitempty"`
	// example:
	//
	// 72369
	ManagerUserId *string `json:"manager_user_id,omitempty" xml:"manager_user_id,omitempty"`
	// example:
	//
	// 16392740204
	Phone    *string `json:"phone,omitempty" xml:"phone,omitempty"`
	Position *string `json:"position,omitempty" xml:"position,omitempty"`
	// example:
	//
	// 1
	PositionLevel *string `json:"position_level,omitempty" xml:"position_level,omitempty"`
	// example:
	//
	// ce/shi
	RealNameEn              *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	ThirdDepartIdListShrink *string `json:"third_depart_id_list,omitempty" xml:"third_depart_id_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 573263
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	// This parameter is required.
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s SyncSingleUserShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s SyncSingleUserShrinkRequest) GoString() string {
	return s.String()
}

func (s *SyncSingleUserShrinkRequest) SetEmail(v string) *SyncSingleUserShrinkRequest {
	s.Email = &v
	return s
}

func (s *SyncSingleUserShrinkRequest) SetJobNo(v string) *SyncSingleUserShrinkRequest {
	s.JobNo = &v
	return s
}

func (s *SyncSingleUserShrinkRequest) SetLeaveStatus(v int32) *SyncSingleUserShrinkRequest {
	s.LeaveStatus = &v
	return s
}

func (s *SyncSingleUserShrinkRequest) SetManagerUserId(v string) *SyncSingleUserShrinkRequest {
	s.ManagerUserId = &v
	return s
}

func (s *SyncSingleUserShrinkRequest) SetPhone(v string) *SyncSingleUserShrinkRequest {
	s.Phone = &v
	return s
}

func (s *SyncSingleUserShrinkRequest) SetPosition(v string) *SyncSingleUserShrinkRequest {
	s.Position = &v
	return s
}

func (s *SyncSingleUserShrinkRequest) SetPositionLevel(v string) *SyncSingleUserShrinkRequest {
	s.PositionLevel = &v
	return s
}

func (s *SyncSingleUserShrinkRequest) SetRealNameEn(v string) *SyncSingleUserShrinkRequest {
	s.RealNameEn = &v
	return s
}

func (s *SyncSingleUserShrinkRequest) SetThirdDepartIdListShrink(v string) *SyncSingleUserShrinkRequest {
	s.ThirdDepartIdListShrink = &v
	return s
}

func (s *SyncSingleUserShrinkRequest) SetUserId(v string) *SyncSingleUserShrinkRequest {
	s.UserId = &v
	return s
}

func (s *SyncSingleUserShrinkRequest) SetUserName(v string) *SyncSingleUserShrinkRequest {
	s.UserName = &v
	return s
}

type SyncSingleUserResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// success
	Module *string `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s SyncSingleUserResponseBody) String() string {
	return tea.Prettify(s)
}

func (s SyncSingleUserResponseBody) GoString() string {
	return s.String()
}

func (s *SyncSingleUserResponseBody) SetCode(v string) *SyncSingleUserResponseBody {
	s.Code = &v
	return s
}

func (s *SyncSingleUserResponseBody) SetMessage(v string) *SyncSingleUserResponseBody {
	s.Message = &v
	return s
}

func (s *SyncSingleUserResponseBody) SetModule(v string) *SyncSingleUserResponseBody {
	s.Module = &v
	return s
}

func (s *SyncSingleUserResponseBody) SetRequestId(v string) *SyncSingleUserResponseBody {
	s.RequestId = &v
	return s
}

func (s *SyncSingleUserResponseBody) SetSuccess(v bool) *SyncSingleUserResponseBody {
	s.Success = &v
	return s
}

func (s *SyncSingleUserResponseBody) SetTraceId(v string) *SyncSingleUserResponseBody {
	s.TraceId = &v
	return s
}

type SyncSingleUserResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *SyncSingleUserResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s SyncSingleUserResponse) String() string {
	return tea.Prettify(s)
}

func (s SyncSingleUserResponse) GoString() string {
	return s.String()
}

func (s *SyncSingleUserResponse) SetHeaders(v map[string]*string) *SyncSingleUserResponse {
	s.Headers = v
	return s
}

func (s *SyncSingleUserResponse) SetStatusCode(v int32) *SyncSingleUserResponse {
	s.StatusCode = &v
	return s
}

func (s *SyncSingleUserResponse) SetBody(v *SyncSingleUserResponseBody) *SyncSingleUserResponse {
	s.Body = v
	return s
}

type SyncThirdUserMappingHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s SyncThirdUserMappingHeaders) String() string {
	return tea.Prettify(s)
}

func (s SyncThirdUserMappingHeaders) GoString() string {
	return s.String()
}

func (s *SyncThirdUserMappingHeaders) SetCommonHeaders(v map[string]*string) *SyncThirdUserMappingHeaders {
	s.CommonHeaders = v
	return s
}

func (s *SyncThirdUserMappingHeaders) SetXAcsBtripCorpToken(v string) *SyncThirdUserMappingHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type SyncThirdUserMappingRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 0
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// weCom
	ThirdChannelType *string `json:"third_channel_type,omitempty" xml:"third_channel_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	ThirdUserId *string `json:"third_user_id,omitempty" xml:"third_user_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s SyncThirdUserMappingRequest) String() string {
	return tea.Prettify(s)
}

func (s SyncThirdUserMappingRequest) GoString() string {
	return s.String()
}

func (s *SyncThirdUserMappingRequest) SetStatus(v int32) *SyncThirdUserMappingRequest {
	s.Status = &v
	return s
}

func (s *SyncThirdUserMappingRequest) SetThirdChannelType(v string) *SyncThirdUserMappingRequest {
	s.ThirdChannelType = &v
	return s
}

func (s *SyncThirdUserMappingRequest) SetThirdUserId(v string) *SyncThirdUserMappingRequest {
	s.ThirdUserId = &v
	return s
}

func (s *SyncThirdUserMappingRequest) SetUserId(v string) *SyncThirdUserMappingRequest {
	s.UserId = &v
	return s
}

type SyncThirdUserMappingResponseBody struct {
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 8465F68D-BC97-5C0F-9161-3E65919D9135
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s SyncThirdUserMappingResponseBody) String() string {
	return tea.Prettify(s)
}

func (s SyncThirdUserMappingResponseBody) GoString() string {
	return s.String()
}

func (s *SyncThirdUserMappingResponseBody) SetCode(v string) *SyncThirdUserMappingResponseBody {
	s.Code = &v
	return s
}

func (s *SyncThirdUserMappingResponseBody) SetMessage(v string) *SyncThirdUserMappingResponseBody {
	s.Message = &v
	return s
}

func (s *SyncThirdUserMappingResponseBody) SetRequestId(v string) *SyncThirdUserMappingResponseBody {
	s.RequestId = &v
	return s
}

func (s *SyncThirdUserMappingResponseBody) SetSuccess(v bool) *SyncThirdUserMappingResponseBody {
	s.Success = &v
	return s
}

func (s *SyncThirdUserMappingResponseBody) SetTraceId(v string) *SyncThirdUserMappingResponseBody {
	s.TraceId = &v
	return s
}

type SyncThirdUserMappingResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *SyncThirdUserMappingResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s SyncThirdUserMappingResponse) String() string {
	return tea.Prettify(s)
}

func (s SyncThirdUserMappingResponse) GoString() string {
	return s.String()
}

func (s *SyncThirdUserMappingResponse) SetHeaders(v map[string]*string) *SyncThirdUserMappingResponse {
	s.Headers = v
	return s
}

func (s *SyncThirdUserMappingResponse) SetStatusCode(v int32) *SyncThirdUserMappingResponse {
	s.StatusCode = &v
	return s
}

func (s *SyncThirdUserMappingResponse) SetBody(v *SyncThirdUserMappingResponseBody) *SyncThirdUserMappingResponse {
	s.Body = v
	return s
}

type TBAccountInfoQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TBAccountInfoQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TBAccountInfoQueryHeaders) GoString() string {
	return s.String()
}

func (s *TBAccountInfoQueryHeaders) SetCommonHeaders(v map[string]*string) *TBAccountInfoQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TBAccountInfoQueryHeaders) SetXAcsBtripCorpToken(v string) *TBAccountInfoQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TBAccountInfoQueryResponseBody struct {
	// example:
	//
	// 0
	Code    *string                               `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                               `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TBAccountInfoQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 456456575656757
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f07f316603757445272547d959f
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TBAccountInfoQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TBAccountInfoQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TBAccountInfoQueryResponseBody) SetCode(v string) *TBAccountInfoQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TBAccountInfoQueryResponseBody) SetMessage(v string) *TBAccountInfoQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TBAccountInfoQueryResponseBody) SetModule(v *TBAccountInfoQueryResponseBodyModule) *TBAccountInfoQueryResponseBody {
	s.Module = v
	return s
}

func (s *TBAccountInfoQueryResponseBody) SetRequestId(v string) *TBAccountInfoQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TBAccountInfoQueryResponseBody) SetSuccess(v bool) *TBAccountInfoQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TBAccountInfoQueryResponseBody) SetTraceId(v string) *TBAccountInfoQueryResponseBody {
	s.TraceId = &v
	return s
}

type TBAccountInfoQueryResponseBodyModule struct {
	TbAccount *string `json:"tb_account,omitempty" xml:"tb_account,omitempty"`
	// example:
	//
	// true
	TbBond *bool `json:"tb_bond,omitempty" xml:"tb_bond,omitempty"`
}

func (s TBAccountInfoQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TBAccountInfoQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TBAccountInfoQueryResponseBodyModule) SetTbAccount(v string) *TBAccountInfoQueryResponseBodyModule {
	s.TbAccount = &v
	return s
}

func (s *TBAccountInfoQueryResponseBodyModule) SetTbBond(v bool) *TBAccountInfoQueryResponseBodyModule {
	s.TbBond = &v
	return s
}

type TBAccountInfoQueryResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TBAccountInfoQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TBAccountInfoQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TBAccountInfoQueryResponse) GoString() string {
	return s.String()
}

func (s *TBAccountInfoQueryResponse) SetHeaders(v map[string]*string) *TBAccountInfoQueryResponse {
	s.Headers = v
	return s
}

func (s *TBAccountInfoQueryResponse) SetStatusCode(v int32) *TBAccountInfoQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TBAccountInfoQueryResponse) SetBody(v *TBAccountInfoQueryResponseBody) *TBAccountInfoQueryResponse {
	s.Body = v
	return s
}

type TBAccountUnbindHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TBAccountUnbindHeaders) String() string {
	return tea.Prettify(s)
}

func (s TBAccountUnbindHeaders) GoString() string {
	return s.String()
}

func (s *TBAccountUnbindHeaders) SetCommonHeaders(v map[string]*string) *TBAccountUnbindHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TBAccountUnbindHeaders) SetXAcsBtripCorpToken(v string) *TBAccountUnbindHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TBAccountUnbindResponseBody struct {
	// example:
	//
	// 0
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// true
	Module *bool `json:"module,omitempty" xml:"module,omitempty"`
	// example:
	//
	// 456456575656757
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TBAccountUnbindResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TBAccountUnbindResponseBody) GoString() string {
	return s.String()
}

func (s *TBAccountUnbindResponseBody) SetCode(v string) *TBAccountUnbindResponseBody {
	s.Code = &v
	return s
}

func (s *TBAccountUnbindResponseBody) SetMessage(v string) *TBAccountUnbindResponseBody {
	s.Message = &v
	return s
}

func (s *TBAccountUnbindResponseBody) SetModule(v bool) *TBAccountUnbindResponseBody {
	s.Module = &v
	return s
}

func (s *TBAccountUnbindResponseBody) SetRequestId(v string) *TBAccountUnbindResponseBody {
	s.RequestId = &v
	return s
}

func (s *TBAccountUnbindResponseBody) SetSuccess(v bool) *TBAccountUnbindResponseBody {
	s.Success = &v
	return s
}

func (s *TBAccountUnbindResponseBody) SetTraceId(v string) *TBAccountUnbindResponseBody {
	s.TraceId = &v
	return s
}

type TBAccountUnbindResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TBAccountUnbindResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TBAccountUnbindResponse) String() string {
	return tea.Prettify(s)
}

func (s TBAccountUnbindResponse) GoString() string {
	return s.String()
}

func (s *TBAccountUnbindResponse) SetHeaders(v map[string]*string) *TBAccountUnbindResponse {
	s.Headers = v
	return s
}

func (s *TBAccountUnbindResponse) SetStatusCode(v int32) *TBAccountUnbindResponse {
	s.StatusCode = &v
	return s
}

func (s *TBAccountUnbindResponse) SetBody(v *TBAccountUnbindResponseBody) *TBAccountUnbindResponse {
	s.Body = v
	return s
}

type TicketChangingApplyHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TicketChangingApplyHeaders) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingApplyHeaders) GoString() string {
	return s.String()
}

func (s *TicketChangingApplyHeaders) SetCommonHeaders(v map[string]*string) *TicketChangingApplyHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TicketChangingApplyHeaders) SetXAcsBtripCorpToken(v string) *TicketChangingApplyHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TicketChangingApplyRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// dis1234
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// mid1243
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	IsVoluntary   *int32  `json:"is_voluntary,omitempty" xml:"is_voluntary,omitempty"`
	// This parameter is required.
	ModifyFlightInfoList []*TicketChangingApplyRequestModifyFlightInfoList `json:"modify_flight_info_list,omitempty" xml:"modify_flight_info_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 1s8837sh991hsj92h
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	Reason    *string `json:"reason,omitempty" xml:"reason,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// us88s2bsbin22hjusd8i
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// true
	WhetherRetry *bool `json:"whether_retry,omitempty" xml:"whether_retry,omitempty"`
}

func (s TicketChangingApplyRequest) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingApplyRequest) GoString() string {
	return s.String()
}

func (s *TicketChangingApplyRequest) SetDisOrderId(v string) *TicketChangingApplyRequest {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingApplyRequest) SetDisSubOrderId(v string) *TicketChangingApplyRequest {
	s.DisSubOrderId = &v
	return s
}

func (s *TicketChangingApplyRequest) SetIsVoluntary(v int32) *TicketChangingApplyRequest {
	s.IsVoluntary = &v
	return s
}

func (s *TicketChangingApplyRequest) SetModifyFlightInfoList(v []*TicketChangingApplyRequestModifyFlightInfoList) *TicketChangingApplyRequest {
	s.ModifyFlightInfoList = v
	return s
}

func (s *TicketChangingApplyRequest) SetOtaItemId(v string) *TicketChangingApplyRequest {
	s.OtaItemId = &v
	return s
}

func (s *TicketChangingApplyRequest) SetReason(v string) *TicketChangingApplyRequest {
	s.Reason = &v
	return s
}

func (s *TicketChangingApplyRequest) SetSessionId(v string) *TicketChangingApplyRequest {
	s.SessionId = &v
	return s
}

func (s *TicketChangingApplyRequest) SetWhetherRetry(v bool) *TicketChangingApplyRequest {
	s.WhetherRetry = &v
	return s
}

type TicketChangingApplyRequestModifyFlightInfoList struct {
	// This parameter is required.
	//
	// example:
	//
	// BJS
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// Y
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HGH
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0000-00-00 00:00:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// CA1704
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// This parameter is required.
	PassengerInfoList []*TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList `json:"passenger_info_list,omitempty" xml:"passenger_info_list,omitempty" type:"Repeated"`
}

func (s TicketChangingApplyRequestModifyFlightInfoList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingApplyRequestModifyFlightInfoList) GoString() string {
	return s.String()
}

func (s *TicketChangingApplyRequestModifyFlightInfoList) SetArrCity(v string) *TicketChangingApplyRequestModifyFlightInfoList {
	s.ArrCity = &v
	return s
}

func (s *TicketChangingApplyRequestModifyFlightInfoList) SetCabin(v string) *TicketChangingApplyRequestModifyFlightInfoList {
	s.Cabin = &v
	return s
}

func (s *TicketChangingApplyRequestModifyFlightInfoList) SetDepCity(v string) *TicketChangingApplyRequestModifyFlightInfoList {
	s.DepCity = &v
	return s
}

func (s *TicketChangingApplyRequestModifyFlightInfoList) SetDepDate(v string) *TicketChangingApplyRequestModifyFlightInfoList {
	s.DepDate = &v
	return s
}

func (s *TicketChangingApplyRequestModifyFlightInfoList) SetFlightNo(v string) *TicketChangingApplyRequestModifyFlightInfoList {
	s.FlightNo = &v
	return s
}

func (s *TicketChangingApplyRequestModifyFlightInfoList) SetPassengerInfoList(v []*TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList) *TicketChangingApplyRequestModifyFlightInfoList {
	s.PassengerInfoList = v
	return s
}

type TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList struct {
	// This parameter is required.
	//
	// example:
	//
	// CA1703
	OriginFlightNo *string `json:"origin_flight_no,omitempty" xml:"origin_flight_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1234
	OutUserId *string `json:"out_user_id,omitempty" xml:"out_user_id,omitempty"`
	// This parameter is required.
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
}

func (s TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList) GoString() string {
	return s.String()
}

func (s *TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList) SetOriginFlightNo(v string) *TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList {
	s.OriginFlightNo = &v
	return s
}

func (s *TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList) SetOutUserId(v string) *TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList {
	s.OutUserId = &v
	return s
}

func (s *TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList) SetPassengerName(v string) *TicketChangingApplyRequestModifyFlightInfoListPassengerInfoList {
	s.PassengerName = &v
	return s
}

type TicketChangingApplyShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// dis1234
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// mid1243
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	IsVoluntary   *int32  `json:"is_voluntary,omitempty" xml:"is_voluntary,omitempty"`
	// This parameter is required.
	ModifyFlightInfoListShrink *string `json:"modify_flight_info_list,omitempty" xml:"modify_flight_info_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1s8837sh991hsj92h
	OtaItemId *string `json:"ota_item_id,omitempty" xml:"ota_item_id,omitempty"`
	Reason    *string `json:"reason,omitempty" xml:"reason,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// us88s2bsbin22hjusd8i
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// true
	WhetherRetry *bool `json:"whether_retry,omitempty" xml:"whether_retry,omitempty"`
}

func (s TicketChangingApplyShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingApplyShrinkRequest) GoString() string {
	return s.String()
}

func (s *TicketChangingApplyShrinkRequest) SetDisOrderId(v string) *TicketChangingApplyShrinkRequest {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingApplyShrinkRequest) SetDisSubOrderId(v string) *TicketChangingApplyShrinkRequest {
	s.DisSubOrderId = &v
	return s
}

func (s *TicketChangingApplyShrinkRequest) SetIsVoluntary(v int32) *TicketChangingApplyShrinkRequest {
	s.IsVoluntary = &v
	return s
}

func (s *TicketChangingApplyShrinkRequest) SetModifyFlightInfoListShrink(v string) *TicketChangingApplyShrinkRequest {
	s.ModifyFlightInfoListShrink = &v
	return s
}

func (s *TicketChangingApplyShrinkRequest) SetOtaItemId(v string) *TicketChangingApplyShrinkRequest {
	s.OtaItemId = &v
	return s
}

func (s *TicketChangingApplyShrinkRequest) SetReason(v string) *TicketChangingApplyShrinkRequest {
	s.Reason = &v
	return s
}

func (s *TicketChangingApplyShrinkRequest) SetSessionId(v string) *TicketChangingApplyShrinkRequest {
	s.SessionId = &v
	return s
}

func (s *TicketChangingApplyShrinkRequest) SetWhetherRetry(v bool) *TicketChangingApplyShrinkRequest {
	s.WhetherRetry = &v
	return s
}

type TicketChangingApplyResponseBody struct {
	// example:
	//
	// 0
	Code    *string                                `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TicketChangingApplyResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TicketChangingApplyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingApplyResponseBody) GoString() string {
	return s.String()
}

func (s *TicketChangingApplyResponseBody) SetCode(v string) *TicketChangingApplyResponseBody {
	s.Code = &v
	return s
}

func (s *TicketChangingApplyResponseBody) SetMessage(v string) *TicketChangingApplyResponseBody {
	s.Message = &v
	return s
}

func (s *TicketChangingApplyResponseBody) SetModule(v *TicketChangingApplyResponseBodyModule) *TicketChangingApplyResponseBody {
	s.Module = v
	return s
}

func (s *TicketChangingApplyResponseBody) SetRequestId(v string) *TicketChangingApplyResponseBody {
	s.RequestId = &v
	return s
}

func (s *TicketChangingApplyResponseBody) SetSuccess(v bool) *TicketChangingApplyResponseBody {
	s.Success = &v
	return s
}

func (s *TicketChangingApplyResponseBody) SetTraceId(v string) *TicketChangingApplyResponseBody {
	s.TraceId = &v
	return s
}

type TicketChangingApplyResponseBodyModule struct {
	// example:
	//
	// 1000
	BookingChangedTotalFee *int32 `json:"booking_changed_total_fee,omitempty" xml:"booking_changed_total_fee,omitempty"`
	// example:
	//
	// 1000
	BookingOriginTotalFee *int32 `json:"booking_origin_total_fee,omitempty" xml:"booking_origin_total_fee,omitempty"`
	// example:
	//
	// true
	BookingPriceChanged *bool `json:"booking_price_changed,omitempty" xml:"booking_price_changed,omitempty"`
	// example:
	//
	// 1234
	BtripOrderId *int64 `json:"btrip_order_id,omitempty" xml:"btrip_order_id,omitempty"`
	// example:
	//
	// 1234
	BtripSubOrderId *int64 `json:"btrip_sub_order_id,omitempty" xml:"btrip_sub_order_id,omitempty"`
	// example:
	//
	// true
	CanPay *bool `json:"can_pay,omitempty" xml:"can_pay,omitempty"`
	// example:
	//
	// 1000
	ChangeFee *int64 `json:"change_fee,omitempty" xml:"change_fee,omitempty"`
	// example:
	//
	// 0000-00-00 00:00:00
	DeadlineTime *string `json:"deadline_time,omitempty" xml:"deadline_time,omitempty"`
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// mid112
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	// example:
	//
	// 1
	MaxRetryTimes *int32 `json:"max_retry_times,omitempty" xml:"max_retry_times,omitempty"`
	// example:
	//
	// 1000
	NextRetryInterval *int64 `json:"next_retry_interval,omitempty" xml:"next_retry_interval,omitempty"`
	// example:
	//
	// true
	Retry           *bool   `json:"retry,omitempty" xml:"retry,omitempty"`
	RetryClientTips *string `json:"retry_client_tips,omitempty" xml:"retry_client_tips,omitempty"`
	// example:
	//
	// 0
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 1000
	UpgradeFee *int64 `json:"upgrade_fee,omitempty" xml:"upgrade_fee,omitempty"`
}

func (s TicketChangingApplyResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingApplyResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TicketChangingApplyResponseBodyModule) SetBookingChangedTotalFee(v int32) *TicketChangingApplyResponseBodyModule {
	s.BookingChangedTotalFee = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetBookingOriginTotalFee(v int32) *TicketChangingApplyResponseBodyModule {
	s.BookingOriginTotalFee = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetBookingPriceChanged(v bool) *TicketChangingApplyResponseBodyModule {
	s.BookingPriceChanged = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetBtripOrderId(v int64) *TicketChangingApplyResponseBodyModule {
	s.BtripOrderId = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetBtripSubOrderId(v int64) *TicketChangingApplyResponseBodyModule {
	s.BtripSubOrderId = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetCanPay(v bool) *TicketChangingApplyResponseBodyModule {
	s.CanPay = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetChangeFee(v int64) *TicketChangingApplyResponseBodyModule {
	s.ChangeFee = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetDeadlineTime(v string) *TicketChangingApplyResponseBodyModule {
	s.DeadlineTime = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetDisOrderId(v string) *TicketChangingApplyResponseBodyModule {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetDisSubOrderId(v string) *TicketChangingApplyResponseBodyModule {
	s.DisSubOrderId = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetMaxRetryTimes(v int32) *TicketChangingApplyResponseBodyModule {
	s.MaxRetryTimes = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetNextRetryInterval(v int64) *TicketChangingApplyResponseBodyModule {
	s.NextRetryInterval = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetRetry(v bool) *TicketChangingApplyResponseBodyModule {
	s.Retry = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetRetryClientTips(v string) *TicketChangingApplyResponseBodyModule {
	s.RetryClientTips = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetStatus(v int32) *TicketChangingApplyResponseBodyModule {
	s.Status = &v
	return s
}

func (s *TicketChangingApplyResponseBodyModule) SetUpgradeFee(v int64) *TicketChangingApplyResponseBodyModule {
	s.UpgradeFee = &v
	return s
}

type TicketChangingApplyResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TicketChangingApplyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TicketChangingApplyResponse) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingApplyResponse) GoString() string {
	return s.String()
}

func (s *TicketChangingApplyResponse) SetHeaders(v map[string]*string) *TicketChangingApplyResponse {
	s.Headers = v
	return s
}

func (s *TicketChangingApplyResponse) SetStatusCode(v int32) *TicketChangingApplyResponse {
	s.StatusCode = &v
	return s
}

func (s *TicketChangingApplyResponse) SetBody(v *TicketChangingApplyResponseBody) *TicketChangingApplyResponse {
	s.Body = v
	return s
}

type TicketChangingCancelHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TicketChangingCancelHeaders) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingCancelHeaders) GoString() string {
	return s.String()
}

func (s *TicketChangingCancelHeaders) SetCommonHeaders(v map[string]*string) *TicketChangingCancelHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TicketChangingCancelHeaders) SetXAcsBtripCorpToken(v string) *TicketChangingCancelHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TicketChangingCancelRequest struct {
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// refun123
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
}

func (s TicketChangingCancelRequest) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingCancelRequest) GoString() string {
	return s.String()
}

func (s *TicketChangingCancelRequest) SetDisOrderId(v string) *TicketChangingCancelRequest {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingCancelRequest) SetDisSubOrderId(v string) *TicketChangingCancelRequest {
	s.DisSubOrderId = &v
	return s
}

type TicketChangingCancelResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                 `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                 `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TicketChangingCancelResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TicketChangingCancelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingCancelResponseBody) GoString() string {
	return s.String()
}

func (s *TicketChangingCancelResponseBody) SetCode(v string) *TicketChangingCancelResponseBody {
	s.Code = &v
	return s
}

func (s *TicketChangingCancelResponseBody) SetMessage(v string) *TicketChangingCancelResponseBody {
	s.Message = &v
	return s
}

func (s *TicketChangingCancelResponseBody) SetModule(v *TicketChangingCancelResponseBodyModule) *TicketChangingCancelResponseBody {
	s.Module = v
	return s
}

func (s *TicketChangingCancelResponseBody) SetRequestId(v string) *TicketChangingCancelResponseBody {
	s.RequestId = &v
	return s
}

func (s *TicketChangingCancelResponseBody) SetSuccess(v bool) *TicketChangingCancelResponseBody {
	s.Success = &v
	return s
}

func (s *TicketChangingCancelResponseBody) SetTraceId(v string) *TicketChangingCancelResponseBody {
	s.TraceId = &v
	return s
}

type TicketChangingCancelResponseBodyModule struct {
	// example:
	//
	// 0000-00-00 00:00:00
	CancelTime *string `json:"cancel_time,omitempty" xml:"cancel_time,omitempty"`
	// example:
	//
	// mid1243
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	Status        *string `json:"status,omitempty" xml:"status,omitempty"`
}

func (s TicketChangingCancelResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingCancelResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TicketChangingCancelResponseBodyModule) SetCancelTime(v string) *TicketChangingCancelResponseBodyModule {
	s.CancelTime = &v
	return s
}

func (s *TicketChangingCancelResponseBodyModule) SetDisSubOrderId(v string) *TicketChangingCancelResponseBodyModule {
	s.DisSubOrderId = &v
	return s
}

func (s *TicketChangingCancelResponseBodyModule) SetStatus(v string) *TicketChangingCancelResponseBodyModule {
	s.Status = &v
	return s
}

type TicketChangingCancelResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TicketChangingCancelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TicketChangingCancelResponse) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingCancelResponse) GoString() string {
	return s.String()
}

func (s *TicketChangingCancelResponse) SetHeaders(v map[string]*string) *TicketChangingCancelResponse {
	s.Headers = v
	return s
}

func (s *TicketChangingCancelResponse) SetStatusCode(v int32) *TicketChangingCancelResponse {
	s.StatusCode = &v
	return s
}

func (s *TicketChangingCancelResponse) SetBody(v *TicketChangingCancelResponseBody) *TicketChangingCancelResponse {
	s.Body = v
	return s
}

type TicketChangingDetailHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TicketChangingDetailHeaders) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingDetailHeaders) GoString() string {
	return s.String()
}

func (s *TicketChangingDetailHeaders) SetCommonHeaders(v map[string]*string) *TicketChangingDetailHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TicketChangingDetailHeaders) SetXAcsBtripCorpToken(v string) *TicketChangingDetailHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TicketChangingDetailRequest struct {
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// chang123
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
}

func (s TicketChangingDetailRequest) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingDetailRequest) GoString() string {
	return s.String()
}

func (s *TicketChangingDetailRequest) SetDisOrderId(v string) *TicketChangingDetailRequest {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingDetailRequest) SetDisSubOrderId(v string) *TicketChangingDetailRequest {
	s.DisSubOrderId = &v
	return s
}

type TicketChangingDetailResponseBody struct {
	// example:
	//
	// 0
	Code    *string                                 `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                 `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TicketChangingDetailResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TicketChangingDetailResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingDetailResponseBody) GoString() string {
	return s.String()
}

func (s *TicketChangingDetailResponseBody) SetCode(v string) *TicketChangingDetailResponseBody {
	s.Code = &v
	return s
}

func (s *TicketChangingDetailResponseBody) SetMessage(v string) *TicketChangingDetailResponseBody {
	s.Message = &v
	return s
}

func (s *TicketChangingDetailResponseBody) SetModule(v *TicketChangingDetailResponseBodyModule) *TicketChangingDetailResponseBody {
	s.Module = v
	return s
}

func (s *TicketChangingDetailResponseBody) SetRequestId(v string) *TicketChangingDetailResponseBody {
	s.RequestId = &v
	return s
}

func (s *TicketChangingDetailResponseBody) SetSuccess(v bool) *TicketChangingDetailResponseBody {
	s.Success = &v
	return s
}

func (s *TicketChangingDetailResponseBody) SetTraceId(v string) *TicketChangingDetailResponseBody {
	s.TraceId = &v
	return s
}

type TicketChangingDetailResponseBodyModule struct {
	AlipayTradeNo *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	// example:
	//
	// 1002
	BtripOrderId *int64 `json:"btrip_order_id,omitempty" xml:"btrip_order_id,omitempty"`
	// example:
	//
	// 37772
	BtripSubOrderId *int64 `json:"btrip_sub_order_id,omitempty" xml:"btrip_sub_order_id,omitempty"`
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// example:
	//
	// chang123
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	// example:
	//
	// {}
	Extra          *string                                                 `json:"extra,omitempty" xml:"extra,omitempty"`
	FlightInfoList []*TicketChangingDetailResponseBodyModuleFlightInfoList `json:"flight_info_list,omitempty" xml:"flight_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2022-12-30 11:30:00
	LastPayTime *string `json:"last_pay_time,omitempty" xml:"last_pay_time,omitempty"`
	// example:
	//
	// 0
	PayStatus *int32 `json:"pay_status,omitempty" xml:"pay_status,omitempty"`
	// example:
	//
	// 2022-12-30 11:30:00
	PayTime *string `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	// example:
	//
	// 100
	SettlePrice *int64 `json:"settle_price,omitempty" xml:"settle_price,omitempty"`
	SettleType  *int32 `json:"settle_type,omitempty" xml:"settle_type,omitempty"`
	Status      *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 100
	TotalChangePrice *int64 `json:"total_change_price,omitempty" xml:"total_change_price,omitempty"`
	// example:
	//
	// 100
	TotalPrice *int64 `json:"total_price,omitempty" xml:"total_price,omitempty"`
	// example:
	//
	// 100
	TotalUpgradePrice *int64                                                    `json:"total_upgrade_price,omitempty" xml:"total_upgrade_price,omitempty"`
	TravelerInfoList  []*TicketChangingDetailResponseBodyModuleTravelerInfoList `json:"traveler_info_list,omitempty" xml:"traveler_info_list,omitempty" type:"Repeated"`
}

func (s TicketChangingDetailResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingDetailResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TicketChangingDetailResponseBodyModule) SetAlipayTradeNo(v string) *TicketChangingDetailResponseBodyModule {
	s.AlipayTradeNo = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetBtripOrderId(v int64) *TicketChangingDetailResponseBodyModule {
	s.BtripOrderId = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetBtripSubOrderId(v int64) *TicketChangingDetailResponseBodyModule {
	s.BtripSubOrderId = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetDisOrderId(v string) *TicketChangingDetailResponseBodyModule {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetDisSubOrderId(v string) *TicketChangingDetailResponseBodyModule {
	s.DisSubOrderId = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetExtra(v string) *TicketChangingDetailResponseBodyModule {
	s.Extra = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetFlightInfoList(v []*TicketChangingDetailResponseBodyModuleFlightInfoList) *TicketChangingDetailResponseBodyModule {
	s.FlightInfoList = v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetLastPayTime(v string) *TicketChangingDetailResponseBodyModule {
	s.LastPayTime = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetPayStatus(v int32) *TicketChangingDetailResponseBodyModule {
	s.PayStatus = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetPayTime(v string) *TicketChangingDetailResponseBodyModule {
	s.PayTime = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetSettlePrice(v int64) *TicketChangingDetailResponseBodyModule {
	s.SettlePrice = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetSettleType(v int32) *TicketChangingDetailResponseBodyModule {
	s.SettleType = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetStatus(v int32) *TicketChangingDetailResponseBodyModule {
	s.Status = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetTotalChangePrice(v int64) *TicketChangingDetailResponseBodyModule {
	s.TotalChangePrice = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetTotalPrice(v int64) *TicketChangingDetailResponseBodyModule {
	s.TotalPrice = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetTotalUpgradePrice(v int64) *TicketChangingDetailResponseBodyModule {
	s.TotalUpgradePrice = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModule) SetTravelerInfoList(v []*TicketChangingDetailResponseBodyModuleTravelerInfoList) *TicketChangingDetailResponseBodyModule {
	s.TravelerInfoList = v
	return s
}

type TicketChangingDetailResponseBodyModuleFlightInfoList struct {
	// example:
	//
	// MU
	AirlineCode       *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName       *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	AirlineSimpleName *string `json:"airline_simple_name,omitempty" xml:"airline_simple_name,omitempty"`
	ArrAirport        *string `json:"arr_airport,omitempty" xml:"arr_airport,omitempty"`
	// example:
	//
	// HGH
	ArrAirportCode     *string `json:"arr_airport_code,omitempty" xml:"arr_airport_code,omitempty"`
	ArrAirportCodeName *string `json:"arr_airport_code_name,omitempty" xml:"arr_airport_code_name,omitempty"`
	// example:
	//
	// HGH
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// LHW
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	// example:
	//
	// T3
	ArrTerminal *string `json:"arr_terminal,omitempty" xml:"arr_terminal,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	Baggage *string `json:"baggage,omitempty" xml:"baggage,omitempty"`
	// example:
	//
	// 100
	BuildPrice *int64 `json:"build_price,omitempty" xml:"build_price,omitempty"`
	// example:
	//
	// V
	Cabin      *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	// example:
	//
	// MU3849
	Carrier    *string `json:"carrier,omitempty" xml:"carrier,omitempty"`
	DepAirport *string `json:"dep_airport,omitempty" xml:"dep_airport,omitempty"`
	// example:
	//
	// NGB
	DepAirportCode     *string `json:"dep_airport_code,omitempty" xml:"dep_airport_code,omitempty"`
	DepAirportCodeName *string `json:"dep_airport_code_name,omitempty" xml:"dep_airport_code_name,omitempty"`
	// example:
	//
	// BJS
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// example:
	//
	// NGB
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// T4
	DepTerminal *string `json:"dep_terminal,omitempty" xml:"dep_terminal,omitempty"`
	// example:
	//
	// 2000-01-01 00:00:00
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// MU3849
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// Y
	LastCabin *string `json:"last_cabin,omitempty" xml:"last_cabin,omitempty"`
	// example:
	//
	// CA1982
	LastFlightNo *string `json:"last_flight_no,omitempty" xml:"last_flight_no,omitempty"`
	// example:
	//
	// 3
	Meal *string `json:"meal,omitempty" xml:"meal,omitempty"`
	// example:
	//
	// 100
	OilPrice    *int64 `json:"oil_price,omitempty" xml:"oil_price,omitempty"`
	SegmentType *int32 `json:"segment_type,omitempty" xml:"segment_type,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// NGB
	StopCity *string `json:"stop_city,omitempty" xml:"stop_city,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
	// example:
	//
	// 100
	TicketPrice    *int64  `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	TuigaiqianInfo *string `json:"tuigaiqian_info,omitempty" xml:"tuigaiqian_info,omitempty"`
}

func (s TicketChangingDetailResponseBodyModuleFlightInfoList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingDetailResponseBodyModuleFlightInfoList) GoString() string {
	return s.String()
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetAirlineCode(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.AirlineCode = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetAirlineName(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.AirlineName = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetAirlineSimpleName(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.AirlineSimpleName = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetArrAirport(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.ArrAirport = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetArrAirportCode(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.ArrAirportCode = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetArrAirportCodeName(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.ArrAirportCodeName = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetArrCity(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.ArrCity = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetArrCityCode(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.ArrCityCode = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetArrTerminal(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.ArrTerminal = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetArrTime(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.ArrTime = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetBaggage(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.Baggage = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetBuildPrice(v int64) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.BuildPrice = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetCabin(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.Cabin = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetCabinClass(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.CabinClass = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetCarrier(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.Carrier = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetDepAirport(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.DepAirport = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetDepAirportCode(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.DepAirportCode = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetDepAirportCodeName(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.DepAirportCodeName = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetDepCity(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.DepCity = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetDepCityCode(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.DepCityCode = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetDepTerminal(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.DepTerminal = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetDepTime(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.DepTime = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetFlightNo(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.FlightNo = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetLastCabin(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.LastCabin = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetLastFlightNo(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.LastFlightNo = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetMeal(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.Meal = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetOilPrice(v int64) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.OilPrice = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetSegmentType(v int32) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.SegmentType = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetStopArrTime(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.StopArrTime = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetStopCity(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.StopCity = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetStopDepTime(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.StopDepTime = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetTicketPrice(v int64) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.TicketPrice = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleFlightInfoList) SetTuigaiqianInfo(v string) *TicketChangingDetailResponseBodyModuleFlightInfoList {
	s.TuigaiqianInfo = &v
	return s
}

type TicketChangingDetailResponseBodyModuleTravelerInfoList struct {
	// example:
	//
	// 2000-01-01
	BirthDate *string `json:"birth_date,omitempty" xml:"birth_date,omitempty"`
	// example:
	//
	// 12345
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 0
	CertType *string `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// 0
	OpenTicketStatus *int32  `json:"open_ticket_status,omitempty" xml:"open_ticket_status,omitempty"`
	PassengerName    *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 0
	PassengerType *string `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// example:
	//
	// 12345678909
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// 444-000000000
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// example:
	//
	// 012992
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s TicketChangingDetailResponseBodyModuleTravelerInfoList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingDetailResponseBodyModuleTravelerInfoList) GoString() string {
	return s.String()
}

func (s *TicketChangingDetailResponseBodyModuleTravelerInfoList) SetBirthDate(v string) *TicketChangingDetailResponseBodyModuleTravelerInfoList {
	s.BirthDate = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleTravelerInfoList) SetCertNo(v string) *TicketChangingDetailResponseBodyModuleTravelerInfoList {
	s.CertNo = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleTravelerInfoList) SetCertType(v string) *TicketChangingDetailResponseBodyModuleTravelerInfoList {
	s.CertType = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleTravelerInfoList) SetOpenTicketStatus(v int32) *TicketChangingDetailResponseBodyModuleTravelerInfoList {
	s.OpenTicketStatus = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleTravelerInfoList) SetPassengerName(v string) *TicketChangingDetailResponseBodyModuleTravelerInfoList {
	s.PassengerName = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleTravelerInfoList) SetPassengerType(v string) *TicketChangingDetailResponseBodyModuleTravelerInfoList {
	s.PassengerType = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleTravelerInfoList) SetPhone(v string) *TicketChangingDetailResponseBodyModuleTravelerInfoList {
	s.Phone = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleTravelerInfoList) SetTicketNo(v string) *TicketChangingDetailResponseBodyModuleTravelerInfoList {
	s.TicketNo = &v
	return s
}

func (s *TicketChangingDetailResponseBodyModuleTravelerInfoList) SetUserId(v string) *TicketChangingDetailResponseBodyModuleTravelerInfoList {
	s.UserId = &v
	return s
}

type TicketChangingDetailResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TicketChangingDetailResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TicketChangingDetailResponse) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingDetailResponse) GoString() string {
	return s.String()
}

func (s *TicketChangingDetailResponse) SetHeaders(v map[string]*string) *TicketChangingDetailResponse {
	s.Headers = v
	return s
}

func (s *TicketChangingDetailResponse) SetStatusCode(v int32) *TicketChangingDetailResponse {
	s.StatusCode = &v
	return s
}

func (s *TicketChangingDetailResponse) SetBody(v *TicketChangingDetailResponseBody) *TicketChangingDetailResponse {
	s.Body = v
	return s
}

type TicketChangingEnquiryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TicketChangingEnquiryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryHeaders) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryHeaders) SetCommonHeaders(v map[string]*string) *TicketChangingEnquiryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TicketChangingEnquiryHeaders) SetXAcsBtripCorpToken(v string) *TicketChangingEnquiryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TicketChangingEnquiryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// BJS
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HGH
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	IsVoluntary *int32 `json:"is_voluntary,omitempty" xml:"is_voluntary,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2000-00-00 00:00:00
	ModifyDepartDate *string `json:"modify_depart_date,omitempty" xml:"modify_depart_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// CA1704
	ModifyFlightNo *string `json:"modify_flight_no,omitempty" xml:"modify_flight_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// ece19e8b1047898a5a98b6487348c2
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
}

func (s TicketChangingEnquiryRequest) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryRequest) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryRequest) SetArrCity(v string) *TicketChangingEnquiryRequest {
	s.ArrCity = &v
	return s
}

func (s *TicketChangingEnquiryRequest) SetDepCity(v string) *TicketChangingEnquiryRequest {
	s.DepCity = &v
	return s
}

func (s *TicketChangingEnquiryRequest) SetDisOrderId(v string) *TicketChangingEnquiryRequest {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingEnquiryRequest) SetIsVoluntary(v int32) *TicketChangingEnquiryRequest {
	s.IsVoluntary = &v
	return s
}

func (s *TicketChangingEnquiryRequest) SetModifyDepartDate(v string) *TicketChangingEnquiryRequest {
	s.ModifyDepartDate = &v
	return s
}

func (s *TicketChangingEnquiryRequest) SetModifyFlightNo(v string) *TicketChangingEnquiryRequest {
	s.ModifyFlightNo = &v
	return s
}

func (s *TicketChangingEnquiryRequest) SetSessionId(v string) *TicketChangingEnquiryRequest {
	s.SessionId = &v
	return s
}

type TicketChangingEnquiryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                  `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                  `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TicketChangingEnquiryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TicketChangingEnquiryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBody) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBody) SetCode(v string) *TicketChangingEnquiryResponseBody {
	s.Code = &v
	return s
}

func (s *TicketChangingEnquiryResponseBody) SetMessage(v string) *TicketChangingEnquiryResponseBody {
	s.Message = &v
	return s
}

func (s *TicketChangingEnquiryResponseBody) SetModule(v *TicketChangingEnquiryResponseBodyModule) *TicketChangingEnquiryResponseBody {
	s.Module = v
	return s
}

func (s *TicketChangingEnquiryResponseBody) SetRequestId(v string) *TicketChangingEnquiryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TicketChangingEnquiryResponseBody) SetSuccess(v bool) *TicketChangingEnquiryResponseBody {
	s.Success = &v
	return s
}

func (s *TicketChangingEnquiryResponseBody) SetTraceId(v string) *TicketChangingEnquiryResponseBody {
	s.TraceId = &v
	return s
}

type TicketChangingEnquiryResponseBodyModule struct {
	FlightInfoList []*TicketChangingEnquiryResponseBodyModuleFlightInfoList `json:"flight_info_list,omitempty" xml:"flight_info_list,omitempty" type:"Repeated"`
}

func (s TicketChangingEnquiryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModule) SetFlightInfoList(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoList) *TicketChangingEnquiryResponseBodyModule {
	s.FlightInfoList = v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoList struct {
	AirlineInfo    *TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	CabinList      []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList    `json:"cabin_list,omitempty" xml:"cabin_list,omitempty" type:"Repeated"`
	// example:
	//
	// CA1704
	CarrierAirline *string `json:"carrier_airline,omitempty" xml:"carrier_airline,omitempty"`
	// example:
	//
	// CA1704
	CarrierNo      *string                                                              `json:"carrier_no,omitempty" xml:"carrier_no,omitempty"`
	DepAirportInfo *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// HGH
	DepCityCode *string `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	// example:
	//
	// CA1351
	FlightNo *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	// example:
	//
	// false
	IsShare *bool `json:"is_share,omitempty" xml:"is_share,omitempty"`
	// example:
	//
	// Y
	LowestCabin *string `json:"lowest_cabin,omitempty" xml:"lowest_cabin,omitempty"`
	// example:
	//
	// Y
	LowestCabinClass *string `json:"lowest_cabin_class,omitempty" xml:"lowest_cabin_class,omitempty"`
	LowestCabinDesc  *string `json:"lowest_cabin_desc,omitempty" xml:"lowest_cabin_desc,omitempty"`
	// example:
	//
	// 0
	LowestCabinNum   *string                                                                  `json:"lowest_cabin_num,omitempty" xml:"lowest_cabin_num,omitempty"`
	LowestCabinPrice []*TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice `json:"lowest_cabin_price,omitempty" xml:"lowest_cabin_price,omitempty" type:"Repeated"`
	// example:
	//
	// 2000-00-00 00:00:00
	ModifyFlightArrTime *string `json:"modify_flight_arr_time,omitempty" xml:"modify_flight_arr_time,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	ModifyFlightDepDate *string `json:"modify_flight_dep_date,omitempty" xml:"modify_flight_dep_date,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	ModifyFlightDepTime *string `json:"modify_flight_dep_time,omitempty" xml:"modify_flight_dep_time,omitempty"`
	// example:
	//
	// d1fb9e0a794f45e1b762d36ff1d17zz
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoList) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetAirlineInfo(v *TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.AirlineInfo = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetArrAirportInfo(v *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.ArrAirportInfo = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetCabinList(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.CabinList = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetCarrierAirline(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.CarrierAirline = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetCarrierNo(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.CarrierNo = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetDepAirportInfo(v *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.DepAirportInfo = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetDepCityCode(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.DepCityCode = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetFlightNo(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.FlightNo = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetIsShare(v bool) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.IsShare = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetLowestCabin(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.LowestCabin = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetLowestCabinClass(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.LowestCabinClass = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetLowestCabinDesc(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.LowestCabinDesc = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetLowestCabinNum(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.LowestCabinNum = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetLowestCabinPrice(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.LowestCabinPrice = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetModifyFlightArrTime(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.ModifyFlightArrTime = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetModifyFlightDepDate(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.ModifyFlightDepDate = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetModifyFlightDepTime(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.ModifyFlightDepTime = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoList) SetSessionId(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoList {
	s.SessionId = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo struct {
	// example:
	//
	// CA
	AirlineCode       *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName       *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	AirlineSimpleName *string `json:"airline_simple_name,omitempty" xml:"airline_simple_name,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo) SetAirlineCode(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo) SetAirlineName(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo {
	s.AirlineName = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo) SetAirlineSimpleName(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListAirlineInfo {
	s.AirlineSimpleName = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// HGH
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T4
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo) SetAirportCode(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo) SetAirportName(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo) SetCityCode(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo {
	s.CityCode = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo) SetCityName(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo {
	s.CityName = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo) SetTerminal(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListArrAirportInfo {
	s.Terminal = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList struct {
	// example:
	//
	// G
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinDesc  *string `json:"cabin_desc,omitempty" xml:"cabin_desc,omitempty"`
	// example:
	//
	// 80
	CabinDiscount       *int32                                                                             `json:"cabin_discount,omitempty" xml:"cabin_discount,omitempty"`
	ChangeOtaItemRuleRq *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq `json:"change_ota_item_rule_rq,omitempty" xml:"change_ota_item_rule_rq,omitempty" type:"Struct"`
	// example:
	//
	// G
	ChildCabin *string `json:"child_cabin,omitempty" xml:"child_cabin,omitempty"`
	// example:
	//
	// 0
	LeftNum         *string                                                                          `json:"left_num,omitempty" xml:"left_num,omitempty"`
	ModifyPriceList []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList `json:"modify_price_list,omitempty" xml:"modify_price_list,omitempty" type:"Repeated"`
	// example:
	//
	// 360379a11ee84e9aa011baa41b758fe6
	OtaItemid *string `json:"ota_itemid,omitempty" xml:"ota_itemid,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) SetCabin(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList {
	s.Cabin = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) SetCabinClass(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList {
	s.CabinClass = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) SetCabinDesc(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList {
	s.CabinDesc = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) SetCabinDiscount(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList {
	s.CabinDiscount = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) SetChangeOtaItemRuleRq(v *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList {
	s.ChangeOtaItemRuleRq = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) SetChildCabin(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList {
	s.ChildCabin = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) SetLeftNum(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList {
	s.LeftNum = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) SetModifyPriceList(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList {
	s.ModifyPriceList = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList) SetOtaItemid(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinList {
	s.OtaItemid = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq struct {
	BaggageDetails []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails `json:"baggage_details,omitempty" xml:"baggage_details,omitempty" type:"Repeated"`
	ChangeDetails  []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails  `json:"change_details,omitempty" xml:"change_details,omitempty" type:"Repeated"`
	RefundDetails  []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails  `json:"refund_details,omitempty" xml:"refund_details,omitempty" type:"Repeated"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq) SetBaggageDetails(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq {
	s.BaggageDetails = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq) SetChangeDetails(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq {
	s.ChangeDetails = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq) SetRefundDetails(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRq {
	s.RefundDetails = v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails struct {
	BaggageSubItems []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems `json:"baggage_sub_items,omitempty" xml:"baggage_sub_items,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Index     *int32                                                                                               `json:"index,omitempty" xml:"index,omitempty"`
	TableHead *string                                                                                              `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Tips      *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips `json:"tips,omitempty" xml:"tips,omitempty" type:"Struct"`
	Title     *string                                                                                              `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails) SetBaggageSubItems(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails {
	s.BaggageSubItems = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails) SetIndex(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails {
	s.Index = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails) SetTableHead(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails {
	s.TableHead = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails) SetTips(v *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails {
	s.Tips = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails) SetTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails {
	s.Title = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails) SetType(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetails {
	s.Type = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems struct {
	// attributes
	Attributes                  map[string]interface{}                                                                                                                       `json:"attributes,omitempty" xml:"attributes,omitempty"`
	BaggageSubContentVisualizes []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes `json:"baggage_sub_content_visualizes,omitempty" xml:"baggage_sub_content_visualizes,omitempty" type:"Repeated"`
	BaggageSubContents          []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents          `json:"baggage_sub_contents,omitempty" xml:"baggage_sub_contents,omitempty" type:"Repeated"`
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// example:
	//
	// ADT
	Ptc   *string `json:"ptc,omitempty" xml:"ptc,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems) SetAttributes(v map[string]interface{}) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems {
	s.Attributes = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems) SetBaggageSubContentVisualizes(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems {
	s.BaggageSubContentVisualizes = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems) SetBaggageSubContents(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems {
	s.BaggageSubContents = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems) SetContent(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems {
	s.Content = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems) SetIsStruct(v bool) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems {
	s.IsStruct = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems) SetPtc(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems {
	s.Ptc = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems) SetTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItems {
	s.Title = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes struct {
	BaggageDesc []*string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	BaggageSubContentType *int32                                                                                                                                                `json:"baggage_sub_content_type,omitempty" xml:"baggage_sub_content_type,omitempty"`
	Description           *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription `json:"description,omitempty" xml:"description,omitempty" type:"Struct"`
	ImageDO               *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO     `json:"imageDO,omitempty" xml:"imageDO,omitempty" type:"Struct"`
	// example:
	//
	// true
	IsHighlight *bool   `json:"is_highlight,omitempty" xml:"is_highlight,omitempty"`
	SubTitle    *string `json:"subTitle,omitempty" xml:"subTitle,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes) SetBaggageDesc(v []*string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageDesc = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes) SetBaggageSubContentType(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes {
	s.BaggageSubContentType = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes) SetDescription(v *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes {
	s.Description = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes) SetImageDO(v *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes {
	s.ImageDO = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes) SetIsHighlight(v bool) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes {
	s.IsHighlight = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes) SetSubTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizes {
	s.SubTitle = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription struct {
	Desc *string `json:"desc,omitempty" xml:"desc,omitempty"`
	// example:
	//
	// demo
	Icon *string `json:"icon,omitempty" xml:"icon,omitempty"`
	// example:
	//
	// demo
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription) SetDesc(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Desc = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription) SetIcon(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Icon = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription) SetImage(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Image = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription) SetTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesDescription {
	s.Title = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01kLt3m923XsUs6WVif_!!6000000007266-2-tps-280-300.png
	Image *string `json:"image,omitempty" xml:"image,omitempty"`
	// example:
	//
	// 50
	Largest *string `json:"largest,omitempty" xml:"largest,omitempty"`
	// example:
	//
	// 40
	Middle *string `json:"middle,omitempty" xml:"middle,omitempty"`
	// example:
	//
	// 20
	Smallest *string `json:"smallest,omitempty" xml:"smallest,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO) SetImage(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Image = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO) SetLargest(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Largest = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO) SetMiddle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Middle = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO) SetSmallest(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContentVisualizesImageDO {
	s.Smallest = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents struct {
	BaggageDesc *string `json:"baggage_desc,omitempty" xml:"baggage_desc,omitempty"`
	Icon        *string `json:"icon,omitempty" xml:"icon,omitempty"`
	// example:
	//
	// 0
	Style    *int32  `json:"style,omitempty" xml:"style,omitempty"`
	SubTitle *string `json:"sub_title,omitempty" xml:"sub_title,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents) SetBaggageDesc(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents {
	s.BaggageDesc = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents) SetIcon(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents {
	s.Icon = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents) SetStyle(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents {
	s.Style = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents) SetSubTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsBaggageSubItemsBaggageSubContents {
	s.SubTitle = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips struct {
	// example:
	//
	// https://gw.alicdn.com/imgextra/i1/O1CN019zl3WZ22fNLxzx2cR_!!6000000007147-2-tps-125-45.png
	Logo     *string `json:"logo,omitempty" xml:"logo,omitempty"`
	TipsDesc *string `json:"tips_desc,omitempty" xml:"tips_desc,omitempty"`
	// example:
	//
	// https://gw.alicdn.com/imgextra/i3/O1CN01rJxjw61f3bXNHAmlk_!!6000000003951-2-tps-1050-675.png
	TipsImage *string `json:"tips_image,omitempty" xml:"tips_image,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips) SetLogo(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips {
	s.Logo = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips) SetTipsDesc(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips {
	s.TipsDesc = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips) SetTipsImage(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqBaggageDetailsTips {
	s.TipsImage = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails struct {
	ExtraContents []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Index          *int32                                                                                                          `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	TableHead      *string                                                                                                         `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                                         `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails) SetExtraContents(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails {
	s.ExtraContents = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails) SetIndex(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails {
	s.Index = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails) SetRefundSubItems(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails {
	s.RefundSubItems = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails) SetTableHead(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails {
	s.TableHead = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails) SetTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails {
	s.Title = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails) SetType(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetails {
	s.Type = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents struct {
	// example:
	//
	// xxx
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	Icon    *string `json:"icon,omitempty" xml:"icon,omitempty"`
	Title   *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents) SetContent(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents {
	s.Content = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents) SetIcon(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents {
	s.Icon = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents) SetTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsExtraContents {
	s.Title = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// example:
	//
	// ADT
	Ptc               *string                                                                                                                          `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                                          `json:"title,omitempty" xml:"title,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems) SetContent(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems {
	s.Content = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems) SetIsStruct(v bool) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems) SetPtc(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems) SetRefundSubContents(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems) SetTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItems {
	s.Title = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 0
	Style *string `json:"style,omitempty" xml:"style,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents) SetFeeDesc(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents) SetFeeRange(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents) SetStyle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqChangeDetailsRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails struct {
	ExtraContents []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents `json:"extra_contents,omitempty" xml:"extra_contents,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	Index          *int32                                                                                                          `json:"index,omitempty" xml:"index,omitempty"`
	RefundSubItems []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems `json:"refund_sub_items,omitempty" xml:"refund_sub_items,omitempty" type:"Repeated"`
	TableHead      *string                                                                                                         `json:"table_head,omitempty" xml:"table_head,omitempty"`
	Title          *string                                                                                                         `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails) SetExtraContents(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails {
	s.ExtraContents = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails) SetIndex(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails {
	s.Index = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails) SetRefundSubItems(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails {
	s.RefundSubItems = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails) SetTableHead(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails {
	s.TableHead = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails) SetTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails {
	s.Title = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails) SetType(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetails {
	s.Type = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents struct {
	// example:
	//
	// xxx
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	Icon    *string `json:"icon,omitempty" xml:"icon,omitempty"`
	Title   *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents) SetContent(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents {
	s.Content = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents) SetIcon(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents {
	s.Icon = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents) SetTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsExtraContents {
	s.Title = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems struct {
	// example:
	//
	// demo
	Content *string `json:"content,omitempty" xml:"content,omitempty"`
	// example:
	//
	// true
	IsStruct *bool `json:"is_struct,omitempty" xml:"is_struct,omitempty"`
	// example:
	//
	// ADT
	Ptc               *string                                                                                                                          `json:"ptc,omitempty" xml:"ptc,omitempty"`
	RefundSubContents []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents `json:"refund_sub_contents,omitempty" xml:"refund_sub_contents,omitempty" type:"Repeated"`
	Title             *string                                                                                                                          `json:"title,omitempty" xml:"title,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems) SetContent(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems {
	s.Content = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems) SetIsStruct(v bool) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems {
	s.IsStruct = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems) SetPtc(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems {
	s.Ptc = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems) SetRefundSubContents(v []*TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems {
	s.RefundSubContents = v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems) SetTitle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItems {
	s.Title = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents struct {
	FeeDesc  *string `json:"fee_desc,omitempty" xml:"fee_desc,omitempty"`
	FeeRange *string `json:"fee_range,omitempty" xml:"fee_range,omitempty"`
	// example:
	//
	// 0
	Style *string `json:"style,omitempty" xml:"style,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents) SetFeeDesc(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents {
	s.FeeDesc = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents) SetFeeRange(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents {
	s.FeeRange = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents) SetStyle(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListChangeOtaItemRuleRqRefundDetailsRefundSubItemsRefundSubContents {
	s.Style = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList struct {
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 100
	UpgradeFee *int32 `json:"upgrade_fee,omitempty" xml:"upgrade_fee,omitempty"`
	// example:
	//
	// 100
	UpgradePrice *int32 `json:"upgrade_price,omitempty" xml:"upgrade_price,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList) SetPassengerType(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList {
	s.PassengerType = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList) SetTicketPrice(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList {
	s.TicketPrice = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList) SetUpgradeFee(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList {
	s.UpgradeFee = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList) SetUpgradePrice(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListCabinListModifyPriceList {
	s.UpgradePrice = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo struct {
	// example:
	//
	// PEK
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// BJS
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo) SetAirportCode(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo) SetAirportName(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo) SetCityCode(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo {
	s.CityCode = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo) SetCityName(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo {
	s.CityName = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo) SetTerminal(v string) *TicketChangingEnquiryResponseBodyModuleFlightInfoListDepAirportInfo {
	s.Terminal = &v
	return s
}

type TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice struct {
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 100
	UpgradeFee *int32 `json:"upgrade_fee,omitempty" xml:"upgrade_fee,omitempty"`
	// example:
	//
	// 100
	UpgradePrice *int32 `json:"upgrade_price,omitempty" xml:"upgrade_price,omitempty"`
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice) SetPassengerType(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice {
	s.PassengerType = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice) SetTicketPrice(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice {
	s.TicketPrice = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice) SetUpgradeFee(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice {
	s.UpgradeFee = &v
	return s
}

func (s *TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice) SetUpgradePrice(v int32) *TicketChangingEnquiryResponseBodyModuleFlightInfoListLowestCabinPrice {
	s.UpgradePrice = &v
	return s
}

type TicketChangingEnquiryResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TicketChangingEnquiryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TicketChangingEnquiryResponse) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingEnquiryResponse) GoString() string {
	return s.String()
}

func (s *TicketChangingEnquiryResponse) SetHeaders(v map[string]*string) *TicketChangingEnquiryResponse {
	s.Headers = v
	return s
}

func (s *TicketChangingEnquiryResponse) SetStatusCode(v int32) *TicketChangingEnquiryResponse {
	s.StatusCode = &v
	return s
}

func (s *TicketChangingEnquiryResponse) SetBody(v *TicketChangingEnquiryResponseBody) *TicketChangingEnquiryResponse {
	s.Body = v
	return s
}

type TicketChangingFlightListHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TicketChangingFlightListHeaders) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListHeaders) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListHeaders) SetCommonHeaders(v map[string]*string) *TicketChangingFlightListHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TicketChangingFlightListHeaders) SetXAcsBtripCorpToken(v string) *TicketChangingFlightListHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TicketChangingFlightListRequest struct {
	// example:
	//
	// BJS
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// HGH
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2000-00-00 00:00:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId       *string                                            `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	IsVoluntary      *int32                                             `json:"is_voluntary,omitempty" xml:"is_voluntary,omitempty"`
	TravelerInfoList []*TicketChangingFlightListRequestTravelerInfoList `json:"traveler_info_list,omitempty" xml:"traveler_info_list,omitempty" type:"Repeated"`
}

func (s TicketChangingFlightListRequest) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListRequest) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListRequest) SetArrCity(v string) *TicketChangingFlightListRequest {
	s.ArrCity = &v
	return s
}

func (s *TicketChangingFlightListRequest) SetDepCity(v string) *TicketChangingFlightListRequest {
	s.DepCity = &v
	return s
}

func (s *TicketChangingFlightListRequest) SetDepDate(v string) *TicketChangingFlightListRequest {
	s.DepDate = &v
	return s
}

func (s *TicketChangingFlightListRequest) SetDisOrderId(v string) *TicketChangingFlightListRequest {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingFlightListRequest) SetIsVoluntary(v int32) *TicketChangingFlightListRequest {
	s.IsVoluntary = &v
	return s
}

func (s *TicketChangingFlightListRequest) SetTravelerInfoList(v []*TicketChangingFlightListRequestTravelerInfoList) *TicketChangingFlightListRequest {
	s.TravelerInfoList = v
	return s
}

type TicketChangingFlightListRequestTravelerInfoList struct {
	// This parameter is required.
	//
	// example:
	//
	// BJS
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// HGH
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	Name    *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// ADULT
	Type *string `json:"type,omitempty" xml:"type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 23231
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s TicketChangingFlightListRequestTravelerInfoList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListRequestTravelerInfoList) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListRequestTravelerInfoList) SetArrCity(v string) *TicketChangingFlightListRequestTravelerInfoList {
	s.ArrCity = &v
	return s
}

func (s *TicketChangingFlightListRequestTravelerInfoList) SetDepCity(v string) *TicketChangingFlightListRequestTravelerInfoList {
	s.DepCity = &v
	return s
}

func (s *TicketChangingFlightListRequestTravelerInfoList) SetName(v string) *TicketChangingFlightListRequestTravelerInfoList {
	s.Name = &v
	return s
}

func (s *TicketChangingFlightListRequestTravelerInfoList) SetType(v string) *TicketChangingFlightListRequestTravelerInfoList {
	s.Type = &v
	return s
}

func (s *TicketChangingFlightListRequestTravelerInfoList) SetUserId(v string) *TicketChangingFlightListRequestTravelerInfoList {
	s.UserId = &v
	return s
}

type TicketChangingFlightListShrinkRequest struct {
	// example:
	//
	// BJS
	ArrCity *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	// example:
	//
	// HGH
	DepCity *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2000-00-00 00:00:00
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId             *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	IsVoluntary            *int32  `json:"is_voluntary,omitempty" xml:"is_voluntary,omitempty"`
	TravelerInfoListShrink *string `json:"traveler_info_list,omitempty" xml:"traveler_info_list,omitempty"`
}

func (s TicketChangingFlightListShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListShrinkRequest) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListShrinkRequest) SetArrCity(v string) *TicketChangingFlightListShrinkRequest {
	s.ArrCity = &v
	return s
}

func (s *TicketChangingFlightListShrinkRequest) SetDepCity(v string) *TicketChangingFlightListShrinkRequest {
	s.DepCity = &v
	return s
}

func (s *TicketChangingFlightListShrinkRequest) SetDepDate(v string) *TicketChangingFlightListShrinkRequest {
	s.DepDate = &v
	return s
}

func (s *TicketChangingFlightListShrinkRequest) SetDisOrderId(v string) *TicketChangingFlightListShrinkRequest {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingFlightListShrinkRequest) SetIsVoluntary(v int32) *TicketChangingFlightListShrinkRequest {
	s.IsVoluntary = &v
	return s
}

func (s *TicketChangingFlightListShrinkRequest) SetTravelerInfoListShrink(v string) *TicketChangingFlightListShrinkRequest {
	s.TravelerInfoListShrink = &v
	return s
}

type TicketChangingFlightListResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                     `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                     `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TicketChangingFlightListResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TicketChangingFlightListResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListResponseBody) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListResponseBody) SetCode(v string) *TicketChangingFlightListResponseBody {
	s.Code = &v
	return s
}

func (s *TicketChangingFlightListResponseBody) SetMessage(v string) *TicketChangingFlightListResponseBody {
	s.Message = &v
	return s
}

func (s *TicketChangingFlightListResponseBody) SetModule(v *TicketChangingFlightListResponseBodyModule) *TicketChangingFlightListResponseBody {
	s.Module = v
	return s
}

func (s *TicketChangingFlightListResponseBody) SetRequestId(v string) *TicketChangingFlightListResponseBody {
	s.RequestId = &v
	return s
}

func (s *TicketChangingFlightListResponseBody) SetSuccess(v bool) *TicketChangingFlightListResponseBody {
	s.Success = &v
	return s
}

func (s *TicketChangingFlightListResponseBody) SetTraceId(v string) *TicketChangingFlightListResponseBody {
	s.TraceId = &v
	return s
}

type TicketChangingFlightListResponseBodyModule struct {
	FlightInfoList []*TicketChangingFlightListResponseBodyModuleFlightInfoList `json:"flight_info_list,omitempty" xml:"flight_info_list,omitempty" type:"Repeated"`
}

func (s TicketChangingFlightListResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListResponseBodyModule) SetFlightInfoList(v []*TicketChangingFlightListResponseBodyModuleFlightInfoList) *TicketChangingFlightListResponseBodyModule {
	s.FlightInfoList = v
	return s
}

type TicketChangingFlightListResponseBodyModuleFlightInfoList struct {
	AirlineInfo    *TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo    `json:"airline_info,omitempty" xml:"airline_info,omitempty" type:"Struct"`
	ArrAirportInfo *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo `json:"arr_airport_info,omitempty" xml:"arr_airport_info,omitempty" type:"Struct"`
	CabinList      []*TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList    `json:"cabin_list,omitempty" xml:"cabin_list,omitempty" type:"Repeated"`
	// example:
	//
	// CA1704
	CarrierAirline *string `json:"carrier_airline,omitempty" xml:"carrier_airline,omitempty"`
	// example:
	//
	// CA1704
	CarrierNo      *string                                                                 `json:"carrier_no,omitempty" xml:"carrier_no,omitempty"`
	DepAirportInfo *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo `json:"dep_airport_info,omitempty" xml:"dep_airport_info,omitempty" type:"Struct"`
	// example:
	//
	// CA1704
	FlightNo   *string `json:"flight_no,omitempty" xml:"flight_no,omitempty"`
	FlightSize *string `json:"flight_size,omitempty" xml:"flight_size,omitempty"`
	FlightType *string `json:"flight_type,omitempty" xml:"flight_type,omitempty"`
	// example:
	//
	// true
	IsProtocol *bool `json:"is_protocol,omitempty" xml:"is_protocol,omitempty"`
	// example:
	//
	// false
	IsShare *bool `json:"is_share,omitempty" xml:"is_share,omitempty"`
	// example:
	//
	// false
	IsStop *bool `json:"is_stop,omitempty" xml:"is_stop,omitempty"`
	// example:
	//
	// Y
	LowestCabin *string `json:"lowest_cabin,omitempty" xml:"lowest_cabin,omitempty"`
	// example:
	//
	// Y
	LowestCabinClass *string                                                                     `json:"lowest_cabin_class,omitempty" xml:"lowest_cabin_class,omitempty"`
	LowestCabinDesc  *string                                                                     `json:"lowest_cabin_desc,omitempty" xml:"lowest_cabin_desc,omitempty"`
	LowestCabinNum   *string                                                                     `json:"lowest_cabin_num,omitempty" xml:"lowest_cabin_num,omitempty"`
	LowestCabinPrice []*TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice `json:"lowest_cabin_price,omitempty" xml:"lowest_cabin_price,omitempty" type:"Repeated"`
	MealDesc         *string                                                                     `json:"meal_desc,omitempty" xml:"meal_desc,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	ModifyFlightArrTime *string `json:"modify_flight_arr_time,omitempty" xml:"modify_flight_arr_time,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	ModifyFlightDepDate *string `json:"modify_flight_dep_date,omitempty" xml:"modify_flight_dep_date,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	ModifyFlightDepTime *string `json:"modify_flight_dep_time,omitempty" xml:"modify_flight_dep_time,omitempty"`
	// example:
	//
	// d1fb9e0a794f45e1b762d36ff1d17zz
	SessionId *string `json:"session_id,omitempty" xml:"session_id,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	StopArrTime *string `json:"stop_arr_time,omitempty" xml:"stop_arr_time,omitempty"`
	// example:
	//
	// HGH
	StopCity *string `json:"stop_city,omitempty" xml:"stop_city,omitempty"`
	// example:
	//
	// 2000-00-00 00:00:00
	StopDepTime *string `json:"stop_dep_time,omitempty" xml:"stop_dep_time,omitempty"`
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoList) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetAirlineInfo(v *TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.AirlineInfo = v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetArrAirportInfo(v *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.ArrAirportInfo = v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetCabinList(v []*TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.CabinList = v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetCarrierAirline(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.CarrierAirline = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetCarrierNo(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.CarrierNo = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetDepAirportInfo(v *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.DepAirportInfo = v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetFlightNo(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.FlightNo = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetFlightSize(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.FlightSize = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetFlightType(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.FlightType = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetIsProtocol(v bool) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.IsProtocol = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetIsShare(v bool) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.IsShare = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetIsStop(v bool) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.IsStop = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetLowestCabin(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.LowestCabin = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetLowestCabinClass(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.LowestCabinClass = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetLowestCabinDesc(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.LowestCabinDesc = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetLowestCabinNum(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.LowestCabinNum = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetLowestCabinPrice(v []*TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.LowestCabinPrice = v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetMealDesc(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.MealDesc = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetModifyFlightArrTime(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.ModifyFlightArrTime = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetModifyFlightDepDate(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.ModifyFlightDepDate = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetModifyFlightDepTime(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.ModifyFlightDepTime = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetSessionId(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.SessionId = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetStopArrTime(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.StopArrTime = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetStopCity(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.StopCity = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoList) SetStopDepTime(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoList {
	s.StopDepTime = &v
	return s
}

type TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo struct {
	// example:
	//
	// CA
	AirlineCode       *string `json:"airline_code,omitempty" xml:"airline_code,omitempty"`
	AirlineName       *string `json:"airline_name,omitempty" xml:"airline_name,omitempty"`
	AirlineSimpleName *string `json:"airline_simple_name,omitempty" xml:"airline_simple_name,omitempty"`
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo) SetAirlineCode(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo {
	s.AirlineCode = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo) SetAirlineName(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo {
	s.AirlineName = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo) SetAirlineSimpleName(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListAirlineInfo {
	s.AirlineSimpleName = &v
	return s
}

type TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo struct {
	// example:
	//
	// HGH
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// HGH
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T4
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo) SetAirportCode(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo) SetAirportName(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo {
	s.AirportName = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo) SetCityCode(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo {
	s.CityCode = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo) SetCityName(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo {
	s.CityName = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo) SetTerminal(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListArrAirportInfo {
	s.Terminal = &v
	return s
}

type TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList struct {
	// example:
	//
	// G
	Cabin *string `json:"cabin,omitempty" xml:"cabin,omitempty"`
	// example:
	//
	// Y
	CabinClass *string `json:"cabin_class,omitempty" xml:"cabin_class,omitempty"`
	CabinDesc  *string `json:"cabin_desc,omitempty" xml:"cabin_desc,omitempty"`
	// example:
	//
	// 80
	CabinDiscount *int32 `json:"cabin_discount,omitempty" xml:"cabin_discount,omitempty"`
	// example:
	//
	// G
	ChildCabin *string `json:"child_cabin,omitempty" xml:"child_cabin,omitempty"`
	// example:
	//
	// A
	LeftNum         *string                                                                             `json:"left_num,omitempty" xml:"left_num,omitempty"`
	ModifyPriceList []*TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList `json:"modify_price_list,omitempty" xml:"modify_price_list,omitempty" type:"Repeated"`
	// example:
	//
	// "360379a11ee84e9aa011baa41b758fe6"
	OtaItemid *string `json:"ota_itemid,omitempty" xml:"ota_itemid,omitempty"`
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) SetCabin(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList {
	s.Cabin = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) SetCabinClass(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList {
	s.CabinClass = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) SetCabinDesc(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList {
	s.CabinDesc = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) SetCabinDiscount(v int32) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList {
	s.CabinDiscount = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) SetChildCabin(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList {
	s.ChildCabin = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) SetLeftNum(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList {
	s.LeftNum = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) SetModifyPriceList(v []*TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList {
	s.ModifyPriceList = v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList) SetOtaItemid(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinList {
	s.OtaItemid = &v
	return s
}

type TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList struct {
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 100
	UpgradeFee *int32 `json:"upgrade_fee,omitempty" xml:"upgrade_fee,omitempty"`
	// example:
	//
	// 100
	UpgradePrice *int32 `json:"upgrade_price,omitempty" xml:"upgrade_price,omitempty"`
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList) SetPassengerType(v int32) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList {
	s.PassengerType = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList) SetTicketPrice(v int32) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList {
	s.TicketPrice = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList) SetUpgradeFee(v int32) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList {
	s.UpgradeFee = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList) SetUpgradePrice(v int32) *TicketChangingFlightListResponseBodyModuleFlightInfoListCabinListModifyPriceList {
	s.UpgradePrice = &v
	return s
}

type TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo struct {
	// example:
	//
	// PEK
	AirportCode *string `json:"airport_code,omitempty" xml:"airport_code,omitempty"`
	AirportName *string `json:"airport_name,omitempty" xml:"airport_name,omitempty"`
	// example:
	//
	// BJS
	CityCode *string `json:"city_code,omitempty" xml:"city_code,omitempty"`
	CityName *string `json:"city_name,omitempty" xml:"city_name,omitempty"`
	// example:
	//
	// T3
	Terminal *string `json:"terminal,omitempty" xml:"terminal,omitempty"`
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo) SetAirportCode(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo {
	s.AirportCode = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo) SetAirportName(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo {
	s.AirportName = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo) SetCityCode(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo {
	s.CityCode = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo) SetCityName(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo {
	s.CityName = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo) SetTerminal(v string) *TicketChangingFlightListResponseBodyModuleFlightInfoListDepAirportInfo {
	s.Terminal = &v
	return s
}

type TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice struct {
	// example:
	//
	// 0
	PassengerType *int32 `json:"passenger_type,omitempty" xml:"passenger_type,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int32 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 100
	UpgradeFee *int32 `json:"upgrade_fee,omitempty" xml:"upgrade_fee,omitempty"`
	// example:
	//
	// 100
	UpgradePrice *int32 `json:"upgrade_price,omitempty" xml:"upgrade_price,omitempty"`
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice) SetPassengerType(v int32) *TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice {
	s.PassengerType = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice) SetTicketPrice(v int32) *TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice {
	s.TicketPrice = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice) SetUpgradeFee(v int32) *TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice {
	s.UpgradeFee = &v
	return s
}

func (s *TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice) SetUpgradePrice(v int32) *TicketChangingFlightListResponseBodyModuleFlightInfoListLowestCabinPrice {
	s.UpgradePrice = &v
	return s
}

type TicketChangingFlightListResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TicketChangingFlightListResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TicketChangingFlightListResponse) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingFlightListResponse) GoString() string {
	return s.String()
}

func (s *TicketChangingFlightListResponse) SetHeaders(v map[string]*string) *TicketChangingFlightListResponse {
	s.Headers = v
	return s
}

func (s *TicketChangingFlightListResponse) SetStatusCode(v int32) *TicketChangingFlightListResponse {
	s.StatusCode = &v
	return s
}

func (s *TicketChangingFlightListResponse) SetBody(v *TicketChangingFlightListResponseBody) *TicketChangingFlightListResponse {
	s.Body = v
	return s
}

type TicketChangingPayHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TicketChangingPayHeaders) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingPayHeaders) GoString() string {
	return s.String()
}

func (s *TicketChangingPayHeaders) SetCommonHeaders(v map[string]*string) *TicketChangingPayHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TicketChangingPayHeaders) SetXAcsBtripCorpToken(v string) *TicketChangingPayHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TicketChangingPayRequest struct {
	// example:
	//
	// 100
	CorpPayPrice *int64 `json:"corp_pay_price,omitempty" xml:"corp_pay_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// refun123
	DisSubOrderId *string            `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	Extra         map[string]*string `json:"extra,omitempty" xml:"extra,omitempty"`
	// example:
	//
	// 100
	PersonalPayPrice *int64 `json:"personal_pay_price,omitempty" xml:"personal_pay_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	TotalPayPrice *int64 `json:"total_pay_price,omitempty" xml:"total_pay_price,omitempty"`
}

func (s TicketChangingPayRequest) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingPayRequest) GoString() string {
	return s.String()
}

func (s *TicketChangingPayRequest) SetCorpPayPrice(v int64) *TicketChangingPayRequest {
	s.CorpPayPrice = &v
	return s
}

func (s *TicketChangingPayRequest) SetDisOrderId(v string) *TicketChangingPayRequest {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingPayRequest) SetDisSubOrderId(v string) *TicketChangingPayRequest {
	s.DisSubOrderId = &v
	return s
}

func (s *TicketChangingPayRequest) SetExtra(v map[string]*string) *TicketChangingPayRequest {
	s.Extra = v
	return s
}

func (s *TicketChangingPayRequest) SetPersonalPayPrice(v int64) *TicketChangingPayRequest {
	s.PersonalPayPrice = &v
	return s
}

func (s *TicketChangingPayRequest) SetTotalPayPrice(v int64) *TicketChangingPayRequest {
	s.TotalPayPrice = &v
	return s
}

type TicketChangingPayShrinkRequest struct {
	// example:
	//
	// 100
	CorpPayPrice *int64 `json:"corp_pay_price,omitempty" xml:"corp_pay_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dis123
	DisOrderId *string `json:"dis_order_id,omitempty" xml:"dis_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// refun123
	DisSubOrderId *string `json:"dis_sub_order_id,omitempty" xml:"dis_sub_order_id,omitempty"`
	ExtraShrink   *string `json:"extra,omitempty" xml:"extra,omitempty"`
	// example:
	//
	// 100
	PersonalPayPrice *int64 `json:"personal_pay_price,omitempty" xml:"personal_pay_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	TotalPayPrice *int64 `json:"total_pay_price,omitempty" xml:"total_pay_price,omitempty"`
}

func (s TicketChangingPayShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingPayShrinkRequest) GoString() string {
	return s.String()
}

func (s *TicketChangingPayShrinkRequest) SetCorpPayPrice(v int64) *TicketChangingPayShrinkRequest {
	s.CorpPayPrice = &v
	return s
}

func (s *TicketChangingPayShrinkRequest) SetDisOrderId(v string) *TicketChangingPayShrinkRequest {
	s.DisOrderId = &v
	return s
}

func (s *TicketChangingPayShrinkRequest) SetDisSubOrderId(v string) *TicketChangingPayShrinkRequest {
	s.DisSubOrderId = &v
	return s
}

func (s *TicketChangingPayShrinkRequest) SetExtraShrink(v string) *TicketChangingPayShrinkRequest {
	s.ExtraShrink = &v
	return s
}

func (s *TicketChangingPayShrinkRequest) SetPersonalPayPrice(v int64) *TicketChangingPayShrinkRequest {
	s.PersonalPayPrice = &v
	return s
}

func (s *TicketChangingPayShrinkRequest) SetTotalPayPrice(v int64) *TicketChangingPayShrinkRequest {
	s.TotalPayPrice = &v
	return s
}

type TicketChangingPayResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TicketChangingPayResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TicketChangingPayResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingPayResponseBody) GoString() string {
	return s.String()
}

func (s *TicketChangingPayResponseBody) SetCode(v string) *TicketChangingPayResponseBody {
	s.Code = &v
	return s
}

func (s *TicketChangingPayResponseBody) SetMessage(v string) *TicketChangingPayResponseBody {
	s.Message = &v
	return s
}

func (s *TicketChangingPayResponseBody) SetModule(v *TicketChangingPayResponseBodyModule) *TicketChangingPayResponseBody {
	s.Module = v
	return s
}

func (s *TicketChangingPayResponseBody) SetRequestId(v string) *TicketChangingPayResponseBody {
	s.RequestId = &v
	return s
}

func (s *TicketChangingPayResponseBody) SetSuccess(v bool) *TicketChangingPayResponseBody {
	s.Success = &v
	return s
}

func (s *TicketChangingPayResponseBody) SetTraceId(v string) *TicketChangingPayResponseBody {
	s.TraceId = &v
	return s
}

type TicketChangingPayResponseBodyModule struct {
	// example:
	//
	// true
	CanRetry *bool `json:"can_retry,omitempty" xml:"can_retry,omitempty"`
	// example:
	//
	// 1000
	PayPrice  *int64 `json:"pay_price,omitempty" xml:"pay_price,omitempty"`
	PayStatus *int32 `json:"pay_status,omitempty" xml:"pay_status,omitempty"`
	// example:
	//
	// 0000-00-00 00:00:00
	PayTime *string `json:"pay_time,omitempty" xml:"pay_time,omitempty"`
	// example:
	//
	// 23098276578908765
	TradeNo *string `json:"trade_no,omitempty" xml:"trade_no,omitempty"`
}

func (s TicketChangingPayResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingPayResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TicketChangingPayResponseBodyModule) SetCanRetry(v bool) *TicketChangingPayResponseBodyModule {
	s.CanRetry = &v
	return s
}

func (s *TicketChangingPayResponseBodyModule) SetPayPrice(v int64) *TicketChangingPayResponseBodyModule {
	s.PayPrice = &v
	return s
}

func (s *TicketChangingPayResponseBodyModule) SetPayStatus(v int32) *TicketChangingPayResponseBodyModule {
	s.PayStatus = &v
	return s
}

func (s *TicketChangingPayResponseBodyModule) SetPayTime(v string) *TicketChangingPayResponseBodyModule {
	s.PayTime = &v
	return s
}

func (s *TicketChangingPayResponseBodyModule) SetTradeNo(v string) *TicketChangingPayResponseBodyModule {
	s.TradeNo = &v
	return s
}

type TicketChangingPayResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TicketChangingPayResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TicketChangingPayResponse) String() string {
	return tea.Prettify(s)
}

func (s TicketChangingPayResponse) GoString() string {
	return s.String()
}

func (s *TicketChangingPayResponse) SetHeaders(v map[string]*string) *TicketChangingPayResponse {
	s.Headers = v
	return s
}

func (s *TicketChangingPayResponse) SetStatusCode(v int32) *TicketChangingPayResponse {
	s.StatusCode = &v
	return s
}

func (s *TicketChangingPayResponse) SetBody(v *TicketChangingPayResponseBody) *TicketChangingPayResponse {
	s.Body = v
	return s
}

type TrainApplyChangeHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainApplyChangeHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyChangeHeaders) GoString() string {
	return s.String()
}

func (s *TrainApplyChangeHeaders) SetCommonHeaders(v map[string]*string) *TrainApplyChangeHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainApplyChangeHeaders) SetXAcsBtripCorpToken(v string) *TrainApplyChangeHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainApplyChangeRequest struct {
	// example:
	//
	// 0
	AcceptNoSeat *string `json:"accept_no_seat,omitempty" xml:"accept_no_seat,omitempty"`
	// This parameter is required.
	ChangeTrainInfoS []*TrainApplyChangeRequestChangeTrainInfoS `json:"change_train_info_s,omitempty" xml:"change_train_info_s,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	ForceMatch *string `json:"force_match,omitempty" xml:"force_match,omitempty"`
	// example:
	//
	// false
	IsPayNow *bool `json:"is_pay_now,omitempty" xml:"is_pay_now,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1017028198411054446
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12345
	OutChangeApplyId *string `json:"out_change_apply_id,omitempty" xml:"out_change_apply_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s TrainApplyChangeRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyChangeRequest) GoString() string {
	return s.String()
}

func (s *TrainApplyChangeRequest) SetAcceptNoSeat(v string) *TrainApplyChangeRequest {
	s.AcceptNoSeat = &v
	return s
}

func (s *TrainApplyChangeRequest) SetChangeTrainInfoS(v []*TrainApplyChangeRequestChangeTrainInfoS) *TrainApplyChangeRequest {
	s.ChangeTrainInfoS = v
	return s
}

func (s *TrainApplyChangeRequest) SetForceMatch(v string) *TrainApplyChangeRequest {
	s.ForceMatch = &v
	return s
}

func (s *TrainApplyChangeRequest) SetIsPayNow(v bool) *TrainApplyChangeRequest {
	s.IsPayNow = &v
	return s
}

func (s *TrainApplyChangeRequest) SetOrderId(v string) *TrainApplyChangeRequest {
	s.OrderId = &v
	return s
}

func (s *TrainApplyChangeRequest) SetOutChangeApplyId(v string) *TrainApplyChangeRequest {
	s.OutChangeApplyId = &v
	return s
}

func (s *TrainApplyChangeRequest) SetOutOrderId(v string) *TrainApplyChangeRequest {
	s.OutOrderId = &v
	return s
}

type TrainApplyChangeRequestChangeTrainInfoS struct {
	// This parameter is required.
	//
	// example:
	//
	// BTC
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	// This parameter is required.
	ChangeTicketInfoS []*TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS `json:"change_ticket_info_s,omitempty" xml:"change_ticket_info_s,omitempty" type:"Repeated"`
	// example:
	//
	// null
	ChooseBedS *string `json:"choose_bed_s,omitempty" xml:"choose_bed_s,omitempty"`
	// example:
	//
	// 1T
	ChooseSeatS *string `json:"choose_seat_s,omitempty" xml:"choose_seat_s,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BDC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2024-05-06 15:19:01
	OriginalDepTime *string `json:"original_dep_time,omitempty" xml:"original_dep_time,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// K234
	OriginalTrainNo *string `json:"original_train_no,omitempty" xml:"original_train_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// K2345
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainApplyChangeRequestChangeTrainInfoS) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyChangeRequestChangeTrainInfoS) GoString() string {
	return s.String()
}

func (s *TrainApplyChangeRequestChangeTrainInfoS) SetArrStationCode(v string) *TrainApplyChangeRequestChangeTrainInfoS {
	s.ArrStationCode = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoS) SetChangeTicketInfoS(v []*TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS) *TrainApplyChangeRequestChangeTrainInfoS {
	s.ChangeTicketInfoS = v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoS) SetChooseBedS(v string) *TrainApplyChangeRequestChangeTrainInfoS {
	s.ChooseBedS = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoS) SetChooseSeatS(v string) *TrainApplyChangeRequestChangeTrainInfoS {
	s.ChooseSeatS = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoS) SetDepStationCode(v string) *TrainApplyChangeRequestChangeTrainInfoS {
	s.DepStationCode = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoS) SetDepTime(v string) *TrainApplyChangeRequestChangeTrainInfoS {
	s.DepTime = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoS) SetOriginalDepTime(v string) *TrainApplyChangeRequestChangeTrainInfoS {
	s.OriginalDepTime = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoS) SetOriginalTrainNo(v string) *TrainApplyChangeRequestChangeTrainInfoS {
	s.OriginalTrainNo = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoS) SetTrainNo(v string) *TrainApplyChangeRequestChangeTrainInfoS {
	s.TrainNo = &v
	return s
}

type TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS struct {
	// This parameter is required.
	PassengerInfo *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo `json:"passenger_info,omitempty" xml:"passenger_info,omitempty" type:"Struct"`
	// This parameter is required.
	//
	// example:
	//
	// 14
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	TicketPrice *string `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	TicketType *string `json:"ticket_type,omitempty" xml:"ticket_type,omitempty"`
}

func (s TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS) GoString() string {
	return s.String()
}

func (s *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS) SetPassengerInfo(v *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo) *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS {
	s.PassengerInfo = v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS) SetSeatType(v string) *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS {
	s.SeatType = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS) SetTicketPrice(v string) *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS {
	s.TicketPrice = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS) SetTicketType(v string) *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoS {
	s.TicketType = &v
	return s
}

type TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo struct {
	// This parameter is required.
	//
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	PassengerCertNo *string `json:"passenger_cert_no,omitempty" xml:"passenger_cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 170d9ac6f8807f9ec603c688f45f78a41
	PassengerCertType *string `json:"passenger_cert_type,omitempty" xml:"passenger_cert_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 949c9f34f677a0e5d249dfc94f5e62cc7
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
}

func (s TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo) GoString() string {
	return s.String()
}

func (s *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo) SetPassengerCertNo(v string) *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo {
	s.PassengerCertNo = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo) SetPassengerCertType(v string) *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo {
	s.PassengerCertType = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo) SetPassengerId(v string) *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo {
	s.PassengerId = &v
	return s
}

func (s *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo) SetPassengerName(v string) *TrainApplyChangeRequestChangeTrainInfoSChangeTicketInfoSPassengerInfo {
	s.PassengerName = &v
	return s
}

type TrainApplyChangeShrinkRequest struct {
	// example:
	//
	// 0
	AcceptNoSeat *string `json:"accept_no_seat,omitempty" xml:"accept_no_seat,omitempty"`
	// This parameter is required.
	ChangeTrainInfoSShrink *string `json:"change_train_info_s,omitempty" xml:"change_train_info_s,omitempty"`
	// example:
	//
	// 0
	ForceMatch *string `json:"force_match,omitempty" xml:"force_match,omitempty"`
	// example:
	//
	// false
	IsPayNow *bool `json:"is_pay_now,omitempty" xml:"is_pay_now,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1017028198411054446
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12345
	OutChangeApplyId *string `json:"out_change_apply_id,omitempty" xml:"out_change_apply_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s TrainApplyChangeShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyChangeShrinkRequest) GoString() string {
	return s.String()
}

func (s *TrainApplyChangeShrinkRequest) SetAcceptNoSeat(v string) *TrainApplyChangeShrinkRequest {
	s.AcceptNoSeat = &v
	return s
}

func (s *TrainApplyChangeShrinkRequest) SetChangeTrainInfoSShrink(v string) *TrainApplyChangeShrinkRequest {
	s.ChangeTrainInfoSShrink = &v
	return s
}

func (s *TrainApplyChangeShrinkRequest) SetForceMatch(v string) *TrainApplyChangeShrinkRequest {
	s.ForceMatch = &v
	return s
}

func (s *TrainApplyChangeShrinkRequest) SetIsPayNow(v bool) *TrainApplyChangeShrinkRequest {
	s.IsPayNow = &v
	return s
}

func (s *TrainApplyChangeShrinkRequest) SetOrderId(v string) *TrainApplyChangeShrinkRequest {
	s.OrderId = &v
	return s
}

func (s *TrainApplyChangeShrinkRequest) SetOutChangeApplyId(v string) *TrainApplyChangeShrinkRequest {
	s.OutChangeApplyId = &v
	return s
}

func (s *TrainApplyChangeShrinkRequest) SetOutOrderId(v string) *TrainApplyChangeShrinkRequest {
	s.OutOrderId = &v
	return s
}

type TrainApplyChangeResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainApplyChangeResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 2103ad0216854277618591626db2b6
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainApplyChangeResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyChangeResponseBody) GoString() string {
	return s.String()
}

func (s *TrainApplyChangeResponseBody) SetCode(v string) *TrainApplyChangeResponseBody {
	s.Code = &v
	return s
}

func (s *TrainApplyChangeResponseBody) SetMessage(v string) *TrainApplyChangeResponseBody {
	s.Message = &v
	return s
}

func (s *TrainApplyChangeResponseBody) SetModule(v *TrainApplyChangeResponseBodyModule) *TrainApplyChangeResponseBody {
	s.Module = v
	return s
}

func (s *TrainApplyChangeResponseBody) SetRequestId(v string) *TrainApplyChangeResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainApplyChangeResponseBody) SetSuccess(v bool) *TrainApplyChangeResponseBody {
	s.Success = &v
	return s
}

func (s *TrainApplyChangeResponseBody) SetTraceId(v string) *TrainApplyChangeResponseBody {
	s.TraceId = &v
	return s
}

type TrainApplyChangeResponseBodyModule struct {
	// example:
	//
	// 1234
	ChangeOrderId *string `json:"change_order_id,omitempty" xml:"change_order_id,omitempty"`
	// example:
	//
	// 116019444
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017124195788186048
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 1
	PayStatus *string `json:"pay_status,omitempty" xml:"pay_status,omitempty"`
}

func (s TrainApplyChangeResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyChangeResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainApplyChangeResponseBodyModule) SetChangeOrderId(v string) *TrainApplyChangeResponseBodyModule {
	s.ChangeOrderId = &v
	return s
}

func (s *TrainApplyChangeResponseBodyModule) SetOrderId(v string) *TrainApplyChangeResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *TrainApplyChangeResponseBodyModule) SetOutOrderId(v string) *TrainApplyChangeResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *TrainApplyChangeResponseBodyModule) SetPayStatus(v string) *TrainApplyChangeResponseBodyModule {
	s.PayStatus = &v
	return s
}

type TrainApplyChangeResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainApplyChangeResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainApplyChangeResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyChangeResponse) GoString() string {
	return s.String()
}

func (s *TrainApplyChangeResponse) SetHeaders(v map[string]*string) *TrainApplyChangeResponse {
	s.Headers = v
	return s
}

func (s *TrainApplyChangeResponse) SetStatusCode(v int32) *TrainApplyChangeResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainApplyChangeResponse) SetBody(v *TrainApplyChangeResponseBody) *TrainApplyChangeResponse {
	s.Body = v
	return s
}

type TrainApplyRefundHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainApplyRefundHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyRefundHeaders) GoString() string {
	return s.String()
}

func (s *TrainApplyRefundHeaders) SetCommonHeaders(v map[string]*string) *TrainApplyRefundHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainApplyRefundHeaders) SetXAcsBtripCorpToken(v string) *TrainApplyRefundHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainApplyRefundRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1002145190081005400
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456778
	OutRefundId *string `json:"out_refund_id,omitempty" xml:"out_refund_id,omitempty"`
	// This parameter is required.
	RefundTrainInfos []*TrainApplyRefundRequestRefundTrainInfos `json:"refund_train_infos,omitempty" xml:"refund_train_infos,omitempty" type:"Repeated"`
}

func (s TrainApplyRefundRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyRefundRequest) GoString() string {
	return s.String()
}

func (s *TrainApplyRefundRequest) SetOrderId(v string) *TrainApplyRefundRequest {
	s.OrderId = &v
	return s
}

func (s *TrainApplyRefundRequest) SetOutOrderId(v string) *TrainApplyRefundRequest {
	s.OutOrderId = &v
	return s
}

func (s *TrainApplyRefundRequest) SetOutRefundId(v string) *TrainApplyRefundRequest {
	s.OutRefundId = &v
	return s
}

func (s *TrainApplyRefundRequest) SetRefundTrainInfos(v []*TrainApplyRefundRequestRefundTrainInfos) *TrainApplyRefundRequest {
	s.RefundTrainInfos = v
	return s
}

type TrainApplyRefundRequestRefundTrainInfos struct {
	// This parameter is required.
	//
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// This parameter is required.
	RefundPassengerInfos []*TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos `json:"refund_passenger_infos,omitempty" xml:"refund_passenger_infos,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// K234
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainApplyRefundRequestRefundTrainInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyRefundRequestRefundTrainInfos) GoString() string {
	return s.String()
}

func (s *TrainApplyRefundRequestRefundTrainInfos) SetDepTime(v string) *TrainApplyRefundRequestRefundTrainInfos {
	s.DepTime = &v
	return s
}

func (s *TrainApplyRefundRequestRefundTrainInfos) SetRefundPassengerInfos(v []*TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos) *TrainApplyRefundRequestRefundTrainInfos {
	s.RefundPassengerInfos = v
	return s
}

func (s *TrainApplyRefundRequestRefundTrainInfos) SetTrainNo(v string) *TrainApplyRefundRequestRefundTrainInfos {
	s.TrainNo = &v
	return s
}

type TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos struct {
	// This parameter is required.
	//
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	PassengerCertNo *string `json:"passenger_cert_no,omitempty" xml:"passenger_cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 170d9ac6f8807f9ec603c688f45f78a41
	PassengerCertType *string `json:"passenger_cert_type,omitempty" xml:"passenger_cert_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12334
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 949c9f34f677a0e5d249dfc94f5e62cc7
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
}

func (s TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos) GoString() string {
	return s.String()
}

func (s *TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos) SetPassengerCertNo(v string) *TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos {
	s.PassengerCertNo = &v
	return s
}

func (s *TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos) SetPassengerCertType(v string) *TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos {
	s.PassengerCertType = &v
	return s
}

func (s *TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos) SetPassengerId(v string) *TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos {
	s.PassengerId = &v
	return s
}

func (s *TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos) SetPassengerName(v string) *TrainApplyRefundRequestRefundTrainInfosRefundPassengerInfos {
	s.PassengerName = &v
	return s
}

type TrainApplyRefundShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1002145190081005400
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456778
	OutRefundId *string `json:"out_refund_id,omitempty" xml:"out_refund_id,omitempty"`
	// This parameter is required.
	RefundTrainInfosShrink *string `json:"refund_train_infos,omitempty" xml:"refund_train_infos,omitempty"`
}

func (s TrainApplyRefundShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyRefundShrinkRequest) GoString() string {
	return s.String()
}

func (s *TrainApplyRefundShrinkRequest) SetOrderId(v string) *TrainApplyRefundShrinkRequest {
	s.OrderId = &v
	return s
}

func (s *TrainApplyRefundShrinkRequest) SetOutOrderId(v string) *TrainApplyRefundShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *TrainApplyRefundShrinkRequest) SetOutRefundId(v string) *TrainApplyRefundShrinkRequest {
	s.OutRefundId = &v
	return s
}

func (s *TrainApplyRefundShrinkRequest) SetRefundTrainInfosShrink(v string) *TrainApplyRefundShrinkRequest {
	s.RefundTrainInfosShrink = &v
	return s
}

type TrainApplyRefundResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainApplyRefundResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainApplyRefundResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyRefundResponseBody) GoString() string {
	return s.String()
}

func (s *TrainApplyRefundResponseBody) SetCode(v string) *TrainApplyRefundResponseBody {
	s.Code = &v
	return s
}

func (s *TrainApplyRefundResponseBody) SetMessage(v string) *TrainApplyRefundResponseBody {
	s.Message = &v
	return s
}

func (s *TrainApplyRefundResponseBody) SetModule(v *TrainApplyRefundResponseBodyModule) *TrainApplyRefundResponseBody {
	s.Module = v
	return s
}

func (s *TrainApplyRefundResponseBody) SetRequestId(v string) *TrainApplyRefundResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainApplyRefundResponseBody) SetSuccess(v bool) *TrainApplyRefundResponseBody {
	s.Success = &v
	return s
}

func (s *TrainApplyRefundResponseBody) SetTraceId(v string) *TrainApplyRefundResponseBody {
	s.TraceId = &v
	return s
}

type TrainApplyRefundResponseBodyModule struct {
	// example:
	//
	// 116019444
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467200
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s TrainApplyRefundResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyRefundResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainApplyRefundResponseBodyModule) SetOrderId(v string) *TrainApplyRefundResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *TrainApplyRefundResponseBodyModule) SetOutOrderId(v string) *TrainApplyRefundResponseBodyModule {
	s.OutOrderId = &v
	return s
}

type TrainApplyRefundResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainApplyRefundResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainApplyRefundResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainApplyRefundResponse) GoString() string {
	return s.String()
}

func (s *TrainApplyRefundResponse) SetHeaders(v map[string]*string) *TrainApplyRefundResponse {
	s.Headers = v
	return s
}

func (s *TrainApplyRefundResponse) SetStatusCode(v int32) *TrainApplyRefundResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainApplyRefundResponse) SetBody(v *TrainApplyRefundResponseBody) *TrainApplyRefundResponse {
	s.Body = v
	return s
}

type TrainBillSettlementQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s TrainBillSettlementQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainBillSettlementQueryHeaders) GoString() string {
	return s.String()
}

func (s *TrainBillSettlementQueryHeaders) SetCommonHeaders(v map[string]*string) *TrainBillSettlementQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainBillSettlementQueryHeaders) SetXAcsBtripSoCorpToken(v string) *TrainBillSettlementQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type TrainBillSettlementQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-02
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2021-10-01
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
}

func (s TrainBillSettlementQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainBillSettlementQueryRequest) GoString() string {
	return s.String()
}

func (s *TrainBillSettlementQueryRequest) SetPageNo(v int32) *TrainBillSettlementQueryRequest {
	s.PageNo = &v
	return s
}

func (s *TrainBillSettlementQueryRequest) SetPageSize(v int32) *TrainBillSettlementQueryRequest {
	s.PageSize = &v
	return s
}

func (s *TrainBillSettlementQueryRequest) SetPeriodEnd(v string) *TrainBillSettlementQueryRequest {
	s.PeriodEnd = &v
	return s
}

func (s *TrainBillSettlementQueryRequest) SetPeriodStart(v string) *TrainBillSettlementQueryRequest {
	s.PeriodStart = &v
	return s
}

type TrainBillSettlementQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                     `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                     `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TrainBillSettlementQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainBillSettlementQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainBillSettlementQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TrainBillSettlementQueryResponseBody) SetCode(v string) *TrainBillSettlementQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBody) SetMessage(v string) *TrainBillSettlementQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBody) SetModule(v *TrainBillSettlementQueryResponseBodyModule) *TrainBillSettlementQueryResponseBody {
	s.Module = v
	return s
}

func (s *TrainBillSettlementQueryResponseBody) SetRequestId(v string) *TrainBillSettlementQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBody) SetSuccess(v bool) *TrainBillSettlementQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBody) SetTraceId(v string) *TrainBillSettlementQueryResponseBody {
	s.TraceId = &v
	return s
}

type TrainBillSettlementQueryResponseBodyModule struct {
	// example:
	//
	// 6
	Category *int32                                                `json:"category,omitempty" xml:"category,omitempty"`
	CorpId   *string                                               `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	DataList []*TrainBillSettlementQueryResponseBodyModuleDataList `json:"data_list,omitempty" xml:"data_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2021-10-14
	PeriodEnd *string `json:"period_end,omitempty" xml:"period_end,omitempty"`
	// example:
	//
	// 2021-10-13
	PeriodStart *string `json:"period_start,omitempty" xml:"period_start,omitempty"`
	// example:
	//
	// 2694
	TotalNum *int64 `json:"total_num,omitempty" xml:"total_num,omitempty"`
}

func (s TrainBillSettlementQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainBillSettlementQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainBillSettlementQueryResponseBodyModule) SetCategory(v int32) *TrainBillSettlementQueryResponseBodyModule {
	s.Category = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModule) SetCorpId(v string) *TrainBillSettlementQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModule) SetDataList(v []*TrainBillSettlementQueryResponseBodyModuleDataList) *TrainBillSettlementQueryResponseBodyModule {
	s.DataList = v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModule) SetPeriodEnd(v string) *TrainBillSettlementQueryResponseBodyModule {
	s.PeriodEnd = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModule) SetPeriodStart(v string) *TrainBillSettlementQueryResponseBodyModule {
	s.PeriodStart = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModule) SetTotalNum(v int64) *TrainBillSettlementQueryResponseBodyModule {
	s.TotalNum = &v
	return s
}

type TrainBillSettlementQueryResponseBodyModuleDataList struct {
	// example:
	//
	// 2021123432260
	AlipayTradeNo    *string `json:"alipay_trade_no,omitempty" xml:"alipay_trade_no,omitempty"`
	ApplyArrCityCode *string `json:"apply_arr_city_code,omitempty" xml:"apply_arr_city_code,omitempty"`
	ApplyArrCityName *string `json:"apply_arr_city_name,omitempty" xml:"apply_arr_city_name,omitempty"`
	ApplyDepCityCode *string `json:"apply_dep_city_code,omitempty" xml:"apply_dep_city_code,omitempty"`
	ApplyDepCityName *string `json:"apply_dep_city_name,omitempty" xml:"apply_dep_city_name,omitempty"`
	// 审批扩展自定义字段
	ApplyExtendField *string `json:"apply_extend_field,omitempty" xml:"apply_extend_field,omitempty"`
	// example:
	//
	// 103189557
	ApplyId     *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ArrCityCode *string `json:"arr_city_code,omitempty" xml:"arr_city_code,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	// example:
	//
	// 2021-10-13
	ArrDate    *string `json:"arr_date,omitempty" xml:"arr_date,omitempty"`
	ArrStation *string `json:"arr_station,omitempty" xml:"arr_station,omitempty"`
	// example:
	//
	// 12:30
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	BillRecordTime *string `json:"bill_record_time,omitempty" xml:"bill_record_time,omitempty"`
	// example:
	//
	// 2021-10-08 23:38:55
	BookTime *string `json:"book_time,omitempty" xml:"book_time,omitempty"`
	// example:
	//
	// al_xinuan.zsy
	BookerId           *string `json:"booker_id,omitempty" xml:"booker_id,omitempty"`
	BookerJobNo        *string `json:"booker_job_no,omitempty" xml:"booker_job_no,omitempty"`
	BookerName         *string `json:"booker_name,omitempty" xml:"booker_name,omitempty"`
	BusinessTripResult *string `json:"business_trip_result,omitempty" xml:"business_trip_result,omitempty"`
	// example:
	//
	// 1
	CapitalDirection  *string `json:"capital_direction,omitempty" xml:"capital_direction,omitempty"`
	CascadeDepartment *string `json:"cascade_department,omitempty" xml:"cascade_department,omitempty"`
	ChangeAffiliateNo *string `json:"change_affiliate_no,omitempty" xml:"change_affiliate_no,omitempty"`
	ChangeApplyId     *string `json:"change_apply_id,omitempty" xml:"change_apply_id,omitempty"`
	// example:
	//
	// 23.0
	ChangeFee    *float64 `json:"change_fee,omitempty" xml:"change_fee,omitempty"`
	ChangeResult *string  `json:"change_result,omitempty" xml:"change_result,omitempty"`
	CoachNo      *string  `json:"coach_no,omitempty" xml:"coach_no,omitempty"`
	CostCenter   *string  `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	// example:
	//
	// T85
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// 0
	Coupon       *float64 `json:"coupon,omitempty" xml:"coupon,omitempty"`
	DepCityCode  *string  `json:"dep_city_code,omitempty" xml:"dep_city_code,omitempty"`
	DepCityName  *string  `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	Department   *string  `json:"department,omitempty" xml:"department,omitempty"`
	DepartmentId *string  `json:"department_id,omitempty" xml:"department_id,omitempty"`
	// example:
	//
	// 2021-10-14
	DeptDate    *string `json:"dept_date,omitempty" xml:"dept_date,omitempty"`
	DeptStation *string `json:"dept_station,omitempty" xml:"dept_station,omitempty"`
	// example:
	//
	// 09:44
	DeptTime     *string `json:"dept_time,omitempty" xml:"dept_time,omitempty"`
	ExceedReason *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	// example:
	//
	// 6001
	FeeType *string `json:"fee_type,omitempty" xml:"fee_type,omitempty"`
	// example:
	//
	// 4740293
	Index           *string `json:"index,omitempty" xml:"index,omitempty"`
	InvoiceTitle    *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	IsTransferOrder *string `json:"is_transfer_order,omitempty" xml:"is_transfer_order,omitempty"`
	// example:
	//
	// 23432692343243432
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 350
	OrderPrice *float64 `json:"order_price,omitempty" xml:"order_price,omitempty"`
	// example:
	//
	// 534545345
	OverApplyId           *string `json:"over_apply_id,omitempty" xml:"over_apply_id,omitempty"`
	PaymentDepartmentId   *string `json:"payment_department_id,omitempty" xml:"payment_department_id,omitempty"`
	PaymentDepartmentName *string `json:"payment_department_name,omitempty" xml:"payment_department_name,omitempty"`
	// example:
	//
	// 4740293
	PrimaryId        *int64   `json:"primary_id,omitempty" xml:"primary_id,omitempty"`
	PrintTicketPrice *float64 `json:"print_ticket_price,omitempty" xml:"print_ticket_price,omitempty"`
	// example:
	//
	// 2345235435
	ProjectCode       *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectName       *string `json:"project_name,omitempty" xml:"project_name,omitempty"`
	RefundAffiliateNo *string `json:"refund_affiliate_no,omitempty" xml:"refund_affiliate_no,omitempty"`
	RefundApplyId     *string `json:"refund_apply_id,omitempty" xml:"refund_apply_id,omitempty"`
	// example:
	//
	// 0
	RefundFee    *float64 `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	RefundReason *string  `json:"refund_reason,omitempty" xml:"refund_reason,omitempty"`
	Remark       *string  `json:"remark,omitempty" xml:"remark,omitempty"`
	ReserveMode  *string  `json:"reserve_mode,omitempty" xml:"reserve_mode,omitempty"`
	RunTime      *string  `json:"run_time,omitempty" xml:"run_time,omitempty"`
	// example:
	//
	// 004F
	SeatNo   *string `json:"seat_no,omitempty" xml:"seat_no,omitempty"`
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	// example:
	//
	// 23.0
	ServiceFee *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 350
	SettlementFee *float64 `json:"settlement_fee,omitempty" xml:"settlement_fee,omitempty"`
	// example:
	//
	// 4.56
	SettlementGrantFee *float64 `json:"settlement_grant_fee,omitempty" xml:"settlement_grant_fee,omitempty"`
	// example:
	//
	// 2021-10-08 23:39:01
	SettlementTime *string `json:"settlement_time,omitempty" xml:"settlement_time,omitempty"`
	// example:
	//
	// 2
	SettlementType  *string  `json:"settlement_type,omitempty" xml:"settlement_type,omitempty"`
	ShortTicketNo   *string  `json:"short_ticket_no,omitempty" xml:"short_ticket_no,omitempty"`
	SpeedPackageFee *float64 `json:"speed_package_fee,omitempty" xml:"speed_package_fee,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// 税率
	//
	// example:
	//
	// 6%
	TaxRate            *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	ThirdItineraryId   *string `json:"third_itinerary_id,omitempty" xml:"third_itinerary_id,omitempty"`
	TicketCorpPayPrice *string `json:"ticket_corp_pay_price,omitempty" xml:"ticket_corp_pay_price,omitempty"`
	// example:
	//
	// 2115242342342424067354
	TicketNo             *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	TicketPersonPayPrice *string `json:"ticket_person_pay_price,omitempty" xml:"ticket_person_pay_price,omitempty"`
	// example:
	//
	// 350
	TicketPrice *float64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// G906
	TrainNo                *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
	TrainType              *string `json:"train_type,omitempty" xml:"train_type,omitempty"`
	TravelerId             *string `json:"traveler_id,omitempty" xml:"traveler_id,omitempty"`
	TravelerJobNo          *string `json:"traveler_job_no,omitempty" xml:"traveler_job_no,omitempty"`
	TravelerMemberTypeName *string `json:"traveler_member_type_name,omitempty" xml:"traveler_member_type_name,omitempty"`
	TravelerName           *string `json:"traveler_name,omitempty" xml:"traveler_name,omitempty"`
	// example:
	//
	// 11
	VoucherType *int32 `json:"voucher_type,omitempty" xml:"voucher_type,omitempty"`
}

func (s TrainBillSettlementQueryResponseBodyModuleDataList) String() string {
	return tea.Prettify(s)
}

func (s TrainBillSettlementQueryResponseBodyModuleDataList) GoString() string {
	return s.String()
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetAlipayTradeNo(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.AlipayTradeNo = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityCode(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityCode = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetApplyArrCityName(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyArrCityName = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityCode(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityCode = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetApplyDepCityName(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyDepCityName = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetApplyExtendField(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyExtendField = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetApplyId(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ApplyId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetArrCityCode(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ArrCityCode = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetArrCityName(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ArrCityName = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetArrDate(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ArrDate = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetArrStation(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ArrStation = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetArrTime(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ArrTime = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetBillRecordTime(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.BillRecordTime = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetBookTime(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.BookTime = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetBookerId(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.BookerId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetBookerJobNo(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.BookerJobNo = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetBookerName(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.BookerName = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetBusinessTripResult(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.BusinessTripResult = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetCapitalDirection(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.CapitalDirection = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetCascadeDepartment(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.CascadeDepartment = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetChangeAffiliateNo(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ChangeAffiliateNo = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetChangeApplyId(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ChangeApplyId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetChangeFee(v float64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ChangeFee = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetChangeResult(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ChangeResult = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetCoachNo(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.CoachNo = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetCostCenter(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenter = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetCostCenterNumber(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.CostCenterNumber = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetCoupon(v float64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.Coupon = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetDepCityCode(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.DepCityCode = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetDepCityName(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.DepCityName = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetDepartment(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.Department = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetDepartmentId(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.DepartmentId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetDeptDate(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.DeptDate = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetDeptStation(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.DeptStation = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetDeptTime(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.DeptTime = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetExceedReason(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ExceedReason = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetFeeType(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.FeeType = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetIndex(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.Index = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetInvoiceTitle(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.InvoiceTitle = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetIsTransferOrder(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.IsTransferOrder = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetOrderId(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.OrderId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetOrderPrice(v float64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.OrderPrice = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetOverApplyId(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.OverApplyId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentId(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetPaymentDepartmentName(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.PaymentDepartmentName = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetPrimaryId(v int64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.PrimaryId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetPrintTicketPrice(v float64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.PrintTicketPrice = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetProjectCode(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectCode = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetProjectName(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ProjectName = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetRefundAffiliateNo(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.RefundAffiliateNo = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetRefundApplyId(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.RefundApplyId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetRefundFee(v float64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.RefundFee = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetRefundReason(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.RefundReason = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetRemark(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.Remark = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetReserveMode(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ReserveMode = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetRunTime(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.RunTime = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetSeatNo(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.SeatNo = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetSeatType(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.SeatType = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetServiceFee(v float64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ServiceFee = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetSettlementFee(v float64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementFee = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetSettlementGrantFee(v float64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementGrantFee = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetSettlementTime(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementTime = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetSettlementType(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.SettlementType = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetShortTicketNo(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ShortTicketNo = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetSpeedPackageFee(v float64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.SpeedPackageFee = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetStatus(v int32) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.Status = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTaxRate(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TaxRate = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetThirdItineraryId(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.ThirdItineraryId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTicketCorpPayPrice(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TicketCorpPayPrice = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTicketNo(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TicketNo = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTicketPersonPayPrice(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TicketPersonPayPrice = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTicketPrice(v float64) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TicketPrice = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTrainNo(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TrainNo = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTrainType(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TrainType = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTravelerId(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerId = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTravelerJobNo(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerJobNo = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTravelerMemberTypeName(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerMemberTypeName = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetTravelerName(v string) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.TravelerName = &v
	return s
}

func (s *TrainBillSettlementQueryResponseBodyModuleDataList) SetVoucherType(v int32) *TrainBillSettlementQueryResponseBodyModuleDataList {
	s.VoucherType = &v
	return s
}

type TrainBillSettlementQueryResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainBillSettlementQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainBillSettlementQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainBillSettlementQueryResponse) GoString() string {
	return s.String()
}

func (s *TrainBillSettlementQueryResponse) SetHeaders(v map[string]*string) *TrainBillSettlementQueryResponse {
	s.Headers = v
	return s
}

func (s *TrainBillSettlementQueryResponse) SetStatusCode(v int32) *TrainBillSettlementQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainBillSettlementQueryResponse) SetBody(v *TrainBillSettlementQueryResponseBody) *TrainBillSettlementQueryResponse {
	s.Body = v
	return s
}

type TrainExceedApplyQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s TrainExceedApplyQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainExceedApplyQueryHeaders) GoString() string {
	return s.String()
}

func (s *TrainExceedApplyQueryHeaders) SetCommonHeaders(v map[string]*string) *TrainExceedApplyQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainExceedApplyQueryHeaders) SetXAcsBtripSoCorpToken(v string) *TrainExceedApplyQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type TrainExceedApplyQueryRequest struct {
	// example:
	//
	// 349720
	ApplyId            *int64  `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	BusinessInstanceId *string `json:"business_instance_id,omitempty" xml:"business_instance_id,omitempty"`
}

func (s TrainExceedApplyQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainExceedApplyQueryRequest) GoString() string {
	return s.String()
}

func (s *TrainExceedApplyQueryRequest) SetApplyId(v int64) *TrainExceedApplyQueryRequest {
	s.ApplyId = &v
	return s
}

func (s *TrainExceedApplyQueryRequest) SetBusinessInstanceId(v string) *TrainExceedApplyQueryRequest {
	s.BusinessInstanceId = &v
	return s
}

type TrainExceedApplyQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                                  `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                  `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TrainExceedApplyQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// BE3FBA15-C5E1-5B99-8120-9FB84A04FB81
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// True
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainExceedApplyQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainExceedApplyQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TrainExceedApplyQueryResponseBody) SetCode(v string) *TrainExceedApplyQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBody) SetMessage(v string) *TrainExceedApplyQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBody) SetModule(v *TrainExceedApplyQueryResponseBodyModule) *TrainExceedApplyQueryResponseBody {
	s.Module = v
	return s
}

func (s *TrainExceedApplyQueryResponseBody) SetRequestId(v string) *TrainExceedApplyQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBody) SetSuccess(v bool) *TrainExceedApplyQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBody) SetTraceId(v string) *TrainExceedApplyQueryResponseBody {
	s.TraceId = &v
	return s
}

type TrainExceedApplyQueryResponseBodyModule struct {
	// example:
	//
	// apply1
	ApplyId              *int64                                                       `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ApplyIntentionInfoDO *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO `json:"apply_intention_info_d_o,omitempty" xml:"apply_intention_info_d_o,omitempty" type:"Struct"`
	BtripCause           *string                                                      `json:"btrip_cause,omitempty" xml:"btrip_cause,omitempty"`
	// example:
	//
	// corp1
	CorpId       *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	ExceedReason *string `json:"exceed_reason,omitempty" xml:"exceed_reason,omitempty"`
	// example:
	//
	// 32
	ExceedType *int32 `json:"exceed_type,omitempty" xml:"exceed_type,omitempty"`
	// example:
	//
	// 10000
	OriginStandard *string `json:"origin_standard,omitempty" xml:"origin_standard,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// 2022-02-24T09:55Z
	SubmitTime *string `json:"submit_time,omitempty" xml:"submit_time,omitempty"`
	// example:
	//
	// 0001A1100000007EX08O
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// testcorp1
	ThirdpartCorpId *string `json:"thirdpart_corp_id,omitempty" xml:"thirdpart_corp_id,omitempty"`
	// example:
	//
	// user1
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s TrainExceedApplyQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainExceedApplyQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetApplyId(v int64) *TrainExceedApplyQueryResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetApplyIntentionInfoDO(v *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) *TrainExceedApplyQueryResponseBodyModule {
	s.ApplyIntentionInfoDO = v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetBtripCause(v string) *TrainExceedApplyQueryResponseBodyModule {
	s.BtripCause = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetCorpId(v string) *TrainExceedApplyQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetExceedReason(v string) *TrainExceedApplyQueryResponseBodyModule {
	s.ExceedReason = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetExceedType(v int32) *TrainExceedApplyQueryResponseBodyModule {
	s.ExceedType = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetOriginStandard(v string) *TrainExceedApplyQueryResponseBodyModule {
	s.OriginStandard = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetStatus(v int32) *TrainExceedApplyQueryResponseBodyModule {
	s.Status = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetSubmitTime(v string) *TrainExceedApplyQueryResponseBodyModule {
	s.SubmitTime = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetThirdpartApplyId(v string) *TrainExceedApplyQueryResponseBodyModule {
	s.ThirdpartApplyId = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetThirdpartCorpId(v string) *TrainExceedApplyQueryResponseBodyModule {
	s.ThirdpartCorpId = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetUserId(v string) *TrainExceedApplyQueryResponseBodyModule {
	s.UserId = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModule) SetUserName(v string) *TrainExceedApplyQueryResponseBodyModule {
	s.UserName = &v
	return s
}

type TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO struct {
	// example:
	//
	// BJS
	ArrCity     *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrCityName *string `json:"arr_city_name,omitempty" xml:"arr_city_name,omitempty"`
	ArrStation  *string `json:"arr_station,omitempty" xml:"arr_station,omitempty"`
	// example:
	//
	// 2022-02-24T09:55Z
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// SHA
	DepCity     *string `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	DepCityName *string `json:"dep_city_name,omitempty" xml:"dep_city_name,omitempty"`
	DepStation  *string `json:"dep_station,omitempty" xml:"dep_station,omitempty"`
	// example:
	//
	// 2022-02-24T09:55Z
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 1000
	Price    *int64  `json:"price,omitempty" xml:"price,omitempty"`
	SeatName *string `json:"seat_name,omitempty" xml:"seat_name,omitempty"`
	// example:
	//
	// G39
	TrainNo       *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
	TrainTypeDesc *string `json:"train_type_desc,omitempty" xml:"train_type_desc,omitempty"`
	// example:
	//
	// 32
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) String() string {
	return tea.Prettify(s)
}

func (s TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) GoString() string {
	return s.String()
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetArrCity(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.ArrCity = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetArrCityName(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.ArrCityName = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetArrStation(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.ArrStation = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetArrTime(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.ArrTime = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetDepCity(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.DepCity = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetDepCityName(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.DepCityName = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetDepStation(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.DepStation = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetDepTime(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.DepTime = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetPrice(v int64) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.Price = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetSeatName(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.SeatName = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetTrainNo(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.TrainNo = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetTrainTypeDesc(v string) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.TrainTypeDesc = &v
	return s
}

func (s *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO) SetType(v int32) *TrainExceedApplyQueryResponseBodyModuleApplyIntentionInfoDO {
	s.Type = &v
	return s
}

type TrainExceedApplyQueryResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainExceedApplyQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainExceedApplyQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainExceedApplyQueryResponse) GoString() string {
	return s.String()
}

func (s *TrainExceedApplyQueryResponse) SetHeaders(v map[string]*string) *TrainExceedApplyQueryResponse {
	s.Headers = v
	return s
}

func (s *TrainExceedApplyQueryResponse) SetStatusCode(v int32) *TrainExceedApplyQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainExceedApplyQueryResponse) SetBody(v *TrainExceedApplyQueryResponseBody) *TrainExceedApplyQueryResponse {
	s.Body = v
	return s
}

type TrainFeeCalculateChangeHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainFeeCalculateChangeHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeHeaders) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeHeaders) SetCommonHeaders(v map[string]*string) *TrainFeeCalculateChangeHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainFeeCalculateChangeHeaders) SetXAcsBtripCorpToken(v string) *TrainFeeCalculateChangeHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainFeeCalculateChangeRequest struct {
	// This parameter is required.
	ChangeTrainDetails []*TrainFeeCalculateChangeRequestChangeTrainDetails `json:"change_train_details,omitempty" xml:"change_train_details,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 12345
	DistributeOrderId *string `json:"distribute_order_id,omitempty" xml:"distribute_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2627694109810885616
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
}

func (s TrainFeeCalculateChangeRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeRequest) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeRequest) SetChangeTrainDetails(v []*TrainFeeCalculateChangeRequestChangeTrainDetails) *TrainFeeCalculateChangeRequest {
	s.ChangeTrainDetails = v
	return s
}

func (s *TrainFeeCalculateChangeRequest) SetDistributeOrderId(v string) *TrainFeeCalculateChangeRequest {
	s.DistributeOrderId = &v
	return s
}

func (s *TrainFeeCalculateChangeRequest) SetOrderId(v string) *TrainFeeCalculateChangeRequest {
	s.OrderId = &v
	return s
}

type TrainFeeCalculateChangeRequestChangeTrainDetails struct {
	// This parameter is required.
	//
	// example:
	//
	// BDC
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BTC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2024-05-06 15:19:01
	OriginalDepTime *string `json:"original_dep_time,omitempty" xml:"original_dep_time,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// K234
	OriginalTrainNo *string `json:"original_train_no,omitempty" xml:"original_train_no,omitempty"`
	// This parameter is required.
	PassengerInfo *TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo `json:"passenger_info,omitempty" xml:"passenger_info,omitempty" type:"Struct"`
	// This parameter is required.
	//
	// example:
	//
	// 14
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// K2345
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainFeeCalculateChangeRequestChangeTrainDetails) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeRequestChangeTrainDetails) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetails) SetArrStationCode(v string) *TrainFeeCalculateChangeRequestChangeTrainDetails {
	s.ArrStationCode = &v
	return s
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetails) SetDepStationCode(v string) *TrainFeeCalculateChangeRequestChangeTrainDetails {
	s.DepStationCode = &v
	return s
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetails) SetDepTime(v string) *TrainFeeCalculateChangeRequestChangeTrainDetails {
	s.DepTime = &v
	return s
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetails) SetOriginalDepTime(v string) *TrainFeeCalculateChangeRequestChangeTrainDetails {
	s.OriginalDepTime = &v
	return s
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetails) SetOriginalTrainNo(v string) *TrainFeeCalculateChangeRequestChangeTrainDetails {
	s.OriginalTrainNo = &v
	return s
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetails) SetPassengerInfo(v *TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo) *TrainFeeCalculateChangeRequestChangeTrainDetails {
	s.PassengerInfo = v
	return s
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetails) SetSeatType(v string) *TrainFeeCalculateChangeRequestChangeTrainDetails {
	s.SeatType = &v
	return s
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetails) SetTrainNo(v string) *TrainFeeCalculateChangeRequestChangeTrainDetails {
	s.TrainNo = &v
	return s
}

type TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo struct {
	// This parameter is required.
	//
	// example:
	//
	// 949c9f34f677a0e5d249dfc94f5e62cc7
	PassengerCertNo *string `json:"passenger_cert_no,omitempty" xml:"passenger_cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 170d9ac6f8807f9ec603c688f45f78a41
	PassengerCertType *string `json:"passenger_cert_type,omitempty" xml:"passenger_cert_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
}

func (s TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo) SetPassengerCertNo(v string) *TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo {
	s.PassengerCertNo = &v
	return s
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo) SetPassengerCertType(v string) *TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo {
	s.PassengerCertType = &v
	return s
}

func (s *TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo) SetPassengerName(v string) *TrainFeeCalculateChangeRequestChangeTrainDetailsPassengerInfo {
	s.PassengerName = &v
	return s
}

type TrainFeeCalculateChangeShrinkRequest struct {
	// This parameter is required.
	ChangeTrainDetailsShrink *string `json:"change_train_details,omitempty" xml:"change_train_details,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12345
	DistributeOrderId *string `json:"distribute_order_id,omitempty" xml:"distribute_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2627694109810885616
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
}

func (s TrainFeeCalculateChangeShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeShrinkRequest) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeShrinkRequest) SetChangeTrainDetailsShrink(v string) *TrainFeeCalculateChangeShrinkRequest {
	s.ChangeTrainDetailsShrink = &v
	return s
}

func (s *TrainFeeCalculateChangeShrinkRequest) SetDistributeOrderId(v string) *TrainFeeCalculateChangeShrinkRequest {
	s.DistributeOrderId = &v
	return s
}

func (s *TrainFeeCalculateChangeShrinkRequest) SetOrderId(v string) *TrainFeeCalculateChangeShrinkRequest {
	s.OrderId = &v
	return s
}

type TrainFeeCalculateChangeResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainFeeCalculateChangeResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainFeeCalculateChangeResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeResponseBody) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeResponseBody) SetCode(v string) *TrainFeeCalculateChangeResponseBody {
	s.Code = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBody) SetMessage(v string) *TrainFeeCalculateChangeResponseBody {
	s.Message = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBody) SetModule(v *TrainFeeCalculateChangeResponseBodyModule) *TrainFeeCalculateChangeResponseBody {
	s.Module = v
	return s
}

func (s *TrainFeeCalculateChangeResponseBody) SetRequestId(v string) *TrainFeeCalculateChangeResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBody) SetSuccess(v bool) *TrainFeeCalculateChangeResponseBody {
	s.Success = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBody) SetTraceId(v string) *TrainFeeCalculateChangeResponseBody {
	s.TraceId = &v
	return s
}

type TrainFeeCalculateChangeResponseBodyModule struct {
	ChangeTrainDetails []*TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails `json:"change_train_details,omitempty" xml:"change_train_details,omitempty" type:"Repeated"`
	// example:
	//
	// 123456
	DistributeOrderId *string `json:"distribute_order_id,omitempty" xml:"distribute_order_id,omitempty"`
	// example:
	//
	// 1683901850297448200
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
}

func (s TrainFeeCalculateChangeResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeResponseBodyModule) SetChangeTrainDetails(v []*TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails) *TrainFeeCalculateChangeResponseBodyModule {
	s.ChangeTrainDetails = v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModule) SetDistributeOrderId(v string) *TrainFeeCalculateChangeResponseBodyModule {
	s.DistributeOrderId = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModule) SetOrderId(v string) *TrainFeeCalculateChangeResponseBodyModule {
	s.OrderId = &v
	return s
}

type TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails struct {
	// example:
	//
	// BTC
	ArrStationCode      *string                                                                           `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	ChangeTicketDetails []*TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails `json:"change_ticket_details,omitempty" xml:"change_ticket_details,omitempty" type:"Repeated"`
	// example:
	//
	// BDC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// K2345
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails) SetArrStationCode(v string) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails {
	s.ArrStationCode = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails) SetChangeTicketDetails(v []*TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails {
	s.ChangeTicketDetails = v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails) SetDepStationCode(v string) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails {
	s.DepStationCode = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails) SetDepTime(v string) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails {
	s.DepTime = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails) SetTrainNo(v string) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetails {
	s.TrainNo = &v
	return s
}

type TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails struct {
	// example:
	//
	// 0
	ChangeFee *int64 `json:"change_fee,omitempty" xml:"change_fee,omitempty"`
	// example:
	//
	// 5
	ChangeRate *int64 `json:"change_rate,omitempty" xml:"change_rate,omitempty"`
	// example:
	//
	// 10000
	ChangeRefundFee *int64 `json:"change_refund_fee,omitempty" xml:"change_refund_fee,omitempty"`
	// example:
	//
	// 10
	ChangeRefundRate *int64                                                                                       `json:"change_refund_rate,omitempty" xml:"change_refund_rate,omitempty"`
	PassengerInfo    *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo `json:"passenger_info,omitempty" xml:"passenger_info,omitempty" type:"Struct"`
	// example:
	//
	// 14
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
}

func (s TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails) SetChangeFee(v int64) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails {
	s.ChangeFee = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails) SetChangeRate(v int64) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails {
	s.ChangeRate = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails) SetChangeRefundFee(v int64) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails {
	s.ChangeRefundFee = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails) SetChangeRefundRate(v int64) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails {
	s.ChangeRefundRate = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails) SetPassengerInfo(v *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails {
	s.PassengerInfo = v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails) SetSeatType(v string) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails {
	s.SeatType = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails) SetTicketPrice(v int64) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetails {
	s.TicketPrice = &v
	return s
}

type TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo struct {
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	PassengerCertNo *string `json:"passenger_cert_no,omitempty" xml:"passenger_cert_no,omitempty"`
	// example:
	//
	// 170d9ac6f8807f9ec603c688f45f78a41
	PassengerCertType *string `json:"passenger_cert_type,omitempty" xml:"passenger_cert_type,omitempty"`
	// example:
	//
	// 123
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// example:
	//
	// 949c9f34f677a0e5d249dfc94f5e62cc7
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
}

func (s TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo) SetPassengerCertNo(v string) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo {
	s.PassengerCertNo = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo) SetPassengerCertType(v string) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo {
	s.PassengerCertType = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo) SetPassengerId(v string) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo {
	s.PassengerId = &v
	return s
}

func (s *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo) SetPassengerName(v string) *TrainFeeCalculateChangeResponseBodyModuleChangeTrainDetailsChangeTicketDetailsPassengerInfo {
	s.PassengerName = &v
	return s
}

type TrainFeeCalculateChangeResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainFeeCalculateChangeResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainFeeCalculateChangeResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateChangeResponse) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateChangeResponse) SetHeaders(v map[string]*string) *TrainFeeCalculateChangeResponse {
	s.Headers = v
	return s
}

func (s *TrainFeeCalculateChangeResponse) SetStatusCode(v int32) *TrainFeeCalculateChangeResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainFeeCalculateChangeResponse) SetBody(v *TrainFeeCalculateChangeResponseBody) *TrainFeeCalculateChangeResponse {
	s.Body = v
	return s
}

type TrainFeeCalculateRefundHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainFeeCalculateRefundHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundHeaders) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundHeaders) SetCommonHeaders(v map[string]*string) *TrainFeeCalculateRefundHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainFeeCalculateRefundHeaders) SetXAcsBtripCorpToken(v string) *TrainFeeCalculateRefundHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainFeeCalculateRefundRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	DistributeOrderId *string `json:"distribute_order_id,omitempty" xml:"distribute_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1002145190081005400
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// This parameter is required.
	RefundTrainInfos []*TrainFeeCalculateRefundRequestRefundTrainInfos `json:"refund_train_infos,omitempty" xml:"refund_train_infos,omitempty" type:"Repeated"`
}

func (s TrainFeeCalculateRefundRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundRequest) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundRequest) SetDistributeOrderId(v string) *TrainFeeCalculateRefundRequest {
	s.DistributeOrderId = &v
	return s
}

func (s *TrainFeeCalculateRefundRequest) SetOrderId(v string) *TrainFeeCalculateRefundRequest {
	s.OrderId = &v
	return s
}

func (s *TrainFeeCalculateRefundRequest) SetRefundTrainInfos(v []*TrainFeeCalculateRefundRequestRefundTrainInfos) *TrainFeeCalculateRefundRequest {
	s.RefundTrainInfos = v
	return s
}

type TrainFeeCalculateRefundRequestRefundTrainInfos struct {
	// This parameter is required.
	//
	// example:
	//
	// BDC
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BTC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// This parameter is required.
	RefundPassengerInfos []*TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos `json:"refund_passenger_infos,omitempty" xml:"refund_passenger_infos,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// K1234
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainFeeCalculateRefundRequestRefundTrainInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundRequestRefundTrainInfos) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundRequestRefundTrainInfos) SetArrStationCode(v string) *TrainFeeCalculateRefundRequestRefundTrainInfos {
	s.ArrStationCode = &v
	return s
}

func (s *TrainFeeCalculateRefundRequestRefundTrainInfos) SetDepStationCode(v string) *TrainFeeCalculateRefundRequestRefundTrainInfos {
	s.DepStationCode = &v
	return s
}

func (s *TrainFeeCalculateRefundRequestRefundTrainInfos) SetDepTime(v string) *TrainFeeCalculateRefundRequestRefundTrainInfos {
	s.DepTime = &v
	return s
}

func (s *TrainFeeCalculateRefundRequestRefundTrainInfos) SetRefundPassengerInfos(v []*TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos) *TrainFeeCalculateRefundRequestRefundTrainInfos {
	s.RefundPassengerInfos = v
	return s
}

func (s *TrainFeeCalculateRefundRequestRefundTrainInfos) SetTrainNo(v string) *TrainFeeCalculateRefundRequestRefundTrainInfos {
	s.TrainNo = &v
	return s
}

type TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos struct {
	// This parameter is required.
	//
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	PassengerCertNo *string `json:"passenger_cert_no,omitempty" xml:"passenger_cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 170d9ac6f8807f9ec603c688f45f78a41
	PassengerCertType *string `json:"passenger_cert_type,omitempty" xml:"passenger_cert_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 949c9f34f677a0e5d249dfc94f5e62cc7
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
}

func (s TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos) SetPassengerCertNo(v string) *TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos {
	s.PassengerCertNo = &v
	return s
}

func (s *TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos) SetPassengerCertType(v string) *TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos {
	s.PassengerCertType = &v
	return s
}

func (s *TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos) SetPassengerId(v string) *TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos {
	s.PassengerId = &v
	return s
}

func (s *TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos) SetPassengerName(v string) *TrainFeeCalculateRefundRequestRefundTrainInfosRefundPassengerInfos {
	s.PassengerName = &v
	return s
}

type TrainFeeCalculateRefundShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	DistributeOrderId *string `json:"distribute_order_id,omitempty" xml:"distribute_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1002145190081005400
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// This parameter is required.
	RefundTrainInfosShrink *string `json:"refund_train_infos,omitempty" xml:"refund_train_infos,omitempty"`
}

func (s TrainFeeCalculateRefundShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundShrinkRequest) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundShrinkRequest) SetDistributeOrderId(v string) *TrainFeeCalculateRefundShrinkRequest {
	s.DistributeOrderId = &v
	return s
}

func (s *TrainFeeCalculateRefundShrinkRequest) SetOrderId(v string) *TrainFeeCalculateRefundShrinkRequest {
	s.OrderId = &v
	return s
}

func (s *TrainFeeCalculateRefundShrinkRequest) SetRefundTrainInfosShrink(v string) *TrainFeeCalculateRefundShrinkRequest {
	s.RefundTrainInfosShrink = &v
	return s
}

type TrainFeeCalculateRefundResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainFeeCalculateRefundResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 210bc4c416859457407135025d509c
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainFeeCalculateRefundResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundResponseBody) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundResponseBody) SetCode(v string) *TrainFeeCalculateRefundResponseBody {
	s.Code = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBody) SetMessage(v string) *TrainFeeCalculateRefundResponseBody {
	s.Message = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBody) SetModule(v *TrainFeeCalculateRefundResponseBodyModule) *TrainFeeCalculateRefundResponseBody {
	s.Module = v
	return s
}

func (s *TrainFeeCalculateRefundResponseBody) SetRequestId(v string) *TrainFeeCalculateRefundResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBody) SetSuccess(v bool) *TrainFeeCalculateRefundResponseBody {
	s.Success = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBody) SetTraceId(v string) *TrainFeeCalculateRefundResponseBody {
	s.TraceId = &v
	return s
}

type TrainFeeCalculateRefundResponseBodyModule struct {
	// example:
	//
	// 123445
	DistributeOrderId *string `json:"distribute_order_id,omitempty" xml:"distribute_order_id,omitempty"`
	// example:
	//
	// 1017002195370467200
	OrderId            *string                                                        `json:"order_id,omitempty" xml:"order_id,omitempty"`
	RefundTrainDetails []*TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails `json:"refund_train_details,omitempty" xml:"refund_train_details,omitempty" type:"Repeated"`
}

func (s TrainFeeCalculateRefundResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundResponseBodyModule) SetDistributeOrderId(v string) *TrainFeeCalculateRefundResponseBodyModule {
	s.DistributeOrderId = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModule) SetOrderId(v string) *TrainFeeCalculateRefundResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModule) SetRefundTrainDetails(v []*TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails) *TrainFeeCalculateRefundResponseBodyModule {
	s.RefundTrainDetails = v
	return s
}

type TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails struct {
	// example:
	//
	// BTC
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	// example:
	//
	// BDC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime             *string                                                                           `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	RefundTicketDetails []*TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails `json:"refund_ticket_details,omitempty" xml:"refund_ticket_details,omitempty" type:"Repeated"`
	// example:
	//
	// K1234
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails) SetArrStationCode(v string) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails {
	s.ArrStationCode = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails) SetDepStationCode(v string) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails {
	s.DepStationCode = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails) SetDepTime(v string) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails {
	s.DepTime = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails) SetRefundTicketDetails(v []*TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails {
	s.RefundTicketDetails = v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails) SetTrainNo(v string) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetails {
	s.TrainNo = &v
	return s
}

type TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails struct {
	// example:
	//
	// true
	CanRefund     *bool                                                                                        `json:"can_refund,omitempty" xml:"can_refund,omitempty"`
	PassengerInfo *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo `json:"passenger_info,omitempty" xml:"passenger_info,omitempty" type:"Struct"`
	// example:
	//
	// 90
	RefundCostFee *int64 `json:"refund_cost_fee,omitempty" xml:"refund_cost_fee,omitempty"`
	// example:
	//
	// 10
	RefundPrice *int64 `json:"refund_price,omitempty" xml:"refund_price,omitempty"`
	// example:
	//
	// 90
	RefundRate *int64 `json:"refund_rate,omitempty" xml:"refund_rate,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
}

func (s TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails) SetCanRefund(v bool) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails {
	s.CanRefund = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails) SetPassengerInfo(v *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails {
	s.PassengerInfo = v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails) SetRefundCostFee(v int64) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails {
	s.RefundCostFee = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails) SetRefundPrice(v int64) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails {
	s.RefundPrice = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails) SetRefundRate(v int64) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails {
	s.RefundRate = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails) SetTicketPrice(v int64) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetails {
	s.TicketPrice = &v
	return s
}

type TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo struct {
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	PassengerCertNo *string `json:"passenger_cert_no,omitempty" xml:"passenger_cert_no,omitempty"`
	// example:
	//
	// 170d9ac6f8807f9ec603c688f45f78a41
	PassengerCertType *string `json:"passenger_cert_type,omitempty" xml:"passenger_cert_type,omitempty"`
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// example:
	//
	// 949c9f34f677a0e5d249dfc94f5e62cc7
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
}

func (s TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo) SetPassengerCertNo(v string) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo {
	s.PassengerCertNo = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo) SetPassengerCertType(v string) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo {
	s.PassengerCertType = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo) SetPassengerId(v string) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo {
	s.PassengerId = &v
	return s
}

func (s *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo) SetPassengerName(v string) *TrainFeeCalculateRefundResponseBodyModuleRefundTrainDetailsRefundTicketDetailsPassengerInfo {
	s.PassengerName = &v
	return s
}

type TrainFeeCalculateRefundResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainFeeCalculateRefundResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainFeeCalculateRefundResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainFeeCalculateRefundResponse) GoString() string {
	return s.String()
}

func (s *TrainFeeCalculateRefundResponse) SetHeaders(v map[string]*string) *TrainFeeCalculateRefundResponse {
	s.Headers = v
	return s
}

func (s *TrainFeeCalculateRefundResponse) SetStatusCode(v int32) *TrainFeeCalculateRefundResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainFeeCalculateRefundResponse) SetBody(v *TrainFeeCalculateRefundResponseBody) *TrainFeeCalculateRefundResponse {
	s.Body = v
	return s
}

type TrainNoInfoSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainNoInfoSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainNoInfoSearchHeaders) GoString() string {
	return s.String()
}

func (s *TrainNoInfoSearchHeaders) SetCommonHeaders(v map[string]*string) *TrainNoInfoSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainNoInfoSearchHeaders) SetXAcsBtripCorpToken(v string) *TrainNoInfoSearchHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainNoInfoSearchRequest struct {
	// This parameter is required.
	ArrLocation *string `json:"arr_location,omitempty" xml:"arr_location,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-08-15
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	DepLocation *string `json:"dep_location,omitempty" xml:"dep_location,omitempty"`
	// example:
	//
	// qwwweqswxxa
	LineKey *string `json:"line_key,omitempty" xml:"line_key,omitempty"`
	// example:
	//
	// 2023-08-15
	MiddleDate    *string `json:"middle_date,omitempty" xml:"middle_date,omitempty"`
	MiddleStation *string `json:"middle_station,omitempty" xml:"middle_station,omitempty"`
	// example:
	//
	// 12342123212
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// K2345
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainNoInfoSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainNoInfoSearchRequest) GoString() string {
	return s.String()
}

func (s *TrainNoInfoSearchRequest) SetArrLocation(v string) *TrainNoInfoSearchRequest {
	s.ArrLocation = &v
	return s
}

func (s *TrainNoInfoSearchRequest) SetDepDate(v string) *TrainNoInfoSearchRequest {
	s.DepDate = &v
	return s
}

func (s *TrainNoInfoSearchRequest) SetDepLocation(v string) *TrainNoInfoSearchRequest {
	s.DepLocation = &v
	return s
}

func (s *TrainNoInfoSearchRequest) SetLineKey(v string) *TrainNoInfoSearchRequest {
	s.LineKey = &v
	return s
}

func (s *TrainNoInfoSearchRequest) SetMiddleDate(v string) *TrainNoInfoSearchRequest {
	s.MiddleDate = &v
	return s
}

func (s *TrainNoInfoSearchRequest) SetMiddleStation(v string) *TrainNoInfoSearchRequest {
	s.MiddleStation = &v
	return s
}

func (s *TrainNoInfoSearchRequest) SetOrderId(v string) *TrainNoInfoSearchRequest {
	s.OrderId = &v
	return s
}

func (s *TrainNoInfoSearchRequest) SetTrainNo(v string) *TrainNoInfoSearchRequest {
	s.TrainNo = &v
	return s
}

type TrainNoInfoSearchResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainNoInfoSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// requestId
	//
	// example:
	//
	// 2136019116915615924561621e06ee
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainNoInfoSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainNoInfoSearchResponseBody) GoString() string {
	return s.String()
}

func (s *TrainNoInfoSearchResponseBody) SetCode(v string) *TrainNoInfoSearchResponseBody {
	s.Code = &v
	return s
}

func (s *TrainNoInfoSearchResponseBody) SetMessage(v string) *TrainNoInfoSearchResponseBody {
	s.Message = &v
	return s
}

func (s *TrainNoInfoSearchResponseBody) SetModule(v *TrainNoInfoSearchResponseBodyModule) *TrainNoInfoSearchResponseBody {
	s.Module = v
	return s
}

func (s *TrainNoInfoSearchResponseBody) SetRequestId(v string) *TrainNoInfoSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainNoInfoSearchResponseBody) SetSuccess(v bool) *TrainNoInfoSearchResponseBody {
	s.Success = &v
	return s
}

func (s *TrainNoInfoSearchResponseBody) SetTraceId(v string) *TrainNoInfoSearchResponseBody {
	s.TraceId = &v
	return s
}

type TrainNoInfoSearchResponseBodyModule struct {
	TrainStationSearchVO         *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO         `json:"train_station_search_v_o,omitempty" xml:"train_station_search_v_o,omitempty" type:"Struct"`
	TrainTransferStationSearchVO *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVO `json:"train_transfer_station_search_v_o,omitempty" xml:"train_transfer_station_search_v_o,omitempty" type:"Struct"`
}

func (s TrainNoInfoSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainNoInfoSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainNoInfoSearchResponseBodyModule) SetTrainStationSearchVO(v *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) *TrainNoInfoSearchResponseBodyModule {
	s.TrainStationSearchVO = v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModule) SetTrainTransferStationSearchVO(v *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVO) *TrainNoInfoSearchResponseBodyModule {
	s.TrainTransferStationSearchVO = v
	return s
}

type TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO struct {
	// example:
	//
	// 0
	ArrDayTag *string `json:"arr_day_tag,omitempty" xml:"arr_day_tag,omitempty"`
	// example:
	//
	// BDC
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	ArrStationName *string `json:"arr_station_name,omitempty" xml:"arr_station_name,omitempty"`
	// example:
	//
	// 2024-05-07 15:19:01
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 31
	CostTime *string `json:"cost_time,omitempty" xml:"cost_time,omitempty"`
	// example:
	//
	// BTC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	DepStationName *string `json:"dep_station_name,omitempty" xml:"dep_station_name,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 1
	IsEndStation *int32 `json:"is_end_station,omitempty" xml:"is_end_station,omitempty"`
	// example:
	//
	// 0
	IsStartStation *int32 `json:"is_start_station,omitempty" xml:"is_start_station,omitempty"`
	// example:
	//
	// 54000
	Price *string `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 0
	SaleFlag  *string                                                             `json:"sale_flag,omitempty" xml:"sale_flag,omitempty"`
	SeatInfos []*TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos `json:"seat_infos,omitempty" xml:"seat_infos,omitempty" type:"Repeated"`
	// example:
	//
	// k2345
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
	// example:
	//
	// 1
	TrainType *string `json:"train_type,omitempty" xml:"train_type,omitempty"`
}

func (s TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) String() string {
	return tea.Prettify(s)
}

func (s TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) GoString() string {
	return s.String()
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetArrDayTag(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.ArrDayTag = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetArrStationCode(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.ArrStationCode = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetArrStationName(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.ArrStationName = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetArrTime(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.ArrTime = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetCostTime(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.CostTime = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetDepStationCode(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.DepStationCode = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetDepStationName(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.DepStationName = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetDepTime(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.DepTime = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetIsEndStation(v int32) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.IsEndStation = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetIsStartStation(v int32) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.IsStartStation = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetPrice(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.Price = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetSaleFlag(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.SaleFlag = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetSeatInfos(v []*TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.SeatInfos = v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetTrainNo(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.TrainNo = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO) SetTrainType(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVO {
	s.TrainType = &v
	return s
}

type TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos struct {
	// example:
	//
	// 10000
	Price    *int64  `json:"price,omitempty" xml:"price,omitempty"`
	SeatName *string `json:"seat_name,omitempty" xml:"seat_name,omitempty"`
	// example:
	//
	// 14
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	Stock    *string `json:"stock,omitempty" xml:"stock,omitempty"`
}

func (s TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos) GoString() string {
	return s.String()
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos) SetPrice(v int64) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos {
	s.Price = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos) SetSeatName(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos {
	s.SeatName = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos) SetSeatType(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos {
	s.SeatType = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos) SetStock(v string) *TrainNoInfoSearchResponseBodyModuleTrainStationSearchVOSeatInfos {
	s.Stock = &v
	return s
}

type TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVO struct {
	TransferDetailList []*TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList `json:"transfer_detail_list,omitempty" xml:"transfer_detail_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	TransferType *string `json:"transfer_type,omitempty" xml:"transfer_type,omitempty"`
}

func (s TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVO) String() string {
	return tea.Prettify(s)
}

func (s TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVO) GoString() string {
	return s.String()
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVO) SetTransferDetailList(v []*TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVO {
	s.TransferDetailList = v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVO) SetTransferType(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVO {
	s.TransferType = &v
	return s
}

type TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList struct {
	// example:
	//
	// 1
	ArrDayTag *string `json:"arr_day_tag,omitempty" xml:"arr_day_tag,omitempty"`
	// example:
	//
	// BDC
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	ArrStationName *string `json:"arr_station_name,omitempty" xml:"arr_station_name,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 111
	CostTime *string `json:"cost_time,omitempty" xml:"cost_time,omitempty"`
	// example:
	//
	// BTC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	DepStationName *string `json:"dep_station_name,omitempty" xml:"dep_station_name,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 1
	IsEndStation *int32 `json:"is_end_station,omitempty" xml:"is_end_station,omitempty"`
	// example:
	//
	// 1
	IsStartStation *int32 `json:"is_start_station,omitempty" xml:"is_start_station,omitempty"`
	// example:
	//
	// 54000
	Price *string `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 1
	SaleFlag  *string                                                                                       `json:"sale_flag,omitempty" xml:"sale_flag,omitempty"`
	SeatInfos []*TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos `json:"seat_infos,omitempty" xml:"seat_infos,omitempty" type:"Repeated"`
	// example:
	//
	// D1234
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
	// example:
	//
	// 1
	TrainType *string `json:"train_type,omitempty" xml:"train_type,omitempty"`
}

func (s TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) String() string {
	return tea.Prettify(s)
}

func (s TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) GoString() string {
	return s.String()
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetArrDayTag(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.ArrDayTag = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetArrStationCode(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.ArrStationCode = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetArrStationName(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.ArrStationName = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetArrTime(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.ArrTime = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetCostTime(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.CostTime = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetDepStationCode(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.DepStationCode = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetDepStationName(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.DepStationName = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetDepTime(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.DepTime = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetIsEndStation(v int32) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.IsEndStation = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetIsStartStation(v int32) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.IsStartStation = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetPrice(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.Price = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetSaleFlag(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.SaleFlag = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetSeatInfos(v []*TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.SeatInfos = v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetTrainNo(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.TrainNo = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList) SetTrainType(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailList {
	s.TrainType = &v
	return s
}

type TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos struct {
	// example:
	//
	// 67000
	Price    *int64  `json:"price,omitempty" xml:"price,omitempty"`
	SeatName *string `json:"seat_name,omitempty" xml:"seat_name,omitempty"`
	// example:
	//
	// 14
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	Stock    *string `json:"stock,omitempty" xml:"stock,omitempty"`
}

func (s TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos) GoString() string {
	return s.String()
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos) SetPrice(v int64) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos {
	s.Price = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos) SetSeatName(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos {
	s.SeatName = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos) SetSeatType(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos {
	s.SeatType = &v
	return s
}

func (s *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos) SetStock(v string) *TrainNoInfoSearchResponseBodyModuleTrainTransferStationSearchVOTransferDetailListSeatInfos {
	s.Stock = &v
	return s
}

type TrainNoInfoSearchResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainNoInfoSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainNoInfoSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainNoInfoSearchResponse) GoString() string {
	return s.String()
}

func (s *TrainNoInfoSearchResponse) SetHeaders(v map[string]*string) *TrainNoInfoSearchResponse {
	s.Headers = v
	return s
}

func (s *TrainNoInfoSearchResponse) SetStatusCode(v int32) *TrainNoInfoSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainNoInfoSearchResponse) SetBody(v *TrainNoInfoSearchResponseBody) *TrainNoInfoSearchResponse {
	s.Body = v
	return s
}

type TrainNoListSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainNoListSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchHeaders) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchHeaders) SetCommonHeaders(v map[string]*string) *TrainNoListSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainNoListSearchHeaders) SetXAcsBtripCorpToken(v string) *TrainNoListSearchHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainNoListSearchRequest struct {
	// This parameter is required.
	ArrLocation *string `json:"arr_location,omitempty" xml:"arr_location,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2024-05-16
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	DepLocation *string `json:"dep_location,omitempty" xml:"dep_location,omitempty"`
	// This parameter is required.
	Option *TrainNoListSearchRequestOption `json:"option,omitempty" xml:"option,omitempty" type:"Struct"`
	// example:
	//
	// null
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
}

func (s TrainNoListSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchRequest) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchRequest) SetArrLocation(v string) *TrainNoListSearchRequest {
	s.ArrLocation = &v
	return s
}

func (s *TrainNoListSearchRequest) SetDepDate(v string) *TrainNoListSearchRequest {
	s.DepDate = &v
	return s
}

func (s *TrainNoListSearchRequest) SetDepLocation(v string) *TrainNoListSearchRequest {
	s.DepLocation = &v
	return s
}

func (s *TrainNoListSearchRequest) SetOption(v *TrainNoListSearchRequestOption) *TrainNoListSearchRequest {
	s.Option = v
	return s
}

func (s *TrainNoListSearchRequest) SetOrderId(v string) *TrainNoListSearchRequest {
	s.OrderId = &v
	return s
}

type TrainNoListSearchRequestOption struct {
	// example:
	//
	// false
	NeedTransfer *bool `json:"need_transfer,omitempty" xml:"need_transfer,omitempty"`
}

func (s TrainNoListSearchRequestOption) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchRequestOption) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchRequestOption) SetNeedTransfer(v bool) *TrainNoListSearchRequestOption {
	s.NeedTransfer = &v
	return s
}

type TrainNoListSearchShrinkRequest struct {
	// This parameter is required.
	ArrLocation *string `json:"arr_location,omitempty" xml:"arr_location,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2024-05-16
	DepDate *string `json:"dep_date,omitempty" xml:"dep_date,omitempty"`
	// This parameter is required.
	DepLocation *string `json:"dep_location,omitempty" xml:"dep_location,omitempty"`
	// This parameter is required.
	OptionShrink *string `json:"option,omitempty" xml:"option,omitempty"`
	// example:
	//
	// null
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
}

func (s TrainNoListSearchShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchShrinkRequest) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchShrinkRequest) SetArrLocation(v string) *TrainNoListSearchShrinkRequest {
	s.ArrLocation = &v
	return s
}

func (s *TrainNoListSearchShrinkRequest) SetDepDate(v string) *TrainNoListSearchShrinkRequest {
	s.DepDate = &v
	return s
}

func (s *TrainNoListSearchShrinkRequest) SetDepLocation(v string) *TrainNoListSearchShrinkRequest {
	s.DepLocation = &v
	return s
}

func (s *TrainNoListSearchShrinkRequest) SetOptionShrink(v string) *TrainNoListSearchShrinkRequest {
	s.OptionShrink = &v
	return s
}

func (s *TrainNoListSearchShrinkRequest) SetOrderId(v string) *TrainNoListSearchShrinkRequest {
	s.OrderId = &v
	return s
}

type TrainNoListSearchResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainNoListSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 210bc81a17090871660176894d008c
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainNoListSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchResponseBody) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchResponseBody) SetCode(v string) *TrainNoListSearchResponseBody {
	s.Code = &v
	return s
}

func (s *TrainNoListSearchResponseBody) SetMessage(v string) *TrainNoListSearchResponseBody {
	s.Message = &v
	return s
}

func (s *TrainNoListSearchResponseBody) SetModule(v *TrainNoListSearchResponseBodyModule) *TrainNoListSearchResponseBody {
	s.Module = v
	return s
}

func (s *TrainNoListSearchResponseBody) SetRequestId(v string) *TrainNoListSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainNoListSearchResponseBody) SetSuccess(v bool) *TrainNoListSearchResponseBody {
	s.Success = &v
	return s
}

func (s *TrainNoListSearchResponseBody) SetTraceId(v string) *TrainNoListSearchResponseBody {
	s.TraceId = &v
	return s
}

type TrainNoListSearchResponseBodyModule struct {
	TrainStationSearchVOS         []*TrainNoListSearchResponseBodyModuleTrainStationSearchVOS         `json:"train_station_search_v_o_s,omitempty" xml:"train_station_search_v_o_s,omitempty" type:"Repeated"`
	TrainTransferStationSearchVOs []*TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs `json:"train_transfer_station_search_v_os,omitempty" xml:"train_transfer_station_search_v_os,omitempty" type:"Repeated"`
}

func (s TrainNoListSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchResponseBodyModule) SetTrainStationSearchVOS(v []*TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) *TrainNoListSearchResponseBodyModule {
	s.TrainStationSearchVOS = v
	return s
}

func (s *TrainNoListSearchResponseBodyModule) SetTrainTransferStationSearchVOs(v []*TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs) *TrainNoListSearchResponseBodyModule {
	s.TrainTransferStationSearchVOs = v
	return s
}

type TrainNoListSearchResponseBodyModuleTrainStationSearchVOS struct {
	// example:
	//
	// 0
	ArrDayTag *string `json:"arr_day_tag,omitempty" xml:"arr_day_tag,omitempty"`
	// example:
	//
	// BDC
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	ArrStationName *string `json:"arr_station_name,omitempty" xml:"arr_station_name,omitempty"`
	// example:
	//
	// 2024-05-07 14:46:06
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 30
	CostTime *string `json:"cost_time,omitempty" xml:"cost_time,omitempty"`
	// example:
	//
	// BTC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	DepStationName *string `json:"dep_station_name,omitempty" xml:"dep_station_name,omitempty"`
	// example:
	//
	// 2024-05-06 14:46:06
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 1
	IsEndStation *int32 `json:"is_end_station,omitempty" xml:"is_end_station,omitempty"`
	// example:
	//
	// 1
	IsStartStation *int32 `json:"is_start_station,omitempty" xml:"is_start_station,omitempty"`
	// example:
	//
	// 54000
	Price *string `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 1
	SaleFlag    *string `json:"sale_flag,omitempty" xml:"sale_flag,omitempty"`
	SaleFlagMsg *string `json:"sale_flag_msg,omitempty" xml:"sale_flag_msg,omitempty"`
	// example:
	//
	// 0
	SeagmentIndex *string                                                              `json:"seagment_index,omitempty" xml:"seagment_index,omitempty"`
	SeatInfos     []*TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos `json:"seat_infos,omitempty" xml:"seat_infos,omitempty" type:"Repeated"`
	// example:
	//
	// D2345
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
	// example:
	//
	// 1
	TrainType *string `json:"train_type,omitempty" xml:"train_type,omitempty"`
}

func (s TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetArrDayTag(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.ArrDayTag = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetArrStationCode(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.ArrStationCode = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetArrStationName(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.ArrStationName = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetArrTime(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.ArrTime = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetCostTime(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.CostTime = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetDepStationCode(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.DepStationCode = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetDepStationName(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.DepStationName = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetDepTime(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.DepTime = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetIsEndStation(v int32) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.IsEndStation = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetIsStartStation(v int32) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.IsStartStation = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetPrice(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.Price = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetSaleFlag(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.SaleFlag = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetSaleFlagMsg(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.SaleFlagMsg = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetSeagmentIndex(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.SeagmentIndex = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetSeatInfos(v []*TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.SeatInfos = v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetTrainNo(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.TrainNo = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS) SetTrainType(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOS {
	s.TrainType = &v
	return s
}

type TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos struct {
	// example:
	//
	// 40900
	Price    *int64  `json:"price,omitempty" xml:"price,omitempty"`
	SeatName *string `json:"seat_name,omitempty" xml:"seat_name,omitempty"`
	// example:
	//
	// 14
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	Stock    *string `json:"stock,omitempty" xml:"stock,omitempty"`
}

func (s TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos) SetPrice(v int64) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos {
	s.Price = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos) SetSeatName(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos {
	s.SeatName = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos) SetSeatType(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos {
	s.SeatType = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos) SetStock(v string) *TrainNoListSearchResponseBodyModuleTrainStationSearchVOSSeatInfos {
	s.Stock = &v
	return s
}

type TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs struct {
	ArrStation         *string                                                                               `json:"arr_station,omitempty" xml:"arr_station,omitempty"`
	DepStation         *string                                                                               `json:"dep_station,omitempty" xml:"dep_station,omitempty"`
	LineKey            *string                                                                               `json:"line_key,omitempty" xml:"line_key,omitempty"`
	MiddleStation      *string                                                                               `json:"middle_station,omitempty" xml:"middle_station,omitempty"`
	TransferDetailList []*TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList `json:"transfer_detail_list,omitempty" xml:"transfer_detail_list,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	TransferType *string `json:"transfer_type,omitempty" xml:"transfer_type,omitempty"`
}

func (s TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs) SetArrStation(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs {
	s.ArrStation = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs) SetDepStation(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs {
	s.DepStation = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs) SetLineKey(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs {
	s.LineKey = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs) SetMiddleStation(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs {
	s.MiddleStation = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs) SetTransferDetailList(v []*TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs {
	s.TransferDetailList = v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs) SetTransferType(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOs {
	s.TransferType = &v
	return s
}

type TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList struct {
	// example:
	//
	// 1
	ArrDayTag *string `json:"arr_day_tag,omitempty" xml:"arr_day_tag,omitempty"`
	// example:
	//
	// 123344
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	ArrStationName *string `json:"arr_station_name,omitempty" xml:"arr_station_name,omitempty"`
	// example:
	//
	// 2024-05-07 14:46:06
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 234567
	CostTime *string `json:"cost_time,omitempty" xml:"cost_time,omitempty"`
	// example:
	//
	// 12334
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	DepStationName *string `json:"dep_station_name,omitempty" xml:"dep_station_name,omitempty"`
	// example:
	//
	// 2024-05-06 14:46:06
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// 1
	IsEndStation *int32 `json:"is_end_station,omitempty" xml:"is_end_station,omitempty"`
	// example:
	//
	// 0
	IsStartStation *int32 `json:"is_start_station,omitempty" xml:"is_start_station,omitempty"`
	// example:
	//
	// 105000
	Price *string `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 1
	SaleFlag    *string                                                                                        `json:"sale_flag,omitempty" xml:"sale_flag,omitempty"`
	SaleFlagMsg *string                                                                                        `json:"sale_flag_msg,omitempty" xml:"sale_flag_msg,omitempty"`
	SeatInfos   []*TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos `json:"seat_infos,omitempty" xml:"seat_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 0
	SegmentIndex *string `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	// example:
	//
	// K2345
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
	// example:
	//
	// 1
	TrainType *string `json:"train_type,omitempty" xml:"train_type,omitempty"`
}

func (s TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetArrDayTag(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.ArrDayTag = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetArrStationCode(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.ArrStationCode = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetArrStationName(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.ArrStationName = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetArrTime(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.ArrTime = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetCostTime(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.CostTime = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetDepStationCode(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.DepStationCode = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetDepStationName(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.DepStationName = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetDepTime(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.DepTime = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetIsEndStation(v int32) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.IsEndStation = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetIsStartStation(v int32) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.IsStartStation = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetPrice(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.Price = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetSaleFlag(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.SaleFlag = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetSaleFlagMsg(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.SaleFlagMsg = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetSeatInfos(v []*TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.SeatInfos = v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetSegmentIndex(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.SegmentIndex = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetTrainNo(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.TrainNo = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList) SetTrainType(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailList {
	s.TrainType = &v
	return s
}

type TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos struct {
	// example:
	//
	// 40900
	Price    *int64  `json:"price,omitempty" xml:"price,omitempty"`
	SeatName *string `json:"seat_name,omitempty" xml:"seat_name,omitempty"`
	// example:
	//
	// 14
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	// example:
	//
	// 33
	Stock *string `json:"stock,omitempty" xml:"stock,omitempty"`
}

func (s TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos) SetPrice(v int64) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos {
	s.Price = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos) SetSeatName(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos {
	s.SeatName = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos) SetSeatType(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos {
	s.SeatType = &v
	return s
}

func (s *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos) SetStock(v string) *TrainNoListSearchResponseBodyModuleTrainTransferStationSearchVOsTransferDetailListSeatInfos {
	s.Stock = &v
	return s
}

type TrainNoListSearchResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainNoListSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainNoListSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainNoListSearchResponse) GoString() string {
	return s.String()
}

func (s *TrainNoListSearchResponse) SetHeaders(v map[string]*string) *TrainNoListSearchResponse {
	s.Headers = v
	return s
}

func (s *TrainNoListSearchResponse) SetStatusCode(v int32) *TrainNoListSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainNoListSearchResponse) SetBody(v *TrainNoListSearchResponseBody) *TrainNoListSearchResponse {
	s.Body = v
	return s
}

type TrainOrderCancelHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainOrderCancelHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCancelHeaders) GoString() string {
	return s.String()
}

func (s *TrainOrderCancelHeaders) SetCommonHeaders(v map[string]*string) *TrainOrderCancelHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainOrderCancelHeaders) SetXAcsBtripCorpToken(v string) *TrainOrderCancelHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainOrderCancelRequest struct {
	// example:
	//
	// 1234223
	ChangeOrderId *string `json:"change_order_id,omitempty" xml:"change_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1002145190081005400
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 123321245534
	OutChangeOrderId *string `json:"out_change_order_id,omitempty" xml:"out_change_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s TrainOrderCancelRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCancelRequest) GoString() string {
	return s.String()
}

func (s *TrainOrderCancelRequest) SetChangeOrderId(v string) *TrainOrderCancelRequest {
	s.ChangeOrderId = &v
	return s
}

func (s *TrainOrderCancelRequest) SetOrderId(v string) *TrainOrderCancelRequest {
	s.OrderId = &v
	return s
}

func (s *TrainOrderCancelRequest) SetOutChangeOrderId(v string) *TrainOrderCancelRequest {
	s.OutChangeOrderId = &v
	return s
}

func (s *TrainOrderCancelRequest) SetOutOrderId(v string) *TrainOrderCancelRequest {
	s.OutOrderId = &v
	return s
}

type TrainOrderCancelResponseBody struct {
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainOrderCancelResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainOrderCancelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCancelResponseBody) GoString() string {
	return s.String()
}

func (s *TrainOrderCancelResponseBody) SetCode(v string) *TrainOrderCancelResponseBody {
	s.Code = &v
	return s
}

func (s *TrainOrderCancelResponseBody) SetMessage(v string) *TrainOrderCancelResponseBody {
	s.Message = &v
	return s
}

func (s *TrainOrderCancelResponseBody) SetModule(v *TrainOrderCancelResponseBodyModule) *TrainOrderCancelResponseBody {
	s.Module = v
	return s
}

func (s *TrainOrderCancelResponseBody) SetRequestId(v string) *TrainOrderCancelResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainOrderCancelResponseBody) SetSuccess(v bool) *TrainOrderCancelResponseBody {
	s.Success = &v
	return s
}

func (s *TrainOrderCancelResponseBody) SetTraceId(v string) *TrainOrderCancelResponseBody {
	s.TraceId = &v
	return s
}

type TrainOrderCancelResponseBodyModule struct {
	// example:
	//
	// 11127278782
	ChangeOrderId *string `json:"change_order_id,omitempty" xml:"change_order_id,omitempty"`
	// example:
	//
	// 116019444
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 43534345
	OutChangeOrderId *string `json:"out_change_order_id,omitempty" xml:"out_change_order_id,omitempty"`
	// example:
	//
	// 3702553342926024704
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// true
	Status *bool `json:"status,omitempty" xml:"status,omitempty"`
}

func (s TrainOrderCancelResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCancelResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainOrderCancelResponseBodyModule) SetChangeOrderId(v string) *TrainOrderCancelResponseBodyModule {
	s.ChangeOrderId = &v
	return s
}

func (s *TrainOrderCancelResponseBodyModule) SetOrderId(v string) *TrainOrderCancelResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *TrainOrderCancelResponseBodyModule) SetOutChangeOrderId(v string) *TrainOrderCancelResponseBodyModule {
	s.OutChangeOrderId = &v
	return s
}

func (s *TrainOrderCancelResponseBodyModule) SetOutOrderId(v string) *TrainOrderCancelResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *TrainOrderCancelResponseBodyModule) SetStatus(v bool) *TrainOrderCancelResponseBodyModule {
	s.Status = &v
	return s
}

type TrainOrderCancelResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainOrderCancelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainOrderCancelResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCancelResponse) GoString() string {
	return s.String()
}

func (s *TrainOrderCancelResponse) SetHeaders(v map[string]*string) *TrainOrderCancelResponse {
	s.Headers = v
	return s
}

func (s *TrainOrderCancelResponse) SetStatusCode(v int32) *TrainOrderCancelResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainOrderCancelResponse) SetBody(v *TrainOrderCancelResponseBody) *TrainOrderCancelResponse {
	s.Body = v
	return s
}

type TrainOrderChangeConfirmHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainOrderChangeConfirmHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderChangeConfirmHeaders) GoString() string {
	return s.String()
}

func (s *TrainOrderChangeConfirmHeaders) SetCommonHeaders(v map[string]*string) *TrainOrderChangeConfirmHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainOrderChangeConfirmHeaders) SetXAcsBtripCorpToken(v string) *TrainOrderChangeConfirmHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainOrderChangeConfirmRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1234567890
	ChangeApplyId *string `json:"change_apply_id,omitempty" xml:"change_apply_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	ChangeSettleAmount *int64 `json:"change_settle_amount,omitempty" xml:"change_settle_amount,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1002145190081005400
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12345
	OutChangeApplyId *string `json:"out_change_apply_id,omitempty" xml:"out_change_apply_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s TrainOrderChangeConfirmRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderChangeConfirmRequest) GoString() string {
	return s.String()
}

func (s *TrainOrderChangeConfirmRequest) SetChangeApplyId(v string) *TrainOrderChangeConfirmRequest {
	s.ChangeApplyId = &v
	return s
}

func (s *TrainOrderChangeConfirmRequest) SetChangeSettleAmount(v int64) *TrainOrderChangeConfirmRequest {
	s.ChangeSettleAmount = &v
	return s
}

func (s *TrainOrderChangeConfirmRequest) SetOrderId(v string) *TrainOrderChangeConfirmRequest {
	s.OrderId = &v
	return s
}

func (s *TrainOrderChangeConfirmRequest) SetOutChangeApplyId(v string) *TrainOrderChangeConfirmRequest {
	s.OutChangeApplyId = &v
	return s
}

func (s *TrainOrderChangeConfirmRequest) SetOutOrderId(v string) *TrainOrderChangeConfirmRequest {
	s.OutOrderId = &v
	return s
}

type TrainOrderChangeConfirmResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainOrderChangeConfirmResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainOrderChangeConfirmResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderChangeConfirmResponseBody) GoString() string {
	return s.String()
}

func (s *TrainOrderChangeConfirmResponseBody) SetCode(v string) *TrainOrderChangeConfirmResponseBody {
	s.Code = &v
	return s
}

func (s *TrainOrderChangeConfirmResponseBody) SetMessage(v string) *TrainOrderChangeConfirmResponseBody {
	s.Message = &v
	return s
}

func (s *TrainOrderChangeConfirmResponseBody) SetModule(v *TrainOrderChangeConfirmResponseBodyModule) *TrainOrderChangeConfirmResponseBody {
	s.Module = v
	return s
}

func (s *TrainOrderChangeConfirmResponseBody) SetRequestId(v string) *TrainOrderChangeConfirmResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainOrderChangeConfirmResponseBody) SetSuccess(v bool) *TrainOrderChangeConfirmResponseBody {
	s.Success = &v
	return s
}

func (s *TrainOrderChangeConfirmResponseBody) SetTraceId(v string) *TrainOrderChangeConfirmResponseBody {
	s.TraceId = &v
	return s
}

type TrainOrderChangeConfirmResponseBodyModule struct {
	// example:
	//
	// 123445443444
	ChangeOrderId *string `json:"change_order_id,omitempty" xml:"change_order_id,omitempty"`
	// example:
	//
	// 116019444
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1234232
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 0
	Status *bool `json:"status,omitempty" xml:"status,omitempty"`
}

func (s TrainOrderChangeConfirmResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderChangeConfirmResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainOrderChangeConfirmResponseBodyModule) SetChangeOrderId(v string) *TrainOrderChangeConfirmResponseBodyModule {
	s.ChangeOrderId = &v
	return s
}

func (s *TrainOrderChangeConfirmResponseBodyModule) SetOrderId(v string) *TrainOrderChangeConfirmResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *TrainOrderChangeConfirmResponseBodyModule) SetOutOrderId(v string) *TrainOrderChangeConfirmResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *TrainOrderChangeConfirmResponseBodyModule) SetStatus(v bool) *TrainOrderChangeConfirmResponseBodyModule {
	s.Status = &v
	return s
}

type TrainOrderChangeConfirmResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainOrderChangeConfirmResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainOrderChangeConfirmResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderChangeConfirmResponse) GoString() string {
	return s.String()
}

func (s *TrainOrderChangeConfirmResponse) SetHeaders(v map[string]*string) *TrainOrderChangeConfirmResponse {
	s.Headers = v
	return s
}

func (s *TrainOrderChangeConfirmResponse) SetStatusCode(v int32) *TrainOrderChangeConfirmResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainOrderChangeConfirmResponse) SetBody(v *TrainOrderChangeConfirmResponseBody) *TrainOrderChangeConfirmResponse {
	s.Body = v
	return s
}

type TrainOrderCreateHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainOrderCreateHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateHeaders) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateHeaders) SetCommonHeaders(v map[string]*string) *TrainOrderCreateHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainOrderCreateHeaders) SetXAcsBtripCorpToken(v string) *TrainOrderCreateHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainOrderCreateRequest struct {
	// example:
	//
	// 0
	AcceptNoSeat *string `json:"accept_no_seat,omitempty" xml:"accept_no_seat,omitempty"`
	// This parameter is required.
	BookTrainInfos []*TrainOrderCreateRequestBookTrainInfos `json:"book_train_infos,omitempty" xml:"book_train_infos,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// 12344321
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	BtripUserName *string                              `json:"btrip_user_name,omitempty" xml:"btrip_user_name,omitempty"`
	BusinessInfo  *TrainOrderCreateRequestBusinessInfo `json:"business_info,omitempty" xml:"business_info,omitempty" type:"Struct"`
	// This parameter is required.
	ContactInfo *TrainOrderCreateRequestContactInfo `json:"contact_info,omitempty" xml:"contact_info,omitempty" type:"Struct"`
	// example:
	//
	// 0
	ForceMatch *string `json:"force_match,omitempty" xml:"force_match,omitempty"`
	// example:
	//
	// false
	IsPayNow *bool `json:"is_pay_now,omitempty" xml:"is_pay_now,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// This parameter is required.
	PassengerOpenInfoS []*TrainOrderCreateRequestPassengerOpenInfoS `json:"passenger_open_info_s,omitempty" xml:"passenger_open_info_s,omitempty" type:"Repeated"`
}

func (s TrainOrderCreateRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateRequest) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateRequest) SetAcceptNoSeat(v string) *TrainOrderCreateRequest {
	s.AcceptNoSeat = &v
	return s
}

func (s *TrainOrderCreateRequest) SetBookTrainInfos(v []*TrainOrderCreateRequestBookTrainInfos) *TrainOrderCreateRequest {
	s.BookTrainInfos = v
	return s
}

func (s *TrainOrderCreateRequest) SetBtripUserId(v string) *TrainOrderCreateRequest {
	s.BtripUserId = &v
	return s
}

func (s *TrainOrderCreateRequest) SetBtripUserName(v string) *TrainOrderCreateRequest {
	s.BtripUserName = &v
	return s
}

func (s *TrainOrderCreateRequest) SetBusinessInfo(v *TrainOrderCreateRequestBusinessInfo) *TrainOrderCreateRequest {
	s.BusinessInfo = v
	return s
}

func (s *TrainOrderCreateRequest) SetContactInfo(v *TrainOrderCreateRequestContactInfo) *TrainOrderCreateRequest {
	s.ContactInfo = v
	return s
}

func (s *TrainOrderCreateRequest) SetForceMatch(v string) *TrainOrderCreateRequest {
	s.ForceMatch = &v
	return s
}

func (s *TrainOrderCreateRequest) SetIsPayNow(v bool) *TrainOrderCreateRequest {
	s.IsPayNow = &v
	return s
}

func (s *TrainOrderCreateRequest) SetOutOrderId(v string) *TrainOrderCreateRequest {
	s.OutOrderId = &v
	return s
}

func (s *TrainOrderCreateRequest) SetPassengerOpenInfoS(v []*TrainOrderCreateRequestPassengerOpenInfoS) *TrainOrderCreateRequest {
	s.PassengerOpenInfoS = v
	return s
}

type TrainOrderCreateRequestBookTrainInfos struct {
	// This parameter is required.
	//
	// example:
	//
	// BDC
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	// This parameter is required.
	BookTicketInfos []*TrainOrderCreateRequestBookTrainInfosBookTicketInfos `json:"book_ticket_infos,omitempty" xml:"book_ticket_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 1T
	ChooseBeds *string `json:"choose_beds,omitempty" xml:"choose_beds,omitempty"`
	// example:
	//
	// 1T
	ChooseSeats *string `json:"choose_seats,omitempty" xml:"choose_seats,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// BTC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// K123456
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainOrderCreateRequestBookTrainInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateRequestBookTrainInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateRequestBookTrainInfos) SetArrStationCode(v string) *TrainOrderCreateRequestBookTrainInfos {
	s.ArrStationCode = &v
	return s
}

func (s *TrainOrderCreateRequestBookTrainInfos) SetBookTicketInfos(v []*TrainOrderCreateRequestBookTrainInfosBookTicketInfos) *TrainOrderCreateRequestBookTrainInfos {
	s.BookTicketInfos = v
	return s
}

func (s *TrainOrderCreateRequestBookTrainInfos) SetChooseBeds(v string) *TrainOrderCreateRequestBookTrainInfos {
	s.ChooseBeds = &v
	return s
}

func (s *TrainOrderCreateRequestBookTrainInfos) SetChooseSeats(v string) *TrainOrderCreateRequestBookTrainInfos {
	s.ChooseSeats = &v
	return s
}

func (s *TrainOrderCreateRequestBookTrainInfos) SetDepStationCode(v string) *TrainOrderCreateRequestBookTrainInfos {
	s.DepStationCode = &v
	return s
}

func (s *TrainOrderCreateRequestBookTrainInfos) SetDepTime(v string) *TrainOrderCreateRequestBookTrainInfos {
	s.DepTime = &v
	return s
}

func (s *TrainOrderCreateRequestBookTrainInfos) SetTrainNo(v string) *TrainOrderCreateRequestBookTrainInfos {
	s.TrainNo = &v
	return s
}

type TrainOrderCreateRequestBookTrainInfosBookTicketInfos struct {
	// This parameter is required.
	//
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 14
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 0
	TicketType *string `json:"ticket_type,omitempty" xml:"ticket_type,omitempty"`
}

func (s TrainOrderCreateRequestBookTrainInfosBookTicketInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateRequestBookTrainInfosBookTicketInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateRequestBookTrainInfosBookTicketInfos) SetPassengerId(v string) *TrainOrderCreateRequestBookTrainInfosBookTicketInfos {
	s.PassengerId = &v
	return s
}

func (s *TrainOrderCreateRequestBookTrainInfosBookTicketInfos) SetSeatType(v string) *TrainOrderCreateRequestBookTrainInfosBookTicketInfos {
	s.SeatType = &v
	return s
}

func (s *TrainOrderCreateRequestBookTrainInfosBookTicketInfos) SetTicketPrice(v int64) *TrainOrderCreateRequestBookTrainInfosBookTicketInfos {
	s.TicketPrice = &v
	return s
}

func (s *TrainOrderCreateRequestBookTrainInfosBookTicketInfos) SetTicketType(v string) *TrainOrderCreateRequestBookTrainInfosBookTicketInfos {
	s.TicketType = &v
	return s
}

type TrainOrderCreateRequestBusinessInfo struct {
	// example:
	//
	// 4321
	CustomerApplyId *string `json:"customer_apply_id,omitempty" xml:"customer_apply_id,omitempty"`
	// example:
	//
	// 1234
	CustomerItineraryId *string `json:"customer_itinerary_id,omitempty" xml:"customer_itinerary_id,omitempty"`
}

func (s TrainOrderCreateRequestBusinessInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateRequestBusinessInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateRequestBusinessInfo) SetCustomerApplyId(v string) *TrainOrderCreateRequestBusinessInfo {
	s.CustomerApplyId = &v
	return s
}

func (s *TrainOrderCreateRequestBusinessInfo) SetCustomerItineraryId(v string) *TrainOrderCreateRequestBusinessInfo {
	s.CustomerItineraryId = &v
	return s
}

type TrainOrderCreateRequestContactInfo struct {
	// This parameter is required.
	//
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// b6a6fc1bdf1ba60e25c2e132b612c8819
	PassengerMobile *string `json:"passenger_mobile,omitempty" xml:"passenger_mobile,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 949c9f34f677a0e5d249dfc94f5e62cc7
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
}

func (s TrainOrderCreateRequestContactInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateRequestContactInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateRequestContactInfo) SetPassengerId(v string) *TrainOrderCreateRequestContactInfo {
	s.PassengerId = &v
	return s
}

func (s *TrainOrderCreateRequestContactInfo) SetPassengerMobile(v string) *TrainOrderCreateRequestContactInfo {
	s.PassengerMobile = &v
	return s
}

func (s *TrainOrderCreateRequestContactInfo) SetPassengerName(v string) *TrainOrderCreateRequestContactInfo {
	s.PassengerName = &v
	return s
}

type TrainOrderCreateRequestPassengerOpenInfoS struct {
	CostCenterInfo *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo `json:"cost_center_info,omitempty" xml:"cost_center_info,omitempty" type:"Struct"`
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	CountryCode *string `json:"country_code,omitempty" xml:"country_code,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	PassengerCertNo *string `json:"passenger_cert_no,omitempty" xml:"passenger_cert_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 949c9f34f677a0e5d249dfc94f5e62cc7
	PassengerCertType *string `json:"passenger_cert_type,omitempty" xml:"passenger_cert_type,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// example:
	//
	// b6a6fc1bdf1ba60e25c2e132b612c8819
	PassengerMobile *string `json:"passenger_mobile,omitempty" xml:"passenger_mobile,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 949c9f34f677a0e5d249dfc94f5e62cc7
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	ValidDateEnd *string `json:"valid_date_end,omitempty" xml:"valid_date_end,omitempty"`
}

func (s TrainOrderCreateRequestPassengerOpenInfoS) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateRequestPassengerOpenInfoS) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateRequestPassengerOpenInfoS) SetCostCenterInfo(v *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) *TrainOrderCreateRequestPassengerOpenInfoS {
	s.CostCenterInfo = v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoS) SetCountryCode(v string) *TrainOrderCreateRequestPassengerOpenInfoS {
	s.CountryCode = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoS) SetPassengerCertNo(v string) *TrainOrderCreateRequestPassengerOpenInfoS {
	s.PassengerCertNo = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoS) SetPassengerCertType(v string) *TrainOrderCreateRequestPassengerOpenInfoS {
	s.PassengerCertType = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoS) SetPassengerId(v string) *TrainOrderCreateRequestPassengerOpenInfoS {
	s.PassengerId = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoS) SetPassengerMobile(v string) *TrainOrderCreateRequestPassengerOpenInfoS {
	s.PassengerMobile = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoS) SetPassengerName(v string) *TrainOrderCreateRequestPassengerOpenInfoS {
	s.PassengerName = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoS) SetValidDateEnd(v string) *TrainOrderCreateRequestPassengerOpenInfoS {
	s.ValidDateEnd = &v
	return s
}

type TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo struct {
	CascadeDeptName *string `json:"cascade_dept_name,omitempty" xml:"cascade_dept_name,omitempty"`
	// example:
	//
	// 123321
	CostCenterId   *string `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// 12332112344
	CostCenterNo *string `json:"cost_center_no,omitempty" xml:"cost_center_no,omitempty"`
	// example:
	//
	// 010000009
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// example:
	//
	// 111111
	InvoiceId    *string `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// acs
	ProjectCode  *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
}

func (s TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) SetCascadeDeptName(v string) *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo {
	s.CascadeDeptName = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) SetCostCenterId(v string) *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo {
	s.CostCenterId = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) SetCostCenterName(v string) *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo {
	s.CostCenterName = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) SetCostCenterNo(v string) *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo {
	s.CostCenterNo = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) SetDepartId(v string) *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo {
	s.DepartId = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) SetDepartName(v string) *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo {
	s.DepartName = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) SetInvoiceId(v string) *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo {
	s.InvoiceId = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) SetInvoiceTitle(v string) *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo {
	s.InvoiceTitle = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) SetProjectCode(v string) *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo {
	s.ProjectCode = &v
	return s
}

func (s *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo) SetProjectTitle(v string) *TrainOrderCreateRequestPassengerOpenInfoSCostCenterInfo {
	s.ProjectTitle = &v
	return s
}

type TrainOrderCreateShrinkRequest struct {
	// example:
	//
	// 0
	AcceptNoSeat *string `json:"accept_no_seat,omitempty" xml:"accept_no_seat,omitempty"`
	// This parameter is required.
	BookTrainInfosShrink *string `json:"book_train_infos,omitempty" xml:"book_train_infos,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 12344321
	BtripUserId *string `json:"btrip_user_id,omitempty" xml:"btrip_user_id,omitempty"`
	// This parameter is required.
	BtripUserName      *string `json:"btrip_user_name,omitempty" xml:"btrip_user_name,omitempty"`
	BusinessInfoShrink *string `json:"business_info,omitempty" xml:"business_info,omitempty"`
	// This parameter is required.
	ContactInfoShrink *string `json:"contact_info,omitempty" xml:"contact_info,omitempty"`
	// example:
	//
	// 0
	ForceMatch *string `json:"force_match,omitempty" xml:"force_match,omitempty"`
	// example:
	//
	// false
	IsPayNow *bool `json:"is_pay_now,omitempty" xml:"is_pay_now,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// This parameter is required.
	PassengerOpenInfoSShrink *string `json:"passenger_open_info_s,omitempty" xml:"passenger_open_info_s,omitempty"`
}

func (s TrainOrderCreateShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateShrinkRequest) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateShrinkRequest) SetAcceptNoSeat(v string) *TrainOrderCreateShrinkRequest {
	s.AcceptNoSeat = &v
	return s
}

func (s *TrainOrderCreateShrinkRequest) SetBookTrainInfosShrink(v string) *TrainOrderCreateShrinkRequest {
	s.BookTrainInfosShrink = &v
	return s
}

func (s *TrainOrderCreateShrinkRequest) SetBtripUserId(v string) *TrainOrderCreateShrinkRequest {
	s.BtripUserId = &v
	return s
}

func (s *TrainOrderCreateShrinkRequest) SetBtripUserName(v string) *TrainOrderCreateShrinkRequest {
	s.BtripUserName = &v
	return s
}

func (s *TrainOrderCreateShrinkRequest) SetBusinessInfoShrink(v string) *TrainOrderCreateShrinkRequest {
	s.BusinessInfoShrink = &v
	return s
}

func (s *TrainOrderCreateShrinkRequest) SetContactInfoShrink(v string) *TrainOrderCreateShrinkRequest {
	s.ContactInfoShrink = &v
	return s
}

func (s *TrainOrderCreateShrinkRequest) SetForceMatch(v string) *TrainOrderCreateShrinkRequest {
	s.ForceMatch = &v
	return s
}

func (s *TrainOrderCreateShrinkRequest) SetIsPayNow(v bool) *TrainOrderCreateShrinkRequest {
	s.IsPayNow = &v
	return s
}

func (s *TrainOrderCreateShrinkRequest) SetOutOrderId(v string) *TrainOrderCreateShrinkRequest {
	s.OutOrderId = &v
	return s
}

func (s *TrainOrderCreateShrinkRequest) SetPassengerOpenInfoSShrink(v string) *TrainOrderCreateShrinkRequest {
	s.PassengerOpenInfoSShrink = &v
	return s
}

type TrainOrderCreateResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainOrderCreateResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainOrderCreateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateResponseBody) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateResponseBody) SetCode(v string) *TrainOrderCreateResponseBody {
	s.Code = &v
	return s
}

func (s *TrainOrderCreateResponseBody) SetMessage(v string) *TrainOrderCreateResponseBody {
	s.Message = &v
	return s
}

func (s *TrainOrderCreateResponseBody) SetModule(v *TrainOrderCreateResponseBodyModule) *TrainOrderCreateResponseBody {
	s.Module = v
	return s
}

func (s *TrainOrderCreateResponseBody) SetRequestId(v string) *TrainOrderCreateResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainOrderCreateResponseBody) SetSuccess(v bool) *TrainOrderCreateResponseBody {
	s.Success = &v
	return s
}

func (s *TrainOrderCreateResponseBody) SetTraceId(v string) *TrainOrderCreateResponseBody {
	s.TraceId = &v
	return s
}

type TrainOrderCreateResponseBodyModule struct {
	// example:
	//
	// 1017002195798359369
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1233333
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// 9
	PayStatus *string `json:"pay_status,omitempty" xml:"pay_status,omitempty"`
	// example:
	//
	// 5
	ServiceFee *int64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
}

func (s TrainOrderCreateResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateResponseBodyModule) SetOrderId(v string) *TrainOrderCreateResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *TrainOrderCreateResponseBodyModule) SetOutOrderId(v string) *TrainOrderCreateResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *TrainOrderCreateResponseBodyModule) SetPayStatus(v string) *TrainOrderCreateResponseBodyModule {
	s.PayStatus = &v
	return s
}

func (s *TrainOrderCreateResponseBodyModule) SetServiceFee(v int64) *TrainOrderCreateResponseBodyModule {
	s.ServiceFee = &v
	return s
}

type TrainOrderCreateResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainOrderCreateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainOrderCreateResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderCreateResponse) GoString() string {
	return s.String()
}

func (s *TrainOrderCreateResponse) SetHeaders(v map[string]*string) *TrainOrderCreateResponse {
	s.Headers = v
	return s
}

func (s *TrainOrderCreateResponse) SetStatusCode(v int32) *TrainOrderCreateResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainOrderCreateResponse) SetBody(v *TrainOrderCreateResponseBody) *TrainOrderCreateResponse {
	s.Body = v
	return s
}

type TrainOrderDetailQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainOrderDetailQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryHeaders) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryHeaders) SetCommonHeaders(v map[string]*string) *TrainOrderDetailQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainOrderDetailQueryHeaders) SetXAcsBtripCorpToken(v string) *TrainOrderDetailQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainOrderDetailQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 2083528200659337994
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 3703190607180169216
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
}

func (s TrainOrderDetailQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryRequest) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryRequest) SetOrderId(v string) *TrainOrderDetailQueryRequest {
	s.OrderId = &v
	return s
}

func (s *TrainOrderDetailQueryRequest) SetOutOrderId(v string) *TrainOrderDetailQueryRequest {
	s.OutOrderId = &v
	return s
}

type TrainOrderDetailQueryResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainOrderDetailQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 210bc81a17090871660176894d008c
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 2103a05c16872420814992343d8a09
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainOrderDetailQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBody) SetCode(v string) *TrainOrderDetailQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBody) SetMessage(v string) *TrainOrderDetailQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBody) SetModule(v *TrainOrderDetailQueryResponseBodyModule) *TrainOrderDetailQueryResponseBody {
	s.Module = v
	return s
}

func (s *TrainOrderDetailQueryResponseBody) SetRequestId(v string) *TrainOrderDetailQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBody) SetSuccess(v bool) *TrainOrderDetailQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBody) SetTraceId(v string) *TrainOrderDetailQueryResponseBody {
	s.TraceId = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModule struct {
	BookInfos            *TrainOrderDetailQueryResponseBodyModuleBookInfos              `json:"book_infos,omitempty" xml:"book_infos,omitempty" type:"Struct"`
	ChangeInfos          []*TrainOrderDetailQueryResponseBodyModuleChangeInfos          `json:"change_infos,omitempty" xml:"change_infos,omitempty" type:"Repeated"`
	OfflineRefundDetails []*TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails `json:"offlineRefundDetails,omitempty" xml:"offlineRefundDetails,omitempty" type:"Repeated"`
	// example:
	//
	// 1017028198411054446
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 3703184209587306496
	OutOrderId     *string                                                  `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	PassengerInfoS []*TrainOrderDetailQueryResponseBodyModulePassengerInfoS `json:"passenger_info_s,omitempty" xml:"passenger_info_s,omitempty" type:"Repeated"`
	RefundInfos    []*TrainOrderDetailQueryResponseBodyModuleRefundInfos    `json:"refund_infos,omitempty" xml:"refund_infos,omitempty" type:"Repeated"`
}

func (s TrainOrderDetailQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModule) SetBookInfos(v *TrainOrderDetailQueryResponseBodyModuleBookInfos) *TrainOrderDetailQueryResponseBodyModule {
	s.BookInfos = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModule) SetChangeInfos(v []*TrainOrderDetailQueryResponseBodyModuleChangeInfos) *TrainOrderDetailQueryResponseBodyModule {
	s.ChangeInfos = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModule) SetOfflineRefundDetails(v []*TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails) *TrainOrderDetailQueryResponseBodyModule {
	s.OfflineRefundDetails = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModule) SetOrderId(v string) *TrainOrderDetailQueryResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModule) SetOutOrderId(v string) *TrainOrderDetailQueryResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModule) SetPassengerInfoS(v []*TrainOrderDetailQueryResponseBodyModulePassengerInfoS) *TrainOrderDetailQueryResponseBodyModule {
	s.PassengerInfoS = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModule) SetRefundInfos(v []*TrainOrderDetailQueryResponseBodyModuleRefundInfos) *TrainOrderDetailQueryResponseBodyModule {
	s.RefundInfos = v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleBookInfos struct {
	BookTrainInfos []*TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos `json:"book_train_infos,omitempty" xml:"book_train_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 1111
	FailCode *string `json:"fail_code,omitempty" xml:"fail_code,omitempty"`
	FailMsg  *string `json:"fail_msg,omitempty" xml:"fail_msg,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	LastPayTime *string `json:"last_pay_time,omitempty" xml:"last_pay_time,omitempty"`
	// example:
	//
	// 1
	Status *int32 `json:"status,omitempty" xml:"status,omitempty"`
	// example:
	//
	// GW123456
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleBookInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleBookInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfos) SetBookTrainInfos(v []*TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) *TrainOrderDetailQueryResponseBodyModuleBookInfos {
	s.BookTrainInfos = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfos) SetFailCode(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfos {
	s.FailCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfos) SetFailMsg(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfos {
	s.FailMsg = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfos) SetLastPayTime(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfos {
	s.LastPayTime = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfos) SetStatus(v int32) *TrainOrderDetailQueryResponseBodyModuleBookInfos {
	s.Status = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfos) SetTicketNo(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfos {
	s.TicketNo = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos struct {
	// example:
	//
	// BTC
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	ArrStationName *string `json:"arr_station_name,omitempty" xml:"arr_station_name,omitempty"`
	// example:
	//
	// 2024-05-07 15:19:01
	ArriveTime      *string                                                                          `json:"arrive_time,omitempty" xml:"arrive_time,omitempty"`
	BookTicketInfos []*TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos `json:"book_ticket_infos,omitempty" xml:"book_ticket_infos,omitempty" type:"Repeated"`
	// example:
	//
	// BDC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	DepStationName *string `json:"dep_station_name,omitempty" xml:"dep_station_name,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// D1234
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) SetArrStationCode(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos {
	s.ArrStationCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) SetArrStationName(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos {
	s.ArrStationName = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) SetArriveTime(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos {
	s.ArriveTime = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) SetBookTicketInfos(v []*TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos {
	s.BookTicketInfos = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) SetDepStationCode(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos {
	s.DepStationCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) SetDepStationName(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos {
	s.DepStationName = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) SetDepTime(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos {
	s.DepTime = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos) SetTrainNo(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfos {
	s.TrainNo = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos struct {
	// example:
	//
	// 04
	CoachNo *string `json:"coach_no,omitempty" xml:"coach_no,omitempty"`
	// example:
	//
	// 1111
	FailCode   *string `json:"fail_code,omitempty" xml:"fail_code,omitempty"`
	FailReason *string `json:"fail_reason,omitempty" xml:"fail_reason,omitempty"`
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// example:
	//
	// 10000
	RealTicketPrice *int64 `json:"real_ticket_price,omitempty" xml:"real_ticket_price,omitempty"`
	// example:
	//
	// 1A
	SeatNo *string `json:"seat_no,omitempty" xml:"seat_no,omitempty"`
	// example:
	//
	// 14
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	// example:
	//
	// null
	TicketEntrance *string `json:"ticket_entrance,omitempty" xml:"ticket_entrance,omitempty"`
	// example:
	//
	// 100
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 11
	TicketStatus *int32 `json:"ticket_status,omitempty" xml:"ticket_status,omitempty"`
	// example:
	//
	// 0
	TicketType *string `json:"ticket_type,omitempty" xml:"ticket_type,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetCoachNo(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.CoachNo = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetFailCode(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.FailCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetFailReason(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.FailReason = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetPassengerId(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.PassengerId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetRealTicketPrice(v int64) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.RealTicketPrice = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetSeatNo(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.SeatNo = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetSeatType(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.SeatType = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetTicketEntrance(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.TicketEntrance = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetTicketPrice(v int64) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.TicketPrice = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetTicketStatus(v int32) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.TicketStatus = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos) SetTicketType(v string) *TrainOrderDetailQueryResponseBodyModuleBookInfosBookTrainInfosBookTicketInfos {
	s.TicketType = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleChangeInfos struct {
	// example:
	//
	// 1234567890
	ChangeApplyId    *string                                                               `json:"change_apply_id,omitempty" xml:"change_apply_id,omitempty"`
	ChangeTrainInfos []*TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos `json:"change_train_infos,omitempty" xml:"change_train_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 2024-05-06 15:19:01
	LimitPayTime *string `json:"limit_pay_time,omitempty" xml:"limit_pay_time,omitempty"`
	// example:
	//
	// 12345
	OutChangeApplyId *string `json:"out_change_apply_id,omitempty" xml:"out_change_apply_id,omitempty"`
	// example:
	//
	// 1
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleChangeInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleChangeInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfos) SetChangeApplyId(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfos {
	s.ChangeApplyId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfos) SetChangeTrainInfos(v []*TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) *TrainOrderDetailQueryResponseBodyModuleChangeInfos {
	s.ChangeTrainInfos = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfos) SetLimitPayTime(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfos {
	s.LimitPayTime = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfos) SetOutChangeApplyId(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfos {
	s.OutChangeApplyId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfos) SetStatus(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfos {
	s.Status = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos struct {
	// example:
	//
	// BDC
	ArrStationCode *string `json:"arr_station_code,omitempty" xml:"arr_station_code,omitempty"`
	ArrStationName *string `json:"arr_station_name,omitempty" xml:"arr_station_name,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	ArriveTime        *string                                                                                `json:"arrive_time,omitempty" xml:"arrive_time,omitempty"`
	ChangeTicketInfos []*TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos `json:"change_ticket_infos,omitempty" xml:"change_ticket_infos,omitempty" type:"Repeated"`
	// example:
	//
	// BTC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	DepStationName *string `json:"dep_station_name,omitempty" xml:"dep_station_name,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	// example:
	//
	// D1234
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) SetArrStationCode(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos {
	s.ArrStationCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) SetArrStationName(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos {
	s.ArrStationName = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) SetArriveTime(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos {
	s.ArriveTime = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) SetChangeTicketInfos(v []*TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos {
	s.ChangeTicketInfos = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) SetDepStationCode(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos {
	s.DepStationCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) SetDepStationName(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos {
	s.DepStationName = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) SetDepTime(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos {
	s.DepTime = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos) SetTrainNo(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfos {
	s.TrainNo = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos struct {
	// example:
	//
	// 0
	ChangeCost *int64 `json:"change_cost,omitempty" xml:"change_cost,omitempty"`
	// example:
	//
	// 0
	ChangeDiff *int64 `json:"change_diff,omitempty" xml:"change_diff,omitempty"`
	// example:
	//
	// 0
	ChangeGapHandingFee *int64 `json:"change_gap_handing_fee,omitempty" xml:"change_gap_handing_fee,omitempty"`
	// example:
	//
	// 0
	ChangeMinTicketAmountHandingFee *int64 `json:"change_min_ticket_amount_handing_fee,omitempty" xml:"change_min_ticket_amount_handing_fee,omitempty"`
	// example:
	//
	// 04
	CoachNo *string `json:"coach_no,omitempty" xml:"coach_no,omitempty"`
	// example:
	//
	// 4000
	FailCode   *string `json:"fail_code,omitempty" xml:"fail_code,omitempty"`
	FailReason *string `json:"fail_reason,omitempty" xml:"fail_reason,omitempty"`
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// example:
	//
	// 10000
	RealTicketPrice *int64 `json:"real_ticket_price,omitempty" xml:"real_ticket_price,omitempty"`
	// example:
	//
	// 1A
	SeatNo *string `json:"seat_no,omitempty" xml:"seat_no,omitempty"`
	// example:
	//
	// 14
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	// example:
	//
	// null
	TicketEntrance *string `json:"ticket_entrance,omitempty" xml:"ticket_entrance,omitempty"`
	// example:
	//
	// 1234
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 11
	TicketStatus *string `json:"ticket_status,omitempty" xml:"ticket_status,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetChangeCost(v int64) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.ChangeCost = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetChangeDiff(v int64) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.ChangeDiff = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetChangeGapHandingFee(v int64) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.ChangeGapHandingFee = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetChangeMinTicketAmountHandingFee(v int64) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.ChangeMinTicketAmountHandingFee = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetCoachNo(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.CoachNo = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetFailCode(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.FailCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetFailReason(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.FailReason = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetPassengerId(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.PassengerId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetRealTicketPrice(v int64) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.RealTicketPrice = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetSeatNo(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.SeatNo = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetSeatType(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.SeatType = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetTicketEntrance(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.TicketEntrance = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetTicketPrice(v int64) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.TicketPrice = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos) SetTicketStatus(v string) *TrainOrderDetailQueryResponseBodyModuleChangeInfosChangeTrainInfosChangeTicketInfos {
	s.TicketStatus = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails struct {
	// example:
	//
	// 123456
	OfflineRefundId    *string                                                                          `json:"offline_refund_id,omitempty" xml:"offline_refund_id,omitempty"`
	OfflineRefundInfos []*TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetailsOfflineRefundInfos `json:"offline_refund_infos,omitempty" xml:"offline_refund_infos,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	OfflineRefundType *string `json:"offline_refund_type,omitempty" xml:"offline_refund_type,omitempty"`
	// example:
	//
	// 10000
	RefundTotalPrice *int64 `json:"refund_total_price,omitempty" xml:"refund_total_price,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails) SetOfflineRefundId(v string) *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails {
	s.OfflineRefundId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails) SetOfflineRefundInfos(v []*TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetailsOfflineRefundInfos) *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails {
	s.OfflineRefundInfos = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails) SetOfflineRefundType(v string) *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails {
	s.OfflineRefundType = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails) SetRefundTotalPrice(v int64) *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetails {
	s.RefundTotalPrice = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetailsOfflineRefundInfos struct {
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// example:
	//
	// 111
	RefundPrice *int64 `json:"refund_price,omitempty" xml:"refund_price,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetailsOfflineRefundInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetailsOfflineRefundInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetailsOfflineRefundInfos) SetPassengerId(v string) *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetailsOfflineRefundInfos {
	s.PassengerId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetailsOfflineRefundInfos) SetRefundPrice(v int64) *TrainOrderDetailQueryResponseBodyModuleOfflineRefundDetailsOfflineRefundInfos {
	s.RefundPrice = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModulePassengerInfoS struct {
	CostCenterInfo *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo `json:"cost_center_info,omitempty" xml:"cost_center_info,omitempty" type:"Struct"`
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	CountryCode *string `json:"country_code,omitempty" xml:"country_code,omitempty"`
	// example:
	//
	// 291487e553c5abde3b611aae283e2526f0d733ab55094aadc0b5ba587222a233c
	PassengerCertNo *string `json:"passenger_cert_no,omitempty" xml:"passenger_cert_no,omitempty"`
	// example:
	//
	// 170d9ac6f8807f9ec603c688f45f78a41
	PassengerCertType *string `json:"passenger_cert_type,omitempty" xml:"passenger_cert_type,omitempty"`
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// example:
	//
	// b6a6fc1bdf1ba60e25c2e132b612c8819
	PassengerMobile *string `json:"passenger_mobile,omitempty" xml:"passenger_mobile,omitempty"`
	// example:
	//
	// 949c9f34f677a0e5d249dfc94f5e62cc7
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// b6a6fc1bdf1ba60e25c2e132b612c8819
	ValidDateEnd *string `json:"valid_date_end,omitempty" xml:"valid_date_end,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModulePassengerInfoS) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModulePassengerInfoS) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoS) SetCostCenterInfo(v *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) *TrainOrderDetailQueryResponseBodyModulePassengerInfoS {
	s.CostCenterInfo = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoS) SetCountryCode(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoS {
	s.CountryCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoS) SetPassengerCertNo(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoS {
	s.PassengerCertNo = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoS) SetPassengerCertType(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoS {
	s.PassengerCertType = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoS) SetPassengerId(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoS {
	s.PassengerId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoS) SetPassengerMobile(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoS {
	s.PassengerMobile = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoS) SetPassengerName(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoS {
	s.PassengerName = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoS) SetValidDateEnd(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoS {
	s.ValidDateEnd = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo struct {
	CascadeDeptName *string `json:"cascade_dept_name,omitempty" xml:"cascade_dept_name,omitempty"`
	// example:
	//
	// 111111
	CostCenterId   *string `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// 123456
	CostCenterNo *string `json:"cost_center_no,omitempty" xml:"cost_center_no,omitempty"`
	// example:
	//
	// 582000002311
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// example:
	//
	// 11111
	InvoiceId    *string `json:"invoice_id,omitempty" xml:"invoice_id,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// example:
	//
	// 1234
	ProjectCode  *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetCascadeDeptName(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.CascadeDeptName = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetCostCenterId(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.CostCenterId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetCostCenterName(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.CostCenterName = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetCostCenterNo(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.CostCenterNo = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetDepartId(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.DepartId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetDepartName(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.DepartName = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetInvoiceId(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.InvoiceId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetInvoiceTitle(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.InvoiceTitle = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetPassengerId(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.PassengerId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetProjectCode(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.ProjectCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo) SetProjectTitle(v string) *TrainOrderDetailQueryResponseBodyModulePassengerInfoSCostCenterInfo {
	s.ProjectTitle = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleRefundInfos struct {
	// example:
	//
	// 1111
	FailCode *string `json:"fail_code,omitempty" xml:"fail_code,omitempty"`
	FailMsg  *string `json:"fail_msg,omitempty" xml:"fail_msg,omitempty"`
	// example:
	//
	// 123456778
	OutRefundId *string `json:"out_refund_id,omitempty" xml:"out_refund_id,omitempty"`
	// String
	//
	// example:
	//
	// 123456
	RefundId        *string                                                              `json:"refund_id,omitempty" xml:"refund_id,omitempty"`
	RefundTrainInfo []*TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo `json:"refund_train_info,omitempty" xml:"refund_train_info,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleRefundInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleRefundInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfos) SetFailCode(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfos {
	s.FailCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfos) SetFailMsg(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfos {
	s.FailMsg = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfos) SetOutRefundId(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfos {
	s.OutRefundId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfos) SetRefundId(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfos {
	s.RefundId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfos) SetRefundTrainInfo(v []*TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo) *TrainOrderDetailQueryResponseBodyModuleRefundInfos {
	s.RefundTrainInfo = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfos) SetStatus(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfos {
	s.Status = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo struct {
	ArrStationName *string `json:"arr_station_name,omitempty" xml:"arr_station_name,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// BTC
	DepStationCode *string `json:"dep_station_code,omitempty" xml:"dep_station_code,omitempty"`
	DepStationName *string `json:"dep_station_name,omitempty" xml:"dep_station_name,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime           *string                                                                               `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	RefundTicketInfos []*TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos `json:"refund_ticket_infos,omitempty" xml:"refund_ticket_infos,omitempty" type:"Repeated"`
	// example:
	//
	// K1234
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo) SetArrStationName(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo {
	s.ArrStationName = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo) SetArrTime(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo {
	s.ArrTime = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo) SetDepStationCode(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo {
	s.DepStationCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo) SetDepStationName(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo {
	s.DepStationName = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo) SetDepTime(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo {
	s.DepTime = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo) SetRefundTicketInfos(v []*TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo {
	s.RefundTicketInfos = v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo) SetTrainNo(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfo {
	s.TrainNo = &v
	return s
}

type TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos struct {
	// example:
	//
	// 123456
	PassengerId *string `json:"passenger_id,omitempty" xml:"passenger_id,omitempty"`
	// example:
	//
	// 0
	RefundCost *int64 `json:"refund_cost,omitempty" xml:"refund_cost,omitempty"`
	// example:
	//
	// 10000
	RefundPrice *int64 `json:"refund_price,omitempty" xml:"refund_price,omitempty"`
	// example:
	//
	// 10000
	TicketPrice *int64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
}

func (s TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos) SetPassengerId(v string) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos {
	s.PassengerId = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos) SetRefundCost(v int64) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos {
	s.RefundCost = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos) SetRefundPrice(v int64) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos {
	s.RefundPrice = &v
	return s
}

func (s *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos) SetTicketPrice(v int64) *TrainOrderDetailQueryResponseBodyModuleRefundInfosRefundTrainInfoRefundTicketInfos {
	s.TicketPrice = &v
	return s
}

type TrainOrderDetailQueryResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainOrderDetailQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainOrderDetailQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderDetailQueryResponse) GoString() string {
	return s.String()
}

func (s *TrainOrderDetailQueryResponse) SetHeaders(v map[string]*string) *TrainOrderDetailQueryResponse {
	s.Headers = v
	return s
}

func (s *TrainOrderDetailQueryResponse) SetStatusCode(v int32) *TrainOrderDetailQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainOrderDetailQueryResponse) SetBody(v *TrainOrderDetailQueryResponseBody) *TrainOrderDetailQueryResponse {
	s.Body = v
	return s
}

type TrainOrderListQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s TrainOrderListQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderListQueryHeaders) GoString() string {
	return s.String()
}

func (s *TrainOrderListQueryHeaders) SetCommonHeaders(v map[string]*string) *TrainOrderListQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainOrderListQueryHeaders) SetXAcsBtripSoCorpToken(v string) *TrainOrderListQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type TrainOrderListQueryRequest struct {
	// example:
	//
	// false
	AllApply *bool `json:"all_apply,omitempty" xml:"all_apply,omitempty"`
	// example:
	//
	// 11657
	ApplyId  *int64  `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	DepartId *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	// example:
	//
	// 2022-05-15 22:27:00
	EndTime *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 3
	Page *int32 `json:"page,omitempty" xml:"page,omitempty"`
	// example:
	//
	// 25
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 2022-05-15 22:27:00
	StartTime *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// CS-EDES9898
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// 2022-05-15 22:27:00
	UpdateEndTime *string `json:"update_end_time,omitempty" xml:"update_end_time,omitempty"`
	// example:
	//
	// 2022-05-15 22:27:00
	UpdateStartTime *string `json:"update_start_time,omitempty" xml:"update_start_time,omitempty"`
	UserId          *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s TrainOrderListQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderListQueryRequest) GoString() string {
	return s.String()
}

func (s *TrainOrderListQueryRequest) SetAllApply(v bool) *TrainOrderListQueryRequest {
	s.AllApply = &v
	return s
}

func (s *TrainOrderListQueryRequest) SetApplyId(v int64) *TrainOrderListQueryRequest {
	s.ApplyId = &v
	return s
}

func (s *TrainOrderListQueryRequest) SetDepartId(v string) *TrainOrderListQueryRequest {
	s.DepartId = &v
	return s
}

func (s *TrainOrderListQueryRequest) SetEndTime(v string) *TrainOrderListQueryRequest {
	s.EndTime = &v
	return s
}

func (s *TrainOrderListQueryRequest) SetPage(v int32) *TrainOrderListQueryRequest {
	s.Page = &v
	return s
}

func (s *TrainOrderListQueryRequest) SetPageSize(v int32) *TrainOrderListQueryRequest {
	s.PageSize = &v
	return s
}

func (s *TrainOrderListQueryRequest) SetStartTime(v string) *TrainOrderListQueryRequest {
	s.StartTime = &v
	return s
}

func (s *TrainOrderListQueryRequest) SetThirdpartApplyId(v string) *TrainOrderListQueryRequest {
	s.ThirdpartApplyId = &v
	return s
}

func (s *TrainOrderListQueryRequest) SetUpdateEndTime(v string) *TrainOrderListQueryRequest {
	s.UpdateEndTime = &v
	return s
}

func (s *TrainOrderListQueryRequest) SetUpdateStartTime(v string) *TrainOrderListQueryRequest {
	s.UpdateStartTime = &v
	return s
}

func (s *TrainOrderListQueryRequest) SetUserId(v string) *TrainOrderListQueryRequest {
	s.UserId = &v
	return s
}

type TrainOrderListQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code     *string                                  `json:"code,omitempty" xml:"code,omitempty"`
	Message  *string                                  `json:"message,omitempty" xml:"message,omitempty"`
	Module   []*TrainOrderListQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	PageInfo *TrainOrderListQueryResponseBodyPageInfo `json:"page_info,omitempty" xml:"page_info,omitempty" type:"Struct"`
	// example:
	//
	// F93C3EBD-17BE-5FE6-BF06-96A6F1AC8DC5
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainOrderListQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderListQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TrainOrderListQueryResponseBody) SetCode(v string) *TrainOrderListQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TrainOrderListQueryResponseBody) SetMessage(v string) *TrainOrderListQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TrainOrderListQueryResponseBody) SetModule(v []*TrainOrderListQueryResponseBodyModule) *TrainOrderListQueryResponseBody {
	s.Module = v
	return s
}

func (s *TrainOrderListQueryResponseBody) SetPageInfo(v *TrainOrderListQueryResponseBodyPageInfo) *TrainOrderListQueryResponseBody {
	s.PageInfo = v
	return s
}

func (s *TrainOrderListQueryResponseBody) SetRequestId(v string) *TrainOrderListQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainOrderListQueryResponseBody) SetSuccess(v bool) *TrainOrderListQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TrainOrderListQueryResponseBody) SetTraceId(v string) *TrainOrderListQueryResponseBody {
	s.TraceId = &v
	return s
}

type TrainOrderListQueryResponseBodyModule struct {
	// example:
	//
	// 11367
	ApplyId       *int64  `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ArrCity       *string `json:"arr_city,omitempty" xml:"arr_city,omitempty"`
	ArrCityAdCode *string `json:"arr_city_ad_code,omitempty" xml:"arr_city_ad_code,omitempty"`
	ArrStation    *string `json:"arr_station,omitempty" xml:"arr_station,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	ArrTime       *string                                          `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	BtripTitle    *string                                          `json:"btrip_title,omitempty" xml:"btrip_title,omitempty"`
	ContactName   *string                                          `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	CorpId        *string                                          `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName      *string                                          `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	CostCenter    *TrainOrderListQueryResponseBodyModuleCostCenter `json:"cost_center,omitempty" xml:"cost_center,omitempty" type:"Struct"`
	DepCity       *string                                          `json:"dep_city,omitempty" xml:"dep_city,omitempty"`
	DepCityAdCode *string                                          `json:"dep_city_ad_code,omitempty" xml:"dep_city_ad_code,omitempty"`
	DepStation    *string                                          `json:"dep_station,omitempty" xml:"dep_station,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	DepTime    *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtModified *string `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	// example:
	//
	// 1478652
	Id            *int64                                                `json:"id,omitempty" xml:"id,omitempty"`
	Invoice       *TrainOrderListQueryResponseBodyModuleInvoice         `json:"invoice,omitempty" xml:"invoice,omitempty" type:"Struct"`
	PriceInfoList []*TrainOrderListQueryResponseBodyModulePriceInfoList `json:"price_info_list,omitempty" xml:"price_info_list,omitempty" type:"Repeated"`
	// example:
	//
	// PCXIDF
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	// example:
	//
	// 12425
	ProjectId    *int64  `json:"project_id,omitempty" xml:"project_id,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	RiderName    *string `json:"rider_name,omitempty" xml:"rider_name,omitempty"`
	// example:
	//
	// 100
	RunTime  *string `json:"run_time,omitempty" xml:"run_time,omitempty"`
	SeatType *string `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	// example:
	//
	// 0
	Status              *int32  `json:"status,omitempty" xml:"status,omitempty"`
	ThirdPartBusinessId *string `json:"thirdPart_business_id,omitempty" xml:"thirdPart_business_id,omitempty"`
	// example:
	//
	// CS-SKPFDS
	ThirdPartProjectId *string `json:"third_part_project_id,omitempty" xml:"third_part_project_id,omitempty"`
	// example:
	//
	// CSIODJUSN
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// CS-IT89D
	ThirdpartItineraryId *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// 1
	TicketCount *int32 `json:"ticket_count,omitempty" xml:"ticket_count,omitempty"`
	// example:
	//
	// CS-663
	TicketNo12306 *string `json:"ticket_no12306,omitempty" xml:"ticket_no12306,omitempty"`
	// example:
	//
	// CS-663
	TrainNumber       *string                                                   `json:"train_number,omitempty" xml:"train_number,omitempty"`
	TrainType         *string                                                   `json:"train_type,omitempty" xml:"train_type,omitempty"`
	UserAffiliateList []*TrainOrderListQueryResponseBodyModuleUserAffiliateList `json:"user_affiliate_list,omitempty" xml:"user_affiliate_list,omitempty" type:"Repeated"`
	UserId            *string                                                   `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName          *string                                                   `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s TrainOrderListQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderListQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainOrderListQueryResponseBodyModule) SetApplyId(v int64) *TrainOrderListQueryResponseBodyModule {
	s.ApplyId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetArrCity(v string) *TrainOrderListQueryResponseBodyModule {
	s.ArrCity = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetArrCityAdCode(v string) *TrainOrderListQueryResponseBodyModule {
	s.ArrCityAdCode = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetArrStation(v string) *TrainOrderListQueryResponseBodyModule {
	s.ArrStation = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetArrTime(v string) *TrainOrderListQueryResponseBodyModule {
	s.ArrTime = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetBtripTitle(v string) *TrainOrderListQueryResponseBodyModule {
	s.BtripTitle = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetContactName(v string) *TrainOrderListQueryResponseBodyModule {
	s.ContactName = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetCorpId(v string) *TrainOrderListQueryResponseBodyModule {
	s.CorpId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetCorpName(v string) *TrainOrderListQueryResponseBodyModule {
	s.CorpName = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetCostCenter(v *TrainOrderListQueryResponseBodyModuleCostCenter) *TrainOrderListQueryResponseBodyModule {
	s.CostCenter = v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetDepCity(v string) *TrainOrderListQueryResponseBodyModule {
	s.DepCity = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetDepCityAdCode(v string) *TrainOrderListQueryResponseBodyModule {
	s.DepCityAdCode = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetDepStation(v string) *TrainOrderListQueryResponseBodyModule {
	s.DepStation = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetDepTime(v string) *TrainOrderListQueryResponseBodyModule {
	s.DepTime = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetDepartId(v string) *TrainOrderListQueryResponseBodyModule {
	s.DepartId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetDepartName(v string) *TrainOrderListQueryResponseBodyModule {
	s.DepartName = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetGmtCreate(v string) *TrainOrderListQueryResponseBodyModule {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetGmtModified(v string) *TrainOrderListQueryResponseBodyModule {
	s.GmtModified = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetId(v int64) *TrainOrderListQueryResponseBodyModule {
	s.Id = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetInvoice(v *TrainOrderListQueryResponseBodyModuleInvoice) *TrainOrderListQueryResponseBodyModule {
	s.Invoice = v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetPriceInfoList(v []*TrainOrderListQueryResponseBodyModulePriceInfoList) *TrainOrderListQueryResponseBodyModule {
	s.PriceInfoList = v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetProjectCode(v string) *TrainOrderListQueryResponseBodyModule {
	s.ProjectCode = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetProjectId(v int64) *TrainOrderListQueryResponseBodyModule {
	s.ProjectId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetProjectTitle(v string) *TrainOrderListQueryResponseBodyModule {
	s.ProjectTitle = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetRiderName(v string) *TrainOrderListQueryResponseBodyModule {
	s.RiderName = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetRunTime(v string) *TrainOrderListQueryResponseBodyModule {
	s.RunTime = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetSeatType(v string) *TrainOrderListQueryResponseBodyModule {
	s.SeatType = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetStatus(v int32) *TrainOrderListQueryResponseBodyModule {
	s.Status = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetThirdPartBusinessId(v string) *TrainOrderListQueryResponseBodyModule {
	s.ThirdPartBusinessId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetThirdPartProjectId(v string) *TrainOrderListQueryResponseBodyModule {
	s.ThirdPartProjectId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetThirdpartApplyId(v string) *TrainOrderListQueryResponseBodyModule {
	s.ThirdpartApplyId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetThirdpartItineraryId(v string) *TrainOrderListQueryResponseBodyModule {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetTicketCount(v int32) *TrainOrderListQueryResponseBodyModule {
	s.TicketCount = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetTicketNo12306(v string) *TrainOrderListQueryResponseBodyModule {
	s.TicketNo12306 = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetTrainNumber(v string) *TrainOrderListQueryResponseBodyModule {
	s.TrainNumber = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetTrainType(v string) *TrainOrderListQueryResponseBodyModule {
	s.TrainType = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetUserAffiliateList(v []*TrainOrderListQueryResponseBodyModuleUserAffiliateList) *TrainOrderListQueryResponseBodyModule {
	s.UserAffiliateList = v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetUserId(v string) *TrainOrderListQueryResponseBodyModule {
	s.UserId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModule) SetUserName(v string) *TrainOrderListQueryResponseBodyModule {
	s.UserName = &v
	return s
}

type TrainOrderListQueryResponseBodyModuleCostCenter struct {
	CorpId *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	// example:
	//
	// 11643
	Id   *int64  `json:"id,omitempty" xml:"id,omitempty"`
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
	// example:
	//
	// CS112234
	Number *string `json:"number,omitempty" xml:"number,omitempty"`
}

func (s TrainOrderListQueryResponseBodyModuleCostCenter) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderListQueryResponseBodyModuleCostCenter) GoString() string {
	return s.String()
}

func (s *TrainOrderListQueryResponseBodyModuleCostCenter) SetCorpId(v string) *TrainOrderListQueryResponseBodyModuleCostCenter {
	s.CorpId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModuleCostCenter) SetId(v int64) *TrainOrderListQueryResponseBodyModuleCostCenter {
	s.Id = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModuleCostCenter) SetName(v string) *TrainOrderListQueryResponseBodyModuleCostCenter {
	s.Name = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModuleCostCenter) SetNumber(v string) *TrainOrderListQueryResponseBodyModuleCostCenter {
	s.Number = &v
	return s
}

type TrainOrderListQueryResponseBodyModuleInvoice struct {
	// example:
	//
	// 11324
	Id    *int64  `json:"id,omitempty" xml:"id,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s TrainOrderListQueryResponseBodyModuleInvoice) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderListQueryResponseBodyModuleInvoice) GoString() string {
	return s.String()
}

func (s *TrainOrderListQueryResponseBodyModuleInvoice) SetId(v int64) *TrainOrderListQueryResponseBodyModuleInvoice {
	s.Id = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModuleInvoice) SetTitle(v string) *TrainOrderListQueryResponseBodyModuleInvoice {
	s.Title = &v
	return s
}

type TrainOrderListQueryResponseBodyModulePriceInfoList struct {
	// example:
	//
	// 1
	CategoryCode *int32 `json:"category_code,omitempty" xml:"category_code,omitempty"`
	// example:
	//
	// 1
	CategoryType *int32  `json:"category_type,omitempty" xml:"category_type,omitempty"`
	EndCity      *string `json:"end_city,omitempty" xml:"end_city,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	EndTime *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// CS-663
	OriginalTrainNo *string `json:"original_train_no,omitempty" xml:"original_train_no,omitempty"`
	PassengerName   *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 1
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 100
	Price     *float64 `json:"price,omitempty" xml:"price,omitempty"`
	SeatType  *string  `json:"seat_type,omitempty" xml:"seat_type,omitempty"`
	StartCity *string  `json:"start_city,omitempty" xml:"start_city,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	StartTime *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// cs1165734212
	TradeId *string `json:"trade_id,omitempty" xml:"trade_id,omitempty"`
	// example:
	//
	// Z1521
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s TrainOrderListQueryResponseBodyModulePriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderListQueryResponseBodyModulePriceInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetCategoryCode(v int32) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.CategoryCode = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetCategoryType(v int32) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.CategoryType = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetEndCity(v string) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.EndCity = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetEndTime(v string) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.EndTime = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetGmtCreate(v string) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetOriginalTrainNo(v string) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.OriginalTrainNo = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetPassengerName(v string) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.PassengerName = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetPayType(v int32) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.PayType = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetPrice(v float64) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.Price = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetSeatType(v string) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.SeatType = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetStartCity(v string) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.StartCity = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetStartTime(v string) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.StartTime = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetTradeId(v string) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.TradeId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetTrainNo(v string) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.TrainNo = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModulePriceInfoList) SetType(v int32) *TrainOrderListQueryResponseBodyModulePriceInfoList {
	s.Type = &v
	return s
}

type TrainOrderListQueryResponseBodyModuleUserAffiliateList struct {
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s TrainOrderListQueryResponseBodyModuleUserAffiliateList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderListQueryResponseBodyModuleUserAffiliateList) GoString() string {
	return s.String()
}

func (s *TrainOrderListQueryResponseBodyModuleUserAffiliateList) SetUserId(v string) *TrainOrderListQueryResponseBodyModuleUserAffiliateList {
	s.UserId = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyModuleUserAffiliateList) SetUserName(v string) *TrainOrderListQueryResponseBodyModuleUserAffiliateList {
	s.UserName = &v
	return s
}

type TrainOrderListQueryResponseBodyPageInfo struct {
	// example:
	//
	// 1
	Page *int32 `json:"page,omitempty" xml:"page,omitempty"`
	// example:
	//
	// 50
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 100
	TotalNumber *int32 `json:"total_number,omitempty" xml:"total_number,omitempty"`
}

func (s TrainOrderListQueryResponseBodyPageInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderListQueryResponseBodyPageInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderListQueryResponseBodyPageInfo) SetPage(v int32) *TrainOrderListQueryResponseBodyPageInfo {
	s.Page = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyPageInfo) SetPageSize(v int32) *TrainOrderListQueryResponseBodyPageInfo {
	s.PageSize = &v
	return s
}

func (s *TrainOrderListQueryResponseBodyPageInfo) SetTotalNumber(v int32) *TrainOrderListQueryResponseBodyPageInfo {
	s.TotalNumber = &v
	return s
}

type TrainOrderListQueryResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainOrderListQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainOrderListQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderListQueryResponse) GoString() string {
	return s.String()
}

func (s *TrainOrderListQueryResponse) SetHeaders(v map[string]*string) *TrainOrderListQueryResponse {
	s.Headers = v
	return s
}

func (s *TrainOrderListQueryResponse) SetStatusCode(v int32) *TrainOrderListQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainOrderListQueryResponse) SetBody(v *TrainOrderListQueryResponseBody) *TrainOrderListQueryResponse {
	s.Body = v
	return s
}

type TrainOrderPayHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainOrderPayHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderPayHeaders) GoString() string {
	return s.String()
}

func (s *TrainOrderPayHeaders) SetCommonHeaders(v map[string]*string) *TrainOrderPayHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainOrderPayHeaders) SetXAcsBtripCorpToken(v string) *TrainOrderPayHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainOrderPayRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 1379598062646
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 123456
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 100
	PayAmount *int64 `json:"pay_amount,omitempty" xml:"pay_amount,omitempty"`
}

func (s TrainOrderPayRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderPayRequest) GoString() string {
	return s.String()
}

func (s *TrainOrderPayRequest) SetOrderId(v string) *TrainOrderPayRequest {
	s.OrderId = &v
	return s
}

func (s *TrainOrderPayRequest) SetOutOrderId(v string) *TrainOrderPayRequest {
	s.OutOrderId = &v
	return s
}

func (s *TrainOrderPayRequest) SetPayAmount(v int64) *TrainOrderPayRequest {
	s.PayAmount = &v
	return s
}

type TrainOrderPayResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainOrderPayResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainOrderPayResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderPayResponseBody) GoString() string {
	return s.String()
}

func (s *TrainOrderPayResponseBody) SetCode(v string) *TrainOrderPayResponseBody {
	s.Code = &v
	return s
}

func (s *TrainOrderPayResponseBody) SetMessage(v string) *TrainOrderPayResponseBody {
	s.Message = &v
	return s
}

func (s *TrainOrderPayResponseBody) SetModule(v *TrainOrderPayResponseBodyModule) *TrainOrderPayResponseBody {
	s.Module = v
	return s
}

func (s *TrainOrderPayResponseBody) SetRequestId(v string) *TrainOrderPayResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainOrderPayResponseBody) SetSuccess(v bool) *TrainOrderPayResponseBody {
	s.Success = &v
	return s
}

func (s *TrainOrderPayResponseBody) SetTraceId(v string) *TrainOrderPayResponseBody {
	s.TraceId = &v
	return s
}

type TrainOrderPayResponseBodyModule struct {
	// example:
	//
	// 1017124195788186048
	OrderId *string `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 1017002195370467137
	OutOrderId *string `json:"out_order_id,omitempty" xml:"out_order_id,omitempty"`
	// example:
	//
	// true
	Status *bool `json:"status,omitempty" xml:"status,omitempty"`
}

func (s TrainOrderPayResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderPayResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainOrderPayResponseBodyModule) SetOrderId(v string) *TrainOrderPayResponseBodyModule {
	s.OrderId = &v
	return s
}

func (s *TrainOrderPayResponseBodyModule) SetOutOrderId(v string) *TrainOrderPayResponseBodyModule {
	s.OutOrderId = &v
	return s
}

func (s *TrainOrderPayResponseBodyModule) SetStatus(v bool) *TrainOrderPayResponseBodyModule {
	s.Status = &v
	return s
}

type TrainOrderPayResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainOrderPayResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainOrderPayResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderPayResponse) GoString() string {
	return s.String()
}

func (s *TrainOrderPayResponse) SetHeaders(v map[string]*string) *TrainOrderPayResponse {
	s.Headers = v
	return s
}

func (s *TrainOrderPayResponse) SetStatusCode(v int32) *TrainOrderPayResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainOrderPayResponse) SetBody(v *TrainOrderPayResponseBody) *TrainOrderPayResponse {
	s.Body = v
	return s
}

type TrainOrderQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s TrainOrderQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryHeaders) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryHeaders) SetCommonHeaders(v map[string]*string) *TrainOrderQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainOrderQueryHeaders) SetXAcsBtripSoCorpToken(v string) *TrainOrderQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type TrainOrderQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 2627694109810885616
	OrderId *int64  `json:"order_id,omitempty" xml:"order_id,omitempty"`
	UserId  *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s TrainOrderQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryRequest) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryRequest) SetOrderId(v int64) *TrainOrderQueryRequest {
	s.OrderId = &v
	return s
}

func (s *TrainOrderQueryRequest) SetUserId(v string) *TrainOrderQueryRequest {
	s.UserId = &v
	return s
}

type TrainOrderQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                            `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                            `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TrainOrderQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainOrderQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponseBody) SetCode(v string) *TrainOrderQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TrainOrderQueryResponseBody) SetMessage(v string) *TrainOrderQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TrainOrderQueryResponseBody) SetModule(v *TrainOrderQueryResponseBodyModule) *TrainOrderQueryResponseBody {
	s.Module = v
	return s
}

func (s *TrainOrderQueryResponseBody) SetRequestId(v string) *TrainOrderQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainOrderQueryResponseBody) SetSuccess(v bool) *TrainOrderQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TrainOrderQueryResponseBody) SetTraceId(v string) *TrainOrderQueryResponseBody {
	s.TraceId = &v
	return s
}

type TrainOrderQueryResponseBodyModule struct {
	ChangeTicketInfoList []*TrainOrderQueryResponseBodyModuleChangeTicketInfoList `json:"change_ticket_info_list,omitempty" xml:"change_ticket_info_list,omitempty" type:"Repeated"`
	InvoiceInfo          *TrainOrderQueryResponseBodyModuleInvoiceInfo            `json:"invoice_info,omitempty" xml:"invoice_info,omitempty" type:"Struct"`
	OrderBaseInfo        *TrainOrderQueryResponseBodyModuleOrderBaseInfo          `json:"order_base_info,omitempty" xml:"order_base_info,omitempty" type:"Struct"`
	PassengerInfoList    []*TrainOrderQueryResponseBodyModulePassengerInfoList    `json:"passenger_info_list,omitempty" xml:"passenger_info_list,omitempty" type:"Repeated"`
	PriceInfoList        []*TrainOrderQueryResponseBodyModulePriceInfoList        `json:"price_info_list,omitempty" xml:"price_info_list,omitempty" type:"Repeated"`
	RefundTicketInfoList []*TrainOrderQueryResponseBodyModuleRefundTicketInfoList `json:"refund_ticket_info_list,omitempty" xml:"refund_ticket_info_list,omitempty" type:"Repeated"`
	TicketInfoList       []*TrainOrderQueryResponseBodyModuleTicketInfoList       `json:"ticket_info_list,omitempty" xml:"ticket_info_list,omitempty" type:"Repeated"`
	TrainInfo            *TrainOrderQueryResponseBodyModuleTrainInfo              `json:"train_info,omitempty" xml:"train_info,omitempty" type:"Struct"`
}

func (s TrainOrderQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponseBodyModule) SetChangeTicketInfoList(v []*TrainOrderQueryResponseBodyModuleChangeTicketInfoList) *TrainOrderQueryResponseBodyModule {
	s.ChangeTicketInfoList = v
	return s
}

func (s *TrainOrderQueryResponseBodyModule) SetInvoiceInfo(v *TrainOrderQueryResponseBodyModuleInvoiceInfo) *TrainOrderQueryResponseBodyModule {
	s.InvoiceInfo = v
	return s
}

func (s *TrainOrderQueryResponseBodyModule) SetOrderBaseInfo(v *TrainOrderQueryResponseBodyModuleOrderBaseInfo) *TrainOrderQueryResponseBodyModule {
	s.OrderBaseInfo = v
	return s
}

func (s *TrainOrderQueryResponseBodyModule) SetPassengerInfoList(v []*TrainOrderQueryResponseBodyModulePassengerInfoList) *TrainOrderQueryResponseBodyModule {
	s.PassengerInfoList = v
	return s
}

func (s *TrainOrderQueryResponseBodyModule) SetPriceInfoList(v []*TrainOrderQueryResponseBodyModulePriceInfoList) *TrainOrderQueryResponseBodyModule {
	s.PriceInfoList = v
	return s
}

func (s *TrainOrderQueryResponseBodyModule) SetRefundTicketInfoList(v []*TrainOrderQueryResponseBodyModuleRefundTicketInfoList) *TrainOrderQueryResponseBodyModule {
	s.RefundTicketInfoList = v
	return s
}

func (s *TrainOrderQueryResponseBodyModule) SetTicketInfoList(v []*TrainOrderQueryResponseBodyModuleTicketInfoList) *TrainOrderQueryResponseBodyModule {
	s.TicketInfoList = v
	return s
}

func (s *TrainOrderQueryResponseBodyModule) SetTrainInfo(v *TrainOrderQueryResponseBodyModuleTrainInfo) *TrainOrderQueryResponseBodyModule {
	s.TrainInfo = v
	return s
}

type TrainOrderQueryResponseBodyModuleChangeTicketInfoList struct {
	// example:
	//
	// 03
	ChangeCoachNo *string `json:"change_coach_no,omitempty" xml:"change_coach_no,omitempty"`
	// example:
	//
	// 100
	ChangeGapFee *float64 `json:"change_gap_fee,omitempty" xml:"change_gap_fee,omitempty"`
	// example:
	//
	// 100
	ChangeHandlingFee *float64 `json:"change_handling_fee,omitempty" xml:"change_handling_fee,omitempty"`
	// example:
	//
	// 004C
	ChangeSeatNo       *string `json:"change_seat_no,omitempty" xml:"change_seat_no,omitempty"`
	ChangeSeatTypeName *string `json:"change_seat_type_name,omitempty" xml:"change_seat_type_name,omitempty"`
	// example:
	//
	// 100
	ChangeServiceFee *float64 `json:"change_service_fee,omitempty" xml:"change_service_fee,omitempty"`
	// example:
	//
	// D103
	ChangeTrainNo       *string `json:"change_train_no,omitempty" xml:"change_train_no,omitempty"`
	ChangeTrainTypeName *string `json:"change_train_type_name,omitempty" xml:"change_train_type_name,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	CheckInTime *string `json:"check_in_time,omitempty" xml:"check_in_time,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	CheckOutTime *string `json:"check_out_time,omitempty" xml:"check_out_time,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	EndTime         *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	FromStationName *string `json:"from_station_name,omitempty" xml:"from_station_name,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtModify *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// CS987JKDF
	OriginTicketNo *string `json:"origin_ticket_no,omitempty" xml:"origin_ticket_no,omitempty"`
	// example:
	//
	// m
	OutTicketStatus *string `json:"out_ticket_status,omitempty" xml:"out_ticket_status,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	StartTime *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// CS987JKDF
	TicketNo      *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	ToStationName *string `json:"to_station_name,omitempty" xml:"to_station_name,omitempty"`
}

func (s TrainOrderQueryResponseBodyModuleChangeTicketInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponseBodyModuleChangeTicketInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetChangeCoachNo(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.ChangeCoachNo = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetChangeGapFee(v float64) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.ChangeGapFee = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetChangeHandlingFee(v float64) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.ChangeHandlingFee = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetChangeSeatNo(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.ChangeSeatNo = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetChangeSeatTypeName(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.ChangeSeatTypeName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetChangeServiceFee(v float64) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.ChangeServiceFee = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetChangeTrainNo(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.ChangeTrainNo = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetChangeTrainTypeName(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.ChangeTrainTypeName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetCheckInTime(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.CheckInTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetCheckOutTime(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.CheckOutTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetEndTime(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.EndTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetFromStationName(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.FromStationName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetGmtCreate(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetGmtModify(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.GmtModify = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetOriginTicketNo(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.OriginTicketNo = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetOutTicketStatus(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.OutTicketStatus = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetStartTime(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.StartTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetTicketNo(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.TicketNo = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleChangeTicketInfoList) SetToStationName(v string) *TrainOrderQueryResponseBodyModuleChangeTicketInfoList {
	s.ToStationName = &v
	return s
}

type TrainOrderQueryResponseBodyModuleInvoiceInfo struct {
	// example:
	//
	// 11754
	Id    *int64  `json:"id,omitempty" xml:"id,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s TrainOrderQueryResponseBodyModuleInvoiceInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponseBodyModuleInvoiceInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponseBodyModuleInvoiceInfo) SetId(v int64) *TrainOrderQueryResponseBodyModuleInvoiceInfo {
	s.Id = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleInvoiceInfo) SetTitle(v string) *TrainOrderQueryResponseBodyModuleInvoiceInfo {
	s.Title = &v
	return s
}

type TrainOrderQueryResponseBodyModuleOrderBaseInfo struct {
	// example:
	//
	// 11657
	ApplyId     *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	BtripTitle  *string `json:"btrip_title,omitempty" xml:"btrip_title,omitempty"`
	ContactName *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	CorpId      *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName    *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	DepartId    *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName  *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// 火车票超标审批id
	//
	// example:
	//
	// 1422113021033961000
	ExceedApplyId *string `json:"exceed_apply_id,omitempty" xml:"exceed_apply_id,omitempty"`
	// 火车票超标审批三方id
	//
	// example:
	//
	// 2022113021030003600001715
	ExceedThirdPartApplyId *string `json:"exceed_third_part_apply_id,omitempty" xml:"exceed_third_part_apply_id,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtModify *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// kaxasevesguikxn123kixnghid
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	// example:
	//
	// 2627694109810885616
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 4
	OrderStatus *int32 `json:"order_status,omitempty" xml:"order_status,omitempty"`
	// example:
	//
	// CS-EDES9898
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	ThirdpartCorpId  *string `json:"thirdpart_corp_id,omitempty" xml:"thirdpart_corp_id,omitempty"`
	// example:
	//
	// kaxasevesguikxn123kixnghid
	ThirdpartItineraryId *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// 0
	TripType *int32  `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s TrainOrderQueryResponseBodyModuleOrderBaseInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponseBodyModuleOrderBaseInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetApplyId(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ApplyId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetBtripTitle(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.BtripTitle = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetContactName(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ContactName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetCorpId(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.CorpId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetCorpName(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.CorpName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetDepartId(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.DepartId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetDepartName(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.DepartName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetExceedApplyId(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ExceedApplyId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetExceedThirdPartApplyId(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ExceedThirdPartApplyId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetGmtCreate(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetGmtModify(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.GmtModify = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetItineraryId(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ItineraryId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetOrderId(v int64) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.OrderId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetOrderStatus(v int32) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.OrderStatus = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartApplyId(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartApplyId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartCorpId(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartCorpId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetThirdpartItineraryId(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetTripType(v int32) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.TripType = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleOrderBaseInfo) SetUserId(v string) *TrainOrderQueryResponseBodyModuleOrderBaseInfo {
	s.UserId = &v
	return s
}

type TrainOrderQueryResponseBodyModulePassengerInfoList struct {
	// example:
	//
	// 11564
	CostCenterId   *int64  `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// 01
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// CSP-01
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	// example:
	//
	// 22562
	ProjectId    *int64  `json:"project_id,omitempty" xml:"project_id,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// example:
	//
	// CS-22562
	ThirdpartProjectId *string `json:"thirdpart_project_id,omitempty" xml:"thirdpart_project_id,omitempty"`
	UserId             *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName           *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	// example:
	//
	// 0
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s TrainOrderQueryResponseBodyModulePassengerInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponseBodyModulePassengerInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponseBodyModulePassengerInfoList) SetCostCenterId(v int64) *TrainOrderQueryResponseBodyModulePassengerInfoList {
	s.CostCenterId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePassengerInfoList) SetCostCenterName(v string) *TrainOrderQueryResponseBodyModulePassengerInfoList {
	s.CostCenterName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePassengerInfoList) SetCostCenterNumber(v string) *TrainOrderQueryResponseBodyModulePassengerInfoList {
	s.CostCenterNumber = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePassengerInfoList) SetProjectCode(v string) *TrainOrderQueryResponseBodyModulePassengerInfoList {
	s.ProjectCode = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePassengerInfoList) SetProjectId(v int64) *TrainOrderQueryResponseBodyModulePassengerInfoList {
	s.ProjectId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePassengerInfoList) SetProjectTitle(v string) *TrainOrderQueryResponseBodyModulePassengerInfoList {
	s.ProjectTitle = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePassengerInfoList) SetThirdpartProjectId(v string) *TrainOrderQueryResponseBodyModulePassengerInfoList {
	s.ThirdpartProjectId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePassengerInfoList) SetUserId(v string) *TrainOrderQueryResponseBodyModulePassengerInfoList {
	s.UserId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePassengerInfoList) SetUserName(v string) *TrainOrderQueryResponseBodyModulePassengerInfoList {
	s.UserName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePassengerInfoList) SetUserType(v int32) *TrainOrderQueryResponseBodyModulePassengerInfoList {
	s.UserType = &v
	return s
}

type TrainOrderQueryResponseBodyModulePriceInfoList struct {
	// example:
	//
	// 1
	CategoryCode *int32 `json:"category_code,omitempty" xml:"category_code,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtCreate     *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 1
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 0
	Price *float64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 12312312001
	TradeId *string `json:"trade_id,omitempty" xml:"trade_id,omitempty"`
	// example:
	//
	// 1
	Type *int32 `json:"type,omitempty" xml:"type,omitempty"`
}

func (s TrainOrderQueryResponseBodyModulePriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponseBodyModulePriceInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponseBodyModulePriceInfoList) SetCategoryCode(v int32) *TrainOrderQueryResponseBodyModulePriceInfoList {
	s.CategoryCode = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePriceInfoList) SetGmtCreate(v string) *TrainOrderQueryResponseBodyModulePriceInfoList {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePriceInfoList) SetPassengerName(v string) *TrainOrderQueryResponseBodyModulePriceInfoList {
	s.PassengerName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePriceInfoList) SetPayType(v int32) *TrainOrderQueryResponseBodyModulePriceInfoList {
	s.PayType = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePriceInfoList) SetPrice(v float64) *TrainOrderQueryResponseBodyModulePriceInfoList {
	s.Price = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePriceInfoList) SetTradeId(v string) *TrainOrderQueryResponseBodyModulePriceInfoList {
	s.TradeId = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModulePriceInfoList) SetType(v int32) *TrainOrderQueryResponseBodyModulePriceInfoList {
	s.Type = &v
	return s
}

type TrainOrderQueryResponseBodyModuleRefundTicketInfoList struct {
	// example:
	//
	// 2022-05-15T22:27Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtModify *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// 10
	RefundFee *float64 `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	// example:
	//
	// 10
	RefundServiceFee *float64 `json:"refund_service_fee,omitempty" xml:"refund_service_fee,omitempty"`
	// example:
	//
	// CS987JKDF
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
}

func (s TrainOrderQueryResponseBodyModuleRefundTicketInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponseBodyModuleRefundTicketInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponseBodyModuleRefundTicketInfoList) SetGmtCreate(v string) *TrainOrderQueryResponseBodyModuleRefundTicketInfoList {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleRefundTicketInfoList) SetGmtModify(v string) *TrainOrderQueryResponseBodyModuleRefundTicketInfoList {
	s.GmtModify = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleRefundTicketInfoList) SetRefundFee(v float64) *TrainOrderQueryResponseBodyModuleRefundTicketInfoList {
	s.RefundFee = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleRefundTicketInfoList) SetRefundServiceFee(v float64) *TrainOrderQueryResponseBodyModuleRefundTicketInfoList {
	s.RefundServiceFee = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleRefundTicketInfoList) SetTicketNo(v string) *TrainOrderQueryResponseBodyModuleRefundTicketInfoList {
	s.TicketNo = &v
	return s
}

type TrainOrderQueryResponseBodyModuleTicketInfoList struct {
	// example:
	//
	// false
	Changed *bool `json:"changed,omitempty" xml:"changed,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	CheckInTime *string `json:"check_in_time,omitempty" xml:"check_in_time,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	CheckOutTime *string `json:"check_out_time,omitempty" xml:"check_out_time,omitempty"`
	// example:
	//
	// 01
	CoachNo *string `json:"coach_no,omitempty" xml:"coach_no,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	EndTime *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	GmtModify *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// m
	OutTicketStatus *string `json:"out_ticket_status,omitempty" xml:"out_ticket_status,omitempty"`
	// example:
	//
	// 1
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// A001
	SeatNo       *string `json:"seat_no,omitempty" xml:"seat_no,omitempty"`
	SeatTypeName *string `json:"seat_type_name,omitempty" xml:"seat_type_name,omitempty"`
	// example:
	//
	// 10
	ServiceFee *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	StartTime *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	// example:
	//
	// CS987JKDF
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// example:
	//
	// 100
	TicketPrice *float64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 1
	TicketStatus  *int32  `json:"ticket_status,omitempty" xml:"ticket_status,omitempty"`
	TrainTypeName *string `json:"train_type_name,omitempty" xml:"train_type_name,omitempty"`
	UserId        *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s TrainOrderQueryResponseBodyModuleTicketInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponseBodyModuleTicketInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetChanged(v bool) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.Changed = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetCheckInTime(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.CheckInTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetCheckOutTime(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.CheckOutTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetCoachNo(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.CoachNo = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetEndTime(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.EndTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetGmtCreate(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetGmtModify(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.GmtModify = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetOutTicketStatus(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.OutTicketStatus = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetPayType(v int32) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.PayType = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetSeatNo(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.SeatNo = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetSeatTypeName(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.SeatTypeName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetServiceFee(v float64) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.ServiceFee = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetStartTime(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.StartTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetTicketNo(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.TicketNo = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetTicketPrice(v float64) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.TicketPrice = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetTicketStatus(v int32) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.TicketStatus = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetTrainTypeName(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.TrainTypeName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTicketInfoList) SetUserId(v string) *TrainOrderQueryResponseBodyModuleTicketInfoList {
	s.UserId = &v
	return s
}

type TrainOrderQueryResponseBodyModuleTrainInfo struct {
	// example:
	//
	// 2022-05-15T22:27Z
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	DepTime         *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	FromCityAdCode  *string `json:"from_city_ad_code,omitempty" xml:"from_city_ad_code,omitempty"`
	FromStationName *string `json:"from_station_name,omitempty" xml:"from_station_name,omitempty"`
	// example:
	//
	// 100
	RunTime       *int64  `json:"run_time,omitempty" xml:"run_time,omitempty"`
	ToCityAdCode  *string `json:"to_city_ad_code,omitempty" xml:"to_city_ad_code,omitempty"`
	ToStationName *string `json:"to_station_name,omitempty" xml:"to_station_name,omitempty"`
	// example:
	//
	// CS-150
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainOrderQueryResponseBodyModuleTrainInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponseBodyModuleTrainInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponseBodyModuleTrainInfo) SetArrTime(v string) *TrainOrderQueryResponseBodyModuleTrainInfo {
	s.ArrTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTrainInfo) SetDepTime(v string) *TrainOrderQueryResponseBodyModuleTrainInfo {
	s.DepTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTrainInfo) SetFromCityAdCode(v string) *TrainOrderQueryResponseBodyModuleTrainInfo {
	s.FromCityAdCode = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTrainInfo) SetFromStationName(v string) *TrainOrderQueryResponseBodyModuleTrainInfo {
	s.FromStationName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTrainInfo) SetRunTime(v int64) *TrainOrderQueryResponseBodyModuleTrainInfo {
	s.RunTime = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTrainInfo) SetToCityAdCode(v string) *TrainOrderQueryResponseBodyModuleTrainInfo {
	s.ToCityAdCode = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTrainInfo) SetToStationName(v string) *TrainOrderQueryResponseBodyModuleTrainInfo {
	s.ToStationName = &v
	return s
}

func (s *TrainOrderQueryResponseBodyModuleTrainInfo) SetTrainNo(v string) *TrainOrderQueryResponseBodyModuleTrainInfo {
	s.TrainNo = &v
	return s
}

type TrainOrderQueryResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainOrderQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainOrderQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryResponse) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryResponse) SetHeaders(v map[string]*string) *TrainOrderQueryResponse {
	s.Headers = v
	return s
}

func (s *TrainOrderQueryResponse) SetStatusCode(v int32) *TrainOrderQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainOrderQueryResponse) SetBody(v *TrainOrderQueryResponseBody) *TrainOrderQueryResponse {
	s.Body = v
	return s
}

type TrainOrderQueryV2Headers struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// 112dcasca
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainOrderQueryV2Headers) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2Headers) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2Headers) SetCommonHeaders(v map[string]*string) *TrainOrderQueryV2Headers {
	s.CommonHeaders = v
	return s
}

func (s *TrainOrderQueryV2Headers) SetXAcsBtripCorpToken(v string) *TrainOrderQueryV2Headers {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainOrderQueryV2Request struct {
	// This parameter is required.
	//
	// example:
	//
	// 12342123212
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 123121112
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s TrainOrderQueryV2Request) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2Request) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2Request) SetOrderId(v int64) *TrainOrderQueryV2Request {
	s.OrderId = &v
	return s
}

func (s *TrainOrderQueryV2Request) SetUserId(v string) *TrainOrderQueryV2Request {
	s.UserId = &v
	return s
}

type TrainOrderQueryV2ResponseBody struct {
	// example:
	//
	// 0
	Code    *string                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TrainOrderQueryV2ResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// 1213ds1d
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// True
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 123412dcdsac sd
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainOrderQueryV2ResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBody) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBody) SetCode(v string) *TrainOrderQueryV2ResponseBody {
	s.Code = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBody) SetMessage(v string) *TrainOrderQueryV2ResponseBody {
	s.Message = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBody) SetModule(v *TrainOrderQueryV2ResponseBodyModule) *TrainOrderQueryV2ResponseBody {
	s.Module = v
	return s
}

func (s *TrainOrderQueryV2ResponseBody) SetRequestId(v string) *TrainOrderQueryV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBody) SetSuccess(v bool) *TrainOrderQueryV2ResponseBody {
	s.Success = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBody) SetTraceId(v string) *TrainOrderQueryV2ResponseBody {
	s.TraceId = &v
	return s
}

type TrainOrderQueryV2ResponseBodyModule struct {
	ChangeTicketInfoList []*TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList `json:"change_ticket_info_list,omitempty" xml:"change_ticket_info_list,omitempty" type:"Repeated"`
	InvoiceInfo          *TrainOrderQueryV2ResponseBodyModuleInvoiceInfo            `json:"invoice_info,omitempty" xml:"invoice_info,omitempty" type:"Struct"`
	OrderBaseInfo        *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo          `json:"order_base_info,omitempty" xml:"order_base_info,omitempty" type:"Struct"`
	PassengerInfoList    []*TrainOrderQueryV2ResponseBodyModulePassengerInfoList    `json:"passenger_info_list,omitempty" xml:"passenger_info_list,omitempty" type:"Repeated"`
	PriceInfoList        []*TrainOrderQueryV2ResponseBodyModulePriceInfoList        `json:"price_info_list,omitempty" xml:"price_info_list,omitempty" type:"Repeated"`
	RefundTicketInfoList []*TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList `json:"refund_ticket_info_list,omitempty" xml:"refund_ticket_info_list,omitempty" type:"Repeated"`
	TrainOrderInfo       *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfo         `json:"train_order_info,omitempty" xml:"train_order_info,omitempty" type:"Struct"`
}

func (s TrainOrderQueryV2ResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModule) SetChangeTicketInfoList(v []*TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) *TrainOrderQueryV2ResponseBodyModule {
	s.ChangeTicketInfoList = v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModule) SetInvoiceInfo(v *TrainOrderQueryV2ResponseBodyModuleInvoiceInfo) *TrainOrderQueryV2ResponseBodyModule {
	s.InvoiceInfo = v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModule) SetOrderBaseInfo(v *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) *TrainOrderQueryV2ResponseBodyModule {
	s.OrderBaseInfo = v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModule) SetPassengerInfoList(v []*TrainOrderQueryV2ResponseBodyModulePassengerInfoList) *TrainOrderQueryV2ResponseBodyModule {
	s.PassengerInfoList = v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModule) SetPriceInfoList(v []*TrainOrderQueryV2ResponseBodyModulePriceInfoList) *TrainOrderQueryV2ResponseBodyModule {
	s.PriceInfoList = v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModule) SetRefundTicketInfoList(v []*TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList) *TrainOrderQueryV2ResponseBodyModule {
	s.RefundTicketInfoList = v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModule) SetTrainOrderInfo(v *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfo) *TrainOrderQueryV2ResponseBodyModule {
	s.TrainOrderInfo = v
	return s
}

type TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList struct {
	// example:
	//
	// 03
	ChangeCoachNo *string `json:"change_coach_no,omitempty" xml:"change_coach_no,omitempty"`
	// example:
	//
	// 100
	ChangeGapFee *float64 `json:"change_gap_fee,omitempty" xml:"change_gap_fee,omitempty"`
	// example:
	//
	// 100
	ChangeHandlingFee *float64 `json:"change_handling_fee,omitempty" xml:"change_handling_fee,omitempty"`
	// example:
	//
	// 004C
	ChangeSeatNo       *string `json:"change_seat_no,omitempty" xml:"change_seat_no,omitempty"`
	ChangeSeatTypeName *string `json:"change_seat_type_name,omitempty" xml:"change_seat_type_name,omitempty"`
	// example:
	//
	// 100
	ChangeServiceFee *float64 `json:"change_service_fee,omitempty" xml:"change_service_fee,omitempty"`
	// example:
	//
	// D103
	ChangeTrainNo       *string `json:"change_train_no,omitempty" xml:"change_train_no,omitempty"`
	ChangeTrainTypeName *string `json:"change_train_type_name,omitempty" xml:"change_train_type_name,omitempty"`
	CheckInTime         *string `json:"check_in_time,omitempty" xml:"check_in_time,omitempty"`
	CheckOutTime        *string `json:"check_out_time,omitempty" xml:"check_out_time,omitempty"`
	EndTime             *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	FromCityName        *string `json:"from_city_name,omitempty" xml:"from_city_name,omitempty"`
	FromStationName     *string `json:"from_station_name,omitempty" xml:"from_station_name,omitempty"`
	GmtCreate           *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	GmtModify           *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// CS987JKDF
	OriginTicketNo *string `json:"origin_ticket_no,omitempty" xml:"origin_ticket_no,omitempty"`
	// example:
	//
	// m
	OutTicketStatus *string `json:"out_ticket_status,omitempty" xml:"out_ticket_status,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	// example:
	//
	// 2022-05-15T22:27Z
	StartTime      *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	TicketEntrance *string `json:"ticket_entrance,omitempty" xml:"ticket_entrance,omitempty"`
	// example:
	//
	// CS987JKDF
	TicketNo      *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	TicketStatus  *int32  `json:"ticket_status,omitempty" xml:"ticket_status,omitempty"`
	ToCityName    *string `json:"to_city_name,omitempty" xml:"to_city_name,omitempty"`
	ToStationName *string `json:"to_station_name,omitempty" xml:"to_station_name,omitempty"`
	// example:
	//
	// 0
	UseTicket *string `json:"use_ticket,omitempty" xml:"use_ticket,omitempty"`
	// example:
	//
	// 12312
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetChangeCoachNo(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.ChangeCoachNo = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetChangeGapFee(v float64) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.ChangeGapFee = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetChangeHandlingFee(v float64) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.ChangeHandlingFee = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetChangeSeatNo(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.ChangeSeatNo = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetChangeSeatTypeName(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.ChangeSeatTypeName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetChangeServiceFee(v float64) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.ChangeServiceFee = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetChangeTrainNo(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.ChangeTrainNo = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetChangeTrainTypeName(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.ChangeTrainTypeName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetCheckInTime(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.CheckInTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetCheckOutTime(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.CheckOutTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetEndTime(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.EndTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetFromCityName(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.FromCityName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetFromStationName(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.FromStationName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetGmtCreate(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetGmtModify(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.GmtModify = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetOriginTicketNo(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.OriginTicketNo = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetOutTicketStatus(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.OutTicketStatus = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetSegmentIndex(v int32) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.SegmentIndex = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetStartTime(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.StartTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetTicketEntrance(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.TicketEntrance = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetTicketNo(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.TicketNo = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetTicketStatus(v int32) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.TicketStatus = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetToCityName(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.ToCityName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetToStationName(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.ToStationName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetUseTicket(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.UseTicket = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList) SetUserId(v string) *TrainOrderQueryV2ResponseBodyModuleChangeTicketInfoList {
	s.UserId = &v
	return s
}

type TrainOrderQueryV2ResponseBodyModuleInvoiceInfo struct {
	// example:
	//
	// 3815504
	Id    *int64  `json:"id,omitempty" xml:"id,omitempty"`
	Title *string `json:"title,omitempty" xml:"title,omitempty"`
}

func (s TrainOrderQueryV2ResponseBodyModuleInvoiceInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModuleInvoiceInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModuleInvoiceInfo) SetId(v int64) *TrainOrderQueryV2ResponseBodyModuleInvoiceInfo {
	s.Id = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleInvoiceInfo) SetTitle(v string) *TrainOrderQueryV2ResponseBodyModuleInvoiceInfo {
	s.Title = &v
	return s
}

type TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo struct {
	// example:
	//
	// 1003784135
	ApplyId     *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	BtripTitle  *string `json:"btrip_title,omitempty" xml:"btrip_title,omitempty"`
	ContactName *string `json:"contact_name,omitempty" xml:"contact_name,omitempty"`
	// example:
	//
	// 12110002222
	ContactPhone *string `json:"contact_phone,omitempty" xml:"contact_phone,omitempty"`
	// example:
	//
	// btripsy4yd7v0gdpdntpp
	CorpId     *string `json:"corp_id,omitempty" xml:"corp_id,omitempty"`
	CorpName   *string `json:"corp_name,omitempty" xml:"corp_name,omitempty"`
	DepartId   *string `json:"depart_id,omitempty" xml:"depart_id,omitempty"`
	DepartName *string `json:"depart_name,omitempty" xml:"depart_name,omitempty"`
	// example:
	//
	// 1422113021033961000
	ExceedApplyId *string `json:"exceed_apply_id,omitempty" xml:"exceed_apply_id,omitempty"`
	// example:
	//
	// 1422113021033961000
	ExceedThirdpartApplyId *string `json:"exceed_thirdpart_apply_id,omitempty" xml:"exceed_thirdpart_apply_id,omitempty"`
	GmtCreate              *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	GmtModify              *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// 42942924
	ItineraryId *string `json:"itinerary_id,omitempty" xml:"itinerary_id,omitempty"`
	// example:
	//
	// 2849819724653209258
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// 4
	OrderStatus         *int32  `json:"order_status,omitempty" xml:"order_status,omitempty"`
	ThirdPartBusinessId *string `json:"thirdPart_business_id,omitempty" xml:"thirdPart_business_id,omitempty"`
	// example:
	//
	// 01-2023-01214
	ThirdpartApplyId *string `json:"thirdpart_apply_id,omitempty" xml:"thirdpart_apply_id,omitempty"`
	// example:
	//
	// DHDI2209141OEGHWRN
	ThirdpartDepartId *string `json:"thirdpart_depart_id,omitempty" xml:"thirdpart_depart_id,omitempty"`
	// example:
	//
	// CS-FLIGHT
	ThirdpartItineraryId *string `json:"thirdpart_itinerary_id,omitempty" xml:"thirdpart_itinerary_id,omitempty"`
	// example:
	//
	// 0
	TripType *int32 `json:"trip_type,omitempty" xml:"trip_type,omitempty"`
	// example:
	//
	// 1231212
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserNick *string `json:"user_nick,omitempty" xml:"user_nick,omitempty"`
}

func (s TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetApplyId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.ApplyId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetBtripTitle(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.BtripTitle = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetContactName(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.ContactName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetContactPhone(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.ContactPhone = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetCorpId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.CorpId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetCorpName(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.CorpName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetDepartId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.DepartId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetDepartName(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.DepartName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetExceedApplyId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.ExceedApplyId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetExceedThirdpartApplyId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.ExceedThirdpartApplyId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetGmtCreate(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetGmtModify(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.GmtModify = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetItineraryId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.ItineraryId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetOrderId(v int64) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.OrderId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetOrderStatus(v int32) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.OrderStatus = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetThirdPartBusinessId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.ThirdPartBusinessId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetThirdpartApplyId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.ThirdpartApplyId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetThirdpartDepartId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.ThirdpartDepartId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetThirdpartItineraryId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.ThirdpartItineraryId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetTripType(v int32) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.TripType = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetUserId(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.UserId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo) SetUserNick(v string) *TrainOrderQueryV2ResponseBodyModuleOrderBaseInfo {
	s.UserNick = &v
	return s
}

type TrainOrderQueryV2ResponseBodyModulePassengerInfoList struct {
	// example:
	//
	// 11564
	CostCenterId   *int64  `json:"cost_center_id,omitempty" xml:"cost_center_id,omitempty"`
	CostCenterName *string `json:"cost_center_name,omitempty" xml:"cost_center_name,omitempty"`
	// example:
	//
	// CS-3345
	CostCenterNumber *string `json:"cost_center_number,omitempty" xml:"cost_center_number,omitempty"`
	// example:
	//
	// CS-PROJECT
	ProjectCode *string `json:"project_code,omitempty" xml:"project_code,omitempty"`
	// example:
	//
	// 133576
	ProjectId    *int64  `json:"project_id,omitempty" xml:"project_id,omitempty"`
	ProjectTitle *string `json:"project_title,omitempty" xml:"project_title,omitempty"`
	// example:
	//
	// CS-KDISL
	ThirdpartCostCenterId *string `json:"thirdpart_cost_center_id,omitempty" xml:"thirdpart_cost_center_id,omitempty"`
	// example:
	//
	// CS-22562
	ThirdpartProjectId *string `json:"thirdpart_project_id,omitempty" xml:"thirdpart_project_id,omitempty"`
	// example:
	//
	// 1231231
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
	// example:
	//
	// 0
	UserType *int32 `json:"user_type,omitempty" xml:"user_type,omitempty"`
}

func (s TrainOrderQueryV2ResponseBodyModulePassengerInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModulePassengerInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetCostCenterId(v int64) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.CostCenterId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetCostCenterName(v string) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.CostCenterName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetCostCenterNumber(v string) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.CostCenterNumber = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetProjectCode(v string) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.ProjectCode = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetProjectId(v int64) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.ProjectId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetProjectTitle(v string) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.ProjectTitle = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetThirdpartCostCenterId(v string) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.ThirdpartCostCenterId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetThirdpartProjectId(v string) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.ThirdpartProjectId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetUserId(v string) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.UserId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetUserName(v string) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.UserName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePassengerInfoList) SetUserType(v int32) *TrainOrderQueryV2ResponseBodyModulePassengerInfoList {
	s.UserType = &v
	return s
}

type TrainOrderQueryV2ResponseBodyModulePriceInfoList struct {
	CategoryCode *int32 `json:"category_code,omitempty" xml:"category_code,omitempty"`
	// example:
	//
	// 1669344020
	GmtCreate     *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	PassengerName *string `json:"passenger_name,omitempty" xml:"passenger_name,omitempty"`
	// example:
	//
	// 4
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 176000
	Price *float64 `json:"price,omitempty" xml:"price,omitempty"`
	// example:
	//
	// 12345678910987654321
	TradeId *string `json:"trade_id,omitempty" xml:"trade_id,omitempty"`
	Type    *int32  `json:"type,omitempty" xml:"type,omitempty"`
}

func (s TrainOrderQueryV2ResponseBodyModulePriceInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModulePriceInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModulePriceInfoList) SetCategoryCode(v int32) *TrainOrderQueryV2ResponseBodyModulePriceInfoList {
	s.CategoryCode = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePriceInfoList) SetGmtCreate(v string) *TrainOrderQueryV2ResponseBodyModulePriceInfoList {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePriceInfoList) SetPassengerName(v string) *TrainOrderQueryV2ResponseBodyModulePriceInfoList {
	s.PassengerName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePriceInfoList) SetPayType(v int32) *TrainOrderQueryV2ResponseBodyModulePriceInfoList {
	s.PayType = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePriceInfoList) SetPrice(v float64) *TrainOrderQueryV2ResponseBodyModulePriceInfoList {
	s.Price = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePriceInfoList) SetTradeId(v string) *TrainOrderQueryV2ResponseBodyModulePriceInfoList {
	s.TradeId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModulePriceInfoList) SetType(v int32) *TrainOrderQueryV2ResponseBodyModulePriceInfoList {
	s.Type = &v
	return s
}

type TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList struct {
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	GmtModify *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// 10
	RefundFee *float64 `json:"refund_fee,omitempty" xml:"refund_fee,omitempty"`
	// example:
	//
	// 10
	RefundServiceFee *float64 `json:"refund_service_fee,omitempty" xml:"refund_service_fee,omitempty"`
	// example:
	//
	// CS987JKDF
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// example:
	//
	// 1231231
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList) SetGmtCreate(v string) *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList) SetGmtModify(v string) *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList {
	s.GmtModify = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList) SetRefundFee(v float64) *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList {
	s.RefundFee = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList) SetRefundServiceFee(v float64) *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList {
	s.RefundServiceFee = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList) SetTicketNo(v string) *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList {
	s.TicketNo = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList) SetUserId(v string) *TrainOrderQueryV2ResponseBodyModuleRefundTicketInfoList {
	s.UserId = &v
	return s
}

type TrainOrderQueryV2ResponseBodyModuleTrainOrderInfo struct {
	TrainInfoList     []*TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList   `json:"train_info_list,omitempty" xml:"train_info_list,omitempty" type:"Repeated"`
	TrainTransferInfo *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo `json:"train_transfer_info,omitempty" xml:"train_transfer_info,omitempty" type:"Struct"`
}

func (s TrainOrderQueryV2ResponseBodyModuleTrainOrderInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModuleTrainOrderInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfo) SetTrainInfoList(v []*TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfo {
	s.TrainInfoList = v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfo) SetTrainTransferInfo(v *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfo {
	s.TrainTransferInfo = v
	return s
}

type TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList struct {
	ArrTime         *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	DepTime         *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	FromCityAdCode  *string `json:"from_city_ad_code,omitempty" xml:"from_city_ad_code,omitempty"`
	FromCityName    *string `json:"from_city_name,omitempty" xml:"from_city_name,omitempty"`
	FromStationName *string `json:"from_station_name,omitempty" xml:"from_station_name,omitempty"`
	// itemId
	//
	// example:
	//
	// 12312
	ItemId *int64 `json:"item_id,omitempty" xml:"item_id,omitempty"`
	// example:
	//
	// 120
	RunTime       *int64  `json:"run_time,omitempty" xml:"run_time,omitempty"`
	ToCityAdCode  *string `json:"to_city_ad_code,omitempty" xml:"to_city_ad_code,omitempty"`
	ToCityName    *string `json:"to_city_name,omitempty" xml:"to_city_name,omitempty"`
	ToStationName *string `json:"to_station_name,omitempty" xml:"to_station_name,omitempty"`
	// example:
	//
	// D11
	TrainNo          *string                                                                           `json:"train_no,omitempty" xml:"train_no,omitempty"`
	TrainTicketInfos []*TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos `json:"train_ticket_infos,omitempty" xml:"train_ticket_infos,omitempty" type:"Repeated"`
}

func (s TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetArrTime(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.ArrTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetDepTime(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.DepTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetFromCityAdCode(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.FromCityAdCode = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetFromCityName(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.FromCityName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetFromStationName(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.FromStationName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetItemId(v int64) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.ItemId = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetRunTime(v int64) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.RunTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetToCityAdCode(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.ToCityAdCode = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetToCityName(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.ToCityName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetToStationName(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.ToStationName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetTrainNo(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.TrainNo = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList) SetTrainTicketInfos(v []*TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoList {
	s.TrainTicketInfos = v
	return s
}

type TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos struct {
	// example:
	//
	// false
	Changed      *bool   `json:"changed,omitempty" xml:"changed,omitempty"`
	CheckInTime  *string `json:"check_in_time,omitempty" xml:"check_in_time,omitempty"`
	CheckOutTime *string `json:"check_out_time,omitempty" xml:"check_out_time,omitempty"`
	// example:
	//
	// 01
	CoachNo   *string `json:"coach_no,omitempty" xml:"coach_no,omitempty"`
	EndTime   *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	GmtCreate *string `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	GmtModify *string `json:"gmt_modify,omitempty" xml:"gmt_modify,omitempty"`
	// example:
	//
	// 1
	OutTicketStatus *string `json:"out_ticket_status,omitempty" xml:"out_ticket_status,omitempty"`
	// example:
	//
	// 2
	PayType *int32 `json:"pay_type,omitempty" xml:"pay_type,omitempty"`
	// example:
	//
	// 02A
	SeatNo       *string `json:"seat_no,omitempty" xml:"seat_no,omitempty"`
	SeatTypeName *string `json:"seat_type_name,omitempty" xml:"seat_type_name,omitempty"`
	// example:
	//
	// 0
	SegmentIndex *int32 `json:"segment_index,omitempty" xml:"segment_index,omitempty"`
	// example:
	//
	// 100
	ServiceFee     *float64 `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	StartTime      *string  `json:"start_time,omitempty" xml:"start_time,omitempty"`
	TicketEntrance *string  `json:"ticket_entrance,omitempty" xml:"ticket_entrance,omitempty"`
	// example:
	//
	// ew123121
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// example:
	//
	// 400
	TicketPrice *float64 `json:"ticket_price,omitempty" xml:"ticket_price,omitempty"`
	// example:
	//
	// 1
	TicketStatus  *int32  `json:"ticket_status,omitempty" xml:"ticket_status,omitempty"`
	TrainTypeName *string `json:"train_type_name,omitempty" xml:"train_type_name,omitempty"`
	// example:
	//
	// 0
	UseTicket *string `json:"use_ticket,omitempty" xml:"use_ticket,omitempty"`
	// example:
	//
	// 231212
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetChanged(v bool) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.Changed = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetCheckInTime(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.CheckInTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetCheckOutTime(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.CheckOutTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetCoachNo(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.CoachNo = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetEndTime(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.EndTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetGmtCreate(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.GmtCreate = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetGmtModify(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.GmtModify = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetOutTicketStatus(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.OutTicketStatus = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetPayType(v int32) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.PayType = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetSeatNo(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.SeatNo = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetSeatTypeName(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.SeatTypeName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetSegmentIndex(v int32) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.SegmentIndex = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetServiceFee(v float64) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.ServiceFee = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetStartTime(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.StartTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetTicketEntrance(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.TicketEntrance = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetTicketNo(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.TicketNo = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetTicketPrice(v float64) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.TicketPrice = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetTicketStatus(v int32) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.TicketStatus = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetTrainTypeName(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.TrainTypeName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetUseTicket(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.UseTicket = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos) SetUserId(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainInfoListTrainTicketInfos {
	s.UserId = &v
	return s
}

type TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo struct {
	// example:
	//
	// 200
	CostTime *string `json:"cost_time,omitempty" xml:"cost_time,omitempty"`
	// example:
	//
	// 2022-11-15 00:00:00
	EndTime          *string `json:"end_time,omitempty" xml:"end_time,omitempty"`
	FromCityAdCode   *string `json:"from_city_ad_code,omitempty" xml:"from_city_ad_code,omitempty"`
	FromCityName     *string `json:"from_city_name,omitempty" xml:"from_city_name,omitempty"`
	FromStationName  *string `json:"from_station_name,omitempty" xml:"from_station_name,omitempty"`
	MiddleCity       *string `json:"middle_city,omitempty" xml:"middle_city,omitempty"`
	MiddleCityAdCode *string `json:"middle_city_ad_code,omitempty" xml:"middle_city_ad_code,omitempty"`
	// example:
	//
	// 2023-01-29 18:10:00
	MiddleDate    *string `json:"middle_date,omitempty" xml:"middle_date,omitempty"`
	MiddleStation *string `json:"middle_station,omitempty" xml:"middle_station,omitempty"`
	MiddleType    *string `json:"middle_type,omitempty" xml:"middle_type,omitempty"`
	// example:
	//
	// 2022-11-01 00:00:00
	StartTime     *string `json:"start_time,omitempty" xml:"start_time,omitempty"`
	ToCityAdCode  *string `json:"to_city_ad_code,omitempty" xml:"to_city_ad_code,omitempty"`
	ToCityName    *string `json:"to_city_name,omitempty" xml:"to_city_name,omitempty"`
	ToStationName *string `json:"to_station_name,omitempty" xml:"to_station_name,omitempty"`
	// example:
	//
	// 60
	WaitTime *string `json:"wait_time,omitempty" xml:"wait_time,omitempty"`
}

func (s TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetCostTime(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.CostTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetEndTime(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.EndTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetFromCityAdCode(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.FromCityAdCode = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetFromCityName(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.FromCityName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetFromStationName(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.FromStationName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetMiddleCity(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.MiddleCity = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetMiddleCityAdCode(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.MiddleCityAdCode = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetMiddleDate(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.MiddleDate = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetMiddleStation(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.MiddleStation = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetMiddleType(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.MiddleType = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetStartTime(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.StartTime = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetToCityAdCode(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.ToCityAdCode = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetToCityName(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.ToCityName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetToStationName(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.ToStationName = &v
	return s
}

func (s *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo) SetWaitTime(v string) *TrainOrderQueryV2ResponseBodyModuleTrainOrderInfoTrainTransferInfo {
	s.WaitTime = &v
	return s
}

type TrainOrderQueryV2Response struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainOrderQueryV2ResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainOrderQueryV2Response) String() string {
	return tea.Prettify(s)
}

func (s TrainOrderQueryV2Response) GoString() string {
	return s.String()
}

func (s *TrainOrderQueryV2Response) SetHeaders(v map[string]*string) *TrainOrderQueryV2Response {
	s.Headers = v
	return s
}

func (s *TrainOrderQueryV2Response) SetStatusCode(v int32) *TrainOrderQueryV2Response {
	s.StatusCode = &v
	return s
}

func (s *TrainOrderQueryV2Response) SetBody(v *TrainOrderQueryV2ResponseBody) *TrainOrderQueryV2Response {
	s.Body = v
	return s
}

type TrainStationSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s TrainStationSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainStationSearchHeaders) GoString() string {
	return s.String()
}

func (s *TrainStationSearchHeaders) SetCommonHeaders(v map[string]*string) *TrainStationSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainStationSearchHeaders) SetXAcsBtripSoCorpToken(v string) *TrainStationSearchHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type TrainStationSearchRequest struct {
	// This parameter is required.
	Keyword *string `json:"keyword,omitempty" xml:"keyword,omitempty"`
}

func (s TrainStationSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainStationSearchRequest) GoString() string {
	return s.String()
}

func (s *TrainStationSearchRequest) SetKeyword(v string) *TrainStationSearchRequest {
	s.Keyword = &v
	return s
}

type TrainStationSearchResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module *TrainStationSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// B72B39C8-32DE-558D-AD1C-D53F11F6ADFE
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// example:
	//
	// 210e847f16611516748613869de4f6
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainStationSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainStationSearchResponseBody) GoString() string {
	return s.String()
}

func (s *TrainStationSearchResponseBody) SetCode(v string) *TrainStationSearchResponseBody {
	s.Code = &v
	return s
}

func (s *TrainStationSearchResponseBody) SetMessage(v string) *TrainStationSearchResponseBody {
	s.Message = &v
	return s
}

func (s *TrainStationSearchResponseBody) SetModule(v *TrainStationSearchResponseBodyModule) *TrainStationSearchResponseBody {
	s.Module = v
	return s
}

func (s *TrainStationSearchResponseBody) SetRequestId(v string) *TrainStationSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainStationSearchResponseBody) SetSuccess(v bool) *TrainStationSearchResponseBody {
	s.Success = &v
	return s
}

func (s *TrainStationSearchResponseBody) SetTraceId(v string) *TrainStationSearchResponseBody {
	s.TraceId = &v
	return s
}

type TrainStationSearchResponseBodyModule struct {
	Cities []*TrainStationSearchResponseBodyModuleCities `json:"cities,omitempty" xml:"cities,omitempty" type:"Repeated"`
}

func (s TrainStationSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainStationSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainStationSearchResponseBodyModule) SetCities(v []*TrainStationSearchResponseBodyModuleCities) *TrainStationSearchResponseBodyModule {
	s.Cities = v
	return s
}

type TrainStationSearchResponseBodyModuleCities struct {
	// example:
	//
	// hz
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	Name *string `json:"name,omitempty" xml:"name,omitempty"`
}

func (s TrainStationSearchResponseBodyModuleCities) String() string {
	return tea.Prettify(s)
}

func (s TrainStationSearchResponseBodyModuleCities) GoString() string {
	return s.String()
}

func (s *TrainStationSearchResponseBodyModuleCities) SetCode(v string) *TrainStationSearchResponseBodyModuleCities {
	s.Code = &v
	return s
}

func (s *TrainStationSearchResponseBodyModuleCities) SetName(v string) *TrainStationSearchResponseBodyModuleCities {
	s.Name = &v
	return s
}

type TrainStationSearchResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainStationSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainStationSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainStationSearchResponse) GoString() string {
	return s.String()
}

func (s *TrainStationSearchResponse) SetHeaders(v map[string]*string) *TrainStationSearchResponse {
	s.Headers = v
	return s
}

func (s *TrainStationSearchResponse) SetStatusCode(v int32) *TrainStationSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainStationSearchResponse) SetBody(v *TrainStationSearchResponseBody) *TrainStationSearchResponse {
	s.Body = v
	return s
}

type TrainStopoverSearchHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TrainStopoverSearchHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainStopoverSearchHeaders) GoString() string {
	return s.String()
}

func (s *TrainStopoverSearchHeaders) SetCommonHeaders(v map[string]*string) *TrainStopoverSearchHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainStopoverSearchHeaders) SetXAcsBtripCorpToken(v string) *TrainStopoverSearchHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TrainStopoverSearchRequest struct {
	// This parameter is required.
	ArrStation *string `json:"arr_station,omitempty" xml:"arr_station,omitempty"`
	// This parameter is required.
	DepStation *string `json:"dep_station,omitempty" xml:"dep_station,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2024-05-08
	TrainDate *string `json:"train_date,omitempty" xml:"train_date,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// k2345
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainStopoverSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainStopoverSearchRequest) GoString() string {
	return s.String()
}

func (s *TrainStopoverSearchRequest) SetArrStation(v string) *TrainStopoverSearchRequest {
	s.ArrStation = &v
	return s
}

func (s *TrainStopoverSearchRequest) SetDepStation(v string) *TrainStopoverSearchRequest {
	s.DepStation = &v
	return s
}

func (s *TrainStopoverSearchRequest) SetTrainDate(v string) *TrainStopoverSearchRequest {
	s.TrainDate = &v
	return s
}

func (s *TrainStopoverSearchRequest) SetTrainNo(v string) *TrainStopoverSearchRequest {
	s.TrainNo = &v
	return s
}

type TrainStopoverSearchResponseBody struct {
	// example:
	//
	// 200
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module
	Module []*TrainStopoverSearchResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainStopoverSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainStopoverSearchResponseBody) GoString() string {
	return s.String()
}

func (s *TrainStopoverSearchResponseBody) SetCode(v string) *TrainStopoverSearchResponseBody {
	s.Code = &v
	return s
}

func (s *TrainStopoverSearchResponseBody) SetMessage(v string) *TrainStopoverSearchResponseBody {
	s.Message = &v
	return s
}

func (s *TrainStopoverSearchResponseBody) SetModule(v []*TrainStopoverSearchResponseBodyModule) *TrainStopoverSearchResponseBody {
	s.Module = v
	return s
}

func (s *TrainStopoverSearchResponseBody) SetRequestId(v string) *TrainStopoverSearchResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainStopoverSearchResponseBody) SetSuccess(v bool) *TrainStopoverSearchResponseBody {
	s.Success = &v
	return s
}

func (s *TrainStopoverSearchResponseBody) SetTraceId(v string) *TrainStopoverSearchResponseBody {
	s.TraceId = &v
	return s
}

type TrainStopoverSearchResponseBodyModule struct {
	// example:
	//
	// 2024-05-06 15:19:01
	ArrTime *string `json:"arr_time,omitempty" xml:"arr_time,omitempty"`
	// example:
	//
	// 2024-05-06 15:19:01
	DepTime     *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	StationName *string `json:"station_name,omitempty" xml:"station_name,omitempty"`
	// example:
	//
	// 0
	StationNo *string `json:"station_no,omitempty" xml:"station_no,omitempty"`
	// example:
	//
	// 0
	StationType *string `json:"station_type,omitempty" xml:"station_type,omitempty"`
	// example:
	//
	// 22
	StopOverTime *string `json:"stop_over_time,omitempty" xml:"stop_over_time,omitempty"`
}

func (s TrainStopoverSearchResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainStopoverSearchResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainStopoverSearchResponseBodyModule) SetArrTime(v string) *TrainStopoverSearchResponseBodyModule {
	s.ArrTime = &v
	return s
}

func (s *TrainStopoverSearchResponseBodyModule) SetDepTime(v string) *TrainStopoverSearchResponseBodyModule {
	s.DepTime = &v
	return s
}

func (s *TrainStopoverSearchResponseBodyModule) SetStationName(v string) *TrainStopoverSearchResponseBodyModule {
	s.StationName = &v
	return s
}

func (s *TrainStopoverSearchResponseBodyModule) SetStationNo(v string) *TrainStopoverSearchResponseBodyModule {
	s.StationNo = &v
	return s
}

func (s *TrainStopoverSearchResponseBodyModule) SetStationType(v string) *TrainStopoverSearchResponseBodyModule {
	s.StationType = &v
	return s
}

func (s *TrainStopoverSearchResponseBodyModule) SetStopOverTime(v string) *TrainStopoverSearchResponseBodyModule {
	s.StopOverTime = &v
	return s
}

type TrainStopoverSearchResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainStopoverSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainStopoverSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainStopoverSearchResponse) GoString() string {
	return s.String()
}

func (s *TrainStopoverSearchResponse) SetHeaders(v map[string]*string) *TrainStopoverSearchResponse {
	s.Headers = v
	return s
}

func (s *TrainStopoverSearchResponse) SetStatusCode(v int32) *TrainStopoverSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainStopoverSearchResponse) SetBody(v *TrainStopoverSearchResponseBody) *TrainStopoverSearchResponse {
	s.Body = v
	return s
}

type TrainTicketScanQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s TrainTicketScanQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TrainTicketScanQueryHeaders) GoString() string {
	return s.String()
}

func (s *TrainTicketScanQueryHeaders) SetCommonHeaders(v map[string]*string) *TrainTicketScanQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TrainTicketScanQueryHeaders) SetXAcsBtripSoCorpToken(v string) *TrainTicketScanQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type TrainTicketScanQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 2022-12-01
	BillDate *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
	// example:
	//
	// 123
	BillId *int64 `json:"bill_id,omitempty" xml:"bill_id,omitempty"`
	// example:
	//
	// 456
	InvoiceSubTaskId *int64 `json:"invoice_sub_task_id,omitempty" xml:"invoice_sub_task_id,omitempty"`
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// example:
	//
	// 20
	PageSize     *int32  `json:"page_size,omitempty" xml:"page_size,omitempty"`
	SerialNumber *string `json:"serial_number,omitempty" xml:"serial_number,omitempty"`
	TicketNo     *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
}

func (s TrainTicketScanQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TrainTicketScanQueryRequest) GoString() string {
	return s.String()
}

func (s *TrainTicketScanQueryRequest) SetBillDate(v string) *TrainTicketScanQueryRequest {
	s.BillDate = &v
	return s
}

func (s *TrainTicketScanQueryRequest) SetBillId(v int64) *TrainTicketScanQueryRequest {
	s.BillId = &v
	return s
}

func (s *TrainTicketScanQueryRequest) SetInvoiceSubTaskId(v int64) *TrainTicketScanQueryRequest {
	s.InvoiceSubTaskId = &v
	return s
}

func (s *TrainTicketScanQueryRequest) SetPageNo(v int32) *TrainTicketScanQueryRequest {
	s.PageNo = &v
	return s
}

func (s *TrainTicketScanQueryRequest) SetPageSize(v int32) *TrainTicketScanQueryRequest {
	s.PageSize = &v
	return s
}

func (s *TrainTicketScanQueryRequest) SetSerialNumber(v string) *TrainTicketScanQueryRequest {
	s.SerialNumber = &v
	return s
}

func (s *TrainTicketScanQueryRequest) SetTicketNo(v string) *TrainTicketScanQueryRequest {
	s.TicketNo = &v
	return s
}

type TrainTicketScanQueryResponseBody struct {
	// example:
	//
	// 200
	Code    *string                                 `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                 `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TrainTicketScanQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TrainTicketScanQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TrainTicketScanQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TrainTicketScanQueryResponseBody) SetCode(v string) *TrainTicketScanQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TrainTicketScanQueryResponseBody) SetMessage(v string) *TrainTicketScanQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TrainTicketScanQueryResponseBody) SetModule(v *TrainTicketScanQueryResponseBodyModule) *TrainTicketScanQueryResponseBody {
	s.Module = v
	return s
}

func (s *TrainTicketScanQueryResponseBody) SetRequestId(v string) *TrainTicketScanQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TrainTicketScanQueryResponseBody) SetSuccess(v bool) *TrainTicketScanQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TrainTicketScanQueryResponseBody) SetTraceId(v string) *TrainTicketScanQueryResponseBody {
	s.TraceId = &v
	return s
}

type TrainTicketScanQueryResponseBodyModule struct {
	Items []*TrainTicketScanQueryResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 2
	TotalPage *int32 `json:"total_page,omitempty" xml:"total_page,omitempty"`
	// example:
	//
	// 30
	TotalSize *int32 `json:"total_size,omitempty" xml:"total_size,omitempty"`
}

func (s TrainTicketScanQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TrainTicketScanQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TrainTicketScanQueryResponseBodyModule) SetItems(v []*TrainTicketScanQueryResponseBodyModuleItems) *TrainTicketScanQueryResponseBodyModule {
	s.Items = v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModule) SetPageNo(v int32) *TrainTicketScanQueryResponseBodyModule {
	s.PageNo = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModule) SetPageSize(v int32) *TrainTicketScanQueryResponseBodyModule {
	s.PageSize = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModule) SetTotalPage(v int32) *TrainTicketScanQueryResponseBodyModule {
	s.TotalPage = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModule) SetTotalSize(v int32) *TrainTicketScanQueryResponseBodyModule {
	s.TotalSize = &v
	return s
}

type TrainTicketScanQueryResponseBodyModuleItems struct {
	ApplyId    *string `json:"apply_id,omitempty" xml:"apply_id,omitempty"`
	ArrStation *string `json:"arr_station,omitempty" xml:"arr_station,omitempty"`
	// example:
	//
	// 2022-12-01
	BillDate   *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
	CoachName  *string `json:"coach_name,omitempty" xml:"coach_name,omitempty"`
	CostCenter *string `json:"cost_center,omitempty" xml:"cost_center,omitempty"`
	DepStation *string `json:"dep_station,omitempty" xml:"dep_station,omitempty"`
	// example:
	//
	// 2023-01-12 10:00:00
	DepTime    *string `json:"dep_time,omitempty" xml:"dep_time,omitempty"`
	Department *string `json:"department,omitempty" xml:"department,omitempty"`
	// example:
	//
	// 71
	Id           *string `json:"id,omitempty" xml:"id,omitempty"`
	InvoiceTitle *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	// example:
	//
	// 3137168772101111000
	OrderId *int64 `json:"order_id,omitempty" xml:"order_id,omitempty"`
	// example:
	//
	// https://www.testurl.com
	OssUrl    *string `json:"oss_url,omitempty" xml:"oss_url,omitempty"`
	Passenger *string `json:"passenger,omitempty" xml:"passenger,omitempty"`
	// example:
	//
	// 100
	Price   *string `json:"price,omitempty" xml:"price,omitempty"`
	Project *string `json:"project,omitempty" xml:"project,omitempty"`
	Seat    *string `json:"seat,omitempty" xml:"seat,omitempty"`
	SeatNo  *string `json:"seat_no,omitempty" xml:"seat_no,omitempty"`
	// example:
	//
	// 30671211200127U123456
	SerialNumber *string `json:"serial_number,omitempty" xml:"serial_number,omitempty"`
	// example:
	//
	// 8.26
	TaxAmount *string `json:"tax_amount,omitempty" xml:"tax_amount,omitempty"`
	// example:
	//
	// 9%
	TaxRate *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	// 取票号
	//
	// example:
	//
	// 784-1111111111
	TicketNo *string `json:"ticket_no,omitempty" xml:"ticket_no,omitempty"`
	// 车次
	//
	// example:
	//
	// G99
	TrainNo *string `json:"train_no,omitempty" xml:"train_no,omitempty"`
}

func (s TrainTicketScanQueryResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s TrainTicketScanQueryResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetApplyId(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.ApplyId = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetArrStation(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.ArrStation = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetBillDate(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.BillDate = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetCoachName(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.CoachName = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetCostCenter(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.CostCenter = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetDepStation(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.DepStation = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetDepTime(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.DepTime = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetDepartment(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.Department = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetId(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.Id = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetInvoiceTitle(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.InvoiceTitle = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetOrderId(v int64) *TrainTicketScanQueryResponseBodyModuleItems {
	s.OrderId = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetOssUrl(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.OssUrl = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetPassenger(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.Passenger = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetPrice(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.Price = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetProject(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.Project = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetSeat(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.Seat = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetSeatNo(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.SeatNo = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetSerialNumber(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.SerialNumber = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetTaxAmount(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.TaxAmount = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetTaxRate(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.TaxRate = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetTicketNo(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.TicketNo = &v
	return s
}

func (s *TrainTicketScanQueryResponseBodyModuleItems) SetTrainNo(v string) *TrainTicketScanQueryResponseBodyModuleItems {
	s.TrainNo = &v
	return s
}

type TrainTicketScanQueryResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TrainTicketScanQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TrainTicketScanQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TrainTicketScanQueryResponse) GoString() string {
	return s.String()
}

func (s *TrainTicketScanQueryResponse) SetHeaders(v map[string]*string) *TrainTicketScanQueryResponse {
	s.Headers = v
	return s
}

func (s *TrainTicketScanQueryResponse) SetStatusCode(v int32) *TrainTicketScanQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TrainTicketScanQueryResponse) SetBody(v *TrainTicketScanQueryResponseBody) *TrainTicketScanQueryResponse {
	s.Body = v
	return s
}

type TravelStandardListQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TravelStandardListQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardListQueryHeaders) GoString() string {
	return s.String()
}

func (s *TravelStandardListQueryHeaders) SetCommonHeaders(v map[string]*string) *TravelStandardListQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TravelStandardListQueryHeaders) SetXAcsBtripCorpToken(v string) *TravelStandardListQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TravelStandardListQueryRequest struct {
	// example:
	//
	// false
	FromGroup *bool `json:"from_group,omitempty" xml:"from_group,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 10
	PageSize *int32  `json:"page_size,omitempty" xml:"page_size,omitempty"`
	RuleName *string `json:"rule_name,omitempty" xml:"rule_name,omitempty"`
}

func (s TravelStandardListQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardListQueryRequest) GoString() string {
	return s.String()
}

func (s *TravelStandardListQueryRequest) SetFromGroup(v bool) *TravelStandardListQueryRequest {
	s.FromGroup = &v
	return s
}

func (s *TravelStandardListQueryRequest) SetPageNo(v int32) *TravelStandardListQueryRequest {
	s.PageNo = &v
	return s
}

func (s *TravelStandardListQueryRequest) SetPageSize(v int32) *TravelStandardListQueryRequest {
	s.PageSize = &v
	return s
}

func (s *TravelStandardListQueryRequest) SetRuleName(v string) *TravelStandardListQueryRequest {
	s.RuleName = &v
	return s
}

type TravelStandardListQueryResponseBody struct {
	// example:
	//
	// 0
	Code    *int32                                     `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                    `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TravelStandardListQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 05F9C201-1B53-5905-94AB-0D7444D8466A
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041aa317070996148671005d0a0b
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TravelStandardListQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardListQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TravelStandardListQueryResponseBody) SetCode(v int32) *TravelStandardListQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TravelStandardListQueryResponseBody) SetMessage(v string) *TravelStandardListQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TravelStandardListQueryResponseBody) SetModule(v *TravelStandardListQueryResponseBodyModule) *TravelStandardListQueryResponseBody {
	s.Module = v
	return s
}

func (s *TravelStandardListQueryResponseBody) SetRequestId(v string) *TravelStandardListQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TravelStandardListQueryResponseBody) SetSuccess(v bool) *TravelStandardListQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TravelStandardListQueryResponseBody) SetTraceId(v string) *TravelStandardListQueryResponseBody {
	s.TraceId = &v
	return s
}

type TravelStandardListQueryResponseBodyModule struct {
	Items []*TravelStandardListQueryResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
	// example:
	//
	// 30
	TotalSize *int32 `json:"total_size,omitempty" xml:"total_size,omitempty"`
}

func (s TravelStandardListQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardListQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TravelStandardListQueryResponseBodyModule) SetItems(v []*TravelStandardListQueryResponseBodyModuleItems) *TravelStandardListQueryResponseBodyModule {
	s.Items = v
	return s
}

func (s *TravelStandardListQueryResponseBodyModule) SetTotalSize(v int32) *TravelStandardListQueryResponseBodyModule {
	s.TotalSize = &v
	return s
}

type TravelStandardListQueryResponseBodyModuleItems struct {
	MainReserveRule *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule   `json:"main_reserve_rule,omitempty" xml:"main_reserve_rule,omitempty" type:"Struct"`
	ReserveRuleDesc []*TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc `json:"reserve_rule_desc,omitempty" xml:"reserve_rule_desc,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	Scope *int32 `json:"scope,omitempty" xml:"scope,omitempty"`
}

func (s TravelStandardListQueryResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardListQueryResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *TravelStandardListQueryResponseBodyModuleItems) SetMainReserveRule(v *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule) *TravelStandardListQueryResponseBodyModuleItems {
	s.MainReserveRule = v
	return s
}

func (s *TravelStandardListQueryResponseBodyModuleItems) SetReserveRuleDesc(v []*TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc) *TravelStandardListQueryResponseBodyModuleItems {
	s.ReserveRuleDesc = v
	return s
}

func (s *TravelStandardListQueryResponseBodyModuleItems) SetScope(v int32) *TravelStandardListQueryResponseBodyModuleItems {
	s.Scope = &v
	return s
}

type TravelStandardListQueryResponseBodyModuleItemsMainReserveRule struct {
	OpenServiceTypeList []*string `json:"open_service_type_list,omitempty" xml:"open_service_type_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2006516571
	RuleCode *int64  `json:"rule_code,omitempty" xml:"rule_code,omitempty"`
	RuleDesc *string `json:"rule_desc,omitempty" xml:"rule_desc,omitempty"`
	// example:
	//
	// 6516571
	RuleId   *int64  `json:"rule_id,omitempty" xml:"rule_id,omitempty"`
	RuleName *string `json:"rule_name,omitempty" xml:"rule_name,omitempty"`
}

func (s TravelStandardListQueryResponseBodyModuleItemsMainReserveRule) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardListQueryResponseBodyModuleItemsMainReserveRule) GoString() string {
	return s.String()
}

func (s *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule) SetOpenServiceTypeList(v []*string) *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule {
	s.OpenServiceTypeList = v
	return s
}

func (s *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule) SetRuleCode(v int64) *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule {
	s.RuleCode = &v
	return s
}

func (s *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule) SetRuleDesc(v string) *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule {
	s.RuleDesc = &v
	return s
}

func (s *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule) SetRuleId(v int64) *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule {
	s.RuleId = &v
	return s
}

func (s *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule) SetRuleName(v string) *TravelStandardListQueryResponseBodyModuleItemsMainReserveRule {
	s.RuleName = &v
	return s
}

type TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc struct {
	DataList []*TravelStandardListQueryResponseBodyModuleItemsReserveRuleDescDataList `json:"data_list,omitempty" xml:"data_list,omitempty" type:"Repeated"`
	Title    *string                                                                  `json:"title,omitempty" xml:"title,omitempty"`
	// example:
	//
	// flight
	Type *string `json:"type,omitempty" xml:"type,omitempty"`
}

func (s TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc) GoString() string {
	return s.String()
}

func (s *TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc) SetDataList(v []*TravelStandardListQueryResponseBodyModuleItemsReserveRuleDescDataList) *TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc {
	s.DataList = v
	return s
}

func (s *TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc) SetTitle(v string) *TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc {
	s.Title = &v
	return s
}

func (s *TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc) SetType(v string) *TravelStandardListQueryResponseBodyModuleItemsReserveRuleDesc {
	s.Type = &v
	return s
}

type TravelStandardListQueryResponseBodyModuleItemsReserveRuleDescDataList struct {
	Key   *string `json:"key,omitempty" xml:"key,omitempty"`
	Value *string `json:"value,omitempty" xml:"value,omitempty"`
}

func (s TravelStandardListQueryResponseBodyModuleItemsReserveRuleDescDataList) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardListQueryResponseBodyModuleItemsReserveRuleDescDataList) GoString() string {
	return s.String()
}

func (s *TravelStandardListQueryResponseBodyModuleItemsReserveRuleDescDataList) SetKey(v string) *TravelStandardListQueryResponseBodyModuleItemsReserveRuleDescDataList {
	s.Key = &v
	return s
}

func (s *TravelStandardListQueryResponseBodyModuleItemsReserveRuleDescDataList) SetValue(v string) *TravelStandardListQueryResponseBodyModuleItemsReserveRuleDescDataList {
	s.Value = &v
	return s
}

type TravelStandardListQueryResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TravelStandardListQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TravelStandardListQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardListQueryResponse) GoString() string {
	return s.String()
}

func (s *TravelStandardListQueryResponse) SetHeaders(v map[string]*string) *TravelStandardListQueryResponse {
	s.Headers = v
	return s
}

func (s *TravelStandardListQueryResponse) SetStatusCode(v int32) *TravelStandardListQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TravelStandardListQueryResponse) SetBody(v *TravelStandardListQueryResponseBody) *TravelStandardListQueryResponse {
	s.Body = v
	return s
}

type TravelStandardQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TravelStandardQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardQueryHeaders) GoString() string {
	return s.String()
}

func (s *TravelStandardQueryHeaders) SetCommonHeaders(v map[string]*string) *TravelStandardQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TravelStandardQueryHeaders) SetXAcsBtripCorpToken(v string) *TravelStandardQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TravelStandardQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// false
	FromGroup *bool `json:"from_group,omitempty" xml:"from_group,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2006523763
	RuleCode *int64 `json:"rule_code,omitempty" xml:"rule_code,omitempty"`
	// This parameter is required.
	ServiceTypeList []*string `json:"service_type_list,omitempty" xml:"service_type_list,omitempty" type:"Repeated"`
}

func (s TravelStandardQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardQueryRequest) GoString() string {
	return s.String()
}

func (s *TravelStandardQueryRequest) SetFromGroup(v bool) *TravelStandardQueryRequest {
	s.FromGroup = &v
	return s
}

func (s *TravelStandardQueryRequest) SetRuleCode(v int64) *TravelStandardQueryRequest {
	s.RuleCode = &v
	return s
}

func (s *TravelStandardQueryRequest) SetServiceTypeList(v []*string) *TravelStandardQueryRequest {
	s.ServiceTypeList = v
	return s
}

type TravelStandardQueryShrinkRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// false
	FromGroup *bool `json:"from_group,omitempty" xml:"from_group,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2006523763
	RuleCode *int64 `json:"rule_code,omitempty" xml:"rule_code,omitempty"`
	// This parameter is required.
	ServiceTypeListShrink *string `json:"service_type_list,omitempty" xml:"service_type_list,omitempty"`
}

func (s TravelStandardQueryShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardQueryShrinkRequest) GoString() string {
	return s.String()
}

func (s *TravelStandardQueryShrinkRequest) SetFromGroup(v bool) *TravelStandardQueryShrinkRequest {
	s.FromGroup = &v
	return s
}

func (s *TravelStandardQueryShrinkRequest) SetRuleCode(v int64) *TravelStandardQueryShrinkRequest {
	s.RuleCode = &v
	return s
}

func (s *TravelStandardQueryShrinkRequest) SetServiceTypeListShrink(v string) *TravelStandardQueryShrinkRequest {
	s.ServiceTypeListShrink = &v
	return s
}

type TravelStandardQueryResponseBody struct {
	// example:
	//
	// 0
	Code    *string                                `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                `json:"message,omitempty" xml:"message,omitempty"`
	Module  *TravelStandardQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210bcc3a16583004579056128d33d7
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TravelStandardQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TravelStandardQueryResponseBody) SetCode(v string) *TravelStandardQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TravelStandardQueryResponseBody) SetMessage(v string) *TravelStandardQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TravelStandardQueryResponseBody) SetModule(v *TravelStandardQueryResponseBodyModule) *TravelStandardQueryResponseBody {
	s.Module = v
	return s
}

func (s *TravelStandardQueryResponseBody) SetRequestId(v string) *TravelStandardQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TravelStandardQueryResponseBody) SetSuccess(v bool) *TravelStandardQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TravelStandardQueryResponseBody) SetTraceId(v string) *TravelStandardQueryResponseBody {
	s.TraceId = &v
	return s
}

type TravelStandardQueryResponseBodyModule struct {
	ActivatedServiceTypeList []*string                                         `json:"activated_service_type_list,omitempty" xml:"activated_service_type_list,omitempty" type:"Repeated"`
	ReserveRule              *TravelStandardQueryResponseBodyModuleReserveRule `json:"reserve_rule,omitempty" xml:"reserve_rule,omitempty" type:"Struct"`
}

func (s TravelStandardQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TravelStandardQueryResponseBodyModule) SetActivatedServiceTypeList(v []*string) *TravelStandardQueryResponseBodyModule {
	s.ActivatedServiceTypeList = v
	return s
}

func (s *TravelStandardQueryResponseBodyModule) SetReserveRule(v *TravelStandardQueryResponseBodyModuleReserveRule) *TravelStandardQueryResponseBodyModule {
	s.ReserveRule = v
	return s
}

type TravelStandardQueryResponseBodyModuleReserveRule struct {
	MainReserveRule  *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule    `json:"main_reserve_rule,omitempty" xml:"main_reserve_rule,omitempty" type:"Struct"`
	ModuleConfigList []*TravelStandardQueryResponseBodyModuleReserveRuleModuleConfigList `json:"module_config_list,omitempty" xml:"module_config_list,omitempty" type:"Repeated"`
}

func (s TravelStandardQueryResponseBodyModuleReserveRule) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardQueryResponseBodyModuleReserveRule) GoString() string {
	return s.String()
}

func (s *TravelStandardQueryResponseBodyModuleReserveRule) SetMainReserveRule(v *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule) *TravelStandardQueryResponseBodyModuleReserveRule {
	s.MainReserveRule = v
	return s
}

func (s *TravelStandardQueryResponseBodyModuleReserveRule) SetModuleConfigList(v []*TravelStandardQueryResponseBodyModuleReserveRuleModuleConfigList) *TravelStandardQueryResponseBodyModuleReserveRule {
	s.ModuleConfigList = v
	return s
}

type TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule struct {
	OpenServiceTypeList []*string `json:"open_service_type_list,omitempty" xml:"open_service_type_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2006517149
	RuleCode *int64  `json:"rule_code,omitempty" xml:"rule_code,omitempty"`
	RuleDesc *string `json:"rule_desc,omitempty" xml:"rule_desc,omitempty"`
	// example:
	//
	// 6517149
	RuleId   *int64  `json:"rule_id,omitempty" xml:"rule_id,omitempty"`
	RuleName *string `json:"rule_name,omitempty" xml:"rule_name,omitempty"`
}

func (s TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule) GoString() string {
	return s.String()
}

func (s *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule) SetOpenServiceTypeList(v []*string) *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule {
	s.OpenServiceTypeList = v
	return s
}

func (s *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule) SetRuleCode(v int64) *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule {
	s.RuleCode = &v
	return s
}

func (s *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule) SetRuleDesc(v string) *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule {
	s.RuleDesc = &v
	return s
}

func (s *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule) SetRuleId(v int64) *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule {
	s.RuleId = &v
	return s
}

func (s *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule) SetRuleName(v string) *TravelStandardQueryResponseBodyModuleReserveRuleMainReserveRule {
	s.RuleName = &v
	return s
}

type TravelStandardQueryResponseBodyModuleReserveRuleModuleConfigList struct {
	// example:
	//
	// FLIGHT_ADVANCE_BUY_DAY
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 3
	Value *string `json:"value,omitempty" xml:"value,omitempty"`
}

func (s TravelStandardQueryResponseBodyModuleReserveRuleModuleConfigList) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardQueryResponseBodyModuleReserveRuleModuleConfigList) GoString() string {
	return s.String()
}

func (s *TravelStandardQueryResponseBodyModuleReserveRuleModuleConfigList) SetCode(v string) *TravelStandardQueryResponseBodyModuleReserveRuleModuleConfigList {
	s.Code = &v
	return s
}

func (s *TravelStandardQueryResponseBodyModuleReserveRuleModuleConfigList) SetValue(v string) *TravelStandardQueryResponseBodyModuleReserveRuleModuleConfigList {
	s.Value = &v
	return s
}

type TravelStandardQueryResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TravelStandardQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TravelStandardQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TravelStandardQueryResponse) GoString() string {
	return s.String()
}

func (s *TravelStandardQueryResponse) SetHeaders(v map[string]*string) *TravelStandardQueryResponse {
	s.Headers = v
	return s
}

func (s *TravelStandardQueryResponse) SetStatusCode(v int32) *TravelStandardQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TravelStandardQueryResponse) SetBody(v *TravelStandardQueryResponseBody) *TravelStandardQueryResponse {
	s.Body = v
	return s
}

type TripBusinessInstanceQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s TripBusinessInstanceQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TripBusinessInstanceQueryHeaders) GoString() string {
	return s.String()
}

func (s *TripBusinessInstanceQueryHeaders) SetCommonHeaders(v map[string]*string) *TripBusinessInstanceQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TripBusinessInstanceQueryHeaders) SetXAcsBtripSoCorpToken(v string) *TripBusinessInstanceQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type TripBusinessInstanceQueryRequest struct {
	// example:
	//
	// 12345
	BusinessInstanceId *string `json:"business_instance_id,omitempty" xml:"business_instance_id,omitempty"`
	// example:
	//
	// 12345
	ThirdBusinessId *string `json:"third_business_id,omitempty" xml:"third_business_id,omitempty"`
	// example:
	//
	// thirdpart12138
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s TripBusinessInstanceQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TripBusinessInstanceQueryRequest) GoString() string {
	return s.String()
}

func (s *TripBusinessInstanceQueryRequest) SetBusinessInstanceId(v string) *TripBusinessInstanceQueryRequest {
	s.BusinessInstanceId = &v
	return s
}

func (s *TripBusinessInstanceQueryRequest) SetThirdBusinessId(v string) *TripBusinessInstanceQueryRequest {
	s.ThirdBusinessId = &v
	return s
}

func (s *TripBusinessInstanceQueryRequest) SetUserId(v string) *TripBusinessInstanceQueryRequest {
	s.UserId = &v
	return s
}

func (s *TripBusinessInstanceQueryRequest) SetUserName(v string) *TripBusinessInstanceQueryRequest {
	s.UserName = &v
	return s
}

type TripBusinessInstanceQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	Module *TripBusinessInstanceQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210bc44416869853114684533da3c2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TripBusinessInstanceQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TripBusinessInstanceQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TripBusinessInstanceQueryResponseBody) SetCode(v string) *TripBusinessInstanceQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TripBusinessInstanceQueryResponseBody) SetMessage(v string) *TripBusinessInstanceQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TripBusinessInstanceQueryResponseBody) SetModule(v *TripBusinessInstanceQueryResponseBodyModule) *TripBusinessInstanceQueryResponseBody {
	s.Module = v
	return s
}

func (s *TripBusinessInstanceQueryResponseBody) SetRequestId(v string) *TripBusinessInstanceQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TripBusinessInstanceQueryResponseBody) SetSuccess(v bool) *TripBusinessInstanceQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TripBusinessInstanceQueryResponseBody) SetTraceId(v string) *TripBusinessInstanceQueryResponseBody {
	s.TraceId = &v
	return s
}

type TripBusinessInstanceQueryResponseBodyModule struct {
	Creator *string `json:"creator,omitempty" xml:"creator,omitempty"`
	// example:
	//
	// 1525104000
	GmtCreate *int64 `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 1525104000
	GmtModified *int64 `json:"gmt_modified,omitempty" xml:"gmt_modified,omitempty"`
	// example:
	//
	// RUNNING
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
}

func (s TripBusinessInstanceQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TripBusinessInstanceQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TripBusinessInstanceQueryResponseBodyModule) SetCreator(v string) *TripBusinessInstanceQueryResponseBodyModule {
	s.Creator = &v
	return s
}

func (s *TripBusinessInstanceQueryResponseBodyModule) SetGmtCreate(v int64) *TripBusinessInstanceQueryResponseBodyModule {
	s.GmtCreate = &v
	return s
}

func (s *TripBusinessInstanceQueryResponseBodyModule) SetGmtModified(v int64) *TripBusinessInstanceQueryResponseBodyModule {
	s.GmtModified = &v
	return s
}

func (s *TripBusinessInstanceQueryResponseBodyModule) SetStatus(v string) *TripBusinessInstanceQueryResponseBodyModule {
	s.Status = &v
	return s
}

type TripBusinessInstanceQueryResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TripBusinessInstanceQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TripBusinessInstanceQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TripBusinessInstanceQueryResponse) GoString() string {
	return s.String()
}

func (s *TripBusinessInstanceQueryResponse) SetHeaders(v map[string]*string) *TripBusinessInstanceQueryResponse {
	s.Headers = v
	return s
}

func (s *TripBusinessInstanceQueryResponse) SetStatusCode(v int32) *TripBusinessInstanceQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TripBusinessInstanceQueryResponse) SetBody(v *TripBusinessInstanceQueryResponseBody) *TripBusinessInstanceQueryResponse {
	s.Body = v
	return s
}

type TripCCInfoQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TripCCInfoQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TripCCInfoQueryHeaders) GoString() string {
	return s.String()
}

func (s *TripCCInfoQueryHeaders) SetCommonHeaders(v map[string]*string) *TripCCInfoQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TripCCInfoQueryHeaders) SetXAcsBtripCorpToken(v string) *TripCCInfoQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TripCCInfoQueryRequest struct {
	// example:
	//
	// 2024060710160003300008684
	BusinessInstanceId *string `json:"business_instance_id,omitempty" xml:"business_instance_id,omitempty"`
	// example:
	//
	// 458003
	NodeId *string `json:"node_id,omitempty" xml:"node_id,omitempty"`
	// example:
	//
	// 2024060710160003300008684
	ThirdBusinessId *string `json:"third_business_id,omitempty" xml:"third_business_id,omitempty"`
}

func (s TripCCInfoQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TripCCInfoQueryRequest) GoString() string {
	return s.String()
}

func (s *TripCCInfoQueryRequest) SetBusinessInstanceId(v string) *TripCCInfoQueryRequest {
	s.BusinessInstanceId = &v
	return s
}

func (s *TripCCInfoQueryRequest) SetNodeId(v string) *TripCCInfoQueryRequest {
	s.NodeId = &v
	return s
}

func (s *TripCCInfoQueryRequest) SetThirdBusinessId(v string) *TripCCInfoQueryRequest {
	s.ThirdBusinessId = &v
	return s
}

type TripCCInfoQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	Module []*TripCCInfoQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TripCCInfoQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TripCCInfoQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TripCCInfoQueryResponseBody) SetCode(v string) *TripCCInfoQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TripCCInfoQueryResponseBody) SetMessage(v string) *TripCCInfoQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TripCCInfoQueryResponseBody) SetModule(v []*TripCCInfoQueryResponseBodyModule) *TripCCInfoQueryResponseBody {
	s.Module = v
	return s
}

func (s *TripCCInfoQueryResponseBody) SetRequestId(v string) *TripCCInfoQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TripCCInfoQueryResponseBody) SetSuccess(v bool) *TripCCInfoQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TripCCInfoQueryResponseBody) SetTraceId(v string) *TripCCInfoQueryResponseBody {
	s.TraceId = &v
	return s
}

type TripCCInfoQueryResponseBodyModule struct {
	// example:
	//
	// user_12138
	Notifier *string `json:"notifier,omitempty" xml:"notifier,omitempty"`
	// example:
	//
	// 1525104000
	NotifyStartTime *int64 `json:"notify_start_time,omitempty" xml:"notify_start_time,omitempty"`
}

func (s TripCCInfoQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TripCCInfoQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TripCCInfoQueryResponseBodyModule) SetNotifier(v string) *TripCCInfoQueryResponseBodyModule {
	s.Notifier = &v
	return s
}

func (s *TripCCInfoQueryResponseBodyModule) SetNotifyStartTime(v int64) *TripCCInfoQueryResponseBodyModule {
	s.NotifyStartTime = &v
	return s
}

type TripCCInfoQueryResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TripCCInfoQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TripCCInfoQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TripCCInfoQueryResponse) GoString() string {
	return s.String()
}

func (s *TripCCInfoQueryResponse) SetHeaders(v map[string]*string) *TripCCInfoQueryResponse {
	s.Headers = v
	return s
}

func (s *TripCCInfoQueryResponse) SetStatusCode(v int32) *TripCCInfoQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TripCCInfoQueryResponse) SetBody(v *TripCCInfoQueryResponseBody) *TripCCInfoQueryResponse {
	s.Body = v
	return s
}

type TripTaskQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s TripTaskQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s TripTaskQueryHeaders) GoString() string {
	return s.String()
}

func (s *TripTaskQueryHeaders) SetCommonHeaders(v map[string]*string) *TripTaskQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *TripTaskQueryHeaders) SetXAcsBtripCorpToken(v string) *TripTaskQueryHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type TripTaskQueryRequest struct {
	// example:
	//
	// 12345
	BusinessInstanceId *string `json:"business_instance_id,omitempty" xml:"business_instance_id,omitempty"`
	// example:
	//
	// 12345
	ThirdBusinessId *string `json:"third_business_id,omitempty" xml:"third_business_id,omitempty"`
	// example:
	//
	// thirdpart12138
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty" xml:"user_name,omitempty"`
}

func (s TripTaskQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s TripTaskQueryRequest) GoString() string {
	return s.String()
}

func (s *TripTaskQueryRequest) SetBusinessInstanceId(v string) *TripTaskQueryRequest {
	s.BusinessInstanceId = &v
	return s
}

func (s *TripTaskQueryRequest) SetThirdBusinessId(v string) *TripTaskQueryRequest {
	s.ThirdBusinessId = &v
	return s
}

func (s *TripTaskQueryRequest) SetUserId(v string) *TripTaskQueryRequest {
	s.UserId = &v
	return s
}

func (s *TripTaskQueryRequest) SetUserName(v string) *TripTaskQueryRequest {
	s.UserName = &v
	return s
}

type TripTaskQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string `json:"code,omitempty" xml:"code,omitempty"`
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// module。
	Module *TripTaskQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// 2FB0D7A8-BA41-5D04-BEFC-CADA5481AC53
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s TripTaskQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TripTaskQueryResponseBody) GoString() string {
	return s.String()
}

func (s *TripTaskQueryResponseBody) SetCode(v string) *TripTaskQueryResponseBody {
	s.Code = &v
	return s
}

func (s *TripTaskQueryResponseBody) SetMessage(v string) *TripTaskQueryResponseBody {
	s.Message = &v
	return s
}

func (s *TripTaskQueryResponseBody) SetModule(v *TripTaskQueryResponseBodyModule) *TripTaskQueryResponseBody {
	s.Module = v
	return s
}

func (s *TripTaskQueryResponseBody) SetRequestId(v string) *TripTaskQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *TripTaskQueryResponseBody) SetSuccess(v bool) *TripTaskQueryResponseBody {
	s.Success = &v
	return s
}

func (s *TripTaskQueryResponseBody) SetTraceId(v string) *TripTaskQueryResponseBody {
	s.TraceId = &v
	return s
}

type TripTaskQueryResponseBodyModule struct {
	// example:
	//
	// true
	NeedRefresh  *bool                                          `json:"needRefresh,omitempty" xml:"needRefresh,omitempty"`
	RecordTasks  []*TripTaskQueryResponseBodyModuleRecordTasks  `json:"record_tasks,omitempty" xml:"record_tasks,omitempty" type:"Repeated"`
	RunningTasks []*TripTaskQueryResponseBodyModuleRunningTasks `json:"running_tasks,omitempty" xml:"running_tasks,omitempty" type:"Repeated"`
}

func (s TripTaskQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s TripTaskQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *TripTaskQueryResponseBodyModule) SetNeedRefresh(v bool) *TripTaskQueryResponseBodyModule {
	s.NeedRefresh = &v
	return s
}

func (s *TripTaskQueryResponseBodyModule) SetRecordTasks(v []*TripTaskQueryResponseBodyModuleRecordTasks) *TripTaskQueryResponseBodyModule {
	s.RecordTasks = v
	return s
}

func (s *TripTaskQueryResponseBodyModule) SetRunningTasks(v []*TripTaskQueryResponseBodyModuleRunningTasks) *TripTaskQueryResponseBodyModule {
	s.RunningTasks = v
	return s
}

type TripTaskQueryResponseBodyModuleRecordTasks struct {
	// example:
	//
	// 123
	Actioner   *string `json:"actioner,omitempty" xml:"actioner,omitempty"`
	Attributes *string `json:"attributes,omitempty" xml:"attributes,omitempty"`
	// example:
	//
	// 1525104000
	GmtCreate *int64 `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 1525104000
	GmtFinished *int64 `json:"gmt_finished,omitempty" xml:"gmt_finished,omitempty"`
	// example:
	//
	// 34360
	Id *int64 `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// 575003
	NodeId *string `json:"node_id,omitempty" xml:"node_id,omitempty"`
	// example:
	//
	// agree
	OutResult *string `json:"out_result,omitempty" xml:"out_result,omitempty"`
	// example:
	//
	// 123
	Owner *string `json:"owner,omitempty" xml:"owner,omitempty"`
	// example:
	//
	// RUNNING
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
}

func (s TripTaskQueryResponseBodyModuleRecordTasks) String() string {
	return tea.Prettify(s)
}

func (s TripTaskQueryResponseBodyModuleRecordTasks) GoString() string {
	return s.String()
}

func (s *TripTaskQueryResponseBodyModuleRecordTasks) SetActioner(v string) *TripTaskQueryResponseBodyModuleRecordTasks {
	s.Actioner = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRecordTasks) SetAttributes(v string) *TripTaskQueryResponseBodyModuleRecordTasks {
	s.Attributes = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRecordTasks) SetGmtCreate(v int64) *TripTaskQueryResponseBodyModuleRecordTasks {
	s.GmtCreate = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRecordTasks) SetGmtFinished(v int64) *TripTaskQueryResponseBodyModuleRecordTasks {
	s.GmtFinished = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRecordTasks) SetId(v int64) *TripTaskQueryResponseBodyModuleRecordTasks {
	s.Id = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRecordTasks) SetNodeId(v string) *TripTaskQueryResponseBodyModuleRecordTasks {
	s.NodeId = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRecordTasks) SetOutResult(v string) *TripTaskQueryResponseBodyModuleRecordTasks {
	s.OutResult = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRecordTasks) SetOwner(v string) *TripTaskQueryResponseBodyModuleRecordTasks {
	s.Owner = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRecordTasks) SetStatus(v string) *TripTaskQueryResponseBodyModuleRecordTasks {
	s.Status = &v
	return s
}

type TripTaskQueryResponseBodyModuleRunningTasks struct {
	// example:
	//
	// 123
	Actioner   *string `json:"actioner,omitempty" xml:"actioner,omitempty"`
	Attributes *string `json:"attributes,omitempty" xml:"attributes,omitempty"`
	// example:
	//
	// 1525104000
	GmtCreate *int64 `json:"gmt_create,omitempty" xml:"gmt_create,omitempty"`
	// example:
	//
	// 1525104000
	GmtFinished *int64 `json:"gmt_finished,omitempty" xml:"gmt_finished,omitempty"`
	// example:
	//
	// 34360
	Id *int64 `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// 575003
	NodeId *string `json:"node_id,omitempty" xml:"node_id,omitempty"`
	// example:
	//
	// agree
	OutResult *string `json:"out_result,omitempty" xml:"out_result,omitempty"`
	// example:
	//
	// 123
	Owner *string `json:"owner,omitempty" xml:"owner,omitempty"`
	// example:
	//
	// RUNNING
	Status *string `json:"status,omitempty" xml:"status,omitempty"`
}

func (s TripTaskQueryResponseBodyModuleRunningTasks) String() string {
	return tea.Prettify(s)
}

func (s TripTaskQueryResponseBodyModuleRunningTasks) GoString() string {
	return s.String()
}

func (s *TripTaskQueryResponseBodyModuleRunningTasks) SetActioner(v string) *TripTaskQueryResponseBodyModuleRunningTasks {
	s.Actioner = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRunningTasks) SetAttributes(v string) *TripTaskQueryResponseBodyModuleRunningTasks {
	s.Attributes = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRunningTasks) SetGmtCreate(v int64) *TripTaskQueryResponseBodyModuleRunningTasks {
	s.GmtCreate = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRunningTasks) SetGmtFinished(v int64) *TripTaskQueryResponseBodyModuleRunningTasks {
	s.GmtFinished = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRunningTasks) SetId(v int64) *TripTaskQueryResponseBodyModuleRunningTasks {
	s.Id = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRunningTasks) SetNodeId(v string) *TripTaskQueryResponseBodyModuleRunningTasks {
	s.NodeId = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRunningTasks) SetOutResult(v string) *TripTaskQueryResponseBodyModuleRunningTasks {
	s.OutResult = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRunningTasks) SetOwner(v string) *TripTaskQueryResponseBodyModuleRunningTasks {
	s.Owner = &v
	return s
}

func (s *TripTaskQueryResponseBodyModuleRunningTasks) SetStatus(v string) *TripTaskQueryResponseBodyModuleRunningTasks {
	s.Status = &v
	return s
}

type TripTaskQueryResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TripTaskQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TripTaskQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s TripTaskQueryResponse) GoString() string {
	return s.String()
}

func (s *TripTaskQueryResponse) SetHeaders(v map[string]*string) *TripTaskQueryResponse {
	s.Headers = v
	return s
}

func (s *TripTaskQueryResponse) SetStatusCode(v int32) *TripTaskQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *TripTaskQueryResponse) SetBody(v *TripTaskQueryResponseBody) *TripTaskQueryResponse {
	s.Body = v
	return s
}

type UpdateCustomRoleHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s UpdateCustomRoleHeaders) String() string {
	return tea.Prettify(s)
}

func (s UpdateCustomRoleHeaders) GoString() string {
	return s.String()
}

func (s *UpdateCustomRoleHeaders) SetCommonHeaders(v map[string]*string) *UpdateCustomRoleHeaders {
	s.CommonHeaders = v
	return s
}

func (s *UpdateCustomRoleHeaders) SetXAcsBtripCorpToken(v string) *UpdateCustomRoleHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type UpdateCustomRoleRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 12345
	RoleId *string `json:"role_id,omitempty" xml:"role_id,omitempty"`
	// This parameter is required.
	RoleName *string `json:"role_name,omitempty" xml:"role_name,omitempty"`
}

func (s UpdateCustomRoleRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateCustomRoleRequest) GoString() string {
	return s.String()
}

func (s *UpdateCustomRoleRequest) SetRoleId(v string) *UpdateCustomRoleRequest {
	s.RoleId = &v
	return s
}

func (s *UpdateCustomRoleRequest) SetRoleName(v string) *UpdateCustomRoleRequest {
	s.RoleName = &v
	return s
}

type UpdateCustomRoleResponseBody struct {
	// example:
	//
	// SUCCESS
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 200
	HttpStatusCode *int32  `json:"httpStatusCode,omitempty" xml:"httpStatusCode,omitempty"`
	Message        *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210bcc3a16583004579056128d33d7
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s UpdateCustomRoleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateCustomRoleResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateCustomRoleResponseBody) SetCode(v string) *UpdateCustomRoleResponseBody {
	s.Code = &v
	return s
}

func (s *UpdateCustomRoleResponseBody) SetHttpStatusCode(v int32) *UpdateCustomRoleResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *UpdateCustomRoleResponseBody) SetMessage(v string) *UpdateCustomRoleResponseBody {
	s.Message = &v
	return s
}

func (s *UpdateCustomRoleResponseBody) SetRequestId(v string) *UpdateCustomRoleResponseBody {
	s.RequestId = &v
	return s
}

func (s *UpdateCustomRoleResponseBody) SetSuccess(v bool) *UpdateCustomRoleResponseBody {
	s.Success = &v
	return s
}

func (s *UpdateCustomRoleResponseBody) SetTraceId(v string) *UpdateCustomRoleResponseBody {
	s.TraceId = &v
	return s
}

type UpdateCustomRoleResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateCustomRoleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateCustomRoleResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateCustomRoleResponse) GoString() string {
	return s.String()
}

func (s *UpdateCustomRoleResponse) SetHeaders(v map[string]*string) *UpdateCustomRoleResponse {
	s.Headers = v
	return s
}

func (s *UpdateCustomRoleResponse) SetStatusCode(v int32) *UpdateCustomRoleResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateCustomRoleResponse) SetBody(v *UpdateCustomRoleResponseBody) *UpdateCustomRoleResponse {
	s.Body = v
	return s
}

type UpdateDepartmentHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwis
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s UpdateDepartmentHeaders) String() string {
	return tea.Prettify(s)
}

func (s UpdateDepartmentHeaders) GoString() string {
	return s.String()
}

func (s *UpdateDepartmentHeaders) SetCommonHeaders(v map[string]*string) *UpdateDepartmentHeaders {
	s.CommonHeaders = v
	return s
}

func (s *UpdateDepartmentHeaders) SetXAcsBtripCorpToken(v string) *UpdateDepartmentHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type UpdateDepartmentRequest struct {
	// This parameter is required.
	DeptName              *string   `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	ManagerEmployeeIdList []*string `json:"manager_employee_id_list,omitempty" xml:"manager_employee_id_list,omitempty" type:"Repeated"`
	// This parameter is required.
	//
	// example:
	//
	// dept123
	OutDeptId *string `json:"out_dept_id,omitempty" xml:"out_dept_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dept456
	OutDeptPid *string `json:"out_dept_pid,omitempty" xml:"out_dept_pid,omitempty"`
}

func (s UpdateDepartmentRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateDepartmentRequest) GoString() string {
	return s.String()
}

func (s *UpdateDepartmentRequest) SetDeptName(v string) *UpdateDepartmentRequest {
	s.DeptName = &v
	return s
}

func (s *UpdateDepartmentRequest) SetManagerEmployeeIdList(v []*string) *UpdateDepartmentRequest {
	s.ManagerEmployeeIdList = v
	return s
}

func (s *UpdateDepartmentRequest) SetOutDeptId(v string) *UpdateDepartmentRequest {
	s.OutDeptId = &v
	return s
}

func (s *UpdateDepartmentRequest) SetOutDeptPid(v string) *UpdateDepartmentRequest {
	s.OutDeptPid = &v
	return s
}

type UpdateDepartmentShrinkRequest struct {
	// This parameter is required.
	DeptName                    *string `json:"dept_name,omitempty" xml:"dept_name,omitempty"`
	ManagerEmployeeIdListShrink *string `json:"manager_employee_id_list,omitempty" xml:"manager_employee_id_list,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dept123
	OutDeptId *string `json:"out_dept_id,omitempty" xml:"out_dept_id,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// dept456
	OutDeptPid *string `json:"out_dept_pid,omitempty" xml:"out_dept_pid,omitempty"`
}

func (s UpdateDepartmentShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateDepartmentShrinkRequest) GoString() string {
	return s.String()
}

func (s *UpdateDepartmentShrinkRequest) SetDeptName(v string) *UpdateDepartmentShrinkRequest {
	s.DeptName = &v
	return s
}

func (s *UpdateDepartmentShrinkRequest) SetManagerEmployeeIdListShrink(v string) *UpdateDepartmentShrinkRequest {
	s.ManagerEmployeeIdListShrink = &v
	return s
}

func (s *UpdateDepartmentShrinkRequest) SetOutDeptId(v string) *UpdateDepartmentShrinkRequest {
	s.OutDeptId = &v
	return s
}

func (s *UpdateDepartmentShrinkRequest) SetOutDeptPid(v string) *UpdateDepartmentShrinkRequest {
	s.OutDeptPid = &v
	return s
}

type UpdateDepartmentResponseBody struct {
	// example:
	//
	// SUCCESS
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 200
	HttpStatusCode *int32  `json:"httpStatusCode,omitempty" xml:"httpStatusCode,omitempty"`
	Message        *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s UpdateDepartmentResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateDepartmentResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateDepartmentResponseBody) SetCode(v string) *UpdateDepartmentResponseBody {
	s.Code = &v
	return s
}

func (s *UpdateDepartmentResponseBody) SetHttpStatusCode(v int32) *UpdateDepartmentResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *UpdateDepartmentResponseBody) SetMessage(v string) *UpdateDepartmentResponseBody {
	s.Message = &v
	return s
}

func (s *UpdateDepartmentResponseBody) SetRequestId(v string) *UpdateDepartmentResponseBody {
	s.RequestId = &v
	return s
}

func (s *UpdateDepartmentResponseBody) SetSuccess(v bool) *UpdateDepartmentResponseBody {
	s.Success = &v
	return s
}

func (s *UpdateDepartmentResponseBody) SetTraceId(v string) *UpdateDepartmentResponseBody {
	s.TraceId = &v
	return s
}

type UpdateDepartmentResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateDepartmentResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateDepartmentResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateDepartmentResponse) GoString() string {
	return s.String()
}

func (s *UpdateDepartmentResponse) SetHeaders(v map[string]*string) *UpdateDepartmentResponse {
	s.Headers = v
	return s
}

func (s *UpdateDepartmentResponse) SetStatusCode(v int32) *UpdateDepartmentResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateDepartmentResponse) SetBody(v *UpdateDepartmentResponseBody) *UpdateDepartmentResponse {
	s.Body = v
	return s
}

type UpdateEmployeeHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s UpdateEmployeeHeaders) String() string {
	return tea.Prettify(s)
}

func (s UpdateEmployeeHeaders) GoString() string {
	return s.String()
}

func (s *UpdateEmployeeHeaders) SetCommonHeaders(v map[string]*string) *UpdateEmployeeHeaders {
	s.CommonHeaders = v
	return s
}

func (s *UpdateEmployeeHeaders) SetXAcsBtripCorpToken(v string) *UpdateEmployeeHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type UpdateEmployeeRequest struct {
	// example:
	//
	// https://static-legacy.dingtalk.com/media/lADPF8XMoxJeUkbNA2LNA5s_923_866.jpg
	Avatar           *string   `json:"avatar,omitempty" xml:"avatar,omitempty"`
	BaseCityCodeList []*string `json:"base_city_code_list,omitempty" xml:"base_city_code_list,omitempty" type:"Repeated"`
	// example:
	//
	// 2000-01-02
	Birthday           *string                          `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertList           []*UpdateEmployeeRequestCertList `json:"cert_list,omitempty" xml:"cert_list,omitempty" type:"Repeated"`
	CustomRoleCodeList []*string                        `json:"custom_role_code_list,omitempty" xml:"custom_role_code_list,omitempty" type:"Repeated"`
	// example:
	//
	// 123@163.com
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// F
	Gender *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// false
	IsAdmin *bool `json:"is_admin,omitempty" xml:"is_admin,omitempty"`
	// example:
	//
	// false
	IsBoss *bool `json:"is_boss,omitempty" xml:"is_boss,omitempty"`
	// example:
	//
	// false
	IsDeptLeader *bool `json:"is_dept_leader,omitempty" xml:"is_dept_leader,omitempty"`
	// example:
	//
	// 1001
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// user456
	ManagerUserId *string   `json:"manager_user_id,omitempty" xml:"manager_user_id,omitempty"`
	OutDeptIdList []*string `json:"out_dept_id_list,omitempty" xml:"out_dept_id_list,omitempty" type:"Repeated"`
	// example:
	//
	// 13111111111
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// M4
	PositionLevel *string `json:"position_level,omitempty" xml:"position_level,omitempty"`
	RealName      *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// John/Wilson
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// user123
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserNick *string `json:"user_nick,omitempty" xml:"user_nick,omitempty"`
}

func (s UpdateEmployeeRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateEmployeeRequest) GoString() string {
	return s.String()
}

func (s *UpdateEmployeeRequest) SetAvatar(v string) *UpdateEmployeeRequest {
	s.Avatar = &v
	return s
}

func (s *UpdateEmployeeRequest) SetBaseCityCodeList(v []*string) *UpdateEmployeeRequest {
	s.BaseCityCodeList = v
	return s
}

func (s *UpdateEmployeeRequest) SetBirthday(v string) *UpdateEmployeeRequest {
	s.Birthday = &v
	return s
}

func (s *UpdateEmployeeRequest) SetCertList(v []*UpdateEmployeeRequestCertList) *UpdateEmployeeRequest {
	s.CertList = v
	return s
}

func (s *UpdateEmployeeRequest) SetCustomRoleCodeList(v []*string) *UpdateEmployeeRequest {
	s.CustomRoleCodeList = v
	return s
}

func (s *UpdateEmployeeRequest) SetEmail(v string) *UpdateEmployeeRequest {
	s.Email = &v
	return s
}

func (s *UpdateEmployeeRequest) SetGender(v string) *UpdateEmployeeRequest {
	s.Gender = &v
	return s
}

func (s *UpdateEmployeeRequest) SetIsAdmin(v bool) *UpdateEmployeeRequest {
	s.IsAdmin = &v
	return s
}

func (s *UpdateEmployeeRequest) SetIsBoss(v bool) *UpdateEmployeeRequest {
	s.IsBoss = &v
	return s
}

func (s *UpdateEmployeeRequest) SetIsDeptLeader(v bool) *UpdateEmployeeRequest {
	s.IsDeptLeader = &v
	return s
}

func (s *UpdateEmployeeRequest) SetJobNo(v string) *UpdateEmployeeRequest {
	s.JobNo = &v
	return s
}

func (s *UpdateEmployeeRequest) SetManagerUserId(v string) *UpdateEmployeeRequest {
	s.ManagerUserId = &v
	return s
}

func (s *UpdateEmployeeRequest) SetOutDeptIdList(v []*string) *UpdateEmployeeRequest {
	s.OutDeptIdList = v
	return s
}

func (s *UpdateEmployeeRequest) SetPhone(v string) *UpdateEmployeeRequest {
	s.Phone = &v
	return s
}

func (s *UpdateEmployeeRequest) SetPositionLevel(v string) *UpdateEmployeeRequest {
	s.PositionLevel = &v
	return s
}

func (s *UpdateEmployeeRequest) SetRealName(v string) *UpdateEmployeeRequest {
	s.RealName = &v
	return s
}

func (s *UpdateEmployeeRequest) SetRealNameEn(v string) *UpdateEmployeeRequest {
	s.RealNameEn = &v
	return s
}

func (s *UpdateEmployeeRequest) SetUserId(v string) *UpdateEmployeeRequest {
	s.UserId = &v
	return s
}

func (s *UpdateEmployeeRequest) SetUserNick(v string) *UpdateEmployeeRequest {
	s.UserNick = &v
	return s
}

type UpdateEmployeeRequestCertList struct {
	// example:
	//
	// 2000-01-02
	Birthday *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	// example:
	//
	// 2099-03-12
	CertExpiredTime *string `json:"cert_expired_time,omitempty" xml:"cert_expired_time,omitempty"`
	// example:
	//
	// CN
	CertNation *string `json:"cert_nation,omitempty" xml:"cert_nation,omitempty"`
	// example:
	//
	// 123
	CertNo *string `json:"cert_no,omitempty" xml:"cert_no,omitempty"`
	// example:
	//
	// 0
	CertType *int32 `json:"cert_type,omitempty" xml:"cert_type,omitempty"`
	// example:
	//
	// F
	Gender *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// CN
	Nationality *string `json:"nationality,omitempty" xml:"nationality,omitempty"`
	// example:
	//
	// 13111111111
	Phone    *string `json:"phone,omitempty" xml:"phone,omitempty"`
	RealName *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// John/Wilson
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
}

func (s UpdateEmployeeRequestCertList) String() string {
	return tea.Prettify(s)
}

func (s UpdateEmployeeRequestCertList) GoString() string {
	return s.String()
}

func (s *UpdateEmployeeRequestCertList) SetBirthday(v string) *UpdateEmployeeRequestCertList {
	s.Birthday = &v
	return s
}

func (s *UpdateEmployeeRequestCertList) SetCertExpiredTime(v string) *UpdateEmployeeRequestCertList {
	s.CertExpiredTime = &v
	return s
}

func (s *UpdateEmployeeRequestCertList) SetCertNation(v string) *UpdateEmployeeRequestCertList {
	s.CertNation = &v
	return s
}

func (s *UpdateEmployeeRequestCertList) SetCertNo(v string) *UpdateEmployeeRequestCertList {
	s.CertNo = &v
	return s
}

func (s *UpdateEmployeeRequestCertList) SetCertType(v int32) *UpdateEmployeeRequestCertList {
	s.CertType = &v
	return s
}

func (s *UpdateEmployeeRequestCertList) SetGender(v string) *UpdateEmployeeRequestCertList {
	s.Gender = &v
	return s
}

func (s *UpdateEmployeeRequestCertList) SetNationality(v string) *UpdateEmployeeRequestCertList {
	s.Nationality = &v
	return s
}

func (s *UpdateEmployeeRequestCertList) SetPhone(v string) *UpdateEmployeeRequestCertList {
	s.Phone = &v
	return s
}

func (s *UpdateEmployeeRequestCertList) SetRealName(v string) *UpdateEmployeeRequestCertList {
	s.RealName = &v
	return s
}

func (s *UpdateEmployeeRequestCertList) SetRealNameEn(v string) *UpdateEmployeeRequestCertList {
	s.RealNameEn = &v
	return s
}

type UpdateEmployeeShrinkRequest struct {
	// example:
	//
	// https://static-legacy.dingtalk.com/media/lADPF8XMoxJeUkbNA2LNA5s_923_866.jpg
	Avatar                 *string `json:"avatar,omitempty" xml:"avatar,omitempty"`
	BaseCityCodeListShrink *string `json:"base_city_code_list,omitempty" xml:"base_city_code_list,omitempty"`
	// example:
	//
	// 2000-01-02
	Birthday                 *string `json:"birthday,omitempty" xml:"birthday,omitempty"`
	CertListShrink           *string `json:"cert_list,omitempty" xml:"cert_list,omitempty"`
	CustomRoleCodeListShrink *string `json:"custom_role_code_list,omitempty" xml:"custom_role_code_list,omitempty"`
	// example:
	//
	// 123@163.com
	Email *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// F
	Gender *string `json:"gender,omitempty" xml:"gender,omitempty"`
	// example:
	//
	// false
	IsAdmin *bool `json:"is_admin,omitempty" xml:"is_admin,omitempty"`
	// example:
	//
	// false
	IsBoss *bool `json:"is_boss,omitempty" xml:"is_boss,omitempty"`
	// example:
	//
	// false
	IsDeptLeader *bool `json:"is_dept_leader,omitempty" xml:"is_dept_leader,omitempty"`
	// example:
	//
	// 1001
	JobNo *string `json:"job_no,omitempty" xml:"job_no,omitempty"`
	// example:
	//
	// user456
	ManagerUserId       *string `json:"manager_user_id,omitempty" xml:"manager_user_id,omitempty"`
	OutDeptIdListShrink *string `json:"out_dept_id_list,omitempty" xml:"out_dept_id_list,omitempty"`
	// example:
	//
	// 13111111111
	Phone *string `json:"phone,omitempty" xml:"phone,omitempty"`
	// example:
	//
	// M4
	PositionLevel *string `json:"position_level,omitempty" xml:"position_level,omitempty"`
	RealName      *string `json:"real_name,omitempty" xml:"real_name,omitempty"`
	// example:
	//
	// John/Wilson
	RealNameEn *string `json:"real_name_en,omitempty" xml:"real_name_en,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// user123
	UserId   *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
	UserNick *string `json:"user_nick,omitempty" xml:"user_nick,omitempty"`
}

func (s UpdateEmployeeShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateEmployeeShrinkRequest) GoString() string {
	return s.String()
}

func (s *UpdateEmployeeShrinkRequest) SetAvatar(v string) *UpdateEmployeeShrinkRequest {
	s.Avatar = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetBaseCityCodeListShrink(v string) *UpdateEmployeeShrinkRequest {
	s.BaseCityCodeListShrink = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetBirthday(v string) *UpdateEmployeeShrinkRequest {
	s.Birthday = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetCertListShrink(v string) *UpdateEmployeeShrinkRequest {
	s.CertListShrink = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetCustomRoleCodeListShrink(v string) *UpdateEmployeeShrinkRequest {
	s.CustomRoleCodeListShrink = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetEmail(v string) *UpdateEmployeeShrinkRequest {
	s.Email = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetGender(v string) *UpdateEmployeeShrinkRequest {
	s.Gender = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetIsAdmin(v bool) *UpdateEmployeeShrinkRequest {
	s.IsAdmin = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetIsBoss(v bool) *UpdateEmployeeShrinkRequest {
	s.IsBoss = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetIsDeptLeader(v bool) *UpdateEmployeeShrinkRequest {
	s.IsDeptLeader = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetJobNo(v string) *UpdateEmployeeShrinkRequest {
	s.JobNo = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetManagerUserId(v string) *UpdateEmployeeShrinkRequest {
	s.ManagerUserId = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetOutDeptIdListShrink(v string) *UpdateEmployeeShrinkRequest {
	s.OutDeptIdListShrink = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetPhone(v string) *UpdateEmployeeShrinkRequest {
	s.Phone = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetPositionLevel(v string) *UpdateEmployeeShrinkRequest {
	s.PositionLevel = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetRealName(v string) *UpdateEmployeeShrinkRequest {
	s.RealName = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetRealNameEn(v string) *UpdateEmployeeShrinkRequest {
	s.RealNameEn = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetUserId(v string) *UpdateEmployeeShrinkRequest {
	s.UserId = &v
	return s
}

func (s *UpdateEmployeeShrinkRequest) SetUserNick(v string) *UpdateEmployeeShrinkRequest {
	s.UserNick = &v
	return s
}

type UpdateEmployeeResponseBody struct {
	// example:
	//
	// SUCCESS
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 200
	HttpStatusCode *int32  `json:"httpStatusCode,omitempty" xml:"httpStatusCode,omitempty"`
	Message        *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// A5009956-1077-52FB-B520-EA8C7E91D722
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s UpdateEmployeeResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateEmployeeResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateEmployeeResponseBody) SetCode(v string) *UpdateEmployeeResponseBody {
	s.Code = &v
	return s
}

func (s *UpdateEmployeeResponseBody) SetHttpStatusCode(v int32) *UpdateEmployeeResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *UpdateEmployeeResponseBody) SetMessage(v string) *UpdateEmployeeResponseBody {
	s.Message = &v
	return s
}

func (s *UpdateEmployeeResponseBody) SetRequestId(v string) *UpdateEmployeeResponseBody {
	s.RequestId = &v
	return s
}

func (s *UpdateEmployeeResponseBody) SetSuccess(v bool) *UpdateEmployeeResponseBody {
	s.Success = &v
	return s
}

func (s *UpdateEmployeeResponseBody) SetTraceId(v string) *UpdateEmployeeResponseBody {
	s.TraceId = &v
	return s
}

type UpdateEmployeeResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateEmployeeResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateEmployeeResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateEmployeeResponse) GoString() string {
	return s.String()
}

func (s *UpdateEmployeeResponse) SetHeaders(v map[string]*string) *UpdateEmployeeResponse {
	s.Headers = v
	return s
}

func (s *UpdateEmployeeResponse) SetStatusCode(v int32) *UpdateEmployeeResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateEmployeeResponse) SetBody(v *UpdateEmployeeResponseBody) *UpdateEmployeeResponse {
	s.Body = v
	return s
}

type UpdateEmployeeLeaveStatusHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripCorpToken *string `json:"x-acs-btrip-corp-token,omitempty" xml:"x-acs-btrip-corp-token,omitempty"`
}

func (s UpdateEmployeeLeaveStatusHeaders) String() string {
	return tea.Prettify(s)
}

func (s UpdateEmployeeLeaveStatusHeaders) GoString() string {
	return s.String()
}

func (s *UpdateEmployeeLeaveStatusHeaders) SetCommonHeaders(v map[string]*string) *UpdateEmployeeLeaveStatusHeaders {
	s.CommonHeaders = v
	return s
}

func (s *UpdateEmployeeLeaveStatusHeaders) SetXAcsBtripCorpToken(v string) *UpdateEmployeeLeaveStatusHeaders {
	s.XAcsBtripCorpToken = &v
	return s
}

type UpdateEmployeeLeaveStatusRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// true
	IsLeave *bool `json:"is_leave,omitempty" xml:"is_leave,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// user123
	UserId *string `json:"user_id,omitempty" xml:"user_id,omitempty"`
}

func (s UpdateEmployeeLeaveStatusRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateEmployeeLeaveStatusRequest) GoString() string {
	return s.String()
}

func (s *UpdateEmployeeLeaveStatusRequest) SetIsLeave(v bool) *UpdateEmployeeLeaveStatusRequest {
	s.IsLeave = &v
	return s
}

func (s *UpdateEmployeeLeaveStatusRequest) SetUserId(v string) *UpdateEmployeeLeaveStatusRequest {
	s.UserId = &v
	return s
}

type UpdateEmployeeLeaveStatusResponseBody struct {
	// example:
	//
	// SUCCESS
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// example:
	//
	// 200
	HttpStatusCode *int32  `json:"httpStatusCode,omitempty" xml:"httpStatusCode,omitempty"`
	Message        *string `json:"message,omitempty" xml:"message,omitempty"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 21041ce316577904808056433edbb2
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s UpdateEmployeeLeaveStatusResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateEmployeeLeaveStatusResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateEmployeeLeaveStatusResponseBody) SetCode(v string) *UpdateEmployeeLeaveStatusResponseBody {
	s.Code = &v
	return s
}

func (s *UpdateEmployeeLeaveStatusResponseBody) SetHttpStatusCode(v int32) *UpdateEmployeeLeaveStatusResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *UpdateEmployeeLeaveStatusResponseBody) SetMessage(v string) *UpdateEmployeeLeaveStatusResponseBody {
	s.Message = &v
	return s
}

func (s *UpdateEmployeeLeaveStatusResponseBody) SetRequestId(v string) *UpdateEmployeeLeaveStatusResponseBody {
	s.RequestId = &v
	return s
}

func (s *UpdateEmployeeLeaveStatusResponseBody) SetSuccess(v bool) *UpdateEmployeeLeaveStatusResponseBody {
	s.Success = &v
	return s
}

func (s *UpdateEmployeeLeaveStatusResponseBody) SetTraceId(v string) *UpdateEmployeeLeaveStatusResponseBody {
	s.TraceId = &v
	return s
}

type UpdateEmployeeLeaveStatusResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateEmployeeLeaveStatusResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateEmployeeLeaveStatusResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateEmployeeLeaveStatusResponse) GoString() string {
	return s.String()
}

func (s *UpdateEmployeeLeaveStatusResponse) SetHeaders(v map[string]*string) *UpdateEmployeeLeaveStatusResponse {
	s.Headers = v
	return s
}

func (s *UpdateEmployeeLeaveStatusResponse) SetStatusCode(v int32) *UpdateEmployeeLeaveStatusResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateEmployeeLeaveStatusResponse) SetBody(v *UpdateEmployeeLeaveStatusResponseBody) *UpdateEmployeeLeaveStatusResponse {
	s.Body = v
	return s
}

type UserQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s UserQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s UserQueryHeaders) GoString() string {
	return s.String()
}

func (s *UserQueryHeaders) SetCommonHeaders(v map[string]*string) *UserQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *UserQueryHeaders) SetXAcsBtripSoCorpToken(v string) *UserQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type UserQueryRequest struct {
	// example:
	//
	// 2021-06-02 00:00:00
	ModifiedTimeGreaterOrEqualThan *string `json:"modified_time_greater_or_equal_than,omitempty" xml:"modified_time_greater_or_equal_than,omitempty"`
	// example:
	//
	// 10
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 9YN+jxa7PcxbNUTISeKjEw==
	PageToken *string `json:"page_token,omitempty" xml:"page_token,omitempty"`
	// example:
	//
	// 12345
	ThirdPartJobNo *string `json:"third_part_job_no,omitempty" xml:"third_part_job_no,omitempty"`
}

func (s UserQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s UserQueryRequest) GoString() string {
	return s.String()
}

func (s *UserQueryRequest) SetModifiedTimeGreaterOrEqualThan(v string) *UserQueryRequest {
	s.ModifiedTimeGreaterOrEqualThan = &v
	return s
}

func (s *UserQueryRequest) SetPageSize(v int32) *UserQueryRequest {
	s.PageSize = &v
	return s
}

func (s *UserQueryRequest) SetPageToken(v string) *UserQueryRequest {
	s.PageToken = &v
	return s
}

func (s *UserQueryRequest) SetThirdPartJobNo(v string) *UserQueryRequest {
	s.ThirdPartJobNo = &v
	return s
}

type UserQueryResponseBody struct {
	// example:
	//
	// SUCCESS
	Code    *string                      `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                      `json:"message,omitempty" xml:"message,omitempty"`
	Module  *UserQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 2f624a6316366024344424669e3279
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s UserQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UserQueryResponseBody) GoString() string {
	return s.String()
}

func (s *UserQueryResponseBody) SetCode(v string) *UserQueryResponseBody {
	s.Code = &v
	return s
}

func (s *UserQueryResponseBody) SetMessage(v string) *UserQueryResponseBody {
	s.Message = &v
	return s
}

func (s *UserQueryResponseBody) SetModule(v *UserQueryResponseBodyModule) *UserQueryResponseBody {
	s.Module = v
	return s
}

func (s *UserQueryResponseBody) SetRequestId(v string) *UserQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *UserQueryResponseBody) SetSuccess(v bool) *UserQueryResponseBody {
	s.Success = &v
	return s
}

func (s *UserQueryResponseBody) SetTraceId(v string) *UserQueryResponseBody {
	s.TraceId = &v
	return s
}

type UserQueryResponseBodyModule struct {
	// example:
	//
	// true
	HasMore *bool                               `json:"has_more,omitempty" xml:"has_more,omitempty"`
	Items   []*UserQueryResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
	// example:
	//
	// 9YN+jxa7PcxbNUTISeKjEw==
	PageToken *string `json:"page_token,omitempty" xml:"page_token,omitempty"`
	// example:
	//
	// 0
	Total *int64 `json:"total,omitempty" xml:"total,omitempty"`
}

func (s UserQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s UserQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *UserQueryResponseBodyModule) SetHasMore(v bool) *UserQueryResponseBodyModule {
	s.HasMore = &v
	return s
}

func (s *UserQueryResponseBodyModule) SetItems(v []*UserQueryResponseBodyModuleItems) *UserQueryResponseBodyModule {
	s.Items = v
	return s
}

func (s *UserQueryResponseBodyModule) SetPageToken(v string) *UserQueryResponseBodyModule {
	s.PageToken = &v
	return s
}

func (s *UserQueryResponseBodyModule) SetTotal(v int64) *UserQueryResponseBodyModule {
	s.Total = &v
	return s
}

type UserQueryResponseBodyModuleItems struct {
	EmployeeNick *string `json:"employee_nick,omitempty" xml:"employee_nick,omitempty"`
	// example:
	//
	// 0
	LeaveStatus *int32 `json:"leave_status,omitempty" xml:"leave_status,omitempty"`
	// example:
	//
	// 123
	ThirdPartEmployeeId *string `json:"third_part_employee_id,omitempty" xml:"third_part_employee_id,omitempty"`
	// example:
	//
	// 001
	ThirdPartJobNo *string `json:"third_part_job_no,omitempty" xml:"third_part_job_no,omitempty"`
}

func (s UserQueryResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s UserQueryResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *UserQueryResponseBodyModuleItems) SetEmployeeNick(v string) *UserQueryResponseBodyModuleItems {
	s.EmployeeNick = &v
	return s
}

func (s *UserQueryResponseBodyModuleItems) SetLeaveStatus(v int32) *UserQueryResponseBodyModuleItems {
	s.LeaveStatus = &v
	return s
}

func (s *UserQueryResponseBodyModuleItems) SetThirdPartEmployeeId(v string) *UserQueryResponseBodyModuleItems {
	s.ThirdPartEmployeeId = &v
	return s
}

func (s *UserQueryResponseBodyModuleItems) SetThirdPartJobNo(v string) *UserQueryResponseBodyModuleItems {
	s.ThirdPartJobNo = &v
	return s
}

type UserQueryResponse struct {
	Headers    map[string]*string     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UserQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UserQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s UserQueryResponse) GoString() string {
	return s.String()
}

func (s *UserQueryResponse) SetHeaders(v map[string]*string) *UserQueryResponse {
	s.Headers = v
	return s
}

func (s *UserQueryResponse) SetStatusCode(v int32) *UserQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *UserQueryResponse) SetBody(v *UserQueryResponseBody) *UserQueryResponse {
	s.Body = v
	return s
}

type VatInvoiceScanQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s VatInvoiceScanQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s VatInvoiceScanQueryHeaders) GoString() string {
	return s.String()
}

func (s *VatInvoiceScanQueryHeaders) SetCommonHeaders(v map[string]*string) *VatInvoiceScanQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *VatInvoiceScanQueryHeaders) SetXAcsBtripSoCorpToken(v string) *VatInvoiceScanQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type VatInvoiceScanQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 2022-12-01
	BillDate *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
	// example:
	//
	// 123
	BillId *int64 `json:"bill_id,omitempty" xml:"bill_id,omitempty"`
	// example:
	//
	// 456
	InvoiceSubTaskId *int64 `json:"invoice_sub_task_id,omitempty" xml:"invoice_sub_task_id,omitempty"`
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
}

func (s VatInvoiceScanQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s VatInvoiceScanQueryRequest) GoString() string {
	return s.String()
}

func (s *VatInvoiceScanQueryRequest) SetBillDate(v string) *VatInvoiceScanQueryRequest {
	s.BillDate = &v
	return s
}

func (s *VatInvoiceScanQueryRequest) SetBillId(v int64) *VatInvoiceScanQueryRequest {
	s.BillId = &v
	return s
}

func (s *VatInvoiceScanQueryRequest) SetInvoiceSubTaskId(v int64) *VatInvoiceScanQueryRequest {
	s.InvoiceSubTaskId = &v
	return s
}

func (s *VatInvoiceScanQueryRequest) SetPageNo(v int32) *VatInvoiceScanQueryRequest {
	s.PageNo = &v
	return s
}

func (s *VatInvoiceScanQueryRequest) SetPageSize(v int32) *VatInvoiceScanQueryRequest {
	s.PageSize = &v
	return s
}

type VatInvoiceScanQueryResponseBody struct {
	// example:
	//
	// 200
	Code    *string                                `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                `json:"message,omitempty" xml:"message,omitempty"`
	Module  *VatInvoiceScanQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Struct"`
	// requestId
	//
	// example:
	//
	// C61ECFF6-606B-5F66-B81D-D77369043A5F
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210e842b16611337974412836dae27
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s VatInvoiceScanQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s VatInvoiceScanQueryResponseBody) GoString() string {
	return s.String()
}

func (s *VatInvoiceScanQueryResponseBody) SetCode(v string) *VatInvoiceScanQueryResponseBody {
	s.Code = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBody) SetMessage(v string) *VatInvoiceScanQueryResponseBody {
	s.Message = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBody) SetModule(v *VatInvoiceScanQueryResponseBodyModule) *VatInvoiceScanQueryResponseBody {
	s.Module = v
	return s
}

func (s *VatInvoiceScanQueryResponseBody) SetRequestId(v string) *VatInvoiceScanQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBody) SetSuccess(v bool) *VatInvoiceScanQueryResponseBody {
	s.Success = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBody) SetTraceId(v string) *VatInvoiceScanQueryResponseBody {
	s.TraceId = &v
	return s
}

type VatInvoiceScanQueryResponseBodyModule struct {
	Items []*VatInvoiceScanQueryResponseBodyModuleItems `json:"items,omitempty" xml:"items,omitempty" type:"Repeated"`
	// example:
	//
	// 1
	PageNo *int32 `json:"page_no,omitempty" xml:"page_no,omitempty"`
	// example:
	//
	// 20
	PageSize *int32 `json:"page_size,omitempty" xml:"page_size,omitempty"`
	// example:
	//
	// 2
	TotalPage *int32 `json:"total_page,omitempty" xml:"total_page,omitempty"`
	// example:
	//
	// 30
	TotalSize *int32 `json:"total_size,omitempty" xml:"total_size,omitempty"`
}

func (s VatInvoiceScanQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s VatInvoiceScanQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *VatInvoiceScanQueryResponseBodyModule) SetItems(v []*VatInvoiceScanQueryResponseBodyModuleItems) *VatInvoiceScanQueryResponseBodyModule {
	s.Items = v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModule) SetPageNo(v int32) *VatInvoiceScanQueryResponseBodyModule {
	s.PageNo = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModule) SetPageSize(v int32) *VatInvoiceScanQueryResponseBodyModule {
	s.PageSize = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModule) SetTotalPage(v int32) *VatInvoiceScanQueryResponseBodyModule {
	s.TotalPage = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModule) SetTotalSize(v int32) *VatInvoiceScanQueryResponseBodyModule {
	s.TotalSize = &v
	return s
}

type VatInvoiceScanQueryResponseBodyModuleItems struct {
	// example:
	//
	// 20
	AmountWithTax *string `json:"amount_with_tax,omitempty" xml:"amount_with_tax,omitempty"`
	// example:
	//
	// 18.87
	AmountWithoutTax *string `json:"amount_without_tax,omitempty" xml:"amount_without_tax,omitempty"`
	// example:
	//
	// 2022-12-01
	BillDate *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
	// example:
	//
	// 07122942791187744475
	CheckCode *string `json:"check_code,omitempty" xml:"check_code,omitempty"`
	Drawer    *string `json:"drawer,omitempty" xml:"drawer,omitempty"`
	// example:
	//
	// 60
	Id *string `json:"id,omitempty" xml:"id,omitempty"`
	// example:
	//
	// 3300111303
	InvoiceCode *string `json:"invoice_code,omitempty" xml:"invoice_code,omitempty"`
	// example:
	//
	// 2022-12-01
	InvoiceDay      *string                                                     `json:"invoice_day,omitempty" xml:"invoice_day,omitempty"`
	InvoiceDetail   *string                                                     `json:"invoice_detail,omitempty" xml:"invoice_detail,omitempty"`
	InvoiceDetails  []*VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails `json:"invoice_details,omitempty" xml:"invoice_details,omitempty" type:"Repeated"`
	InvoiceLocation *string                                                     `json:"invoice_location,omitempty" xml:"invoice_location,omitempty"`
	// example:
	//
	// 24021111
	InvoiceNo *string `json:"invoice_no,omitempty" xml:"invoice_no,omitempty"`
	// example:
	//
	// 123
	InvoiceSubTaskId *int64 `json:"invoice_sub_task_id,omitempty" xml:"invoice_sub_task_id,omitempty"`
	// example:
	//
	// 2
	InvoiceType     *int32  `json:"invoice_type,omitempty" xml:"invoice_type,omitempty"`
	InvoiceTypeDesc *string `json:"invoice_type_desc,omitempty" xml:"invoice_type_desc,omitempty"`
	// 机器码
	//
	// example:
	//
	// 661619906841
	MachineCode *string `json:"machine_code,omitempty" xml:"machine_code,omitempty"`
	OfdOssUrl   *string `json:"ofd_oss_url,omitempty" xml:"ofd_oss_url,omitempty"`
	// example:
	//
	// https://www.testurl.com
	OssUrl *string `json:"oss_url,omitempty" xml:"oss_url,omitempty"`
	// example:
	//
	// <87*>>53>5023>-446>/4+83/5	- *>5/81<75/1931>4>>
	PasswordArea             *string `json:"password_area,omitempty" xml:"password_area,omitempty"`
	PdfOssUrl                *string `json:"pdf_oss_url,omitempty" xml:"pdf_oss_url,omitempty"`
	PurchaserBankAccountInfo *string `json:"purchaser_bank_account_info,omitempty" xml:"purchaser_bank_account_info,omitempty"`
	PurchaserContactInfo     *string `json:"purchaser_contact_info,omitempty" xml:"purchaser_contact_info,omitempty"`
	PurchaserName            *string `json:"purchaser_name,omitempty" xml:"purchaser_name,omitempty"`
	// example:
	//
	// 91441111111111111S
	PurchaserTaxNo        *string `json:"purchaser_tax_no,omitempty" xml:"purchaser_tax_no,omitempty"`
	Recipient             *string `json:"recipient,omitempty" xml:"recipient,omitempty"`
	Remarks               *string `json:"remarks,omitempty" xml:"remarks,omitempty"`
	Reviewer              *string `json:"reviewer,omitempty" xml:"reviewer,omitempty"`
	SellerBankAccountInfo *string `json:"seller_bank_account_info,omitempty" xml:"seller_bank_account_info,omitempty"`
	SellerContactInfo     *string `json:"seller_contact_info,omitempty" xml:"seller_contact_info,omitempty"`
	SellerName            *string `json:"seller_name,omitempty" xml:"seller_name,omitempty"`
	// example:
	//
	// 91441111111111111N
	SellerTaxNo *string `json:"seller_tax_no,omitempty" xml:"seller_tax_no,omitempty"`
	// example:
	//
	// 4475
	SmartCheckCode *string `json:"smart_check_code,omitempty" xml:"smart_check_code,omitempty"`
	// example:
	//
	// 1.13
	TaxAmount *string `json:"tax_amount,omitempty" xml:"tax_amount,omitempty"`
	// example:
	//
	// 6%
	TaxRate            *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	TotalAmountInWords *string `json:"total_amount_in_words,omitempty" xml:"total_amount_in_words,omitempty"`
	XmlOssUrl          *string `json:"xml_oss_url,omitempty" xml:"xml_oss_url,omitempty"`
}

func (s VatInvoiceScanQueryResponseBodyModuleItems) String() string {
	return tea.Prettify(s)
}

func (s VatInvoiceScanQueryResponseBodyModuleItems) GoString() string {
	return s.String()
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetAmountWithTax(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.AmountWithTax = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetAmountWithoutTax(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.AmountWithoutTax = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetBillDate(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.BillDate = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetCheckCode(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.CheckCode = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetDrawer(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.Drawer = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetId(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.Id = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetInvoiceCode(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceCode = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetInvoiceDay(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceDay = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetInvoiceDetail(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceDetail = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetInvoiceDetails(v []*VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceDetails = v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetInvoiceLocation(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceLocation = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetInvoiceNo(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceNo = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetInvoiceSubTaskId(v int64) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceSubTaskId = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetInvoiceType(v int32) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceType = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetInvoiceTypeDesc(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.InvoiceTypeDesc = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetMachineCode(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.MachineCode = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetOfdOssUrl(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.OfdOssUrl = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetOssUrl(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.OssUrl = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetPasswordArea(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.PasswordArea = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetPdfOssUrl(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.PdfOssUrl = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetPurchaserBankAccountInfo(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.PurchaserBankAccountInfo = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetPurchaserContactInfo(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.PurchaserContactInfo = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetPurchaserName(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.PurchaserName = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetPurchaserTaxNo(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.PurchaserTaxNo = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetRecipient(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.Recipient = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetRemarks(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.Remarks = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetReviewer(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.Reviewer = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetSellerBankAccountInfo(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.SellerBankAccountInfo = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetSellerContactInfo(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.SellerContactInfo = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetSellerName(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.SellerName = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetSellerTaxNo(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.SellerTaxNo = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetSmartCheckCode(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.SmartCheckCode = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetTaxAmount(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.TaxAmount = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetTaxRate(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.TaxRate = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetTotalAmountInWords(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.TotalAmountInWords = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItems) SetXmlOssUrl(v string) *VatInvoiceScanQueryResponseBodyModuleItems {
	s.XmlOssUrl = &v
	return s
}

type VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails struct {
	// example:
	//
	// 75.21
	Amount *string `json:"amount,omitempty" xml:"amount,omitempty"`
	// 行号
	//
	// example:
	//
	// 0
	Index    *string `json:"index,omitempty" xml:"index,omitempty"`
	ItemName *string `json:"item_name,omitempty" xml:"item_name,omitempty"`
	// example:
	//
	// 1
	Quantity *string `json:"quantity,omitempty" xml:"quantity,omitempty"`
	// example:
	//
	// 66PT11230069
	Specification *string `json:"specification,omitempty" xml:"specification,omitempty"`
	// example:
	//
	// 12.79
	Tax *string `json:"tax,omitempty" xml:"tax,omitempty"`
	// example:
	//
	// 17%
	TaxRate *string `json:"tax_rate,omitempty" xml:"tax_rate,omitempty"`
	Unit    *string `json:"unit,omitempty" xml:"unit,omitempty"`
	// example:
	//
	// 75.21
	UnitPrice *string `json:"unit_price,omitempty" xml:"unit_price,omitempty"`
}

func (s VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) String() string {
	return tea.Prettify(s)
}

func (s VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) GoString() string {
	return s.String()
}

func (s *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetAmount(v string) *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Amount = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetIndex(v string) *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Index = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetItemName(v string) *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.ItemName = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetQuantity(v string) *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Quantity = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetSpecification(v string) *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Specification = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetTax(v string) *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Tax = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetTaxRate(v string) *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.TaxRate = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetUnit(v string) *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.Unit = &v
	return s
}

func (s *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails) SetUnitPrice(v string) *VatInvoiceScanQueryResponseBodyModuleItemsInvoiceDetails {
	s.UnitPrice = &v
	return s
}

type VatInvoiceScanQueryResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *VatInvoiceScanQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s VatInvoiceScanQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s VatInvoiceScanQueryResponse) GoString() string {
	return s.String()
}

func (s *VatInvoiceScanQueryResponse) SetHeaders(v map[string]*string) *VatInvoiceScanQueryResponse {
	s.Headers = v
	return s
}

func (s *VatInvoiceScanQueryResponse) SetStatusCode(v int32) *VatInvoiceScanQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *VatInvoiceScanQueryResponse) SetBody(v *VatInvoiceScanQueryResponseBody) *VatInvoiceScanQueryResponse {
	s.Body = v
	return s
}

type WaitApplyInvoiceTaskDetailQueryHeaders struct {
	CommonHeaders map[string]*string `json:"commonHeaders,omitempty" xml:"commonHeaders,omitempty"`
	// example:
	//
	// feth00jqwls
	XAcsBtripSoCorpToken *string `json:"x-acs-btrip-so-corp-token,omitempty" xml:"x-acs-btrip-so-corp-token,omitempty"`
}

func (s WaitApplyInvoiceTaskDetailQueryHeaders) String() string {
	return tea.Prettify(s)
}

func (s WaitApplyInvoiceTaskDetailQueryHeaders) GoString() string {
	return s.String()
}

func (s *WaitApplyInvoiceTaskDetailQueryHeaders) SetCommonHeaders(v map[string]*string) *WaitApplyInvoiceTaskDetailQueryHeaders {
	s.CommonHeaders = v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryHeaders) SetXAcsBtripSoCorpToken(v string) *WaitApplyInvoiceTaskDetailQueryHeaders {
	s.XAcsBtripSoCorpToken = &v
	return s
}

type WaitApplyInvoiceTaskDetailQueryRequest struct {
	// This parameter is required.
	//
	// example:
	//
	// 2022-12-01
	BillDate *string `json:"bill_date,omitempty" xml:"bill_date,omitempty"`
}

func (s WaitApplyInvoiceTaskDetailQueryRequest) String() string {
	return tea.Prettify(s)
}

func (s WaitApplyInvoiceTaskDetailQueryRequest) GoString() string {
	return s.String()
}

func (s *WaitApplyInvoiceTaskDetailQueryRequest) SetBillDate(v string) *WaitApplyInvoiceTaskDetailQueryRequest {
	s.BillDate = &v
	return s
}

type WaitApplyInvoiceTaskDetailQueryResponseBody struct {
	// example:
	//
	// 200
	Code    *string                                              `json:"code,omitempty" xml:"code,omitempty"`
	Message *string                                              `json:"message,omitempty" xml:"message,omitempty"`
	Module  []*WaitApplyInvoiceTaskDetailQueryResponseBodyModule `json:"module,omitempty" xml:"module,omitempty" type:"Repeated"`
	// requestId
	//
	// example:
	//
	// 407543AF-2BD9-5890-BD92-9D1AB7218B27
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
	// traceId
	//
	// example:
	//
	// 210f079e16603757182131635d866a
	TraceId *string `json:"traceId,omitempty" xml:"traceId,omitempty"`
}

func (s WaitApplyInvoiceTaskDetailQueryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s WaitApplyInvoiceTaskDetailQueryResponseBody) GoString() string {
	return s.String()
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBody) SetCode(v string) *WaitApplyInvoiceTaskDetailQueryResponseBody {
	s.Code = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBody) SetMessage(v string) *WaitApplyInvoiceTaskDetailQueryResponseBody {
	s.Message = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBody) SetModule(v []*WaitApplyInvoiceTaskDetailQueryResponseBodyModule) *WaitApplyInvoiceTaskDetailQueryResponseBody {
	s.Module = v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBody) SetRequestId(v string) *WaitApplyInvoiceTaskDetailQueryResponseBody {
	s.RequestId = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBody) SetSuccess(v bool) *WaitApplyInvoiceTaskDetailQueryResponseBody {
	s.Success = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBody) SetTraceId(v string) *WaitApplyInvoiceTaskDetailQueryResponseBody {
	s.TraceId = &v
	return s
}

type WaitApplyInvoiceTaskDetailQueryResponseBodyModule struct {
	Contact *string `json:"contact,omitempty" xml:"contact,omitempty"`
	Email   *string `json:"email,omitempty" xml:"email,omitempty"`
	// example:
	//
	// 0
	FlightInvoiceFee *string `json:"flight_invoice_fee,omitempty" xml:"flight_invoice_fee,omitempty"`
	// example:
	//
	// 3.12
	FuPointInvoiceFee *string `json:"fu_point_invoice_fee,omitempty" xml:"fu_point_invoice_fee,omitempty"`
	// example:
	//
	// 0
	HotelNormalInvoiceFee *string `json:"hotel_normal_invoice_fee,omitempty" xml:"hotel_normal_invoice_fee,omitempty"`
	// example:
	//
	// 100
	HotelSpecialInvoiceFee *string `json:"hotel_special_invoice_fee,omitempty" xml:"hotel_special_invoice_fee,omitempty"`
	// example:
	//
	// 0
	InternationalFlightInvoiceFee *string `json:"international_flight_invoice_fee,omitempty" xml:"international_flight_invoice_fee,omitempty"`
	InternationalHotelInvoiceFee  *string `json:"international_hotel_invoice_fee,omitempty" xml:"international_hotel_invoice_fee,omitempty"`
	// example:
	//
	// 123
	InvoiceThirdPartId   *string `json:"invoice_third_part_id,omitempty" xml:"invoice_third_part_id,omitempty"`
	InvoiceTitle         *string `json:"invoice_title,omitempty" xml:"invoice_title,omitempty"`
	MailAddress          *string `json:"mail_address,omitempty" xml:"mail_address,omitempty"`
	MailCity             *string `json:"mail_city,omitempty" xml:"mail_city,omitempty"`
	MailFullAddress      *string `json:"mail_full_address,omitempty" xml:"mail_full_address,omitempty"`
	MailProvince         *string `json:"mail_province,omitempty" xml:"mail_province,omitempty"`
	MealNormalInvoiceFee *string `json:"meal_normal_invoice_fee,omitempty" xml:"meal_normal_invoice_fee,omitempty"`
	// example:
	//
	// 0
	PenaltyFee *string `json:"penalty_fee,omitempty" xml:"penalty_fee,omitempty"`
	Remark     *string `json:"remark,omitempty" xml:"remark,omitempty"`
	// example:
	//
	// 1.02
	ServiceFee *string `json:"service_fee,omitempty" xml:"service_fee,omitempty"`
	// example:
	//
	// 1234567890
	Telephone                          *string `json:"telephone,omitempty" xml:"telephone,omitempty"`
	TrainAccelerationPackageInvoiceFee *string `json:"train_acceleration_package_invoice_fee,omitempty" xml:"train_acceleration_package_invoice_fee,omitempty"`
	// example:
	//
	// 0
	TrainInvoiceFee *string `json:"train_invoice_fee,omitempty" xml:"train_invoice_fee,omitempty"`
	// example:
	//
	// 100
	VehicleInvoiceFee *string `json:"vehicle_invoice_fee,omitempty" xml:"vehicle_invoice_fee,omitempty"`
}

func (s WaitApplyInvoiceTaskDetailQueryResponseBodyModule) String() string {
	return tea.Prettify(s)
}

func (s WaitApplyInvoiceTaskDetailQueryResponseBodyModule) GoString() string {
	return s.String()
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetContact(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.Contact = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetEmail(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.Email = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetFlightInvoiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.FlightInvoiceFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetFuPointInvoiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.FuPointInvoiceFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetHotelNormalInvoiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.HotelNormalInvoiceFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetHotelSpecialInvoiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.HotelSpecialInvoiceFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetInternationalFlightInvoiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.InternationalFlightInvoiceFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetInternationalHotelInvoiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.InternationalHotelInvoiceFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetInvoiceThirdPartId(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.InvoiceThirdPartId = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetInvoiceTitle(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.InvoiceTitle = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetMailAddress(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.MailAddress = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetMailCity(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.MailCity = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetMailFullAddress(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.MailFullAddress = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetMailProvince(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.MailProvince = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetMealNormalInvoiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.MealNormalInvoiceFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetPenaltyFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.PenaltyFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetRemark(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.Remark = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetServiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.ServiceFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetTelephone(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.Telephone = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetTrainAccelerationPackageInvoiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.TrainAccelerationPackageInvoiceFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetTrainInvoiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.TrainInvoiceFee = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponseBodyModule) SetVehicleInvoiceFee(v string) *WaitApplyInvoiceTaskDetailQueryResponseBodyModule {
	s.VehicleInvoiceFee = &v
	return s
}

type WaitApplyInvoiceTaskDetailQueryResponse struct {
	Headers    map[string]*string                           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *WaitApplyInvoiceTaskDetailQueryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s WaitApplyInvoiceTaskDetailQueryResponse) String() string {
	return tea.Prettify(s)
}

func (s WaitApplyInvoiceTaskDetailQueryResponse) GoString() string {
	return s.String()
}

func (s *WaitApplyInvoiceTaskDetailQueryResponse) SetHeaders(v map[string]*string) *WaitApplyInvoiceTaskDetailQueryResponse {
	s.Headers = v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponse) SetStatusCode(v int32) *WaitApplyInvoiceTaskDetailQueryResponse {
	s.StatusCode = &v
	return s
}

func (s *WaitApplyInvoiceTaskDetailQueryResponse) SetBody(v *WaitApplyInvoiceTaskDetailQueryResponseBody) *WaitApplyInvoiceTaskDetailQueryResponse {
	s.Body = v
	return s
}

type Client struct {
	openapi.Client
}

func NewClient(config *openapi.Config) (*Client, error) {
	client := new(Client)
	err := client.Init(config)
	return client, err
}

func (client *Client) Init(config *openapi.Config) (_err error) {
	_err = client.Client.Init(config)
	if _err != nil {
		return _err
	}
	client.EndpointRule = tea.String("")
	_err = client.CheckConfig(config)
	if _err != nil {
		return _err
	}
	client.Endpoint, _err = client.GetEndpoint(tea.String("btripopen"), client.RegionId, client.EndpointRule, client.Network, client.Suffix, client.EndpointMap, client.Endpoint)
	if _err != nil {
		return _err
	}

	return nil
}

func (client *Client) GetEndpoint(productId *string, regionId *string, endpointRule *string, network *string, suffix *string, endpointMap map[string]*string, endpoint *string) (_result *string, _err error) {
	if !tea.BoolValue(util.Empty(endpoint)) {
		_result = endpoint
		return _result, _err
	}

	if !tea.BoolValue(util.IsUnset(endpointMap)) && !tea.BoolValue(util.Empty(endpointMap[tea.StringValue(regionId)])) {
		_result = endpointMap[tea.StringValue(regionId)]
		return _result, _err
	}

	_body, _err := endpointutil.GetEndpointRules(productId, regionId, endpointRule, network, suffix)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 换取accessToken接口
//
// @param request - AccessTokenRequest
//
// @param headers - map
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return AccessTokenResponse
func (client *Client) AccessTokenWithOptions(request *AccessTokenRequest, headers map[string]*string, runtime *util.RuntimeOptions) (_result *AccessTokenResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AppSecret)) {
		query["app_secret"] = request.AppSecret
	}

	req := &openapi.OpenApiRequest{
		Headers: headers,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("AccessToken"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/btrip-open-auth/v1/access-token/action/take"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &AccessTokenResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 换取accessToken接口
//
// @param request - AccessTokenRequest
//
// @return AccessTokenResponse
func (client *Client) AccessToken(request *AccessTokenRequest) (_result *AccessTokenResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := make(map[string]*string)
	_result = &AccessTokenResponse{}
	_body, _err := client.AccessTokenWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 创建企业部门
//
// @param tmpReq - AddDepartmentRequest
//
// @param headers - AddDepartmentHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return AddDepartmentResponse
func (client *Client) AddDepartmentWithOptions(tmpReq *AddDepartmentRequest, headers *AddDepartmentHeaders, runtime *util.RuntimeOptions) (_result *AddDepartmentResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &AddDepartmentShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ManagerEmployeeIdList)) {
		request.ManagerEmployeeIdListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ManagerEmployeeIdList, tea.String("manager_employee_id_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DeptName)) {
		body["dept_name"] = request.DeptName
	}

	if !tea.BoolValue(util.IsUnset(request.ManagerEmployeeIdListShrink)) {
		body["manager_employee_id_list"] = request.ManagerEmployeeIdListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.OutDeptId)) {
		body["out_dept_id"] = request.OutDeptId
	}

	if !tea.BoolValue(util.IsUnset(request.OutDeptPid)) {
		body["out_dept_pid"] = request.OutDeptPid
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("AddDepartment"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/department/v2/add"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &AddDepartmentResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 创建企业部门
//
// @param request - AddDepartmentRequest
//
// @return AddDepartmentResponse
func (client *Client) AddDepartment(request *AddDepartmentRequest) (_result *AddDepartmentResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &AddDepartmentHeaders{}
	_result = &AddDepartmentResponse{}
	_body, _err := client.AddDepartmentWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 添加员工
//
// @param tmpReq - AddEmployeeRequest
//
// @param headers - AddEmployeeHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return AddEmployeeResponse
func (client *Client) AddEmployeeWithOptions(tmpReq *AddEmployeeRequest, headers *AddEmployeeHeaders, runtime *util.RuntimeOptions) (_result *AddEmployeeResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &AddEmployeeShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.BaseCityCodeList)) {
		request.BaseCityCodeListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.BaseCityCodeList, tea.String("base_city_code_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.CertList)) {
		request.CertListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CertList, tea.String("cert_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.CustomRoleCodeList)) {
		request.CustomRoleCodeListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CustomRoleCodeList, tea.String("custom_role_code_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.OutDeptIdList)) {
		request.OutDeptIdListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.OutDeptIdList, tea.String("out_dept_id_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Avatar)) {
		body["avatar"] = request.Avatar
	}

	if !tea.BoolValue(util.IsUnset(request.BaseCityCodeListShrink)) {
		body["base_city_code_list"] = request.BaseCityCodeListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Birthday)) {
		body["birthday"] = request.Birthday
	}

	if !tea.BoolValue(util.IsUnset(request.CertListShrink)) {
		body["cert_list"] = request.CertListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.CustomRoleCodeListShrink)) {
		body["custom_role_code_list"] = request.CustomRoleCodeListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Email)) {
		body["email"] = request.Email
	}

	if !tea.BoolValue(util.IsUnset(request.Gender)) {
		body["gender"] = request.Gender
	}

	if !tea.BoolValue(util.IsUnset(request.IsAdmin)) {
		body["is_admin"] = request.IsAdmin
	}

	if !tea.BoolValue(util.IsUnset(request.IsBoss)) {
		body["is_boss"] = request.IsBoss
	}

	if !tea.BoolValue(util.IsUnset(request.IsDeptLeader)) {
		body["is_dept_leader"] = request.IsDeptLeader
	}

	if !tea.BoolValue(util.IsUnset(request.JobNo)) {
		body["job_no"] = request.JobNo
	}

	if !tea.BoolValue(util.IsUnset(request.ManagerUserId)) {
		body["manager_user_id"] = request.ManagerUserId
	}

	if !tea.BoolValue(util.IsUnset(request.OutDeptIdListShrink)) {
		body["out_dept_id_list"] = request.OutDeptIdListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Phone)) {
		body["phone"] = request.Phone
	}

	if !tea.BoolValue(util.IsUnset(request.PositionLevel)) {
		body["position_level"] = request.PositionLevel
	}

	if !tea.BoolValue(util.IsUnset(request.RealName)) {
		body["real_name"] = request.RealName
	}

	if !tea.BoolValue(util.IsUnset(request.RealNameEn)) {
		body["real_name_en"] = request.RealNameEn
	}

	if !tea.BoolValue(util.IsUnset(request.UnionId)) {
		body["union_id"] = request.UnionId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserNick)) {
		body["user_nick"] = request.UserNick
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("AddEmployee"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/employee/v2/add"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &AddEmployeeResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 添加员工
//
// @param request - AddEmployeeRequest
//
// @return AddEmployeeResponse
func (client *Client) AddEmployee(request *AddEmployeeRequest) (_result *AddEmployeeResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &AddEmployeeHeaders{}
	_result = &AddEmployeeResponse{}
	_body, _err := client.AddEmployeeWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 批量新增企业自定义角色下人员
//
// @param tmpReq - AddEmployeesToCustomRoleRequest
//
// @param headers - AddEmployeesToCustomRoleHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return AddEmployeesToCustomRoleResponse
func (client *Client) AddEmployeesToCustomRoleWithOptions(tmpReq *AddEmployeesToCustomRoleRequest, headers *AddEmployeesToCustomRoleHeaders, runtime *util.RuntimeOptions) (_result *AddEmployeesToCustomRoleResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &AddEmployeesToCustomRoleShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.UserIdList)) {
		request.UserIdListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.UserIdList, tea.String("user_id_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RoleId)) {
		body["role_id"] = request.RoleId
	}

	if !tea.BoolValue(util.IsUnset(request.UserIdListShrink)) {
		body["user_id_list"] = request.UserIdListShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("AddEmployeesToCustomRole"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/role/v1/customRoleEmployees/add"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &AddEmployeesToCustomRoleResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 批量新增企业自定义角色下人员
//
// @param request - AddEmployeesToCustomRoleRequest
//
// @return AddEmployeesToCustomRoleResponse
func (client *Client) AddEmployeesToCustomRole(request *AddEmployeesToCustomRoleRequest) (_result *AddEmployeesToCustomRoleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &AddEmployeesToCustomRoleHeaders{}
	_result = &AddEmployeesToCustomRoleResponse{}
	_body, _err := client.AddEmployeesToCustomRoleWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 新增发票抬头适用人员
//
// @param tmpReq - AddInvoiceEntityRequest
//
// @param headers - AddInvoiceEntityHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return AddInvoiceEntityResponse
func (client *Client) AddInvoiceEntityWithOptions(tmpReq *AddInvoiceEntityRequest, headers *AddInvoiceEntityHeaders, runtime *util.RuntimeOptions) (_result *AddInvoiceEntityResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &AddInvoiceEntityShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Entities)) {
		request.EntitiesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Entities, tea.String("entities"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.EntitiesShrink)) {
		body["entities"] = request.EntitiesShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		body["third_part_id"] = request.ThirdPartId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("AddInvoiceEntity"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/entities"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &AddInvoiceEntityResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 新增发票抬头适用人员
//
// @param request - AddInvoiceEntityRequest
//
// @return AddInvoiceEntityResponse
func (client *Client) AddInvoiceEntity(request *AddInvoiceEntityRequest) (_result *AddInvoiceEntityResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &AddInvoiceEntityHeaders{}
	_result = &AddInvoiceEntityResponse{}
	_body, _err := client.AddInvoiceEntityWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 商旅功能页跳转
//
// @param request - AddressGetRequest
//
// @param headers - AddressGetHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return AddressGetResponse
func (client *Client) AddressGetWithOptions(request *AddressGetRequest, headers *AddressGetHeaders, runtime *util.RuntimeOptions) (_result *AddressGetResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ActionType)) {
		query["action_type"] = request.ActionType
	}

	if !tea.BoolValue(util.IsUnset(request.ArrCityCode)) {
		query["arr_city_code"] = request.ArrCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.ArrCityName)) {
		query["arr_city_name"] = request.ArrCityName
	}

	if !tea.BoolValue(util.IsUnset(request.CarScenesCode)) {
		query["car_scenes_code"] = request.CarScenesCode
	}

	if !tea.BoolValue(util.IsUnset(request.DepCityCode)) {
		query["dep_city_code"] = request.DepCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.DepCityName)) {
		query["dep_city_name"] = request.DepCityName
	}

	if !tea.BoolValue(util.IsUnset(request.DepDate)) {
		query["dep_date"] = request.DepDate
	}

	if !tea.BoolValue(util.IsUnset(request.ItineraryId)) {
		query["itinerary_id"] = request.ItineraryId
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_Id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.Phone)) {
		query["phone"] = request.Phone
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpId)) {
		query["sub_corp_id"] = request.SubCorpId
	}

	if !tea.BoolValue(util.IsUnset(request.TaobaoCallbackUrl)) {
		query["taobao_callback_url"] = request.TaobaoCallbackUrl
	}

	if !tea.BoolValue(util.IsUnset(request.TravelerId)) {
		query["traveler_id"] = request.TravelerId
	}

	if !tea.BoolValue(util.IsUnset(request.Type)) {
		query["type"] = request.Type
	}

	if !tea.BoolValue(util.IsUnset(request.UseBookingProxy)) {
		query["use_booking_proxy"] = request.UseBookingProxy
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("AddressGet"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/open/v1/address"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &AddressGetResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 商旅功能页跳转
//
// @param request - AddressGetRequest
//
// @return AddressGetResponse
func (client *Client) AddressGet(request *AddressGetRequest) (_result *AddressGetResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &AddressGetHeaders{}
	_result = &AddressGetResponse{}
	_body, _err := client.AddressGetWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询机场数据
//
// @param request - AirportSearchRequest
//
// @param headers - AirportSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return AirportSearchResponse
func (client *Client) AirportSearchWithOptions(request *AirportSearchRequest, headers *AirportSearchHeaders, runtime *util.RuntimeOptions) (_result *AirportSearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Keyword)) {
		query["keyword"] = request.Keyword
	}

	if !tea.BoolValue(util.IsUnset(request.Type)) {
		query["type"] = request.Type
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("AirportSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/city/v1/airport"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &AirportSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询机场数据
//
// @param request - AirportSearchRequest
//
// @return AirportSearchResponse
func (client *Client) AirportSearch(request *AirportSearchRequest) (_result *AirportSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &AirportSearchHeaders{}
	_result = &AirportSearchResponse{}
	_body, _err := client.AirportSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 全量查询商旅城市行政区划编码信息
//
// @param headers - AllBaseCityInfoQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return AllBaseCityInfoQueryResponse
func (client *Client) AllBaseCityInfoQueryWithOptions(headers *AllBaseCityInfoQueryHeaders, runtime *util.RuntimeOptions) (_result *AllBaseCityInfoQueryResponse, _err error) {
	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripAccessToken)) {
		realHeaders["x-acs-btrip-access-token"] = util.ToJSONString(headers.XAcsBtripAccessToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
	}
	params := &openapi.Params{
		Action:      tea.String("AllBaseCityInfoQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/city/v1/code"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &AllBaseCityInfoQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 全量查询商旅城市行政区划编码信息
//
// @return AllBaseCityInfoQueryResponse
func (client *Client) AllBaseCityInfoQuery() (_result *AllBaseCityInfoQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &AllBaseCityInfoQueryHeaders{}
	_result = &AllBaseCityInfoQueryResponse{}
	_body, _err := client.AllBaseCityInfoQueryWithOptions(headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 新建出差审批单
//
// @param tmpReq - ApplyAddRequest
//
// @param headers - ApplyAddHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ApplyAddResponse
func (client *Client) ApplyAddWithOptions(tmpReq *ApplyAddRequest, headers *ApplyAddHeaders, runtime *util.RuntimeOptions) (_result *ApplyAddResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ApplyAddShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.CarRule)) {
		request.CarRuleShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CarRule, tea.String("car_rule"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.DefaultStandard)) {
		request.DefaultStandardShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.DefaultStandard, tea.String("default_standard"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ExternalTravelerList)) {
		request.ExternalTravelerListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ExternalTravelerList, tea.String("external_traveler_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ExternalTravelerStandard)) {
		request.ExternalTravelerStandardShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ExternalTravelerStandard, tea.String("external_traveler_standard"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.HotelShare)) {
		request.HotelShareShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.HotelShare, tea.String("hotel_share"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ItineraryList)) {
		request.ItineraryListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ItineraryList, tea.String("itinerary_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ItinerarySetList)) {
		request.ItinerarySetListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ItinerarySetList, tea.String("itinerary_set_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.TravelerList)) {
		request.TravelerListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.TravelerList, tea.String("traveler_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.TravelerStandard)) {
		request.TravelerStandardShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.TravelerStandard, tea.String("traveler_standard"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Budget)) {
		body["budget"] = request.Budget
	}

	if !tea.BoolValue(util.IsUnset(request.BudgetMerge)) {
		body["budget_merge"] = request.BudgetMerge
	}

	if !tea.BoolValue(util.IsUnset(request.CarRuleShrink)) {
		body["car_rule"] = request.CarRuleShrink
	}

	if !tea.BoolValue(util.IsUnset(request.CorpName)) {
		body["corp_name"] = request.CorpName
	}

	if !tea.BoolValue(util.IsUnset(request.DefaultStandardShrink)) {
		body["default_standard"] = request.DefaultStandardShrink
	}

	if !tea.BoolValue(util.IsUnset(request.DepartId)) {
		body["depart_id"] = request.DepartId
	}

	if !tea.BoolValue(util.IsUnset(request.DepartName)) {
		body["depart_name"] = request.DepartName
	}

	if !tea.BoolValue(util.IsUnset(request.ExtendField)) {
		body["extend_field"] = request.ExtendField
	}

	if !tea.BoolValue(util.IsUnset(request.ExternalTravelerListShrink)) {
		body["external_traveler_list"] = request.ExternalTravelerListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ExternalTravelerStandardShrink)) {
		body["external_traveler_standard"] = request.ExternalTravelerStandardShrink
	}

	if !tea.BoolValue(util.IsUnset(request.FlightBudget)) {
		body["flight_budget"] = request.FlightBudget
	}

	if !tea.BoolValue(util.IsUnset(request.HotelBudget)) {
		body["hotel_budget"] = request.HotelBudget
	}

	if !tea.BoolValue(util.IsUnset(request.HotelShareShrink)) {
		body["hotel_share"] = request.HotelShareShrink
	}

	if !tea.BoolValue(util.IsUnset(request.InternationalFlightCabins)) {
		body["international_flight_cabins"] = request.InternationalFlightCabins
	}

	if !tea.BoolValue(util.IsUnset(request.ItineraryListShrink)) {
		body["itinerary_list"] = request.ItineraryListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ItineraryRule)) {
		body["itinerary_rule"] = request.ItineraryRule
	}

	if !tea.BoolValue(util.IsUnset(request.ItinerarySetListShrink)) {
		body["itinerary_set_list"] = request.ItinerarySetListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.LimitTraveler)) {
		body["limit_traveler"] = request.LimitTraveler
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentDepartmentId)) {
		body["payment_department_id"] = request.PaymentDepartmentId
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentDepartmentName)) {
		body["payment_department_name"] = request.PaymentDepartmentName
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		body["status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpId)) {
		body["sub_corp_id"] = request.SubCorpId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartApplyId)) {
		body["thirdpart_apply_id"] = request.ThirdpartApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartBusinessId)) {
		body["thirdpart_business_id"] = request.ThirdpartBusinessId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartDepartId)) {
		body["thirdpart_depart_id"] = request.ThirdpartDepartId
	}

	if !tea.BoolValue(util.IsUnset(request.TogetherBookRule)) {
		body["together_book_rule"] = request.TogetherBookRule
	}

	if !tea.BoolValue(util.IsUnset(request.TrainBudget)) {
		body["train_budget"] = request.TrainBudget
	}

	if !tea.BoolValue(util.IsUnset(request.TravelerListShrink)) {
		body["traveler_list"] = request.TravelerListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.TravelerStandardShrink)) {
		body["traveler_standard"] = request.TravelerStandardShrink
	}

	if !tea.BoolValue(util.IsUnset(request.TripCause)) {
		body["trip_cause"] = request.TripCause
	}

	if !tea.BoolValue(util.IsUnset(request.TripDay)) {
		body["trip_day"] = request.TripDay
	}

	if !tea.BoolValue(util.IsUnset(request.TripTitle)) {
		body["trip_title"] = request.TripTitle
	}

	if !tea.BoolValue(util.IsUnset(request.Type)) {
		body["type"] = request.Type
	}

	if !tea.BoolValue(util.IsUnset(request.UnionNo)) {
		body["union_no"] = request.UnionNo
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		body["user_name"] = request.UserName
	}

	if !tea.BoolValue(util.IsUnset(request.VehicleBudget)) {
		body["vehicle_budget"] = request.VehicleBudget
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ApplyAdd"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/biz-trip"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ApplyAddResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 新建出差审批单
//
// @param request - ApplyAddRequest
//
// @return ApplyAddResponse
func (client *Client) ApplyAdd(request *ApplyAddRequest) (_result *ApplyAddResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ApplyAddHeaders{}
	_result = &ApplyAddResponse{}
	_body, _err := client.ApplyAddWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 更新出差审批单（状态）
//
// @param request - ApplyApproveRequest
//
// @param headers - ApplyApproveHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ApplyApproveResponse
func (client *Client) ApplyApproveWithOptions(request *ApplyApproveRequest, headers *ApplyApproveHeaders, runtime *util.RuntimeOptions) (_result *ApplyApproveResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		body["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.Note)) {
		body["note"] = request.Note
	}

	if !tea.BoolValue(util.IsUnset(request.OperateTime)) {
		body["operate_time"] = request.OperateTime
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		body["status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpId)) {
		body["sub_corp_id"] = request.SubCorpId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		body["user_name"] = request.UserName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ApplyApprove"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/biz-trip/action/approve"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ApplyApproveResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 更新出差审批单（状态）
//
// @param request - ApplyApproveRequest
//
// @return ApplyApproveResponse
func (client *Client) ApplyApprove(request *ApplyApproveRequest) (_result *ApplyApproveResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ApplyApproveHeaders{}
	_result = &ApplyApproveResponse{}
	_body, _err := client.ApplyApproveWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 外部审批节点状态同步
//
// @param tmpReq - ApplyExternalNodeStatusUpdateRequest
//
// @param headers - ApplyExternalNodeStatusUpdateHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ApplyExternalNodeStatusUpdateResponse
func (client *Client) ApplyExternalNodeStatusUpdateWithOptions(tmpReq *ApplyExternalNodeStatusUpdateRequest, headers *ApplyExternalNodeStatusUpdateHeaders, runtime *util.RuntimeOptions) (_result *ApplyExternalNodeStatusUpdateResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ApplyExternalNodeStatusUpdateShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.OperationRecords)) {
		request.OperationRecordsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.OperationRecords, tea.String("operation_records"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.NodeId)) {
		body["node_id"] = request.NodeId
	}

	if !tea.BoolValue(util.IsUnset(request.OperationRecordsShrink)) {
		body["operation_records"] = request.OperationRecordsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ProcessActionResult)) {
		body["process_action_result"] = request.ProcessActionResult
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ApplyExternalNodeStatusUpdate"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/external-nodes/action/status-update"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ApplyExternalNodeStatusUpdateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 外部审批节点状态同步
//
// @param request - ApplyExternalNodeStatusUpdateRequest
//
// @return ApplyExternalNodeStatusUpdateResponse
func (client *Client) ApplyExternalNodeStatusUpdate(request *ApplyExternalNodeStatusUpdateRequest) (_result *ApplyExternalNodeStatusUpdateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ApplyExternalNodeStatusUpdateHeaders{}
	_result = &ApplyExternalNodeStatusUpdateResponse{}
	_body, _err := client.ApplyExternalNodeStatusUpdateWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 申请发票
//
// @param tmpReq - ApplyInvoiceTaskRequest
//
// @param headers - ApplyInvoiceTaskHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ApplyInvoiceTaskResponse
func (client *Client) ApplyInvoiceTaskWithOptions(tmpReq *ApplyInvoiceTaskRequest, headers *ApplyInvoiceTaskHeaders, runtime *util.RuntimeOptions) (_result *ApplyInvoiceTaskResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ApplyInvoiceTaskShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.InvoiceTaskList)) {
		request.InvoiceTaskListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.InvoiceTaskList, tea.String("invoice_task_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BillDate)) {
		body["bill_date"] = request.BillDate
	}

	if !tea.BoolValue(util.IsUnset(request.InvoiceTaskListShrink)) {
		body["invoice_task_list"] = request.InvoiceTaskListShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ApplyInvoiceTask"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/apply-invoice-task"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ApplyInvoiceTaskResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 申请发票
//
// @param request - ApplyInvoiceTaskRequest
//
// @return ApplyInvoiceTaskResponse
func (client *Client) ApplyInvoiceTask(request *ApplyInvoiceTaskRequest) (_result *ApplyInvoiceTaskResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ApplyInvoiceTaskHeaders{}
	_result = &ApplyInvoiceTaskResponse{}
	_body, _err := client.ApplyInvoiceTaskWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询出差审批单列表
//
// @param request - ApplyListQueryRequest
//
// @param headers - ApplyListQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ApplyListQueryResponse
func (client *Client) ApplyListQueryWithOptions(request *ApplyListQueryRequest, headers *ApplyListQueryHeaders, runtime *util.RuntimeOptions) (_result *ApplyListQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AllApply)) {
		query["all_apply"] = request.AllApply
	}

	if !tea.BoolValue(util.IsUnset(request.DepartId)) {
		query["depart_id"] = request.DepartId
	}

	if !tea.BoolValue(util.IsUnset(request.EndTime)) {
		query["end_time"] = request.EndTime
	}

	if !tea.BoolValue(util.IsUnset(request.GmtModified)) {
		query["gmt_modified"] = request.GmtModified
	}

	if !tea.BoolValue(util.IsUnset(request.OnlyShangLvApply)) {
		query["only_shang_lv_apply"] = request.OnlyShangLvApply
	}

	if !tea.BoolValue(util.IsUnset(request.Page)) {
		query["page"] = request.Page
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.StartTime)) {
		query["start_time"] = request.StartTime
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpId)) {
		query["sub_corp_id"] = request.SubCorpId
	}

	if !tea.BoolValue(util.IsUnset(request.Type)) {
		query["type"] = request.Type
	}

	if !tea.BoolValue(util.IsUnset(request.UnionNo)) {
		query["union_no"] = request.UnionNo
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ApplyListQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/biz-trips"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &ApplyListQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询出差审批单列表
//
// @param request - ApplyListQueryRequest
//
// @return ApplyListQueryResponse
func (client *Client) ApplyListQuery(request *ApplyListQueryRequest) (_result *ApplyListQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ApplyListQueryHeaders{}
	_result = &ApplyListQueryResponse{}
	_body, _err := client.ApplyListQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 更新出差审批单
//
// @param tmpReq - ApplyModifyRequest
//
// @param headers - ApplyModifyHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ApplyModifyResponse
func (client *Client) ApplyModifyWithOptions(tmpReq *ApplyModifyRequest, headers *ApplyModifyHeaders, runtime *util.RuntimeOptions) (_result *ApplyModifyResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ApplyModifyShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.CarRule)) {
		request.CarRuleShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CarRule, tea.String("car_rule"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.DefaultStandard)) {
		request.DefaultStandardShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.DefaultStandard, tea.String("default_standard"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ExternalTravelerList)) {
		request.ExternalTravelerListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ExternalTravelerList, tea.String("external_traveler_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ExternalTravelerStandard)) {
		request.ExternalTravelerStandardShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ExternalTravelerStandard, tea.String("external_traveler_standard"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.HotelShare)) {
		request.HotelShareShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.HotelShare, tea.String("hotel_share"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ItineraryList)) {
		request.ItineraryListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ItineraryList, tea.String("itinerary_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ItinerarySetList)) {
		request.ItinerarySetListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ItinerarySetList, tea.String("itinerary_set_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.TravelerList)) {
		request.TravelerListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.TravelerList, tea.String("traveler_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.TravelerStandard)) {
		request.TravelerStandardShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.TravelerStandard, tea.String("traveler_standard"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Budget)) {
		body["budget"] = request.Budget
	}

	if !tea.BoolValue(util.IsUnset(request.BudgetMerge)) {
		body["budget_merge"] = request.BudgetMerge
	}

	if !tea.BoolValue(util.IsUnset(request.CarRuleShrink)) {
		body["car_rule"] = request.CarRuleShrink
	}

	if !tea.BoolValue(util.IsUnset(request.CorpName)) {
		body["corp_name"] = request.CorpName
	}

	if !tea.BoolValue(util.IsUnset(request.DefaultStandardShrink)) {
		body["default_standard"] = request.DefaultStandardShrink
	}

	if !tea.BoolValue(util.IsUnset(request.DepartId)) {
		body["depart_id"] = request.DepartId
	}

	if !tea.BoolValue(util.IsUnset(request.DepartName)) {
		body["depart_name"] = request.DepartName
	}

	if !tea.BoolValue(util.IsUnset(request.ExtendField)) {
		body["extend_field"] = request.ExtendField
	}

	if !tea.BoolValue(util.IsUnset(request.ExternalTravelerListShrink)) {
		body["external_traveler_list"] = request.ExternalTravelerListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ExternalTravelerStandardShrink)) {
		body["external_traveler_standard"] = request.ExternalTravelerStandardShrink
	}

	if !tea.BoolValue(util.IsUnset(request.FlightBudget)) {
		body["flight_budget"] = request.FlightBudget
	}

	if !tea.BoolValue(util.IsUnset(request.HotelBudget)) {
		body["hotel_budget"] = request.HotelBudget
	}

	if !tea.BoolValue(util.IsUnset(request.HotelShareShrink)) {
		body["hotel_share"] = request.HotelShareShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ItineraryListShrink)) {
		body["itinerary_list"] = request.ItineraryListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ItineraryRule)) {
		body["itinerary_rule"] = request.ItineraryRule
	}

	if !tea.BoolValue(util.IsUnset(request.ItinerarySetListShrink)) {
		body["itinerary_set_list"] = request.ItinerarySetListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.LimitTraveler)) {
		body["limit_traveler"] = request.LimitTraveler
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentDepartmentId)) {
		body["payment_department_id"] = request.PaymentDepartmentId
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentDepartmentName)) {
		body["payment_department_name"] = request.PaymentDepartmentName
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		body["status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpId)) {
		body["sub_corp_id"] = request.SubCorpId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartApplyId)) {
		body["thirdpart_apply_id"] = request.ThirdpartApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartBusinessId)) {
		body["thirdpart_business_id"] = request.ThirdpartBusinessId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartDepartId)) {
		body["thirdpart_depart_id"] = request.ThirdpartDepartId
	}

	if !tea.BoolValue(util.IsUnset(request.TogetherBookRule)) {
		body["together_book_rule"] = request.TogetherBookRule
	}

	if !tea.BoolValue(util.IsUnset(request.TrainBudget)) {
		body["train_budget"] = request.TrainBudget
	}

	if !tea.BoolValue(util.IsUnset(request.TravelerListShrink)) {
		body["traveler_list"] = request.TravelerListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.TravelerStandardShrink)) {
		body["traveler_standard"] = request.TravelerStandardShrink
	}

	if !tea.BoolValue(util.IsUnset(request.TripCause)) {
		body["trip_cause"] = request.TripCause
	}

	if !tea.BoolValue(util.IsUnset(request.TripDay)) {
		body["trip_day"] = request.TripDay
	}

	if !tea.BoolValue(util.IsUnset(request.TripTitle)) {
		body["trip_title"] = request.TripTitle
	}

	if !tea.BoolValue(util.IsUnset(request.UnionNo)) {
		body["union_no"] = request.UnionNo
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		body["user_name"] = request.UserName
	}

	if !tea.BoolValue(util.IsUnset(request.VehicleBudget)) {
		body["vehicle_budget"] = request.VehicleBudget
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ApplyModify"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/biz-trip"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ApplyModifyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 更新出差审批单
//
// @param request - ApplyModifyRequest
//
// @return ApplyModifyResponse
func (client *Client) ApplyModify(request *ApplyModifyRequest) (_result *ApplyModifyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ApplyModifyHeaders{}
	_result = &ApplyModifyResponse{}
	_body, _err := client.ApplyModifyWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询出差审批单详情
//
// @param request - ApplyQueryRequest
//
// @param headers - ApplyQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ApplyQueryResponse
func (client *Client) ApplyQueryWithOptions(request *ApplyQueryRequest, headers *ApplyQueryHeaders, runtime *util.RuntimeOptions) (_result *ApplyQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.ApplyShowId)) {
		query["apply_show_id"] = request.ApplyShowId
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpId)) {
		query["sub_corp_id"] = request.SubCorpId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartApplyId)) {
		query["thirdpart_apply_id"] = request.ThirdpartApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.Type)) {
		query["type"] = request.Type
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ApplyQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/biz-trip"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &ApplyQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询出差审批单详情
//
// @param request - ApplyQueryRequest
//
// @return ApplyQueryResponse
func (client *Client) ApplyQuery(request *ApplyQueryRequest) (_result *ApplyQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ApplyQueryHeaders{}
	_result = &ApplyQueryResponse{}
	_body, _err := client.ApplyQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 执行审批任务
//
// @param request - ApplyTripTaskExecuteRequest
//
// @param headers - ApplyTripTaskExecuteHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ApplyTripTaskExecuteResponse
func (client *Client) ApplyTripTaskExecuteWithOptions(request *ApplyTripTaskExecuteRequest, headers *ApplyTripTaskExecuteHeaders, runtime *util.RuntimeOptions) (_result *ApplyTripTaskExecuteResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ActionFrom)) {
		body["action_from"] = request.ActionFrom
	}

	if !tea.BoolValue(util.IsUnset(request.Comment)) {
		body["comment"] = request.Comment
	}

	if !tea.BoolValue(util.IsUnset(request.TaskAction)) {
		body["task_action"] = request.TaskAction
	}

	if !tea.BoolValue(util.IsUnset(request.TaskId)) {
		body["task_id"] = request.TaskId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		body["user_name"] = request.UserName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ApplyTripTaskExecute"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/trip-task/action/execute"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ApplyTripTaskExecuteResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 执行审批任务
//
// @param request - ApplyTripTaskExecuteRequest
//
// @return ApplyTripTaskExecuteResponse
func (client *Client) ApplyTripTaskExecute(request *ApplyTripTaskExecuteRequest) (_result *ApplyTripTaskExecuteResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ApplyTripTaskExecuteHeaders{}
	_result = &ApplyTripTaskExecuteResponse{}
	_body, _err := client.ApplyTripTaskExecuteWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 搜索国内/国际（港澳台）城市基础行政区划数据
//
// @param request - BaseCityInfoSearchRequest
//
// @param headers - BaseCityInfoSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return BaseCityInfoSearchResponse
func (client *Client) BaseCityInfoSearchWithOptions(request *BaseCityInfoSearchRequest, headers *BaseCityInfoSearchHeaders, runtime *util.RuntimeOptions) (_result *BaseCityInfoSearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Keyword)) {
		query["keyword"] = request.Keyword
	}

	if !tea.BoolValue(util.IsUnset(request.Region)) {
		query["region"] = request.Region
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripAccessToken)) {
		realHeaders["x-acs-btrip-access-token"] = util.ToJSONString(headers.XAcsBtripAccessToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("BaseCityInfoSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/city/v1/cities/action/search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &BaseCityInfoSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 搜索国内/国际（港澳台）城市基础行政区划数据
//
// @param request - BaseCityInfoSearchRequest
//
// @return BaseCityInfoSearchResponse
func (client *Client) BaseCityInfoSearch(request *BaseCityInfoSearchRequest) (_result *BaseCityInfoSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &BaseCityInfoSearchHeaders{}
	_result = &BaseCityInfoSearchResponse{}
	_body, _err := client.BaseCityInfoSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 商旅账单内容修改
//
// @param request - BtripBillInfoAdjustRequest
//
// @param headers - BtripBillInfoAdjustHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return BtripBillInfoAdjustResponse
func (client *Client) BtripBillInfoAdjustWithOptions(request *BtripBillInfoAdjustRequest, headers *BtripBillInfoAdjustHeaders, runtime *util.RuntimeOptions) (_result *BtripBillInfoAdjustResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.PrimaryId)) {
		body["primary_id"] = request.PrimaryId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartCostCenterId)) {
		body["third_part_cost_center_id"] = request.ThirdPartCostCenterId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartDepartmentId)) {
		body["third_part_department_id"] = request.ThirdPartDepartmentId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartInvoiceId)) {
		body["third_part_invoice_id"] = request.ThirdPartInvoiceId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartProjectId)) {
		body["third_part_project_id"] = request.ThirdPartProjectId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("BtripBillInfoAdjust"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/bill/v1/info/action/adjust"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &BtripBillInfoAdjustResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 商旅账单内容修改
//
// @param request - BtripBillInfoAdjustRequest
//
// @return BtripBillInfoAdjustResponse
func (client *Client) BtripBillInfoAdjust(request *BtripBillInfoAdjustRequest) (_result *BtripBillInfoAdjustResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &BtripBillInfoAdjustHeaders{}
	_result = &BtripBillInfoAdjustResponse{}
	_body, _err := client.BtripBillInfoAdjustWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 同步市内用车审批单
//
// @param tmpReq - CarApplyAddRequest
//
// @param headers - CarApplyAddHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CarApplyAddResponse
func (client *Client) CarApplyAddWithOptions(tmpReq *CarApplyAddRequest, headers *CarApplyAddHeaders, runtime *util.RuntimeOptions) (_result *CarApplyAddResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &CarApplyAddShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.TravelerStandard)) {
		request.TravelerStandardShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.TravelerStandard, tea.String("traveler_standard"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Cause)) {
		body["cause"] = request.Cause
	}

	if !tea.BoolValue(util.IsUnset(request.City)) {
		body["city"] = request.City
	}

	if !tea.BoolValue(util.IsUnset(request.CityCodeSet)) {
		body["city_code_set"] = request.CityCodeSet
	}

	if !tea.BoolValue(util.IsUnset(request.Date)) {
		body["date"] = request.Date
	}

	if !tea.BoolValue(util.IsUnset(request.FinishedDate)) {
		body["finished_date"] = request.FinishedDate
	}

	if !tea.BoolValue(util.IsUnset(request.ProjectCode)) {
		body["project_code"] = request.ProjectCode
	}

	if !tea.BoolValue(util.IsUnset(request.ProjectName)) {
		body["project_name"] = request.ProjectName
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		body["status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartApplyId)) {
		body["third_part_apply_id"] = request.ThirdPartApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartCostCenterId)) {
		body["third_part_cost_center_id"] = request.ThirdPartCostCenterId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartInvoiceId)) {
		body["third_part_invoice_id"] = request.ThirdPartInvoiceId
	}

	if !tea.BoolValue(util.IsUnset(request.TimesTotal)) {
		body["times_total"] = request.TimesTotal
	}

	if !tea.BoolValue(util.IsUnset(request.TimesType)) {
		body["times_type"] = request.TimesType
	}

	if !tea.BoolValue(util.IsUnset(request.TimesUsed)) {
		body["times_used"] = request.TimesUsed
	}

	if !tea.BoolValue(util.IsUnset(request.Title)) {
		body["title"] = request.Title
	}

	if !tea.BoolValue(util.IsUnset(request.TravelerStandardShrink)) {
		body["traveler_standard"] = request.TravelerStandardShrink
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CarApplyAdd"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/car"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &CarApplyAddResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 同步市内用车审批单
//
// @param request - CarApplyAddRequest
//
// @return CarApplyAddResponse
func (client *Client) CarApplyAdd(request *CarApplyAddRequest) (_result *CarApplyAddResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CarApplyAddHeaders{}
	_result = &CarApplyAddResponse{}
	_body, _err := client.CarApplyAddWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 更新市内用车审批单
//
// @param request - CarApplyModifyRequest
//
// @param headers - CarApplyModifyHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CarApplyModifyResponse
func (client *Client) CarApplyModifyWithOptions(request *CarApplyModifyRequest, headers *CarApplyModifyHeaders, runtime *util.RuntimeOptions) (_result *CarApplyModifyResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OperateTime)) {
		body["operate_time"] = request.OperateTime
	}

	if !tea.BoolValue(util.IsUnset(request.Remark)) {
		body["remark"] = request.Remark
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		body["status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartApplyId)) {
		body["third_part_apply_id"] = request.ThirdPartApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CarApplyModify"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/car"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &CarApplyModifyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 更新市内用车审批单
//
// @param request - CarApplyModifyRequest
//
// @return CarApplyModifyResponse
func (client *Client) CarApplyModify(request *CarApplyModifyRequest) (_result *CarApplyModifyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CarApplyModifyHeaders{}
	_result = &CarApplyModifyResponse{}
	_body, _err := client.CarApplyModifyWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询市内用车审批单
//
// @param request - CarApplyQueryRequest
//
// @param headers - CarApplyQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CarApplyQueryResponse
func (client *Client) CarApplyQueryWithOptions(request *CarApplyQueryRequest, headers *CarApplyQueryHeaders, runtime *util.RuntimeOptions) (_result *CarApplyQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CreatedEndAt)) {
		query["created_end_at"] = request.CreatedEndAt
	}

	if !tea.BoolValue(util.IsUnset(request.CreatedStartAt)) {
		query["created_start_at"] = request.CreatedStartAt
	}

	if !tea.BoolValue(util.IsUnset(request.PageNumber)) {
		query["page_number"] = request.PageNumber
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartApplyId)) {
		query["third_part_apply_id"] = request.ThirdPartApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CarApplyQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/car"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CarApplyQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询市内用车审批单
//
// @param request - CarApplyQueryRequest
//
// @return CarApplyQueryResponse
func (client *Client) CarApplyQuery(request *CarApplyQueryRequest) (_result *CarApplyQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CarApplyQueryHeaders{}
	_result = &CarApplyQueryResponse{}
	_body, _err := client.CarApplyQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询用车记账数据
//
// @param request - CarBillSettlementQueryRequest
//
// @param headers - CarBillSettlementQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CarBillSettlementQueryResponse
func (client *Client) CarBillSettlementQueryWithOptions(request *CarBillSettlementQueryRequest, headers *CarBillSettlementQueryHeaders, runtime *util.RuntimeOptions) (_result *CarBillSettlementQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodEnd)) {
		query["period_end"] = request.PeriodEnd
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodStart)) {
		query["period_start"] = request.PeriodStart
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CarBillSettlementQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/car/v1/bill-settlement"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CarBillSettlementQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询用车记账数据
//
// @param request - CarBillSettlementQueryRequest
//
// @return CarBillSettlementQueryResponse
func (client *Client) CarBillSettlementQuery(request *CarBillSettlementQueryRequest) (_result *CarBillSettlementQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CarBillSettlementQueryHeaders{}
	_result = &CarBillSettlementQueryResponse{}
	_body, _err := client.CarBillSettlementQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询用车订单列表
//
// @param request - CarOrderListQueryRequest
//
// @param headers - CarOrderListQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CarOrderListQueryResponse
func (client *Client) CarOrderListQueryWithOptions(request *CarOrderListQueryRequest, headers *CarOrderListQueryHeaders, runtime *util.RuntimeOptions) (_result *CarOrderListQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AllApply)) {
		query["all_apply"] = request.AllApply
	}

	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.DepartId)) {
		query["depart_id"] = request.DepartId
	}

	if !tea.BoolValue(util.IsUnset(request.EndTime)) {
		query["end_time"] = request.EndTime
	}

	if !tea.BoolValue(util.IsUnset(request.Page)) {
		query["page"] = request.Page
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.StartTime)) {
		query["start_time"] = request.StartTime
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartApplyId)) {
		query["thirdpart_apply_id"] = request.ThirdpartApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.UpdateEndTime)) {
		query["update_end_time"] = request.UpdateEndTime
	}

	if !tea.BoolValue(util.IsUnset(request.UpdateStartTime)) {
		query["update_start_time"] = request.UpdateStartTime
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CarOrderListQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/car/v1/order-list"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CarOrderListQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询用车订单列表
//
// @param request - CarOrderListQueryRequest
//
// @return CarOrderListQueryResponse
func (client *Client) CarOrderListQuery(request *CarOrderListQueryRequest) (_result *CarOrderListQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CarOrderListQueryHeaders{}
	_result = &CarOrderListQueryResponse{}
	_body, _err := client.CarOrderListQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 用车订单查询
//
// @param request - CarOrderQueryRequest
//
// @param headers - CarOrderQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CarOrderQueryResponse
func (client *Client) CarOrderQueryWithOptions(request *CarOrderQueryRequest, headers *CarOrderQueryHeaders, runtime *util.RuntimeOptions) (_result *CarOrderQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.SubOrderId)) {
		query["sub_order_id"] = request.SubOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CarOrderQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/car/v1/order"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CarOrderQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 用车订单查询
//
// @param request - CarOrderQueryRequest
//
// @return CarOrderQueryResponse
func (client *Client) CarOrderQuery(request *CarOrderQueryRequest) (_result *CarOrderQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CarOrderQueryHeaders{}
	_result = &CarOrderQueryResponse{}
	_body, _err := client.CarOrderQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询企业用车场景
//
// @param headers - CarSceneQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CarSceneQueryResponse
func (client *Client) CarSceneQueryWithOptions(headers *CarSceneQueryHeaders, runtime *util.RuntimeOptions) (_result *CarSceneQueryResponse, _err error) {
	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
	}
	params := &openapi.Params{
		Action:      tea.String("CarSceneQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/car/v1/scenes"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CarSceneQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询企业用车场景
//
// @return CarSceneQueryResponse
func (client *Client) CarSceneQuery() (_result *CarSceneQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CarSceneQueryHeaders{}
	_result = &CarSceneQueryResponse{}
	_body, _err := client.CarSceneQueryWithOptions(headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 渠道商创建企业
//
// @param request - ChannelCorpCreateRequest
//
// @param headers - ChannelCorpCreateHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ChannelCorpCreateResponse
func (client *Client) ChannelCorpCreateWithOptions(request *ChannelCorpCreateRequest, headers *ChannelCorpCreateHeaders, runtime *util.RuntimeOptions) (_result *ChannelCorpCreateResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AdministratorName)) {
		body["administrator_name"] = request.AdministratorName
	}

	if !tea.BoolValue(util.IsUnset(request.AdministratorPhone)) {
		body["administrator_phone"] = request.AdministratorPhone
	}

	if !tea.BoolValue(util.IsUnset(request.City)) {
		body["city"] = request.City
	}

	if !tea.BoolValue(util.IsUnset(request.CorpName)) {
		body["corp_name"] = request.CorpName
	}

	if !tea.BoolValue(util.IsUnset(request.Province)) {
		body["province"] = request.Province
	}

	if !tea.BoolValue(util.IsUnset(request.Scope)) {
		body["scope"] = request.Scope
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdCorpId)) {
		body["third_corp_id"] = request.ThirdCorpId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ChannelCorpCreate"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/corp/v1/channelCorps"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ChannelCorpCreateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 渠道商创建企业
//
// @param request - ChannelCorpCreateRequest
//
// @return ChannelCorpCreateResponse
func (client *Client) ChannelCorpCreate(request *ChannelCorpCreateRequest) (_result *ChannelCorpCreateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ChannelCorpCreateHeaders{}
	_result = &ChannelCorpCreateResponse{}
	_body, _err := client.ChannelCorpCreateWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询行政区划（市，区）基础数据
//
// @param request - CitySearchRequest
//
// @param headers - CitySearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CitySearchResponse
func (client *Client) CitySearchWithOptions(request *CitySearchRequest, headers *CitySearchHeaders, runtime *util.RuntimeOptions) (_result *CitySearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Keyword)) {
		query["keyword"] = request.Keyword
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CitySearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/city/v1/city"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CitySearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询行政区划（市，区）基础数据
//
// @param request - CitySearchRequest
//
// @return CitySearchResponse
func (client *Client) CitySearch(request *CitySearchRequest) (_result *CitySearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CitySearchHeaders{}
	_result = &CitySearchResponse{}
	_body, _err := client.CitySearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询退改审批信息
//
// @param request - CommonApplyQueryRequest
//
// @param headers - CommonApplyQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CommonApplyQueryResponse
func (client *Client) CommonApplyQueryWithOptions(request *CommonApplyQueryRequest, headers *CommonApplyQueryHeaders, runtime *util.RuntimeOptions) (_result *CommonApplyQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.BizCategory)) {
		query["biz_category"] = request.BizCategory
	}

	if !tea.BoolValue(util.IsUnset(request.BusinessInstanceId)) {
		query["business_instance_id"] = request.BusinessInstanceId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CommonApplyQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/common"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CommonApplyQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询退改审批信息
//
// @param request - CommonApplyQueryRequest
//
// @return CommonApplyQueryResponse
func (client *Client) CommonApplyQuery(request *CommonApplyQueryRequest) (_result *CommonApplyQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CommonApplyQueryHeaders{}
	_result = &CommonApplyQueryResponse{}
	_body, _err := client.CommonApplyQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 退改审批结果同步
//
// @param request - CommonApplySyncRequest
//
// @param headers - CommonApplySyncHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CommonApplySyncResponse
func (client *Client) CommonApplySyncWithOptions(request *CommonApplySyncRequest, headers *CommonApplySyncHeaders, runtime *util.RuntimeOptions) (_result *CommonApplySyncResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.BizCategory)) {
		query["biz_category"] = request.BizCategory
	}

	if !tea.BoolValue(util.IsUnset(request.Remark)) {
		query["remark"] = request.Remark
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		query["status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartyFlowId)) {
		query["thirdparty_flow_id"] = request.ThirdpartyFlowId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CommonApplySync"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/syn-common"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CommonApplySyncResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 退改审批结果同步
//
// @param request - CommonApplySyncRequest
//
// @return CommonApplySyncResponse
func (client *Client) CommonApplySync(request *CommonApplySyncRequest) (_result *CommonApplySyncResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CommonApplySyncHeaders{}
	_result = &CommonApplySyncResponse{}
	_body, _err := client.CommonApplySyncWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询服务商机票记账数据
//
// @param request - CooperatorFlightBillSettlementQueryRequest
//
// @param headers - CooperatorFlightBillSettlementQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CooperatorFlightBillSettlementQueryResponse
func (client *Client) CooperatorFlightBillSettlementQueryWithOptions(request *CooperatorFlightBillSettlementQueryRequest, headers *CooperatorFlightBillSettlementQueryHeaders, runtime *util.RuntimeOptions) (_result *CooperatorFlightBillSettlementQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CooperatorId)) {
		query["cooperator_id"] = request.CooperatorId
	}

	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodEnd)) {
		query["period_end"] = request.PeriodEnd
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodStart)) {
		query["period_start"] = request.PeriodStart
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CooperatorFlightBillSettlementQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/cooperator-flight/v1/bill-settlement"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CooperatorFlightBillSettlementQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询服务商机票记账数据
//
// @param request - CooperatorFlightBillSettlementQueryRequest
//
// @return CooperatorFlightBillSettlementQueryResponse
func (client *Client) CooperatorFlightBillSettlementQuery(request *CooperatorFlightBillSettlementQueryRequest) (_result *CooperatorFlightBillSettlementQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CooperatorFlightBillSettlementQueryHeaders{}
	_result = &CooperatorFlightBillSettlementQueryResponse{}
	_body, _err := client.CooperatorFlightBillSettlementQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询服务商酒店记账数据
//
// @param request - CooperatorHotelBillSettlementQueryRequest
//
// @param headers - CooperatorHotelBillSettlementQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CooperatorHotelBillSettlementQueryResponse
func (client *Client) CooperatorHotelBillSettlementQueryWithOptions(request *CooperatorHotelBillSettlementQueryRequest, headers *CooperatorHotelBillSettlementQueryHeaders, runtime *util.RuntimeOptions) (_result *CooperatorHotelBillSettlementQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CooperatorId)) {
		query["cooperator_id"] = request.CooperatorId
	}

	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodEnd)) {
		query["period_end"] = request.PeriodEnd
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodStart)) {
		query["period_start"] = request.PeriodStart
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CooperatorHotelBillSettlementQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/cooperator-hotel/v1/bill-settlement"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CooperatorHotelBillSettlementQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询服务商酒店记账数据
//
// @param request - CooperatorHotelBillSettlementQueryRequest
//
// @return CooperatorHotelBillSettlementQueryResponse
func (client *Client) CooperatorHotelBillSettlementQuery(request *CooperatorHotelBillSettlementQueryRequest) (_result *CooperatorHotelBillSettlementQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CooperatorHotelBillSettlementQueryHeaders{}
	_result = &CooperatorHotelBillSettlementQueryResponse{}
	_body, _err := client.CooperatorHotelBillSettlementQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 获取关联可调用企业接口
//
// @param headers - map
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CorpAuthLinkInfoQueryResponse
func (client *Client) CorpAuthLinkInfoQueryWithOptions(headers map[string]*string, runtime *util.RuntimeOptions) (_result *CorpAuthLinkInfoQueryResponse, _err error) {
	req := &openapi.OpenApiRequest{
		Headers: headers,
	}
	params := &openapi.Params{
		Action:      tea.String("CorpAuthLinkInfoQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/corp-authority-link/v1/info"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CorpAuthLinkInfoQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 获取关联可调用企业接口
//
// @return CorpAuthLinkInfoQueryResponse
func (client *Client) CorpAuthLinkInfoQuery() (_result *CorpAuthLinkInfoQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := make(map[string]*string)
	_result = &CorpAuthLinkInfoQueryResponse{}
	_body, _err := client.CorpAuthLinkInfoQueryWithOptions(headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 换取CorpToken接口
//
// @param request - CorpTokenRequest
//
// @param headers - CorpTokenHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CorpTokenResponse
func (client *Client) CorpTokenWithOptions(request *CorpTokenRequest, headers *CorpTokenHeaders, runtime *util.RuntimeOptions) (_result *CorpTokenResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AppSecret)) {
		query["app_secret"] = request.AppSecret
	}

	if !tea.BoolValue(util.IsUnset(request.CorpId)) {
		query["corp_id"] = request.CorpId
	}

	if !tea.BoolValue(util.IsUnset(request.Type)) {
		query["type"] = request.Type
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripAccessToken)) {
		realHeaders["x-acs-btrip-access-token"] = util.ToJSONString(headers.XAcsBtripAccessToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CorpToken"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/btrip-open-auth/v1/corp-token/action/take"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CorpTokenResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 换取CorpToken接口
//
// @param request - CorpTokenRequest
//
// @return CorpTokenResponse
func (client *Client) CorpToken(request *CorpTokenRequest) (_result *CorpTokenResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CorpTokenHeaders{}
	_result = &CorpTokenResponse{}
	_body, _err := client.CorpTokenWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 删除成本中心
//
// @param request - CostCenterDeleteRequest
//
// @param headers - CostCenterDeleteHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CostCenterDeleteResponse
func (client *Client) CostCenterDeleteWithOptions(request *CostCenterDeleteRequest, headers *CostCenterDeleteHeaders, runtime *util.RuntimeOptions) (_result *CostCenterDeleteResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ThirdpartId)) {
		query["thirdpart_id"] = request.ThirdpartId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CostCenterDelete"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/costcenter/v1/delete-costcenter"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CostCenterDeleteResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 删除成本中心
//
// @param request - CostCenterDeleteRequest
//
// @return CostCenterDeleteResponse
func (client *Client) CostCenterDelete(request *CostCenterDeleteRequest) (_result *CostCenterDeleteResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CostCenterDeleteHeaders{}
	_result = &CostCenterDeleteResponse{}
	_body, _err := client.CostCenterDeleteWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 修改成本中心
//
// @param request - CostCenterModifyRequest
//
// @param headers - CostCenterModifyHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CostCenterModifyResponse
func (client *Client) CostCenterModifyWithOptions(request *CostCenterModifyRequest, headers *CostCenterModifyHeaders, runtime *util.RuntimeOptions) (_result *CostCenterModifyResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AlipayNo)) {
		body["alipay_no"] = request.AlipayNo
	}

	if !tea.BoolValue(util.IsUnset(request.Disable)) {
		body["disable"] = request.Disable
	}

	if !tea.BoolValue(util.IsUnset(request.Number)) {
		body["number"] = request.Number
	}

	if !tea.BoolValue(util.IsUnset(request.Scope)) {
		body["scope"] = request.Scope
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartId)) {
		body["thirdpart_id"] = request.ThirdpartId
	}

	if !tea.BoolValue(util.IsUnset(request.Title)) {
		body["title"] = request.Title
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CostCenterModify"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/costcenter/v1/modify-costcenter"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &CostCenterModifyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 修改成本中心
//
// @param request - CostCenterModifyRequest
//
// @return CostCenterModifyResponse
func (client *Client) CostCenterModify(request *CostCenterModifyRequest) (_result *CostCenterModifyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CostCenterModifyHeaders{}
	_result = &CostCenterModifyResponse{}
	_body, _err := client.CostCenterModifyWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查看成本中心
//
// @param request - CostCenterQueryRequest
//
// @param headers - CostCenterQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CostCenterQueryResponse
func (client *Client) CostCenterQueryWithOptions(request *CostCenterQueryRequest, headers *CostCenterQueryHeaders, runtime *util.RuntimeOptions) (_result *CostCenterQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Disable)) {
		query["disable"] = request.Disable
	}

	if !tea.BoolValue(util.IsUnset(request.NeedOrgEntity)) {
		query["need_org_entity"] = request.NeedOrgEntity
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartId)) {
		query["thirdpart_id"] = request.ThirdpartId
	}

	if !tea.BoolValue(util.IsUnset(request.Title)) {
		query["title"] = request.Title
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CostCenterQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/costcenter/v1/costcenter"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &CostCenterQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查看成本中心
//
// @param request - CostCenterQueryRequest
//
// @return CostCenterQueryResponse
func (client *Client) CostCenterQuery(request *CostCenterQueryRequest) (_result *CostCenterQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CostCenterQueryHeaders{}
	_result = &CostCenterQueryResponse{}
	_body, _err := client.CostCenterQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 保存成本中心
//
// @param request - CostCenterSaveRequest
//
// @param headers - CostCenterSaveHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CostCenterSaveResponse
func (client *Client) CostCenterSaveWithOptions(request *CostCenterSaveRequest, headers *CostCenterSaveHeaders, runtime *util.RuntimeOptions) (_result *CostCenterSaveResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AlipayNo)) {
		body["alipay_no"] = request.AlipayNo
	}

	if !tea.BoolValue(util.IsUnset(request.Disable)) {
		body["disable"] = request.Disable
	}

	if !tea.BoolValue(util.IsUnset(request.Number)) {
		body["number"] = request.Number
	}

	if !tea.BoolValue(util.IsUnset(request.Scope)) {
		body["scope"] = request.Scope
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartId)) {
		body["thirdpart_id"] = request.ThirdpartId
	}

	if !tea.BoolValue(util.IsUnset(request.Title)) {
		body["title"] = request.Title
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CostCenterSave"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/costcenter/v1/save-costcenter"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &CostCenterSaveResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 保存成本中心
//
// @param request - CostCenterSaveRequest
//
// @return CostCenterSaveResponse
func (client *Client) CostCenterSave(request *CostCenterSaveRequest) (_result *CostCenterSaveResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CostCenterSaveHeaders{}
	_result = &CostCenterSaveResponse{}
	_body, _err := client.CostCenterSaveWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 创建企业自定义角色
//
// @param request - CreateCustomRoleRequest
//
// @param headers - CreateCustomRoleHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateCustomRoleResponse
func (client *Client) CreateCustomRoleWithOptions(request *CreateCustomRoleRequest, headers *CreateCustomRoleHeaders, runtime *util.RuntimeOptions) (_result *CreateCustomRoleResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RoleId)) {
		body["role_id"] = request.RoleId
	}

	if !tea.BoolValue(util.IsUnset(request.RoleName)) {
		body["role_name"] = request.RoleName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateCustomRole"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/role/v1/customRoles/create"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &CreateCustomRoleResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 创建企业自定义角色
//
// @param request - CreateCustomRoleRequest
//
// @return CreateCustomRoleResponse
func (client *Client) CreateCustomRole(request *CreateCustomRoleRequest) (_result *CreateCustomRoleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CreateCustomRoleHeaders{}
	_result = &CreateCustomRoleResponse{}
	_body, _err := client.CreateCustomRoleWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 创建子企业
//
// @param request - CreateSubCorpRequest
//
// @param headers - CreateSubCorpHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateSubCorpResponse
func (client *Client) CreateSubCorpWithOptions(request *CreateSubCorpRequest, headers *CreateSubCorpHeaders, runtime *util.RuntimeOptions) (_result *CreateSubCorpResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OuterCorpId)) {
		body["outer_corp_id"] = request.OuterCorpId
	}

	if !tea.BoolValue(util.IsUnset(request.OuterCorpName)) {
		body["outer_corp_name"] = request.OuterCorpName
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateSubCorp"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/sub_corps/v1/corps"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &CreateSubCorpResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 创建子企业
//
// @param request - CreateSubCorpRequest
//
// @return CreateSubCorpResponse
func (client *Client) CreateSubCorp(request *CreateSubCorpRequest) (_result *CreateSubCorpResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &CreateSubCorpHeaders{}
	_result = &CreateSubCorpResponse{}
	_body, _err := client.CreateSubCorpWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 删除企业自定义角色
//
// @param request - DeleteCustomRoleRequest
//
// @param headers - DeleteCustomRoleHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteCustomRoleResponse
func (client *Client) DeleteCustomRoleWithOptions(request *DeleteCustomRoleRequest, headers *DeleteCustomRoleHeaders, runtime *util.RuntimeOptions) (_result *DeleteCustomRoleResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RoleId)) {
		body["role_id"] = request.RoleId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteCustomRole"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/role/v1/customRoles/delete"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &DeleteCustomRoleResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 删除企业自定义角色
//
// @param request - DeleteCustomRoleRequest
//
// @return DeleteCustomRoleResponse
func (client *Client) DeleteCustomRole(request *DeleteCustomRoleRequest) (_result *DeleteCustomRoleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &DeleteCustomRoleHeaders{}
	_result = &DeleteCustomRoleResponse{}
	_body, _err := client.DeleteCustomRoleWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 删除企业部门
//
// @param request - DeleteDepartmentRequest
//
// @param headers - DeleteDepartmentHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteDepartmentResponse
func (client *Client) DeleteDepartmentWithOptions(request *DeleteDepartmentRequest, headers *DeleteDepartmentHeaders, runtime *util.RuntimeOptions) (_result *DeleteDepartmentResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OutDeptId)) {
		body["out_dept_id"] = request.OutDeptId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteDepartment"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/department/v2/delete"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &DeleteDepartmentResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 删除企业部门
//
// @param request - DeleteDepartmentRequest
//
// @return DeleteDepartmentResponse
func (client *Client) DeleteDepartment(request *DeleteDepartmentRequest) (_result *DeleteDepartmentResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &DeleteDepartmentHeaders{}
	_result = &DeleteDepartmentResponse{}
	_body, _err := client.DeleteDepartmentWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 批量删除企业自定义角色下人员
//
// @param tmpReq - DeleteEmployeesFromCustomRoleRequest
//
// @param headers - DeleteEmployeesFromCustomRoleHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteEmployeesFromCustomRoleResponse
func (client *Client) DeleteEmployeesFromCustomRoleWithOptions(tmpReq *DeleteEmployeesFromCustomRoleRequest, headers *DeleteEmployeesFromCustomRoleHeaders, runtime *util.RuntimeOptions) (_result *DeleteEmployeesFromCustomRoleResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &DeleteEmployeesFromCustomRoleShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.UserIdList)) {
		request.UserIdListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.UserIdList, tea.String("user_id_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RoleId)) {
		body["role_id"] = request.RoleId
	}

	if !tea.BoolValue(util.IsUnset(request.UserIdListShrink)) {
		body["user_id_list"] = request.UserIdListShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteEmployeesFromCustomRole"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/role/v1/customRoleEmployees/delete"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &DeleteEmployeesFromCustomRoleResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 批量删除企业自定义角色下人员
//
// @param request - DeleteEmployeesFromCustomRoleRequest
//
// @return DeleteEmployeesFromCustomRoleResponse
func (client *Client) DeleteEmployeesFromCustomRole(request *DeleteEmployeesFromCustomRoleRequest) (_result *DeleteEmployeesFromCustomRoleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &DeleteEmployeesFromCustomRoleHeaders{}
	_result = &DeleteEmployeesFromCustomRoleResponse{}
	_body, _err := client.DeleteEmployeesFromCustomRoleWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 删除发票抬头适用人员
//
// @param tmpReq - DeleteInvoiceEntityRequest
//
// @param headers - DeleteInvoiceEntityHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteInvoiceEntityResponse
func (client *Client) DeleteInvoiceEntityWithOptions(tmpReq *DeleteInvoiceEntityRequest, headers *DeleteInvoiceEntityHeaders, runtime *util.RuntimeOptions) (_result *DeleteInvoiceEntityResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &DeleteInvoiceEntityShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Entities)) {
		request.EntitiesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Entities, tea.String("entities"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DelAll)) {
		query["del_all"] = request.DelAll
	}

	if !tea.BoolValue(util.IsUnset(request.EntitiesShrink)) {
		query["entities"] = request.EntitiesShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		query["third_part_id"] = request.ThirdPartId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteInvoiceEntity"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/entities"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &DeleteInvoiceEntityResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 删除发票抬头适用人员
//
// @param request - DeleteInvoiceEntityRequest
//
// @return DeleteInvoiceEntityResponse
func (client *Client) DeleteInvoiceEntity(request *DeleteInvoiceEntityRequest) (_result *DeleteInvoiceEntityResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &DeleteInvoiceEntityHeaders{}
	_result = &DeleteInvoiceEntityResponse{}
	_body, _err := client.DeleteInvoiceEntityWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 同步外部平台部门信息至商旅内部
//
// @param tmpReq - DepartmentSaveRequest
//
// @param headers - DepartmentSaveHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DepartmentSaveResponse
func (client *Client) DepartmentSaveWithOptions(tmpReq *DepartmentSaveRequest, headers *DepartmentSaveHeaders, runtime *util.RuntimeOptions) (_result *DepartmentSaveResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &DepartmentSaveShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.DepartList)) {
		request.DepartListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.DepartList, tea.String("depart_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DepartListShrink)) {
		body["depart_list"] = request.DepartListShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("DepartmentSave"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/department/v1/department"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &DepartmentSaveResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 同步外部平台部门信息至商旅内部
//
// @param request - DepartmentSaveRequest
//
// @return DepartmentSaveResponse
func (client *Client) DepartmentSave(request *DepartmentSaveRequest) (_result *DepartmentSaveResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &DepartmentSaveHeaders{}
	_result = &DepartmentSaveResponse{}
	_body, _err := client.DepartmentSaveWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 增加成本中心人员信息
//
// @param tmpReq - EntityAddRequest
//
// @param headers - EntityAddHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return EntityAddResponse
func (client *Client) EntityAddWithOptions(tmpReq *EntityAddRequest, headers *EntityAddHeaders, runtime *util.RuntimeOptions) (_result *EntityAddResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &EntityAddShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.EntityDOList)) {
		request.EntityDOListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.EntityDOList, tea.String("entity_d_o_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.EntityDOListShrink)) {
		body["entity_d_o_list"] = request.EntityDOListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartId)) {
		body["thirdpart_id"] = request.ThirdpartId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("EntityAdd"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/costcenter/v1/add-entity"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &EntityAddResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 增加成本中心人员信息
//
// @param request - EntityAddRequest
//
// @return EntityAddResponse
func (client *Client) EntityAdd(request *EntityAddRequest) (_result *EntityAddResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &EntityAddHeaders{}
	_result = &EntityAddResponse{}
	_body, _err := client.EntityAddWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 删除成本中心人员信息
//
// @param tmpReq - EntityDeleteRequest
//
// @param headers - EntityDeleteHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return EntityDeleteResponse
func (client *Client) EntityDeleteWithOptions(tmpReq *EntityDeleteRequest, headers *EntityDeleteHeaders, runtime *util.RuntimeOptions) (_result *EntityDeleteResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &EntityDeleteShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.EntityDOList)) {
		request.EntityDOListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.EntityDOList, tea.String("entity_d_o_list"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DelAll)) {
		query["del_all"] = request.DelAll
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartId)) {
		query["thirdpart_id"] = request.ThirdpartId
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.EntityDOListShrink)) {
		body["entity_d_o_list"] = request.EntityDOListShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("EntityDelete"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/costcenter/v1/entity/action/delete"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &EntityDeleteResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 删除成本中心人员信息
//
// @param request - EntityDeleteRequest
//
// @return EntityDeleteResponse
func (client *Client) EntityDelete(request *EntityDeleteRequest) (_result *EntityDeleteResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &EntityDeleteHeaders{}
	_result = &EntityDeleteResponse{}
	_body, _err := client.EntityDeleteWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 设置成本中心人员信息
//
// @param tmpReq - EntitySetRequest
//
// @param headers - EntitySetHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return EntitySetResponse
func (client *Client) EntitySetWithOptions(tmpReq *EntitySetRequest, headers *EntitySetHeaders, runtime *util.RuntimeOptions) (_result *EntitySetResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &EntitySetShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.EntityDOList)) {
		request.EntityDOListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.EntityDOList, tea.String("entity_d_o_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.EntityDOListShrink)) {
		body["entity_d_o_list"] = request.EntityDOListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartId)) {
		body["thirdpart_id"] = request.ThirdpartId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("EntitySet"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/costcenter/v1/set-entity"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &EntitySetResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 设置成本中心人员信息
//
// @param request - EntitySetRequest
//
// @return EntitySetResponse
func (client *Client) EntitySet(request *EntitySetRequest) (_result *EntitySetResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &EntitySetHeaders{}
	_result = &EntitySetResponse{}
	_body, _err := client.EntitySetWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 预估价格查询
//
// @param request - EstimatedPriceQueryRequest
//
// @param headers - EstimatedPriceQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return EstimatedPriceQueryResponse
func (client *Client) EstimatedPriceQueryWithOptions(request *EstimatedPriceQueryRequest, headers *EstimatedPriceQueryHeaders, runtime *util.RuntimeOptions) (_result *EstimatedPriceQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ArrCity)) {
		query["arr_city"] = request.ArrCity
	}

	if !tea.BoolValue(util.IsUnset(request.Category)) {
		query["category"] = request.Category
	}

	if !tea.BoolValue(util.IsUnset(request.DepCity)) {
		query["dep_city"] = request.DepCity
	}

	if !tea.BoolValue(util.IsUnset(request.EndTime)) {
		query["end_time"] = request.EndTime
	}

	if !tea.BoolValue(util.IsUnset(request.ItineraryId)) {
		query["itinerary_id"] = request.ItineraryId
	}

	if !tea.BoolValue(util.IsUnset(request.StartTime)) {
		query["start_time"] = request.StartTime
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpId)) {
		query["sub_corp_id"] = request.SubCorpId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("EstimatedPriceQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/costcenter/v1/estimated-price"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &EstimatedPriceQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 预估价格查询
//
// @param request - EstimatedPriceQueryRequest
//
// @return EstimatedPriceQueryResponse
func (client *Client) EstimatedPriceQuery(request *EstimatedPriceQueryRequest) (_result *EstimatedPriceQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &EstimatedPriceQueryHeaders{}
	_result = &EstimatedPriceQueryResponse{}
	_body, _err := client.EstimatedPriceQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 超标审批结果同步
//
// @param request - ExceedApplySyncRequest
//
// @param headers - ExceedApplySyncHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ExceedApplySyncResponse
func (client *Client) ExceedApplySyncWithOptions(request *ExceedApplySyncRequest, headers *ExceedApplySyncHeaders, runtime *util.RuntimeOptions) (_result *ExceedApplySyncResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.BizCategory)) {
		query["biz_category"] = request.BizCategory
	}

	if !tea.BoolValue(util.IsUnset(request.Remark)) {
		query["remark"] = request.Remark
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		query["status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartyFlowId)) {
		query["thirdparty_flow_id"] = request.ThirdpartyFlowId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ExceedApplySync"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/syn-exceed"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &ExceedApplySyncResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 超标审批结果同步
//
// @param request - ExceedApplySyncRequest
//
// @return ExceedApplySyncResponse
func (client *Client) ExceedApplySync(request *ExceedApplySyncRequest) (_result *ExceedApplySyncResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ExceedApplySyncHeaders{}
	_result = &ExceedApplySyncResponse{}
	_body, _err := client.ExceedApplySyncWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 添加外部出行人与证件信息
//
// @param tmpReq - ExternalUserAddRequest
//
// @param headers - ExternalUserAddHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ExternalUserAddResponse
func (client *Client) ExternalUserAddWithOptions(tmpReq *ExternalUserAddRequest, headers *ExternalUserAddHeaders, runtime *util.RuntimeOptions) (_result *ExternalUserAddResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ExternalUserAddShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.CertRequestList)) {
		request.CertRequestListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CertRequestList, tea.String("cert_request_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Birthday)) {
		body["birthday"] = request.Birthday
	}

	if !tea.BoolValue(util.IsUnset(request.CertRequestListShrink)) {
		body["cert_request_list"] = request.CertRequestListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Email)) {
		body["email"] = request.Email
	}

	if !tea.BoolValue(util.IsUnset(request.ExternalUserId)) {
		body["external_user_id"] = request.ExternalUserId
	}

	if !tea.BoolValue(util.IsUnset(request.Phone)) {
		body["phone"] = request.Phone
	}

	if !tea.BoolValue(util.IsUnset(request.RealName)) {
		body["real_name"] = request.RealName
	}

	if !tea.BoolValue(util.IsUnset(request.RealNameEn)) {
		body["real_name_en"] = request.RealNameEn
	}

	if !tea.BoolValue(util.IsUnset(request.UserType)) {
		body["user_type"] = request.UserType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ExternalUserAdd"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/user/v1/externalUsers"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ExternalUserAddResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 添加外部出行人与证件信息
//
// @param request - ExternalUserAddRequest
//
// @return ExternalUserAddResponse
func (client *Client) ExternalUserAdd(request *ExternalUserAddRequest) (_result *ExternalUserAddResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ExternalUserAddHeaders{}
	_result = &ExternalUserAddResponse{}
	_body, _err := client.ExternalUserAddWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 删除外部出行人
//
// @param headers - ExternalUserDeleteHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ExternalUserDeleteResponse
func (client *Client) ExternalUserDeleteWithOptions(externalUserId *string, headers *ExternalUserDeleteHeaders, runtime *util.RuntimeOptions) (_result *ExternalUserDeleteResponse, _err error) {
	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
	}
	params := &openapi.Params{
		Action:      tea.String("ExternalUserDelete"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/user/v1/externalUsers/" + tea.StringValue(openapiutil.GetEncodeParam(externalUserId))),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &ExternalUserDeleteResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 删除外部出行人
//
// @return ExternalUserDeleteResponse
func (client *Client) ExternalUserDelete(externalUserId *string) (_result *ExternalUserDeleteResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ExternalUserDeleteHeaders{}
	_result = &ExternalUserDeleteResponse{}
	_body, _err := client.ExternalUserDeleteWithOptions(externalUserId, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 修改外部出行人与证件信息
//
// @param tmpReq - ExternalUserUpdateRequest
//
// @param headers - ExternalUserUpdateHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ExternalUserUpdateResponse
func (client *Client) ExternalUserUpdateWithOptions(externalUserId *string, tmpReq *ExternalUserUpdateRequest, headers *ExternalUserUpdateHeaders, runtime *util.RuntimeOptions) (_result *ExternalUserUpdateResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ExternalUserUpdateShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.CertRequestList)) {
		request.CertRequestListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CertRequestList, tea.String("cert_request_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Birthday)) {
		body["birthday"] = request.Birthday
	}

	if !tea.BoolValue(util.IsUnset(request.CertRequestListShrink)) {
		body["cert_request_list"] = request.CertRequestListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Email)) {
		body["email"] = request.Email
	}

	if !tea.BoolValue(util.IsUnset(request.Phone)) {
		body["phone"] = request.Phone
	}

	if !tea.BoolValue(util.IsUnset(request.RealName)) {
		body["real_name"] = request.RealName
	}

	if !tea.BoolValue(util.IsUnset(request.RealNameEn)) {
		body["real_name_en"] = request.RealNameEn
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ExternalUserUpdate"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/user/v1/externalUsers/" + tea.StringValue(openapiutil.GetEncodeParam(externalUserId))),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ExternalUserUpdateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 修改外部出行人与证件信息
//
// @param request - ExternalUserUpdateRequest
//
// @return ExternalUserUpdateResponse
func (client *Client) ExternalUserUpdate(externalUserId *string, request *ExternalUserUpdateRequest) (_result *ExternalUserUpdateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ExternalUserUpdateHeaders{}
	_result = &ExternalUserUpdateResponse{}
	_body, _err := client.ExternalUserUpdateWithOptions(externalUserId, request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询机票记账数据
//
// @param request - FlightBillSettlementQueryRequest
//
// @param headers - FlightBillSettlementQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightBillSettlementQueryResponse
func (client *Client) FlightBillSettlementQueryWithOptions(request *FlightBillSettlementQueryRequest, headers *FlightBillSettlementQueryHeaders, runtime *util.RuntimeOptions) (_result *FlightBillSettlementQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodEnd)) {
		query["period_end"] = request.PeriodEnd
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodStart)) {
		query["period_start"] = request.PeriodStart
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightBillSettlementQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/flight/v1/bill-settlement"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightBillSettlementQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询机票记账数据
//
// @param request - FlightBillSettlementQueryRequest
//
// @return FlightBillSettlementQueryResponse
func (client *Client) FlightBillSettlementQuery(request *FlightBillSettlementQueryRequest) (_result *FlightBillSettlementQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightBillSettlementQueryHeaders{}
	_result = &FlightBillSettlementQueryResponse{}
	_body, _err := client.FlightBillSettlementQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 航班订单取消
//
// @param request - FlightCancelOrderRequest
//
// @param headers - FlightCancelOrderHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightCancelOrderResponse
func (client *Client) FlightCancelOrderWithOptions(request *FlightCancelOrderRequest, headers *FlightCancelOrderHeaders, runtime *util.RuntimeOptions) (_result *FlightCancelOrderResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		query["dis_order_id"] = request.DisOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightCancelOrder"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/order/action/cancel"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightCancelOrderResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 航班订单取消
//
// @param request - FlightCancelOrderRequest
//
// @return FlightCancelOrderResponse
func (client *Client) FlightCancelOrder(request *FlightCancelOrderRequest) (_result *FlightCancelOrderResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightCancelOrderHeaders{}
	_result = &FlightCancelOrderResponse{}
	_body, _err := client.FlightCancelOrderWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票订单取消
//
// @param request - FlightCancelOrderV2Request
//
// @param headers - FlightCancelOrderV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightCancelOrderV2Response
func (client *Client) FlightCancelOrderV2WithOptions(request *FlightCancelOrderV2Request, headers *FlightCancelOrderV2Headers, runtime *util.RuntimeOptions) (_result *FlightCancelOrderV2Response, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightCancelOrderV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/order/action/cancel"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightCancelOrderV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票订单取消
//
// @param request - FlightCancelOrderV2Request
//
// @return FlightCancelOrderV2Response
func (client *Client) FlightCancelOrderV2(request *FlightCancelOrderV2Request) (_result *FlightCancelOrderV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightCancelOrderV2Headers{}
	_result = &FlightCancelOrderV2Response{}
	_body, _err := client.FlightCancelOrderV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 航班订单创建
//
// @param tmpReq - FlightCreateOrderRequest
//
// @param headers - FlightCreateOrderHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightCreateOrderResponse
func (client *Client) FlightCreateOrderWithOptions(tmpReq *FlightCreateOrderRequest, headers *FlightCreateOrderHeaders, runtime *util.RuntimeOptions) (_result *FlightCreateOrderResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightCreateOrderShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ContactInfo)) {
		request.ContactInfoShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ContactInfo, tea.String("contact_info"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.OrderAttr)) {
		request.OrderAttrShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.OrderAttr, tea.String("order_attr"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.TravelerInfoList)) {
		request.TravelerInfoListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.TravelerInfoList, tea.String("traveler_info_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ArrAirportCode)) {
		body["arr_airport_code"] = request.ArrAirportCode
	}

	if !tea.BoolValue(util.IsUnset(request.ArrCityCode)) {
		body["arr_city_code"] = request.ArrCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.AutoPay)) {
		body["auto_pay"] = request.AutoPay
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		body["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerUniqueKey)) {
		body["buyer_unique_key"] = request.BuyerUniqueKey
	}

	if !tea.BoolValue(util.IsUnset(request.ContactInfoShrink)) {
		body["contact_info"] = request.ContactInfoShrink
	}

	if !tea.BoolValue(util.IsUnset(request.DepAirportCode)) {
		body["dep_airport_code"] = request.DepAirportCode
	}

	if !tea.BoolValue(util.IsUnset(request.DepCityCode)) {
		body["dep_city_code"] = request.DepCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.DepDate)) {
		body["dep_date"] = request.DepDate
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		body["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OrderAttrShrink)) {
		body["order_attr"] = request.OrderAttrShrink
	}

	if !tea.BoolValue(util.IsUnset(request.OrderParams)) {
		body["order_params"] = request.OrderParams
	}

	if !tea.BoolValue(util.IsUnset(request.OtaItemId)) {
		body["ota_item_id"] = request.OtaItemId
	}

	if !tea.BoolValue(util.IsUnset(request.Price)) {
		body["price"] = request.Price
	}

	if !tea.BoolValue(util.IsUnset(request.ReceiptAddress)) {
		body["receipt_address"] = request.ReceiptAddress
	}

	if !tea.BoolValue(util.IsUnset(request.ReceiptTarget)) {
		body["receipt_target"] = request.ReceiptTarget
	}

	if !tea.BoolValue(util.IsUnset(request.ReceiptTitle)) {
		body["receipt_title"] = request.ReceiptTitle
	}

	if !tea.BoolValue(util.IsUnset(request.TravelerInfoListShrink)) {
		body["traveler_info_list"] = request.TravelerInfoListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.TripType)) {
		body["trip_type"] = request.TripType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightCreateOrder"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/order/action/create"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightCreateOrderResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 航班订单创建
//
// @param request - FlightCreateOrderRequest
//
// @return FlightCreateOrderResponse
func (client *Client) FlightCreateOrder(request *FlightCreateOrderRequest) (_result *FlightCreateOrderResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightCreateOrderHeaders{}
	_result = &FlightCreateOrderResponse{}
	_body, _err := client.FlightCreateOrderWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票订单创建
//
// @param tmpReq - FlightCreateOrderV2Request
//
// @param headers - FlightCreateOrderV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightCreateOrderV2Response
func (client *Client) FlightCreateOrderV2WithOptions(tmpReq *FlightCreateOrderV2Request, headers *FlightCreateOrderV2Headers, runtime *util.RuntimeOptions) (_result *FlightCreateOrderV2Response, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightCreateOrderV2ShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ContactInfo)) {
		request.ContactInfoShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ContactInfo, tea.String("contact_info"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Travelers)) {
		request.TravelersShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Travelers, tea.String("travelers"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AsyncCreateOrderKey)) {
		body["async_create_order_key"] = request.AsyncCreateOrderKey
	}

	if !tea.BoolValue(util.IsUnset(request.AsyncCreateOrderMode)) {
		body["async_create_order_mode"] = request.AsyncCreateOrderMode
	}

	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		body["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		body["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.ContactInfoShrink)) {
		body["contact_info"] = request.ContactInfoShrink
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		body["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OtaItemId)) {
		body["ota_item_id"] = request.OtaItemId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.TotalPriceCent)) {
		body["total_price_cent"] = request.TotalPriceCent
	}

	if !tea.BoolValue(util.IsUnset(request.TravelersShrink)) {
		body["travelers"] = request.TravelersShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightCreateOrderV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/order/action/create"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightCreateOrderV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票订单创建
//
// @param request - FlightCreateOrderV2Request
//
// @return FlightCreateOrderV2Response
func (client *Client) FlightCreateOrderV2(request *FlightCreateOrderV2Request) (_result *FlightCreateOrderV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightCreateOrderV2Headers{}
	_result = &FlightCreateOrderV2Response{}
	_body, _err := client.FlightCreateOrderV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询飞机超标审批详情
//
// @param request - FlightExceedApplyQueryRequest
//
// @param headers - FlightExceedApplyQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightExceedApplyQueryResponse
func (client *Client) FlightExceedApplyQueryWithOptions(request *FlightExceedApplyQueryRequest, headers *FlightExceedApplyQueryHeaders, runtime *util.RuntimeOptions) (_result *FlightExceedApplyQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.BusinessInstanceId)) {
		query["business_instance_id"] = request.BusinessInstanceId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightExceedApplyQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/flight-exceed"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightExceedApplyQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询飞机超标审批详情
//
// @param request - FlightExceedApplyQueryRequest
//
// @return FlightExceedApplyQueryResponse
func (client *Client) FlightExceedApplyQuery(request *FlightExceedApplyQueryRequest) (_result *FlightExceedApplyQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightExceedApplyQueryHeaders{}
	_result = &FlightExceedApplyQueryResponse{}
	_body, _err := client.FlightExceedApplyQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询机票行程单扫描件
//
// @param request - FlightItineraryScanQueryRequest
//
// @param headers - FlightItineraryScanQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightItineraryScanQueryResponse
func (client *Client) FlightItineraryScanQueryWithOptions(request *FlightItineraryScanQueryRequest, headers *FlightItineraryScanQueryHeaders, runtime *util.RuntimeOptions) (_result *FlightItineraryScanQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BillDate)) {
		query["bill_date"] = request.BillDate
	}

	if !tea.BoolValue(util.IsUnset(request.BillId)) {
		query["bill_id"] = request.BillId
	}

	if !tea.BoolValue(util.IsUnset(request.InvoiceSubTaskId)) {
		query["invoice_sub_task_id"] = request.InvoiceSubTaskId
	}

	if !tea.BoolValue(util.IsUnset(request.ItineraryNum)) {
		query["itinerary_num"] = request.ItineraryNum
	}

	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.TicketNo)) {
		query["ticket_no"] = request.TicketNo
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightItineraryScanQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/scan/v1/flight-itinerary"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightItineraryScanQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询机票行程单扫描件
//
// @param request - FlightItineraryScanQueryRequest
//
// @return FlightItineraryScanQueryResponse
func (client *Client) FlightItineraryScanQuery(request *FlightItineraryScanQueryRequest) (_result *FlightItineraryScanQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightItineraryScanQueryHeaders{}
	_result = &FlightItineraryScanQueryResponse{}
	_body, _err := client.FlightItineraryScanQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 航班列表搜索
//
// @param request - FlightListingSearchRequest
//
// @param headers - FlightListingSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightListingSearchResponse
func (client *Client) FlightListingSearchWithOptions(request *FlightListingSearchRequest, headers *FlightListingSearchHeaders, runtime *util.RuntimeOptions) (_result *FlightListingSearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AirlineCode)) {
		query["airline_code"] = request.AirlineCode
	}

	if !tea.BoolValue(util.IsUnset(request.ArrCityCode)) {
		query["arr_city_code"] = request.ArrCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.CabinClass)) {
		query["cabin_class"] = request.CabinClass
	}

	if !tea.BoolValue(util.IsUnset(request.DepCityCode)) {
		query["dep_city_code"] = request.DepCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.DepDate)) {
		query["dep_date"] = request.DepDate
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightListingSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/flight/action/listing-search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightListingSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 航班列表搜索
//
// @param request - FlightListingSearchRequest
//
// @return FlightListingSearchResponse
func (client *Client) FlightListingSearch(request *FlightListingSearchRequest) (_result *FlightListingSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightListingSearchHeaders{}
	_result = &FlightListingSearchResponse{}
	_body, _err := client.FlightListingSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 航班列表搜索
//
// @param tmpReq - FlightListingSearchV2Request
//
// @param headers - FlightListingSearchV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightListingSearchV2Response
func (client *Client) FlightListingSearchV2WithOptions(tmpReq *FlightListingSearchV2Request, headers *FlightListingSearchV2Headers, runtime *util.RuntimeOptions) (_result *FlightListingSearchV2Response, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightListingSearchV2ShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.CabinTypeList)) {
		request.CabinTypeListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CabinTypeList, tea.String("cabin_type_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.SearchJourneys)) {
		request.SearchJourneysShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SearchJourneys, tea.String("search_journeys"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AirlineCode)) {
		query["airline_code"] = request.AirlineCode
	}

	if !tea.BoolValue(util.IsUnset(request.CabinTypeListShrink)) {
		query["cabin_type_list"] = request.CabinTypeListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.DirectOnly)) {
		query["direct_only"] = request.DirectOnly
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.NeedMultiClassPrice)) {
		query["need_multi_class_price"] = request.NeedMultiClassPrice
	}

	if !tea.BoolValue(util.IsUnset(request.NeedQueryServiceFee)) {
		query["need_query_service_fee"] = request.NeedQueryServiceFee
	}

	if !tea.BoolValue(util.IsUnset(request.NeedShareFlight)) {
		query["need_share_flight"] = request.NeedShareFlight
	}

	if !tea.BoolValue(util.IsUnset(request.NeedYCBestPrice)) {
		query["need_y_c_best_price"] = request.NeedYCBestPrice
	}

	if !tea.BoolValue(util.IsUnset(request.SearchJourneysShrink)) {
		query["search_journeys"] = request.SearchJourneysShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SearchMode)) {
		query["search_mode"] = request.SearchMode
	}

	if !tea.BoolValue(util.IsUnset(request.TripType)) {
		query["trip_type"] = request.TripType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightListingSearchV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/flight/action/listing-search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightListingSearchV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 航班列表搜索
//
// @param request - FlightListingSearchV2Request
//
// @return FlightListingSearchV2Response
func (client *Client) FlightListingSearchV2(request *FlightListingSearchV2Request) (_result *FlightListingSearchV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightListingSearchV2Headers{}
	_result = &FlightListingSearchV2Response{}
	_body, _err := client.FlightListingSearchV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签申请
//
// @param tmpReq - FlightModifyApplyV2Request
//
// @param headers - FlightModifyApplyV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightModifyApplyV2Response
func (client *Client) FlightModifyApplyV2WithOptions(tmpReq *FlightModifyApplyV2Request, headers *FlightModifyApplyV2Headers, runtime *util.RuntimeOptions) (_result *FlightModifyApplyV2Response, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightModifyApplyV2ShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.PassengerSegmentRelations)) {
		request.PassengerSegmentRelationsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PassengerSegmentRelations, tea.String("passenger_segment_relations"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CacheKey)) {
		body["cache_key"] = request.CacheKey
	}

	if !tea.BoolValue(util.IsUnset(request.ContactPhone)) {
		body["contact_phone"] = request.ContactPhone
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		body["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.ItemId)) {
		body["item_id"] = request.ItemId
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutSubOrderId)) {
		body["out_sub_order_id"] = request.OutSubOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.PassengerSegmentRelationsShrink)) {
		body["passenger_segment_relations"] = request.PassengerSegmentRelationsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Reason)) {
		body["reason"] = request.Reason
	}

	if !tea.BoolValue(util.IsUnset(request.SessionId)) {
		body["session_id"] = request.SessionId
	}

	if !tea.BoolValue(util.IsUnset(request.Voluntary)) {
		body["voluntary"] = request.Voluntary
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightModifyApplyV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/modify/action/apply"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightModifyApplyV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签申请
//
// @param request - FlightModifyApplyV2Request
//
// @return FlightModifyApplyV2Response
func (client *Client) FlightModifyApplyV2(request *FlightModifyApplyV2Request) (_result *FlightModifyApplyV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightModifyApplyV2Headers{}
	_result = &FlightModifyApplyV2Response{}
	_body, _err := client.FlightModifyApplyV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签取消
//
// @param request - FlightModifyCancelV2Request
//
// @param headers - FlightModifyCancelV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightModifyCancelV2Response
func (client *Client) FlightModifyCancelV2WithOptions(request *FlightModifyCancelV2Request, headers *FlightModifyCancelV2Headers, runtime *util.RuntimeOptions) (_result *FlightModifyCancelV2Response, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutSubOrderId)) {
		query["out_sub_order_id"] = request.OutSubOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.SubOrderId)) {
		query["sub_order_id"] = request.SubOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightModifyCancelV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/modify/action/cancel"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightModifyCancelV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签取消
//
// @param request - FlightModifyCancelV2Request
//
// @return FlightModifyCancelV2Response
func (client *Client) FlightModifyCancelV2(request *FlightModifyCancelV2Request) (_result *FlightModifyCancelV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightModifyCancelV2Headers{}
	_result = &FlightModifyCancelV2Response{}
	_body, _err := client.FlightModifyCancelV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签列表搜索
//
// @param tmpReq - FlightModifyListingSearchV2Request
//
// @param headers - FlightModifyListingSearchV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightModifyListingSearchV2Response
func (client *Client) FlightModifyListingSearchV2WithOptions(tmpReq *FlightModifyListingSearchV2Request, headers *FlightModifyListingSearchV2Headers, runtime *util.RuntimeOptions) (_result *FlightModifyListingSearchV2Response, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightModifyListingSearchV2ShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.CabinClass)) {
		request.CabinClassShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CabinClass, tea.String("cabin_class"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.DepDate)) {
		request.DepDateShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.DepDate, tea.String("dep_date"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.PassengerSegmentRelations)) {
		request.PassengerSegmentRelationsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PassengerSegmentRelations, tea.String("passenger_segment_relations"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.SelectedSegments)) {
		request.SelectedSegmentsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SelectedSegments, tea.String("selected_segments"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CabinClassShrink)) {
		query["cabin_class"] = request.CabinClassShrink
	}

	if !tea.BoolValue(util.IsUnset(request.DepDateShrink)) {
		query["dep_date"] = request.DepDateShrink
	}

	if !tea.BoolValue(util.IsUnset(request.InterfaceCallerIsSupportRetry)) {
		query["interface_caller_is_support_retry"] = request.InterfaceCallerIsSupportRetry
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.PassengerSegmentRelationsShrink)) {
		query["passenger_segment_relations"] = request.PassengerSegmentRelationsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SearchMode)) {
		query["search_mode"] = request.SearchMode
	}

	if !tea.BoolValue(util.IsUnset(request.SearchRetryToken)) {
		query["search_retry_token"] = request.SearchRetryToken
	}

	if !tea.BoolValue(util.IsUnset(request.SelectedSegmentsShrink)) {
		query["selected_segments"] = request.SelectedSegmentsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SessionId)) {
		query["session_id"] = request.SessionId
	}

	if !tea.BoolValue(util.IsUnset(request.Voluntary)) {
		query["voluntary"] = request.Voluntary
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightModifyListingSearchV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/modify/action/listing-search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightModifyListingSearchV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签列表搜索
//
// @param request - FlightModifyListingSearchV2Request
//
// @return FlightModifyListingSearchV2Response
func (client *Client) FlightModifyListingSearchV2(request *FlightModifyListingSearchV2Request) (_result *FlightModifyListingSearchV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightModifyListingSearchV2Headers{}
	_result = &FlightModifyListingSearchV2Response{}
	_body, _err := client.FlightModifyListingSearchV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签详情
//
// @param request - FlightModifyOrderDetailV2Request
//
// @param headers - FlightModifyOrderDetailV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightModifyOrderDetailV2Response
func (client *Client) FlightModifyOrderDetailV2WithOptions(request *FlightModifyOrderDetailV2Request, headers *FlightModifyOrderDetailV2Headers, runtime *util.RuntimeOptions) (_result *FlightModifyOrderDetailV2Response, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.ModifyApplyId)) {
		query["modify_apply_id"] = request.ModifyApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.NeedQueryServiceFee)) {
		query["need_query_service_fee"] = request.NeedQueryServiceFee
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutModifyApplyId)) {
		query["out_modify_apply_id"] = request.OutModifyApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightModifyOrderDetailV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/modify/action/detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightModifyOrderDetailV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签详情
//
// @param request - FlightModifyOrderDetailV2Request
//
// @return FlightModifyOrderDetailV2Response
func (client *Client) FlightModifyOrderDetailV2(request *FlightModifyOrderDetailV2Request) (_result *FlightModifyOrderDetailV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightModifyOrderDetailV2Headers{}
	_result = &FlightModifyOrderDetailV2Response{}
	_body, _err := client.FlightModifyOrderDetailV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签报价搜索
//
// @param tmpReq - FlightModifyOtaSearchV2Request
//
// @param headers - FlightModifyOtaSearchV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightModifyOtaSearchV2Response
func (client *Client) FlightModifyOtaSearchV2WithOptions(tmpReq *FlightModifyOtaSearchV2Request, headers *FlightModifyOtaSearchV2Headers, runtime *util.RuntimeOptions) (_result *FlightModifyOtaSearchV2Response, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightModifyOtaSearchV2ShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.CabinClass)) {
		request.CabinClassShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CabinClass, tea.String("cabin_class"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.DepDate)) {
		request.DepDateShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.DepDate, tea.String("dep_date"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.PassengerSegmentRelations)) {
		request.PassengerSegmentRelationsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PassengerSegmentRelations, tea.String("passenger_segment_relations"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.SelectedSegments)) {
		request.SelectedSegmentsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SelectedSegments, tea.String("selected_segments"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CabinClassShrink)) {
		query["cabin_class"] = request.CabinClassShrink
	}

	if !tea.BoolValue(util.IsUnset(request.DepDateShrink)) {
		query["dep_date"] = request.DepDateShrink
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.PassengerSegmentRelationsShrink)) {
		query["passenger_segment_relations"] = request.PassengerSegmentRelationsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SelectedSegmentsShrink)) {
		query["selected_segments"] = request.SelectedSegmentsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SessionId)) {
		query["session_id"] = request.SessionId
	}

	if !tea.BoolValue(util.IsUnset(request.Voluntary)) {
		query["voluntary"] = request.Voluntary
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightModifyOtaSearchV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/modify/action/ota-search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightModifyOtaSearchV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签报价搜索
//
// @param request - FlightModifyOtaSearchV2Request
//
// @return FlightModifyOtaSearchV2Response
func (client *Client) FlightModifyOtaSearchV2(request *FlightModifyOtaSearchV2Request) (_result *FlightModifyOtaSearchV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightModifyOtaSearchV2Headers{}
	_result = &FlightModifyOtaSearchV2Response{}
	_body, _err := client.FlightModifyOtaSearchV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签支付
//
// @param tmpReq - FlightModifyPayV2Request
//
// @param headers - FlightModifyPayV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightModifyPayV2Response
func (client *Client) FlightModifyPayV2WithOptions(tmpReq *FlightModifyPayV2Request, headers *FlightModifyPayV2Headers, runtime *util.RuntimeOptions) (_result *FlightModifyPayV2Response, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightModifyPayV2ShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ExtParams)) {
		request.ExtParamsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ExtParams, tea.String("ext_params"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ExtParamsShrink)) {
		body["ext_params"] = request.ExtParamsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		body["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.ModifyPayAmount)) {
		body["modify_pay_amount"] = request.ModifyPayAmount
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutSubOrderId)) {
		body["out_sub_order_id"] = request.OutSubOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.SubOrderId)) {
		body["sub_order_id"] = request.SubOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightModifyPayV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/modify/action/pay"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightModifyPayV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签支付
//
// @param request - FlightModifyPayV2Request
//
// @return FlightModifyPayV2Response
func (client *Client) FlightModifyPayV2(request *FlightModifyPayV2Request) (_result *FlightModifyPayV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightModifyPayV2Headers{}
	_result = &FlightModifyPayV2Response{}
	_body, _err := client.FlightModifyPayV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 航班订单明细信息
//
// @param request - FlightOrderDetailInfoRequest
//
// @param headers - FlightOrderDetailInfoHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightOrderDetailInfoResponse
func (client *Client) FlightOrderDetailInfoWithOptions(request *FlightOrderDetailInfoRequest, headers *FlightOrderDetailInfoHeaders, runtime *util.RuntimeOptions) (_result *FlightOrderDetailInfoResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		query["dis_order_id"] = request.DisOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightOrderDetailInfo"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/order/action/detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightOrderDetailInfoResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 航班订单明细信息
//
// @param request - FlightOrderDetailInfoRequest
//
// @return FlightOrderDetailInfoResponse
func (client *Client) FlightOrderDetailInfo(request *FlightOrderDetailInfoRequest) (_result *FlightOrderDetailInfoResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightOrderDetailInfoHeaders{}
	_result = &FlightOrderDetailInfoResponse{}
	_body, _err := client.FlightOrderDetailInfoWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票订单详情
//
// @param request - FlightOrderDetailV2Request
//
// @param headers - FlightOrderDetailV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightOrderDetailV2Response
func (client *Client) FlightOrderDetailV2WithOptions(request *FlightOrderDetailV2Request, headers *FlightOrderDetailV2Headers, runtime *util.RuntimeOptions) (_result *FlightOrderDetailV2Response, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightOrderDetailV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/order/action/detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightOrderDetailV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票订单详情
//
// @param request - FlightOrderDetailV2Request
//
// @return FlightOrderDetailV2Response
func (client *Client) FlightOrderDetailV2(request *FlightOrderDetailV2Request) (_result *FlightOrderDetailV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightOrderDetailV2Headers{}
	_result = &FlightOrderDetailV2Response{}
	_body, _err := client.FlightOrderDetailV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询机票订单列表
//
// @param request - FlightOrderListQueryRequest
//
// @param headers - FlightOrderListQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightOrderListQueryResponse
func (client *Client) FlightOrderListQueryWithOptions(request *FlightOrderListQueryRequest, headers *FlightOrderListQueryHeaders, runtime *util.RuntimeOptions) (_result *FlightOrderListQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AllApply)) {
		query["all_apply"] = request.AllApply
	}

	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.DepartId)) {
		query["depart_id"] = request.DepartId
	}

	if !tea.BoolValue(util.IsUnset(request.EndTime)) {
		query["end_time"] = request.EndTime
	}

	if !tea.BoolValue(util.IsUnset(request.Page)) {
		query["page"] = request.Page
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.StartTime)) {
		query["start_time"] = request.StartTime
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartApplyId)) {
		query["thirdpart_apply_id"] = request.ThirdpartApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.UpdateEndTime)) {
		query["update_end_time"] = request.UpdateEndTime
	}

	if !tea.BoolValue(util.IsUnset(request.UpdateStartTime)) {
		query["update_start_time"] = request.UpdateStartTime
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightOrderListQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/flight/v1/order-list"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightOrderListQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询机票订单列表
//
// @param request - FlightOrderListQueryRequest
//
// @return FlightOrderListQueryResponse
func (client *Client) FlightOrderListQuery(request *FlightOrderListQueryRequest) (_result *FlightOrderListQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightOrderListQueryHeaders{}
	_result = &FlightOrderListQueryResponse{}
	_body, _err := client.FlightOrderListQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询机票订单详情（含票信息）
//
// @param request - FlightOrderQueryRequest
//
// @param headers - FlightOrderQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightOrderQueryResponse
func (client *Client) FlightOrderQueryWithOptions(request *FlightOrderQueryRequest, headers *FlightOrderQueryHeaders, runtime *util.RuntimeOptions) (_result *FlightOrderQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightOrderQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/flight/v1/order"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightOrderQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询机票订单详情（含票信息）
//
// @param request - FlightOrderQueryRequest
//
// @return FlightOrderQueryResponse
func (client *Client) FlightOrderQuery(request *FlightOrderQueryRequest) (_result *FlightOrderQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightOrderQueryHeaders{}
	_result = &FlightOrderQueryResponse{}
	_body, _err := client.FlightOrderQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询退改规则行李额
//
// @param request - FlightOtaItemDetailRequest
//
// @param headers - FlightOtaItemDetailHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightOtaItemDetailResponse
func (client *Client) FlightOtaItemDetailWithOptions(request *FlightOtaItemDetailRequest, headers *FlightOtaItemDetailHeaders, runtime *util.RuntimeOptions) (_result *FlightOtaItemDetailResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OtaItemId)) {
		query["ota_item_id"] = request.OtaItemId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightOtaItemDetail"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/flight/action/ota-item-detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightOtaItemDetailResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询退改规则行李额
//
// @param request - FlightOtaItemDetailRequest
//
// @return FlightOtaItemDetailResponse
func (client *Client) FlightOtaItemDetail(request *FlightOtaItemDetailRequest) (_result *FlightOtaItemDetailResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightOtaItemDetailHeaders{}
	_result = &FlightOtaItemDetailResponse{}
	_body, _err := client.FlightOtaItemDetailWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 航班最低价搜索
//
// @param request - FlightOtaSearchRequest
//
// @param headers - FlightOtaSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightOtaSearchResponse
func (client *Client) FlightOtaSearchWithOptions(request *FlightOtaSearchRequest, headers *FlightOtaSearchHeaders, runtime *util.RuntimeOptions) (_result *FlightOtaSearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AirlineCode)) {
		query["airline_code"] = request.AirlineCode
	}

	if !tea.BoolValue(util.IsUnset(request.ArrCityCode)) {
		query["arr_city_code"] = request.ArrCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.CabinClass)) {
		query["cabin_class"] = request.CabinClass
	}

	if !tea.BoolValue(util.IsUnset(request.CarrierFlightNo)) {
		query["carrier_flight_no"] = request.CarrierFlightNo
	}

	if !tea.BoolValue(util.IsUnset(request.DepCityCode)) {
		query["dep_city_code"] = request.DepCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.DepDate)) {
		query["dep_date"] = request.DepDate
	}

	if !tea.BoolValue(util.IsUnset(request.FlightNo)) {
		query["flight_no"] = request.FlightNo
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightOtaSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/flight/action/ota-search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightOtaSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 航班最低价搜索
//
// @param request - FlightOtaSearchRequest
//
// @return FlightOtaSearchResponse
func (client *Client) FlightOtaSearch(request *FlightOtaSearchRequest) (_result *FlightOtaSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightOtaSearchHeaders{}
	_result = &FlightOtaSearchResponse{}
	_body, _err := client.FlightOtaSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 单航班报价搜索
//
// @param tmpReq - FlightOtaSearchV2Request
//
// @param headers - FlightOtaSearchV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightOtaSearchV2Response
func (client *Client) FlightOtaSearchV2WithOptions(tmpReq *FlightOtaSearchV2Request, headers *FlightOtaSearchV2Headers, runtime *util.RuntimeOptions) (_result *FlightOtaSearchV2Response, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightOtaSearchV2ShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.CabinTypeList)) {
		request.CabinTypeListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CabinTypeList, tea.String("cabin_type_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.SearchJourneys)) {
		request.SearchJourneysShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SearchJourneys, tea.String("search_journeys"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CabinTypeListShrink)) {
		query["cabin_type_list"] = request.CabinTypeListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.DirectOnly)) {
		query["direct_only"] = request.DirectOnly
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.NeedShareFlight)) {
		query["need_share_flight"] = request.NeedShareFlight
	}

	if !tea.BoolValue(util.IsUnset(request.SearchJourneysShrink)) {
		query["search_journeys"] = request.SearchJourneysShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SearchMode)) {
		query["search_mode"] = request.SearchMode
	}

	if !tea.BoolValue(util.IsUnset(request.TripType)) {
		query["trip_type"] = request.TripType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightOtaSearchV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/flight/action/ota-search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightOtaSearchV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 单航班报价搜索
//
// @param request - FlightOtaSearchV2Request
//
// @return FlightOtaSearchV2Response
func (client *Client) FlightOtaSearchV2(request *FlightOtaSearchV2Request) (_result *FlightOtaSearchV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightOtaSearchV2Headers{}
	_result = &FlightOtaSearchV2Response{}
	_body, _err := client.FlightOtaSearchV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 航班订单支付
//
// @param tmpReq - FlightPayOrderRequest
//
// @param headers - FlightPayOrderHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightPayOrderResponse
func (client *Client) FlightPayOrderWithOptions(tmpReq *FlightPayOrderRequest, headers *FlightPayOrderHeaders, runtime *util.RuntimeOptions) (_result *FlightPayOrderResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightPayOrderShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Extra)) {
		request.ExtraShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Extra, tea.String("extra"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CorpPayPrice)) {
		body["corp_pay_price"] = request.CorpPayPrice
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		body["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.ExtraShrink)) {
		body["extra"] = request.ExtraShrink
	}

	if !tea.BoolValue(util.IsUnset(request.PersonalPayPrice)) {
		body["personal_pay_price"] = request.PersonalPayPrice
	}

	if !tea.BoolValue(util.IsUnset(request.TotalPayPrice)) {
		body["total_pay_price"] = request.TotalPayPrice
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightPayOrder"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/order/action/pay"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightPayOrderResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 航班订单支付
//
// @param request - FlightPayOrderRequest
//
// @return FlightPayOrderResponse
func (client *Client) FlightPayOrder(request *FlightPayOrderRequest) (_result *FlightPayOrderResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightPayOrderHeaders{}
	_result = &FlightPayOrderResponse{}
	_body, _err := client.FlightPayOrderWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票订单支付
//
// @param request - FlightPayOrderV2Request
//
// @param headers - FlightPayOrderV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightPayOrderV2Response
func (client *Client) FlightPayOrderV2WithOptions(request *FlightPayOrderV2Request, headers *FlightPayOrderV2Headers, runtime *util.RuntimeOptions) (_result *FlightPayOrderV2Response, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		body["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.TotalPrice)) {
		body["total_price"] = request.TotalPrice
	}

	if !tea.BoolValue(util.IsUnset(request.TotalServiceFeePrice)) {
		body["total_service_fee_price"] = request.TotalServiceFeePrice
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightPayOrderV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/order/action/pay"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightPayOrderV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票订单支付
//
// @param request - FlightPayOrderV2Request
//
// @return FlightPayOrderV2Response
func (client *Client) FlightPayOrderV2(request *FlightPayOrderV2Request) (_result *FlightPayOrderV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightPayOrderV2Headers{}
	_result = &FlightPayOrderV2Response{}
	_body, _err := client.FlightPayOrderV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 航班退票申请
//
// @param tmpReq - FlightRefundApplyRequest
//
// @param headers - FlightRefundApplyHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightRefundApplyResponse
func (client *Client) FlightRefundApplyWithOptions(tmpReq *FlightRefundApplyRequest, headers *FlightRefundApplyHeaders, runtime *util.RuntimeOptions) (_result *FlightRefundApplyResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightRefundApplyShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Extra)) {
		request.ExtraShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Extra, tea.String("extra"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.PassengerSegmentInfoList)) {
		request.PassengerSegmentInfoListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PassengerSegmentInfoList, tea.String("passenger_segment_info_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.RefundVoucherInfo)) {
		request.RefundVoucherInfoShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.RefundVoucherInfo, tea.String("refund_voucher_info"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CorpRefundPrice)) {
		body["corp_refund_price"] = request.CorpRefundPrice
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		body["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.DisSubOrderId)) {
		body["dis_sub_order_id"] = request.DisSubOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.DisplayRefundMoney)) {
		body["display_refund_money"] = request.DisplayRefundMoney
	}

	if !tea.BoolValue(util.IsUnset(request.ExtraShrink)) {
		body["extra"] = request.ExtraShrink
	}

	if !tea.BoolValue(util.IsUnset(request.IsVoluntary)) {
		body["is_voluntary"] = request.IsVoluntary
	}

	if !tea.BoolValue(util.IsUnset(request.ItemUnitIds)) {
		body["item_unit_ids"] = request.ItemUnitIds
	}

	if !tea.BoolValue(util.IsUnset(request.PassengerSegmentInfoListShrink)) {
		body["passenger_segment_info_list"] = request.PassengerSegmentInfoListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.PersonalRefundPrice)) {
		body["personal_refund_price"] = request.PersonalRefundPrice
	}

	if !tea.BoolValue(util.IsUnset(request.ReasonDetail)) {
		body["reason_detail"] = request.ReasonDetail
	}

	if !tea.BoolValue(util.IsUnset(request.ReasonType)) {
		body["reason_type"] = request.ReasonType
	}

	if !tea.BoolValue(util.IsUnset(request.RefundVoucherInfoShrink)) {
		body["refund_voucher_info"] = request.RefundVoucherInfoShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SessionId)) {
		body["session_id"] = request.SessionId
	}

	if !tea.BoolValue(util.IsUnset(request.TotalRefundPrice)) {
		body["total_refund_price"] = request.TotalRefundPrice
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightRefundApply"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/refund/action/apply"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightRefundApplyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 航班退票申请
//
// @param request - FlightRefundApplyRequest
//
// @return FlightRefundApplyResponse
func (client *Client) FlightRefundApply(request *FlightRefundApplyRequest) (_result *FlightRefundApplyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightRefundApplyHeaders{}
	_result = &FlightRefundApplyResponse{}
	_body, _err := client.FlightRefundApplyWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票退票申请
//
// @param tmpReq - FlightRefundApplyV2Request
//
// @param headers - FlightRefundApplyV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightRefundApplyV2Response
func (client *Client) FlightRefundApplyV2WithOptions(tmpReq *FlightRefundApplyV2Request, headers *FlightRefundApplyV2Headers, runtime *util.RuntimeOptions) (_result *FlightRefundApplyV2Response, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightRefundApplyV2ShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.PassengerSegmentRelations)) {
		request.PassengerSegmentRelationsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PassengerSegmentRelations, tea.String("passenger_segment_relations"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.TicketNos)) {
		request.TicketNosShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.TicketNos, tea.String("ticket_nos"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		body["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutSubOrderId)) {
		body["out_sub_order_id"] = request.OutSubOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.PassengerSegmentRelationsShrink)) {
		body["passenger_segment_relations"] = request.PassengerSegmentRelationsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.PreCalType)) {
		body["pre_cal_type"] = request.PreCalType
	}

	if !tea.BoolValue(util.IsUnset(request.RefundReason)) {
		body["refund_reason"] = request.RefundReason
	}

	if !tea.BoolValue(util.IsUnset(request.RefundReasonType)) {
		body["refund_reason_type"] = request.RefundReasonType
	}

	if !tea.BoolValue(util.IsUnset(request.TicketNosShrink)) {
		body["ticket_nos"] = request.TicketNosShrink
	}

	if !tea.BoolValue(util.IsUnset(request.TotalRefundPrice)) {
		body["total_refund_price"] = request.TotalRefundPrice
	}

	if !tea.BoolValue(util.IsUnset(request.UploadPictUrls)) {
		body["upload_pict_urls"] = request.UploadPictUrls
	}

	if !tea.BoolValue(util.IsUnset(request.Voluntary)) {
		body["voluntary"] = request.Voluntary
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightRefundApplyV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/refund/action/apply"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightRefundApplyV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票退票申请
//
// @param request - FlightRefundApplyV2Request
//
// @return FlightRefundApplyV2Response
func (client *Client) FlightRefundApplyV2(request *FlightRefundApplyV2Request) (_result *FlightRefundApplyV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightRefundApplyV2Headers{}
	_result = &FlightRefundApplyV2Response{}
	_body, _err := client.FlightRefundApplyV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 航班退票详情
//
// @param request - FlightRefundDetailRequest
//
// @param headers - FlightRefundDetailHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightRefundDetailResponse
func (client *Client) FlightRefundDetailWithOptions(request *FlightRefundDetailRequest, headers *FlightRefundDetailHeaders, runtime *util.RuntimeOptions) (_result *FlightRefundDetailResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		query["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.DisSubOrderId)) {
		query["dis_sub_order_id"] = request.DisSubOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightRefundDetail"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/refund/action/detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightRefundDetailResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 航班退票详情
//
// @param request - FlightRefundDetailRequest
//
// @return FlightRefundDetailResponse
func (client *Client) FlightRefundDetail(request *FlightRefundDetailRequest) (_result *FlightRefundDetailResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightRefundDetailHeaders{}
	_result = &FlightRefundDetailResponse{}
	_body, _err := client.FlightRefundDetailWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票退票详情
//
// @param request - FlightRefundDetailV2Request
//
// @param headers - FlightRefundDetailV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightRefundDetailV2Response
func (client *Client) FlightRefundDetailV2WithOptions(request *FlightRefundDetailV2Request, headers *FlightRefundDetailV2Headers, runtime *util.RuntimeOptions) (_result *FlightRefundDetailV2Response, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutRefundApplyId)) {
		query["out_refund_apply_id"] = request.OutRefundApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.RefundApplyId)) {
		query["refund_apply_id"] = request.RefundApplyId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightRefundDetailV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/refund/action/detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightRefundDetailV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票退票详情
//
// @param request - FlightRefundDetailV2Request
//
// @return FlightRefundDetailV2Response
func (client *Client) FlightRefundDetailV2(request *FlightRefundDetailV2Request) (_result *FlightRefundDetailV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightRefundDetailV2Headers{}
	_result = &FlightRefundDetailV2Response{}
	_body, _err := client.FlightRefundDetailV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票退票预计算
//
// @param tmpReq - FlightRefundPreCalRequest
//
// @param headers - FlightRefundPreCalHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightRefundPreCalResponse
func (client *Client) FlightRefundPreCalWithOptions(tmpReq *FlightRefundPreCalRequest, headers *FlightRefundPreCalHeaders, runtime *util.RuntimeOptions) (_result *FlightRefundPreCalResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightRefundPreCalShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.PassengerSegmentInfoList)) {
		request.PassengerSegmentInfoListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PassengerSegmentInfoList, tea.String("passenger_segment_info_list"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		query["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.IsVoluntary)) {
		query["is_voluntary"] = request.IsVoluntary
	}

	if !tea.BoolValue(util.IsUnset(request.PassengerSegmentInfoListShrink)) {
		query["passenger_segment_info_list"] = request.PassengerSegmentInfoListShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightRefundPreCal"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/refund/action/pre-cal"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightRefundPreCalResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票退票预计算
//
// @param request - FlightRefundPreCalRequest
//
// @return FlightRefundPreCalResponse
func (client *Client) FlightRefundPreCal(request *FlightRefundPreCalRequest) (_result *FlightRefundPreCalResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightRefundPreCalHeaders{}
	_result = &FlightRefundPreCalResponse{}
	_body, _err := client.FlightRefundPreCalWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票退票费用预计算
//
// @param tmpReq - FlightRefundPreCalV2Request
//
// @param headers - FlightRefundPreCalV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightRefundPreCalV2Response
func (client *Client) FlightRefundPreCalV2WithOptions(tmpReq *FlightRefundPreCalV2Request, headers *FlightRefundPreCalV2Headers, runtime *util.RuntimeOptions) (_result *FlightRefundPreCalV2Response, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &FlightRefundPreCalV2ShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.PassengerSegmentRelations)) {
		request.PassengerSegmentRelationsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PassengerSegmentRelations, tea.String("passenger_segment_relations"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.TicketNos)) {
		request.TicketNosShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.TicketNos, tea.String("ticket_nos"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.PassengerSegmentRelationsShrink)) {
		query["passenger_segment_relations"] = request.PassengerSegmentRelationsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.PreCalType)) {
		query["pre_cal_type"] = request.PreCalType
	}

	if !tea.BoolValue(util.IsUnset(request.TicketNosShrink)) {
		query["ticket_nos"] = request.TicketNosShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Voluntary)) {
		query["voluntary"] = request.Voluntary
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightRefundPreCalV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v2/refund/action/pre-cal"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightRefundPreCalV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票退票费用预计算
//
// @param request - FlightRefundPreCalV2Request
//
// @return FlightRefundPreCalV2Response
func (client *Client) FlightRefundPreCalV2(request *FlightRefundPreCalV2Request) (_result *FlightRefundPreCalV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightRefundPreCalV2Headers{}
	_result = &FlightRefundPreCalV2Response{}
	_body, _err := client.FlightRefundPreCalV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 航班列表搜索
//
// @param request - FlightSearchListRequest
//
// @param headers - FlightSearchListHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return FlightSearchListResponse
func (client *Client) FlightSearchListWithOptions(request *FlightSearchListRequest, headers *FlightSearchListHeaders, runtime *util.RuntimeOptions) (_result *FlightSearchListResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AirlineCode)) {
		query["airline_code"] = request.AirlineCode
	}

	if !tea.BoolValue(util.IsUnset(request.ArrCityCode)) {
		query["arr_city_code"] = request.ArrCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.ArrCityName)) {
		query["arr_city_name"] = request.ArrCityName
	}

	if !tea.BoolValue(util.IsUnset(request.ArrDate)) {
		query["arr_date"] = request.ArrDate
	}

	if !tea.BoolValue(util.IsUnset(request.CabinClass)) {
		query["cabin_class"] = request.CabinClass
	}

	if !tea.BoolValue(util.IsUnset(request.DepCityCode)) {
		query["dep_city_code"] = request.DepCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.DepCityName)) {
		query["dep_city_name"] = request.DepCityName
	}

	if !tea.BoolValue(util.IsUnset(request.DepDate)) {
		query["dep_date"] = request.DepDate
	}

	if !tea.BoolValue(util.IsUnset(request.FlightNo)) {
		query["flight_no"] = request.FlightNo
	}

	if !tea.BoolValue(util.IsUnset(request.NeedMultiClassPrice)) {
		query["need_multi_class_price"] = request.NeedMultiClassPrice
	}

	if !tea.BoolValue(util.IsUnset(request.TransferCityCode)) {
		query["transfer_city_code"] = request.TransferCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.TransferFlightNo)) {
		query["transfer_flight_no"] = request.TransferFlightNo
	}

	if !tea.BoolValue(util.IsUnset(request.TransferLeaveDate)) {
		query["transfer_leave_date"] = request.TransferLeaveDate
	}

	if !tea.BoolValue(util.IsUnset(request.TripType)) {
		query["trip_type"] = request.TripType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("FlightSearchList"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/huge/dtb-flight/v1/flight/action/search-list"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &FlightSearchListResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 航班列表搜索
//
// @param request - FlightSearchListRequest
//
// @return FlightSearchListResponse
func (client *Client) FlightSearchList(request *FlightSearchListRequest) (_result *FlightSearchListResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &FlightSearchListHeaders{}
	_result = &FlightSearchListResponse{}
	_body, _err := client.FlightSearchListWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 换取GroupCorpToken接口
//
// @param request - GroupCorpTokenRequest
//
// @param headers - GroupCorpTokenHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GroupCorpTokenResponse
func (client *Client) GroupCorpTokenWithOptions(request *GroupCorpTokenRequest, headers *GroupCorpTokenHeaders, runtime *util.RuntimeOptions) (_result *GroupCorpTokenResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AppSecret)) {
		query["app_secret"] = request.AppSecret
	}

	if !tea.BoolValue(util.IsUnset(request.CorpId)) {
		query["corp_id"] = request.CorpId
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpId)) {
		query["sub_corp_id"] = request.SubCorpId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripAccessToken)) {
		realHeaders["x-acs-btrip-access-token"] = util.ToJSONString(headers.XAcsBtripAccessToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GroupCorpToken"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/btrip-open-auth/v1/group-corp-token/action/take"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &GroupCorpTokenResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 换取GroupCorpToken接口
//
// @param request - GroupCorpTokenRequest
//
// @return GroupCorpTokenResponse
func (client *Client) GroupCorpToken(request *GroupCorpTokenRequest) (_result *GroupCorpTokenResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &GroupCorpTokenHeaders{}
	_result = &GroupCorpTokenResponse{}
	_body, _err := client.GroupCorpTokenWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 集团部门同步
//
// @param tmpReq - GroupDepartSaveRequest
//
// @param headers - GroupDepartSaveHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GroupDepartSaveResponse
func (client *Client) GroupDepartSaveWithOptions(tmpReq *GroupDepartSaveRequest, headers *GroupDepartSaveHeaders, runtime *util.RuntimeOptions) (_result *GroupDepartSaveResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &GroupDepartSaveShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.SubCorpIdList)) {
		request.SubCorpIdListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SubCorpIdList, tea.String("sub_corp_id_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DeptName)) {
		body["dept_name"] = request.DeptName
	}

	if !tea.BoolValue(util.IsUnset(request.ManagerIds)) {
		body["manager_ids"] = request.ManagerIds
	}

	if !tea.BoolValue(util.IsUnset(request.OuterDeptId)) {
		body["outer_dept_id"] = request.OuterDeptId
	}

	if !tea.BoolValue(util.IsUnset(request.OuterDeptPid)) {
		body["outer_dept_pid"] = request.OuterDeptPid
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		body["status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpIdListShrink)) {
		body["sub_corp_id_list"] = request.SubCorpIdListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SyncGroup)) {
		body["sync_group"] = request.SyncGroup
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("GroupDepartSave"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/sub_corps/v1/departs"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GroupDepartSaveResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 集团部门同步
//
// @param request - GroupDepartSaveRequest
//
// @return GroupDepartSaveResponse
func (client *Client) GroupDepartSave(request *GroupDepartSaveRequest) (_result *GroupDepartSaveResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &GroupDepartSaveHeaders{}
	_result = &GroupDepartSaveResponse{}
	_body, _err := client.GroupDepartSaveWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 集团人员同步
//
// @param tmpReq - GroupUserSaveRequest
//
// @param headers - GroupUserSaveHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GroupUserSaveResponse
func (client *Client) GroupUserSaveWithOptions(tmpReq *GroupUserSaveRequest, headers *GroupUserSaveHeaders, runtime *util.RuntimeOptions) (_result *GroupUserSaveResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &GroupUserSaveShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.CertList)) {
		request.CertListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CertList, tea.String("cert_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.SubCorpIdList)) {
		request.SubCorpIdListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SubCorpIdList, tea.String("sub_corp_id_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BaseCityCode)) {
		body["base_city_code"] = request.BaseCityCode
	}

	if !tea.BoolValue(util.IsUnset(request.Birthday)) {
		body["birthday"] = request.Birthday
	}

	if !tea.BoolValue(util.IsUnset(request.CertListShrink)) {
		body["cert_list"] = request.CertListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Gender)) {
		body["gender"] = request.Gender
	}

	if !tea.BoolValue(util.IsUnset(request.JobNo)) {
		body["job_no"] = request.JobNo
	}

	if !tea.BoolValue(util.IsUnset(request.Phone)) {
		body["phone"] = request.Phone
	}

	if !tea.BoolValue(util.IsUnset(request.RealNameEn)) {
		body["real_name_en"] = request.RealNameEn
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpIdListShrink)) {
		body["sub_corp_id_list"] = request.SubCorpIdListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		body["user_name"] = request.UserName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("GroupUserSave"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/sub_corps/v1/users"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GroupUserSaveResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 集团人员同步
//
// @param request - GroupUserSaveRequest
//
// @return GroupUserSaveResponse
func (client *Client) GroupUserSave(request *GroupUserSaveRequest) (_result *GroupUserSaveResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &GroupUserSaveHeaders{}
	_result = &GroupUserSaveResponse{}
	_body, _err := client.GroupUserSaveWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店起价
//
// @param tmpReq - HotelAskingPriceRequest
//
// @param headers - HotelAskingPriceHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelAskingPriceResponse
func (client *Client) HotelAskingPriceWithOptions(tmpReq *HotelAskingPriceRequest, headers *HotelAskingPriceHeaders, runtime *util.RuntimeOptions) (_result *HotelAskingPriceResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &HotelAskingPriceShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Shids)) {
		request.ShidsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Shids, tea.String("shids"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AdultNum)) {
		query["adult_num"] = request.AdultNum
	}

	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.CheckInDate)) {
		query["check_in_date"] = request.CheckInDate
	}

	if !tea.BoolValue(util.IsUnset(request.CheckOutDate)) {
		query["check_out_date"] = request.CheckOutDate
	}

	if !tea.BoolValue(util.IsUnset(request.CityCode)) {
		query["city_code"] = request.CityCode
	}

	if !tea.BoolValue(util.IsUnset(request.CityName)) {
		query["city_name"] = request.CityName
	}

	if !tea.BoolValue(util.IsUnset(request.Dir)) {
		query["dir"] = request.Dir
	}

	if !tea.BoolValue(util.IsUnset(request.HotelStar)) {
		query["hotel_star"] = request.HotelStar
	}

	if !tea.BoolValue(util.IsUnset(request.IsProtocol)) {
		query["is_protocol"] = request.IsProtocol
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentType)) {
		query["payment_type"] = request.PaymentType
	}

	if !tea.BoolValue(util.IsUnset(request.ShidsShrink)) {
		query["shids"] = request.ShidsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SortCode)) {
		query["sort_code"] = request.SortCode
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelAskingPrice"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/hotels/action/asking-price"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelAskingPriceResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店起价
//
// @param request - HotelAskingPriceRequest
//
// @return HotelAskingPriceResponse
func (client *Client) HotelAskingPrice(request *HotelAskingPriceRequest) (_result *HotelAskingPriceResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelAskingPriceHeaders{}
	_result = &HotelAskingPriceResponse{}
	_body, _err := client.HotelAskingPriceWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询酒店记账数据
//
// @param request - HotelBillSettlementQueryRequest
//
// @param headers - HotelBillSettlementQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelBillSettlementQueryResponse
func (client *Client) HotelBillSettlementQueryWithOptions(request *HotelBillSettlementQueryRequest, headers *HotelBillSettlementQueryHeaders, runtime *util.RuntimeOptions) (_result *HotelBillSettlementQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodEnd)) {
		query["period_end"] = request.PeriodEnd
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodStart)) {
		query["period_start"] = request.PeriodStart
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelBillSettlementQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/hotel/v1/bill-settlement"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelBillSettlementQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询酒店记账数据
//
// @param request - HotelBillSettlementQueryRequest
//
// @return HotelBillSettlementQueryResponse
func (client *Client) HotelBillSettlementQuery(request *HotelBillSettlementQueryRequest) (_result *HotelBillSettlementQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelBillSettlementQueryHeaders{}
	_result = &HotelBillSettlementQueryResponse{}
	_body, _err := client.HotelBillSettlementQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店城市列表
//
// @param request - HotelCityCodeListRequest
//
// @param headers - HotelCityCodeListHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelCityCodeListResponse
func (client *Client) HotelCityCodeListWithOptions(request *HotelCityCodeListRequest, headers *HotelCityCodeListHeaders, runtime *util.RuntimeOptions) (_result *HotelCityCodeListResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CountryCode)) {
		query["country_code"] = request.CountryCode
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelCityCodeList"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/city-codes/action/search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelCityCodeListResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店城市列表
//
// @param request - HotelCityCodeListRequest
//
// @return HotelCityCodeListResponse
func (client *Client) HotelCityCodeList(request *HotelCityCodeListRequest) (_result *HotelCityCodeListResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelCityCodeListHeaders{}
	_result = &HotelCityCodeListResponse{}
	_body, _err := client.HotelCityCodeListWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询酒店超标审批详情
//
// @param request - HotelExceedApplyQueryRequest
//
// @param headers - HotelExceedApplyQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelExceedApplyQueryResponse
func (client *Client) HotelExceedApplyQueryWithOptions(request *HotelExceedApplyQueryRequest, headers *HotelExceedApplyQueryHeaders, runtime *util.RuntimeOptions) (_result *HotelExceedApplyQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.BusinessInstanceId)) {
		query["business_instance_id"] = request.BusinessInstanceId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelExceedApplyQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/hotel-exceed"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelExceedApplyQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询酒店超标审批详情
//
// @param request - HotelExceedApplyQueryRequest
//
// @return HotelExceedApplyQueryResponse
func (client *Client) HotelExceedApplyQuery(request *HotelExceedApplyQueryRequest) (_result *HotelExceedApplyQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelExceedApplyQueryHeaders{}
	_result = &HotelExceedApplyQueryResponse{}
	_body, _err := client.HotelExceedApplyQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店详情页报价接口(直连)
//
// @param request - HotelGoodsQueryRequest
//
// @param headers - HotelGoodsQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelGoodsQueryResponse
func (client *Client) HotelGoodsQueryWithOptions(request *HotelGoodsQueryRequest, headers *HotelGoodsQueryHeaders, runtime *util.RuntimeOptions) (_result *HotelGoodsQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AdultNum)) {
		query["adult_num"] = request.AdultNum
	}

	if !tea.BoolValue(util.IsUnset(request.AgreementPrice)) {
		query["agreement_price"] = request.AgreementPrice
	}

	if !tea.BoolValue(util.IsUnset(request.BeginDate)) {
		query["begin_date"] = request.BeginDate
	}

	if !tea.BoolValue(util.IsUnset(request.BreakfastIncluded)) {
		query["breakfast_included"] = request.BreakfastIncluded
	}

	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.CityCode)) {
		query["city_code"] = request.CityCode
	}

	if !tea.BoolValue(util.IsUnset(request.EndDate)) {
		query["end_date"] = request.EndDate
	}

	if !tea.BoolValue(util.IsUnset(request.HotelId)) {
		query["hotel_id"] = request.HotelId
	}

	if !tea.BoolValue(util.IsUnset(request.PayOverType)) {
		query["pay_over_type"] = request.PayOverType
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentType)) {
		query["payment_type"] = request.PaymentType
	}

	if !tea.BoolValue(util.IsUnset(request.SpecialInvoice)) {
		query["special_invoice"] = request.SpecialInvoice
	}

	if !tea.BoolValue(util.IsUnset(request.SuperMan)) {
		query["super_man"] = request.SuperMan
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelGoodsQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/hotel-goods"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelGoodsQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店详情页报价接口(直连)
//
// @param request - HotelGoodsQueryRequest
//
// @return HotelGoodsQueryResponse
func (client *Client) HotelGoodsQuery(request *HotelGoodsQueryRequest) (_result *HotelGoodsQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelGoodsQueryHeaders{}
	_result = &HotelGoodsQueryResponse{}
	_body, _err := client.HotelGoodsQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 获取酒店清单
//
// @param request - HotelIndexInfoRequest
//
// @param headers - HotelIndexInfoHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelIndexInfoResponse
func (client *Client) HotelIndexInfoWithOptions(request *HotelIndexInfoRequest, headers *HotelIndexInfoHeaders, runtime *util.RuntimeOptions) (_result *HotelIndexInfoResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CityCode)) {
		query["city_code"] = request.CityCode
	}

	if !tea.BoolValue(util.IsUnset(request.HotelStatus)) {
		query["hotel_status"] = request.HotelStatus
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PageToken)) {
		query["page_token"] = request.PageToken
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelIndexInfo"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/index-infos"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelIndexInfoResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 获取酒店清单
//
// @param request - HotelIndexInfoRequest
//
// @return HotelIndexInfoResponse
func (client *Client) HotelIndexInfo(request *HotelIndexInfoRequest) (_result *HotelIndexInfoResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelIndexInfoHeaders{}
	_result = &HotelIndexInfoResponse{}
	_body, _err := client.HotelIndexInfoWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店订单取消
//
// @param request - HotelOrderCancelRequest
//
// @param headers - HotelOrderCancelHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelOrderCancelResponse
func (client *Client) HotelOrderCancelWithOptions(request *HotelOrderCancelRequest, headers *HotelOrderCancelHeaders, runtime *util.RuntimeOptions) (_result *HotelOrderCancelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripOrderId)) {
		query["btrip_order_id"] = request.BtripOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		query["dis_order_id"] = request.DisOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelOrderCancel"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/orders/action/cancel"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelOrderCancelResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店订单取消
//
// @param request - HotelOrderCancelRequest
//
// @return HotelOrderCancelResponse
func (client *Client) HotelOrderCancel(request *HotelOrderCancelRequest) (_result *HotelOrderCancelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelOrderCancelHeaders{}
	_result = &HotelOrderCancelResponse{}
	_body, _err := client.HotelOrderCancelWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店订单修改申请
//
// @param tmpReq - HotelOrderChangeApplyRequest
//
// @param headers - HotelOrderChangeApplyHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelOrderChangeApplyResponse
func (client *Client) HotelOrderChangeApplyWithOptions(tmpReq *HotelOrderChangeApplyRequest, headers *HotelOrderChangeApplyHeaders, runtime *util.RuntimeOptions) (_result *HotelOrderChangeApplyResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &HotelOrderChangeApplyShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.RoomInfoList)) {
		request.RoomInfoListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.RoomInfoList, tea.String("room_info_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		body["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		body["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.Reason)) {
		body["reason"] = request.Reason
	}

	if !tea.BoolValue(util.IsUnset(request.RoomInfoListShrink)) {
		body["room_info_list"] = request.RoomInfoListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SaleOrderId)) {
		body["sale_order_id"] = request.SaleOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelOrderChangeApply"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/orders/action/change/apply"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelOrderChangeApplyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店订单修改申请
//
// @param request - HotelOrderChangeApplyRequest
//
// @return HotelOrderChangeApplyResponse
func (client *Client) HotelOrderChangeApply(request *HotelOrderChangeApplyRequest) (_result *HotelOrderChangeApplyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelOrderChangeApplyHeaders{}
	_result = &HotelOrderChangeApplyResponse{}
	_body, _err := client.HotelOrderChangeApplyWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店订单修改详情
//
// @param request - HotelOrderChangeDetailRequest
//
// @param headers - HotelOrderChangeDetailHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelOrderChangeDetailResponse
func (client *Client) HotelOrderChangeDetailWithOptions(request *HotelOrderChangeDetailRequest, headers *HotelOrderChangeDetailHeaders, runtime *util.RuntimeOptions) (_result *HotelOrderChangeDetailResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		body["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.ChangeOrderId)) {
		body["change_order_id"] = request.ChangeOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		body["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.SaleOrderId)) {
		body["sale_order_id"] = request.SaleOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelOrderChangeDetail"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/orders/action/change/detail"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelOrderChangeDetailResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店订单修改详情
//
// @param request - HotelOrderChangeDetailRequest
//
// @return HotelOrderChangeDetailResponse
func (client *Client) HotelOrderChangeDetail(request *HotelOrderChangeDetailRequest) (_result *HotelOrderChangeDetailResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelOrderChangeDetailHeaders{}
	_result = &HotelOrderChangeDetailResponse{}
	_body, _err := client.HotelOrderChangeDetailWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店订单创建
//
// @param tmpReq - HotelOrderCreateRequest
//
// @param headers - HotelOrderCreateHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelOrderCreateResponse
func (client *Client) HotelOrderCreateWithOptions(tmpReq *HotelOrderCreateRequest, headers *HotelOrderCreateHeaders, runtime *util.RuntimeOptions) (_result *HotelOrderCreateResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &HotelOrderCreateShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.InvoiceInfo)) {
		request.InvoiceInfoShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.InvoiceInfo, tea.String("invoice_info"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.OccupantInfoList)) {
		request.OccupantInfoListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.OccupantInfoList, tea.String("occupant_info_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.PromotionInfo)) {
		request.PromotionInfoShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PromotionInfo, tea.String("promotion_info"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		body["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.CheckIn)) {
		body["check_in"] = request.CheckIn
	}

	if !tea.BoolValue(util.IsUnset(request.CheckOut)) {
		body["check_out"] = request.CheckOut
	}

	if !tea.BoolValue(util.IsUnset(request.ContractEmail)) {
		body["contract_email"] = request.ContractEmail
	}

	if !tea.BoolValue(util.IsUnset(request.ContractName)) {
		body["contract_name"] = request.ContractName
	}

	if !tea.BoolValue(util.IsUnset(request.ContractPhone)) {
		body["contract_phone"] = request.ContractPhone
	}

	if !tea.BoolValue(util.IsUnset(request.CorpPayPrice)) {
		body["corp_pay_price"] = request.CorpPayPrice
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		body["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.Extra)) {
		body["extra"] = request.Extra
	}

	if !tea.BoolValue(util.IsUnset(request.InvoiceInfoShrink)) {
		body["invoice_info"] = request.InvoiceInfoShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ItemId)) {
		body["item_id"] = request.ItemId
	}

	if !tea.BoolValue(util.IsUnset(request.ItineraryNo)) {
		body["itinerary_no"] = request.ItineraryNo
	}

	if !tea.BoolValue(util.IsUnset(request.OccupantInfoListShrink)) {
		body["occupant_info_list"] = request.OccupantInfoListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.PersonPayPrice)) {
		body["person_pay_price"] = request.PersonPayPrice
	}

	if !tea.BoolValue(util.IsUnset(request.PromotionInfoShrink)) {
		body["promotion_info"] = request.PromotionInfoShrink
	}

	if !tea.BoolValue(util.IsUnset(request.RatePlanId)) {
		body["rate_plan_id"] = request.RatePlanId
	}

	if !tea.BoolValue(util.IsUnset(request.RoomId)) {
		body["room_id"] = request.RoomId
	}

	if !tea.BoolValue(util.IsUnset(request.RoomNum)) {
		body["room_num"] = request.RoomNum
	}

	if !tea.BoolValue(util.IsUnset(request.SellerId)) {
		body["seller_id"] = request.SellerId
	}

	if !tea.BoolValue(util.IsUnset(request.Shid)) {
		body["shid"] = request.Shid
	}

	if !tea.BoolValue(util.IsUnset(request.TotalOrderPrice)) {
		body["total_order_price"] = request.TotalOrderPrice
	}

	if !tea.BoolValue(util.IsUnset(request.ValidateResKey)) {
		body["validate_res_key"] = request.ValidateResKey
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelOrderCreate"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/orders/action/create"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelOrderCreateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店订单创建
//
// @param request - HotelOrderCreateRequest
//
// @return HotelOrderCreateResponse
func (client *Client) HotelOrderCreate(request *HotelOrderCreateRequest) (_result *HotelOrderCreateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelOrderCreateHeaders{}
	_result = &HotelOrderCreateResponse{}
	_body, _err := client.HotelOrderCreateWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店订单明细信息
//
// @param request - HotelOrderDetailInfoRequest
//
// @param headers - HotelOrderDetailInfoHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelOrderDetailInfoResponse
func (client *Client) HotelOrderDetailInfoWithOptions(request *HotelOrderDetailInfoRequest, headers *HotelOrderDetailInfoHeaders, runtime *util.RuntimeOptions) (_result *HotelOrderDetailInfoResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripOrderId)) {
		query["btrip_order_id"] = request.BtripOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		query["dis_order_id"] = request.DisOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelOrderDetailInfo"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/orders/action/detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelOrderDetailInfoResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店订单明细信息
//
// @param request - HotelOrderDetailInfoRequest
//
// @return HotelOrderDetailInfoResponse
func (client *Client) HotelOrderDetailInfo(request *HotelOrderDetailInfoRequest) (_result *HotelOrderDetailInfoResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelOrderDetailInfoHeaders{}
	_result = &HotelOrderDetailInfoResponse{}
	_body, _err := client.HotelOrderDetailInfoWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 自营酒店订单查询
//
// @param headers - HotelOrderInfoQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelOrderInfoQueryResponse
func (client *Client) HotelOrderInfoQueryWithOptions(orderId *string, headers *HotelOrderInfoQueryHeaders, runtime *util.RuntimeOptions) (_result *HotelOrderInfoQueryResponse, _err error) {
	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
	}
	params := &openapi.Params{
		Action:      tea.String("HotelOrderInfoQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/order/v1/hotelOrders/" + tea.StringValue(openapiutil.GetEncodeParam(orderId))),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelOrderInfoQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 自营酒店订单查询
//
// @return HotelOrderInfoQueryResponse
func (client *Client) HotelOrderInfoQuery(orderId *string) (_result *HotelOrderInfoQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelOrderInfoQueryHeaders{}
	_result = &HotelOrderInfoQueryResponse{}
	_body, _err := client.HotelOrderInfoQueryWithOptions(orderId, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询酒店订单列表
//
// @param request - HotelOrderListQueryRequest
//
// @param headers - HotelOrderListQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelOrderListQueryResponse
func (client *Client) HotelOrderListQueryWithOptions(request *HotelOrderListQueryRequest, headers *HotelOrderListQueryHeaders, runtime *util.RuntimeOptions) (_result *HotelOrderListQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AllApply)) {
		query["all_apply"] = request.AllApply
	}

	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.DepartId)) {
		query["depart_id"] = request.DepartId
	}

	if !tea.BoolValue(util.IsUnset(request.EndTime)) {
		query["end_time"] = request.EndTime
	}

	if !tea.BoolValue(util.IsUnset(request.Page)) {
		query["page"] = request.Page
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.StartTime)) {
		query["start_time"] = request.StartTime
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartApplyId)) {
		query["thirdpart_apply_id"] = request.ThirdpartApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.UpdateEndTime)) {
		query["update_end_time"] = request.UpdateEndTime
	}

	if !tea.BoolValue(util.IsUnset(request.UpdateStartTime)) {
		query["update_start_time"] = request.UpdateStartTime
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelOrderListQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/hotel/v1/order-list"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelOrderListQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询酒店订单列表
//
// @param request - HotelOrderListQueryRequest
//
// @return HotelOrderListQueryResponse
func (client *Client) HotelOrderListQuery(request *HotelOrderListQueryRequest) (_result *HotelOrderListQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelOrderListQueryHeaders{}
	_result = &HotelOrderListQueryResponse{}
	_body, _err := client.HotelOrderListQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店订单支付
//
// @param request - HotelOrderPayRequest
//
// @param headers - HotelOrderPayHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelOrderPayResponse
func (client *Client) HotelOrderPayWithOptions(request *HotelOrderPayRequest, headers *HotelOrderPayHeaders, runtime *util.RuntimeOptions) (_result *HotelOrderPayResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripOrderId)) {
		body["btrip_order_id"] = request.BtripOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		body["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.CompanyPayFee)) {
		body["company_pay_fee"] = request.CompanyPayFee
	}

	if !tea.BoolValue(util.IsUnset(request.PersonPayFee)) {
		body["person_pay_fee"] = request.PersonPayFee
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPayAccount)) {
		body["third_pay_account"] = request.ThirdPayAccount
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdTradeNo)) {
		body["third_trade_no"] = request.ThirdTradeNo
	}

	if !tea.BoolValue(util.IsUnset(request.TotalPrice)) {
		body["total_price"] = request.TotalPrice
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelOrderPay"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/orders/action/pay"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelOrderPayResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店订单支付
//
// @param request - HotelOrderPayRequest
//
// @return HotelOrderPayResponse
func (client *Client) HotelOrderPay(request *HotelOrderPayRequest) (_result *HotelOrderPayResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelOrderPayHeaders{}
	_result = &HotelOrderPayResponse{}
	_body, _err := client.HotelOrderPayWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店下单前校验
//
// @param tmpReq - HotelOrderPreValidateRequest
//
// @param headers - HotelOrderPreValidateHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelOrderPreValidateResponse
func (client *Client) HotelOrderPreValidateWithOptions(tmpReq *HotelOrderPreValidateRequest, headers *HotelOrderPreValidateHeaders, runtime *util.RuntimeOptions) (_result *HotelOrderPreValidateResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &HotelOrderPreValidateShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.DailyList)) {
		request.DailyListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.DailyList, tea.String("daily_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.OccupantInfoList)) {
		request.OccupantInfoListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.OccupantInfoList, tea.String("occupant_info_list"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.CheckIn)) {
		query["check_in"] = request.CheckIn
	}

	if !tea.BoolValue(util.IsUnset(request.CheckOut)) {
		query["check_out"] = request.CheckOut
	}

	if !tea.BoolValue(util.IsUnset(request.DailyListShrink)) {
		query["daily_list"] = request.DailyListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ItemId)) {
		query["item_id"] = request.ItemId
	}

	if !tea.BoolValue(util.IsUnset(request.NumberOfAdultsPerRoom)) {
		query["number_of_adults_per_room"] = request.NumberOfAdultsPerRoom
	}

	if !tea.BoolValue(util.IsUnset(request.OccupantInfoListShrink)) {
		query["occupant_info_list"] = request.OccupantInfoListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.RatePlanId)) {
		query["rate_plan_id"] = request.RatePlanId
	}

	if !tea.BoolValue(util.IsUnset(request.RoomId)) {
		query["room_id"] = request.RoomId
	}

	if !tea.BoolValue(util.IsUnset(request.RoomNum)) {
		query["room_num"] = request.RoomNum
	}

	if !tea.BoolValue(util.IsUnset(request.SearchRoomPrice)) {
		query["search_room_price"] = request.SearchRoomPrice
	}

	if !tea.BoolValue(util.IsUnset(request.SellerId)) {
		query["seller_id"] = request.SellerId
	}

	if !tea.BoolValue(util.IsUnset(request.Shid)) {
		query["shid"] = request.Shid
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelOrderPreValidate"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/orders/action/pre-validate"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelOrderPreValidateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店下单前校验
//
// @param request - HotelOrderPreValidateRequest
//
// @return HotelOrderPreValidateResponse
func (client *Client) HotelOrderPreValidate(request *HotelOrderPreValidateRequest) (_result *HotelOrderPreValidateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelOrderPreValidateHeaders{}
	_result = &HotelOrderPreValidateResponse{}
	_body, _err := client.HotelOrderPreValidateWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店订单查询
//
// @param request - HotelOrderQueryRequest
//
// @param headers - HotelOrderQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelOrderQueryResponse
func (client *Client) HotelOrderQueryWithOptions(request *HotelOrderQueryRequest, headers *HotelOrderQueryHeaders, runtime *util.RuntimeOptions) (_result *HotelOrderQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelOrderQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/hotel/v1/order"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelOrderQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店订单查询
//
// @param request - HotelOrderQueryRequest
//
// @return HotelOrderQueryResponse
func (client *Client) HotelOrderQuery(request *HotelOrderQueryRequest) (_result *HotelOrderQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelOrderQueryHeaders{}
	_result = &HotelOrderQueryResponse{}
	_body, _err := client.HotelOrderQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店拉动态拉取价格接口(落地)
//
// @param tmpReq - HotelPricePullRequest
//
// @param headers - HotelPricePullHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelPricePullResponse
func (client *Client) HotelPricePullWithOptions(tmpReq *HotelPricePullRequest, headers *HotelPricePullHeaders, runtime *util.RuntimeOptions) (_result *HotelPricePullResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &HotelPricePullShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.HotelIds)) {
		request.HotelIdsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.HotelIds, tea.String("hotel_ids"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.CheckIn)) {
		query["check_in"] = request.CheckIn
	}

	if !tea.BoolValue(util.IsUnset(request.CheckOut)) {
		query["check_out"] = request.CheckOut
	}

	if !tea.BoolValue(util.IsUnset(request.CityCode)) {
		query["city_code"] = request.CityCode
	}

	if !tea.BoolValue(util.IsUnset(request.HotelIdsShrink)) {
		query["hotel_ids"] = request.HotelIdsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentType)) {
		query["payment_type"] = request.PaymentType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelPricePull"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/prices/action/pull"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelPricePullResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店拉动态拉取价格接口(落地)
//
// @param request - HotelPricePullRequest
//
// @return HotelPricePullResponse
func (client *Client) HotelPricePull(request *HotelPricePullRequest) (_result *HotelPricePullResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelPricePullHeaders{}
	_result = &HotelPricePullResponse{}
	_body, _err := client.HotelPricePullWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 获取酒店静态房型详情
//
// @param tmpReq - HotelRoomInfoRequest
//
// @param headers - HotelRoomInfoHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelRoomInfoResponse
func (client *Client) HotelRoomInfoWithOptions(tmpReq *HotelRoomInfoRequest, headers *HotelRoomInfoHeaders, runtime *util.RuntimeOptions) (_result *HotelRoomInfoResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &HotelRoomInfoShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.RoomIds)) {
		request.RoomIdsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.RoomIds, tea.String("room_ids"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RoomIdsShrink)) {
		query["room_ids"] = request.RoomIdsShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelRoomInfo"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/room-infos"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelRoomInfoResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 获取酒店静态房型详情
//
// @param request - HotelRoomInfoRequest
//
// @return HotelRoomInfoResponse
func (client *Client) HotelRoomInfo(request *HotelRoomInfoRequest) (_result *HotelRoomInfoResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelRoomInfoHeaders{}
	_result = &HotelRoomInfoResponse{}
	_body, _err := client.HotelRoomInfoWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店列表搜索接口(直连)
//
// @param tmpReq - HotelSearchRequest
//
// @param headers - HotelSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelSearchResponse
func (client *Client) HotelSearchWithOptions(tmpReq *HotelSearchRequest, headers *HotelSearchHeaders, runtime *util.RuntimeOptions) (_result *HotelSearchResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &HotelSearchShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.BrandCode)) {
		request.BrandCodeShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.BrandCode, tea.String("brand_code"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Shids)) {
		request.ShidsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Shids, tea.String("shids"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AdultNum)) {
		query["adult_num"] = request.AdultNum
	}

	if !tea.BoolValue(util.IsUnset(request.BrandCodeShrink)) {
		query["brand_code"] = request.BrandCodeShrink
	}

	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.CheckInDate)) {
		query["check_in_date"] = request.CheckInDate
	}

	if !tea.BoolValue(util.IsUnset(request.CheckOutDate)) {
		query["check_out_date"] = request.CheckOutDate
	}

	if !tea.BoolValue(util.IsUnset(request.CityCode)) {
		query["city_code"] = request.CityCode
	}

	if !tea.BoolValue(util.IsUnset(request.Dir)) {
		query["dir"] = request.Dir
	}

	if !tea.BoolValue(util.IsUnset(request.Distance)) {
		query["distance"] = request.Distance
	}

	if !tea.BoolValue(util.IsUnset(request.DistrictCode)) {
		query["district_code"] = request.DistrictCode
	}

	if !tea.BoolValue(util.IsUnset(request.HotelStar)) {
		query["hotel_star"] = request.HotelStar
	}

	if !tea.BoolValue(util.IsUnset(request.IsProtocol)) {
		query["is_protocol"] = request.IsProtocol
	}

	if !tea.BoolValue(util.IsUnset(request.KeyWords)) {
		query["key_words"] = request.KeyWords
	}

	if !tea.BoolValue(util.IsUnset(request.Location)) {
		query["location"] = request.Location
	}

	if !tea.BoolValue(util.IsUnset(request.MaxPrice)) {
		query["max_price"] = request.MaxPrice
	}

	if !tea.BoolValue(util.IsUnset(request.MinPrice)) {
		query["min_price"] = request.MinPrice
	}

	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PayOverType)) {
		query["pay_over_type"] = request.PayOverType
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentType)) {
		query["payment_type"] = request.PaymentType
	}

	if !tea.BoolValue(util.IsUnset(request.ShidsShrink)) {
		query["shids"] = request.ShidsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SortCode)) {
		query["sort_code"] = request.SortCode
	}

	if !tea.BoolValue(util.IsUnset(request.SuperMan)) {
		query["super_man"] = request.SuperMan
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/hotels/action/search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店列表搜索接口(直连)
//
// @param request - HotelSearchRequest
//
// @return HotelSearchResponse
func (client *Client) HotelSearch(request *HotelSearchRequest) (_result *HotelSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelSearchHeaders{}
	_result = &HotelSearchResponse{}
	_body, _err := client.HotelSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询酒店静态详情
//
// @param tmpReq - HotelStaticInfoRequest
//
// @param headers - HotelStaticInfoHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelStaticInfoResponse
func (client *Client) HotelStaticInfoWithOptions(tmpReq *HotelStaticInfoRequest, headers *HotelStaticInfoHeaders, runtime *util.RuntimeOptions) (_result *HotelStaticInfoResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &HotelStaticInfoShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.HotelIds)) {
		request.HotelIdsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.HotelIds, tea.String("hotel_ids"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.HotelIdsShrink)) {
		query["hotel_ids"] = request.HotelIdsShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelStaticInfo"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v1/static-infos"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelStaticInfoResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询酒店静态详情
//
// @param request - HotelStaticInfoRequest
//
// @return HotelStaticInfoResponse
func (client *Client) HotelStaticInfo(request *HotelStaticInfoRequest) (_result *HotelStaticInfoResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelStaticInfoHeaders{}
	_result = &HotelStaticInfoResponse{}
	_body, _err := client.HotelStaticInfoWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 酒店关键词搜索
//
// @param request - HotelSuggestV2Request
//
// @param headers - HotelSuggestV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return HotelSuggestV2Response
func (client *Client) HotelSuggestV2WithOptions(request *HotelSuggestV2Request, headers *HotelSuggestV2Headers, runtime *util.RuntimeOptions) (_result *HotelSuggestV2Response, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.CheckIn)) {
		query["check_in"] = request.CheckIn
	}

	if !tea.BoolValue(util.IsUnset(request.CheckOut)) {
		query["check_out"] = request.CheckOut
	}

	if !tea.BoolValue(util.IsUnset(request.CityCode)) {
		query["city_code"] = request.CityCode
	}

	if !tea.BoolValue(util.IsUnset(request.Keyword)) {
		query["keyword"] = request.Keyword
	}

	if !tea.BoolValue(util.IsUnset(request.SearchType)) {
		query["search_type"] = request.SearchType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("HotelSuggestV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-hotel/v2/suggest-infos"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &HotelSuggestV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 酒店关键词搜索
//
// @param request - HotelSuggestV2Request
//
// @return HotelSuggestV2Response
func (client *Client) HotelSuggestV2(request *HotelSuggestV2Request) (_result *HotelSuggestV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &HotelSuggestV2Headers{}
	_result = &HotelSuggestV2Response{}
	_body, _err := client.HotelSuggestV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询国际机票记账数据
//
// @param request - IeFlightBillSettlementQueryRequest
//
// @param headers - IeFlightBillSettlementQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IeFlightBillSettlementQueryResponse
func (client *Client) IeFlightBillSettlementQueryWithOptions(request *IeFlightBillSettlementQueryRequest, headers *IeFlightBillSettlementQueryHeaders, runtime *util.RuntimeOptions) (_result *IeFlightBillSettlementQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodEnd)) {
		query["period_end"] = request.PeriodEnd
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodStart)) {
		query["period_start"] = request.PeriodStart
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IeFlightBillSettlementQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/ie-flight/v1/bill-settlement"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IeFlightBillSettlementQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询国际机票记账数据
//
// @param request - IeFlightBillSettlementQueryRequest
//
// @return IeFlightBillSettlementQueryResponse
func (client *Client) IeFlightBillSettlementQuery(request *IeFlightBillSettlementQueryRequest) (_result *IeFlightBillSettlementQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IeFlightBillSettlementQueryHeaders{}
	_result = &IeFlightBillSettlementQueryResponse{}
	_body, _err := client.IeFlightBillSettlementQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询国际/中国港澳台酒店记账数据
//
// @param request - IeHotelBillSettlementQueryRequest
//
// @param headers - IeHotelBillSettlementQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IeHotelBillSettlementQueryResponse
func (client *Client) IeHotelBillSettlementQueryWithOptions(request *IeHotelBillSettlementQueryRequest, headers *IeHotelBillSettlementQueryHeaders, runtime *util.RuntimeOptions) (_result *IeHotelBillSettlementQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Category)) {
		query["category"] = request.Category
	}

	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodEnd)) {
		query["period_end"] = request.PeriodEnd
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodStart)) {
		query["period_start"] = request.PeriodStart
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IeHotelBillSettlementQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/ie-hotel/v1/bill-settlement"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IeHotelBillSettlementQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询国际/中国港澳台酒店记账数据
//
// @param request - IeHotelBillSettlementQueryRequest
//
// @return IeHotelBillSettlementQueryResponse
func (client *Client) IeHotelBillSettlementQuery(request *IeHotelBillSettlementQueryRequest) (_result *IeHotelBillSettlementQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IeHotelBillSettlementQueryHeaders{}
	_result = &IeHotelBillSettlementQueryResponse{}
	_body, _err := client.IeHotelBillSettlementQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询保险电子发票
//
// @param request - InsInvoiceScanQueryRequest
//
// @param headers - InsInvoiceScanQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InsInvoiceScanQueryResponse
func (client *Client) InsInvoiceScanQueryWithOptions(request *InsInvoiceScanQueryRequest, headers *InsInvoiceScanQueryHeaders, runtime *util.RuntimeOptions) (_result *InsInvoiceScanQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BillDate)) {
		query["bill_date"] = request.BillDate
	}

	if !tea.BoolValue(util.IsUnset(request.BillId)) {
		query["bill_id"] = request.BillId
	}

	if !tea.BoolValue(util.IsUnset(request.InvoiceSubTaskId)) {
		query["invoice_sub_task_id"] = request.InvoiceSubTaskId
	}

	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("InsInvoiceScanQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/scan/v1/ins-invoice"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &InsInvoiceScanQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询保险电子发票
//
// @param request - InsInvoiceScanQueryRequest
//
// @return InsInvoiceScanQueryResponse
func (client *Client) InsInvoiceScanQuery(request *InsInvoiceScanQueryRequest) (_result *InsInvoiceScanQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InsInvoiceScanQueryHeaders{}
	_result = &InsInvoiceScanQueryResponse{}
	_body, _err := client.InsInvoiceScanQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 保险订单申请
//
// @param request - InsureOrderApplyRequest
//
// @param headers - InsureOrderApplyHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InsureOrderApplyResponse
func (client *Client) InsureOrderApplyWithOptions(request *InsureOrderApplyRequest, headers *InsureOrderApplyHeaders, runtime *util.RuntimeOptions) (_result *InsureOrderApplyResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		body["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		body["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.InsOrderId)) {
		body["ins_order_id"] = request.InsOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		body["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutSubOrderId)) {
		body["out_sub_order_id"] = request.OutSubOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.SupplierCode)) {
		body["supplier_code"] = request.SupplierCode
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("InsureOrderApply"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/insurances/action/apply"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &InsureOrderApplyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 保险订单申请
//
// @param request - InsureOrderApplyRequest
//
// @return InsureOrderApplyResponse
func (client *Client) InsureOrderApply(request *InsureOrderApplyRequest) (_result *InsureOrderApplyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InsureOrderApplyHeaders{}
	_result = &InsureOrderApplyResponse{}
	_body, _err := client.InsureOrderApplyWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 保险订单取消
//
// @param request - InsureOrderCancelRequest
//
// @param headers - InsureOrderCancelHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InsureOrderCancelResponse
func (client *Client) InsureOrderCancelWithOptions(insOrderId *string, request *InsureOrderCancelRequest, headers *InsureOrderCancelHeaders, runtime *util.RuntimeOptions) (_result *InsureOrderCancelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		query["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.SupplierCode)) {
		query["supplier_code"] = request.SupplierCode
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("InsureOrderCancel"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/insurances/" + tea.StringValue(openapiutil.GetEncodeParam(insOrderId)) + "/action/cancel"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &InsureOrderCancelResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 保险订单取消
//
// @param request - InsureOrderCancelRequest
//
// @return InsureOrderCancelResponse
func (client *Client) InsureOrderCancel(insOrderId *string, request *InsureOrderCancelRequest) (_result *InsureOrderCancelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InsureOrderCancelHeaders{}
	_result = &InsureOrderCancelResponse{}
	_body, _err := client.InsureOrderCancelWithOptions(insOrderId, request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 保险订单创建
//
// @param tmpReq - InsureOrderCreateRequest
//
// @param headers - InsureOrderCreateHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InsureOrderCreateResponse
func (client *Client) InsureOrderCreateWithOptions(tmpReq *InsureOrderCreateRequest, headers *InsureOrderCreateHeaders, runtime *util.RuntimeOptions) (_result *InsureOrderCreateResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &InsureOrderCreateShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Applicant)) {
		request.ApplicantShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Applicant, tea.String("applicant"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.InsPersonAndSegmentList)) {
		request.InsPersonAndSegmentListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.InsPersonAndSegmentList, tea.String("ins_person_and_segment_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplicantShrink)) {
		body["applicant"] = request.ApplicantShrink
	}

	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		body["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		body["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.InsPersonAndSegmentListShrink)) {
		body["ins_person_and_segment_list"] = request.InsPersonAndSegmentListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		body["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OutInsOrderId)) {
		body["out_ins_order_id"] = request.OutInsOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutSubOrderId)) {
		body["out_sub_order_id"] = request.OutSubOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.SupplierCode)) {
		body["supplier_code"] = request.SupplierCode
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("InsureOrderCreate"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/insurances/action/create"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &InsureOrderCreateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 保险订单创建
//
// @param request - InsureOrderCreateRequest
//
// @return InsureOrderCreateResponse
func (client *Client) InsureOrderCreate(request *InsureOrderCreateRequest) (_result *InsureOrderCreateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InsureOrderCreateHeaders{}
	_result = &InsureOrderCreateResponse{}
	_body, _err := client.InsureOrderCreateWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 保险订单查询
//
// @param request - InsureOrderDetailRequest
//
// @param headers - InsureOrderDetailHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InsureOrderDetailResponse
func (client *Client) InsureOrderDetailWithOptions(request *InsureOrderDetailRequest, headers *InsureOrderDetailHeaders, runtime *util.RuntimeOptions) (_result *InsureOrderDetailResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		query["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.InsOrderId)) {
		query["ins_order_id"] = request.InsOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.SupplierCode)) {
		query["supplier_code"] = request.SupplierCode
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("InsureOrderDetail"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/insurances/action/detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &InsureOrderDetailResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 保险订单查询
//
// @param request - InsureOrderDetailRequest
//
// @return InsureOrderDetailResponse
func (client *Client) InsureOrderDetail(request *InsureOrderDetailRequest) (_result *InsureOrderDetailResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InsureOrderDetailHeaders{}
	_result = &InsureOrderDetailResponse{}
	_body, _err := client.InsureOrderDetailWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 保险订单支付
//
// @param request - InsureOrderPayRequest
//
// @param headers - InsureOrderPayHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InsureOrderPayResponse
func (client *Client) InsureOrderPayWithOptions(insOrderId *string, request *InsureOrderPayRequest, headers *InsureOrderPayHeaders, runtime *util.RuntimeOptions) (_result *InsureOrderPayResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		body["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		body["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		body["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutSubOrderId)) {
		body["out_sub_order_id"] = request.OutSubOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentAmount)) {
		body["payment_amount"] = request.PaymentAmount
	}

	if !tea.BoolValue(util.IsUnset(request.SupplierCode)) {
		body["supplier_code"] = request.SupplierCode
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("InsureOrderPay"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/insurances/" + tea.StringValue(openapiutil.GetEncodeParam(insOrderId)) + "/action/pay"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &InsureOrderPayResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 保险订单支付
//
// @param request - InsureOrderPayRequest
//
// @return InsureOrderPayResponse
func (client *Client) InsureOrderPay(insOrderId *string, request *InsureOrderPayRequest) (_result *InsureOrderPayResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InsureOrderPayHeaders{}
	_result = &InsureOrderPayResponse{}
	_body, _err := client.InsureOrderPayWithOptions(insOrderId, request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 保险订单退保
//
// @param tmpReq - InsureOrderRefundRequest
//
// @param headers - InsureOrderRefundHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InsureOrderRefundResponse
func (client *Client) InsureOrderRefundWithOptions(insOrderId *string, tmpReq *InsureOrderRefundRequest, headers *InsureOrderRefundHeaders, runtime *util.RuntimeOptions) (_result *InsureOrderRefundResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &InsureOrderRefundShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.PolicyNoList)) {
		request.PolicyNoListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PolicyNoList, tea.String("policy_no_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.SubInsOrderIds)) {
		request.SubInsOrderIdsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SubInsOrderIds, tea.String("sub_ins_order_ids"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		body["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		body["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		body["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OutApplyId)) {
		body["out_apply_id"] = request.OutApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.PolicyNoListShrink)) {
		body["policy_no_list"] = request.PolicyNoListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SubInsOrderIdsShrink)) {
		body["sub_ins_order_ids"] = request.SubInsOrderIdsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SupplierCode)) {
		body["supplier_code"] = request.SupplierCode
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("InsureOrderRefund"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/insurances/" + tea.StringValue(openapiutil.GetEncodeParam(insOrderId)) + "/action/refund"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &InsureOrderRefundResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 保险订单退保
//
// @param request - InsureOrderRefundRequest
//
// @return InsureOrderRefundResponse
func (client *Client) InsureOrderRefund(insOrderId *string, request *InsureOrderRefundRequest) (_result *InsureOrderRefundResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InsureOrderRefundHeaders{}
	_result = &InsureOrderRefundResponse{}
	_body, _err := client.InsureOrderRefundWithOptions(insOrderId, request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询保单详情链接
//
// @param headers - InsureOrderUrlDetailHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InsureOrderUrlDetailResponse
func (client *Client) InsureOrderUrlDetailWithOptions(insOrderId *string, headers *InsureOrderUrlDetailHeaders, runtime *util.RuntimeOptions) (_result *InsureOrderUrlDetailResponse, _err error) {
	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
	}
	params := &openapi.Params{
		Action:      tea.String("InsureOrderUrlDetail"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/insurances/" + tea.StringValue(openapiutil.GetEncodeParam(insOrderId))),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &InsureOrderUrlDetailResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询保单详情链接
//
// @return InsureOrderUrlDetailResponse
func (client *Client) InsureOrderUrlDetail(insOrderId *string) (_result *InsureOrderUrlDetailResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InsureOrderUrlDetailHeaders{}
	_result = &InsureOrderUrlDetailResponse{}
	_body, _err := client.InsureOrderUrlDetailWithOptions(insOrderId, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 退保详情查询
//
// @param request - InsureRefundDetailRequest
//
// @param headers - InsureRefundDetailHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InsureRefundDetailResponse
func (client *Client) InsureRefundDetailWithOptions(request *InsureRefundDetailRequest, headers *InsureRefundDetailHeaders, runtime *util.RuntimeOptions) (_result *InsureRefundDetailResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		query["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.InsOrderId)) {
		query["ins_order_id"] = request.InsOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OutApplyId)) {
		query["out_apply_id"] = request.OutApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.SupplierCode)) {
		query["supplier_code"] = request.SupplierCode
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("InsureRefundDetail"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/insurances/action/refund-detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &InsureRefundDetailResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 退保详情查询
//
// @param request - InsureRefundDetailRequest
//
// @return InsureRefundDetailResponse
func (client *Client) InsureRefundDetail(request *InsureRefundDetailRequest) (_result *InsureRefundDetailResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InsureRefundDetailHeaders{}
	_result = &InsureRefundDetailResponse{}
	_body, _err := client.InsureRefundDetailWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 国际机票创建订单
//
// @param tmpReq - IntlFlightCreateOrderRequest
//
// @param headers - IntlFlightCreateOrderHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IntlFlightCreateOrderResponse
func (client *Client) IntlFlightCreateOrderWithOptions(tmpReq *IntlFlightCreateOrderRequest, headers *IntlFlightCreateOrderHeaders, runtime *util.RuntimeOptions) (_result *IntlFlightCreateOrderResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &IntlFlightCreateOrderShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ContactInfo)) {
		request.ContactInfoShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ContactInfo, tea.String("contact_info"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.CostCenter)) {
		request.CostCenterShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CostCenter, tea.String("cost_center"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ExtraInfo)) {
		request.ExtraInfoShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ExtraInfo, tea.String("extra_info"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.PassengerList)) {
		request.PassengerListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PassengerList, tea.String("passenger_list"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AsyncCreateOrderKey)) {
		query["async_create_order_key"] = request.AsyncCreateOrderKey
	}

	if !tea.BoolValue(util.IsUnset(request.AsyncCreateOrderMode)) {
		query["async_create_order_mode"] = request.AsyncCreateOrderMode
	}

	if !tea.BoolValue(util.IsUnset(request.ContactInfoShrink)) {
		query["contact_info"] = request.ContactInfoShrink
	}

	if !tea.BoolValue(util.IsUnset(request.CostCenterShrink)) {
		query["cost_center"] = request.CostCenterShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ExtraInfoShrink)) {
		query["extra_info"] = request.ExtraInfoShrink
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.Language)) {
		query["language"] = request.Language
	}

	if !tea.BoolValue(util.IsUnset(request.OtaItemId)) {
		query["ota_item_id"] = request.OtaItemId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.PassengerListShrink)) {
		query["passenger_list"] = request.PassengerListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.RenderKey)) {
		query["render_key"] = request.RenderKey
	}

	if !tea.BoolValue(util.IsUnset(request.TotalPriceCent)) {
		query["total_price_cent"] = request.TotalPriceCent
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		query["user_name"] = request.UserName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IntlFlightCreateOrder"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/intl-flight/v1/order/action/create"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IntlFlightCreateOrderResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 国际机票创建订单
//
// @param request - IntlFlightCreateOrderRequest
//
// @return IntlFlightCreateOrderResponse
func (client *Client) IntlFlightCreateOrder(request *IntlFlightCreateOrderRequest) (_result *IntlFlightCreateOrderResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IntlFlightCreateOrderHeaders{}
	_result = &IntlFlightCreateOrderResponse{}
	_body, _err := client.IntlFlightCreateOrderWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 国际机票验舱验价
//
// @param tmpReq - IntlFlightInventoryPriceCheckRequest
//
// @param headers - IntlFlightInventoryPriceCheckHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IntlFlightInventoryPriceCheckResponse
func (client *Client) IntlFlightInventoryPriceCheckWithOptions(tmpReq *IntlFlightInventoryPriceCheckRequest, headers *IntlFlightInventoryPriceCheckHeaders, runtime *util.RuntimeOptions) (_result *IntlFlightInventoryPriceCheckResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &IntlFlightInventoryPriceCheckShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.PassengerList)) {
		request.PassengerListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PassengerList, tea.String("passenger_list"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.Language)) {
		query["language"] = request.Language
	}

	if !tea.BoolValue(util.IsUnset(request.OrderPrice)) {
		query["order_price"] = request.OrderPrice
	}

	if !tea.BoolValue(util.IsUnset(request.OtaItemId)) {
		query["ota_item_id"] = request.OtaItemId
	}

	if !tea.BoolValue(util.IsUnset(request.PassengerListShrink)) {
		query["passenger_list"] = request.PassengerListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		query["user_name"] = request.UserName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IntlFlightInventoryPriceCheck"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/intl-flight/v1/flights/action/inventory-price-check"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IntlFlightInventoryPriceCheckResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 国际机票验舱验价
//
// @param request - IntlFlightInventoryPriceCheckRequest
//
// @return IntlFlightInventoryPriceCheckResponse
func (client *Client) IntlFlightInventoryPriceCheck(request *IntlFlightInventoryPriceCheckRequest) (_result *IntlFlightInventoryPriceCheckResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IntlFlightInventoryPriceCheckHeaders{}
	_result = &IntlFlightInventoryPriceCheckResponse{}
	_body, _err := client.IntlFlightInventoryPriceCheckWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 国际机票航班搜索
//
// @param tmpReq - IntlFlightListingSearchRequest
//
// @param headers - IntlFlightListingSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IntlFlightListingSearchResponse
func (client *Client) IntlFlightListingSearchWithOptions(tmpReq *IntlFlightListingSearchRequest, headers *IntlFlightListingSearchHeaders, runtime *util.RuntimeOptions) (_result *IntlFlightListingSearchResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &IntlFlightListingSearchShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.SearchJourneys)) {
		request.SearchJourneysShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SearchJourneys, tea.String("search_journeys"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.SearchPassengerList)) {
		request.SearchPassengerListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SearchPassengerList, tea.String("search_passenger_list"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		query["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.CabinType)) {
		query["cabin_type"] = request.CabinType
	}

	if !tea.BoolValue(util.IsUnset(request.DirectOnly)) {
		query["direct_only"] = request.DirectOnly
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.Language)) {
		query["language"] = request.Language
	}

	if !tea.BoolValue(util.IsUnset(request.NeedShareFlight)) {
		query["need_share_flight"] = request.NeedShareFlight
	}

	if !tea.BoolValue(util.IsUnset(request.OutWheelSearch)) {
		query["out_wheel_search"] = request.OutWheelSearch
	}

	if !tea.BoolValue(util.IsUnset(request.QueryRecordId)) {
		query["query_record_id"] = request.QueryRecordId
	}

	if !tea.BoolValue(util.IsUnset(request.SearchJourneysShrink)) {
		query["search_journeys"] = request.SearchJourneysShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SearchMode)) {
		query["search_mode"] = request.SearchMode
	}

	if !tea.BoolValue(util.IsUnset(request.SearchPassengerListShrink)) {
		query["search_passenger_list"] = request.SearchPassengerListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SupplierCode)) {
		query["supplier_code"] = request.SupplierCode
	}

	if !tea.BoolValue(util.IsUnset(request.Token)) {
		query["token"] = request.Token
	}

	if !tea.BoolValue(util.IsUnset(request.TripType)) {
		query["trip_type"] = request.TripType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IntlFlightListingSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/intl-flight/v1/flights/action/listing-search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IntlFlightListingSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 国际机票航班搜索
//
// @param request - IntlFlightListingSearchRequest
//
// @return IntlFlightListingSearchResponse
func (client *Client) IntlFlightListingSearch(request *IntlFlightListingSearchRequest) (_result *IntlFlightListingSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IntlFlightListingSearchHeaders{}
	_result = &IntlFlightListingSearchResponse{}
	_body, _err := client.IntlFlightListingSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 国际机票订单取消
//
// @param request - IntlFlightOrderCancelRequest
//
// @param headers - IntlFlightOrderCancelHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IntlFlightOrderCancelResponse
func (client *Client) IntlFlightOrderCancelWithOptions(request *IntlFlightOrderCancelRequest, headers *IntlFlightOrderCancelHeaders, runtime *util.RuntimeOptions) (_result *IntlFlightOrderCancelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.Memo)) {
		query["memo"] = request.Memo
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IntlFlightOrderCancel"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/intl-flight/v1/order/action/cancel"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IntlFlightOrderCancelResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 国际机票订单取消
//
// @param request - IntlFlightOrderCancelRequest
//
// @return IntlFlightOrderCancelResponse
func (client *Client) IntlFlightOrderCancel(request *IntlFlightOrderCancelRequest) (_result *IntlFlightOrderCancelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IntlFlightOrderCancelHeaders{}
	_result = &IntlFlightOrderCancelResponse{}
	_body, _err := client.IntlFlightOrderCancelWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 国际机票订单详情
//
// @param request - IntlFlightOrderDetailRequest
//
// @param headers - IntlFlightOrderDetailHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IntlFlightOrderDetailResponse
func (client *Client) IntlFlightOrderDetailWithOptions(request *IntlFlightOrderDetailRequest, headers *IntlFlightOrderDetailHeaders, runtime *util.RuntimeOptions) (_result *IntlFlightOrderDetailResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IntlFlightOrderDetail"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/intl-flight/v1/order/action/detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IntlFlightOrderDetailResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 国际机票订单详情
//
// @param request - IntlFlightOrderDetailRequest
//
// @return IntlFlightOrderDetailResponse
func (client *Client) IntlFlightOrderDetail(request *IntlFlightOrderDetailRequest) (_result *IntlFlightOrderDetailResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IntlFlightOrderDetailHeaders{}
	_result = &IntlFlightOrderDetailResponse{}
	_body, _err := client.IntlFlightOrderDetailWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 国际机票订单支付
//
// @param tmpReq - IntlFlightOrderPayRequest
//
// @param headers - IntlFlightOrderPayHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IntlFlightOrderPayResponse
func (client *Client) IntlFlightOrderPayWithOptions(tmpReq *IntlFlightOrderPayRequest, headers *IntlFlightOrderPayHeaders, runtime *util.RuntimeOptions) (_result *IntlFlightOrderPayResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &IntlFlightOrderPayShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ExtParams)) {
		request.ExtParamsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ExtParams, tea.String("ext_params"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ExtParamsShrink)) {
		query["ext_params"] = request.ExtParamsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.TotalPrice)) {
		query["total_price"] = request.TotalPrice
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IntlFlightOrderPay"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/intl-flight/v1/order/action/pay"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IntlFlightOrderPayResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 国际机票订单支付
//
// @param request - IntlFlightOrderPayRequest
//
// @return IntlFlightOrderPayResponse
func (client *Client) IntlFlightOrderPay(request *IntlFlightOrderPayRequest) (_result *IntlFlightOrderPayResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IntlFlightOrderPayHeaders{}
	_result = &IntlFlightOrderPayResponse{}
	_body, _err := client.IntlFlightOrderPayWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 国际机票订单支付前校验
//
// @param request - IntlFlightOrderPayCheckRequest
//
// @param headers - IntlFlightOrderPayCheckHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IntlFlightOrderPayCheckResponse
func (client *Client) IntlFlightOrderPayCheckWithOptions(request *IntlFlightOrderPayCheckRequest, headers *IntlFlightOrderPayCheckHeaders, runtime *util.RuntimeOptions) (_result *IntlFlightOrderPayCheckResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		query["out_order_id"] = request.OutOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IntlFlightOrderPayCheck"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/intl-flight/v1/order/action/pay-check"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IntlFlightOrderPayCheckResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 国际机票订单支付前校验
//
// @param request - IntlFlightOrderPayCheckRequest
//
// @return IntlFlightOrderPayCheckResponse
func (client *Client) IntlFlightOrderPayCheck(request *IntlFlightOrderPayCheckRequest) (_result *IntlFlightOrderPayCheckResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IntlFlightOrderPayCheckHeaders{}
	_result = &IntlFlightOrderPayCheckResponse{}
	_body, _err := client.IntlFlightOrderPayCheckWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 国际机票报价商品详情
//
// @param request - IntlFlightOtaItemDetailRequest
//
// @param headers - IntlFlightOtaItemDetailHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IntlFlightOtaItemDetailResponse
func (client *Client) IntlFlightOtaItemDetailWithOptions(otaItemId *string, request *IntlFlightOtaItemDetailRequest, headers *IntlFlightOtaItemDetailHeaders, runtime *util.RuntimeOptions) (_result *IntlFlightOtaItemDetailResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		query["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.Language)) {
		query["language"] = request.Language
	}

	if !tea.BoolValue(util.IsUnset(request.SupplierCode)) {
		query["supplier_code"] = request.SupplierCode
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IntlFlightOtaItemDetail"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/intl-flight/v1/items/" + tea.StringValue(openapiutil.GetEncodeParam(otaItemId)) + "/action/ota-get"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IntlFlightOtaItemDetailResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 国际机票报价商品详情
//
// @param request - IntlFlightOtaItemDetailRequest
//
// @return IntlFlightOtaItemDetailResponse
func (client *Client) IntlFlightOtaItemDetail(otaItemId *string, request *IntlFlightOtaItemDetailRequest) (_result *IntlFlightOtaItemDetailResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IntlFlightOtaItemDetailHeaders{}
	_result = &IntlFlightOtaItemDetailResponse{}
	_body, _err := client.IntlFlightOtaItemDetailWithOptions(otaItemId, request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 国际机票航班报价查询
//
// @param tmpReq - IntlFlightOtaSearchRequest
//
// @param headers - IntlFlightOtaSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IntlFlightOtaSearchResponse
func (client *Client) IntlFlightOtaSearchWithOptions(tmpReq *IntlFlightOtaSearchRequest, headers *IntlFlightOtaSearchHeaders, runtime *util.RuntimeOptions) (_result *IntlFlightOtaSearchResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &IntlFlightOtaSearchShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.SearchJourneys)) {
		request.SearchJourneysShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SearchJourneys, tea.String("search_journeys"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.SearchPassengerList)) {
		request.SearchPassengerListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.SearchPassengerList, tea.String("search_passenger_list"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		query["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BuyerName)) {
		query["buyer_name"] = request.BuyerName
	}

	if !tea.BoolValue(util.IsUnset(request.CabinType)) {
		query["cabin_type"] = request.CabinType
	}

	if !tea.BoolValue(util.IsUnset(request.DirectOnly)) {
		query["direct_only"] = request.DirectOnly
	}

	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.Language)) {
		query["language"] = request.Language
	}

	if !tea.BoolValue(util.IsUnset(request.NeedShareFlight)) {
		query["need_share_flight"] = request.NeedShareFlight
	}

	if !tea.BoolValue(util.IsUnset(request.SearchJourneysShrink)) {
		query["search_journeys"] = request.SearchJourneysShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SearchPassengerListShrink)) {
		query["search_passenger_list"] = request.SearchPassengerListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.SupplierCode)) {
		query["supplier_code"] = request.SupplierCode
	}

	if !tea.BoolValue(util.IsUnset(request.TripType)) {
		query["trip_type"] = request.TripType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IntlFlightOtaSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/intl-flight/v1/flights/action/ota-search"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IntlFlightOtaSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 国际机票航班报价查询
//
// @param request - IntlFlightOtaSearchRequest
//
// @return IntlFlightOtaSearchResponse
func (client *Client) IntlFlightOtaSearch(request *IntlFlightOtaSearchRequest) (_result *IntlFlightOtaSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IntlFlightOtaSearchHeaders{}
	_result = &IntlFlightOtaSearchResponse{}
	_body, _err := client.IntlFlightOtaSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 国际机票航班可用证件查询
//
// @param request - IntlFlightSegmentAvailableCertRequest
//
// @param headers - IntlFlightSegmentAvailableCertHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IntlFlightSegmentAvailableCertResponse
func (client *Client) IntlFlightSegmentAvailableCertWithOptions(otaItemId *string, request *IntlFlightSegmentAvailableCertRequest, headers *IntlFlightSegmentAvailableCertHeaders, runtime *util.RuntimeOptions) (_result *IntlFlightSegmentAvailableCertResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsvName)) {
		query["isv_name"] = request.IsvName
	}

	if !tea.BoolValue(util.IsUnset(request.Language)) {
		query["language"] = request.Language
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		query["user_name"] = request.UserName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IntlFlightSegmentAvailableCert"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/intl-flight/v1/items/" + tea.StringValue(openapiutil.GetEncodeParam(otaItemId)) + "/action/segment-available-cert"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &IntlFlightSegmentAvailableCertResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 国际机票航班可用证件查询
//
// @param request - IntlFlightSegmentAvailableCertRequest
//
// @return IntlFlightSegmentAvailableCertResponse
func (client *Client) IntlFlightSegmentAvailableCert(otaItemId *string, request *IntlFlightSegmentAvailableCertRequest) (_result *IntlFlightSegmentAvailableCertResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IntlFlightSegmentAvailableCertHeaders{}
	_result = &IntlFlightSegmentAvailableCertResponse{}
	_body, _err := client.IntlFlightSegmentAvailableCertWithOptions(otaItemId, request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 新增发票配置
//
// @param request - InvoiceAddRequest
//
// @param headers - InvoiceAddHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InvoiceAddResponse
func (client *Client) InvoiceAddWithOptions(request *InvoiceAddRequest, headers *InvoiceAddHeaders, runtime *util.RuntimeOptions) (_result *InvoiceAddResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Address)) {
		body["address"] = request.Address
	}

	if !tea.BoolValue(util.IsUnset(request.BankName)) {
		body["bank_name"] = request.BankName
	}

	if !tea.BoolValue(util.IsUnset(request.BankNo)) {
		body["bank_no"] = request.BankNo
	}

	if !tea.BoolValue(util.IsUnset(request.TaxNo)) {
		body["tax_no"] = request.TaxNo
	}

	if !tea.BoolValue(util.IsUnset(request.Tel)) {
		body["tel"] = request.Tel
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		body["third_part_id"] = request.ThirdPartId
	}

	if !tea.BoolValue(util.IsUnset(request.Title)) {
		body["title"] = request.Title
	}

	if !tea.BoolValue(util.IsUnset(request.Type)) {
		body["type"] = request.Type
	}

	if !tea.BoolValue(util.IsUnset(request.UnitType)) {
		body["unit_type"] = request.UnitType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("InvoiceAdd"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/add-invoice"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &InvoiceAddResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 新增发票配置
//
// @param request - InvoiceAddRequest
//
// @return InvoiceAddResponse
func (client *Client) InvoiceAdd(request *InvoiceAddRequest) (_result *InvoiceAddResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InvoiceAddHeaders{}
	_result = &InvoiceAddResponse{}
	_body, _err := client.InvoiceAddWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 删除发票抬头
//
// @param request - InvoiceDeleteRequest
//
// @param headers - InvoiceDeleteHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InvoiceDeleteResponse
func (client *Client) InvoiceDeleteWithOptions(request *InvoiceDeleteRequest, headers *InvoiceDeleteHeaders, runtime *util.RuntimeOptions) (_result *InvoiceDeleteResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		query["third_part_id"] = request.ThirdPartId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("InvoiceDelete"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/invoice"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &InvoiceDeleteResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 删除发票抬头
//
// @param request - InvoiceDeleteRequest
//
// @return InvoiceDeleteResponse
func (client *Client) InvoiceDelete(request *InvoiceDeleteRequest) (_result *InvoiceDeleteResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InvoiceDeleteHeaders{}
	_result = &InvoiceDeleteResponse{}
	_body, _err := client.InvoiceDeleteWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 修改发票配置
//
// @param request - InvoiceModifyRequest
//
// @param headers - InvoiceModifyHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InvoiceModifyResponse
func (client *Client) InvoiceModifyWithOptions(request *InvoiceModifyRequest, headers *InvoiceModifyHeaders, runtime *util.RuntimeOptions) (_result *InvoiceModifyResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Address)) {
		body["address"] = request.Address
	}

	if !tea.BoolValue(util.IsUnset(request.BankName)) {
		body["bank_name"] = request.BankName
	}

	if !tea.BoolValue(util.IsUnset(request.BankNo)) {
		body["bank_no"] = request.BankNo
	}

	if !tea.BoolValue(util.IsUnset(request.TaxNo)) {
		body["tax_no"] = request.TaxNo
	}

	if !tea.BoolValue(util.IsUnset(request.Tel)) {
		body["tel"] = request.Tel
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		body["third_part_id"] = request.ThirdPartId
	}

	if !tea.BoolValue(util.IsUnset(request.Title)) {
		body["title"] = request.Title
	}

	if !tea.BoolValue(util.IsUnset(request.Type)) {
		body["type"] = request.Type
	}

	if !tea.BoolValue(util.IsUnset(request.UnitType)) {
		body["unit_type"] = request.UnitType
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("InvoiceModify"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/invoice"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &InvoiceModifyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 修改发票配置
//
// @param request - InvoiceModifyRequest
//
// @return InvoiceModifyResponse
func (client *Client) InvoiceModify(request *InvoiceModifyRequest) (_result *InvoiceModifyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InvoiceModifyHeaders{}
	_result = &InvoiceModifyResponse{}
	_body, _err := client.InvoiceModifyWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 新增发票抬头可用员工
//
// @param tmpReq - InvoiceRuleAddRequest
//
// @param headers - InvoiceRuleAddHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InvoiceRuleAddResponse
func (client *Client) InvoiceRuleAddWithOptions(tmpReq *InvoiceRuleAddRequest, headers *InvoiceRuleAddHeaders, runtime *util.RuntimeOptions) (_result *InvoiceRuleAddResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &InvoiceRuleAddShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Entities)) {
		request.EntitiesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Entities, tea.String("entities"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.EntitiesShrink)) {
		body["entities"] = request.EntitiesShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		body["third_part_id"] = request.ThirdPartId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("InvoiceRuleAdd"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/invoice-rule"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &InvoiceRuleAddResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 新增发票抬头可用员工
//
// @param request - InvoiceRuleAddRequest
//
// @return InvoiceRuleAddResponse
func (client *Client) InvoiceRuleAdd(request *InvoiceRuleAddRequest) (_result *InvoiceRuleAddResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InvoiceRuleAddHeaders{}
	_result = &InvoiceRuleAddResponse{}
	_body, _err := client.InvoiceRuleAddWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 删除发票抬头可用员工
//
// @param tmpReq - InvoiceRuleDeleteRequest
//
// @param headers - InvoiceRuleDeleteHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InvoiceRuleDeleteResponse
func (client *Client) InvoiceRuleDeleteWithOptions(tmpReq *InvoiceRuleDeleteRequest, headers *InvoiceRuleDeleteHeaders, runtime *util.RuntimeOptions) (_result *InvoiceRuleDeleteResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &InvoiceRuleDeleteShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Entities)) {
		request.EntitiesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Entities, tea.String("entities"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DelAll)) {
		query["del_all"] = request.DelAll
	}

	if !tea.BoolValue(util.IsUnset(request.EntitiesShrink)) {
		query["entities"] = request.EntitiesShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		query["third_part_id"] = request.ThirdPartId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("InvoiceRuleDelete"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/invoice-rule"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &InvoiceRuleDeleteResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 删除发票抬头可用员工
//
// @param request - InvoiceRuleDeleteRequest
//
// @return InvoiceRuleDeleteResponse
func (client *Client) InvoiceRuleDelete(request *InvoiceRuleDeleteRequest) (_result *InvoiceRuleDeleteResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InvoiceRuleDeleteHeaders{}
	_result = &InvoiceRuleDeleteResponse{}
	_body, _err := client.InvoiceRuleDeleteWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 保存发票规则
//
// @param tmpReq - InvoiceRuleSaveRequest
//
// @param headers - InvoiceRuleSaveHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InvoiceRuleSaveResponse
func (client *Client) InvoiceRuleSaveWithOptions(tmpReq *InvoiceRuleSaveRequest, headers *InvoiceRuleSaveHeaders, runtime *util.RuntimeOptions) (_result *InvoiceRuleSaveResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &InvoiceRuleSaveShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Entities)) {
		request.EntitiesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Entities, tea.String("entities"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AllEmploye)) {
		body["all_employe"] = request.AllEmploye
	}

	if !tea.BoolValue(util.IsUnset(request.EntitiesShrink)) {
		body["entities"] = request.EntitiesShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Scope)) {
		body["scope"] = request.Scope
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		body["third_part_id"] = request.ThirdPartId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("InvoiceRuleSave"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/invoice-rule"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &InvoiceRuleSaveResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 保存发票规则
//
// @param request - InvoiceRuleSaveRequest
//
// @return InvoiceRuleSaveResponse
func (client *Client) InvoiceRuleSave(request *InvoiceRuleSaveRequest) (_result *InvoiceRuleSaveResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InvoiceRuleSaveHeaders{}
	_result = &InvoiceRuleSaveResponse{}
	_body, _err := client.InvoiceRuleSaveWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 搜索用户可用发票抬头
//
// @param request - InvoiceSearchRequest
//
// @param headers - InvoiceSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return InvoiceSearchResponse
func (client *Client) InvoiceSearchWithOptions(request *InvoiceSearchRequest, headers *InvoiceSearchHeaders, runtime *util.RuntimeOptions) (_result *InvoiceSearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		query["third_part_id"] = request.ThirdPartId
	}

	if !tea.BoolValue(util.IsUnset(request.Title)) {
		query["title"] = request.Title
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("InvoiceSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/invoice"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &InvoiceSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 搜索用户可用发票抬头
//
// @param request - InvoiceSearchRequest
//
// @return InvoiceSearchResponse
func (client *Client) InvoiceSearch(request *InvoiceSearchRequest) (_result *InvoiceSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &InvoiceSearchHeaders{}
	_result = &InvoiceSearchResponse{}
	_body, _err := client.InvoiceSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 员工特殊角色修改
//
// @param tmpReq - IsvRuleSaveRequest
//
// @param headers - IsvRuleSaveHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IsvRuleSaveResponse
func (client *Client) IsvRuleSaveWithOptions(tmpReq *IsvRuleSaveRequest, headers *IsvRuleSaveHeaders, runtime *util.RuntimeOptions) (_result *IsvRuleSaveResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &IsvRuleSaveShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.BookuserList)) {
		request.BookuserListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.BookuserList, tea.String("bookuser_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplyNeed)) {
		body["apply_need"] = request.ApplyNeed
	}

	if !tea.BoolValue(util.IsUnset(request.BookType)) {
		body["book_type"] = request.BookType
	}

	if !tea.BoolValue(util.IsUnset(request.BookuserListShrink)) {
		body["bookuser_list"] = request.BookuserListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.RuleNeed)) {
		body["rule_need"] = request.RuleNeed
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		body["status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("IsvRuleSave"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/user/v1/rule"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &IsvRuleSaveResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 员工特殊角色修改
//
// @param request - IsvRuleSaveRequest
//
// @return IsvRuleSaveResponse
func (client *Client) IsvRuleSave(request *IsvRuleSaveRequest) (_result *IsvRuleSaveResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IsvRuleSaveHeaders{}
	_result = &IsvRuleSaveResponse{}
	_body, _err := client.IsvRuleSaveWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 用户同步
//
// @param tmpReq - IsvUserSaveRequest
//
// @param headers - IsvUserSaveHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IsvUserSaveResponse
func (client *Client) IsvUserSaveWithOptions(tmpReq *IsvUserSaveRequest, headers *IsvUserSaveHeaders, runtime *util.RuntimeOptions) (_result *IsvUserSaveResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &IsvUserSaveShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.UserList)) {
		request.UserListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.UserList, tea.String("user_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.UserListShrink)) {
		body["user_list"] = request.UserListShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("IsvUserSave"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/isvuser/v1/isvuser"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &IsvUserSaveResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 用户同步
//
// @param request - IsvUserSaveRequest
//
// @return IsvUserSaveResponse
func (client *Client) IsvUserSave(request *IsvUserSaveRequest) (_result *IsvUserSaveResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &IsvUserSaveHeaders{}
	_result = &IsvUserSaveResponse{}
	_body, _err := client.IsvUserSaveWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询因公用餐记账数据
//
// @param request - MealBillSettlementQueryRequest
//
// @param headers - MealBillSettlementQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return MealBillSettlementQueryResponse
func (client *Client) MealBillSettlementQueryWithOptions(request *MealBillSettlementQueryRequest, headers *MealBillSettlementQueryHeaders, runtime *util.RuntimeOptions) (_result *MealBillSettlementQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodEnd)) {
		query["period_end"] = request.PeriodEnd
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodStart)) {
		query["period_start"] = request.PeriodStart
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("MealBillSettlementQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/meal/v1/bill-settlement"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &MealBillSettlementQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询因公用餐记账数据
//
// @param request - MealBillSettlementQueryRequest
//
// @return MealBillSettlementQueryResponse
func (client *Client) MealBillSettlementQuery(request *MealBillSettlementQueryRequest) (_result *MealBillSettlementQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &MealBillSettlementQueryHeaders{}
	_result = &MealBillSettlementQueryResponse{}
	_body, _err := client.MealBillSettlementQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 获取用餐订单详情
//
// @param request - MealOrderDetailQueryRequest
//
// @param headers - MealOrderDetailQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return MealOrderDetailQueryResponse
func (client *Client) MealOrderDetailQueryWithOptions(orderId *string, request *MealOrderDetailQueryRequest, headers *MealOrderDetailQueryHeaders, runtime *util.RuntimeOptions) (_result *MealOrderDetailQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("MealOrderDetailQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/meal/v1/orders/" + tea.StringValue(openapiutil.GetEncodeParam(orderId))),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &MealOrderDetailQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 获取用餐订单详情
//
// @param request - MealOrderDetailQueryRequest
//
// @return MealOrderDetailQueryResponse
func (client *Client) MealOrderDetailQuery(orderId *string, request *MealOrderDetailQueryRequest) (_result *MealOrderDetailQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &MealOrderDetailQueryHeaders{}
	_result = &MealOrderDetailQueryResponse{}
	_body, _err := client.MealOrderDetailQueryWithOptions(orderId, request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 获取用餐订单列表
//
// @param request - MealOrderListQueryRequest
//
// @param headers - MealOrderListQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return MealOrderListQueryResponse
func (client *Client) MealOrderListQueryWithOptions(request *MealOrderListQueryRequest, headers *MealOrderListQueryHeaders, runtime *util.RuntimeOptions) (_result *MealOrderListQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("MealOrderListQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/meal/v1/orders"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &MealOrderListQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 获取用餐订单列表
//
// @param request - MealOrderListQueryRequest
//
// @return MealOrderListQueryResponse
func (client *Client) MealOrderListQuery(request *MealOrderListQueryRequest) (_result *MealOrderListQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &MealOrderListQueryHeaders{}
	_result = &MealOrderListQueryResponse{}
	_body, _err := client.MealOrderListQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 月账单确认
//
// @param request - MonthBillConfirmRequest
//
// @param headers - MonthBillConfirmHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return MonthBillConfirmResponse
func (client *Client) MonthBillConfirmWithOptions(request *MonthBillConfirmRequest, headers *MonthBillConfirmHeaders, runtime *util.RuntimeOptions) (_result *MonthBillConfirmResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.MailBillDate)) {
		body["mail_bill_date"] = request.MailBillDate
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("MonthBillConfirm"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/bill/v1/status/action/confirm"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &MonthBillConfirmResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 月账单确认
//
// @param request - MonthBillConfirmRequest
//
// @return MonthBillConfirmResponse
func (client *Client) MonthBillConfirm(request *MonthBillConfirmRequest) (_result *MonthBillConfirmResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &MonthBillConfirmHeaders{}
	_result = &MonthBillConfirmResponse{}
	_body, _err := client.MonthBillConfirmWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询企业月账单
//
// @param request - MonthBillGetRequest
//
// @param headers - MonthBillGetHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return MonthBillGetResponse
func (client *Client) MonthBillGetWithOptions(request *MonthBillGetRequest, headers *MonthBillGetHeaders, runtime *util.RuntimeOptions) (_result *MonthBillGetResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BillMonth)) {
		query["bill_month"] = request.BillMonth
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("MonthBillGet"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/open/v1/month-bill"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &MonthBillGetResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询企业月账单
//
// @param request - MonthBillGetRequest
//
// @return MonthBillGetResponse
func (client *Client) MonthBillGet(request *MonthBillGetRequest) (_result *MonthBillGetResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &MonthBillGetHeaders{}
	_result = &MonthBillGetResponse{}
	_body, _err := client.MonthBillGetWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 添加项目
//
// @param request - ProjectAddRequest
//
// @param headers - ProjectAddHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ProjectAddResponse
func (client *Client) ProjectAddWithOptions(request *ProjectAddRequest, headers *ProjectAddHeaders, runtime *util.RuntimeOptions) (_result *ProjectAddResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Code)) {
		body["code"] = request.Code
	}

	if !tea.BoolValue(util.IsUnset(request.ProjectName)) {
		body["project_name"] = request.ProjectName
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartCostCenterId)) {
		body["third_part_cost_center_id"] = request.ThirdPartCostCenterId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		body["third_part_id"] = request.ThirdPartId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartInvoiceId)) {
		body["third_part_invoice_id"] = request.ThirdPartInvoiceId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ProjectAdd"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/cost/v1/project"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ProjectAddResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 添加项目
//
// @param request - ProjectAddRequest
//
// @return ProjectAddResponse
func (client *Client) ProjectAdd(request *ProjectAddRequest) (_result *ProjectAddResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ProjectAddHeaders{}
	_result = &ProjectAddResponse{}
	_body, _err := client.ProjectAddWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 删除项目
//
// @param request - ProjectDeleteRequest
//
// @param headers - ProjectDeleteHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ProjectDeleteResponse
func (client *Client) ProjectDeleteWithOptions(request *ProjectDeleteRequest, headers *ProjectDeleteHeaders, runtime *util.RuntimeOptions) (_result *ProjectDeleteResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		query["third_part_id"] = request.ThirdPartId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ProjectDelete"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/cost/v1/project"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &ProjectDeleteResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 删除项目
//
// @param request - ProjectDeleteRequest
//
// @return ProjectDeleteResponse
func (client *Client) ProjectDelete(request *ProjectDeleteRequest) (_result *ProjectDeleteResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ProjectDeleteHeaders{}
	_result = &ProjectDeleteResponse{}
	_body, _err := client.ProjectDeleteWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 变更项目
//
// @param request - ProjectModifyRequest
//
// @param headers - ProjectModifyHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ProjectModifyResponse
func (client *Client) ProjectModifyWithOptions(request *ProjectModifyRequest, headers *ProjectModifyHeaders, runtime *util.RuntimeOptions) (_result *ProjectModifyResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Code)) {
		body["code"] = request.Code
	}

	if !tea.BoolValue(util.IsUnset(request.ProjectName)) {
		body["project_name"] = request.ProjectName
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartCostCenterId)) {
		body["third_part_cost_center_id"] = request.ThirdPartCostCenterId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartId)) {
		body["third_part_id"] = request.ThirdPartId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartInvoiceId)) {
		body["third_part_invoice_id"] = request.ThirdPartInvoiceId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ProjectModify"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/cost/v1/project"),
		Method:      tea.String("PUT"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ProjectModifyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 变更项目
//
// @param request - ProjectModifyRequest
//
// @return ProjectModifyResponse
func (client *Client) ProjectModify(request *ProjectModifyRequest) (_result *ProjectModifyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &ProjectModifyHeaders{}
	_result = &ProjectModifyResponse{}
	_body, _err := client.ProjectModifyWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询子企业列表
//
// @param request - QueryGroupCorpListRequest
//
// @param headers - QueryGroupCorpListHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return QueryGroupCorpListResponse
func (client *Client) QueryGroupCorpListWithOptions(request *QueryGroupCorpListRequest, headers *QueryGroupCorpListHeaders, runtime *util.RuntimeOptions) (_result *QueryGroupCorpListResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("QueryGroupCorpList"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/sub_corps/v1/corps/action/corpList"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &QueryGroupCorpListResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询子企业列表
//
// @param request - QueryGroupCorpListRequest
//
// @return QueryGroupCorpListResponse
func (client *Client) QueryGroupCorpList(request *QueryGroupCorpListRequest) (_result *QueryGroupCorpListResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &QueryGroupCorpListHeaders{}
	_result = &QueryGroupCorpListResponse{}
	_body, _err := client.QueryGroupCorpListWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 报销单查询
//
// @param request - QueryReimbursementOrderRequest
//
// @param headers - QueryReimbursementOrderHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return QueryReimbursementOrderResponse
func (client *Client) QueryReimbursementOrderWithOptions(request *QueryReimbursementOrderRequest, headers *QueryReimbursementOrderHeaders, runtime *util.RuntimeOptions) (_result *QueryReimbursementOrderResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ReimbOrderNo)) {
		query["reimb_order_no"] = request.ReimbOrderNo
	}

	if !tea.BoolValue(util.IsUnset(request.SubCorpId)) {
		query["sub_corp_id"] = request.SubCorpId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("QueryReimbursementOrder"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/reimbursement/v1/order"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &QueryReimbursementOrderResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 报销单查询
//
// @param request - QueryReimbursementOrderRequest
//
// @return QueryReimbursementOrderResponse
func (client *Client) QueryReimbursementOrder(request *QueryReimbursementOrderRequest) (_result *QueryReimbursementOrderResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &QueryReimbursementOrderHeaders{}
	_result = &QueryReimbursementOrderResponse{}
	_body, _err := client.QueryReimbursementOrderWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 单个人员同步
//
// @param tmpReq - SyncSingleUserRequest
//
// @param headers - SyncSingleUserHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return SyncSingleUserResponse
func (client *Client) SyncSingleUserWithOptions(tmpReq *SyncSingleUserRequest, headers *SyncSingleUserHeaders, runtime *util.RuntimeOptions) (_result *SyncSingleUserResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &SyncSingleUserShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ThirdDepartIdList)) {
		request.ThirdDepartIdListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ThirdDepartIdList, tea.String("third_depart_id_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Email)) {
		body["email"] = request.Email
	}

	if !tea.BoolValue(util.IsUnset(request.JobNo)) {
		body["job_no"] = request.JobNo
	}

	if !tea.BoolValue(util.IsUnset(request.LeaveStatus)) {
		body["leave_status"] = request.LeaveStatus
	}

	if !tea.BoolValue(util.IsUnset(request.ManagerUserId)) {
		body["manager_user_id"] = request.ManagerUserId
	}

	if !tea.BoolValue(util.IsUnset(request.Phone)) {
		body["phone"] = request.Phone
	}

	if !tea.BoolValue(util.IsUnset(request.Position)) {
		body["position"] = request.Position
	}

	if !tea.BoolValue(util.IsUnset(request.PositionLevel)) {
		body["position_level"] = request.PositionLevel
	}

	if !tea.BoolValue(util.IsUnset(request.RealNameEn)) {
		body["real_name_en"] = request.RealNameEn
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdDepartIdListShrink)) {
		body["third_depart_id_list"] = request.ThirdDepartIdListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		body["user_name"] = request.UserName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("SyncSingleUser"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/user/v1/single-user/action/sync"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &SyncSingleUserResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 单个人员同步
//
// @param request - SyncSingleUserRequest
//
// @return SyncSingleUserResponse
func (client *Client) SyncSingleUser(request *SyncSingleUserRequest) (_result *SyncSingleUserResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &SyncSingleUserHeaders{}
	_result = &SyncSingleUserResponse{}
	_body, _err := client.SyncSingleUserWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 同步三方用户映射关系
//
// @param request - SyncThirdUserMappingRequest
//
// @param headers - SyncThirdUserMappingHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return SyncThirdUserMappingResponse
func (client *Client) SyncThirdUserMappingWithOptions(request *SyncThirdUserMappingRequest, headers *SyncThirdUserMappingHeaders, runtime *util.RuntimeOptions) (_result *SyncThirdUserMappingResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Status)) {
		body["status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdChannelType)) {
		body["third_channel_type"] = request.ThirdChannelType
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdUserId)) {
		body["third_user_id"] = request.ThirdUserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("SyncThirdUserMapping"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/user/v1/third-users/action/mapping"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &SyncThirdUserMappingResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 同步三方用户映射关系
//
// @param request - SyncThirdUserMappingRequest
//
// @return SyncThirdUserMappingResponse
func (client *Client) SyncThirdUserMapping(request *SyncThirdUserMappingRequest) (_result *SyncThirdUserMappingResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &SyncThirdUserMappingHeaders{}
	_result = &SyncThirdUserMappingResponse{}
	_body, _err := client.SyncThirdUserMappingWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询淘宝账号信息
//
// @param headers - TBAccountInfoQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TBAccountInfoQueryResponse
func (client *Client) TBAccountInfoQueryWithOptions(userId *string, headers *TBAccountInfoQueryHeaders, runtime *util.RuntimeOptions) (_result *TBAccountInfoQueryResponse, _err error) {
	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
	}
	params := &openapi.Params{
		Action:      tea.String("TBAccountInfoQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/account/v1/tb-accounts/" + tea.StringValue(openapiutil.GetEncodeParam(userId))),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TBAccountInfoQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询淘宝账号信息
//
// @return TBAccountInfoQueryResponse
func (client *Client) TBAccountInfoQuery(userId *string) (_result *TBAccountInfoQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TBAccountInfoQueryHeaders{}
	_result = &TBAccountInfoQueryResponse{}
	_body, _err := client.TBAccountInfoQueryWithOptions(userId, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 解绑淘宝账号
//
// @param headers - TBAccountUnbindHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TBAccountUnbindResponse
func (client *Client) TBAccountUnbindWithOptions(userId *string, headers *TBAccountUnbindHeaders, runtime *util.RuntimeOptions) (_result *TBAccountUnbindResponse, _err error) {
	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
	}
	params := &openapi.Params{
		Action:      tea.String("TBAccountUnbind"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/account/v1/tb-accounts/" + tea.StringValue(openapiutil.GetEncodeParam(userId)) + "/action/unbind"),
		Method:      tea.String("PATCH"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TBAccountUnbindResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 解绑淘宝账号
//
// @return TBAccountUnbindResponse
func (client *Client) TBAccountUnbind(userId *string) (_result *TBAccountUnbindResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TBAccountUnbindHeaders{}
	_result = &TBAccountUnbindResponse{}
	_body, _err := client.TBAccountUnbindWithOptions(userId, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签申请
//
// @param tmpReq - TicketChangingApplyRequest
//
// @param headers - TicketChangingApplyHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TicketChangingApplyResponse
func (client *Client) TicketChangingApplyWithOptions(tmpReq *TicketChangingApplyRequest, headers *TicketChangingApplyHeaders, runtime *util.RuntimeOptions) (_result *TicketChangingApplyResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TicketChangingApplyShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ModifyFlightInfoList)) {
		request.ModifyFlightInfoListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ModifyFlightInfoList, tea.String("modify_flight_info_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		body["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.DisSubOrderId)) {
		body["dis_sub_order_id"] = request.DisSubOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.IsVoluntary)) {
		body["is_voluntary"] = request.IsVoluntary
	}

	if !tea.BoolValue(util.IsUnset(request.ModifyFlightInfoListShrink)) {
		body["modify_flight_info_list"] = request.ModifyFlightInfoListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.OtaItemId)) {
		body["ota_item_id"] = request.OtaItemId
	}

	if !tea.BoolValue(util.IsUnset(request.Reason)) {
		body["reason"] = request.Reason
	}

	if !tea.BoolValue(util.IsUnset(request.SessionId)) {
		body["session_id"] = request.SessionId
	}

	if !tea.BoolValue(util.IsUnset(request.WhetherRetry)) {
		body["whether_retry"] = request.WhetherRetry
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TicketChangingApply"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/ticket-changing/action/apply"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TicketChangingApplyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签申请
//
// @param request - TicketChangingApplyRequest
//
// @return TicketChangingApplyResponse
func (client *Client) TicketChangingApply(request *TicketChangingApplyRequest) (_result *TicketChangingApplyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TicketChangingApplyHeaders{}
	_result = &TicketChangingApplyResponse{}
	_body, _err := client.TicketChangingApplyWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签取消
//
// @param request - TicketChangingCancelRequest
//
// @param headers - TicketChangingCancelHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TicketChangingCancelResponse
func (client *Client) TicketChangingCancelWithOptions(request *TicketChangingCancelRequest, headers *TicketChangingCancelHeaders, runtime *util.RuntimeOptions) (_result *TicketChangingCancelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		query["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.DisSubOrderId)) {
		query["dis_sub_order_id"] = request.DisSubOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TicketChangingCancel"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/ticket-changing/action/cancel"),
		Method:      tea.String("DELETE"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TicketChangingCancelResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签取消
//
// @param request - TicketChangingCancelRequest
//
// @return TicketChangingCancelResponse
func (client *Client) TicketChangingCancel(request *TicketChangingCancelRequest) (_result *TicketChangingCancelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TicketChangingCancelHeaders{}
	_result = &TicketChangingCancelResponse{}
	_body, _err := client.TicketChangingCancelWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签详情
//
// @param request - TicketChangingDetailRequest
//
// @param headers - TicketChangingDetailHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TicketChangingDetailResponse
func (client *Client) TicketChangingDetailWithOptions(request *TicketChangingDetailRequest, headers *TicketChangingDetailHeaders, runtime *util.RuntimeOptions) (_result *TicketChangingDetailResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		query["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.DisSubOrderId)) {
		query["dis_sub_order_id"] = request.DisSubOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TicketChangingDetail"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/ticket-changing/action/detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TicketChangingDetailResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签详情
//
// @param request - TicketChangingDetailRequest
//
// @return TicketChangingDetailResponse
func (client *Client) TicketChangingDetail(request *TicketChangingDetailRequest) (_result *TicketChangingDetailResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TicketChangingDetailHeaders{}
	_result = &TicketChangingDetailResponse{}
	_body, _err := client.TicketChangingDetailWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签询价
//
// @param request - TicketChangingEnquiryRequest
//
// @param headers - TicketChangingEnquiryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TicketChangingEnquiryResponse
func (client *Client) TicketChangingEnquiryWithOptions(request *TicketChangingEnquiryRequest, headers *TicketChangingEnquiryHeaders, runtime *util.RuntimeOptions) (_result *TicketChangingEnquiryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ArrCity)) {
		query["arr_city"] = request.ArrCity
	}

	if !tea.BoolValue(util.IsUnset(request.DepCity)) {
		query["dep_city"] = request.DepCity
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		query["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.IsVoluntary)) {
		query["is_voluntary"] = request.IsVoluntary
	}

	if !tea.BoolValue(util.IsUnset(request.ModifyDepartDate)) {
		query["modify_depart_date"] = request.ModifyDepartDate
	}

	if !tea.BoolValue(util.IsUnset(request.ModifyFlightNo)) {
		query["modify_flight_no"] = request.ModifyFlightNo
	}

	if !tea.BoolValue(util.IsUnset(request.SessionId)) {
		query["session_id"] = request.SessionId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TicketChangingEnquiry"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/ticket-changing/action/enquiry"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TicketChangingEnquiryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签询价
//
// @param request - TicketChangingEnquiryRequest
//
// @return TicketChangingEnquiryResponse
func (client *Client) TicketChangingEnquiry(request *TicketChangingEnquiryRequest) (_result *TicketChangingEnquiryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TicketChangingEnquiryHeaders{}
	_result = &TicketChangingEnquiryResponse{}
	_body, _err := client.TicketChangingEnquiryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签可改签航班列表
//
// @param tmpReq - TicketChangingFlightListRequest
//
// @param headers - TicketChangingFlightListHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TicketChangingFlightListResponse
func (client *Client) TicketChangingFlightListWithOptions(tmpReq *TicketChangingFlightListRequest, headers *TicketChangingFlightListHeaders, runtime *util.RuntimeOptions) (_result *TicketChangingFlightListResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TicketChangingFlightListShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.TravelerInfoList)) {
		request.TravelerInfoListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.TravelerInfoList, tea.String("traveler_info_list"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ArrCity)) {
		query["arr_city"] = request.ArrCity
	}

	if !tea.BoolValue(util.IsUnset(request.DepCity)) {
		query["dep_city"] = request.DepCity
	}

	if !tea.BoolValue(util.IsUnset(request.DepDate)) {
		query["dep_date"] = request.DepDate
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		query["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.IsVoluntary)) {
		query["is_voluntary"] = request.IsVoluntary
	}

	if !tea.BoolValue(util.IsUnset(request.TravelerInfoListShrink)) {
		query["traveler_info_list"] = request.TravelerInfoListShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TicketChangingFlightList"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/huge/dtb-flight/v1/ticket-changing-flight/action/list"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TicketChangingFlightListResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签可改签航班列表
//
// @param request - TicketChangingFlightListRequest
//
// @return TicketChangingFlightListResponse
func (client *Client) TicketChangingFlightList(request *TicketChangingFlightListRequest) (_result *TicketChangingFlightListResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TicketChangingFlightListHeaders{}
	_result = &TicketChangingFlightListResponse{}
	_body, _err := client.TicketChangingFlightListWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 机票改签航班支付
//
// @param tmpReq - TicketChangingPayRequest
//
// @param headers - TicketChangingPayHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TicketChangingPayResponse
func (client *Client) TicketChangingPayWithOptions(tmpReq *TicketChangingPayRequest, headers *TicketChangingPayHeaders, runtime *util.RuntimeOptions) (_result *TicketChangingPayResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TicketChangingPayShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Extra)) {
		request.ExtraShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Extra, tea.String("extra"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CorpPayPrice)) {
		body["corp_pay_price"] = request.CorpPayPrice
	}

	if !tea.BoolValue(util.IsUnset(request.DisOrderId)) {
		body["dis_order_id"] = request.DisOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.DisSubOrderId)) {
		body["dis_sub_order_id"] = request.DisSubOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.ExtraShrink)) {
		body["extra"] = request.ExtraShrink
	}

	if !tea.BoolValue(util.IsUnset(request.PersonalPayPrice)) {
		body["personal_pay_price"] = request.PersonalPayPrice
	}

	if !tea.BoolValue(util.IsUnset(request.TotalPayPrice)) {
		body["total_pay_price"] = request.TotalPayPrice
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TicketChangingPay"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/dtb-flight/v1/ticket-changing/action/pay"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TicketChangingPayResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 机票改签航班支付
//
// @param request - TicketChangingPayRequest
//
// @return TicketChangingPayResponse
func (client *Client) TicketChangingPay(request *TicketChangingPayRequest) (_result *TicketChangingPayResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TicketChangingPayHeaders{}
	_result = &TicketChangingPayResponse{}
	_body, _err := client.TicketChangingPayWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票改签申请
//
// @param tmpReq - TrainApplyChangeRequest
//
// @param headers - TrainApplyChangeHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainApplyChangeResponse
func (client *Client) TrainApplyChangeWithOptions(tmpReq *TrainApplyChangeRequest, headers *TrainApplyChangeHeaders, runtime *util.RuntimeOptions) (_result *TrainApplyChangeResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TrainApplyChangeShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ChangeTrainInfoS)) {
		request.ChangeTrainInfoSShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ChangeTrainInfoS, tea.String("change_train_info_s"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ChangeTrainInfoSShrink)) {
		query["change_train_info_s"] = request.ChangeTrainInfoSShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AcceptNoSeat)) {
		body["accept_no_seat"] = request.AcceptNoSeat
	}

	if !tea.BoolValue(util.IsUnset(request.ForceMatch)) {
		body["force_match"] = request.ForceMatch
	}

	if !tea.BoolValue(util.IsUnset(request.IsPayNow)) {
		body["is_pay_now"] = request.IsPayNow
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutChangeApplyId)) {
		body["out_change_apply_id"] = request.OutChangeApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainApplyChange"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/change/apply"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainApplyChangeResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票改签申请
//
// @param request - TrainApplyChangeRequest
//
// @return TrainApplyChangeResponse
func (client *Client) TrainApplyChange(request *TrainApplyChangeRequest) (_result *TrainApplyChangeResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainApplyChangeHeaders{}
	_result = &TrainApplyChangeResponse{}
	_body, _err := client.TrainApplyChangeWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票退票申请
//
// @param tmpReq - TrainApplyRefundRequest
//
// @param headers - TrainApplyRefundHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainApplyRefundResponse
func (client *Client) TrainApplyRefundWithOptions(tmpReq *TrainApplyRefundRequest, headers *TrainApplyRefundHeaders, runtime *util.RuntimeOptions) (_result *TrainApplyRefundResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TrainApplyRefundShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.RefundTrainInfos)) {
		request.RefundTrainInfosShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.RefundTrainInfos, tea.String("refund_train_infos"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutRefundId)) {
		body["out_refund_id"] = request.OutRefundId
	}

	if !tea.BoolValue(util.IsUnset(request.RefundTrainInfosShrink)) {
		body["refund_train_infos"] = request.RefundTrainInfosShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainApplyRefund"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/refund/apply"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainApplyRefundResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票退票申请
//
// @param request - TrainApplyRefundRequest
//
// @return TrainApplyRefundResponse
func (client *Client) TrainApplyRefund(request *TrainApplyRefundRequest) (_result *TrainApplyRefundResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainApplyRefundHeaders{}
	_result = &TrainApplyRefundResponse{}
	_body, _err := client.TrainApplyRefundWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询火车票记账数据
//
// @param request - TrainBillSettlementQueryRequest
//
// @param headers - TrainBillSettlementQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainBillSettlementQueryResponse
func (client *Client) TrainBillSettlementQueryWithOptions(request *TrainBillSettlementQueryRequest, headers *TrainBillSettlementQueryHeaders, runtime *util.RuntimeOptions) (_result *TrainBillSettlementQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodEnd)) {
		query["period_end"] = request.PeriodEnd
	}

	if !tea.BoolValue(util.IsUnset(request.PeriodStart)) {
		query["period_start"] = request.PeriodStart
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainBillSettlementQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/bill-settlement"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainBillSettlementQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询火车票记账数据
//
// @param request - TrainBillSettlementQueryRequest
//
// @return TrainBillSettlementQueryResponse
func (client *Client) TrainBillSettlementQuery(request *TrainBillSettlementQueryRequest) (_result *TrainBillSettlementQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainBillSettlementQueryHeaders{}
	_result = &TrainBillSettlementQueryResponse{}
	_body, _err := client.TrainBillSettlementQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询火车超标审批详情
//
// @param request - TrainExceedApplyQueryRequest
//
// @param headers - TrainExceedApplyQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainExceedApplyQueryResponse
func (client *Client) TrainExceedApplyQueryWithOptions(request *TrainExceedApplyQueryRequest, headers *TrainExceedApplyQueryHeaders, runtime *util.RuntimeOptions) (_result *TrainExceedApplyQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.BusinessInstanceId)) {
		query["business_instance_id"] = request.BusinessInstanceId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainExceedApplyQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/train-exceed"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainExceedApplyQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询火车超标审批详情
//
// @param request - TrainExceedApplyQueryRequest
//
// @return TrainExceedApplyQueryResponse
func (client *Client) TrainExceedApplyQuery(request *TrainExceedApplyQueryRequest) (_result *TrainExceedApplyQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainExceedApplyQueryHeaders{}
	_result = &TrainExceedApplyQueryResponse{}
	_body, _err := client.TrainExceedApplyQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票改签费用预估
//
// @param tmpReq - TrainFeeCalculateChangeRequest
//
// @param headers - TrainFeeCalculateChangeHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainFeeCalculateChangeResponse
func (client *Client) TrainFeeCalculateChangeWithOptions(tmpReq *TrainFeeCalculateChangeRequest, headers *TrainFeeCalculateChangeHeaders, runtime *util.RuntimeOptions) (_result *TrainFeeCalculateChangeResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TrainFeeCalculateChangeShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ChangeTrainDetails)) {
		request.ChangeTrainDetailsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ChangeTrainDetails, tea.String("change_train_details"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ChangeTrainDetailsShrink)) {
		body["change_train_details"] = request.ChangeTrainDetailsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.DistributeOrderId)) {
		body["distribute_order_id"] = request.DistributeOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainFeeCalculateChange"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/change/fee"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainFeeCalculateChangeResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票改签费用预估
//
// @param request - TrainFeeCalculateChangeRequest
//
// @return TrainFeeCalculateChangeResponse
func (client *Client) TrainFeeCalculateChange(request *TrainFeeCalculateChangeRequest) (_result *TrainFeeCalculateChangeResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainFeeCalculateChangeHeaders{}
	_result = &TrainFeeCalculateChangeResponse{}
	_body, _err := client.TrainFeeCalculateChangeWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票退票费用预估
//
// @param tmpReq - TrainFeeCalculateRefundRequest
//
// @param headers - TrainFeeCalculateRefundHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainFeeCalculateRefundResponse
func (client *Client) TrainFeeCalculateRefundWithOptions(tmpReq *TrainFeeCalculateRefundRequest, headers *TrainFeeCalculateRefundHeaders, runtime *util.RuntimeOptions) (_result *TrainFeeCalculateRefundResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TrainFeeCalculateRefundShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.RefundTrainInfos)) {
		request.RefundTrainInfosShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.RefundTrainInfos, tea.String("refund_train_infos"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DistributeOrderId)) {
		body["distribute_order_id"] = request.DistributeOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.RefundTrainInfosShrink)) {
		body["refund_train_infos"] = request.RefundTrainInfosShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainFeeCalculateRefund"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/refund/fee"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainFeeCalculateRefundResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票退票费用预估
//
// @param request - TrainFeeCalculateRefundRequest
//
// @return TrainFeeCalculateRefundResponse
func (client *Client) TrainFeeCalculateRefund(request *TrainFeeCalculateRefundRequest) (_result *TrainFeeCalculateRefundResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainFeeCalculateRefundHeaders{}
	_result = &TrainFeeCalculateRefundResponse{}
	_body, _err := client.TrainFeeCalculateRefundWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票车次详情查询
//
// @param request - TrainNoInfoSearchRequest
//
// @param headers - TrainNoInfoSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainNoInfoSearchResponse
func (client *Client) TrainNoInfoSearchWithOptions(request *TrainNoInfoSearchRequest, headers *TrainNoInfoSearchHeaders, runtime *util.RuntimeOptions) (_result *TrainNoInfoSearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ArrLocation)) {
		body["arr_location"] = request.ArrLocation
	}

	if !tea.BoolValue(util.IsUnset(request.DepDate)) {
		body["dep_date"] = request.DepDate
	}

	if !tea.BoolValue(util.IsUnset(request.DepLocation)) {
		body["dep_location"] = request.DepLocation
	}

	if !tea.BoolValue(util.IsUnset(request.LineKey)) {
		body["line_key"] = request.LineKey
	}

	if !tea.BoolValue(util.IsUnset(request.MiddleDate)) {
		body["middle_date"] = request.MiddleDate
	}

	if !tea.BoolValue(util.IsUnset(request.MiddleStation)) {
		body["middle_station"] = request.MiddleStation
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.TrainNo)) {
		body["train_no"] = request.TrainNo
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainNoInfoSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/search/info"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainNoInfoSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票车次详情查询
//
// @param request - TrainNoInfoSearchRequest
//
// @return TrainNoInfoSearchResponse
func (client *Client) TrainNoInfoSearch(request *TrainNoInfoSearchRequest) (_result *TrainNoInfoSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainNoInfoSearchHeaders{}
	_result = &TrainNoInfoSearchResponse{}
	_body, _err := client.TrainNoInfoSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票车次列表查询
//
// @param tmpReq - TrainNoListSearchRequest
//
// @param headers - TrainNoListSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainNoListSearchResponse
func (client *Client) TrainNoListSearchWithOptions(tmpReq *TrainNoListSearchRequest, headers *TrainNoListSearchHeaders, runtime *util.RuntimeOptions) (_result *TrainNoListSearchResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TrainNoListSearchShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Option)) {
		request.OptionShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Option, tea.String("option"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ArrLocation)) {
		body["arr_location"] = request.ArrLocation
	}

	if !tea.BoolValue(util.IsUnset(request.DepDate)) {
		body["dep_date"] = request.DepDate
	}

	if !tea.BoolValue(util.IsUnset(request.DepLocation)) {
		body["dep_location"] = request.DepLocation
	}

	if !tea.BoolValue(util.IsUnset(request.OptionShrink)) {
		body["option"] = request.OptionShrink
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainNoListSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/search/list"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainNoListSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票车次列表查询
//
// @param request - TrainNoListSearchRequest
//
// @return TrainNoListSearchResponse
func (client *Client) TrainNoListSearch(request *TrainNoListSearchRequest) (_result *TrainNoListSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainNoListSearchHeaders{}
	_result = &TrainNoListSearchResponse{}
	_body, _err := client.TrainNoListSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票订单取消
//
// @param request - TrainOrderCancelRequest
//
// @param headers - TrainOrderCancelHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainOrderCancelResponse
func (client *Client) TrainOrderCancelWithOptions(request *TrainOrderCancelRequest, headers *TrainOrderCancelHeaders, runtime *util.RuntimeOptions) (_result *TrainOrderCancelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ChangeOrderId)) {
		body["change_order_id"] = request.ChangeOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutChangeOrderId)) {
		body["out_change_order_id"] = request.OutChangeOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainOrderCancel"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/order/cancel"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainOrderCancelResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票订单取消
//
// @param request - TrainOrderCancelRequest
//
// @return TrainOrderCancelResponse
func (client *Client) TrainOrderCancel(request *TrainOrderCancelRequest) (_result *TrainOrderCancelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainOrderCancelHeaders{}
	_result = &TrainOrderCancelResponse{}
	_body, _err := client.TrainOrderCancelWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票改签确认
//
// @param request - TrainOrderChangeConfirmRequest
//
// @param headers - TrainOrderChangeConfirmHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainOrderChangeConfirmResponse
func (client *Client) TrainOrderChangeConfirmWithOptions(request *TrainOrderChangeConfirmRequest, headers *TrainOrderChangeConfirmHeaders, runtime *util.RuntimeOptions) (_result *TrainOrderChangeConfirmResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ChangeApplyId)) {
		body["change_apply_id"] = request.ChangeApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.ChangeSettleAmount)) {
		body["change_settle_amount"] = request.ChangeSettleAmount
	}

	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutChangeApplyId)) {
		body["out_change_apply_id"] = request.OutChangeApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainOrderChangeConfirm"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/change/confirm"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainOrderChangeConfirmResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票改签确认
//
// @param request - TrainOrderChangeConfirmRequest
//
// @return TrainOrderChangeConfirmResponse
func (client *Client) TrainOrderChangeConfirm(request *TrainOrderChangeConfirmRequest) (_result *TrainOrderChangeConfirmResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainOrderChangeConfirmHeaders{}
	_result = &TrainOrderChangeConfirmResponse{}
	_body, _err := client.TrainOrderChangeConfirmWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票正向预订
//
// @param tmpReq - TrainOrderCreateRequest
//
// @param headers - TrainOrderCreateHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainOrderCreateResponse
func (client *Client) TrainOrderCreateWithOptions(tmpReq *TrainOrderCreateRequest, headers *TrainOrderCreateHeaders, runtime *util.RuntimeOptions) (_result *TrainOrderCreateResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TrainOrderCreateShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.BookTrainInfos)) {
		request.BookTrainInfosShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.BookTrainInfos, tea.String("book_train_infos"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.BusinessInfo)) {
		request.BusinessInfoShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.BusinessInfo, tea.String("business_info"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ContactInfo)) {
		request.ContactInfoShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ContactInfo, tea.String("contact_info"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.PassengerOpenInfoS)) {
		request.PassengerOpenInfoSShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.PassengerOpenInfoS, tea.String("passenger_open_info_s"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AcceptNoSeat)) {
		body["accept_no_seat"] = request.AcceptNoSeat
	}

	if !tea.BoolValue(util.IsUnset(request.BookTrainInfosShrink)) {
		body["book_train_infos"] = request.BookTrainInfosShrink
	}

	if !tea.BoolValue(util.IsUnset(request.BtripUserId)) {
		body["btrip_user_id"] = request.BtripUserId
	}

	if !tea.BoolValue(util.IsUnset(request.BtripUserName)) {
		body["btrip_user_name"] = request.BtripUserName
	}

	if !tea.BoolValue(util.IsUnset(request.BusinessInfoShrink)) {
		body["business_info"] = request.BusinessInfoShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ContactInfoShrink)) {
		body["contact_info"] = request.ContactInfoShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ForceMatch)) {
		body["force_match"] = request.ForceMatch
	}

	if !tea.BoolValue(util.IsUnset(request.IsPayNow)) {
		body["is_pay_now"] = request.IsPayNow
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.PassengerOpenInfoSShrink)) {
		body["passenger_open_info_s"] = request.PassengerOpenInfoSShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainOrderCreate"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/order/create"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainOrderCreateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票正向预订
//
// @param request - TrainOrderCreateRequest
//
// @return TrainOrderCreateResponse
func (client *Client) TrainOrderCreate(request *TrainOrderCreateRequest) (_result *TrainOrderCreateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainOrderCreateHeaders{}
	_result = &TrainOrderCreateResponse{}
	_body, _err := client.TrainOrderCreateWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票订单详情
//
// @param request - TrainOrderDetailQueryRequest
//
// @param headers - TrainOrderDetailQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainOrderDetailQueryResponse
func (client *Client) TrainOrderDetailQueryWithOptions(request *TrainOrderDetailQueryRequest, headers *TrainOrderDetailQueryHeaders, runtime *util.RuntimeOptions) (_result *TrainOrderDetailQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainOrderDetailQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/order/query"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainOrderDetailQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票订单详情
//
// @param request - TrainOrderDetailQueryRequest
//
// @return TrainOrderDetailQueryResponse
func (client *Client) TrainOrderDetailQuery(request *TrainOrderDetailQueryRequest) (_result *TrainOrderDetailQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainOrderDetailQueryHeaders{}
	_result = &TrainOrderDetailQueryResponse{}
	_body, _err := client.TrainOrderDetailQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询火车票订单列表
//
// @param request - TrainOrderListQueryRequest
//
// @param headers - TrainOrderListQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainOrderListQueryResponse
func (client *Client) TrainOrderListQueryWithOptions(request *TrainOrderListQueryRequest, headers *TrainOrderListQueryHeaders, runtime *util.RuntimeOptions) (_result *TrainOrderListQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AllApply)) {
		query["all_apply"] = request.AllApply
	}

	if !tea.BoolValue(util.IsUnset(request.ApplyId)) {
		query["apply_id"] = request.ApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.DepartId)) {
		query["depart_id"] = request.DepartId
	}

	if !tea.BoolValue(util.IsUnset(request.EndTime)) {
		query["end_time"] = request.EndTime
	}

	if !tea.BoolValue(util.IsUnset(request.Page)) {
		query["page"] = request.Page
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.StartTime)) {
		query["start_time"] = request.StartTime
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdpartApplyId)) {
		query["thirdpart_apply_id"] = request.ThirdpartApplyId
	}

	if !tea.BoolValue(util.IsUnset(request.UpdateEndTime)) {
		query["update_end_time"] = request.UpdateEndTime
	}

	if !tea.BoolValue(util.IsUnset(request.UpdateStartTime)) {
		query["update_start_time"] = request.UpdateStartTime
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainOrderListQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/order-list"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainOrderListQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询火车票订单列表
//
// @param request - TrainOrderListQueryRequest
//
// @return TrainOrderListQueryResponse
func (client *Client) TrainOrderListQuery(request *TrainOrderListQueryRequest) (_result *TrainOrderListQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainOrderListQueryHeaders{}
	_result = &TrainOrderListQueryResponse{}
	_body, _err := client.TrainOrderListQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票订单支付
//
// @param request - TrainOrderPayRequest
//
// @param headers - TrainOrderPayHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainOrderPayResponse
func (client *Client) TrainOrderPayWithOptions(request *TrainOrderPayRequest, headers *TrainOrderPayHeaders, runtime *util.RuntimeOptions) (_result *TrainOrderPayResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		body["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.OutOrderId)) {
		body["out_order_id"] = request.OutOrderId
	}

	if !tea.BoolValue(util.IsUnset(request.PayAmount)) {
		body["pay_amount"] = request.PayAmount
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainOrderPay"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/order/pay"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainOrderPayResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票订单支付
//
// @param request - TrainOrderPayRequest
//
// @return TrainOrderPayResponse
func (client *Client) TrainOrderPay(request *TrainOrderPayRequest) (_result *TrainOrderPayResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainOrderPayHeaders{}
	_result = &TrainOrderPayResponse{}
	_body, _err := client.TrainOrderPayWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询火车票订单详情（含票信息）
//
// @param request - TrainOrderQueryRequest
//
// @param headers - TrainOrderQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainOrderQueryResponse
func (client *Client) TrainOrderQueryWithOptions(request *TrainOrderQueryRequest, headers *TrainOrderQueryHeaders, runtime *util.RuntimeOptions) (_result *TrainOrderQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainOrderQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/order"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainOrderQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询火车票订单详情（含票信息）
//
// @param request - TrainOrderQueryRequest
//
// @return TrainOrderQueryResponse
func (client *Client) TrainOrderQuery(request *TrainOrderQueryRequest) (_result *TrainOrderQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainOrderQueryHeaders{}
	_result = &TrainOrderQueryResponse{}
	_body, _err := client.TrainOrderQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票订单查询V2
//
// @param request - TrainOrderQueryV2Request
//
// @param headers - TrainOrderQueryV2Headers
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainOrderQueryV2Response
func (client *Client) TrainOrderQueryV2WithOptions(request *TrainOrderQueryV2Request, headers *TrainOrderQueryV2Headers, runtime *util.RuntimeOptions) (_result *TrainOrderQueryV2Response, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.OrderId)) {
		query["order_id"] = request.OrderId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainOrderQueryV2"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v2/order"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainOrderQueryV2Response{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票订单查询V2
//
// @param request - TrainOrderQueryV2Request
//
// @return TrainOrderQueryV2Response
func (client *Client) TrainOrderQueryV2(request *TrainOrderQueryV2Request) (_result *TrainOrderQueryV2Response, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainOrderQueryV2Headers{}
	_result = &TrainOrderQueryV2Response{}
	_body, _err := client.TrainOrderQueryV2WithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询火车站数据
//
// @param request - TrainStationSearchRequest
//
// @param headers - TrainStationSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainStationSearchResponse
func (client *Client) TrainStationSearchWithOptions(request *TrainStationSearchRequest, headers *TrainStationSearchHeaders, runtime *util.RuntimeOptions) (_result *TrainStationSearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Keyword)) {
		query["keyword"] = request.Keyword
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainStationSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/city/v1/train"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainStationSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询火车站数据
//
// @param request - TrainStationSearchRequest
//
// @return TrainStationSearchResponse
func (client *Client) TrainStationSearch(request *TrainStationSearchRequest) (_result *TrainStationSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainStationSearchHeaders{}
	_result = &TrainStationSearchResponse{}
	_body, _err := client.TrainStationSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 火车票经停站查询
//
// @param request - TrainStopoverSearchRequest
//
// @param headers - TrainStopoverSearchHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainStopoverSearchResponse
func (client *Client) TrainStopoverSearchWithOptions(request *TrainStopoverSearchRequest, headers *TrainStopoverSearchHeaders, runtime *util.RuntimeOptions) (_result *TrainStopoverSearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ArrStation)) {
		body["arr_station"] = request.ArrStation
	}

	if !tea.BoolValue(util.IsUnset(request.DepStation)) {
		body["dep_station"] = request.DepStation
	}

	if !tea.BoolValue(util.IsUnset(request.TrainDate)) {
		body["train_date"] = request.TrainDate
	}

	if !tea.BoolValue(util.IsUnset(request.TrainNo)) {
		body["train_no"] = request.TrainNo
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainStopoverSearch"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/train/v1/search/stopover"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainStopoverSearchResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 火车票经停站查询
//
// @param request - TrainStopoverSearchRequest
//
// @return TrainStopoverSearchResponse
func (client *Client) TrainStopoverSearch(request *TrainStopoverSearchRequest) (_result *TrainStopoverSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainStopoverSearchHeaders{}
	_result = &TrainStopoverSearchResponse{}
	_body, _err := client.TrainStopoverSearchWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询火车票凭证扫描件
//
// @param request - TrainTicketScanQueryRequest
//
// @param headers - TrainTicketScanQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TrainTicketScanQueryResponse
func (client *Client) TrainTicketScanQueryWithOptions(request *TrainTicketScanQueryRequest, headers *TrainTicketScanQueryHeaders, runtime *util.RuntimeOptions) (_result *TrainTicketScanQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BillDate)) {
		query["bill_date"] = request.BillDate
	}

	if !tea.BoolValue(util.IsUnset(request.BillId)) {
		query["bill_id"] = request.BillId
	}

	if !tea.BoolValue(util.IsUnset(request.InvoiceSubTaskId)) {
		query["invoice_sub_task_id"] = request.InvoiceSubTaskId
	}

	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.SerialNumber)) {
		query["serial_number"] = request.SerialNumber
	}

	if !tea.BoolValue(util.IsUnset(request.TicketNo)) {
		query["ticket_no"] = request.TicketNo
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TrainTicketScanQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/scan/v1/train-ticket"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TrainTicketScanQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询火车票凭证扫描件
//
// @param request - TrainTicketScanQueryRequest
//
// @return TrainTicketScanQueryResponse
func (client *Client) TrainTicketScanQuery(request *TrainTicketScanQueryRequest) (_result *TrainTicketScanQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TrainTicketScanQueryHeaders{}
	_result = &TrainTicketScanQueryResponse{}
	_body, _err := client.TrainTicketScanQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询差标列表
//
// @param request - TravelStandardListQueryRequest
//
// @param headers - TravelStandardListQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TravelStandardListQueryResponse
func (client *Client) TravelStandardListQueryWithOptions(request *TravelStandardListQueryRequest, headers *TravelStandardListQueryHeaders, runtime *util.RuntimeOptions) (_result *TravelStandardListQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.FromGroup)) {
		query["from_group"] = request.FromGroup
	}

	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.RuleName)) {
		query["rule_name"] = request.RuleName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TravelStandardListQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/travel-manage/v1/standards/list"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TravelStandardListQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询差标列表
//
// @param request - TravelStandardListQueryRequest
//
// @return TravelStandardListQueryResponse
func (client *Client) TravelStandardListQuery(request *TravelStandardListQueryRequest) (_result *TravelStandardListQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TravelStandardListQueryHeaders{}
	_result = &TravelStandardListQueryResponse{}
	_body, _err := client.TravelStandardListQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询差标详情
//
// @param tmpReq - TravelStandardQueryRequest
//
// @param headers - TravelStandardQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TravelStandardQueryResponse
func (client *Client) TravelStandardQueryWithOptions(tmpReq *TravelStandardQueryRequest, headers *TravelStandardQueryHeaders, runtime *util.RuntimeOptions) (_result *TravelStandardQueryResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TravelStandardQueryShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ServiceTypeList)) {
		request.ServiceTypeListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ServiceTypeList, tea.String("service_type_list"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.FromGroup)) {
		query["from_group"] = request.FromGroup
	}

	if !tea.BoolValue(util.IsUnset(request.RuleCode)) {
		query["rule_code"] = request.RuleCode
	}

	if !tea.BoolValue(util.IsUnset(request.ServiceTypeListShrink)) {
		query["service_type_list"] = request.ServiceTypeListShrink
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TravelStandardQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/travel-manage/v1/standards/detail"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TravelStandardQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询差标详情
//
// @param request - TravelStandardQueryRequest
//
// @return TravelStandardQueryResponse
func (client *Client) TravelStandardQuery(request *TravelStandardQueryRequest) (_result *TravelStandardQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TravelStandardQueryHeaders{}
	_result = &TravelStandardQueryResponse{}
	_body, _err := client.TravelStandardQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询业务流程
//
// @param request - TripBusinessInstanceQueryRequest
//
// @param headers - TripBusinessInstanceQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TripBusinessInstanceQueryResponse
func (client *Client) TripBusinessInstanceQueryWithOptions(request *TripBusinessInstanceQueryRequest, headers *TripBusinessInstanceQueryHeaders, runtime *util.RuntimeOptions) (_result *TripBusinessInstanceQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BusinessInstanceId)) {
		query["business_instance_id"] = request.BusinessInstanceId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdBusinessId)) {
		query["third_business_id"] = request.ThirdBusinessId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		query["user_name"] = request.UserName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TripBusinessInstanceQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/business"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TripBusinessInstanceQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询业务流程
//
// @param request - TripBusinessInstanceQueryRequest
//
// @return TripBusinessInstanceQueryResponse
func (client *Client) TripBusinessInstanceQuery(request *TripBusinessInstanceQueryRequest) (_result *TripBusinessInstanceQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TripBusinessInstanceQueryHeaders{}
	_result = &TripBusinessInstanceQueryResponse{}
	_body, _err := client.TripBusinessInstanceQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询抄送信息
//
// @param request - TripCCInfoQueryRequest
//
// @param headers - TripCCInfoQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TripCCInfoQueryResponse
func (client *Client) TripCCInfoQueryWithOptions(request *TripCCInfoQueryRequest, headers *TripCCInfoQueryHeaders, runtime *util.RuntimeOptions) (_result *TripCCInfoQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BusinessInstanceId)) {
		query["business_instance_id"] = request.BusinessInstanceId
	}

	if !tea.BoolValue(util.IsUnset(request.NodeId)) {
		query["node_id"] = request.NodeId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdBusinessId)) {
		query["third_business_id"] = request.ThirdBusinessId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TripCCInfoQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/cc"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TripCCInfoQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询抄送信息
//
// @param request - TripCCInfoQueryRequest
//
// @return TripCCInfoQueryResponse
func (client *Client) TripCCInfoQuery(request *TripCCInfoQueryRequest) (_result *TripCCInfoQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TripCCInfoQueryHeaders{}
	_result = &TripCCInfoQueryResponse{}
	_body, _err := client.TripCCInfoQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询审批任务列表
//
// @param request - TripTaskQueryRequest
//
// @param headers - TripTaskQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TripTaskQueryResponse
func (client *Client) TripTaskQueryWithOptions(request *TripTaskQueryRequest, headers *TripTaskQueryHeaders, runtime *util.RuntimeOptions) (_result *TripTaskQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BusinessInstanceId)) {
		query["business_instance_id"] = request.BusinessInstanceId
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdBusinessId)) {
		query["third_business_id"] = request.ThirdBusinessId
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		query["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserName)) {
		query["user_name"] = request.UserName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TripTaskQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/apply/v1/tasks"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &TripTaskQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询审批任务列表
//
// @param request - TripTaskQueryRequest
//
// @return TripTaskQueryResponse
func (client *Client) TripTaskQuery(request *TripTaskQueryRequest) (_result *TripTaskQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &TripTaskQueryHeaders{}
	_result = &TripTaskQueryResponse{}
	_body, _err := client.TripTaskQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 更新企业自定义角色
//
// @param request - UpdateCustomRoleRequest
//
// @param headers - UpdateCustomRoleHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateCustomRoleResponse
func (client *Client) UpdateCustomRoleWithOptions(request *UpdateCustomRoleRequest, headers *UpdateCustomRoleHeaders, runtime *util.RuntimeOptions) (_result *UpdateCustomRoleResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RoleId)) {
		body["role_id"] = request.RoleId
	}

	if !tea.BoolValue(util.IsUnset(request.RoleName)) {
		body["role_name"] = request.RoleName
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateCustomRole"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/role/v1/customRoles/update"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &UpdateCustomRoleResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 更新企业自定义角色
//
// @param request - UpdateCustomRoleRequest
//
// @return UpdateCustomRoleResponse
func (client *Client) UpdateCustomRole(request *UpdateCustomRoleRequest) (_result *UpdateCustomRoleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &UpdateCustomRoleHeaders{}
	_result = &UpdateCustomRoleResponse{}
	_body, _err := client.UpdateCustomRoleWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 修改企业部门
//
// @param tmpReq - UpdateDepartmentRequest
//
// @param headers - UpdateDepartmentHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateDepartmentResponse
func (client *Client) UpdateDepartmentWithOptions(tmpReq *UpdateDepartmentRequest, headers *UpdateDepartmentHeaders, runtime *util.RuntimeOptions) (_result *UpdateDepartmentResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &UpdateDepartmentShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ManagerEmployeeIdList)) {
		request.ManagerEmployeeIdListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ManagerEmployeeIdList, tea.String("manager_employee_id_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DeptName)) {
		body["dept_name"] = request.DeptName
	}

	if !tea.BoolValue(util.IsUnset(request.ManagerEmployeeIdListShrink)) {
		body["manager_employee_id_list"] = request.ManagerEmployeeIdListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.OutDeptId)) {
		body["out_dept_id"] = request.OutDeptId
	}

	if !tea.BoolValue(util.IsUnset(request.OutDeptPid)) {
		body["out_dept_pid"] = request.OutDeptPid
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateDepartment"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/department/v2/update"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &UpdateDepartmentResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 修改企业部门
//
// @param request - UpdateDepartmentRequest
//
// @return UpdateDepartmentResponse
func (client *Client) UpdateDepartment(request *UpdateDepartmentRequest) (_result *UpdateDepartmentResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &UpdateDepartmentHeaders{}
	_result = &UpdateDepartmentResponse{}
	_body, _err := client.UpdateDepartmentWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 更新员工信息
//
// @param tmpReq - UpdateEmployeeRequest
//
// @param headers - UpdateEmployeeHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateEmployeeResponse
func (client *Client) UpdateEmployeeWithOptions(tmpReq *UpdateEmployeeRequest, headers *UpdateEmployeeHeaders, runtime *util.RuntimeOptions) (_result *UpdateEmployeeResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &UpdateEmployeeShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.BaseCityCodeList)) {
		request.BaseCityCodeListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.BaseCityCodeList, tea.String("base_city_code_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.CertList)) {
		request.CertListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CertList, tea.String("cert_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.CustomRoleCodeList)) {
		request.CustomRoleCodeListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.CustomRoleCodeList, tea.String("custom_role_code_list"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.OutDeptIdList)) {
		request.OutDeptIdListShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.OutDeptIdList, tea.String("out_dept_id_list"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Avatar)) {
		body["avatar"] = request.Avatar
	}

	if !tea.BoolValue(util.IsUnset(request.BaseCityCodeListShrink)) {
		body["base_city_code_list"] = request.BaseCityCodeListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Birthday)) {
		body["birthday"] = request.Birthday
	}

	if !tea.BoolValue(util.IsUnset(request.CertListShrink)) {
		body["cert_list"] = request.CertListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.CustomRoleCodeListShrink)) {
		body["custom_role_code_list"] = request.CustomRoleCodeListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Email)) {
		body["email"] = request.Email
	}

	if !tea.BoolValue(util.IsUnset(request.Gender)) {
		body["gender"] = request.Gender
	}

	if !tea.BoolValue(util.IsUnset(request.IsAdmin)) {
		body["is_admin"] = request.IsAdmin
	}

	if !tea.BoolValue(util.IsUnset(request.IsBoss)) {
		body["is_boss"] = request.IsBoss
	}

	if !tea.BoolValue(util.IsUnset(request.IsDeptLeader)) {
		body["is_dept_leader"] = request.IsDeptLeader
	}

	if !tea.BoolValue(util.IsUnset(request.JobNo)) {
		body["job_no"] = request.JobNo
	}

	if !tea.BoolValue(util.IsUnset(request.ManagerUserId)) {
		body["manager_user_id"] = request.ManagerUserId
	}

	if !tea.BoolValue(util.IsUnset(request.OutDeptIdListShrink)) {
		body["out_dept_id_list"] = request.OutDeptIdListShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Phone)) {
		body["phone"] = request.Phone
	}

	if !tea.BoolValue(util.IsUnset(request.PositionLevel)) {
		body["position_level"] = request.PositionLevel
	}

	if !tea.BoolValue(util.IsUnset(request.RealName)) {
		body["real_name"] = request.RealName
	}

	if !tea.BoolValue(util.IsUnset(request.RealNameEn)) {
		body["real_name_en"] = request.RealNameEn
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	if !tea.BoolValue(util.IsUnset(request.UserNick)) {
		body["user_nick"] = request.UserNick
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateEmployee"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/employee/v2/update"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &UpdateEmployeeResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 更新员工信息
//
// @param request - UpdateEmployeeRequest
//
// @return UpdateEmployeeResponse
func (client *Client) UpdateEmployee(request *UpdateEmployeeRequest) (_result *UpdateEmployeeResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &UpdateEmployeeHeaders{}
	_result = &UpdateEmployeeResponse{}
	_body, _err := client.UpdateEmployeeWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 更新员工在职状态
//
// @param request - UpdateEmployeeLeaveStatusRequest
//
// @param headers - UpdateEmployeeLeaveStatusHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateEmployeeLeaveStatusResponse
func (client *Client) UpdateEmployeeLeaveStatusWithOptions(request *UpdateEmployeeLeaveStatusRequest, headers *UpdateEmployeeLeaveStatusHeaders, runtime *util.RuntimeOptions) (_result *UpdateEmployeeLeaveStatusResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.IsLeave)) {
		body["is_leave"] = request.IsLeave
	}

	if !tea.BoolValue(util.IsUnset(request.UserId)) {
		body["user_id"] = request.UserId
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripCorpToken)) {
		realHeaders["x-acs-btrip-corp-token"] = util.ToJSONString(headers.XAcsBtripCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Body:    openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateEmployeeLeaveStatus"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/employee/v2/updateLeaveStatus"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &UpdateEmployeeLeaveStatusResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 更新员工在职状态
//
// @param request - UpdateEmployeeLeaveStatusRequest
//
// @return UpdateEmployeeLeaveStatusResponse
func (client *Client) UpdateEmployeeLeaveStatus(request *UpdateEmployeeLeaveStatusRequest) (_result *UpdateEmployeeLeaveStatusResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &UpdateEmployeeLeaveStatusHeaders{}
	_result = &UpdateEmployeeLeaveStatusResponse{}
	_body, _err := client.UpdateEmployeeLeaveStatusWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 人员查询
//
// @param request - UserQueryRequest
//
// @param headers - UserQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UserQueryResponse
func (client *Client) UserQueryWithOptions(request *UserQueryRequest, headers *UserQueryHeaders, runtime *util.RuntimeOptions) (_result *UserQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ModifiedTimeGreaterOrEqualThan)) {
		query["modified_time_greater_or_equal_than"] = request.ModifiedTimeGreaterOrEqualThan
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.PageToken)) {
		query["page_token"] = request.PageToken
	}

	if !tea.BoolValue(util.IsUnset(request.ThirdPartJobNo)) {
		query["third_part_job_no"] = request.ThirdPartJobNo
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("UserQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/user/v1/user"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &UserQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 人员查询
//
// @param request - UserQueryRequest
//
// @return UserQueryResponse
func (client *Client) UserQuery(request *UserQueryRequest) (_result *UserQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &UserQueryHeaders{}
	_result = &UserQueryResponse{}
	_body, _err := client.UserQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询增值税发票扫描件
//
// @param request - VatInvoiceScanQueryRequest
//
// @param headers - VatInvoiceScanQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return VatInvoiceScanQueryResponse
func (client *Client) VatInvoiceScanQueryWithOptions(request *VatInvoiceScanQueryRequest, headers *VatInvoiceScanQueryHeaders, runtime *util.RuntimeOptions) (_result *VatInvoiceScanQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BillDate)) {
		query["bill_date"] = request.BillDate
	}

	if !tea.BoolValue(util.IsUnset(request.BillId)) {
		query["bill_id"] = request.BillId
	}

	if !tea.BoolValue(util.IsUnset(request.InvoiceSubTaskId)) {
		query["invoice_sub_task_id"] = request.InvoiceSubTaskId
	}

	if !tea.BoolValue(util.IsUnset(request.PageNo)) {
		query["page_no"] = request.PageNo
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["page_size"] = request.PageSize
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("VatInvoiceScanQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/scan/v1/vat-invoice"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &VatInvoiceScanQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询增值税发票扫描件
//
// @param request - VatInvoiceScanQueryRequest
//
// @return VatInvoiceScanQueryResponse
func (client *Client) VatInvoiceScanQuery(request *VatInvoiceScanQueryRequest) (_result *VatInvoiceScanQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &VatInvoiceScanQueryHeaders{}
	_result = &VatInvoiceScanQueryResponse{}
	_body, _err := client.VatInvoiceScanQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询账期待申请的发票数据
//
// @param request - WaitApplyInvoiceTaskDetailQueryRequest
//
// @param headers - WaitApplyInvoiceTaskDetailQueryHeaders
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return WaitApplyInvoiceTaskDetailQueryResponse
func (client *Client) WaitApplyInvoiceTaskDetailQueryWithOptions(request *WaitApplyInvoiceTaskDetailQueryRequest, headers *WaitApplyInvoiceTaskDetailQueryHeaders, runtime *util.RuntimeOptions) (_result *WaitApplyInvoiceTaskDetailQueryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.BillDate)) {
		query["bill_date"] = request.BillDate
	}

	realHeaders := make(map[string]*string)
	if !tea.BoolValue(util.IsUnset(headers.CommonHeaders)) {
		realHeaders = headers.CommonHeaders
	}

	if !tea.BoolValue(util.IsUnset(headers.XAcsBtripSoCorpToken)) {
		realHeaders["x-acs-btrip-so-corp-token"] = util.ToJSONString(headers.XAcsBtripSoCorpToken)
	}

	req := &openapi.OpenApiRequest{
		Headers: realHeaders,
		Query:   openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("WaitApplyInvoiceTaskDetailQuery"),
		Version:     tea.String("2022-05-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/invoice/v1/wait-apply-task"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("ROA"),
		ReqBodyType: tea.String("json"),
		BodyType:    tea.String("json"),
	}
	_result = &WaitApplyInvoiceTaskDetailQueryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询账期待申请的发票数据
//
// @param request - WaitApplyInvoiceTaskDetailQueryRequest
//
// @return WaitApplyInvoiceTaskDetailQueryResponse
func (client *Client) WaitApplyInvoiceTaskDetailQuery(request *WaitApplyInvoiceTaskDetailQueryRequest) (_result *WaitApplyInvoiceTaskDetailQueryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	headers := &WaitApplyInvoiceTaskDetailQueryHeaders{}
	_result = &WaitApplyInvoiceTaskDetailQueryResponse{}
	_body, _err := client.WaitApplyInvoiceTaskDetailQueryWithOptions(request, headers, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}
