// This file is auto-generated, don't edit it. Thanks.
package client

import (
	openapi "github.com/alibabacloud-go/darabonba-openapi/v2/client"
	endpointutil "github.com/alibabacloud-go/endpoint-util/service"
	openapiutil "github.com/alibabacloud-go/openapi-util/service"
	util "github.com/alibabacloud-go/tea-utils/v2/service"
	"github.com/alibabacloud-go/tea/tea"
)

type ResourceDirectoryFolderNode struct {
	AccountId      *string                        `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	Children       []*ResourceDirectoryFolderNode `json:"Children,omitempty" xml:"Children,omitempty" type:"Repeated"`
	DisplayName    *string                        `json:"DisplayName,omitempty" xml:"DisplayName,omitempty"`
	FolderId       *string                        `json:"FolderId,omitempty" xml:"FolderId,omitempty"`
	FolderName     *string                        `json:"FolderName,omitempty" xml:"FolderName,omitempty"`
	ParentFolderId *string                        `json:"ParentFolderId,omitempty" xml:"ParentFolderId,omitempty"`
}

func (s ResourceDirectoryFolderNode) String() string {
	return tea.Prettify(s)
}

func (s ResourceDirectoryFolderNode) GoString() string {
	return s.String()
}

func (s *ResourceDirectoryFolderNode) SetAccountId(v string) *ResourceDirectoryFolderNode {
	s.AccountId = &v
	return s
}

func (s *ResourceDirectoryFolderNode) SetChildren(v []*ResourceDirectoryFolderNode) *ResourceDirectoryFolderNode {
	s.Children = v
	return s
}

func (s *ResourceDirectoryFolderNode) SetDisplayName(v string) *ResourceDirectoryFolderNode {
	s.DisplayName = &v
	return s
}

func (s *ResourceDirectoryFolderNode) SetFolderId(v string) *ResourceDirectoryFolderNode {
	s.FolderId = &v
	return s
}

func (s *ResourceDirectoryFolderNode) SetFolderName(v string) *ResourceDirectoryFolderNode {
	s.FolderName = &v
	return s
}

func (s *ResourceDirectoryFolderNode) SetParentFolderId(v string) *ResourceDirectoryFolderNode {
	s.ParentFolderId = &v
	return s
}

type ActiveAggregateConfigRulesRequest struct {
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The rule ID.
	//
	// example:
	//
	// cp-fe416457e0d90022****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The error code returned.
	//
	// 	- If the rule is enabled, no error code is returned.
	//
	// 	- If the rule fails to be enabled, an error code is returned. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// cr-5772ba41209e007b****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s ActiveAggregateConfigRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s ActiveAggregateConfigRulesRequest) GoString() string {
	return s.String()
}

func (s *ActiveAggregateConfigRulesRequest) SetAggregatorId(v string) *ActiveAggregateConfigRulesRequest {
	s.AggregatorId = &v
	return s
}

func (s *ActiveAggregateConfigRulesRequest) SetCompliancePackId(v string) *ActiveAggregateConfigRulesRequest {
	s.CompliancePackId = &v
	return s
}

func (s *ActiveAggregateConfigRulesRequest) SetConfigRuleIds(v string) *ActiveAggregateConfigRulesRequest {
	s.ConfigRuleIds = &v
	return s
}

type ActiveAggregateConfigRulesResponseBody struct {
	// The results of the operations.
	OperateRuleResult *ActiveAggregateConfigRulesResponseBodyOperateRuleResult `json:"OperateRuleResult,omitempty" xml:"OperateRuleResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ActiveAggregateConfigRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ActiveAggregateConfigRulesResponseBody) GoString() string {
	return s.String()
}

func (s *ActiveAggregateConfigRulesResponseBody) SetOperateRuleResult(v *ActiveAggregateConfigRulesResponseBodyOperateRuleResult) *ActiveAggregateConfigRulesResponseBody {
	s.OperateRuleResult = v
	return s
}

func (s *ActiveAggregateConfigRulesResponseBody) SetRequestId(v string) *ActiveAggregateConfigRulesResponseBody {
	s.RequestId = &v
	return s
}

type ActiveAggregateConfigRulesResponseBodyOperateRuleResult struct {
	// The result information about the operation.
	OperateRuleItemList []*ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList `json:"OperateRuleItemList,omitempty" xml:"OperateRuleItemList,omitempty" type:"Repeated"`
}

func (s ActiveAggregateConfigRulesResponseBodyOperateRuleResult) String() string {
	return tea.Prettify(s)
}

func (s ActiveAggregateConfigRulesResponseBodyOperateRuleResult) GoString() string {
	return s.String()
}

func (s *ActiveAggregateConfigRulesResponseBodyOperateRuleResult) SetOperateRuleItemList(v []*ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) *ActiveAggregateConfigRulesResponseBodyOperateRuleResult {
	s.OperateRuleItemList = v
	return s
}

type ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList struct {
	// The rule ID.
	//
	// example:
	//
	// cr-5772ba41209e007b****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The error code.
	//
	// example:
	//
	// ConfigRuleNotExists
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// false
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) String() string {
	return tea.Prettify(s)
}

func (s ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) GoString() string {
	return s.String()
}

func (s *ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetConfigRuleId(v string) *ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ConfigRuleId = &v
	return s
}

func (s *ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetErrorCode(v string) *ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ErrorCode = &v
	return s
}

func (s *ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetSuccess(v bool) *ActiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.Success = &v
	return s
}

type ActiveAggregateConfigRulesResponse struct {
	Headers    map[string]*string                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ActiveAggregateConfigRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ActiveAggregateConfigRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s ActiveAggregateConfigRulesResponse) GoString() string {
	return s.String()
}

func (s *ActiveAggregateConfigRulesResponse) SetHeaders(v map[string]*string) *ActiveAggregateConfigRulesResponse {
	s.Headers = v
	return s
}

func (s *ActiveAggregateConfigRulesResponse) SetStatusCode(v int32) *ActiveAggregateConfigRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *ActiveAggregateConfigRulesResponse) SetBody(v *ActiveAggregateConfigRulesResponseBody) *ActiveAggregateConfigRulesResponse {
	s.Body = v
	return s
}

type ActiveConfigRulesRequest struct {
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-fe416457e0d90022****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The rule ID. Separate multiple rule IDs with commas (,).
	//
	// example:
	//
	// cr-2da35180a8d1008e****,cr-2da35180a8d1008e****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s ActiveConfigRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s ActiveConfigRulesRequest) GoString() string {
	return s.String()
}

func (s *ActiveConfigRulesRequest) SetCompliancePackId(v string) *ActiveConfigRulesRequest {
	s.CompliancePackId = &v
	return s
}

func (s *ActiveConfigRulesRequest) SetConfigRuleIds(v string) *ActiveConfigRulesRequest {
	s.ConfigRuleIds = &v
	return s
}

type ActiveConfigRulesResponseBody struct {
	// The returned results.
	OperateRuleResult *ActiveConfigRulesResponseBodyOperateRuleResult `json:"OperateRuleResult,omitempty" xml:"OperateRuleResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 61C1A88F-D163-40DF-84A6-F200229F37B2
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ActiveConfigRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ActiveConfigRulesResponseBody) GoString() string {
	return s.String()
}

func (s *ActiveConfigRulesResponseBody) SetOperateRuleResult(v *ActiveConfigRulesResponseBodyOperateRuleResult) *ActiveConfigRulesResponseBody {
	s.OperateRuleResult = v
	return s
}

func (s *ActiveConfigRulesResponseBody) SetRequestId(v string) *ActiveConfigRulesResponseBody {
	s.RequestId = &v
	return s
}

type ActiveConfigRulesResponseBodyOperateRuleResult struct {
	// The returned results.
	OperateRuleItemList []*ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList `json:"OperateRuleItemList,omitempty" xml:"OperateRuleItemList,omitempty" type:"Repeated"`
}

func (s ActiveConfigRulesResponseBodyOperateRuleResult) String() string {
	return tea.Prettify(s)
}

func (s ActiveConfigRulesResponseBodyOperateRuleResult) GoString() string {
	return s.String()
}

func (s *ActiveConfigRulesResponseBodyOperateRuleResult) SetOperateRuleItemList(v []*ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) *ActiveConfigRulesResponseBodyOperateRuleResult {
	s.OperateRuleItemList = v
	return s
}

type ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList struct {
	// The rule ID.
	//
	// example:
	//
	// cr-2da35180a8d1008e****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The error code.
	//
	// 	- If the rule is enabled, no error code is returned.
	//
	// 	- If the rule fails to be enabled, an error code is returned. For more information about error codes, see [Error codes](https://next.api.aliyun.com/document/Config/2020-09-07/errorCode).
	//
	// example:
	//
	// ConfigRuleStatusNotInActive
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the rule is enabled. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) String() string {
	return tea.Prettify(s)
}

func (s ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) GoString() string {
	return s.String()
}

func (s *ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetConfigRuleId(v string) *ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ConfigRuleId = &v
	return s
}

func (s *ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetErrorCode(v string) *ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ErrorCode = &v
	return s
}

func (s *ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetSuccess(v bool) *ActiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.Success = &v
	return s
}

type ActiveConfigRulesResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ActiveConfigRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ActiveConfigRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s ActiveConfigRulesResponse) GoString() string {
	return s.String()
}

func (s *ActiveConfigRulesResponse) SetHeaders(v map[string]*string) *ActiveConfigRulesResponse {
	s.Headers = v
	return s
}

func (s *ActiveConfigRulesResponse) SetStatusCode(v int32) *ActiveConfigRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *ActiveConfigRulesResponse) SetBody(v *ActiveConfigRulesResponseBody) *ActiveConfigRulesResponse {
	s.Body = v
	return s
}

type AttachAggregateConfigRuleToCompliancePackRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-75b4626622af00c3****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-0453626622af0020****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The rule IDs. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-a124626622af00e7****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s AttachAggregateConfigRuleToCompliancePackRequest) String() string {
	return tea.Prettify(s)
}

func (s AttachAggregateConfigRuleToCompliancePackRequest) GoString() string {
	return s.String()
}

func (s *AttachAggregateConfigRuleToCompliancePackRequest) SetAggregatorId(v string) *AttachAggregateConfigRuleToCompliancePackRequest {
	s.AggregatorId = &v
	return s
}

func (s *AttachAggregateConfigRuleToCompliancePackRequest) SetCompliancePackId(v string) *AttachAggregateConfigRuleToCompliancePackRequest {
	s.CompliancePackId = &v
	return s
}

func (s *AttachAggregateConfigRuleToCompliancePackRequest) SetConfigRuleIds(v string) *AttachAggregateConfigRuleToCompliancePackRequest {
	s.ConfigRuleIds = &v
	return s
}

type AttachAggregateConfigRuleToCompliancePackResponseBody struct {
	// The results of the operations to add one or more rules.
	OperateRuleResult *AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult `json:"OperateRuleResult,omitempty" xml:"OperateRuleResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DE72B7B5-D0EA-15E6-A359-EDECBB9BDFA3
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s AttachAggregateConfigRuleToCompliancePackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s AttachAggregateConfigRuleToCompliancePackResponseBody) GoString() string {
	return s.String()
}

func (s *AttachAggregateConfigRuleToCompliancePackResponseBody) SetOperateRuleResult(v *AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult) *AttachAggregateConfigRuleToCompliancePackResponseBody {
	s.OperateRuleResult = v
	return s
}

func (s *AttachAggregateConfigRuleToCompliancePackResponseBody) SetRequestId(v string) *AttachAggregateConfigRuleToCompliancePackResponseBody {
	s.RequestId = &v
	return s
}

type AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult struct {
	// The result of the operation to add the rule.
	OperateRuleItemList []*AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList `json:"OperateRuleItemList,omitempty" xml:"OperateRuleItemList,omitempty" type:"Repeated"`
}

func (s AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult) String() string {
	return tea.Prettify(s)
}

func (s AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult) GoString() string {
	return s.String()
}

func (s *AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult) SetOperateRuleItemList(v []*AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) *AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult {
	s.OperateRuleItemList = v
	return s
}

type AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList struct {
	// The rule ID.
	//
	// example:
	//
	// cr-a124626622af00e7****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The error code.
	//
	// 	- This parameter is empty if the rule is added to the compliance package.
	//
	// 	- An error code is returned if the rule fails to be added to the compliance package. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// ConfigRuleNotExists
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) String() string {
	return tea.Prettify(s)
}

func (s AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) GoString() string {
	return s.String()
}

func (s *AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetConfigRuleId(v string) *AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.ConfigRuleId = &v
	return s
}

func (s *AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetErrorCode(v string) *AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.ErrorCode = &v
	return s
}

func (s *AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetSuccess(v bool) *AttachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.Success = &v
	return s
}

type AttachAggregateConfigRuleToCompliancePackResponse struct {
	Headers    map[string]*string                                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *AttachAggregateConfigRuleToCompliancePackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s AttachAggregateConfigRuleToCompliancePackResponse) String() string {
	return tea.Prettify(s)
}

func (s AttachAggregateConfigRuleToCompliancePackResponse) GoString() string {
	return s.String()
}

func (s *AttachAggregateConfigRuleToCompliancePackResponse) SetHeaders(v map[string]*string) *AttachAggregateConfigRuleToCompliancePackResponse {
	s.Headers = v
	return s
}

func (s *AttachAggregateConfigRuleToCompliancePackResponse) SetStatusCode(v int32) *AttachAggregateConfigRuleToCompliancePackResponse {
	s.StatusCode = &v
	return s
}

func (s *AttachAggregateConfigRuleToCompliancePackResponse) SetBody(v *AttachAggregateConfigRuleToCompliancePackResponseBody) *AttachAggregateConfigRuleToCompliancePackResponse {
	s.Body = v
	return s
}

type AttachConfigRuleToCompliancePackRequest struct {
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-5bb1626622af00bd****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The rule ID. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-6cc4626622af00e7****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s AttachConfigRuleToCompliancePackRequest) String() string {
	return tea.Prettify(s)
}

func (s AttachConfigRuleToCompliancePackRequest) GoString() string {
	return s.String()
}

func (s *AttachConfigRuleToCompliancePackRequest) SetCompliancePackId(v string) *AttachConfigRuleToCompliancePackRequest {
	s.CompliancePackId = &v
	return s
}

func (s *AttachConfigRuleToCompliancePackRequest) SetConfigRuleIds(v string) *AttachConfigRuleToCompliancePackRequest {
	s.ConfigRuleIds = &v
	return s
}

type AttachConfigRuleToCompliancePackResponseBody struct {
	// The results of the operations to add one or more rules.
	OperateRuleResult *AttachConfigRuleToCompliancePackResponseBodyOperateRuleResult `json:"OperateRuleResult,omitempty" xml:"OperateRuleResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB12A
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s AttachConfigRuleToCompliancePackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s AttachConfigRuleToCompliancePackResponseBody) GoString() string {
	return s.String()
}

func (s *AttachConfigRuleToCompliancePackResponseBody) SetOperateRuleResult(v *AttachConfigRuleToCompliancePackResponseBodyOperateRuleResult) *AttachConfigRuleToCompliancePackResponseBody {
	s.OperateRuleResult = v
	return s
}

func (s *AttachConfigRuleToCompliancePackResponseBody) SetRequestId(v string) *AttachConfigRuleToCompliancePackResponseBody {
	s.RequestId = &v
	return s
}

type AttachConfigRuleToCompliancePackResponseBodyOperateRuleResult struct {
	// The result of the operation to add the rule.
	OperateRuleItemList []*AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList `json:"OperateRuleItemList,omitempty" xml:"OperateRuleItemList,omitempty" type:"Repeated"`
}

func (s AttachConfigRuleToCompliancePackResponseBodyOperateRuleResult) String() string {
	return tea.Prettify(s)
}

func (s AttachConfigRuleToCompliancePackResponseBodyOperateRuleResult) GoString() string {
	return s.String()
}

func (s *AttachConfigRuleToCompliancePackResponseBodyOperateRuleResult) SetOperateRuleItemList(v []*AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) *AttachConfigRuleToCompliancePackResponseBodyOperateRuleResult {
	s.OperateRuleItemList = v
	return s
}

type AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList struct {
	// The rule ID.
	//
	// example:
	//
	// cr-6cc4626622af00e7****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The error code returned.
	//
	// 	- This parameter is empty if the rule is added to the compliance package.
	//
	// 	- An error code is returned if the rule fails to be added to the compliance package. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// ConfigRuleNotExists
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) String() string {
	return tea.Prettify(s)
}

func (s AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) GoString() string {
	return s.String()
}

func (s *AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetConfigRuleId(v string) *AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.ConfigRuleId = &v
	return s
}

func (s *AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetErrorCode(v string) *AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.ErrorCode = &v
	return s
}

func (s *AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetSuccess(v bool) *AttachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.Success = &v
	return s
}

type AttachConfigRuleToCompliancePackResponse struct {
	Headers    map[string]*string                            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *AttachConfigRuleToCompliancePackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s AttachConfigRuleToCompliancePackResponse) String() string {
	return tea.Prettify(s)
}

func (s AttachConfigRuleToCompliancePackResponse) GoString() string {
	return s.String()
}

func (s *AttachConfigRuleToCompliancePackResponse) SetHeaders(v map[string]*string) *AttachConfigRuleToCompliancePackResponse {
	s.Headers = v
	return s
}

func (s *AttachConfigRuleToCompliancePackResponse) SetStatusCode(v int32) *AttachConfigRuleToCompliancePackResponse {
	s.StatusCode = &v
	return s
}

func (s *AttachConfigRuleToCompliancePackResponse) SetBody(v *AttachConfigRuleToCompliancePackResponseBody) *AttachConfigRuleToCompliancePackResponse {
	s.Body = v
	return s
}

type CopyCompliancePacksRequest struct {
	// The IDs of the destination account groups into which the compliance packages are replicated. Separate multiple account group IDs with commas (,).
	//
	// > If this parameter is left empty, the compliance packages are replicated to the current account group.
	//
	// example:
	//
	// ca-c73c626622af00f8****
	DesAggregatorIds *string `json:"DesAggregatorIds,omitempty" xml:"DesAggregatorIds,omitempty"`
	// The ID of the account group to which the compliance packages belong.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// example:
	//
	// ca-05e6626622af0050****
	SrcAggregatorId *string `json:"SrcAggregatorId,omitempty" xml:"SrcAggregatorId,omitempty"`
	// The IDs of the compliance packages. Separate multiple compliance package IDs with commas (,).
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-4c02626622af0050****,cp-47c1626622af0050****
	SrcCompliancePackIds *string `json:"SrcCompliancePackIds,omitempty" xml:"SrcCompliancePackIds,omitempty"`
}

func (s CopyCompliancePacksRequest) String() string {
	return tea.Prettify(s)
}

func (s CopyCompliancePacksRequest) GoString() string {
	return s.String()
}

func (s *CopyCompliancePacksRequest) SetDesAggregatorIds(v string) *CopyCompliancePacksRequest {
	s.DesAggregatorIds = &v
	return s
}

func (s *CopyCompliancePacksRequest) SetSrcAggregatorId(v string) *CopyCompliancePacksRequest {
	s.SrcAggregatorId = &v
	return s
}

func (s *CopyCompliancePacksRequest) SetSrcCompliancePackIds(v string) *CopyCompliancePacksRequest {
	s.SrcCompliancePackIds = &v
	return s
}

type CopyCompliancePacksResponseBody struct {
	// Indicates whether the compliance packages are replicated. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	CopyRulesResult *bool `json:"CopyRulesResult,omitempty" xml:"CopyRulesResult,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 9E1E69DE-BDED-581E-B559-0C15690901D0
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CopyCompliancePacksResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CopyCompliancePacksResponseBody) GoString() string {
	return s.String()
}

func (s *CopyCompliancePacksResponseBody) SetCopyRulesResult(v bool) *CopyCompliancePacksResponseBody {
	s.CopyRulesResult = &v
	return s
}

func (s *CopyCompliancePacksResponseBody) SetRequestId(v string) *CopyCompliancePacksResponseBody {
	s.RequestId = &v
	return s
}

type CopyCompliancePacksResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CopyCompliancePacksResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CopyCompliancePacksResponse) String() string {
	return tea.Prettify(s)
}

func (s CopyCompliancePacksResponse) GoString() string {
	return s.String()
}

func (s *CopyCompliancePacksResponse) SetHeaders(v map[string]*string) *CopyCompliancePacksResponse {
	s.Headers = v
	return s
}

func (s *CopyCompliancePacksResponse) SetStatusCode(v int32) *CopyCompliancePacksResponse {
	s.StatusCode = &v
	return s
}

func (s *CopyCompliancePacksResponse) SetBody(v *CopyCompliancePacksResponseBody) *CopyCompliancePacksResponse {
	s.Body = v
	return s
}

type CopyConfigRulesRequest struct {
	// The IDs of the destination account groups into which the rules are replicated. Separate multiple account group IDs with commas (,).
	//
	// > If you leave this parameter empty, the compliance packages are replicated into the same account group.
	//
	// example:
	//
	// ca-4b4e626622af005d****
	DesAggregatorIds *string `json:"DesAggregatorIds,omitempty" xml:"DesAggregatorIds,omitempty"`
	// The ID of the account group to which the rules belong.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// example:
	//
	// ca-24db626622af0060****
	SrcAggregatorId *string `json:"SrcAggregatorId,omitempty" xml:"SrcAggregatorId,omitempty"`
	// The rule IDs. Separate multiple rule IDs with commas (,).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-4b57626622af0065****,cr-47c1626622af0050****
	SrcConfigRuleIds *string `json:"SrcConfigRuleIds,omitempty" xml:"SrcConfigRuleIds,omitempty"`
}

func (s CopyConfigRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s CopyConfigRulesRequest) GoString() string {
	return s.String()
}

func (s *CopyConfigRulesRequest) SetDesAggregatorIds(v string) *CopyConfigRulesRequest {
	s.DesAggregatorIds = &v
	return s
}

func (s *CopyConfigRulesRequest) SetSrcAggregatorId(v string) *CopyConfigRulesRequest {
	s.SrcAggregatorId = &v
	return s
}

func (s *CopyConfigRulesRequest) SetSrcConfigRuleIds(v string) *CopyConfigRulesRequest {
	s.SrcConfigRuleIds = &v
	return s
}

type CopyConfigRulesResponseBody struct {
	// Indicates whether the rules are replicated. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	CopyRulesResult *bool `json:"CopyRulesResult,omitempty" xml:"CopyRulesResult,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 7BD81ECF-3194-5A6B-8719-9FC283167AD4
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CopyConfigRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CopyConfigRulesResponseBody) GoString() string {
	return s.String()
}

func (s *CopyConfigRulesResponseBody) SetCopyRulesResult(v bool) *CopyConfigRulesResponseBody {
	s.CopyRulesResult = &v
	return s
}

func (s *CopyConfigRulesResponseBody) SetRequestId(v string) *CopyConfigRulesResponseBody {
	s.RequestId = &v
	return s
}

type CopyConfigRulesResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CopyConfigRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CopyConfigRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s CopyConfigRulesResponse) GoString() string {
	return s.String()
}

func (s *CopyConfigRulesResponse) SetHeaders(v map[string]*string) *CopyConfigRulesResponse {
	s.Headers = v
	return s
}

func (s *CopyConfigRulesResponse) SetStatusCode(v int32) *CopyConfigRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *CopyConfigRulesResponse) SetBody(v *CopyConfigRulesResponseBody) *CopyConfigRulesResponse {
	s.Body = v
	return s
}

type CreateAdvancedSearchFileRequest struct {
	// The SQL statement used to query resources.
	//
	// This parameter is required.
	//
	// example:
	//
	// SELECT 	- WHERE ResourceType = \\"ACS::ECS::Instance\\"
	Sql *string `json:"Sql,omitempty" xml:"Sql,omitempty"`
}

func (s CreateAdvancedSearchFileRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateAdvancedSearchFileRequest) GoString() string {
	return s.String()
}

func (s *CreateAdvancedSearchFileRequest) SetSql(v string) *CreateAdvancedSearchFileRequest {
	s.Sql = &v
	return s
}

type CreateAdvancedSearchFileResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// D231366D-E2AD-559E-9C29-58FF7F4B1F5D
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateAdvancedSearchFileResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateAdvancedSearchFileResponseBody) GoString() string {
	return s.String()
}

func (s *CreateAdvancedSearchFileResponseBody) SetRequestId(v string) *CreateAdvancedSearchFileResponseBody {
	s.RequestId = &v
	return s
}

type CreateAdvancedSearchFileResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateAdvancedSearchFileResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateAdvancedSearchFileResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateAdvancedSearchFileResponse) GoString() string {
	return s.String()
}

func (s *CreateAdvancedSearchFileResponse) SetHeaders(v map[string]*string) *CreateAdvancedSearchFileResponse {
	s.Headers = v
	return s
}

func (s *CreateAdvancedSearchFileResponse) SetStatusCode(v int32) *CreateAdvancedSearchFileResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateAdvancedSearchFileResponse) SetBody(v *CreateAdvancedSearchFileResponseBody) *CreateAdvancedSearchFileResponse {
	s.Body = v
	return s
}

type CreateAggregateAdvancedSearchFileRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-edd3626622af00b3****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The SQL statement used to query resources.
	//
	// This parameter is required.
	//
	// example:
	//
	// SELECT 	- WHERE ResourceType = \\"ACS::ECS::Instance\\"
	Sql *string `json:"Sql,omitempty" xml:"Sql,omitempty"`
}

func (s CreateAggregateAdvancedSearchFileRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateAdvancedSearchFileRequest) GoString() string {
	return s.String()
}

func (s *CreateAggregateAdvancedSearchFileRequest) SetAggregatorId(v string) *CreateAggregateAdvancedSearchFileRequest {
	s.AggregatorId = &v
	return s
}

func (s *CreateAggregateAdvancedSearchFileRequest) SetSql(v string) *CreateAggregateAdvancedSearchFileRequest {
	s.Sql = &v
	return s
}

type CreateAggregateAdvancedSearchFileResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 5F290373-2BE6-534B-8724-A33F1116958B
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateAggregateAdvancedSearchFileResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateAdvancedSearchFileResponseBody) GoString() string {
	return s.String()
}

func (s *CreateAggregateAdvancedSearchFileResponseBody) SetRequestId(v string) *CreateAggregateAdvancedSearchFileResponseBody {
	s.RequestId = &v
	return s
}

type CreateAggregateAdvancedSearchFileResponse struct {
	Headers    map[string]*string                             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateAggregateAdvancedSearchFileResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateAggregateAdvancedSearchFileResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateAdvancedSearchFileResponse) GoString() string {
	return s.String()
}

func (s *CreateAggregateAdvancedSearchFileResponse) SetHeaders(v map[string]*string) *CreateAggregateAdvancedSearchFileResponse {
	s.Headers = v
	return s
}

func (s *CreateAggregateAdvancedSearchFileResponse) SetStatusCode(v int32) *CreateAggregateAdvancedSearchFileResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateAggregateAdvancedSearchFileResponse) SetBody(v *CreateAggregateAdvancedSearchFileResponseBody) *CreateAggregateAdvancedSearchFileResponse {
	s.Body = v
	return s
}

type CreateAggregateCompliancePackRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The name of the compliance package.
	//
	// This parameter is required.
	//
	// example:
	//
	// test-compliance-pack-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the compliance package template from which you want to create a compliance package.
	//
	// For more information about how to obtain the ID of a compliance package template, see [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html).
	//
	// example:
	//
	// ct-5f26ff4e06a300c4****
	CompliancePackTemplateId *string `json:"CompliancePackTemplateId,omitempty" xml:"CompliancePackTemplateId,omitempty"`
	// The rules in the compliance package.
	//
	// >  You must configure this parameter or the `TemplateContent` parameter.
	ConfigRules []*CreateAggregateCompliancePackRequestConfigRules `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty" type:"Repeated"`
	// Specifies whether to enable the rule together with the compliance package. Valid values:
	//
	// 	- true: The system enables the rule together with the compliance package.
	//
	// 	- false: The system does not enable the rule together with the compliance package.
	//
	// example:
	//
	// false
	DefaultEnable *bool `json:"DefaultEnable,omitempty" xml:"DefaultEnable,omitempty"`
	// The description of the compliance package.
	//
	// example:
	//
	// Test compliance pack descripaiton.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The IDs of the regions excluded from the compliance evaluations performed by the compliance package. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// The IDs of the resource groups excluded from the compliance evaluations performed by the rule. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource that you do not want to evaluate by using the compliance package. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// The tags that are excluded.
	ExcludeTagsScope []*CreateAggregateCompliancePackRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The ID of the region whose resources you want to evaluate by using the compliance package. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group whose resources you want to evaluate by using the compliance package. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources to which the rule applies. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2 (default): medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*CreateAggregateCompliancePackRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
	// The tag key of the resource that you want to evaluate by using the compliance package.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// The tag value of the resource that you want to evaluate by using the compliance package.
	//
	// >  You must configure the TagValueScope parameter together with the TagKeyScope parameter.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The tag scope.
	TagsScope []*CreateAggregateCompliancePackRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
	// The information about the template that is used to create the compliance package. You can call the GetAggregateCompliancePack operation to view the details of an existing compliance package. You can also write a compliance package template. For more information, see [Write a compliance package template in a configuration file](https://help.aliyun.com/document_detail/2659733.html).
	//
	// >  You must configure this parameter or the `TemplateContent` parameter.
	//
	// example:
	//
	// { "configRuleTemplates": [ { "configRuleName": "condition-rule-example", "scope": { "complianceResourceTypes": [ "ACS::ECS::Instance" ] }, "description": "", "source": { "owner": "CUSTOM_CONFIGURATION", "identifier": "acs-config-configuration", "sourceDetails": [ { "messageType": "ScheduledNotification", "maximumExecutionFrequency": "Twelve_Hours" }, { "messageType": "ConfigurationItemChangeNotification" } ], "conditions": "{\\\\"ComplianceConditions\\\\":\\\\"{\\\\\\\\\\"operator\\\\\\\\\\":\\\\\\\\\\"and\\\\\\\\\\",\\\\\\\\\\"children\\\\\\\\\\":[{\\\\\\\\\\"operator\\\\\\\\\\":\\\\\\\\\\"GreaterOrEquals\\\\\\\\\\",\\\\\\\\\\"featurePath\\\\\\\\\\":\\\\\\\\\\"$.Cpu\\\\\\\\\\",\\\\\\\\\\"featureSource\\\\\\\\\\":\\\\\\\\\\"CONFIGURATION\\\\\\\\\\",\\\\\\\\\\"desired\\\\\\\\\\":\\\\\\\\\\"2\\\\\\\\\\"}]}\\\\"}" }, "inputParameters": {} }, { "configRuleName": "oss-bucket-referer-limit", "scope": { "complianceResourceTypes": [ "ACS::OSS::Bucket" ] }, "description": "If the hotlink protection feature is enabled for the Object Storage Service (OSS) bucket and the Referer is added to a specific whitelist, the evaluation result is compliant.", "source": { "owner": "ALIYUN", "identifier": "oss-bucket-referer-limit", "sourceDetails": [ { "messageType": "ConfigurationItemChangeNotification" } ] }, "inputParameters": { "allowEmptyReferer": "true", "allowReferers": "http://www.aliyun.com" } } ] }
	TemplateContent *string `json:"TemplateContent,omitempty" xml:"TemplateContent,omitempty"`
}

func (s CreateAggregateCompliancePackRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackRequest) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackRequest) SetAggregatorId(v string) *CreateAggregateCompliancePackRequest {
	s.AggregatorId = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetClientToken(v string) *CreateAggregateCompliancePackRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetCompliancePackName(v string) *CreateAggregateCompliancePackRequest {
	s.CompliancePackName = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetCompliancePackTemplateId(v string) *CreateAggregateCompliancePackRequest {
	s.CompliancePackTemplateId = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetConfigRules(v []*CreateAggregateCompliancePackRequestConfigRules) *CreateAggregateCompliancePackRequest {
	s.ConfigRules = v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetDefaultEnable(v bool) *CreateAggregateCompliancePackRequest {
	s.DefaultEnable = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetDescription(v string) *CreateAggregateCompliancePackRequest {
	s.Description = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetExcludeRegionIdsScope(v string) *CreateAggregateCompliancePackRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetExcludeResourceGroupIdsScope(v string) *CreateAggregateCompliancePackRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetExcludeResourceIdsScope(v string) *CreateAggregateCompliancePackRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetExcludeTagsScope(v []*CreateAggregateCompliancePackRequestExcludeTagsScope) *CreateAggregateCompliancePackRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetRegionIdsScope(v string) *CreateAggregateCompliancePackRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetResourceGroupIdsScope(v string) *CreateAggregateCompliancePackRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetResourceIdsScope(v string) *CreateAggregateCompliancePackRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetRiskLevel(v int32) *CreateAggregateCompliancePackRequest {
	s.RiskLevel = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetTag(v []*CreateAggregateCompliancePackRequestTag) *CreateAggregateCompliancePackRequest {
	s.Tag = v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetTagKeyScope(v string) *CreateAggregateCompliancePackRequest {
	s.TagKeyScope = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetTagValueScope(v string) *CreateAggregateCompliancePackRequest {
	s.TagValueScope = &v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetTagsScope(v []*CreateAggregateCompliancePackRequestTagsScope) *CreateAggregateCompliancePackRequest {
	s.TagsScope = v
	return s
}

func (s *CreateAggregateCompliancePackRequest) SetTemplateContent(v string) *CreateAggregateCompliancePackRequest {
	s.TemplateContent = &v
	return s
}

type CreateAggregateCompliancePackRequestConfigRules struct {
	// The rule ID. If you configure this parameter, Cloud Config adds the rule that has the specified ID to the compliance package.
	//
	// You need to only configure the `ManagedRuleIdentifier` or `ConfigRuleId` parameter. If you configure both parameters, the value of the `ConfigRuleId` parameter takes precedence. For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// example:
	//
	// cr-e918626622af000f****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The rule name.
	//
	// example:
	//
	// eip-bandwidth-limit
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The input parameters of the rule.
	ConfigRuleParameters []*CreateAggregateCompliancePackRequestConfigRulesConfigRuleParameters `json:"ConfigRuleParameters,omitempty" xml:"ConfigRuleParameters,omitempty" type:"Repeated"`
	// The rule description.
	//
	// example:
	//
	// Test rule description.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The identifier of the managed rule. Cloud Config automatically creates a rule based on the identifier of the managed rule and adds the rule to the current compliance package.
	//
	// You need to only configure the `ManagedRuleIdentifier` or `ConfigRuleId` parameter. If you configure both parameters, the value of the `ConfigRuleId` parameter takes precedence. For more information about how to obtain the identifier of a managed rule, see [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html).
	//
	// example:
	//
	// eip-bandwidth-limit
	ManagedRuleIdentifier *string `json:"ManagedRuleIdentifier,omitempty" xml:"ManagedRuleIdentifier,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s CreateAggregateCompliancePackRequestConfigRules) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackRequestConfigRules) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackRequestConfigRules) SetConfigRuleId(v string) *CreateAggregateCompliancePackRequestConfigRules {
	s.ConfigRuleId = &v
	return s
}

func (s *CreateAggregateCompliancePackRequestConfigRules) SetConfigRuleName(v string) *CreateAggregateCompliancePackRequestConfigRules {
	s.ConfigRuleName = &v
	return s
}

func (s *CreateAggregateCompliancePackRequestConfigRules) SetConfigRuleParameters(v []*CreateAggregateCompliancePackRequestConfigRulesConfigRuleParameters) *CreateAggregateCompliancePackRequestConfigRules {
	s.ConfigRuleParameters = v
	return s
}

func (s *CreateAggregateCompliancePackRequestConfigRules) SetDescription(v string) *CreateAggregateCompliancePackRequestConfigRules {
	s.Description = &v
	return s
}

func (s *CreateAggregateCompliancePackRequestConfigRules) SetManagedRuleIdentifier(v string) *CreateAggregateCompliancePackRequestConfigRules {
	s.ManagedRuleIdentifier = &v
	return s
}

func (s *CreateAggregateCompliancePackRequestConfigRules) SetRiskLevel(v int32) *CreateAggregateCompliancePackRequestConfigRules {
	s.RiskLevel = &v
	return s
}

type CreateAggregateCompliancePackRequestConfigRulesConfigRuleParameters struct {
	// The name of the input parameter.
	//
	// You must configure the `ParameterName` and `ParameterValue` parameters or neither of them. If the managed rule has an input parameter but no default value exists, you must configure this parameter. For more information about how to obtain the name of an input parameter for a managed rule, see [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html).
	//
	// example:
	//
	// bandwidth
	ParameterName *string `json:"ParameterName,omitempty" xml:"ParameterName,omitempty"`
	// The value of the input parameter.
	//
	// You must configure the `ParameterName` and `ParameterValue` parameters or neither of them. If the managed rule has an input parameter but no default value exists, you must configure this parameter. For more information about how to obtain the value of an input parameter for a managed rule, see [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html).
	//
	// example:
	//
	// 10
	ParameterValue *string `json:"ParameterValue,omitempty" xml:"ParameterValue,omitempty"`
}

func (s CreateAggregateCompliancePackRequestConfigRulesConfigRuleParameters) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackRequestConfigRulesConfigRuleParameters) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackRequestConfigRulesConfigRuleParameters) SetParameterName(v string) *CreateAggregateCompliancePackRequestConfigRulesConfigRuleParameters {
	s.ParameterName = &v
	return s
}

func (s *CreateAggregateCompliancePackRequestConfigRulesConfigRuleParameters) SetParameterValue(v string) *CreateAggregateCompliancePackRequestConfigRulesConfigRuleParameters {
	s.ParameterValue = &v
	return s
}

type CreateAggregateCompliancePackRequestExcludeTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// 4
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// user
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateAggregateCompliancePackRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackRequestExcludeTagsScope) SetTagKey(v string) *CreateAggregateCompliancePackRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateAggregateCompliancePackRequestExcludeTagsScope) SetTagValue(v string) *CreateAggregateCompliancePackRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type CreateAggregateCompliancePackRequestTag struct {
	// The key of the tag that is added to the resource.
	//
	// You can add up to 20 tag keys to a resource.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The value of the tag that is added to the resource.
	//
	// You can add up to 20 tag values to a resource.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s CreateAggregateCompliancePackRequestTag) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackRequestTag) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackRequestTag) SetKey(v string) *CreateAggregateCompliancePackRequestTag {
	s.Key = &v
	return s
}

func (s *CreateAggregateCompliancePackRequestTag) SetValue(v string) *CreateAggregateCompliancePackRequestTag {
	s.Value = &v
	return s
}

type CreateAggregateCompliancePackRequestTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// tagKey1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// tagValue1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateAggregateCompliancePackRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackRequestTagsScope) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackRequestTagsScope) SetTagKey(v string) *CreateAggregateCompliancePackRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateAggregateCompliancePackRequestTagsScope) SetTagValue(v string) *CreateAggregateCompliancePackRequestTagsScope {
	s.TagValue = &v
	return s
}

type CreateAggregateCompliancePackShrinkRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The name of the compliance package.
	//
	// This parameter is required.
	//
	// example:
	//
	// test-compliance-pack-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the compliance package template from which you want to create a compliance package.
	//
	// For more information about how to obtain the ID of a compliance package template, see [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html).
	//
	// example:
	//
	// ct-5f26ff4e06a300c4****
	CompliancePackTemplateId *string `json:"CompliancePackTemplateId,omitempty" xml:"CompliancePackTemplateId,omitempty"`
	// The rules in the compliance package.
	//
	// >  You must configure this parameter or the `TemplateContent` parameter.
	ConfigRulesShrink *string `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty"`
	// Specifies whether to enable the rule together with the compliance package. Valid values:
	//
	// 	- true: The system enables the rule together with the compliance package.
	//
	// 	- false: The system does not enable the rule together with the compliance package.
	//
	// example:
	//
	// false
	DefaultEnable *bool `json:"DefaultEnable,omitempty" xml:"DefaultEnable,omitempty"`
	// The description of the compliance package.
	//
	// example:
	//
	// Test compliance pack descripaiton.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The IDs of the regions excluded from the compliance evaluations performed by the compliance package. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// The IDs of the resource groups excluded from the compliance evaluations performed by the rule. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource that you do not want to evaluate by using the compliance package. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// The tags that are excluded.
	ExcludeTagsScope []*CreateAggregateCompliancePackShrinkRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The ID of the region whose resources you want to evaluate by using the compliance package. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group whose resources you want to evaluate by using the compliance package. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources to which the rule applies. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2 (default): medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
	// The tag key of the resource that you want to evaluate by using the compliance package.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// The tag value of the resource that you want to evaluate by using the compliance package.
	//
	// >  You must configure the TagValueScope parameter together with the TagKeyScope parameter.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The tag scope.
	TagsScope []*CreateAggregateCompliancePackShrinkRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
	// The information about the template that is used to create the compliance package. You can call the GetAggregateCompliancePack operation to view the details of an existing compliance package. You can also write a compliance package template. For more information, see [Write a compliance package template in a configuration file](https://help.aliyun.com/document_detail/2659733.html).
	//
	// >  You must configure this parameter or the `TemplateContent` parameter.
	//
	// example:
	//
	// { "configRuleTemplates": [ { "configRuleName": "condition-rule-example", "scope": { "complianceResourceTypes": [ "ACS::ECS::Instance" ] }, "description": "", "source": { "owner": "CUSTOM_CONFIGURATION", "identifier": "acs-config-configuration", "sourceDetails": [ { "messageType": "ScheduledNotification", "maximumExecutionFrequency": "Twelve_Hours" }, { "messageType": "ConfigurationItemChangeNotification" } ], "conditions": "{\\\\"ComplianceConditions\\\\":\\\\"{\\\\\\\\\\"operator\\\\\\\\\\":\\\\\\\\\\"and\\\\\\\\\\",\\\\\\\\\\"children\\\\\\\\\\":[{\\\\\\\\\\"operator\\\\\\\\\\":\\\\\\\\\\"GreaterOrEquals\\\\\\\\\\",\\\\\\\\\\"featurePath\\\\\\\\\\":\\\\\\\\\\"$.Cpu\\\\\\\\\\",\\\\\\\\\\"featureSource\\\\\\\\\\":\\\\\\\\\\"CONFIGURATION\\\\\\\\\\",\\\\\\\\\\"desired\\\\\\\\\\":\\\\\\\\\\"2\\\\\\\\\\"}]}\\\\"}" }, "inputParameters": {} }, { "configRuleName": "oss-bucket-referer-limit", "scope": { "complianceResourceTypes": [ "ACS::OSS::Bucket" ] }, "description": "If the hotlink protection feature is enabled for the Object Storage Service (OSS) bucket and the Referer is added to a specific whitelist, the evaluation result is compliant.", "source": { "owner": "ALIYUN", "identifier": "oss-bucket-referer-limit", "sourceDetails": [ { "messageType": "ConfigurationItemChangeNotification" } ] }, "inputParameters": { "allowEmptyReferer": "true", "allowReferers": "http://www.aliyun.com" } } ] }
	TemplateContent *string `json:"TemplateContent,omitempty" xml:"TemplateContent,omitempty"`
}

func (s CreateAggregateCompliancePackShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackShrinkRequest) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetAggregatorId(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetClientToken(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetCompliancePackName(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.CompliancePackName = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetCompliancePackTemplateId(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.CompliancePackTemplateId = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetConfigRulesShrink(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.ConfigRulesShrink = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetDefaultEnable(v bool) *CreateAggregateCompliancePackShrinkRequest {
	s.DefaultEnable = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetDescription(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.Description = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetExcludeRegionIdsScope(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetExcludeResourceGroupIdsScope(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetExcludeResourceIdsScope(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetExcludeTagsScope(v []*CreateAggregateCompliancePackShrinkRequestExcludeTagsScope) *CreateAggregateCompliancePackShrinkRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetRegionIdsScope(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetResourceGroupIdsScope(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetResourceIdsScope(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetRiskLevel(v int32) *CreateAggregateCompliancePackShrinkRequest {
	s.RiskLevel = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetTagShrink(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.TagShrink = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetTagKeyScope(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.TagKeyScope = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetTagValueScope(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.TagValueScope = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetTagsScope(v []*CreateAggregateCompliancePackShrinkRequestTagsScope) *CreateAggregateCompliancePackShrinkRequest {
	s.TagsScope = v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequest) SetTemplateContent(v string) *CreateAggregateCompliancePackShrinkRequest {
	s.TemplateContent = &v
	return s
}

type CreateAggregateCompliancePackShrinkRequestExcludeTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// 4
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// user
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateAggregateCompliancePackShrinkRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackShrinkRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackShrinkRequestExcludeTagsScope) SetTagKey(v string) *CreateAggregateCompliancePackShrinkRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequestExcludeTagsScope) SetTagValue(v string) *CreateAggregateCompliancePackShrinkRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type CreateAggregateCompliancePackShrinkRequestTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// tagKey1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// tagValue1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateAggregateCompliancePackShrinkRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackShrinkRequestTagsScope) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackShrinkRequestTagsScope) SetTagKey(v string) *CreateAggregateCompliancePackShrinkRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateAggregateCompliancePackShrinkRequestTagsScope) SetTagValue(v string) *CreateAggregateCompliancePackShrinkRequestTagsScope {
	s.TagValue = &v
	return s
}

type CreateAggregateCompliancePackResponseBody struct {
	// The compliance package ID.
	//
	// example:
	//
	// cp-fc56626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// CC0CE5EB-E51E-48EB-B4AB-9A9E131ECC0F
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateAggregateCompliancePackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackResponseBody) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackResponseBody) SetCompliancePackId(v string) *CreateAggregateCompliancePackResponseBody {
	s.CompliancePackId = &v
	return s
}

func (s *CreateAggregateCompliancePackResponseBody) SetRequestId(v string) *CreateAggregateCompliancePackResponseBody {
	s.RequestId = &v
	return s
}

type CreateAggregateCompliancePackResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateAggregateCompliancePackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateAggregateCompliancePackResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateCompliancePackResponse) GoString() string {
	return s.String()
}

func (s *CreateAggregateCompliancePackResponse) SetHeaders(v map[string]*string) *CreateAggregateCompliancePackResponse {
	s.Headers = v
	return s
}

func (s *CreateAggregateCompliancePackResponse) SetStatusCode(v int32) *CreateAggregateCompliancePackResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateAggregateCompliancePackResponse) SetBody(v *CreateAggregateCompliancePackResponseBody) *CreateAggregateCompliancePackResponse {
	s.Body = v
	return s
}

type CreateAggregateConfigDeliveryChannelRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests.
	//
	// The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [Ensure idempotence](https://help.aliyun.com/document_detail/25693.html)
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// Specifies whether to deliver scheduled compliant snapshots. Cloud Config delivers scheduled compliant snapshots to Log Service at `04:00Z` and `16:00Z` every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: Cloud Config delivers scheduled compliant snapshots.
	//
	// 	- false: Cloud Config does not deliver scheduled compliant snapshots. This is the default value.
	//
	// example:
	//
	// false
	CompliantSnapshot *bool `json:"CompliantSnapshot,omitempty" xml:"CompliantSnapshot,omitempty"`
	// Specifies whether to deliver resource change logs. If you set this parameter to true, Cloud Config delivers resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	//
	// 	- true: Cloud Config delivers resource change logs.
	//
	// 	- false: Cloud Config does not deliver resource change logs. This is the default value.
	//
	// > This parameter is available for delivery channels of the OSS, SLS, and MNS types.
	//
	// example:
	//
	// false
	ConfigurationItemChangeNotification *bool `json:"ConfigurationItemChangeNotification,omitempty" xml:"ConfigurationItemChangeNotification,omitempty"`
	// Specifies whether to deliver scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots to OSS, MNS, or Log Service at `04:00Z` and `16:00Z` every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: Cloud Config delivers scheduled resource snapshots.
	//
	// 	- false: Cloud Config does not deliver scheduled resource snapshots. This is the default value.
	//
	// example:
	//
	// false
	ConfigurationSnapshot *bool `json:"ConfigurationSnapshot,omitempty" xml:"ConfigurationSnapshot,omitempty"`
	// The rule that you want to attach to the delivery channel. This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// 	- If you set the DeliveryChannelType parameter to MNS, take note of the following settings of the lowest risk level and the resource types of the events to which you want to subscribe:
	//
	//     	- The lowest risk level of the events to which you want to subscribe is in the following format: `{"filterType":"RuleRiskLevel","value":"1","multiple":false}`.
	//
	//         The `value` field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	//     	- The setting of the resource types of the events to which you want to subscribe is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//         The `values` field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array. Example:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// 	- If you set the DeliveryChannelType parameter to SLS, the setting of the resource types of the snapshots to which you want to deliver is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//     The `values` field specifies the resource types of the snapshots to which you want to deliver. The value of the field is a JSON array. Example:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// example:
	//
	// [{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]
	DeliveryChannelCondition *string `json:"DeliveryChannelCondition,omitempty" xml:"DeliveryChannelCondition,omitempty"`
	// The name of the delivery channel.
	//
	// > If you do not configure this parameter, this parameter is left empty.
	//
	// example:
	//
	// testoss
	DeliveryChannelName *string `json:"DeliveryChannelName,omitempty" xml:"DeliveryChannelName,omitempty"`
	// The ARN of the delivery destination. Valid values:
	//
	// 	- `acs:oss:{RegionId}:{accountId}:{bucketName}` if your delivery destination is an OSS bucket. Example: `acs:oss:cn-shanghai:100931896542****:new-bucket`.
	//
	// 	- `acs:mns:{RegionId}:{accountId}:/topics/{topicName}` if your delivery destination is an MNS topic. Example: `acs:mns:cn-shanghai:100931896542****:/topics/topic1`.
	//
	// 	- `acs:log:{RegionId}:{accountId}:project/{projectName}/logstore/{logstoreName}` if your delivery destination is a Log Service Logstore. Example: `acs:log:cn-shanghai:100931896542****:project/project1/logstore/logstore1`.
	//
	// This parameter is required.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	DeliveryChannelTargetArn *string `json:"DeliveryChannelTargetArn,omitempty" xml:"DeliveryChannelTargetArn,omitempty"`
	// The type of the delivery channel. Valid values:
	//
	// 	- OSS: Object Storage Service (OSS)
	//
	// 	- MNS: Message Service (MNS)
	//
	// 	- SLS: Log Service
	//
	// This parameter is required.
	//
	// example:
	//
	// OSS
	DeliveryChannelType *string `json:"DeliveryChannelType,omitempty" xml:"DeliveryChannelType,omitempty"`
	// The time when you want Cloud Config to deliver scheduled resource snapshots every day.
	//
	// Format: `HH:mmZ`. This time is displayed in UTC.
	//
	// > When you enable the scheduled resource delivery feature, you can configure this parameter to specify a custom delivery time. If you do not configure this parameter, Cloud Config automatically delivers scheduled resource snapshots at `04:00Z` and `16:00Z` every day.
	//
	// example:
	//
	// 09:10Z
	DeliverySnapshotTime *string `json:"DeliverySnapshotTime,omitempty" xml:"DeliverySnapshotTime,omitempty"`
	// The description of the delivery channel.
	//
	// example:
	//
	// My OSS delivery.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Specifies whether to deliver resource non-compliance events. If you set this parameter to true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are considered non-compliant. Valid values:
	//
	// 	- true: Cloud Config delivers resource non-compliance events.
	//
	// 	- false: Cloud Config does not deliver resource non-compliance events. This is the default value.
	//
	// > This parameter is available only for delivery channels of the SLS or MNS type.
	//
	// example:
	//
	// false
	NonCompliantNotification *bool `json:"NonCompliantNotification,omitempty" xml:"NonCompliantNotification,omitempty"`
	// The ARN of the OSS bucket to which you want to transfer the delivery data when the size of the data exceeds the specified upper limit of the delivery channel. Format: `acs:oss:{RegionId}:{accountId}:{bucketName}`.
	//
	// If you do not configure this parameter, Cloud Config delivers only summary data.
	//
	// > This parameter is available only for delivery channels of the SLS or MNS type. The upper limit on the storage size of delivery channels of the SLS type is 1 MB, and the maximum storage size of delivery channels of the MNS type is 64 KB.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	OversizedDataOSSTargetArn *string `json:"OversizedDataOSSTargetArn,omitempty" xml:"OversizedDataOSSTargetArn,omitempty"`
}

func (s CreateAggregateConfigDeliveryChannelRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigDeliveryChannelRequest) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetAggregatorId(v string) *CreateAggregateConfigDeliveryChannelRequest {
	s.AggregatorId = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetClientToken(v string) *CreateAggregateConfigDeliveryChannelRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetCompliantSnapshot(v bool) *CreateAggregateConfigDeliveryChannelRequest {
	s.CompliantSnapshot = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetConfigurationItemChangeNotification(v bool) *CreateAggregateConfigDeliveryChannelRequest {
	s.ConfigurationItemChangeNotification = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetConfigurationSnapshot(v bool) *CreateAggregateConfigDeliveryChannelRequest {
	s.ConfigurationSnapshot = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetDeliveryChannelCondition(v string) *CreateAggregateConfigDeliveryChannelRequest {
	s.DeliveryChannelCondition = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetDeliveryChannelName(v string) *CreateAggregateConfigDeliveryChannelRequest {
	s.DeliveryChannelName = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetDeliveryChannelTargetArn(v string) *CreateAggregateConfigDeliveryChannelRequest {
	s.DeliveryChannelTargetArn = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetDeliveryChannelType(v string) *CreateAggregateConfigDeliveryChannelRequest {
	s.DeliveryChannelType = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetDeliverySnapshotTime(v string) *CreateAggregateConfigDeliveryChannelRequest {
	s.DeliverySnapshotTime = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetDescription(v string) *CreateAggregateConfigDeliveryChannelRequest {
	s.Description = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetNonCompliantNotification(v bool) *CreateAggregateConfigDeliveryChannelRequest {
	s.NonCompliantNotification = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelRequest) SetOversizedDataOSSTargetArn(v string) *CreateAggregateConfigDeliveryChannelRequest {
	s.OversizedDataOSSTargetArn = &v
	return s
}

type CreateAggregateConfigDeliveryChannelResponseBody struct {
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-8e45ff4e06a3a8****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// A7A0FFF8-0B44-40C6-8BBF-3A185EFDERTHG
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateAggregateConfigDeliveryChannelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigDeliveryChannelResponseBody) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigDeliveryChannelResponseBody) SetDeliveryChannelId(v string) *CreateAggregateConfigDeliveryChannelResponseBody {
	s.DeliveryChannelId = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelResponseBody) SetRequestId(v string) *CreateAggregateConfigDeliveryChannelResponseBody {
	s.RequestId = &v
	return s
}

type CreateAggregateConfigDeliveryChannelResponse struct {
	Headers    map[string]*string                                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateAggregateConfigDeliveryChannelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateAggregateConfigDeliveryChannelResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigDeliveryChannelResponse) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigDeliveryChannelResponse) SetHeaders(v map[string]*string) *CreateAggregateConfigDeliveryChannelResponse {
	s.Headers = v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelResponse) SetStatusCode(v int32) *CreateAggregateConfigDeliveryChannelResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateAggregateConfigDeliveryChannelResponse) SetBody(v *CreateAggregateConfigDeliveryChannelResponseBody) *CreateAggregateConfigDeliveryChannelResponse {
	s.Body = v
	return s
}

type CreateAggregateConfigRuleRequest struct {
	// The IDs of the member accounts to which the rule applies, which means that the resources within the member accounts are evaluated based on the rule. Separate multiple member account IDs with commas (,).
	//
	// example:
	//
	// 115748125982****
	AccountIdsScope *string `json:"AccountIdsScope,omitempty" xml:"AccountIdsScope,omitempty"`
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The rule name.
	//
	// This parameter is required.
	//
	// example:
	//
	// oss-default-encryption-kms
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// This parameter is required.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	ConfigRuleTriggerTypes *string `json:"ConfigRuleTriggerTypes,omitempty" xml:"ConfigRuleTriggerTypes,omitempty"`
	// The description of the rule.
	//
	// example:
	//
	// description of rule
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The ID of the member account to which the rule does not apply, which means that the resources within the member account are not evaluated based on the rule. Separate multiple member account IDs with commas (,).
	//
	// > This parameter applies only to a managed rule.
	//
	// example:
	//
	// 120886317861****
	ExcludeAccountIdsScope *string `json:"ExcludeAccountIdsScope,omitempty" xml:"ExcludeAccountIdsScope,omitempty"`
	// The ID of the resource directory to which the rule does not apply, which means that the resources within member accounts in the resource directory are not evaluated based on the rule. Separate multiple resource directory IDs with commas (,).
	//
	// >
	//
	// 	- This parameter applies only to a rule of a global account group.
	//
	// 	- This parameter applies only to a managed rule.
	//
	// example:
	//
	// fd-pWmkqZ****
	ExcludeFolderIdsScope *string `json:"ExcludeFolderIdsScope,omitempty" xml:"ExcludeFolderIdsScope,omitempty"`
	// The IDs of the regions to which the rule not applies. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource to be excluded from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// > This parameter applies only to a managed rule.
	//
	// example:
	//
	// lb-t4nbowvtbkss7t326****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// The scope of the tag that is excluded.
	ExcludeTagsScope []*CreateAggregateConfigRuleRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The extended content, which is temporarily only used to configure the trigger time with a 24-hour cycle trigger.
	//
	// example:
	//
	// {"fixedHour":"12"}
	ExtendContent *string `json:"ExtendContent,omitempty" xml:"ExtendContent,omitempty"`
	// The ID of the resource directory to which the rule applies, which means that the resources within member accounts in the resource directory are evaluated based on the rule.
	//
	// >
	//
	// 	- This parameter applies only to a rule of a global account group.
	//
	// 	- This parameter applies only to a managed rule.
	//
	// example:
	//
	// fd-ZtHsRH****
	FolderIdsScope *string `json:"FolderIdsScope,omitempty" xml:"FolderIdsScope,omitempty"`
	// The input parameter of the rule.
	//
	// example:
	//
	// {"tag1Key":"ECS","tag1Value":"test"}
	InputParameters map[string]interface{} `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
	// The interval at which the rule is triggered. Valid values:
	//
	// 	- One_Hour
	//
	// 	- Three_Hours
	//
	// 	- Six_Hours
	//
	// 	- Twelve_Hours
	//
	// 	- TwentyFour_Hours (default)
	//
	// >  This parameter is required if the `ConfigRuleTriggerTypes` parameter is set to `ScheduledNotification`.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The ID of the region to which the rule applies. Separate multiple region IDs with commas (,).
	//
	// > This parameter applies only to a managed rule.
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group to which the rule applies. Separate multiple resource group IDs with commas (,).
	//
	// > This parameter applies only to a managed rule.
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources included from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// if can be null:
	// true
	//
	// example:
	//
	// i-xxx
	ResourceNameScope *string `json:"ResourceNameScope,omitempty" xml:"ResourceNameScope,omitempty"`
	// The type of the resource evaluated by the rule. Separate multiple resource types with commas (,).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypesScope []*string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty" type:"Repeated"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// This parameter is required.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The identifier of the rule.
	//
	// 	- If you set the SourceOwner parameter to ALIYUN, set this parameter to the name of the managed rule.
	//
	// 	- If you set the SourceOwner parameter to CUSTOM_FC, set this parameter to the Alibaba Cloud Resource Name (ARN) of the relevant function in Function Compute.
	//
	// For more information about how to query the name of a managed rule, see [Managed rules](https://help.aliyun.com/document_detail/127404.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// required-tags
	SourceIdentifier *string `json:"SourceIdentifier,omitempty" xml:"SourceIdentifier,omitempty"`
	// The type of the rule. Valid values:
	//
	// 	- ALIYUN: a managed rule.
	//
	// 	- CUSTOM_FC: a custom rule.
	//
	// This parameter is required.
	//
	// example:
	//
	// ALIYUN
	SourceOwner *string `json:"SourceOwner,omitempty" xml:"SourceOwner,omitempty"`
	// The tags.
	Tag []*CreateAggregateConfigRuleRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The logical relationship among the tag keys if you specify multiple tag keys for the `TagKeyScope` parameter. For example, if you set the `TagKeyScope` parameter to `ECS,OSS` and the TagKeyLogicScope parameter to `AND`, the rule applies to resources with both the `ECS` and `OSS` tag keys. Valid values:
	//
	// 	- AND
	//
	// 	- OR
	//
	// example:
	//
	// AND
	TagKeyLogicScope *string `json:"TagKeyLogicScope,omitempty" xml:"TagKeyLogicScope,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The tag key used to filter resources. The rule applies only to the resources with the specified tag key. Separate multiple parameter values with commas (,).
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The tag value used to filter resources. The rule applies only to the resources that use the specified tag value.
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The tag scope.
	TagsScope []*CreateAggregateConfigRuleRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s CreateAggregateConfigRuleRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigRuleRequest) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigRuleRequest) SetAccountIdsScope(v string) *CreateAggregateConfigRuleRequest {
	s.AccountIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetAggregatorId(v string) *CreateAggregateConfigRuleRequest {
	s.AggregatorId = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetClientToken(v string) *CreateAggregateConfigRuleRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetConfigRuleName(v string) *CreateAggregateConfigRuleRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetConfigRuleTriggerTypes(v string) *CreateAggregateConfigRuleRequest {
	s.ConfigRuleTriggerTypes = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetDescription(v string) *CreateAggregateConfigRuleRequest {
	s.Description = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetExcludeAccountIdsScope(v string) *CreateAggregateConfigRuleRequest {
	s.ExcludeAccountIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetExcludeFolderIdsScope(v string) *CreateAggregateConfigRuleRequest {
	s.ExcludeFolderIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetExcludeRegionIdsScope(v string) *CreateAggregateConfigRuleRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetExcludeResourceGroupIdsScope(v string) *CreateAggregateConfigRuleRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetExcludeResourceIdsScope(v string) *CreateAggregateConfigRuleRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetExcludeTagsScope(v []*CreateAggregateConfigRuleRequestExcludeTagsScope) *CreateAggregateConfigRuleRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetExtendContent(v string) *CreateAggregateConfigRuleRequest {
	s.ExtendContent = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetFolderIdsScope(v string) *CreateAggregateConfigRuleRequest {
	s.FolderIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetInputParameters(v map[string]interface{}) *CreateAggregateConfigRuleRequest {
	s.InputParameters = v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetMaximumExecutionFrequency(v string) *CreateAggregateConfigRuleRequest {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetRegionIdsScope(v string) *CreateAggregateConfigRuleRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetResourceGroupIdsScope(v string) *CreateAggregateConfigRuleRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetResourceIdsScope(v string) *CreateAggregateConfigRuleRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetResourceNameScope(v string) *CreateAggregateConfigRuleRequest {
	s.ResourceNameScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetResourceTypesScope(v []*string) *CreateAggregateConfigRuleRequest {
	s.ResourceTypesScope = v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetRiskLevel(v int32) *CreateAggregateConfigRuleRequest {
	s.RiskLevel = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetSourceIdentifier(v string) *CreateAggregateConfigRuleRequest {
	s.SourceIdentifier = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetSourceOwner(v string) *CreateAggregateConfigRuleRequest {
	s.SourceOwner = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetTag(v []*CreateAggregateConfigRuleRequestTag) *CreateAggregateConfigRuleRequest {
	s.Tag = v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetTagKeyLogicScope(v string) *CreateAggregateConfigRuleRequest {
	s.TagKeyLogicScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetTagKeyScope(v string) *CreateAggregateConfigRuleRequest {
	s.TagKeyScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetTagValueScope(v string) *CreateAggregateConfigRuleRequest {
	s.TagValueScope = &v
	return s
}

func (s *CreateAggregateConfigRuleRequest) SetTagsScope(v []*CreateAggregateConfigRuleRequestTagsScope) *CreateAggregateConfigRuleRequest {
	s.TagsScope = v
	return s
}

type CreateAggregateConfigRuleRequestExcludeTagsScope struct {
	// The tag key of the resource that you want to exclude.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value of the resource that you want to exclude.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateAggregateConfigRuleRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigRuleRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigRuleRequestExcludeTagsScope) SetTagKey(v string) *CreateAggregateConfigRuleRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateAggregateConfigRuleRequestExcludeTagsScope) SetTagValue(v string) *CreateAggregateConfigRuleRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type CreateAggregateConfigRuleRequestTag struct {
	// The tag key.
	//
	// The tag key cannot be an empty string. The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.
	//
	// You can specify at most 20 tag keys.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s CreateAggregateConfigRuleRequestTag) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigRuleRequestTag) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigRuleRequestTag) SetKey(v string) *CreateAggregateConfigRuleRequestTag {
	s.Key = &v
	return s
}

func (s *CreateAggregateConfigRuleRequestTag) SetValue(v string) *CreateAggregateConfigRuleRequestTag {
	s.Value = &v
	return s
}

type CreateAggregateConfigRuleRequestTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateAggregateConfigRuleRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigRuleRequestTagsScope) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigRuleRequestTagsScope) SetTagKey(v string) *CreateAggregateConfigRuleRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateAggregateConfigRuleRequestTagsScope) SetTagValue(v string) *CreateAggregateConfigRuleRequestTagsScope {
	s.TagValue = &v
	return s
}

type CreateAggregateConfigRuleShrinkRequest struct {
	// The IDs of the member accounts to which the rule applies, which means that the resources within the member accounts are evaluated based on the rule. Separate multiple member account IDs with commas (,).
	//
	// example:
	//
	// 115748125982****
	AccountIdsScope *string `json:"AccountIdsScope,omitempty" xml:"AccountIdsScope,omitempty"`
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The rule name.
	//
	// This parameter is required.
	//
	// example:
	//
	// oss-default-encryption-kms
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// This parameter is required.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	ConfigRuleTriggerTypes *string `json:"ConfigRuleTriggerTypes,omitempty" xml:"ConfigRuleTriggerTypes,omitempty"`
	// The description of the rule.
	//
	// example:
	//
	// description of rule
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The ID of the member account to which the rule does not apply, which means that the resources within the member account are not evaluated based on the rule. Separate multiple member account IDs with commas (,).
	//
	// > This parameter applies only to a managed rule.
	//
	// example:
	//
	// 120886317861****
	ExcludeAccountIdsScope *string `json:"ExcludeAccountIdsScope,omitempty" xml:"ExcludeAccountIdsScope,omitempty"`
	// The ID of the resource directory to which the rule does not apply, which means that the resources within member accounts in the resource directory are not evaluated based on the rule. Separate multiple resource directory IDs with commas (,).
	//
	// >
	//
	// 	- This parameter applies only to a rule of a global account group.
	//
	// 	- This parameter applies only to a managed rule.
	//
	// example:
	//
	// fd-pWmkqZ****
	ExcludeFolderIdsScope *string `json:"ExcludeFolderIdsScope,omitempty" xml:"ExcludeFolderIdsScope,omitempty"`
	// The IDs of the regions to which the rule not applies. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource to be excluded from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// > This parameter applies only to a managed rule.
	//
	// example:
	//
	// lb-t4nbowvtbkss7t326****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// The scope of the tag that is excluded.
	ExcludeTagsScope []*CreateAggregateConfigRuleShrinkRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The extended content, which is temporarily only used to configure the trigger time with a 24-hour cycle trigger.
	//
	// example:
	//
	// {"fixedHour":"12"}
	ExtendContent *string `json:"ExtendContent,omitempty" xml:"ExtendContent,omitempty"`
	// The ID of the resource directory to which the rule applies, which means that the resources within member accounts in the resource directory are evaluated based on the rule.
	//
	// >
	//
	// 	- This parameter applies only to a rule of a global account group.
	//
	// 	- This parameter applies only to a managed rule.
	//
	// example:
	//
	// fd-ZtHsRH****
	FolderIdsScope *string `json:"FolderIdsScope,omitempty" xml:"FolderIdsScope,omitempty"`
	// The input parameter of the rule.
	//
	// example:
	//
	// {"tag1Key":"ECS","tag1Value":"test"}
	InputParametersShrink *string `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
	// The interval at which the rule is triggered. Valid values:
	//
	// 	- One_Hour
	//
	// 	- Three_Hours
	//
	// 	- Six_Hours
	//
	// 	- Twelve_Hours
	//
	// 	- TwentyFour_Hours (default)
	//
	// >  This parameter is required if the `ConfigRuleTriggerTypes` parameter is set to `ScheduledNotification`.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The ID of the region to which the rule applies. Separate multiple region IDs with commas (,).
	//
	// > This parameter applies only to a managed rule.
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group to which the rule applies. Separate multiple resource group IDs with commas (,).
	//
	// > This parameter applies only to a managed rule.
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources included from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// if can be null:
	// true
	//
	// example:
	//
	// i-xxx
	ResourceNameScope *string `json:"ResourceNameScope,omitempty" xml:"ResourceNameScope,omitempty"`
	// The type of the resource evaluated by the rule. Separate multiple resource types with commas (,).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypesScopeShrink *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// This parameter is required.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The identifier of the rule.
	//
	// 	- If you set the SourceOwner parameter to ALIYUN, set this parameter to the name of the managed rule.
	//
	// 	- If you set the SourceOwner parameter to CUSTOM_FC, set this parameter to the Alibaba Cloud Resource Name (ARN) of the relevant function in Function Compute.
	//
	// For more information about how to query the name of a managed rule, see [Managed rules](https://help.aliyun.com/document_detail/127404.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// required-tags
	SourceIdentifier *string `json:"SourceIdentifier,omitempty" xml:"SourceIdentifier,omitempty"`
	// The type of the rule. Valid values:
	//
	// 	- ALIYUN: a managed rule.
	//
	// 	- CUSTOM_FC: a custom rule.
	//
	// This parameter is required.
	//
	// example:
	//
	// ALIYUN
	SourceOwner *string `json:"SourceOwner,omitempty" xml:"SourceOwner,omitempty"`
	// The tags.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The logical relationship among the tag keys if you specify multiple tag keys for the `TagKeyScope` parameter. For example, if you set the `TagKeyScope` parameter to `ECS,OSS` and the TagKeyLogicScope parameter to `AND`, the rule applies to resources with both the `ECS` and `OSS` tag keys. Valid values:
	//
	// 	- AND
	//
	// 	- OR
	//
	// example:
	//
	// AND
	TagKeyLogicScope *string `json:"TagKeyLogicScope,omitempty" xml:"TagKeyLogicScope,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The tag key used to filter resources. The rule applies only to the resources with the specified tag key. Separate multiple parameter values with commas (,).
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The tag value used to filter resources. The rule applies only to the resources that use the specified tag value.
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The tag scope.
	TagsScope []*CreateAggregateConfigRuleShrinkRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s CreateAggregateConfigRuleShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigRuleShrinkRequest) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetAccountIdsScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.AccountIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetAggregatorId(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetClientToken(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetConfigRuleName(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetConfigRuleTriggerTypes(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ConfigRuleTriggerTypes = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetDescription(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.Description = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetExcludeAccountIdsScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ExcludeAccountIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetExcludeFolderIdsScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ExcludeFolderIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetExcludeRegionIdsScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetExcludeResourceGroupIdsScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetExcludeResourceIdsScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetExcludeTagsScope(v []*CreateAggregateConfigRuleShrinkRequestExcludeTagsScope) *CreateAggregateConfigRuleShrinkRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetExtendContent(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ExtendContent = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetFolderIdsScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.FolderIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetInputParametersShrink(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.InputParametersShrink = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetMaximumExecutionFrequency(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetRegionIdsScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetResourceGroupIdsScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetResourceIdsScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetResourceNameScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ResourceNameScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetResourceTypesScopeShrink(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.ResourceTypesScopeShrink = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetRiskLevel(v int32) *CreateAggregateConfigRuleShrinkRequest {
	s.RiskLevel = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetSourceIdentifier(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.SourceIdentifier = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetSourceOwner(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.SourceOwner = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetTagShrink(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.TagShrink = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetTagKeyLogicScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.TagKeyLogicScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetTagKeyScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.TagKeyScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetTagValueScope(v string) *CreateAggregateConfigRuleShrinkRequest {
	s.TagValueScope = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequest) SetTagsScope(v []*CreateAggregateConfigRuleShrinkRequestTagsScope) *CreateAggregateConfigRuleShrinkRequest {
	s.TagsScope = v
	return s
}

type CreateAggregateConfigRuleShrinkRequestExcludeTagsScope struct {
	// The tag key of the resource that you want to exclude.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value of the resource that you want to exclude.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateAggregateConfigRuleShrinkRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigRuleShrinkRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigRuleShrinkRequestExcludeTagsScope) SetTagKey(v string) *CreateAggregateConfigRuleShrinkRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequestExcludeTagsScope) SetTagValue(v string) *CreateAggregateConfigRuleShrinkRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type CreateAggregateConfigRuleShrinkRequestTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateAggregateConfigRuleShrinkRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigRuleShrinkRequestTagsScope) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigRuleShrinkRequestTagsScope) SetTagKey(v string) *CreateAggregateConfigRuleShrinkRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateAggregateConfigRuleShrinkRequestTagsScope) SetTagValue(v string) *CreateAggregateConfigRuleShrinkRequestTagsScope {
	s.TagValue = &v
	return s
}

type CreateAggregateConfigRuleResponseBody struct {
	// The rule ID.
	//
	// example:
	//
	// cr-4e3d626622af0080****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 5895065A-196C-4254-8AD8-14EFC31EEF50
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateAggregateConfigRuleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigRuleResponseBody) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigRuleResponseBody) SetConfigRuleId(v string) *CreateAggregateConfigRuleResponseBody {
	s.ConfigRuleId = &v
	return s
}

func (s *CreateAggregateConfigRuleResponseBody) SetRequestId(v string) *CreateAggregateConfigRuleResponseBody {
	s.RequestId = &v
	return s
}

type CreateAggregateConfigRuleResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateAggregateConfigRuleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateAggregateConfigRuleResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateConfigRuleResponse) GoString() string {
	return s.String()
}

func (s *CreateAggregateConfigRuleResponse) SetHeaders(v map[string]*string) *CreateAggregateConfigRuleResponse {
	s.Headers = v
	return s
}

func (s *CreateAggregateConfigRuleResponse) SetStatusCode(v int32) *CreateAggregateConfigRuleResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateAggregateConfigRuleResponse) SetBody(v *CreateAggregateConfigRuleResponseBody) *CreateAggregateConfigRuleResponse {
	s.Body = v
	return s
}

type CreateAggregateRemediationRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-6b4a626622af0012****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// AAAAAdDWBF2****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The rule ID.
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-6b7c626622af00b4****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The execution mode of the remediation template. Valid values:
	//
	// 	- NON_EXECUTION: The remediation template is not executed.
	//
	// 	- AUTO_EXECUTION: The remediation template is automatically executed.
	//
	// 	- MANUAL_EXECUTION: The remediation template is manually executed.
	//
	// 	- NOT_CONFIG: The execution mode is not specified.
	//
	// This parameter is required.
	//
	// example:
	//
	// MANUAL_EXECUTION
	InvokeType *string `json:"InvokeType,omitempty" xml:"InvokeType,omitempty"`
	// The configuration of the remediation template.
	//
	// For more information about how to obtain the configuration of the remediation template, see [ListRemediationTemplates](https://help.aliyun.com/document_detail/416781.html). You can view the `TemplateDefinition` response parameter to obtain the configuration of the remediation template.
	//
	// This parameter is required.
	//
	// example:
	//
	// {"bucketName": "{resourceId}", "regionId": "{regionId}", "permissionName": "private"}
	Params *string `json:"Params,omitempty" xml:"Params,omitempty"`
	// The ID of the remediation template.
	//
	// 	- If you set the `RemediationType` parameter to `OOS`, set this parameter to the identifier of the relevant official remediation template, such as `ACS-OSS-PutBucketAcl`. For more information about how to obtain the remediation template identifier, see [ListRemediationTemplates](https://help.aliyun.com/document_detail/416781.html).
	//
	// 	- If you set the `RemediationType` parameter to `FC`, set this parameter to the Alibaba Cloud Resource Name (ARN) of the relevant Function Compute resource, such as `acs:fc:cn-hangzhou:100931896542****:services/ConfigService.LATEST/functions/test-php`.
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS-OSS-PutBucketAcl
	RemediationTemplateId *string `json:"RemediationTemplateId,omitempty" xml:"RemediationTemplateId,omitempty"`
	// The type of the remediation template. Valid values:
	//
	// 	- OOS: stands for Operation Orchestration Service and indicates official remediation.
	//
	// 	- FC: stands for Function Compute and indicates custom remediation.
	//
	// This parameter is required.
	//
	// example:
	//
	// OOS
	RemediationType *string `json:"RemediationType,omitempty" xml:"RemediationType,omitempty"`
	// The source of remediation template. Valid values:
	//
	// 	- ALIYUN (default): official template.
	//
	// 	- CUSTOM: custom template.
	//
	// 	- NONE: none.
	//
	// example:
	//
	// ALIYUN
	SourceType *string `json:"SourceType,omitempty" xml:"SourceType,omitempty"`
}

func (s CreateAggregateRemediationRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateRemediationRequest) GoString() string {
	return s.String()
}

func (s *CreateAggregateRemediationRequest) SetAggregatorId(v string) *CreateAggregateRemediationRequest {
	s.AggregatorId = &v
	return s
}

func (s *CreateAggregateRemediationRequest) SetClientToken(v string) *CreateAggregateRemediationRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateAggregateRemediationRequest) SetConfigRuleId(v string) *CreateAggregateRemediationRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *CreateAggregateRemediationRequest) SetInvokeType(v string) *CreateAggregateRemediationRequest {
	s.InvokeType = &v
	return s
}

func (s *CreateAggregateRemediationRequest) SetParams(v string) *CreateAggregateRemediationRequest {
	s.Params = &v
	return s
}

func (s *CreateAggregateRemediationRequest) SetRemediationTemplateId(v string) *CreateAggregateRemediationRequest {
	s.RemediationTemplateId = &v
	return s
}

func (s *CreateAggregateRemediationRequest) SetRemediationType(v string) *CreateAggregateRemediationRequest {
	s.RemediationType = &v
	return s
}

func (s *CreateAggregateRemediationRequest) SetSourceType(v string) *CreateAggregateRemediationRequest {
	s.SourceType = &v
	return s
}

type CreateAggregateRemediationResponseBody struct {
	// The ID of the remediation template.
	//
	// example:
	//
	// crr-909ba2d4716700eb****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// C7817373-78CB-4F9A-8AFA-E7A88E9D64A2
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateAggregateRemediationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateRemediationResponseBody) GoString() string {
	return s.String()
}

func (s *CreateAggregateRemediationResponseBody) SetRemediationId(v string) *CreateAggregateRemediationResponseBody {
	s.RemediationId = &v
	return s
}

func (s *CreateAggregateRemediationResponseBody) SetRequestId(v string) *CreateAggregateRemediationResponseBody {
	s.RequestId = &v
	return s
}

type CreateAggregateRemediationResponse struct {
	Headers    map[string]*string                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateAggregateRemediationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateAggregateRemediationResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregateRemediationResponse) GoString() string {
	return s.String()
}

func (s *CreateAggregateRemediationResponse) SetHeaders(v map[string]*string) *CreateAggregateRemediationResponse {
	s.Headers = v
	return s
}

func (s *CreateAggregateRemediationResponse) SetStatusCode(v int32) *CreateAggregateRemediationResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateAggregateRemediationResponse) SetBody(v *CreateAggregateRemediationResponseBody) *CreateAggregateRemediationResponse {
	s.Body = v
	return s
}

type CreateAggregatorRequest struct {
	// The information about the member accounts in the account group. Example:
	//
	//     [{
	//
	//     	"accountId": 171322098523****,
	//
	//     	"accountType":"ResourceDirectory",
	//
	//                     "accountName":"Alice"
	//
	//     }, {
	//
	//     	"accountId": 100532098349****,
	//
	//     	"accountType":"ResourceDirectory",
	//
	//                     "accountName":"Tom"
	//
	//     }]
	//
	// >  If `AggregatorType` is set to `RD` or `FOLDER`, this parameter can be left empty, which indicates that all accounts in the resource directory are added to the global account group.
	//
	// if can be null:
	// false
	AggregatorAccounts []*CreateAggregatorRequestAggregatorAccounts `json:"AggregatorAccounts,omitempty" xml:"AggregatorAccounts,omitempty" type:"Repeated"`
	// The name of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// Test_Group
	AggregatorName *string `json:"AggregatorName,omitempty" xml:"AggregatorName,omitempty"`
	// The type of the account group. Valid values:
	//
	// 	- RD: global account group.
	//
	// 	- FOLDER: account group of the folder.
	//
	// 	- CUSTOM (default): custom account group.
	//
	// example:
	//
	// CUSTOM
	AggregatorType *string `json:"AggregatorType,omitempty" xml:"AggregatorType,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The description of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// Aggregator description.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The ID of the folder to which the account group is attached. You must specify this parameter if `AggregatorType` is set to `FOLDER`. Multiple resource folder IDs should be separated by commas (,).
	//
	// example:
	//
	// fd-brHdgv****,fd-brHdgk****
	FolderId *string `json:"FolderId,omitempty" xml:"FolderId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*CreateAggregatorRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s CreateAggregatorRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregatorRequest) GoString() string {
	return s.String()
}

func (s *CreateAggregatorRequest) SetAggregatorAccounts(v []*CreateAggregatorRequestAggregatorAccounts) *CreateAggregatorRequest {
	s.AggregatorAccounts = v
	return s
}

func (s *CreateAggregatorRequest) SetAggregatorName(v string) *CreateAggregatorRequest {
	s.AggregatorName = &v
	return s
}

func (s *CreateAggregatorRequest) SetAggregatorType(v string) *CreateAggregatorRequest {
	s.AggregatorType = &v
	return s
}

func (s *CreateAggregatorRequest) SetClientToken(v string) *CreateAggregatorRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateAggregatorRequest) SetDescription(v string) *CreateAggregatorRequest {
	s.Description = &v
	return s
}

func (s *CreateAggregatorRequest) SetFolderId(v string) *CreateAggregatorRequest {
	s.FolderId = &v
	return s
}

func (s *CreateAggregatorRequest) SetTag(v []*CreateAggregatorRequestTag) *CreateAggregatorRequest {
	s.Tag = v
	return s
}

type CreateAggregatorRequestAggregatorAccounts struct {
	// The member account ID. For more information about how to obtain the ID of a member account, see [ListAccounts](https://help.aliyun.com/document_detail/160016.html).
	//
	// example:
	//
	// 171322098523****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The name of the member account. For more information about how to obtain the name of a member account, see [ListAccounts](https://help.aliyun.com/document_detail/160016.html).
	//
	// example:
	//
	// Alice
	AccountName *string `json:"AccountName,omitempty" xml:"AccountName,omitempty"`
	// The type of the member account. Set this parameter to ResourceDirectory.
	//
	// example:
	//
	// ResourceDirectory
	AccountType *string `json:"AccountType,omitempty" xml:"AccountType,omitempty"`
}

func (s CreateAggregatorRequestAggregatorAccounts) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregatorRequestAggregatorAccounts) GoString() string {
	return s.String()
}

func (s *CreateAggregatorRequestAggregatorAccounts) SetAccountId(v int64) *CreateAggregatorRequestAggregatorAccounts {
	s.AccountId = &v
	return s
}

func (s *CreateAggregatorRequestAggregatorAccounts) SetAccountName(v string) *CreateAggregatorRequestAggregatorAccounts {
	s.AccountName = &v
	return s
}

func (s *CreateAggregatorRequestAggregatorAccounts) SetAccountType(v string) *CreateAggregatorRequestAggregatorAccounts {
	s.AccountType = &v
	return s
}

type CreateAggregatorRequestTag struct {
	// The tag key of the resource. You can specify up to 20 tag keys.
	//
	// The tag key cannot be an empty string. The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs`:. The tag key cannot contain `http://` or `https://`.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s CreateAggregatorRequestTag) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregatorRequestTag) GoString() string {
	return s.String()
}

func (s *CreateAggregatorRequestTag) SetKey(v string) *CreateAggregatorRequestTag {
	s.Key = &v
	return s
}

func (s *CreateAggregatorRequestTag) SetValue(v string) *CreateAggregatorRequestTag {
	s.Value = &v
	return s
}

type CreateAggregatorShrinkRequest struct {
	// The information about the member accounts in the account group. Example:
	//
	//     [{
	//
	//     	"accountId": 171322098523****,
	//
	//     	"accountType":"ResourceDirectory",
	//
	//                     "accountName":"Alice"
	//
	//     }, {
	//
	//     	"accountId": 100532098349****,
	//
	//     	"accountType":"ResourceDirectory",
	//
	//                     "accountName":"Tom"
	//
	//     }]
	//
	// >  If `AggregatorType` is set to `RD` or `FOLDER`, this parameter can be left empty, which indicates that all accounts in the resource directory are added to the global account group.
	//
	// if can be null:
	// false
	AggregatorAccountsShrink *string `json:"AggregatorAccounts,omitempty" xml:"AggregatorAccounts,omitempty"`
	// The name of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// Test_Group
	AggregatorName *string `json:"AggregatorName,omitempty" xml:"AggregatorName,omitempty"`
	// The type of the account group. Valid values:
	//
	// 	- RD: global account group.
	//
	// 	- FOLDER: account group of the folder.
	//
	// 	- CUSTOM (default): custom account group.
	//
	// example:
	//
	// CUSTOM
	AggregatorType *string `json:"AggregatorType,omitempty" xml:"AggregatorType,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The description of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// Aggregator description.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The ID of the folder to which the account group is attached. You must specify this parameter if `AggregatorType` is set to `FOLDER`. Multiple resource folder IDs should be separated by commas (,).
	//
	// example:
	//
	// fd-brHdgv****,fd-brHdgk****
	FolderId *string `json:"FolderId,omitempty" xml:"FolderId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s CreateAggregatorShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregatorShrinkRequest) GoString() string {
	return s.String()
}

func (s *CreateAggregatorShrinkRequest) SetAggregatorAccountsShrink(v string) *CreateAggregatorShrinkRequest {
	s.AggregatorAccountsShrink = &v
	return s
}

func (s *CreateAggregatorShrinkRequest) SetAggregatorName(v string) *CreateAggregatorShrinkRequest {
	s.AggregatorName = &v
	return s
}

func (s *CreateAggregatorShrinkRequest) SetAggregatorType(v string) *CreateAggregatorShrinkRequest {
	s.AggregatorType = &v
	return s
}

func (s *CreateAggregatorShrinkRequest) SetClientToken(v string) *CreateAggregatorShrinkRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateAggregatorShrinkRequest) SetDescription(v string) *CreateAggregatorShrinkRequest {
	s.Description = &v
	return s
}

func (s *CreateAggregatorShrinkRequest) SetFolderId(v string) *CreateAggregatorShrinkRequest {
	s.FolderId = &v
	return s
}

func (s *CreateAggregatorShrinkRequest) SetTagShrink(v string) *CreateAggregatorShrinkRequest {
	s.TagShrink = &v
	return s
}

type CreateAggregatorResponseBody struct {
	// The account group ID.
	//
	// example:
	//
	// ca-dacf86d8314e00eb****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 8195B664-9565-4685-89AC-8B5F04B44B92
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateAggregatorResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregatorResponseBody) GoString() string {
	return s.String()
}

func (s *CreateAggregatorResponseBody) SetAggregatorId(v string) *CreateAggregatorResponseBody {
	s.AggregatorId = &v
	return s
}

func (s *CreateAggregatorResponseBody) SetRequestId(v string) *CreateAggregatorResponseBody {
	s.RequestId = &v
	return s
}

type CreateAggregatorResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateAggregatorResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateAggregatorResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateAggregatorResponse) GoString() string {
	return s.String()
}

func (s *CreateAggregatorResponse) SetHeaders(v map[string]*string) *CreateAggregatorResponse {
	s.Headers = v
	return s
}

func (s *CreateAggregatorResponse) SetStatusCode(v int32) *CreateAggregatorResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateAggregatorResponse) SetBody(v *CreateAggregatorResponseBody) *CreateAggregatorResponse {
	s.Body = v
	return s
}

type CreateCompliancePackRequest struct {
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The name of the compliance package.
	//
	// This parameter is required.
	//
	// example:
	//
	// test-pack-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the compliance package template.
	//
	// You can call the [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html) operation to obtain the ID of the compliance package.
	//
	// example:
	//
	// ct-5f26ff4e06a300c4****
	CompliancePackTemplateId *string `json:"CompliancePackTemplateId,omitempty" xml:"CompliancePackTemplateId,omitempty"`
	// The rules in the compliance package. You must specify either this parameter or TemplateContent.
	//
	// if can be null:
	// false
	ConfigRules []*CreateCompliancePackRequestConfigRules `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty" type:"Repeated"`
	// Specifies whether to enable the rule together with the compliance package. Valid values:
	//
	// 	- true: The system enables the rule together with the compliance package.
	//
	// 	- false: The system does not enable the rule together with the compliance package.
	//
	// example:
	//
	// false
	DefaultEnable *bool `json:"DefaultEnable,omitempty" xml:"DefaultEnable,omitempty"`
	// The description of the compliance package.
	//
	// example:
	//
	// Test pack description.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// ExcludeRegionIdsScope
	//
	// example:
	//
	// cn-hangzhou
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource that you do not want to evaluate by using the compliance package. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// ExcludeTagsScope
	ExcludeTagsScope []*CreateCompliancePackRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The ID of the region whose resources you want to evaluate by using the compliance package. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group whose resources you want to evaluate by using the compliance package. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzdibsjjc****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// ResourceIdsScope
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Default value: 2. Valid values:
	//
	// 	- 1: high.
	//
	// 	- 2: medium.
	//
	// 	- 3: low.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*CreateCompliancePackRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
	// The tag key of the resource that you want to evaluate by using the compliance package.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// The tag value of the resource that you want to evaluate by using the compliance package.
	//
	// >  You must configure the TagValueScope parameter together with the TagKeyScope parameter.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// TagsScope
	TagsScope []*CreateCompliancePackRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
	// The information about the template that is used to generate the compliance package. You can call an API operation to view the details of an existing compliance package or write a compliance package template. For more information, see [Write a compliance package template in a configuration file](https://help.aliyun.com/document_detail/2659733.html). You must specify one of ConfigRules and TemplateContent.
	//
	// example:
	//
	// { "configRuleTemplates": [ { "configRuleName": "condition-rule-example", "scope": { "complianceResourceTypes": [ "ACS::ECS::Instance" ] }, "description": "", "source": { "owner": "CUSTOM_CONFIGURATION", "identifier": "acs-config-configuration", "sourceDetails": [ { "messageType": "ScheduledNotification", "maximumExecutionFrequency": "Twelve_Hours" }, { "messageType": "ConfigurationItemChangeNotification" } ], "conditions": "{\\\\"ComplianceConditions\\\\":\\\\"{\\\\\\\\\\"operator\\\\\\\\\\":\\\\\\\\\\"and\\\\\\\\\\",\\\\\\\\\\"children\\\\\\\\\\":[{\\\\\\\\\\"operator\\\\\\\\\\":\\\\\\\\\\"GreaterOrEquals\\\\\\\\\\",\\\\\\\\\\"featurePath\\\\\\\\\\":\\\\\\\\\\"$.Cpu\\\\\\\\\\",\\\\\\\\\\"featureSource\\\\\\\\\\":\\\\\\\\\\"CONFIGURATION\\\\\\\\\\",\\\\\\\\\\"desired\\\\\\\\\\":\\\\\\\\\\"2\\\\\\\\\\"}]}\\\\"}" }, "inputParameters": {} }, { "configRuleName": "oss-bucket-referer-limit", "scope": { "complianceResourceTypes": [ "ACS::OSS::Bucket" ] }, "description": "If the hotlink protection feature is enabled for the Object Storage Service (OSS) bucket and the Referer is added to a specific whitelist, the evaluation result is compliant.", "source": { "owner": "ALIYUN", "identifier": "oss-bucket-referer-limit", "sourceDetails": [ { "messageType": "ConfigurationItemChangeNotification" } ] }, "inputParameters": { "allowEmptyReferer": "true", "allowReferers": "http://www.aliyun.com" } } ] }
	TemplateContent *string `json:"TemplateContent,omitempty" xml:"TemplateContent,omitempty"`
}

func (s CreateCompliancePackRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackRequest) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackRequest) SetClientToken(v string) *CreateCompliancePackRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateCompliancePackRequest) SetCompliancePackName(v string) *CreateCompliancePackRequest {
	s.CompliancePackName = &v
	return s
}

func (s *CreateCompliancePackRequest) SetCompliancePackTemplateId(v string) *CreateCompliancePackRequest {
	s.CompliancePackTemplateId = &v
	return s
}

func (s *CreateCompliancePackRequest) SetConfigRules(v []*CreateCompliancePackRequestConfigRules) *CreateCompliancePackRequest {
	s.ConfigRules = v
	return s
}

func (s *CreateCompliancePackRequest) SetDefaultEnable(v bool) *CreateCompliancePackRequest {
	s.DefaultEnable = &v
	return s
}

func (s *CreateCompliancePackRequest) SetDescription(v string) *CreateCompliancePackRequest {
	s.Description = &v
	return s
}

func (s *CreateCompliancePackRequest) SetExcludeRegionIdsScope(v string) *CreateCompliancePackRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *CreateCompliancePackRequest) SetExcludeResourceGroupIdsScope(v string) *CreateCompliancePackRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *CreateCompliancePackRequest) SetExcludeResourceIdsScope(v string) *CreateCompliancePackRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *CreateCompliancePackRequest) SetExcludeTagsScope(v []*CreateCompliancePackRequestExcludeTagsScope) *CreateCompliancePackRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *CreateCompliancePackRequest) SetRegionIdsScope(v string) *CreateCompliancePackRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *CreateCompliancePackRequest) SetResourceGroupIdsScope(v string) *CreateCompliancePackRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *CreateCompliancePackRequest) SetResourceIdsScope(v string) *CreateCompliancePackRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *CreateCompliancePackRequest) SetRiskLevel(v int32) *CreateCompliancePackRequest {
	s.RiskLevel = &v
	return s
}

func (s *CreateCompliancePackRequest) SetTag(v []*CreateCompliancePackRequestTag) *CreateCompliancePackRequest {
	s.Tag = v
	return s
}

func (s *CreateCompliancePackRequest) SetTagKeyScope(v string) *CreateCompliancePackRequest {
	s.TagKeyScope = &v
	return s
}

func (s *CreateCompliancePackRequest) SetTagValueScope(v string) *CreateCompliancePackRequest {
	s.TagValueScope = &v
	return s
}

func (s *CreateCompliancePackRequest) SetTagsScope(v []*CreateCompliancePackRequestTagsScope) *CreateCompliancePackRequest {
	s.TagsScope = v
	return s
}

func (s *CreateCompliancePackRequest) SetTemplateContent(v string) *CreateCompliancePackRequest {
	s.TemplateContent = &v
	return s
}

type CreateCompliancePackRequestConfigRules struct {
	// The rule ID. If you specify this parameter, Cloud Config adds the rule that has the specified ID to the compliance package.
	//
	// You need to only specify `ManagedRuleIdentifier` or `ConfigRuleId`. If you specify both parameters, Cloud Config adds a rule based on the value of `ConfigRuleId`. You can call the [ListConfigRules](https://help.aliyun.com/document_detail/169607.html) operation to obtain the rule ID.
	//
	// example:
	//
	// cr-e918626622af000f****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// eip-bandwidth-limit
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The input parameters of the rule.
	ConfigRuleParameters []*CreateCompliancePackRequestConfigRulesConfigRuleParameters `json:"ConfigRuleParameters,omitempty" xml:"ConfigRuleParameters,omitempty" type:"Repeated"`
	// The description of the rule.
	//
	// example:
	//
	// The description of the test rule.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The identifier of the managed rule. Cloud Config automatically creates a managed rule based on the specified identifier and adds the rule to the compliance package.
	//
	// You need to only specify `ManagedRuleIdentifier` or `ConfigRuleId`. If you specify both parameters, Cloud Config adds a rule based on the value of `ConfigRuleId`. You can call the [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html) operation to obtain the identifier of the managed rule.
	//
	// example:
	//
	// eip-bandwidth-limit
	ManagedRuleIdentifier *string `json:"ManagedRuleIdentifier,omitempty" xml:"ManagedRuleIdentifier,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high.
	//
	// 	- 2: medium.
	//
	// 	- 3: low.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s CreateCompliancePackRequestConfigRules) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackRequestConfigRules) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackRequestConfigRules) SetConfigRuleId(v string) *CreateCompliancePackRequestConfigRules {
	s.ConfigRuleId = &v
	return s
}

func (s *CreateCompliancePackRequestConfigRules) SetConfigRuleName(v string) *CreateCompliancePackRequestConfigRules {
	s.ConfigRuleName = &v
	return s
}

func (s *CreateCompliancePackRequestConfigRules) SetConfigRuleParameters(v []*CreateCompliancePackRequestConfigRulesConfigRuleParameters) *CreateCompliancePackRequestConfigRules {
	s.ConfigRuleParameters = v
	return s
}

func (s *CreateCompliancePackRequestConfigRules) SetDescription(v string) *CreateCompliancePackRequestConfigRules {
	s.Description = &v
	return s
}

func (s *CreateCompliancePackRequestConfigRules) SetManagedRuleIdentifier(v string) *CreateCompliancePackRequestConfigRules {
	s.ManagedRuleIdentifier = &v
	return s
}

func (s *CreateCompliancePackRequestConfigRules) SetRiskLevel(v int32) *CreateCompliancePackRequestConfigRules {
	s.RiskLevel = &v
	return s
}

type CreateCompliancePackRequestConfigRulesConfigRuleParameters struct {
	// The name of the input parameter.
	//
	// You must specify both `ParameterName` and `ParameterValue` or neither of them. If the managed rule has an input parameter but no default value is specified, you must specify this parameter. You can call the [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html) operation to obtain the names of input parameters of the managed rule.
	//
	// example:
	//
	// bandwidth
	ParameterName *string `json:"ParameterName,omitempty" xml:"ParameterName,omitempty"`
	// The value of the input parameter.
	//
	// You must specify both `ParameterName` and `ParameterValue` or neither of them. If the managed rule has an input parameter but no default value is specified, you must specify this parameter. You can call the [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html) operation to obtain the values of input parameters of the managed rule.
	//
	// example:
	//
	// 10
	ParameterValue *string `json:"ParameterValue,omitempty" xml:"ParameterValue,omitempty"`
}

func (s CreateCompliancePackRequestConfigRulesConfigRuleParameters) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackRequestConfigRulesConfigRuleParameters) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackRequestConfigRulesConfigRuleParameters) SetParameterName(v string) *CreateCompliancePackRequestConfigRulesConfigRuleParameters {
	s.ParameterName = &v
	return s
}

func (s *CreateCompliancePackRequestConfigRulesConfigRuleParameters) SetParameterValue(v string) *CreateCompliancePackRequestConfigRulesConfigRuleParameters {
	s.ParameterValue = &v
	return s
}

type CreateCompliancePackRequestExcludeTagsScope struct {
	// TagKey
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// TagValue
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateCompliancePackRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackRequestExcludeTagsScope) SetTagKey(v string) *CreateCompliancePackRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateCompliancePackRequestExcludeTagsScope) SetTagValue(v string) *CreateCompliancePackRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type CreateCompliancePackRequestTag struct {
	// The tag keys.
	//
	// The tag keys cannot be an empty string. The tag keys can be up to 64 characters in length. The tag keys cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// You can specify at most 20 tag keys in each call.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s CreateCompliancePackRequestTag) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackRequestTag) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackRequestTag) SetKey(v string) *CreateCompliancePackRequestTag {
	s.Key = &v
	return s
}

func (s *CreateCompliancePackRequestTag) SetValue(v string) *CreateCompliancePackRequestTag {
	s.Value = &v
	return s
}

type CreateCompliancePackRequestTagsScope struct {
	// Tagkey
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// TagValue
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateCompliancePackRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackRequestTagsScope) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackRequestTagsScope) SetTagKey(v string) *CreateCompliancePackRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateCompliancePackRequestTagsScope) SetTagValue(v string) *CreateCompliancePackRequestTagsScope {
	s.TagValue = &v
	return s
}

type CreateCompliancePackShrinkRequest struct {
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The name of the compliance package.
	//
	// This parameter is required.
	//
	// example:
	//
	// test-pack-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the compliance package template.
	//
	// You can call the [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html) operation to obtain the ID of the compliance package.
	//
	// example:
	//
	// ct-5f26ff4e06a300c4****
	CompliancePackTemplateId *string `json:"CompliancePackTemplateId,omitempty" xml:"CompliancePackTemplateId,omitempty"`
	// The rules in the compliance package. You must specify either this parameter or TemplateContent.
	//
	// if can be null:
	// false
	ConfigRulesShrink *string `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty"`
	// Specifies whether to enable the rule together with the compliance package. Valid values:
	//
	// 	- true: The system enables the rule together with the compliance package.
	//
	// 	- false: The system does not enable the rule together with the compliance package.
	//
	// example:
	//
	// false
	DefaultEnable *bool `json:"DefaultEnable,omitempty" xml:"DefaultEnable,omitempty"`
	// The description of the compliance package.
	//
	// example:
	//
	// Test pack description.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// ExcludeRegionIdsScope
	//
	// example:
	//
	// cn-hangzhou
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource that you do not want to evaluate by using the compliance package. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// ExcludeTagsScope
	ExcludeTagsScope []*CreateCompliancePackShrinkRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The ID of the region whose resources you want to evaluate by using the compliance package. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group whose resources you want to evaluate by using the compliance package. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzdibsjjc****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// ResourceIdsScope
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Default value: 2. Valid values:
	//
	// 	- 1: high.
	//
	// 	- 2: medium.
	//
	// 	- 3: low.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
	// The tag key of the resource that you want to evaluate by using the compliance package.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// The tag value of the resource that you want to evaluate by using the compliance package.
	//
	// >  You must configure the TagValueScope parameter together with the TagKeyScope parameter.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// TagsScope
	TagsScope []*CreateCompliancePackShrinkRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
	// The information about the template that is used to generate the compliance package. You can call an API operation to view the details of an existing compliance package or write a compliance package template. For more information, see [Write a compliance package template in a configuration file](https://help.aliyun.com/document_detail/2659733.html). You must specify one of ConfigRules and TemplateContent.
	//
	// example:
	//
	// { "configRuleTemplates": [ { "configRuleName": "condition-rule-example", "scope": { "complianceResourceTypes": [ "ACS::ECS::Instance" ] }, "description": "", "source": { "owner": "CUSTOM_CONFIGURATION", "identifier": "acs-config-configuration", "sourceDetails": [ { "messageType": "ScheduledNotification", "maximumExecutionFrequency": "Twelve_Hours" }, { "messageType": "ConfigurationItemChangeNotification" } ], "conditions": "{\\\\"ComplianceConditions\\\\":\\\\"{\\\\\\\\\\"operator\\\\\\\\\\":\\\\\\\\\\"and\\\\\\\\\\",\\\\\\\\\\"children\\\\\\\\\\":[{\\\\\\\\\\"operator\\\\\\\\\\":\\\\\\\\\\"GreaterOrEquals\\\\\\\\\\",\\\\\\\\\\"featurePath\\\\\\\\\\":\\\\\\\\\\"$.Cpu\\\\\\\\\\",\\\\\\\\\\"featureSource\\\\\\\\\\":\\\\\\\\\\"CONFIGURATION\\\\\\\\\\",\\\\\\\\\\"desired\\\\\\\\\\":\\\\\\\\\\"2\\\\\\\\\\"}]}\\\\"}" }, "inputParameters": {} }, { "configRuleName": "oss-bucket-referer-limit", "scope": { "complianceResourceTypes": [ "ACS::OSS::Bucket" ] }, "description": "If the hotlink protection feature is enabled for the Object Storage Service (OSS) bucket and the Referer is added to a specific whitelist, the evaluation result is compliant.", "source": { "owner": "ALIYUN", "identifier": "oss-bucket-referer-limit", "sourceDetails": [ { "messageType": "ConfigurationItemChangeNotification" } ] }, "inputParameters": { "allowEmptyReferer": "true", "allowReferers": "http://www.aliyun.com" } } ] }
	TemplateContent *string `json:"TemplateContent,omitempty" xml:"TemplateContent,omitempty"`
}

func (s CreateCompliancePackShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackShrinkRequest) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackShrinkRequest) SetClientToken(v string) *CreateCompliancePackShrinkRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetCompliancePackName(v string) *CreateCompliancePackShrinkRequest {
	s.CompliancePackName = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetCompliancePackTemplateId(v string) *CreateCompliancePackShrinkRequest {
	s.CompliancePackTemplateId = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetConfigRulesShrink(v string) *CreateCompliancePackShrinkRequest {
	s.ConfigRulesShrink = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetDefaultEnable(v bool) *CreateCompliancePackShrinkRequest {
	s.DefaultEnable = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetDescription(v string) *CreateCompliancePackShrinkRequest {
	s.Description = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetExcludeRegionIdsScope(v string) *CreateCompliancePackShrinkRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetExcludeResourceGroupIdsScope(v string) *CreateCompliancePackShrinkRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetExcludeResourceIdsScope(v string) *CreateCompliancePackShrinkRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetExcludeTagsScope(v []*CreateCompliancePackShrinkRequestExcludeTagsScope) *CreateCompliancePackShrinkRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetRegionIdsScope(v string) *CreateCompliancePackShrinkRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetResourceGroupIdsScope(v string) *CreateCompliancePackShrinkRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetResourceIdsScope(v string) *CreateCompliancePackShrinkRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetRiskLevel(v int32) *CreateCompliancePackShrinkRequest {
	s.RiskLevel = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetTagShrink(v string) *CreateCompliancePackShrinkRequest {
	s.TagShrink = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetTagKeyScope(v string) *CreateCompliancePackShrinkRequest {
	s.TagKeyScope = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetTagValueScope(v string) *CreateCompliancePackShrinkRequest {
	s.TagValueScope = &v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetTagsScope(v []*CreateCompliancePackShrinkRequestTagsScope) *CreateCompliancePackShrinkRequest {
	s.TagsScope = v
	return s
}

func (s *CreateCompliancePackShrinkRequest) SetTemplateContent(v string) *CreateCompliancePackShrinkRequest {
	s.TemplateContent = &v
	return s
}

type CreateCompliancePackShrinkRequestExcludeTagsScope struct {
	// TagKey
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// TagValue
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateCompliancePackShrinkRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackShrinkRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackShrinkRequestExcludeTagsScope) SetTagKey(v string) *CreateCompliancePackShrinkRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateCompliancePackShrinkRequestExcludeTagsScope) SetTagValue(v string) *CreateCompliancePackShrinkRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type CreateCompliancePackShrinkRequestTagsScope struct {
	// Tagkey
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// TagValue
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateCompliancePackShrinkRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackShrinkRequestTagsScope) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackShrinkRequestTagsScope) SetTagKey(v string) *CreateCompliancePackShrinkRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateCompliancePackShrinkRequestTagsScope) SetTagValue(v string) *CreateCompliancePackShrinkRequestTagsScope {
	s.TagValue = &v
	return s
}

type CreateCompliancePackResponseBody struct {
	// The compliance package ID.
	//
	// example:
	//
	// cp-a8a8626622af0082****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateCompliancePackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackResponseBody) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackResponseBody) SetCompliancePackId(v string) *CreateCompliancePackResponseBody {
	s.CompliancePackId = &v
	return s
}

func (s *CreateCompliancePackResponseBody) SetRequestId(v string) *CreateCompliancePackResponseBody {
	s.RequestId = &v
	return s
}

type CreateCompliancePackResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateCompliancePackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateCompliancePackResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateCompliancePackResponse) GoString() string {
	return s.String()
}

func (s *CreateCompliancePackResponse) SetHeaders(v map[string]*string) *CreateCompliancePackResponse {
	s.Headers = v
	return s
}

func (s *CreateCompliancePackResponse) SetStatusCode(v int32) *CreateCompliancePackResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateCompliancePackResponse) SetBody(v *CreateCompliancePackResponseBody) *CreateCompliancePackResponse {
	s.Body = v
	return s
}

type CreateConfigDeliveryChannelRequest struct {
	// The client token that is used to ensure the idempotency of the request. You can use the client to generate the token, but you must ensure that the token is unique among different requests.
	//
	// The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](https://help.aliyun.com/document_detail/25693.html).
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// Specifies whether to deliver scheduled compliant snapshots. Cloud Config delivers scheduled compliant snapshots at `04:00Z` and `16:00Z` to Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: Cloud Config delivers scheduled compliant snapshots.
	//
	// 	- false (default): Cloud Config does not deliver scheduled compliant snapshots.
	//
	// example:
	//
	// false
	CompliantSnapshot *bool `json:"CompliantSnapshot,omitempty" xml:"CompliantSnapshot,omitempty"`
	// Specifies whether to deliver resource change logs. If you set this parameter to true, Cloud Config delivers resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	//
	// 	- true: Cloud Config delivers resource change logs.
	//
	// 	- false (default): Cloud Config does not deliver resource change logs.
	//
	// > This parameter is available for delivery channels of the OSS, SLS, and MNS types.
	//
	// example:
	//
	// false
	ConfigurationItemChangeNotification *bool `json:"ConfigurationItemChangeNotification,omitempty" xml:"ConfigurationItemChangeNotification,omitempty"`
	// Specifies whether to deliver scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at `04:00Z` and `16:00Z` to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: Cloud Config delivers scheduled resource snapshots.
	//
	// 	- false (default): Cloud Config does not deliver scheduled resource snapshots.
	//
	// example:
	//
	// false
	ConfigurationSnapshot *bool `json:"ConfigurationSnapshot,omitempty" xml:"ConfigurationSnapshot,omitempty"`
	// The rule that you want to attach to the delivery channel, used to specify subscription content filtering conditions.
	//
	// 	- If you specify the minimum risk level and resource types for compliance events, it should be as follows:
	//
	//     	- The setting of the lowest risk level for the events to which you want to subscribe is in the following format: `{"filterType":"RuleRiskLevel","value":"1","multiple":false}`.
	//
	//         The `value` field indicates the lowest risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	//         The `multiple` field indicates whether multiple values are supported for this group of filters. Risk levels only support single-value filtering, so the multiple field for compliance event type content can only be set to `false`.
	//
	//     	- The setting of the resource types of the events to which you want to subscribe is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//         The `values` field indicates the resource types of the events to which you want to subscribe.
	//
	//         The `multiple` field indicates whether multiple values are supported for this group of filters. Resource types support multi-value filtering; when selecting multiple resource types, the multiple field can be set to true.
	//
	// The value of the field is a JSON array. Examples:
	//
	//         `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	//     	- You can also simultaneously specify both risk levels and resource types, such as:
	//
	//         `[{"filterType":"RuleRiskLevel","value":"2","multiple":false},{"filterType":"ResourceType","values":["ACS::CDN::Domain","ACS::ActionTrail::Trail"],"multiple":true}]`
	//
	// 	- If you specify the resource types for delivering configurations, the resource types are specified by: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//     The `values` field specifies the resource types of the snapshots to which you want to deliver. The value of the field is a JSON array. Examples:
	//
	//       `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// example:
	//
	// [{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]
	DeliveryChannelCondition *string `json:"DeliveryChannelCondition,omitempty" xml:"DeliveryChannelCondition,omitempty"`
	// The name of the delivery channel.
	//
	// > If you do not configure this parameter, this parameter is left empty.
	//
	// example:
	//
	// testoss
	DeliveryChannelName *string `json:"DeliveryChannelName,omitempty" xml:"DeliveryChannelName,omitempty"`
	// The Alibaba Cloud Resource Name (ARN) of the delivery destination. Valid values:
	//
	// 	- `acs:oss:{RegionId}:{accountId}:{bucketName}` if your delivery destination is an OSS bucket. Example: `acs:oss:cn-shanghai:100931896542****:new-bucket`.
	//
	// 	- `acs:mns:{RegionId}:{accountId}:/topics/{topicName}` if your delivery destination is an MNS topic. Example: `acs:mns:cn-shanghai:100931896542****:/topics/topic1`.
	//
	// 	- `acs:log:{RegionId}:{accountId}:project/{projectName}/logstore/{logstoreName}` if your delivery destination is a Log Service Logstore. Example: `acs:log:cn-shanghai:100931896542****:project/project1/logstore/logstore1`.
	//
	// This parameter is required.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	DeliveryChannelTargetArn *string `json:"DeliveryChannelTargetArn,omitempty" xml:"DeliveryChannelTargetArn,omitempty"`
	// The type of the delivery channel. Valid values:
	//
	// 	- OSS: Object Storage Service (OSS)
	//
	// 	- MNS: Message Service (MNS)
	//
	// 	- SLS: Log Service
	//
	// This parameter is required.
	//
	// example:
	//
	// OSS
	DeliveryChannelType *string `json:"DeliveryChannelType,omitempty" xml:"DeliveryChannelType,omitempty"`
	// The time when you want Cloud Config to deliver scheduled resource snapshots every day.
	//
	// Format: `HH:mmZ`. This time is displayed in UTC.
	//
	// > When you enable the scheduled resource delivery feature, you can configure this parameter to specify a custom delivery time. If you do not configure this parameter, Cloud Config automatically delivers scheduled resource snapshots at `04:00Z` and `16:00Z` every day.
	//
	// example:
	//
	// 09:10Z
	DeliverySnapshotTime *string `json:"DeliverySnapshotTime,omitempty" xml:"DeliverySnapshotTime,omitempty"`
	// The description of the delivery channel.
	//
	// example:
	//
	// My OSS delivery.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Specifies whether to deliver resource non-compliance events. If you set this parameter to true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are considered non-compliant. Valid values:
	//
	// 	- true: Cloud Config delivers resource non-compliance events.
	//
	// 	- false (default): Cloud Config does not deliver resource non-compliance events.
	//
	// > This parameter is available only for delivery channels of the SLS or MNS type.
	//
	// example:
	//
	// false
	NonCompliantNotification *bool `json:"NonCompliantNotification,omitempty" xml:"NonCompliantNotification,omitempty"`
	// The ARN of the OSS bucket to which you want to transfer the delivery data when the size of the data exceeds the specified upper limit of the delivery channel. Format: `acs:oss:{RegionId}:{accountId}:{bucketName}`.
	//
	// If you do not configure this parameter, Cloud Config delivers only summary data.
	//
	// > This parameter is available only for delivery channels of the SLS or MNS type. The maximum storage size of delivery channels of the SLS type is 1 MB, and the maximum storage size of delivery channels of the MNS type is 64 KB.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	OversizedDataOSSTargetArn *string `json:"OversizedDataOSSTargetArn,omitempty" xml:"OversizedDataOSSTargetArn,omitempty"`
}

func (s CreateConfigDeliveryChannelRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigDeliveryChannelRequest) GoString() string {
	return s.String()
}

func (s *CreateConfigDeliveryChannelRequest) SetClientToken(v string) *CreateConfigDeliveryChannelRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetCompliantSnapshot(v bool) *CreateConfigDeliveryChannelRequest {
	s.CompliantSnapshot = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetConfigurationItemChangeNotification(v bool) *CreateConfigDeliveryChannelRequest {
	s.ConfigurationItemChangeNotification = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetConfigurationSnapshot(v bool) *CreateConfigDeliveryChannelRequest {
	s.ConfigurationSnapshot = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetDeliveryChannelCondition(v string) *CreateConfigDeliveryChannelRequest {
	s.DeliveryChannelCondition = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetDeliveryChannelName(v string) *CreateConfigDeliveryChannelRequest {
	s.DeliveryChannelName = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetDeliveryChannelTargetArn(v string) *CreateConfigDeliveryChannelRequest {
	s.DeliveryChannelTargetArn = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetDeliveryChannelType(v string) *CreateConfigDeliveryChannelRequest {
	s.DeliveryChannelType = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetDeliverySnapshotTime(v string) *CreateConfigDeliveryChannelRequest {
	s.DeliverySnapshotTime = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetDescription(v string) *CreateConfigDeliveryChannelRequest {
	s.Description = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetNonCompliantNotification(v bool) *CreateConfigDeliveryChannelRequest {
	s.NonCompliantNotification = &v
	return s
}

func (s *CreateConfigDeliveryChannelRequest) SetOversizedDataOSSTargetArn(v string) *CreateConfigDeliveryChannelRequest {
	s.OversizedDataOSSTargetArn = &v
	return s
}

type CreateConfigDeliveryChannelResponseBody struct {
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-8e45ff4e06a3a8****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// A7A0FFF8-0B44-40C6-8BBF-3A185EFDERTHG
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateConfigDeliveryChannelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigDeliveryChannelResponseBody) GoString() string {
	return s.String()
}

func (s *CreateConfigDeliveryChannelResponseBody) SetDeliveryChannelId(v string) *CreateConfigDeliveryChannelResponseBody {
	s.DeliveryChannelId = &v
	return s
}

func (s *CreateConfigDeliveryChannelResponseBody) SetRequestId(v string) *CreateConfigDeliveryChannelResponseBody {
	s.RequestId = &v
	return s
}

type CreateConfigDeliveryChannelResponse struct {
	Headers    map[string]*string                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateConfigDeliveryChannelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateConfigDeliveryChannelResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigDeliveryChannelResponse) GoString() string {
	return s.String()
}

func (s *CreateConfigDeliveryChannelResponse) SetHeaders(v map[string]*string) *CreateConfigDeliveryChannelResponse {
	s.Headers = v
	return s
}

func (s *CreateConfigDeliveryChannelResponse) SetStatusCode(v int32) *CreateConfigDeliveryChannelResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateConfigDeliveryChannelResponse) SetBody(v *CreateConfigDeliveryChannelResponseBody) *CreateConfigDeliveryChannelResponse {
	s.Body = v
	return s
}

type CreateConfigRuleRequest struct {
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The name of the rule.
	//
	// This parameter is required.
	//
	// example:
	//
	// required-tags
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// >  If a rule supports the preceding trigger types, separate the types with a comma (,).
	//
	// This parameter is required.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	ConfigRuleTriggerTypes *string `json:"ConfigRuleTriggerTypes,omitempty" xml:"ConfigRuleTriggerTypes,omitempty"`
	// The description of the rule.
	//
	// example:
	//
	// example-description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// ExcludeRegionIdsScope
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource to be excluded from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// >  This parameter applies only to managed rules.
	//
	// example:
	//
	// lb-t4nbowvtbkss7t326****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// ExcludeTagsScope
	ExcludeTagsScope []*CreateConfigRuleRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// Optional field, only used in conjunction with the 24-hour cycle execution to set the trigger time.
	//
	// example:
	//
	// {"fixedHour":"13"}
	ExtendContent *string `json:"ExtendContent,omitempty" xml:"ExtendContent,omitempty"`
	// The input parameter of the rule.
	//
	// example:
	//
	// {"tag1Key":"ECS","tag1Value":"test"}
	InputParameters map[string]interface{} `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
	// The intervals at which the rule is triggered. Valid values:
	//
	// 	- One_Hour: 1 hour.
	//
	// 	- Three_Hours: 3 hours.
	//
	// 	- Six_Hours: 6 hours.
	//
	// 	- Twelve_Hours: 12 hours.
	//
	// 	- TwentyFour_Hours (default): 24 hours.
	//
	// >  This parameter is required if the ConfigRuleTriggerTypes parameter is set to ScheduledNotification.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The ID of the region to which the rule applies. Separate multiple region IDs with commas (,).
	//
	// >  This parameter applies only to managed rules.
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group to which the rule applies. Separate multiple resource group IDs with commas (,).
	//
	// >  This parameter applies only to managed rules.
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// ResourceIdsScope
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// if can be null:
	// true
	ResourceNameScope *string `json:"ResourceNameScope,omitempty" xml:"ResourceNameScope,omitempty"`
	// The type of the resource to be evaluated by the rule. Separate multiple resource types with commas (,).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypesScope []*string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty" type:"Repeated"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high.
	//
	// 	- 2: medium.
	//
	// 	- 3: low.
	//
	// This parameter is required.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The ID of the rule.
	//
	// 	- If you set the SourceOwner parameter to ALIYUN, set this parameter to the name of the managed rule.
	//
	// 	- If you set the SourceOwner parameter to CUSTOM_FC, set this parameter to the Alibaba Cloud Resource Name (ARN) of the relevant function in Function Compute.
	//
	// For more information about how to query the name of a managed rule, see [Managed rules](https://help.aliyun.com/document_detail/127404.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// required-tags
	SourceIdentifier *string `json:"SourceIdentifier,omitempty" xml:"SourceIdentifier,omitempty"`
	// The type of the rule Valid values:
	//
	// 	- ALIYUN: managed rule.
	//
	// 	- CUSTOM_FC: custom rule.
	//
	// This parameter is required.
	//
	// example:
	//
	// ALIYUN
	SourceOwner *string `json:"SourceOwner,omitempty" xml:"SourceOwner,omitempty"`
	// rule attached tags
	Tag []*CreateConfigRuleRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
	// Deprecated
	//
	// The logical relationship among the tag keys if you specify multiple tag keys for `TagKeyScope`. For example, if you set `TagKeyScope` to `ECS,OSS` and set TagKeyLogicScope to `AND`, the rule applies to resources with both the `ECS` and `OSS` tag keys. Valid values:
	//
	// 	- AND
	//
	// 	- OR
	//
	// example:
	//
	// AND
	TagKeyLogicScope *string `json:"TagKeyLogicScope,omitempty" xml:"TagKeyLogicScope,omitempty"`
	// Deprecated
	//
	// The tag key used to filter resources. The rule applies only to the resources with the specified tag key.
	//
	// >  This parameter applies only to managed rules. You must specify both `TagKeyScope` and `TagValueScope`.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// Deprecated
	//
	// The tag value used to filter resources. The rule applies only to the resources that use the specified tag value.
	//
	// >  This parameter applies only to managed rules. You must specify both `TagKeyScope` and `TagValueScope`.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// TagsScope
	TagsScope []*CreateConfigRuleRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s CreateConfigRuleRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigRuleRequest) GoString() string {
	return s.String()
}

func (s *CreateConfigRuleRequest) SetClientToken(v string) *CreateConfigRuleRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateConfigRuleRequest) SetConfigRuleName(v string) *CreateConfigRuleRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *CreateConfigRuleRequest) SetConfigRuleTriggerTypes(v string) *CreateConfigRuleRequest {
	s.ConfigRuleTriggerTypes = &v
	return s
}

func (s *CreateConfigRuleRequest) SetDescription(v string) *CreateConfigRuleRequest {
	s.Description = &v
	return s
}

func (s *CreateConfigRuleRequest) SetExcludeRegionIdsScope(v string) *CreateConfigRuleRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *CreateConfigRuleRequest) SetExcludeResourceGroupIdsScope(v string) *CreateConfigRuleRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *CreateConfigRuleRequest) SetExcludeResourceIdsScope(v string) *CreateConfigRuleRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *CreateConfigRuleRequest) SetExcludeTagsScope(v []*CreateConfigRuleRequestExcludeTagsScope) *CreateConfigRuleRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *CreateConfigRuleRequest) SetExtendContent(v string) *CreateConfigRuleRequest {
	s.ExtendContent = &v
	return s
}

func (s *CreateConfigRuleRequest) SetInputParameters(v map[string]interface{}) *CreateConfigRuleRequest {
	s.InputParameters = v
	return s
}

func (s *CreateConfigRuleRequest) SetMaximumExecutionFrequency(v string) *CreateConfigRuleRequest {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *CreateConfigRuleRequest) SetRegionIdsScope(v string) *CreateConfigRuleRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *CreateConfigRuleRequest) SetResourceGroupIdsScope(v string) *CreateConfigRuleRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *CreateConfigRuleRequest) SetResourceIdsScope(v string) *CreateConfigRuleRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *CreateConfigRuleRequest) SetResourceNameScope(v string) *CreateConfigRuleRequest {
	s.ResourceNameScope = &v
	return s
}

func (s *CreateConfigRuleRequest) SetResourceTypesScope(v []*string) *CreateConfigRuleRequest {
	s.ResourceTypesScope = v
	return s
}

func (s *CreateConfigRuleRequest) SetRiskLevel(v int32) *CreateConfigRuleRequest {
	s.RiskLevel = &v
	return s
}

func (s *CreateConfigRuleRequest) SetSourceIdentifier(v string) *CreateConfigRuleRequest {
	s.SourceIdentifier = &v
	return s
}

func (s *CreateConfigRuleRequest) SetSourceOwner(v string) *CreateConfigRuleRequest {
	s.SourceOwner = &v
	return s
}

func (s *CreateConfigRuleRequest) SetTag(v []*CreateConfigRuleRequestTag) *CreateConfigRuleRequest {
	s.Tag = v
	return s
}

func (s *CreateConfigRuleRequest) SetTagKeyLogicScope(v string) *CreateConfigRuleRequest {
	s.TagKeyLogicScope = &v
	return s
}

func (s *CreateConfigRuleRequest) SetTagKeyScope(v string) *CreateConfigRuleRequest {
	s.TagKeyScope = &v
	return s
}

func (s *CreateConfigRuleRequest) SetTagValueScope(v string) *CreateConfigRuleRequest {
	s.TagValueScope = &v
	return s
}

func (s *CreateConfigRuleRequest) SetTagsScope(v []*CreateConfigRuleRequestTagsScope) *CreateConfigRuleRequest {
	s.TagsScope = v
	return s
}

type CreateConfigRuleRequestExcludeTagsScope struct {
	// TagKey
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// TagValue
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateConfigRuleRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigRuleRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *CreateConfigRuleRequestExcludeTagsScope) SetTagKey(v string) *CreateConfigRuleRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateConfigRuleRequestExcludeTagsScope) SetTagValue(v string) *CreateConfigRuleRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type CreateConfigRuleRequestTag struct {
	// The tag keys.
	//
	// The tag keys cannot be an empty string. The tag keys can be up to 64 characters in length. The tag keys cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// You can specify at most 20 tag keys in each call.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The value of the tag. You can specify up to 20 tag values. The tag value can be an empty string.
	//
	// The tag value can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. The tag value cannot contain `http://` or `https://`.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s CreateConfigRuleRequestTag) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigRuleRequestTag) GoString() string {
	return s.String()
}

func (s *CreateConfigRuleRequestTag) SetKey(v string) *CreateConfigRuleRequestTag {
	s.Key = &v
	return s
}

func (s *CreateConfigRuleRequestTag) SetValue(v string) *CreateConfigRuleRequestTag {
	s.Value = &v
	return s
}

type CreateConfigRuleRequestTagsScope struct {
	// TagKey
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// TagValue
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateConfigRuleRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigRuleRequestTagsScope) GoString() string {
	return s.String()
}

func (s *CreateConfigRuleRequestTagsScope) SetTagKey(v string) *CreateConfigRuleRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateConfigRuleRequestTagsScope) SetTagValue(v string) *CreateConfigRuleRequestTagsScope {
	s.TagValue = &v
	return s
}

type CreateConfigRuleShrinkRequest struct {
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The name of the rule.
	//
	// This parameter is required.
	//
	// example:
	//
	// required-tags
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// >  If a rule supports the preceding trigger types, separate the types with a comma (,).
	//
	// This parameter is required.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	ConfigRuleTriggerTypes *string `json:"ConfigRuleTriggerTypes,omitempty" xml:"ConfigRuleTriggerTypes,omitempty"`
	// The description of the rule.
	//
	// example:
	//
	// example-description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// ExcludeRegionIdsScope
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource to be excluded from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// >  This parameter applies only to managed rules.
	//
	// example:
	//
	// lb-t4nbowvtbkss7t326****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// ExcludeTagsScope
	ExcludeTagsScope []*CreateConfigRuleShrinkRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// Optional field, only used in conjunction with the 24-hour cycle execution to set the trigger time.
	//
	// example:
	//
	// {"fixedHour":"13"}
	ExtendContent *string `json:"ExtendContent,omitempty" xml:"ExtendContent,omitempty"`
	// The input parameter of the rule.
	//
	// example:
	//
	// {"tag1Key":"ECS","tag1Value":"test"}
	InputParametersShrink *string `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
	// The intervals at which the rule is triggered. Valid values:
	//
	// 	- One_Hour: 1 hour.
	//
	// 	- Three_Hours: 3 hours.
	//
	// 	- Six_Hours: 6 hours.
	//
	// 	- Twelve_Hours: 12 hours.
	//
	// 	- TwentyFour_Hours (default): 24 hours.
	//
	// >  This parameter is required if the ConfigRuleTriggerTypes parameter is set to ScheduledNotification.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The ID of the region to which the rule applies. Separate multiple region IDs with commas (,).
	//
	// >  This parameter applies only to managed rules.
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group to which the rule applies. Separate multiple resource group IDs with commas (,).
	//
	// >  This parameter applies only to managed rules.
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// ResourceIdsScope
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// if can be null:
	// true
	ResourceNameScope *string `json:"ResourceNameScope,omitempty" xml:"ResourceNameScope,omitempty"`
	// The type of the resource to be evaluated by the rule. Separate multiple resource types with commas (,).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypesScopeShrink *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high.
	//
	// 	- 2: medium.
	//
	// 	- 3: low.
	//
	// This parameter is required.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The ID of the rule.
	//
	// 	- If you set the SourceOwner parameter to ALIYUN, set this parameter to the name of the managed rule.
	//
	// 	- If you set the SourceOwner parameter to CUSTOM_FC, set this parameter to the Alibaba Cloud Resource Name (ARN) of the relevant function in Function Compute.
	//
	// For more information about how to query the name of a managed rule, see [Managed rules](https://help.aliyun.com/document_detail/127404.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// required-tags
	SourceIdentifier *string `json:"SourceIdentifier,omitempty" xml:"SourceIdentifier,omitempty"`
	// The type of the rule Valid values:
	//
	// 	- ALIYUN: managed rule.
	//
	// 	- CUSTOM_FC: custom rule.
	//
	// This parameter is required.
	//
	// example:
	//
	// ALIYUN
	SourceOwner *string `json:"SourceOwner,omitempty" xml:"SourceOwner,omitempty"`
	// rule attached tags
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
	// Deprecated
	//
	// The logical relationship among the tag keys if you specify multiple tag keys for `TagKeyScope`. For example, if you set `TagKeyScope` to `ECS,OSS` and set TagKeyLogicScope to `AND`, the rule applies to resources with both the `ECS` and `OSS` tag keys. Valid values:
	//
	// 	- AND
	//
	// 	- OR
	//
	// example:
	//
	// AND
	TagKeyLogicScope *string `json:"TagKeyLogicScope,omitempty" xml:"TagKeyLogicScope,omitempty"`
	// Deprecated
	//
	// The tag key used to filter resources. The rule applies only to the resources with the specified tag key.
	//
	// >  This parameter applies only to managed rules. You must specify both `TagKeyScope` and `TagValueScope`.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// Deprecated
	//
	// The tag value used to filter resources. The rule applies only to the resources that use the specified tag value.
	//
	// >  This parameter applies only to managed rules. You must specify both `TagKeyScope` and `TagValueScope`.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// TagsScope
	TagsScope []*CreateConfigRuleShrinkRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s CreateConfigRuleShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigRuleShrinkRequest) GoString() string {
	return s.String()
}

func (s *CreateConfigRuleShrinkRequest) SetClientToken(v string) *CreateConfigRuleShrinkRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetConfigRuleName(v string) *CreateConfigRuleShrinkRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetConfigRuleTriggerTypes(v string) *CreateConfigRuleShrinkRequest {
	s.ConfigRuleTriggerTypes = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetDescription(v string) *CreateConfigRuleShrinkRequest {
	s.Description = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetExcludeRegionIdsScope(v string) *CreateConfigRuleShrinkRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetExcludeResourceGroupIdsScope(v string) *CreateConfigRuleShrinkRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetExcludeResourceIdsScope(v string) *CreateConfigRuleShrinkRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetExcludeTagsScope(v []*CreateConfigRuleShrinkRequestExcludeTagsScope) *CreateConfigRuleShrinkRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetExtendContent(v string) *CreateConfigRuleShrinkRequest {
	s.ExtendContent = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetInputParametersShrink(v string) *CreateConfigRuleShrinkRequest {
	s.InputParametersShrink = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetMaximumExecutionFrequency(v string) *CreateConfigRuleShrinkRequest {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetRegionIdsScope(v string) *CreateConfigRuleShrinkRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetResourceGroupIdsScope(v string) *CreateConfigRuleShrinkRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetResourceIdsScope(v string) *CreateConfigRuleShrinkRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetResourceNameScope(v string) *CreateConfigRuleShrinkRequest {
	s.ResourceNameScope = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetResourceTypesScopeShrink(v string) *CreateConfigRuleShrinkRequest {
	s.ResourceTypesScopeShrink = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetRiskLevel(v int32) *CreateConfigRuleShrinkRequest {
	s.RiskLevel = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetSourceIdentifier(v string) *CreateConfigRuleShrinkRequest {
	s.SourceIdentifier = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetSourceOwner(v string) *CreateConfigRuleShrinkRequest {
	s.SourceOwner = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetTagShrink(v string) *CreateConfigRuleShrinkRequest {
	s.TagShrink = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetTagKeyLogicScope(v string) *CreateConfigRuleShrinkRequest {
	s.TagKeyLogicScope = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetTagKeyScope(v string) *CreateConfigRuleShrinkRequest {
	s.TagKeyScope = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetTagValueScope(v string) *CreateConfigRuleShrinkRequest {
	s.TagValueScope = &v
	return s
}

func (s *CreateConfigRuleShrinkRequest) SetTagsScope(v []*CreateConfigRuleShrinkRequestTagsScope) *CreateConfigRuleShrinkRequest {
	s.TagsScope = v
	return s
}

type CreateConfigRuleShrinkRequestExcludeTagsScope struct {
	// TagKey
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// TagValue
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateConfigRuleShrinkRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigRuleShrinkRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *CreateConfigRuleShrinkRequestExcludeTagsScope) SetTagKey(v string) *CreateConfigRuleShrinkRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateConfigRuleShrinkRequestExcludeTagsScope) SetTagValue(v string) *CreateConfigRuleShrinkRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type CreateConfigRuleShrinkRequestTagsScope struct {
	// TagKey
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// TagValue
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s CreateConfigRuleShrinkRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigRuleShrinkRequestTagsScope) GoString() string {
	return s.String()
}

func (s *CreateConfigRuleShrinkRequestTagsScope) SetTagKey(v string) *CreateConfigRuleShrinkRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *CreateConfigRuleShrinkRequestTagsScope) SetTagValue(v string) *CreateConfigRuleShrinkRequestTagsScope {
	s.TagValue = &v
	return s
}

type CreateConfigRuleResponseBody struct {
	// The rule ID.
	//
	// example:
	//
	// cr-5772ba41209e007b****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateConfigRuleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigRuleResponseBody) GoString() string {
	return s.String()
}

func (s *CreateConfigRuleResponseBody) SetConfigRuleId(v string) *CreateConfigRuleResponseBody {
	s.ConfigRuleId = &v
	return s
}

func (s *CreateConfigRuleResponseBody) SetRequestId(v string) *CreateConfigRuleResponseBody {
	s.RequestId = &v
	return s
}

type CreateConfigRuleResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateConfigRuleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateConfigRuleResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateConfigRuleResponse) GoString() string {
	return s.String()
}

func (s *CreateConfigRuleResponse) SetHeaders(v map[string]*string) *CreateConfigRuleResponse {
	s.Headers = v
	return s
}

func (s *CreateConfigRuleResponse) SetStatusCode(v int32) *CreateConfigRuleResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateConfigRuleResponse) SetBody(v *CreateConfigRuleResponseBody) *CreateConfigRuleResponse {
	s.Body = v
	return s
}

type CreateDeliveryChannelRequest struct {
	// The client token that is used to ensure the idempotency of the request. You can use the client to generate the token, but you must ensure that the token is unique among different requests.
	//
	// The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](https://help.aliyun.com/document_detail/25693.html).
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// Specifies whether to deliver resource change logs to the specified destination. If you set this parameter to true, Cloud Config delivers resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	//
	// 	- true
	//
	// 	- false (default)
	//
	// > This parameter is available for delivery channels of the OSS, SLS, and MNS types.
	//
	// example:
	//
	// false
	ConfigurationItemChangeNotification *bool `json:"ConfigurationItemChangeNotification,omitempty" xml:"ConfigurationItemChangeNotification,omitempty"`
	// Specifies whether to deliver scheduled resource snapshots to the OSS bucket. If the value of this parameter is true, the scheduled resource snapshots are delivered to the specified OSS bucket at 00:00:00 and 12:00:00 on a daily basis. Valid values:
	//
	// 	- true
	//
	// 	- false (default)
	//
	// > This parameter is applicable only to delivery channels of the OSS type.
	//
	// example:
	//
	// false
	ConfigurationSnapshot *bool `json:"ConfigurationSnapshot,omitempty" xml:"ConfigurationSnapshot,omitempty"`
	// The ARN of the role that you want to assign to the delivery channel. Specify the ARN in the following format: `acs:ram::{accountId}:role/aliyunserviceroleforconfig`.
	//
	// This parameter is required.
	//
	// example:
	//
	// acs:ram::100931896542****:role/aliyunserviceroleforconfig
	DeliveryChannelAssumeRoleArn *string `json:"DeliveryChannelAssumeRoleArn,omitempty" xml:"DeliveryChannelAssumeRoleArn,omitempty"`
	// The rule that you want to attach to the delivery channel. This parameter is available only for delivery channels of the MNS type.
	//
	// This parameter specifies the lowest risk level and the resource types for the events to which you want to subscribe.
	//
	// 	- The setting of the lowest risk level for the events to which you want to subscribe is in the following format: `{"filterType":"RuleRiskLevel","value":"1","multiple":false}`.
	//
	//     The `value` field indicates the lowest risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	// 	- The setting of the resource types of the events to which you want to subscribe is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//     The `values` field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// example:
	//
	// [{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]
	DeliveryChannelCondition *string `json:"DeliveryChannelCondition,omitempty" xml:"DeliveryChannelCondition,omitempty"`
	// The name of the delivery channel.
	//
	// > If you do not configure this parameter, this parameter is left empty.
	//
	// example:
	//
	// testoss
	DeliveryChannelName *string `json:"DeliveryChannelName,omitempty" xml:"DeliveryChannelName,omitempty"`
	// The Alibaba Cloud Resource Name (ARN) of the delivery destination. Valid values:
	//
	// 	- `acs:oss:{RegionId}:{accountId}:{bucketName}` if your delivery destination is an OSS bucket. Example: `acs:oss:cn-shanghai:100931896542****:new-bucket`.
	//
	// 	- `acs:mns:{RegionId}:{accountId}:/topics/{topicName}` if your delivery destination is an MNS topic. Example: `acs:mns:cn-shanghai:100931896542****:/topics/topic1`.
	//
	// 	- `acs:log:{RegionId}:{accountId}:project/{projectName}/logstore/{logstoreName}` if your delivery destination is a Log Service Logstore. Example: `acs:log:cn-shanghai:100931896542****:project/project1/logstore/logstore1`.
	//
	// This parameter is required.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	DeliveryChannelTargetArn *string `json:"DeliveryChannelTargetArn,omitempty" xml:"DeliveryChannelTargetArn,omitempty"`
	// The type of the delivery channel. Valid values:
	//
	// 	- OSS: Object Storage Service (OSS)
	//
	// 	- MNS: Message Service (MNS)
	//
	// 	- SLS: Log Service
	//
	// This parameter is required.
	//
	// example:
	//
	// OSS
	DeliveryChannelType *string `json:"DeliveryChannelType,omitempty" xml:"DeliveryChannelType,omitempty"`
	// The description of the delivery channel.
	//
	// example:
	//
	// My OSS delivery.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Specifies whether to deliver resource non-compliance events. If you set this parameter to true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are considered non-compliant. Valid values:
	//
	// 	- true
	//
	// 	- false (default)
	//
	// > This parameter is available only for delivery channels of the SLS or MNS type.
	//
	// example:
	//
	// false
	NonCompliantNotification *bool `json:"NonCompliantNotification,omitempty" xml:"NonCompliantNotification,omitempty"`
	// The ARN of the OSS bucket to which you want to transfer the delivery data when the size of the data exceeds the specified upper limit of the delivery channel. Format: `acs:oss:{RegionId}:{accountId}:{bucketName}`.
	//
	// If you do not configure this parameter, Cloud Config delivers only summary data.
	//
	// > This parameter is available only for delivery channels of the SLS or MNS type. The maximum storage size of delivery channels of the SLS type is 1 MB, and the maximum storage size of delivery channels of the MNS type is 64 KB.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	OversizedDataOSSTargetArn *string `json:"OversizedDataOSSTargetArn,omitempty" xml:"OversizedDataOSSTargetArn,omitempty"`
}

func (s CreateDeliveryChannelRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateDeliveryChannelRequest) GoString() string {
	return s.String()
}

func (s *CreateDeliveryChannelRequest) SetClientToken(v string) *CreateDeliveryChannelRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateDeliveryChannelRequest) SetConfigurationItemChangeNotification(v bool) *CreateDeliveryChannelRequest {
	s.ConfigurationItemChangeNotification = &v
	return s
}

func (s *CreateDeliveryChannelRequest) SetConfigurationSnapshot(v bool) *CreateDeliveryChannelRequest {
	s.ConfigurationSnapshot = &v
	return s
}

func (s *CreateDeliveryChannelRequest) SetDeliveryChannelAssumeRoleArn(v string) *CreateDeliveryChannelRequest {
	s.DeliveryChannelAssumeRoleArn = &v
	return s
}

func (s *CreateDeliveryChannelRequest) SetDeliveryChannelCondition(v string) *CreateDeliveryChannelRequest {
	s.DeliveryChannelCondition = &v
	return s
}

func (s *CreateDeliveryChannelRequest) SetDeliveryChannelName(v string) *CreateDeliveryChannelRequest {
	s.DeliveryChannelName = &v
	return s
}

func (s *CreateDeliveryChannelRequest) SetDeliveryChannelTargetArn(v string) *CreateDeliveryChannelRequest {
	s.DeliveryChannelTargetArn = &v
	return s
}

func (s *CreateDeliveryChannelRequest) SetDeliveryChannelType(v string) *CreateDeliveryChannelRequest {
	s.DeliveryChannelType = &v
	return s
}

func (s *CreateDeliveryChannelRequest) SetDescription(v string) *CreateDeliveryChannelRequest {
	s.Description = &v
	return s
}

func (s *CreateDeliveryChannelRequest) SetNonCompliantNotification(v bool) *CreateDeliveryChannelRequest {
	s.NonCompliantNotification = &v
	return s
}

func (s *CreateDeliveryChannelRequest) SetOversizedDataOSSTargetArn(v string) *CreateDeliveryChannelRequest {
	s.OversizedDataOSSTargetArn = &v
	return s
}

type CreateDeliveryChannelResponseBody struct {
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-8e45ff4e06a3a8****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// A7A0FFF8-0B44-40C6-8BBF-3A185EFDERTHG
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateDeliveryChannelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateDeliveryChannelResponseBody) GoString() string {
	return s.String()
}

func (s *CreateDeliveryChannelResponseBody) SetDeliveryChannelId(v string) *CreateDeliveryChannelResponseBody {
	s.DeliveryChannelId = &v
	return s
}

func (s *CreateDeliveryChannelResponseBody) SetRequestId(v string) *CreateDeliveryChannelResponseBody {
	s.RequestId = &v
	return s
}

type CreateDeliveryChannelResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateDeliveryChannelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateDeliveryChannelResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateDeliveryChannelResponse) GoString() string {
	return s.String()
}

func (s *CreateDeliveryChannelResponse) SetHeaders(v map[string]*string) *CreateDeliveryChannelResponse {
	s.Headers = v
	return s
}

func (s *CreateDeliveryChannelResponse) SetStatusCode(v int32) *CreateDeliveryChannelResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateDeliveryChannelResponse) SetBody(v *CreateDeliveryChannelResponseBody) *CreateDeliveryChannelResponse {
	s.Body = v
	return s
}

type CreateRemediationRequest struct {
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// AAAAAdDWBF2****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The rule ID.
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-8a973ac2e2be00a2****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The execution mode of the remediation template. Valid values:
	//
	// 	- NON_EXECUTION: The remediation template is not executed.
	//
	// 	- AUTO_EXECUTION: The remediation template is automatically executed.
	//
	// 	- MANUAL_EXECUTION: The remediation template is manually executed.
	//
	// 	- NOT_CONFIG: The execution mode is not specified.
	//
	// This parameter is required.
	//
	// example:
	//
	// MANUAL_EXECUTION
	InvokeType *string `json:"InvokeType,omitempty" xml:"InvokeType,omitempty"`
	// The configuration of the remediation template.
	//
	// For more information about how to obtain the remediation template configuration, see the `TemplateDefinition` response parameter provided in [ListRemediationTemplates](https://help.aliyun.com/document_detail/416781.html).
	//
	// This parameter is required.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// {"bucketName": "{resourceId}", "regionId": "{regionId}", "permissionName": "private"}
	Params *string `json:"Params,omitempty" xml:"Params,omitempty"`
	// The ID of the remediation template.
	//
	// 	- If you set the `RemediationType` parameter to `OOS`, set this parameter to the identifier of the relevant official remediation template, such as `ACS-OSS-PutBucketAcl`. For more information about how to obtain the remediation template identifier, see [ListRemediationTemplates](https://help.aliyun.com/document_detail/416781.html).
	//
	// 	- If you set the `RemediationType` parameter to `FC`, set this parameter to the Alibaba Cloud Resource Name (ARN) of the relevant Function Compute resource, such as `acs:fc:cn-hangzhou:100931896542****:services/ConfigService.LATEST/functions/test-php`.
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS-OSS-PutBucketAcl
	RemediationTemplateId *string `json:"RemediationTemplateId,omitempty" xml:"RemediationTemplateId,omitempty"`
	// The type of the remediation template. Valid values:
	//
	// 	- OOS: Operation Orchestration Service (official remediation)
	//
	// 	- FC: Function Compute (custom remediation)
	//
	// This parameter is required.
	//
	// example:
	//
	// OOS
	RemediationType *string `json:"RemediationType,omitempty" xml:"RemediationType,omitempty"`
	// The source of remediation. Valid values:
	//
	// 	- ALIYUN (default): official template.
	//
	// 	- CUSTOM: custom template.
	//
	// 	- NONE: none.
	//
	// example:
	//
	// ALIYUN
	SourceType *string `json:"SourceType,omitempty" xml:"SourceType,omitempty"`
}

func (s CreateRemediationRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateRemediationRequest) GoString() string {
	return s.String()
}

func (s *CreateRemediationRequest) SetClientToken(v string) *CreateRemediationRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateRemediationRequest) SetConfigRuleId(v string) *CreateRemediationRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *CreateRemediationRequest) SetInvokeType(v string) *CreateRemediationRequest {
	s.InvokeType = &v
	return s
}

func (s *CreateRemediationRequest) SetParams(v string) *CreateRemediationRequest {
	s.Params = &v
	return s
}

func (s *CreateRemediationRequest) SetRemediationTemplateId(v string) *CreateRemediationRequest {
	s.RemediationTemplateId = &v
	return s
}

func (s *CreateRemediationRequest) SetRemediationType(v string) *CreateRemediationRequest {
	s.RemediationType = &v
	return s
}

func (s *CreateRemediationRequest) SetSourceType(v string) *CreateRemediationRequest {
	s.SourceType = &v
	return s
}

type CreateRemediationResponseBody struct {
	// The ID of the remediation template.
	//
	// example:
	//
	// crr-909ba2d4716700eb****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// C7817373-78CB-4F9A-8AFA-E7A88E9D64A2
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateRemediationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateRemediationResponseBody) GoString() string {
	return s.String()
}

func (s *CreateRemediationResponseBody) SetRemediationId(v string) *CreateRemediationResponseBody {
	s.RemediationId = &v
	return s
}

func (s *CreateRemediationResponseBody) SetRequestId(v string) *CreateRemediationResponseBody {
	s.RequestId = &v
	return s
}

type CreateRemediationResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateRemediationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateRemediationResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateRemediationResponse) GoString() string {
	return s.String()
}

func (s *CreateRemediationResponse) SetHeaders(v map[string]*string) *CreateRemediationResponse {
	s.Headers = v
	return s
}

func (s *CreateRemediationResponse) SetStatusCode(v int32) *CreateRemediationResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateRemediationResponse) SetBody(v *CreateRemediationResponseBody) *CreateRemediationResponse {
	s.Body = v
	return s
}

type DeactiveAggregateConfigRulesRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-04b3fd170e340007****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// example:
	//
	// cp-fe416457e0d90022****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The rule ID. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// example:
	//
	// cr-5772ba41209e007b****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s DeactiveAggregateConfigRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s DeactiveAggregateConfigRulesRequest) GoString() string {
	return s.String()
}

func (s *DeactiveAggregateConfigRulesRequest) SetAggregatorId(v string) *DeactiveAggregateConfigRulesRequest {
	s.AggregatorId = &v
	return s
}

func (s *DeactiveAggregateConfigRulesRequest) SetCompliancePackId(v string) *DeactiveAggregateConfigRulesRequest {
	s.CompliancePackId = &v
	return s
}

func (s *DeactiveAggregateConfigRulesRequest) SetConfigRuleIds(v string) *DeactiveAggregateConfigRulesRequest {
	s.ConfigRuleIds = &v
	return s
}

type DeactiveAggregateConfigRulesResponseBody struct {
	// The results of the operations that are performed to disable the specified rules.
	OperateRuleResult *DeactiveAggregateConfigRulesResponseBodyOperateRuleResult `json:"OperateRuleResult,omitempty" xml:"OperateRuleResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeactiveAggregateConfigRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeactiveAggregateConfigRulesResponseBody) GoString() string {
	return s.String()
}

func (s *DeactiveAggregateConfigRulesResponseBody) SetOperateRuleResult(v *DeactiveAggregateConfigRulesResponseBodyOperateRuleResult) *DeactiveAggregateConfigRulesResponseBody {
	s.OperateRuleResult = v
	return s
}

func (s *DeactiveAggregateConfigRulesResponseBody) SetRequestId(v string) *DeactiveAggregateConfigRulesResponseBody {
	s.RequestId = &v
	return s
}

type DeactiveAggregateConfigRulesResponseBodyOperateRuleResult struct {
	// The operations that are performed to disable the rule.
	OperateRuleItemList []*DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList `json:"OperateRuleItemList,omitempty" xml:"OperateRuleItemList,omitempty" type:"Repeated"`
}

func (s DeactiveAggregateConfigRulesResponseBodyOperateRuleResult) String() string {
	return tea.Prettify(s)
}

func (s DeactiveAggregateConfigRulesResponseBodyOperateRuleResult) GoString() string {
	return s.String()
}

func (s *DeactiveAggregateConfigRulesResponseBodyOperateRuleResult) SetOperateRuleItemList(v []*DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) *DeactiveAggregateConfigRulesResponseBodyOperateRuleResult {
	s.OperateRuleItemList = v
	return s
}

type DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList struct {
	// The rule ID.
	//
	// example:
	//
	// cr-5772ba41209e007b****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The error code.
	//
	// 	- If the rule is disabled, no error code is returned.
	//
	// 	- If the rule fails to be disabled, an error code is returned. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// ConfigRuleNotExists
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// false
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) String() string {
	return tea.Prettify(s)
}

func (s DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) GoString() string {
	return s.String()
}

func (s *DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetConfigRuleId(v string) *DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ConfigRuleId = &v
	return s
}

func (s *DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetErrorCode(v string) *DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ErrorCode = &v
	return s
}

func (s *DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetSuccess(v bool) *DeactiveAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.Success = &v
	return s
}

type DeactiveAggregateConfigRulesResponse struct {
	Headers    map[string]*string                        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeactiveAggregateConfigRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeactiveAggregateConfigRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s DeactiveAggregateConfigRulesResponse) GoString() string {
	return s.String()
}

func (s *DeactiveAggregateConfigRulesResponse) SetHeaders(v map[string]*string) *DeactiveAggregateConfigRulesResponse {
	s.Headers = v
	return s
}

func (s *DeactiveAggregateConfigRulesResponse) SetStatusCode(v int32) *DeactiveAggregateConfigRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *DeactiveAggregateConfigRulesResponse) SetBody(v *DeactiveAggregateConfigRulesResponseBody) *DeactiveAggregateConfigRulesResponse {
	s.Body = v
	return s
}

type DeactiveConfigRulesRequest struct {
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// example:
	//
	// cp-fe416457e0d90022****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The ID of the rule. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// example:
	//
	// cr-19a56457e0d90058****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s DeactiveConfigRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s DeactiveConfigRulesRequest) GoString() string {
	return s.String()
}

func (s *DeactiveConfigRulesRequest) SetCompliancePackId(v string) *DeactiveConfigRulesRequest {
	s.CompliancePackId = &v
	return s
}

func (s *DeactiveConfigRulesRequest) SetConfigRuleIds(v string) *DeactiveConfigRulesRequest {
	s.ConfigRuleIds = &v
	return s
}

type DeactiveConfigRulesResponseBody struct {
	// The results of the operations that are performed to disable the specified rules.
	OperateRuleResult *DeactiveConfigRulesResponseBodyOperateRuleResult `json:"OperateRuleResult,omitempty" xml:"OperateRuleResult,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// 54FA74D9-45D4-4CA5-9BE1-97F6EA19AF5B
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeactiveConfigRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeactiveConfigRulesResponseBody) GoString() string {
	return s.String()
}

func (s *DeactiveConfigRulesResponseBody) SetOperateRuleResult(v *DeactiveConfigRulesResponseBodyOperateRuleResult) *DeactiveConfigRulesResponseBody {
	s.OperateRuleResult = v
	return s
}

func (s *DeactiveConfigRulesResponseBody) SetRequestId(v string) *DeactiveConfigRulesResponseBody {
	s.RequestId = &v
	return s
}

type DeactiveConfigRulesResponseBodyOperateRuleResult struct {
	// The operations that are performed to disable the rule.
	OperateRuleItemList []*DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList `json:"OperateRuleItemList,omitempty" xml:"OperateRuleItemList,omitempty" type:"Repeated"`
}

func (s DeactiveConfigRulesResponseBodyOperateRuleResult) String() string {
	return tea.Prettify(s)
}

func (s DeactiveConfigRulesResponseBodyOperateRuleResult) GoString() string {
	return s.String()
}

func (s *DeactiveConfigRulesResponseBodyOperateRuleResult) SetOperateRuleItemList(v []*DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) *DeactiveConfigRulesResponseBodyOperateRuleResult {
	s.OperateRuleItemList = v
	return s
}

type DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList struct {
	// The rule ID.
	//
	// example:
	//
	// cr-19a56457e0d90058****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The error code.
	//
	// 	- If the rule is disabled, no error code is returned.
	//
	// 	- If the rule fails to be disabled, an error code is returned. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// ConfigRuleCanNotDelete
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// false
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) String() string {
	return tea.Prettify(s)
}

func (s DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) GoString() string {
	return s.String()
}

func (s *DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetConfigRuleId(v string) *DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ConfigRuleId = &v
	return s
}

func (s *DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetErrorCode(v string) *DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ErrorCode = &v
	return s
}

func (s *DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetSuccess(v bool) *DeactiveConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.Success = &v
	return s
}

type DeactiveConfigRulesResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeactiveConfigRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeactiveConfigRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s DeactiveConfigRulesResponse) GoString() string {
	return s.String()
}

func (s *DeactiveConfigRulesResponse) SetHeaders(v map[string]*string) *DeactiveConfigRulesResponse {
	s.Headers = v
	return s
}

func (s *DeactiveConfigRulesResponse) SetStatusCode(v int32) *DeactiveConfigRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *DeactiveConfigRulesResponse) SetBody(v *DeactiveConfigRulesResponseBody) *DeactiveConfigRulesResponse {
	s.Body = v
	return s
}

type DeleteAggregateCompliancePacksRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-04b3fd170e340007****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the compliance package. Separate multiple compliance package IDs with commas (,).
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackIds *string `json:"CompliancePackIds,omitempty" xml:"CompliancePackIds,omitempty"`
	// Specifies whether to delete the rules in the compliance package. Valid values:
	//
	// 	- true: The rules are deleted.
	//
	// 	- false (default): The rules are not deleted.
	//
	// example:
	//
	// false
	DeleteRule *bool `json:"DeleteRule,omitempty" xml:"DeleteRule,omitempty"`
}

func (s DeleteAggregateCompliancePacksRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateCompliancePacksRequest) GoString() string {
	return s.String()
}

func (s *DeleteAggregateCompliancePacksRequest) SetAggregatorId(v string) *DeleteAggregateCompliancePacksRequest {
	s.AggregatorId = &v
	return s
}

func (s *DeleteAggregateCompliancePacksRequest) SetClientToken(v string) *DeleteAggregateCompliancePacksRequest {
	s.ClientToken = &v
	return s
}

func (s *DeleteAggregateCompliancePacksRequest) SetCompliancePackIds(v string) *DeleteAggregateCompliancePacksRequest {
	s.CompliancePackIds = &v
	return s
}

func (s *DeleteAggregateCompliancePacksRequest) SetDeleteRule(v bool) *DeleteAggregateCompliancePacksRequest {
	s.DeleteRule = &v
	return s
}

type DeleteAggregateCompliancePacksResponseBody struct {
	// The results of the delete operations.
	OperateCompliancePacksResult *DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResult `json:"OperateCompliancePacksResult,omitempty" xml:"OperateCompliancePacksResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeleteAggregateCompliancePacksResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateCompliancePacksResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteAggregateCompliancePacksResponseBody) SetOperateCompliancePacksResult(v *DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResult) *DeleteAggregateCompliancePacksResponseBody {
	s.OperateCompliancePacksResult = v
	return s
}

func (s *DeleteAggregateCompliancePacksResponseBody) SetRequestId(v string) *DeleteAggregateCompliancePacksResponseBody {
	s.RequestId = &v
	return s
}

type DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResult struct {
	// An array that contains the deleted compliance packages.
	OperateCompliancePacks []*DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks `json:"OperateCompliancePacks,omitempty" xml:"OperateCompliancePacks,omitempty" type:"Repeated"`
}

func (s DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResult) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResult) GoString() string {
	return s.String()
}

func (s *DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResult) SetOperateCompliancePacks(v []*DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) *DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResult {
	s.OperateCompliancePacks = v
	return s
}

type DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks struct {
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The error code returned.
	//
	// 	- If the compliance package is deleted, no error code is returned.
	//
	// 	- If the compliance package fails to be deleted, an error code is returned. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// CompliancePackAlreadyPending
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// example:
	//
	// false
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) GoString() string {
	return s.String()
}

func (s *DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) SetCompliancePackId(v string) *DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks {
	s.CompliancePackId = &v
	return s
}

func (s *DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) SetErrorCode(v string) *DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks {
	s.ErrorCode = &v
	return s
}

func (s *DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) SetSuccess(v bool) *DeleteAggregateCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks {
	s.Success = &v
	return s
}

type DeleteAggregateCompliancePacksResponse struct {
	Headers    map[string]*string                          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteAggregateCompliancePacksResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteAggregateCompliancePacksResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateCompliancePacksResponse) GoString() string {
	return s.String()
}

func (s *DeleteAggregateCompliancePacksResponse) SetHeaders(v map[string]*string) *DeleteAggregateCompliancePacksResponse {
	s.Headers = v
	return s
}

func (s *DeleteAggregateCompliancePacksResponse) SetStatusCode(v int32) *DeleteAggregateCompliancePacksResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteAggregateCompliancePacksResponse) SetBody(v *DeleteAggregateCompliancePacksResponseBody) *DeleteAggregateCompliancePacksResponse {
	s.Body = v
	return s
}

type DeleteAggregateConfigDeliveryChannelRequest struct {
	// The ID of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-23c6626622af0041****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the delivery channel.
	//
	// For more information about how to obtain the ID of a delivery channel, see [ListAggregateConfigDeliveryChannels](https://help.aliyun.com/document_detail/429842.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cdc-38c3013b46c9002c****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
}

func (s DeleteAggregateConfigDeliveryChannelRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateConfigDeliveryChannelRequest) GoString() string {
	return s.String()
}

func (s *DeleteAggregateConfigDeliveryChannelRequest) SetAggregatorId(v string) *DeleteAggregateConfigDeliveryChannelRequest {
	s.AggregatorId = &v
	return s
}

func (s *DeleteAggregateConfigDeliveryChannelRequest) SetDeliveryChannelId(v string) *DeleteAggregateConfigDeliveryChannelRequest {
	s.DeliveryChannelId = &v
	return s
}

type DeleteAggregateConfigDeliveryChannelResponseBody struct {
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-38c3013b46c9002c****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// FCC2F05C-F672-5665-8102-0020DF66B9B9
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeleteAggregateConfigDeliveryChannelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateConfigDeliveryChannelResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteAggregateConfigDeliveryChannelResponseBody) SetDeliveryChannelId(v string) *DeleteAggregateConfigDeliveryChannelResponseBody {
	s.DeliveryChannelId = &v
	return s
}

func (s *DeleteAggregateConfigDeliveryChannelResponseBody) SetRequestId(v string) *DeleteAggregateConfigDeliveryChannelResponseBody {
	s.RequestId = &v
	return s
}

type DeleteAggregateConfigDeliveryChannelResponse struct {
	Headers    map[string]*string                                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteAggregateConfigDeliveryChannelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteAggregateConfigDeliveryChannelResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateConfigDeliveryChannelResponse) GoString() string {
	return s.String()
}

func (s *DeleteAggregateConfigDeliveryChannelResponse) SetHeaders(v map[string]*string) *DeleteAggregateConfigDeliveryChannelResponse {
	s.Headers = v
	return s
}

func (s *DeleteAggregateConfigDeliveryChannelResponse) SetStatusCode(v int32) *DeleteAggregateConfigDeliveryChannelResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteAggregateConfigDeliveryChannelResponse) SetBody(v *DeleteAggregateConfigDeliveryChannelResponseBody) *DeleteAggregateConfigDeliveryChannelResponse {
	s.Body = v
	return s
}

type DeleteAggregateConfigRulesRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The rule ID. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-4e3d626622af0080****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s DeleteAggregateConfigRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateConfigRulesRequest) GoString() string {
	return s.String()
}

func (s *DeleteAggregateConfigRulesRequest) SetAggregatorId(v string) *DeleteAggregateConfigRulesRequest {
	s.AggregatorId = &v
	return s
}

func (s *DeleteAggregateConfigRulesRequest) SetConfigRuleIds(v string) *DeleteAggregateConfigRulesRequest {
	s.ConfigRuleIds = &v
	return s
}

type DeleteAggregateConfigRulesResponseBody struct {
	// The results of the delete operations.
	OperateRuleResult *DeleteAggregateConfigRulesResponseBodyOperateRuleResult `json:"OperateRuleResult,omitempty" xml:"OperateRuleResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeleteAggregateConfigRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateConfigRulesResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteAggregateConfigRulesResponseBody) SetOperateRuleResult(v *DeleteAggregateConfigRulesResponseBodyOperateRuleResult) *DeleteAggregateConfigRulesResponseBody {
	s.OperateRuleResult = v
	return s
}

func (s *DeleteAggregateConfigRulesResponseBody) SetRequestId(v string) *DeleteAggregateConfigRulesResponseBody {
	s.RequestId = &v
	return s
}

type DeleteAggregateConfigRulesResponseBodyOperateRuleResult struct {
	// The details of the result.
	OperateRuleItemList []*DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList `json:"OperateRuleItemList,omitempty" xml:"OperateRuleItemList,omitempty" type:"Repeated"`
}

func (s DeleteAggregateConfigRulesResponseBodyOperateRuleResult) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateConfigRulesResponseBodyOperateRuleResult) GoString() string {
	return s.String()
}

func (s *DeleteAggregateConfigRulesResponseBodyOperateRuleResult) SetOperateRuleItemList(v []*DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) *DeleteAggregateConfigRulesResponseBodyOperateRuleResult {
	s.OperateRuleItemList = v
	return s
}

type DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList struct {
	// The rule ID.
	//
	// example:
	//
	// cr-4e3d626622af0080****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The error code returned.
	//
	// 	- If the rule is deleted, no error code is returned.
	//
	// 	- If the rule fails to be deleted, an error code is returned. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// ConfigRuleCanNotDelete
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// example:
	//
	// false
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) GoString() string {
	return s.String()
}

func (s *DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetConfigRuleId(v string) *DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ConfigRuleId = &v
	return s
}

func (s *DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetErrorCode(v string) *DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ErrorCode = &v
	return s
}

func (s *DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetSuccess(v bool) *DeleteAggregateConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.Success = &v
	return s
}

type DeleteAggregateConfigRulesResponse struct {
	Headers    map[string]*string                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteAggregateConfigRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteAggregateConfigRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateConfigRulesResponse) GoString() string {
	return s.String()
}

func (s *DeleteAggregateConfigRulesResponse) SetHeaders(v map[string]*string) *DeleteAggregateConfigRulesResponse {
	s.Headers = v
	return s
}

func (s *DeleteAggregateConfigRulesResponse) SetStatusCode(v int32) *DeleteAggregateConfigRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteAggregateConfigRulesResponse) SetBody(v *DeleteAggregateConfigRulesResponseBody) *DeleteAggregateConfigRulesResponse {
	s.Body = v
	return s
}

type DeleteAggregateRemediationsRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-6b4a626622af0012****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the remediation template. Separate multiple remediation template IDs with commas (,).
	//
	// For more information about how to obtain the ID of a remediation template, see [ListAggregateRemediations](https://help.aliyun.com/document_detail/270036.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// crr-909ba2d4716700eb****
	RemediationIds *string `json:"RemediationIds,omitempty" xml:"RemediationIds,omitempty"`
}

func (s DeleteAggregateRemediationsRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateRemediationsRequest) GoString() string {
	return s.String()
}

func (s *DeleteAggregateRemediationsRequest) SetAggregatorId(v string) *DeleteAggregateRemediationsRequest {
	s.AggregatorId = &v
	return s
}

func (s *DeleteAggregateRemediationsRequest) SetRemediationIds(v string) *DeleteAggregateRemediationsRequest {
	s.RemediationIds = &v
	return s
}

type DeleteAggregateRemediationsResponseBody struct {
	// The results of the delete operation.
	RemediationDeleteResults []*DeleteAggregateRemediationsResponseBodyRemediationDeleteResults `json:"RemediationDeleteResults,omitempty" xml:"RemediationDeleteResults,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 4BE28FB1-616A-5586-82E4-F34FB2AF7441
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeleteAggregateRemediationsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateRemediationsResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteAggregateRemediationsResponseBody) SetRemediationDeleteResults(v []*DeleteAggregateRemediationsResponseBodyRemediationDeleteResults) *DeleteAggregateRemediationsResponseBody {
	s.RemediationDeleteResults = v
	return s
}

func (s *DeleteAggregateRemediationsResponseBody) SetRequestId(v string) *DeleteAggregateRemediationsResponseBody {
	s.RequestId = &v
	return s
}

type DeleteAggregateRemediationsResponseBodyRemediationDeleteResults struct {
	// The error code returned.
	//
	// 	- If the remediation template is deleted, no error code is returned.
	//
	// 	- If the remediation template fails to be deleted, an error code is returned. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// RemediationConfigNotExist
	ErrorMessage *string `json:"ErrorMessage,omitempty" xml:"ErrorMessage,omitempty"`
	// The ID of the remediation template.
	//
	// example:
	//
	// crr-909ba2d4716700eb****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeleteAggregateRemediationsResponseBodyRemediationDeleteResults) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateRemediationsResponseBodyRemediationDeleteResults) GoString() string {
	return s.String()
}

func (s *DeleteAggregateRemediationsResponseBodyRemediationDeleteResults) SetErrorMessage(v string) *DeleteAggregateRemediationsResponseBodyRemediationDeleteResults {
	s.ErrorMessage = &v
	return s
}

func (s *DeleteAggregateRemediationsResponseBodyRemediationDeleteResults) SetRemediationId(v string) *DeleteAggregateRemediationsResponseBodyRemediationDeleteResults {
	s.RemediationId = &v
	return s
}

func (s *DeleteAggregateRemediationsResponseBodyRemediationDeleteResults) SetSuccess(v bool) *DeleteAggregateRemediationsResponseBodyRemediationDeleteResults {
	s.Success = &v
	return s
}

type DeleteAggregateRemediationsResponse struct {
	Headers    map[string]*string                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteAggregateRemediationsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteAggregateRemediationsResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregateRemediationsResponse) GoString() string {
	return s.String()
}

func (s *DeleteAggregateRemediationsResponse) SetHeaders(v map[string]*string) *DeleteAggregateRemediationsResponse {
	s.Headers = v
	return s
}

func (s *DeleteAggregateRemediationsResponse) SetStatusCode(v int32) *DeleteAggregateRemediationsResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteAggregateRemediationsResponse) SetBody(v *DeleteAggregateRemediationsResponseBody) *DeleteAggregateRemediationsResponse {
	s.Body = v
	return s
}

type DeleteAggregatorsRequest struct {
	// The ID of the account group. Separate multiple IDs with commas (,).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-9190626622af00a9****
	AggregatorIds *string `json:"AggregatorIds,omitempty" xml:"AggregatorIds,omitempty"`
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// AAAAAdDWBF2****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
}

func (s DeleteAggregatorsRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregatorsRequest) GoString() string {
	return s.String()
}

func (s *DeleteAggregatorsRequest) SetAggregatorIds(v string) *DeleteAggregatorsRequest {
	s.AggregatorIds = &v
	return s
}

func (s *DeleteAggregatorsRequest) SetClientToken(v string) *DeleteAggregatorsRequest {
	s.ClientToken = &v
	return s
}

type DeleteAggregatorsResponseBody struct {
	// The returned result.
	OperateAggregatorsResult *DeleteAggregatorsResponseBodyOperateAggregatorsResult `json:"OperateAggregatorsResult,omitempty" xml:"OperateAggregatorsResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 8195B664-9565-4685-89AC-8B5F04B44B92
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeleteAggregatorsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregatorsResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteAggregatorsResponseBody) SetOperateAggregatorsResult(v *DeleteAggregatorsResponseBodyOperateAggregatorsResult) *DeleteAggregatorsResponseBody {
	s.OperateAggregatorsResult = v
	return s
}

func (s *DeleteAggregatorsResponseBody) SetRequestId(v string) *DeleteAggregatorsResponseBody {
	s.RequestId = &v
	return s
}

type DeleteAggregatorsResponseBodyOperateAggregatorsResult struct {
	// The details of the account group.
	OperateAggregators []*DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators `json:"OperateAggregators,omitempty" xml:"OperateAggregators,omitempty" type:"Repeated"`
}

func (s DeleteAggregatorsResponseBodyOperateAggregatorsResult) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregatorsResponseBodyOperateAggregatorsResult) GoString() string {
	return s.String()
}

func (s *DeleteAggregatorsResponseBodyOperateAggregatorsResult) SetOperateAggregators(v []*DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators) *DeleteAggregatorsResponseBodyOperateAggregatorsResult {
	s.OperateAggregators = v
	return s
}

type DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators struct {
	// The ID of the account group.
	//
	// example:
	//
	// ca-dacf86d8314e00eb****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The error code returned.
	//
	// > No error code is returned for the account group if the account group is deleted.
	//
	// example:
	//
	// AccountNotExisted
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// example:
	//
	// false
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators) GoString() string {
	return s.String()
}

func (s *DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators) SetAggregatorId(v string) *DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators {
	s.AggregatorId = &v
	return s
}

func (s *DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators) SetErrorCode(v string) *DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators {
	s.ErrorCode = &v
	return s
}

func (s *DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators) SetSuccess(v bool) *DeleteAggregatorsResponseBodyOperateAggregatorsResultOperateAggregators {
	s.Success = &v
	return s
}

type DeleteAggregatorsResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteAggregatorsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteAggregatorsResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteAggregatorsResponse) GoString() string {
	return s.String()
}

func (s *DeleteAggregatorsResponse) SetHeaders(v map[string]*string) *DeleteAggregatorsResponse {
	s.Headers = v
	return s
}

func (s *DeleteAggregatorsResponse) SetStatusCode(v int32) *DeleteAggregatorsResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteAggregatorsResponse) SetBody(v *DeleteAggregatorsResponseBody) *DeleteAggregatorsResponse {
	s.Body = v
	return s
}

type DeleteCompliancePacksRequest struct {
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// AAAAAdDWBF2****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the compliance package. Separate multiple compliance package IDs with commas (,).
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackIds *string `json:"CompliancePackIds,omitempty" xml:"CompliancePackIds,omitempty"`
	// Specifies whether to delete the rules in the compliance package. Valid values:
	//
	// 	- true: The rules are deleted.
	//
	// 	- false (default): The rules are not deleted.
	//
	// example:
	//
	// false
	DeleteRule *bool `json:"DeleteRule,omitempty" xml:"DeleteRule,omitempty"`
}

func (s DeleteCompliancePacksRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteCompliancePacksRequest) GoString() string {
	return s.String()
}

func (s *DeleteCompliancePacksRequest) SetClientToken(v string) *DeleteCompliancePacksRequest {
	s.ClientToken = &v
	return s
}

func (s *DeleteCompliancePacksRequest) SetCompliancePackIds(v string) *DeleteCompliancePacksRequest {
	s.CompliancePackIds = &v
	return s
}

func (s *DeleteCompliancePacksRequest) SetDeleteRule(v bool) *DeleteCompliancePacksRequest {
	s.DeleteRule = &v
	return s
}

type DeleteCompliancePacksResponseBody struct {
	// The returned result.
	OperateCompliancePacksResult *DeleteCompliancePacksResponseBodyOperateCompliancePacksResult `json:"OperateCompliancePacksResult,omitempty" xml:"OperateCompliancePacksResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeleteCompliancePacksResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteCompliancePacksResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteCompliancePacksResponseBody) SetOperateCompliancePacksResult(v *DeleteCompliancePacksResponseBodyOperateCompliancePacksResult) *DeleteCompliancePacksResponseBody {
	s.OperateCompliancePacksResult = v
	return s
}

func (s *DeleteCompliancePacksResponseBody) SetRequestId(v string) *DeleteCompliancePacksResponseBody {
	s.RequestId = &v
	return s
}

type DeleteCompliancePacksResponseBodyOperateCompliancePacksResult struct {
	// An array that contains compliance packages that are deleted.
	OperateCompliancePacks []*DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks `json:"OperateCompliancePacks,omitempty" xml:"OperateCompliancePacks,omitempty" type:"Repeated"`
}

func (s DeleteCompliancePacksResponseBodyOperateCompliancePacksResult) String() string {
	return tea.Prettify(s)
}

func (s DeleteCompliancePacksResponseBodyOperateCompliancePacksResult) GoString() string {
	return s.String()
}

func (s *DeleteCompliancePacksResponseBodyOperateCompliancePacksResult) SetOperateCompliancePacks(v []*DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) *DeleteCompliancePacksResponseBodyOperateCompliancePacksResult {
	s.OperateCompliancePacks = v
	return s
}

type DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks struct {
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The error code returned.
	//
	// 	- If the compliance package is deleted, no error code is returned.
	//
	// 	- If the compliance package fails to be deleted, an error code is returned. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// CompliancePackAlreadyPending
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) String() string {
	return tea.Prettify(s)
}

func (s DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) GoString() string {
	return s.String()
}

func (s *DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) SetCompliancePackId(v string) *DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks {
	s.CompliancePackId = &v
	return s
}

func (s *DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) SetErrorCode(v string) *DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks {
	s.ErrorCode = &v
	return s
}

func (s *DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks) SetSuccess(v bool) *DeleteCompliancePacksResponseBodyOperateCompliancePacksResultOperateCompliancePacks {
	s.Success = &v
	return s
}

type DeleteCompliancePacksResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteCompliancePacksResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteCompliancePacksResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteCompliancePacksResponse) GoString() string {
	return s.String()
}

func (s *DeleteCompliancePacksResponse) SetHeaders(v map[string]*string) *DeleteCompliancePacksResponse {
	s.Headers = v
	return s
}

func (s *DeleteCompliancePacksResponse) SetStatusCode(v int32) *DeleteCompliancePacksResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteCompliancePacksResponse) SetBody(v *DeleteCompliancePacksResponseBody) *DeleteCompliancePacksResponse {
	s.Body = v
	return s
}

type DeleteConfigDeliveryChannelRequest struct {
	// The ID of the delivery channel.
	//
	// For more information about how to obtain the ID of a delivery channel, see [DescribeDeliveryChannels](https://help.aliyun.com/document_detail/429841.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cdc-38c32e87cadb002c****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
}

func (s DeleteConfigDeliveryChannelRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteConfigDeliveryChannelRequest) GoString() string {
	return s.String()
}

func (s *DeleteConfigDeliveryChannelRequest) SetDeliveryChannelId(v string) *DeleteConfigDeliveryChannelRequest {
	s.DeliveryChannelId = &v
	return s
}

type DeleteConfigDeliveryChannelResponseBody struct {
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-38c32e87cadb002c****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 35F1DA37-ECB5-54E9-AC22-0D9111A665AA
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeleteConfigDeliveryChannelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteConfigDeliveryChannelResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteConfigDeliveryChannelResponseBody) SetDeliveryChannelId(v string) *DeleteConfigDeliveryChannelResponseBody {
	s.DeliveryChannelId = &v
	return s
}

func (s *DeleteConfigDeliveryChannelResponseBody) SetRequestId(v string) *DeleteConfigDeliveryChannelResponseBody {
	s.RequestId = &v
	return s
}

type DeleteConfigDeliveryChannelResponse struct {
	Headers    map[string]*string                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteConfigDeliveryChannelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteConfigDeliveryChannelResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteConfigDeliveryChannelResponse) GoString() string {
	return s.String()
}

func (s *DeleteConfigDeliveryChannelResponse) SetHeaders(v map[string]*string) *DeleteConfigDeliveryChannelResponse {
	s.Headers = v
	return s
}

func (s *DeleteConfigDeliveryChannelResponse) SetStatusCode(v int32) *DeleteConfigDeliveryChannelResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteConfigDeliveryChannelResponse) SetBody(v *DeleteConfigDeliveryChannelResponseBody) *DeleteConfigDeliveryChannelResponse {
	s.Body = v
	return s
}

type DeleteConfigRulesRequest struct {
	// The rule IDs. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/609222.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-9908626622af0035****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s DeleteConfigRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteConfigRulesRequest) GoString() string {
	return s.String()
}

func (s *DeleteConfigRulesRequest) SetConfigRuleIds(v string) *DeleteConfigRulesRequest {
	s.ConfigRuleIds = &v
	return s
}

type DeleteConfigRulesResponseBody struct {
	// The results of the delete operations.
	OperateRuleResult *DeleteConfigRulesResponseBodyOperateRuleResult `json:"OperateRuleResult,omitempty" xml:"OperateRuleResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6721BBD3-F2A6-5349-9051-EE0111036D3F
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeleteConfigRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteConfigRulesResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteConfigRulesResponseBody) SetOperateRuleResult(v *DeleteConfigRulesResponseBodyOperateRuleResult) *DeleteConfigRulesResponseBody {
	s.OperateRuleResult = v
	return s
}

func (s *DeleteConfigRulesResponseBody) SetRequestId(v string) *DeleteConfigRulesResponseBody {
	s.RequestId = &v
	return s
}

type DeleteConfigRulesResponseBodyOperateRuleResult struct {
	// The result of the delete operation.
	OperateRuleItemList []*DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList `json:"OperateRuleItemList,omitempty" xml:"OperateRuleItemList,omitempty" type:"Repeated"`
}

func (s DeleteConfigRulesResponseBodyOperateRuleResult) String() string {
	return tea.Prettify(s)
}

func (s DeleteConfigRulesResponseBodyOperateRuleResult) GoString() string {
	return s.String()
}

func (s *DeleteConfigRulesResponseBodyOperateRuleResult) SetOperateRuleItemList(v []*DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) *DeleteConfigRulesResponseBodyOperateRuleResult {
	s.OperateRuleItemList = v
	return s
}

type DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList struct {
	// The rule ID.
	//
	// example:
	//
	// cr-9908626622af0035****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The error code.
	//
	// 	- If the rule is disabled, no error code is returned.
	//
	// 	- If the rule fails to be disabled, an error code is returned. For more information about error codes, see [Error codes](https://api.alibabacloud.com/document/Config/2020-09-07/errorCode).
	//
	// example:
	//
	// ConfigRuleCanNotDelete
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// false
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) String() string {
	return tea.Prettify(s)
}

func (s DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) GoString() string {
	return s.String()
}

func (s *DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetConfigRuleId(v string) *DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ConfigRuleId = &v
	return s
}

func (s *DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetErrorCode(v string) *DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.ErrorCode = &v
	return s
}

func (s *DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList) SetSuccess(v bool) *DeleteConfigRulesResponseBodyOperateRuleResultOperateRuleItemList {
	s.Success = &v
	return s
}

type DeleteConfigRulesResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteConfigRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteConfigRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteConfigRulesResponse) GoString() string {
	return s.String()
}

func (s *DeleteConfigRulesResponse) SetHeaders(v map[string]*string) *DeleteConfigRulesResponse {
	s.Headers = v
	return s
}

func (s *DeleteConfigRulesResponse) SetStatusCode(v int32) *DeleteConfigRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteConfigRulesResponse) SetBody(v *DeleteConfigRulesResponseBody) *DeleteConfigRulesResponse {
	s.Body = v
	return s
}

type DeleteRemediationsRequest struct {
	// The ID of the remediation template. Separate multiple remediation template IDs with commas (,).
	//
	// For more information about how to obtain the ID of a remediation template, see [ListRemediations](https://help.aliyun.com/document_detail/270772.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// crr-909ba2d4716700eb****
	RemediationIds *string `json:"RemediationIds,omitempty" xml:"RemediationIds,omitempty"`
}

func (s DeleteRemediationsRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteRemediationsRequest) GoString() string {
	return s.String()
}

func (s *DeleteRemediationsRequest) SetRemediationIds(v string) *DeleteRemediationsRequest {
	s.RemediationIds = &v
	return s
}

type DeleteRemediationsResponseBody struct {
	// The returned result.
	RemediationDeleteResults []*DeleteRemediationsResponseBodyRemediationDeleteResults `json:"RemediationDeleteResults,omitempty" xml:"RemediationDeleteResults,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 4BE28FB1-616A-5586-82E4-F34FB2AF7441
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeleteRemediationsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteRemediationsResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteRemediationsResponseBody) SetRemediationDeleteResults(v []*DeleteRemediationsResponseBodyRemediationDeleteResults) *DeleteRemediationsResponseBody {
	s.RemediationDeleteResults = v
	return s
}

func (s *DeleteRemediationsResponseBody) SetRequestId(v string) *DeleteRemediationsResponseBody {
	s.RequestId = &v
	return s
}

type DeleteRemediationsResponseBodyRemediationDeleteResults struct {
	// The error code returned.
	//
	// 	- If the remediation template is deleted, no error code is returned.
	//
	// 	- If the remediation template fails to be deleted, an error code is returned. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// RemediationConfigNotExist
	ErrorMessage *string `json:"ErrorMessage,omitempty" xml:"ErrorMessage,omitempty"`
	// The ID of the remediation template.
	//
	// example:
	//
	// crr-909ba2d4716700eb****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeleteRemediationsResponseBodyRemediationDeleteResults) String() string {
	return tea.Prettify(s)
}

func (s DeleteRemediationsResponseBodyRemediationDeleteResults) GoString() string {
	return s.String()
}

func (s *DeleteRemediationsResponseBodyRemediationDeleteResults) SetErrorMessage(v string) *DeleteRemediationsResponseBodyRemediationDeleteResults {
	s.ErrorMessage = &v
	return s
}

func (s *DeleteRemediationsResponseBodyRemediationDeleteResults) SetRemediationId(v string) *DeleteRemediationsResponseBodyRemediationDeleteResults {
	s.RemediationId = &v
	return s
}

func (s *DeleteRemediationsResponseBodyRemediationDeleteResults) SetSuccess(v bool) *DeleteRemediationsResponseBodyRemediationDeleteResults {
	s.Success = &v
	return s
}

type DeleteRemediationsResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteRemediationsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteRemediationsResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteRemediationsResponse) GoString() string {
	return s.String()
}

func (s *DeleteRemediationsResponse) SetHeaders(v map[string]*string) *DeleteRemediationsResponse {
	s.Headers = v
	return s
}

func (s *DeleteRemediationsResponse) SetStatusCode(v int32) *DeleteRemediationsResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteRemediationsResponse) SetBody(v *DeleteRemediationsResponseBody) *DeleteRemediationsResponse {
	s.Body = v
	return s
}

type DescribeRemediationRequest struct {
	// The rule ID.
	//
	// example:
	//
	// cr-3184626622af003****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The ID of the remediation configuration.
	//
	// example:
	//
	// crr-f381cf0c1c2f004e****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
}

func (s DescribeRemediationRequest) String() string {
	return tea.Prettify(s)
}

func (s DescribeRemediationRequest) GoString() string {
	return s.String()
}

func (s *DescribeRemediationRequest) SetConfigRuleId(v string) *DescribeRemediationRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *DescribeRemediationRequest) SetRemediationId(v string) *DescribeRemediationRequest {
	s.RemediationId = &v
	return s
}

type DescribeRemediationResponseBody struct {
	// The details of the remediation configuration.
	Remediation *DescribeRemediationResponseBodyRemediation `json:"Remediation,omitempty" xml:"Remediation,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 79BE07A7-46A5-5D3C-B378-0ACDA979****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DescribeRemediationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DescribeRemediationResponseBody) GoString() string {
	return s.String()
}

func (s *DescribeRemediationResponseBody) SetRemediation(v *DescribeRemediationResponseBodyRemediation) *DescribeRemediationResponseBody {
	s.Remediation = v
	return s
}

func (s *DescribeRemediationResponseBody) SetRequestId(v string) *DescribeRemediationResponseBody {
	s.RequestId = &v
	return s
}

type DescribeRemediationResponseBodyRemediation struct {
	// The ID of the Alibaba Cloud account.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The rule ID.
	//
	// example:
	//
	// cr-3184626622af003****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The execution mode of the remediation template. Valid values:
	//
	// 	- NON_EXECUTION: The remediation template was not executed.
	//
	// 	- AUTO_EXECUTION: The remediation template was automatically executed.
	//
	// 	- MANUAL_EXECUTION: The remediation template was manually executed.
	//
	// 	- NOT_CONFIG: The execution mode was not specified.
	//
	// example:
	//
	// AUTO_EXECUTION
	InvokeType *string `json:"InvokeType,omitempty" xml:"InvokeType,omitempty"`
	// The record ID of the last successful execution of the remediation template.
	//
	// example:
	//
	// bd7629fb-cac8-42fe-bcb1-e362c5a6****
	LastSuccessfulInvocationId *string `json:"LastSuccessfulInvocationId,omitempty" xml:"LastSuccessfulInvocationId,omitempty"`
	// The timestamp of the last successful execution of the remediation template. Unit: milliseconds.
	//
	// example:
	//
	// 1625451393589
	LastSuccessfulInvocationTime *int64 `json:"LastSuccessfulInvocationTime,omitempty" xml:"LastSuccessfulInvocationTime,omitempty"`
	// The mode of the last successful execution of the remediation template. Valid values:
	//
	// 	- NON_EXECUTION: The remediation template was not executed.
	//
	// 	- AUTO_EXECUTION: The remediation template was automatically executed.
	//
	// 	- MANUAL_EXECUTION: The remediation template was manually executed.
	//
	// 	- NOT_CONFIG: The execution mode was not specified.
	//
	// example:
	//
	// AUTO_EXECUTION
	LastSuccessfulInvocationType *string `json:"LastSuccessfulInvocationType,omitempty" xml:"LastSuccessfulInvocationType,omitempty"`
	// The ID of the remediation configuration.
	//
	// example:
	//
	// crr-f381cf0c1c2f004e****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// The converted configuration of the remediation template. This parameter is returned only for an OOS remediation template.
	//
	// This parameter is required.
	//
	// example:
	//
	// {"bucketName": "{resourceId}", "regionId": "{regionId}", "permissionName": "private"}
	RemediationOriginParams *string `json:"RemediationOriginParams,omitempty" xml:"RemediationOriginParams,omitempty"`
	// The source of the remediation template. Valid values:
	//
	// 	- ALIYUN: official template
	//
	// 	- CUSTOM: custom template
	//
	// 	- NONE: none
	//
	// example:
	//
	// ALIYUN
	RemediationSourceType *string `json:"RemediationSourceType,omitempty" xml:"RemediationSourceType,omitempty"`
	// The ID of the remediation template.
	//
	// example:
	//
	// ACS-OSS-PutBucketAcl
	RemediationTemplateId *string `json:"RemediationTemplateId,omitempty" xml:"RemediationTemplateId,omitempty"`
	// The type of the remediation template. Valid values:
	//
	// 	- OOS: Operation Orchestration Service (official remediation)
	//
	// 	- FC: Function Compute (custom remediation)
	//
	// example:
	//
	// OOS
	RemediationType *string `json:"RemediationType,omitempty" xml:"RemediationType,omitempty"`
}

func (s DescribeRemediationResponseBodyRemediation) String() string {
	return tea.Prettify(s)
}

func (s DescribeRemediationResponseBodyRemediation) GoString() string {
	return s.String()
}

func (s *DescribeRemediationResponseBodyRemediation) SetAccountId(v int64) *DescribeRemediationResponseBodyRemediation {
	s.AccountId = &v
	return s
}

func (s *DescribeRemediationResponseBodyRemediation) SetConfigRuleId(v string) *DescribeRemediationResponseBodyRemediation {
	s.ConfigRuleId = &v
	return s
}

func (s *DescribeRemediationResponseBodyRemediation) SetInvokeType(v string) *DescribeRemediationResponseBodyRemediation {
	s.InvokeType = &v
	return s
}

func (s *DescribeRemediationResponseBodyRemediation) SetLastSuccessfulInvocationId(v string) *DescribeRemediationResponseBodyRemediation {
	s.LastSuccessfulInvocationId = &v
	return s
}

func (s *DescribeRemediationResponseBodyRemediation) SetLastSuccessfulInvocationTime(v int64) *DescribeRemediationResponseBodyRemediation {
	s.LastSuccessfulInvocationTime = &v
	return s
}

func (s *DescribeRemediationResponseBodyRemediation) SetLastSuccessfulInvocationType(v string) *DescribeRemediationResponseBodyRemediation {
	s.LastSuccessfulInvocationType = &v
	return s
}

func (s *DescribeRemediationResponseBodyRemediation) SetRemediationId(v string) *DescribeRemediationResponseBodyRemediation {
	s.RemediationId = &v
	return s
}

func (s *DescribeRemediationResponseBodyRemediation) SetRemediationOriginParams(v string) *DescribeRemediationResponseBodyRemediation {
	s.RemediationOriginParams = &v
	return s
}

func (s *DescribeRemediationResponseBodyRemediation) SetRemediationSourceType(v string) *DescribeRemediationResponseBodyRemediation {
	s.RemediationSourceType = &v
	return s
}

func (s *DescribeRemediationResponseBodyRemediation) SetRemediationTemplateId(v string) *DescribeRemediationResponseBodyRemediation {
	s.RemediationTemplateId = &v
	return s
}

func (s *DescribeRemediationResponseBodyRemediation) SetRemediationType(v string) *DescribeRemediationResponseBodyRemediation {
	s.RemediationType = &v
	return s
}

type DescribeRemediationResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DescribeRemediationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DescribeRemediationResponse) String() string {
	return tea.Prettify(s)
}

func (s DescribeRemediationResponse) GoString() string {
	return s.String()
}

func (s *DescribeRemediationResponse) SetHeaders(v map[string]*string) *DescribeRemediationResponse {
	s.Headers = v
	return s
}

func (s *DescribeRemediationResponse) SetStatusCode(v int32) *DescribeRemediationResponse {
	s.StatusCode = &v
	return s
}

func (s *DescribeRemediationResponse) SetBody(v *DescribeRemediationResponseBody) *DescribeRemediationResponse {
	s.Body = v
	return s
}

type DetachAggregateConfigRuleToCompliancePackRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-75b4626622af00c3****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-5bb1626622af00bd****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The rule IDs. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-a124626622af00e7****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s DetachAggregateConfigRuleToCompliancePackRequest) String() string {
	return tea.Prettify(s)
}

func (s DetachAggregateConfigRuleToCompliancePackRequest) GoString() string {
	return s.String()
}

func (s *DetachAggregateConfigRuleToCompliancePackRequest) SetAggregatorId(v string) *DetachAggregateConfigRuleToCompliancePackRequest {
	s.AggregatorId = &v
	return s
}

func (s *DetachAggregateConfigRuleToCompliancePackRequest) SetCompliancePackId(v string) *DetachAggregateConfigRuleToCompliancePackRequest {
	s.CompliancePackId = &v
	return s
}

func (s *DetachAggregateConfigRuleToCompliancePackRequest) SetConfigRuleIds(v string) *DetachAggregateConfigRuleToCompliancePackRequest {
	s.ConfigRuleIds = &v
	return s
}

type DetachAggregateConfigRuleToCompliancePackResponseBody struct {
	// The results of the operations to remove one or more rules.
	OperateRuleResult *DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult `json:"OperateRuleResult,omitempty" xml:"OperateRuleResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB12A
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DetachAggregateConfigRuleToCompliancePackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DetachAggregateConfigRuleToCompliancePackResponseBody) GoString() string {
	return s.String()
}

func (s *DetachAggregateConfigRuleToCompliancePackResponseBody) SetOperateRuleResult(v *DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult) *DetachAggregateConfigRuleToCompliancePackResponseBody {
	s.OperateRuleResult = v
	return s
}

func (s *DetachAggregateConfigRuleToCompliancePackResponseBody) SetRequestId(v string) *DetachAggregateConfigRuleToCompliancePackResponseBody {
	s.RequestId = &v
	return s
}

type DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult struct {
	// The result of the operation to remove the rule.
	OperateRuleItemList []*DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList `json:"OperateRuleItemList,omitempty" xml:"OperateRuleItemList,omitempty" type:"Repeated"`
}

func (s DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult) String() string {
	return tea.Prettify(s)
}

func (s DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult) GoString() string {
	return s.String()
}

func (s *DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult) SetOperateRuleItemList(v []*DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) *DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResult {
	s.OperateRuleItemList = v
	return s
}

type DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList struct {
	// The rule ID.
	//
	// example:
	//
	// cr-a124626622af00e7****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The error code.
	//
	// 	- This parameter is empty if the rule is removed from the compliance package.
	//
	// 	- An error code is returned if the rule fails to be removed from the compliance package. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// ConfigRuleNotExists
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) String() string {
	return tea.Prettify(s)
}

func (s DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) GoString() string {
	return s.String()
}

func (s *DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetConfigRuleId(v string) *DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.ConfigRuleId = &v
	return s
}

func (s *DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetErrorCode(v string) *DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.ErrorCode = &v
	return s
}

func (s *DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetSuccess(v bool) *DetachAggregateConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.Success = &v
	return s
}

type DetachAggregateConfigRuleToCompliancePackResponse struct {
	Headers    map[string]*string                                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DetachAggregateConfigRuleToCompliancePackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DetachAggregateConfigRuleToCompliancePackResponse) String() string {
	return tea.Prettify(s)
}

func (s DetachAggregateConfigRuleToCompliancePackResponse) GoString() string {
	return s.String()
}

func (s *DetachAggregateConfigRuleToCompliancePackResponse) SetHeaders(v map[string]*string) *DetachAggregateConfigRuleToCompliancePackResponse {
	s.Headers = v
	return s
}

func (s *DetachAggregateConfigRuleToCompliancePackResponse) SetStatusCode(v int32) *DetachAggregateConfigRuleToCompliancePackResponse {
	s.StatusCode = &v
	return s
}

func (s *DetachAggregateConfigRuleToCompliancePackResponse) SetBody(v *DetachAggregateConfigRuleToCompliancePackResponseBody) *DetachAggregateConfigRuleToCompliancePackResponse {
	s.Body = v
	return s
}

type DetachConfigRuleToCompliancePackRequest struct {
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-5bb1626622af00bd****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The rule ID. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-6cc4626622af00e7****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s DetachConfigRuleToCompliancePackRequest) String() string {
	return tea.Prettify(s)
}

func (s DetachConfigRuleToCompliancePackRequest) GoString() string {
	return s.String()
}

func (s *DetachConfigRuleToCompliancePackRequest) SetCompliancePackId(v string) *DetachConfigRuleToCompliancePackRequest {
	s.CompliancePackId = &v
	return s
}

func (s *DetachConfigRuleToCompliancePackRequest) SetConfigRuleIds(v string) *DetachConfigRuleToCompliancePackRequest {
	s.ConfigRuleIds = &v
	return s
}

type DetachConfigRuleToCompliancePackResponseBody struct {
	// The results of the operations to remove one or more rules.
	OperateRuleResult *DetachConfigRuleToCompliancePackResponseBodyOperateRuleResult `json:"OperateRuleResult,omitempty" xml:"OperateRuleResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 1AC7AED1-172F-42AE-9C12-295BC2ADB12A
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DetachConfigRuleToCompliancePackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DetachConfigRuleToCompliancePackResponseBody) GoString() string {
	return s.String()
}

func (s *DetachConfigRuleToCompliancePackResponseBody) SetOperateRuleResult(v *DetachConfigRuleToCompliancePackResponseBodyOperateRuleResult) *DetachConfigRuleToCompliancePackResponseBody {
	s.OperateRuleResult = v
	return s
}

func (s *DetachConfigRuleToCompliancePackResponseBody) SetRequestId(v string) *DetachConfigRuleToCompliancePackResponseBody {
	s.RequestId = &v
	return s
}

type DetachConfigRuleToCompliancePackResponseBodyOperateRuleResult struct {
	// The result of the operation to remove the rule.
	OperateRuleItemList []*DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList `json:"OperateRuleItemList,omitempty" xml:"OperateRuleItemList,omitempty" type:"Repeated"`
}

func (s DetachConfigRuleToCompliancePackResponseBodyOperateRuleResult) String() string {
	return tea.Prettify(s)
}

func (s DetachConfigRuleToCompliancePackResponseBodyOperateRuleResult) GoString() string {
	return s.String()
}

func (s *DetachConfigRuleToCompliancePackResponseBodyOperateRuleResult) SetOperateRuleItemList(v []*DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) *DetachConfigRuleToCompliancePackResponseBodyOperateRuleResult {
	s.OperateRuleItemList = v
	return s
}

type DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList struct {
	// The rule ID.
	//
	// example:
	//
	// cr-6cc4626622af00e7****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The error code returned.
	//
	// 	- This parameter is empty if the rule is removed from the compliance package.
	//
	// 	- An error code is returned if the rule fails to be removed from the compliance package. For more information about error codes, see [Error codes](https://error-center.alibabacloud.com/status/product/Config).
	//
	// example:
	//
	// ConfigRuleNotExists
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) String() string {
	return tea.Prettify(s)
}

func (s DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) GoString() string {
	return s.String()
}

func (s *DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetConfigRuleId(v string) *DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.ConfigRuleId = &v
	return s
}

func (s *DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetErrorCode(v string) *DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.ErrorCode = &v
	return s
}

func (s *DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList) SetSuccess(v bool) *DetachConfigRuleToCompliancePackResponseBodyOperateRuleResultOperateRuleItemList {
	s.Success = &v
	return s
}

type DetachConfigRuleToCompliancePackResponse struct {
	Headers    map[string]*string                            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DetachConfigRuleToCompliancePackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DetachConfigRuleToCompliancePackResponse) String() string {
	return tea.Prettify(s)
}

func (s DetachConfigRuleToCompliancePackResponse) GoString() string {
	return s.String()
}

func (s *DetachConfigRuleToCompliancePackResponse) SetHeaders(v map[string]*string) *DetachConfigRuleToCompliancePackResponse {
	s.Headers = v
	return s
}

func (s *DetachConfigRuleToCompliancePackResponse) SetStatusCode(v int32) *DetachConfigRuleToCompliancePackResponse {
	s.StatusCode = &v
	return s
}

func (s *DetachConfigRuleToCompliancePackResponse) SetBody(v *DetachConfigRuleToCompliancePackResponseBody) *DetachConfigRuleToCompliancePackResponse {
	s.Body = v
	return s
}

type EvaluatePreConfigRulesRequest struct {
	// Specifies whether to enable the managed rule. Valid values:
	//
	// 	- true: enables the managed rule.
	//
	// 	- false: does not enable the managed rule. This is the default value.
	//
	// >  After you create an evaluation rule, a managed rule that has the same settings as the evaluation rule is created. After you create a resource, the managed rule can be used to continuously check the compliance of the resource.
	//
	// example:
	//
	// false
	EnableManagedRules *bool `json:"EnableManagedRules,omitempty" xml:"EnableManagedRules,omitempty"`
	// The resources that you want to evaluate.
	//
	// This parameter is required.
	ResourceEvaluateItems []*EvaluatePreConfigRulesRequestResourceEvaluateItems `json:"ResourceEvaluateItems,omitempty" xml:"ResourceEvaluateItems,omitempty" type:"Repeated"`
	// 下一个查询开始Token
	//
	// example:
	//
	// ros
	ResourceTypeFormat *string `json:"ResourceTypeFormat,omitempty" xml:"ResourceTypeFormat,omitempty"`
}

func (s EvaluatePreConfigRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s EvaluatePreConfigRulesRequest) GoString() string {
	return s.String()
}

func (s *EvaluatePreConfigRulesRequest) SetEnableManagedRules(v bool) *EvaluatePreConfigRulesRequest {
	s.EnableManagedRules = &v
	return s
}

func (s *EvaluatePreConfigRulesRequest) SetResourceEvaluateItems(v []*EvaluatePreConfigRulesRequestResourceEvaluateItems) *EvaluatePreConfigRulesRequest {
	s.ResourceEvaluateItems = v
	return s
}

func (s *EvaluatePreConfigRulesRequest) SetResourceTypeFormat(v string) *EvaluatePreConfigRulesRequest {
	s.ResourceTypeFormat = &v
	return s
}

type EvaluatePreConfigRulesRequestResourceEvaluateItems struct {
	// The logical ID of the resource.
	//
	// example:
	//
	// ResourceLogicId-test
	ResourceLogicalId *string `json:"ResourceLogicalId,omitempty" xml:"ResourceLogicalId,omitempty"`
	// The properties of the resource.
	//
	// example:
	//
	// {
	//
	//     "ImageId": "ubuntu_18_04_64_20G_alibase_20190624.vhd",
	//
	//     "SecurityGroupId": "sg-bp15ed6xe1yxeycg****",
	//
	//     "HostName": "LocalHostName",
	//
	//     "RegionId": "cn-hangzhou"
	//
	// }
	ResourceProperties *string `json:"ResourceProperties,omitempty" xml:"ResourceProperties,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The evaluation rules.
	Rules []*EvaluatePreConfigRulesRequestResourceEvaluateItemsRules `json:"Rules,omitempty" xml:"Rules,omitempty" type:"Repeated"`
}

func (s EvaluatePreConfigRulesRequestResourceEvaluateItems) String() string {
	return tea.Prettify(s)
}

func (s EvaluatePreConfigRulesRequestResourceEvaluateItems) GoString() string {
	return s.String()
}

func (s *EvaluatePreConfigRulesRequestResourceEvaluateItems) SetResourceLogicalId(v string) *EvaluatePreConfigRulesRequestResourceEvaluateItems {
	s.ResourceLogicalId = &v
	return s
}

func (s *EvaluatePreConfigRulesRequestResourceEvaluateItems) SetResourceProperties(v string) *EvaluatePreConfigRulesRequestResourceEvaluateItems {
	s.ResourceProperties = &v
	return s
}

func (s *EvaluatePreConfigRulesRequestResourceEvaluateItems) SetResourceType(v string) *EvaluatePreConfigRulesRequestResourceEvaluateItems {
	s.ResourceType = &v
	return s
}

func (s *EvaluatePreConfigRulesRequestResourceEvaluateItems) SetRules(v []*EvaluatePreConfigRulesRequestResourceEvaluateItemsRules) *EvaluatePreConfigRulesRequestResourceEvaluateItems {
	s.Rules = v
	return s
}

type EvaluatePreConfigRulesRequestResourceEvaluateItemsRules struct {
	// The identifier of the evaluation rule.
	//
	// For more information about how to obtain the identifier of an evaluation rule, see [ListManagedRules](https://help.aliyun.com/document_detail/467810.html).
	//
	// example:
	//
	// ecs-instance-deletion-protection-enabled
	Identifier *string `json:"Identifier,omitempty" xml:"Identifier,omitempty"`
	// The input parameters of the evaluation rule.
	//
	// example:
	//
	// {}
	InputParameters *string `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
}

func (s EvaluatePreConfigRulesRequestResourceEvaluateItemsRules) String() string {
	return tea.Prettify(s)
}

func (s EvaluatePreConfigRulesRequestResourceEvaluateItemsRules) GoString() string {
	return s.String()
}

func (s *EvaluatePreConfigRulesRequestResourceEvaluateItemsRules) SetIdentifier(v string) *EvaluatePreConfigRulesRequestResourceEvaluateItemsRules {
	s.Identifier = &v
	return s
}

func (s *EvaluatePreConfigRulesRequestResourceEvaluateItemsRules) SetInputParameters(v string) *EvaluatePreConfigRulesRequestResourceEvaluateItemsRules {
	s.InputParameters = &v
	return s
}

type EvaluatePreConfigRulesShrinkRequest struct {
	// Specifies whether to enable the managed rule. Valid values:
	//
	// 	- true: enables the managed rule.
	//
	// 	- false: does not enable the managed rule. This is the default value.
	//
	// >  After you create an evaluation rule, a managed rule that has the same settings as the evaluation rule is created. After you create a resource, the managed rule can be used to continuously check the compliance of the resource.
	//
	// example:
	//
	// false
	EnableManagedRules *bool `json:"EnableManagedRules,omitempty" xml:"EnableManagedRules,omitempty"`
	// The resources that you want to evaluate.
	//
	// This parameter is required.
	ResourceEvaluateItemsShrink *string `json:"ResourceEvaluateItems,omitempty" xml:"ResourceEvaluateItems,omitempty"`
	// 下一个查询开始Token
	//
	// example:
	//
	// ros
	ResourceTypeFormat *string `json:"ResourceTypeFormat,omitempty" xml:"ResourceTypeFormat,omitempty"`
}

func (s EvaluatePreConfigRulesShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s EvaluatePreConfigRulesShrinkRequest) GoString() string {
	return s.String()
}

func (s *EvaluatePreConfigRulesShrinkRequest) SetEnableManagedRules(v bool) *EvaluatePreConfigRulesShrinkRequest {
	s.EnableManagedRules = &v
	return s
}

func (s *EvaluatePreConfigRulesShrinkRequest) SetResourceEvaluateItemsShrink(v string) *EvaluatePreConfigRulesShrinkRequest {
	s.ResourceEvaluateItemsShrink = &v
	return s
}

func (s *EvaluatePreConfigRulesShrinkRequest) SetResourceTypeFormat(v string) *EvaluatePreConfigRulesShrinkRequest {
	s.ResourceTypeFormat = &v
	return s
}

type EvaluatePreConfigRulesResponseBody struct {
	// The ID of the request.
	//
	// example:
	//
	// 129ECF1C-7897-1131-BD0F-4B588AC05400
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The details of the compliance evaluation result.
	ResourceEvaluations []*EvaluatePreConfigRulesResponseBodyResourceEvaluations `json:"ResourceEvaluations,omitempty" xml:"ResourceEvaluations,omitempty" type:"Repeated"`
}

func (s EvaluatePreConfigRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s EvaluatePreConfigRulesResponseBody) GoString() string {
	return s.String()
}

func (s *EvaluatePreConfigRulesResponseBody) SetRequestId(v string) *EvaluatePreConfigRulesResponseBody {
	s.RequestId = &v
	return s
}

func (s *EvaluatePreConfigRulesResponseBody) SetResourceEvaluations(v []*EvaluatePreConfigRulesResponseBodyResourceEvaluations) *EvaluatePreConfigRulesResponseBody {
	s.ResourceEvaluations = v
	return s
}

type EvaluatePreConfigRulesResponseBodyResourceEvaluations struct {
	// The logical ID of the resource.
	//
	// >  If the ResourceLogicalId request parameter is left empty, the value of the ResourceLogicalId response parameter is generated based on the value of the `ResourceProperties` parameter.
	//
	// example:
	//
	// ResourceLogicId-test
	ResourceLogicalId *string `json:"ResourceLogicalId,omitempty" xml:"ResourceLogicalId,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The evaluation rules.
	Rules []*EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules `json:"Rules,omitempty" xml:"Rules,omitempty" type:"Repeated"`
}

func (s EvaluatePreConfigRulesResponseBodyResourceEvaluations) String() string {
	return tea.Prettify(s)
}

func (s EvaluatePreConfigRulesResponseBodyResourceEvaluations) GoString() string {
	return s.String()
}

func (s *EvaluatePreConfigRulesResponseBodyResourceEvaluations) SetResourceLogicalId(v string) *EvaluatePreConfigRulesResponseBodyResourceEvaluations {
	s.ResourceLogicalId = &v
	return s
}

func (s *EvaluatePreConfigRulesResponseBodyResourceEvaluations) SetResourceType(v string) *EvaluatePreConfigRulesResponseBodyResourceEvaluations {
	s.ResourceType = &v
	return s
}

func (s *EvaluatePreConfigRulesResponseBodyResourceEvaluations) SetRules(v []*EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules) *EvaluatePreConfigRulesResponseBodyResourceEvaluations {
	s.Rules = v
	return s
}

type EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules struct {
	// The reason why the resource was evaluated as incompliant.
	//
	// example:
	//
	// {\\"configuration\\":\\"false\\",\\"desiredValue\\":\\"True\\",\\"operator\\":\\"StringEquals\\",\\"property\\":\\"$.DeletionProtection\\"}
	Annotation *string `json:"Annotation,omitempty" xml:"Annotation,omitempty"`
	// The compliance type of the resource that was evaluated by using the evaluation rule. Valid values:
	//
	// 	- COMPLIANT: The resource was evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource was evaluated as incompliant.
	//
	// 	- NOT_APPLICABLE: The evaluation rule does not apply to the resource.
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The URL of the topic that describes how the managed rule remediates the incompliant configurations.
	//
	// example:
	//
	// https://example.aliyundoc.com
	HelpUrl *string `json:"HelpUrl,omitempty" xml:"HelpUrl,omitempty"`
	// The identifier of the evaluation rule.
	//
	// example:
	//
	// ecs-instance-deletion-protection-enabled
	Identifier *string `json:"Identifier,omitempty" xml:"Identifier,omitempty"`
}

func (s EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules) String() string {
	return tea.Prettify(s)
}

func (s EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules) GoString() string {
	return s.String()
}

func (s *EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules) SetAnnotation(v string) *EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules {
	s.Annotation = &v
	return s
}

func (s *EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules) SetComplianceType(v string) *EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules {
	s.ComplianceType = &v
	return s
}

func (s *EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules) SetHelpUrl(v string) *EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules {
	s.HelpUrl = &v
	return s
}

func (s *EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules) SetIdentifier(v string) *EvaluatePreConfigRulesResponseBodyResourceEvaluationsRules {
	s.Identifier = &v
	return s
}

type EvaluatePreConfigRulesResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *EvaluatePreConfigRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s EvaluatePreConfigRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s EvaluatePreConfigRulesResponse) GoString() string {
	return s.String()
}

func (s *EvaluatePreConfigRulesResponse) SetHeaders(v map[string]*string) *EvaluatePreConfigRulesResponse {
	s.Headers = v
	return s
}

func (s *EvaluatePreConfigRulesResponse) SetStatusCode(v int32) *EvaluatePreConfigRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *EvaluatePreConfigRulesResponse) SetBody(v *EvaluatePreConfigRulesResponseBody) *EvaluatePreConfigRulesResponse {
	s.Body = v
	return s
}

type GenerateAggregateCompliancePackReportRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
}

func (s GenerateAggregateCompliancePackReportRequest) String() string {
	return tea.Prettify(s)
}

func (s GenerateAggregateCompliancePackReportRequest) GoString() string {
	return s.String()
}

func (s *GenerateAggregateCompliancePackReportRequest) SetAggregatorId(v string) *GenerateAggregateCompliancePackReportRequest {
	s.AggregatorId = &v
	return s
}

func (s *GenerateAggregateCompliancePackReportRequest) SetClientToken(v string) *GenerateAggregateCompliancePackReportRequest {
	s.ClientToken = &v
	return s
}

func (s *GenerateAggregateCompliancePackReportRequest) SetCompliancePackId(v string) *GenerateAggregateCompliancePackReportRequest {
	s.CompliancePackId = &v
	return s
}

type GenerateAggregateCompliancePackReportResponseBody struct {
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GenerateAggregateCompliancePackReportResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GenerateAggregateCompliancePackReportResponseBody) GoString() string {
	return s.String()
}

func (s *GenerateAggregateCompliancePackReportResponseBody) SetCompliancePackId(v string) *GenerateAggregateCompliancePackReportResponseBody {
	s.CompliancePackId = &v
	return s
}

func (s *GenerateAggregateCompliancePackReportResponseBody) SetRequestId(v string) *GenerateAggregateCompliancePackReportResponseBody {
	s.RequestId = &v
	return s
}

type GenerateAggregateCompliancePackReportResponse struct {
	Headers    map[string]*string                                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GenerateAggregateCompliancePackReportResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GenerateAggregateCompliancePackReportResponse) String() string {
	return tea.Prettify(s)
}

func (s GenerateAggregateCompliancePackReportResponse) GoString() string {
	return s.String()
}

func (s *GenerateAggregateCompliancePackReportResponse) SetHeaders(v map[string]*string) *GenerateAggregateCompliancePackReportResponse {
	s.Headers = v
	return s
}

func (s *GenerateAggregateCompliancePackReportResponse) SetStatusCode(v int32) *GenerateAggregateCompliancePackReportResponse {
	s.StatusCode = &v
	return s
}

func (s *GenerateAggregateCompliancePackReportResponse) SetBody(v *GenerateAggregateCompliancePackReportResponseBody) *GenerateAggregateCompliancePackReportResponse {
	s.Body = v
	return s
}

type GenerateAggregateConfigRulesReportRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The rule ID. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// example:
	//
	// cr-25d86457e0d900b5****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s GenerateAggregateConfigRulesReportRequest) String() string {
	return tea.Prettify(s)
}

func (s GenerateAggregateConfigRulesReportRequest) GoString() string {
	return s.String()
}

func (s *GenerateAggregateConfigRulesReportRequest) SetAggregatorId(v string) *GenerateAggregateConfigRulesReportRequest {
	s.AggregatorId = &v
	return s
}

func (s *GenerateAggregateConfigRulesReportRequest) SetClientToken(v string) *GenerateAggregateConfigRulesReportRequest {
	s.ClientToken = &v
	return s
}

func (s *GenerateAggregateConfigRulesReportRequest) SetConfigRuleIds(v string) *GenerateAggregateConfigRulesReportRequest {
	s.ConfigRuleIds = &v
	return s
}

type GenerateAggregateConfigRulesReportResponseBody struct {
	// The ID of the account group.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance evaluation report.
	//
	// example:
	//
	// crp-88176457e0d900c9****
	ReportId *string `json:"ReportId,omitempty" xml:"ReportId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GenerateAggregateConfigRulesReportResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GenerateAggregateConfigRulesReportResponseBody) GoString() string {
	return s.String()
}

func (s *GenerateAggregateConfigRulesReportResponseBody) SetAggregatorId(v string) *GenerateAggregateConfigRulesReportResponseBody {
	s.AggregatorId = &v
	return s
}

func (s *GenerateAggregateConfigRulesReportResponseBody) SetReportId(v string) *GenerateAggregateConfigRulesReportResponseBody {
	s.ReportId = &v
	return s
}

func (s *GenerateAggregateConfigRulesReportResponseBody) SetRequestId(v string) *GenerateAggregateConfigRulesReportResponseBody {
	s.RequestId = &v
	return s
}

type GenerateAggregateConfigRulesReportResponse struct {
	Headers    map[string]*string                              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GenerateAggregateConfigRulesReportResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GenerateAggregateConfigRulesReportResponse) String() string {
	return tea.Prettify(s)
}

func (s GenerateAggregateConfigRulesReportResponse) GoString() string {
	return s.String()
}

func (s *GenerateAggregateConfigRulesReportResponse) SetHeaders(v map[string]*string) *GenerateAggregateConfigRulesReportResponse {
	s.Headers = v
	return s
}

func (s *GenerateAggregateConfigRulesReportResponse) SetStatusCode(v int32) *GenerateAggregateConfigRulesReportResponse {
	s.StatusCode = &v
	return s
}

func (s *GenerateAggregateConfigRulesReportResponse) SetBody(v *GenerateAggregateConfigRulesReportResponseBody) *GenerateAggregateConfigRulesReportResponse {
	s.Body = v
	return s
}

type GenerateAggregateResourceInventoryRequest struct {
	// The IDs of member accounts in the account group. Separate multiple member account IDs with commas (,).
	//
	// example:
	//
	// 126672004088****
	AccountIds *string `json:"AccountIds,omitempty" xml:"AccountIds,omitempty"`
	// The ID of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a91d626622af0035****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The IDs of the regions to which the resources belong. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	Regions *string `json:"Regions,omitempty" xml:"Regions,omitempty"`
	// Indicates whether the resource is deleted. Valid values:
	//
	// 	- 1 (default): The resource is retained.
	//
	// 	- 0: The resource is deleted.
	//
	// example:
	//
	// 1
	ResourceDeleted *int32 `json:"ResourceDeleted,omitempty" xml:"ResourceDeleted,omitempty"`
	// The resource types. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
}

func (s GenerateAggregateResourceInventoryRequest) String() string {
	return tea.Prettify(s)
}

func (s GenerateAggregateResourceInventoryRequest) GoString() string {
	return s.String()
}

func (s *GenerateAggregateResourceInventoryRequest) SetAccountIds(v string) *GenerateAggregateResourceInventoryRequest {
	s.AccountIds = &v
	return s
}

func (s *GenerateAggregateResourceInventoryRequest) SetAggregatorId(v string) *GenerateAggregateResourceInventoryRequest {
	s.AggregatorId = &v
	return s
}

func (s *GenerateAggregateResourceInventoryRequest) SetRegions(v string) *GenerateAggregateResourceInventoryRequest {
	s.Regions = &v
	return s
}

func (s *GenerateAggregateResourceInventoryRequest) SetResourceDeleted(v int32) *GenerateAggregateResourceInventoryRequest {
	s.ResourceDeleted = &v
	return s
}

func (s *GenerateAggregateResourceInventoryRequest) SetResourceTypes(v string) *GenerateAggregateResourceInventoryRequest {
	s.ResourceTypes = &v
	return s
}

type GenerateAggregateResourceInventoryResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 5111CBA6-6485-57EB-BCDD-85D8BB31E7A7
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GenerateAggregateResourceInventoryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GenerateAggregateResourceInventoryResponseBody) GoString() string {
	return s.String()
}

func (s *GenerateAggregateResourceInventoryResponseBody) SetRequestId(v string) *GenerateAggregateResourceInventoryResponseBody {
	s.RequestId = &v
	return s
}

type GenerateAggregateResourceInventoryResponse struct {
	Headers    map[string]*string                              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GenerateAggregateResourceInventoryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GenerateAggregateResourceInventoryResponse) String() string {
	return tea.Prettify(s)
}

func (s GenerateAggregateResourceInventoryResponse) GoString() string {
	return s.String()
}

func (s *GenerateAggregateResourceInventoryResponse) SetHeaders(v map[string]*string) *GenerateAggregateResourceInventoryResponse {
	s.Headers = v
	return s
}

func (s *GenerateAggregateResourceInventoryResponse) SetStatusCode(v int32) *GenerateAggregateResourceInventoryResponse {
	s.StatusCode = &v
	return s
}

func (s *GenerateAggregateResourceInventoryResponse) SetBody(v *GenerateAggregateResourceInventoryResponseBody) *GenerateAggregateResourceInventoryResponse {
	s.Body = v
	return s
}

type GenerateCompliancePackReportRequest struct {
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// AAAAAdDWBF2****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-a8a8626622af0082****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
}

func (s GenerateCompliancePackReportRequest) String() string {
	return tea.Prettify(s)
}

func (s GenerateCompliancePackReportRequest) GoString() string {
	return s.String()
}

func (s *GenerateCompliancePackReportRequest) SetClientToken(v string) *GenerateCompliancePackReportRequest {
	s.ClientToken = &v
	return s
}

func (s *GenerateCompliancePackReportRequest) SetCompliancePackId(v string) *GenerateCompliancePackReportRequest {
	s.CompliancePackId = &v
	return s
}

type GenerateCompliancePackReportResponseBody struct {
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-a8a8626622af0082****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GenerateCompliancePackReportResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GenerateCompliancePackReportResponseBody) GoString() string {
	return s.String()
}

func (s *GenerateCompliancePackReportResponseBody) SetCompliancePackId(v string) *GenerateCompliancePackReportResponseBody {
	s.CompliancePackId = &v
	return s
}

func (s *GenerateCompliancePackReportResponseBody) SetRequestId(v string) *GenerateCompliancePackReportResponseBody {
	s.RequestId = &v
	return s
}

type GenerateCompliancePackReportResponse struct {
	Headers    map[string]*string                        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GenerateCompliancePackReportResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GenerateCompliancePackReportResponse) String() string {
	return tea.Prettify(s)
}

func (s GenerateCompliancePackReportResponse) GoString() string {
	return s.String()
}

func (s *GenerateCompliancePackReportResponse) SetHeaders(v map[string]*string) *GenerateCompliancePackReportResponse {
	s.Headers = v
	return s
}

func (s *GenerateCompliancePackReportResponse) SetStatusCode(v int32) *GenerateCompliancePackReportResponse {
	s.StatusCode = &v
	return s
}

func (s *GenerateCompliancePackReportResponse) SetBody(v *GenerateCompliancePackReportResponseBody) *GenerateCompliancePackReportResponse {
	s.Body = v
	return s
}

type GenerateConfigRulesReportRequest struct {
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// AAAAAdDWBF2****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the rule. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to query the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// example:
	//
	// cr-25d86457e0d900b5****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s GenerateConfigRulesReportRequest) String() string {
	return tea.Prettify(s)
}

func (s GenerateConfigRulesReportRequest) GoString() string {
	return s.String()
}

func (s *GenerateConfigRulesReportRequest) SetClientToken(v string) *GenerateConfigRulesReportRequest {
	s.ClientToken = &v
	return s
}

func (s *GenerateConfigRulesReportRequest) SetConfigRuleIds(v string) *GenerateConfigRulesReportRequest {
	s.ConfigRuleIds = &v
	return s
}

type GenerateConfigRulesReportResponseBody struct {
	// The ID of the compliance evaluation report.
	//
	// example:
	//
	// crp-88176457e0d900c9****
	ReportId *string `json:"ReportId,omitempty" xml:"ReportId,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GenerateConfigRulesReportResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GenerateConfigRulesReportResponseBody) GoString() string {
	return s.String()
}

func (s *GenerateConfigRulesReportResponseBody) SetReportId(v string) *GenerateConfigRulesReportResponseBody {
	s.ReportId = &v
	return s
}

func (s *GenerateConfigRulesReportResponseBody) SetRequestId(v string) *GenerateConfigRulesReportResponseBody {
	s.RequestId = &v
	return s
}

type GenerateConfigRulesReportResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GenerateConfigRulesReportResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GenerateConfigRulesReportResponse) String() string {
	return tea.Prettify(s)
}

func (s GenerateConfigRulesReportResponse) GoString() string {
	return s.String()
}

func (s *GenerateConfigRulesReportResponse) SetHeaders(v map[string]*string) *GenerateConfigRulesReportResponse {
	s.Headers = v
	return s
}

func (s *GenerateConfigRulesReportResponse) SetStatusCode(v int32) *GenerateConfigRulesReportResponse {
	s.StatusCode = &v
	return s
}

func (s *GenerateConfigRulesReportResponse) SetBody(v *GenerateConfigRulesReportResponseBody) *GenerateConfigRulesReportResponse {
	s.Body = v
	return s
}

type GenerateResourceInventoryRequest struct {
	// The region IDs of the resources. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	Regions *string `json:"Regions,omitempty" xml:"Regions,omitempty"`
	// Indicates whether the resource is deleted. Valid values:
	//
	// 	- 1 (default): The resource is retained.
	//
	// 	- 0: The resource is deleted.
	//
	// example:
	//
	// 1
	ResourceDeleted *int32 `json:"ResourceDeleted,omitempty" xml:"ResourceDeleted,omitempty"`
	// The resource types. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
}

func (s GenerateResourceInventoryRequest) String() string {
	return tea.Prettify(s)
}

func (s GenerateResourceInventoryRequest) GoString() string {
	return s.String()
}

func (s *GenerateResourceInventoryRequest) SetRegions(v string) *GenerateResourceInventoryRequest {
	s.Regions = &v
	return s
}

func (s *GenerateResourceInventoryRequest) SetResourceDeleted(v int32) *GenerateResourceInventoryRequest {
	s.ResourceDeleted = &v
	return s
}

func (s *GenerateResourceInventoryRequest) SetResourceTypes(v string) *GenerateResourceInventoryRequest {
	s.ResourceTypes = &v
	return s
}

type GenerateResourceInventoryResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// E1225EEA-B5F8-538F-8E37-A943986B6290
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GenerateResourceInventoryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GenerateResourceInventoryResponseBody) GoString() string {
	return s.String()
}

func (s *GenerateResourceInventoryResponseBody) SetRequestId(v string) *GenerateResourceInventoryResponseBody {
	s.RequestId = &v
	return s
}

type GenerateResourceInventoryResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GenerateResourceInventoryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GenerateResourceInventoryResponse) String() string {
	return tea.Prettify(s)
}

func (s GenerateResourceInventoryResponse) GoString() string {
	return s.String()
}

func (s *GenerateResourceInventoryResponse) SetHeaders(v map[string]*string) *GenerateResourceInventoryResponse {
	s.Headers = v
	return s
}

func (s *GenerateResourceInventoryResponse) SetStatusCode(v int32) *GenerateResourceInventoryResponse {
	s.StatusCode = &v
	return s
}

func (s *GenerateResourceInventoryResponse) SetBody(v *GenerateResourceInventoryResponseBody) *GenerateResourceInventoryResponse {
	s.Body = v
	return s
}

type GetAdvancedSearchFileResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 9366FE45-3C83-54FB-8BB1-44176B200706
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The information about the resource file.
	ResourceSearch *GetAdvancedSearchFileResponseBodyResourceSearch `json:"ResourceSearch,omitempty" xml:"ResourceSearch,omitempty" type:"Struct"`
}

func (s GetAdvancedSearchFileResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAdvancedSearchFileResponseBody) GoString() string {
	return s.String()
}

func (s *GetAdvancedSearchFileResponseBody) SetRequestId(v string) *GetAdvancedSearchFileResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetAdvancedSearchFileResponseBody) SetResourceSearch(v *GetAdvancedSearchFileResponseBodyResourceSearch) *GetAdvancedSearchFileResponseBody {
	s.ResourceSearch = v
	return s
}

type GetAdvancedSearchFileResponseBodyResourceSearch struct {
	// The download URL of the resource file.
	DownloadUrl *string `json:"DownloadUrl,omitempty" xml:"DownloadUrl,omitempty"`
	// The time when the resource file was generated. The value is a timestamp. Unit: milliseconds.
	//
	// example:
	//
	// 1688281755480
	ResourceInventoryGenerateTime *int64 `json:"ResourceInventoryGenerateTime,omitempty" xml:"ResourceInventoryGenerateTime,omitempty"`
	// The generation status of the resource file. Valid values:
	//
	// 	- CREATING: The resource file is being generated.
	//
	// 	- COMPLETE: The resource file is generated.
	//
	// example:
	//
	// COMPLETE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s GetAdvancedSearchFileResponseBodyResourceSearch) String() string {
	return tea.Prettify(s)
}

func (s GetAdvancedSearchFileResponseBodyResourceSearch) GoString() string {
	return s.String()
}

func (s *GetAdvancedSearchFileResponseBodyResourceSearch) SetDownloadUrl(v string) *GetAdvancedSearchFileResponseBodyResourceSearch {
	s.DownloadUrl = &v
	return s
}

func (s *GetAdvancedSearchFileResponseBodyResourceSearch) SetResourceInventoryGenerateTime(v int64) *GetAdvancedSearchFileResponseBodyResourceSearch {
	s.ResourceInventoryGenerateTime = &v
	return s
}

func (s *GetAdvancedSearchFileResponseBodyResourceSearch) SetStatus(v string) *GetAdvancedSearchFileResponseBodyResourceSearch {
	s.Status = &v
	return s
}

type GetAdvancedSearchFileResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAdvancedSearchFileResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAdvancedSearchFileResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAdvancedSearchFileResponse) GoString() string {
	return s.String()
}

func (s *GetAdvancedSearchFileResponse) SetHeaders(v map[string]*string) *GetAdvancedSearchFileResponse {
	s.Headers = v
	return s
}

func (s *GetAdvancedSearchFileResponse) SetStatusCode(v int32) *GetAdvancedSearchFileResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAdvancedSearchFileResponse) SetBody(v *GetAdvancedSearchFileResponseBody) *GetAdvancedSearchFileResponse {
	s.Body = v
	return s
}

type GetAggregateAccountComplianceByPackRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-04b3fd170e340007****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
}

func (s GetAggregateAccountComplianceByPackRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateAccountComplianceByPackRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateAccountComplianceByPackRequest) SetAggregatorId(v string) *GetAggregateAccountComplianceByPackRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateAccountComplianceByPackRequest) SetCompliancePackId(v string) *GetAggregateAccountComplianceByPackRequest {
	s.CompliancePackId = &v
	return s
}

type GetAggregateAccountComplianceByPackResponseBody struct {
	// The compliance evaluation results of member accounts for which the compliance package takes effect in an account group.
	AccountComplianceResult *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult `json:"AccountComplianceResult,omitempty" xml:"AccountComplianceResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateAccountComplianceByPackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateAccountComplianceByPackResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateAccountComplianceByPackResponseBody) SetAccountComplianceResult(v *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult) *GetAggregateAccountComplianceByPackResponseBody {
	s.AccountComplianceResult = v
	return s
}

func (s *GetAggregateAccountComplianceByPackResponseBody) SetRequestId(v string) *GetAggregateAccountComplianceByPackResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult struct {
	// The compliance evaluation result of member accounts.
	AccountCompliances []*GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances `json:"AccountCompliances,omitempty" xml:"AccountCompliances,omitempty" type:"Repeated"`
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The number of non-compliant member accounts.
	//
	// example:
	//
	// 0
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The total number of member accounts.
	//
	// example:
	//
	// 2
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult) GoString() string {
	return s.String()
}

func (s *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult) SetAccountCompliances(v []*GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances) *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult {
	s.AccountCompliances = v
	return s
}

func (s *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult) SetCompliancePackId(v string) *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult {
	s.CompliancePackId = &v
	return s
}

func (s *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult) SetNonCompliantCount(v int32) *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult {
	s.NonCompliantCount = &v
	return s
}

func (s *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult) SetTotalCount(v int32) *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResult {
	s.TotalCount = &v
	return s
}

type GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances struct {
	// The ID of the member account in the account group.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The name of the member account in the account group.
	//
	// example:
	//
	// Alice
	AccountName *string `json:"AccountName,omitempty" xml:"AccountName,omitempty"`
	// The compliance evaluation result. Valid values:
	//
	// 	- COMPLIANT: The resource was evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource was evaluated as incompliant.
	//
	// 	- NOT_APPLICABLE: The rule did not apply to your resource.
	//
	// 	- INSUFFICIENT_DATA: No resource data was available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
}

func (s GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances) GoString() string {
	return s.String()
}

func (s *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances) SetAccountId(v int64) *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances {
	s.AccountId = &v
	return s
}

func (s *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances) SetAccountName(v string) *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances {
	s.AccountName = &v
	return s
}

func (s *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances) SetComplianceType(v string) *GetAggregateAccountComplianceByPackResponseBodyAccountComplianceResultAccountCompliances {
	s.ComplianceType = &v
	return s
}

type GetAggregateAccountComplianceByPackResponse struct {
	Headers    map[string]*string                               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateAccountComplianceByPackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateAccountComplianceByPackResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateAccountComplianceByPackResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateAccountComplianceByPackResponse) SetHeaders(v map[string]*string) *GetAggregateAccountComplianceByPackResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateAccountComplianceByPackResponse) SetStatusCode(v int32) *GetAggregateAccountComplianceByPackResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateAccountComplianceByPackResponse) SetBody(v *GetAggregateAccountComplianceByPackResponseBody) *GetAggregateAccountComplianceByPackResponse {
	s.Body = v
	return s
}

type GetAggregateAdvancedSearchFileRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-4b1b626622af000c****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
}

func (s GetAggregateAdvancedSearchFileRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateAdvancedSearchFileRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateAdvancedSearchFileRequest) SetAggregatorId(v string) *GetAggregateAdvancedSearchFileRequest {
	s.AggregatorId = &v
	return s
}

type GetAggregateAdvancedSearchFileResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 6DB86284-DB7F-5936-B210-3B53D6D41B03
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The information about the resource file.
	ResourceSearch *GetAggregateAdvancedSearchFileResponseBodyResourceSearch `json:"ResourceSearch,omitempty" xml:"ResourceSearch,omitempty" type:"Struct"`
}

func (s GetAggregateAdvancedSearchFileResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateAdvancedSearchFileResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateAdvancedSearchFileResponseBody) SetRequestId(v string) *GetAggregateAdvancedSearchFileResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetAggregateAdvancedSearchFileResponseBody) SetResourceSearch(v *GetAggregateAdvancedSearchFileResponseBodyResourceSearch) *GetAggregateAdvancedSearchFileResponseBody {
	s.ResourceSearch = v
	return s
}

type GetAggregateAdvancedSearchFileResponseBodyResourceSearch struct {
	// The download URL of the resource file.
	DownloadUrl *string `json:"DownloadUrl,omitempty" xml:"DownloadUrl,omitempty"`
	// The time when the resource file was generated. The value is a timestamp.
	//
	// Unit: milliseconds.
	//
	// example:
	//
	// 1691375618130
	ResourceInventoryGenerateTime *int64 `json:"ResourceInventoryGenerateTime,omitempty" xml:"ResourceInventoryGenerateTime,omitempty"`
	// The generation status of the resource file. Valid values:
	//
	// 	- CREATING: The resource file is being generated.
	//
	// 	- COMPLETE: The resource file is generated.
	//
	// example:
	//
	// COMPLETE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s GetAggregateAdvancedSearchFileResponseBodyResourceSearch) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateAdvancedSearchFileResponseBodyResourceSearch) GoString() string {
	return s.String()
}

func (s *GetAggregateAdvancedSearchFileResponseBodyResourceSearch) SetDownloadUrl(v string) *GetAggregateAdvancedSearchFileResponseBodyResourceSearch {
	s.DownloadUrl = &v
	return s
}

func (s *GetAggregateAdvancedSearchFileResponseBodyResourceSearch) SetResourceInventoryGenerateTime(v int64) *GetAggregateAdvancedSearchFileResponseBodyResourceSearch {
	s.ResourceInventoryGenerateTime = &v
	return s
}

func (s *GetAggregateAdvancedSearchFileResponseBodyResourceSearch) SetStatus(v string) *GetAggregateAdvancedSearchFileResponseBodyResourceSearch {
	s.Status = &v
	return s
}

type GetAggregateAdvancedSearchFileResponse struct {
	Headers    map[string]*string                          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateAdvancedSearchFileResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateAdvancedSearchFileResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateAdvancedSearchFileResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateAdvancedSearchFileResponse) SetHeaders(v map[string]*string) *GetAggregateAdvancedSearchFileResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateAdvancedSearchFileResponse) SetStatusCode(v int32) *GetAggregateAdvancedSearchFileResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateAdvancedSearchFileResponse) SetBody(v *GetAggregateAdvancedSearchFileResponseBody) *GetAggregateAdvancedSearchFileResponse {
	s.Body = v
	return s
}

type GetAggregateCompliancePackRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*GetAggregateCompliancePackRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s GetAggregateCompliancePackRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackRequest) SetAggregatorId(v string) *GetAggregateCompliancePackRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateCompliancePackRequest) SetCompliancePackId(v string) *GetAggregateCompliancePackRequest {
	s.CompliancePackId = &v
	return s
}

func (s *GetAggregateCompliancePackRequest) SetTag(v []*GetAggregateCompliancePackRequestTag) *GetAggregateCompliancePackRequest {
	s.Tag = v
	return s
}

type GetAggregateCompliancePackRequestTag struct {
	// The tag key of the resource. You can specify up to 20 tag keys.
	//
	// The tag key cannot be an empty string. The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs`:. The tag key cannot contain `http://` or `https://`.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetAggregateCompliancePackRequestTag) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackRequestTag) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackRequestTag) SetKey(v string) *GetAggregateCompliancePackRequestTag {
	s.Key = &v
	return s
}

func (s *GetAggregateCompliancePackRequestTag) SetValue(v string) *GetAggregateCompliancePackRequestTag {
	s.Value = &v
	return s
}

type GetAggregateCompliancePackShrinkRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s GetAggregateCompliancePackShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackShrinkRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackShrinkRequest) SetAggregatorId(v string) *GetAggregateCompliancePackShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateCompliancePackShrinkRequest) SetCompliancePackId(v string) *GetAggregateCompliancePackShrinkRequest {
	s.CompliancePackId = &v
	return s
}

func (s *GetAggregateCompliancePackShrinkRequest) SetTagShrink(v string) *GetAggregateCompliancePackShrinkRequest {
	s.TagShrink = &v
	return s
}

type GetAggregateCompliancePackResponseBody struct {
	// The details of the compliance package.
	CompliancePack *GetAggregateCompliancePackResponseBodyCompliancePack `json:"CompliancePack,omitempty" xml:"CompliancePack,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateCompliancePackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackResponseBody) SetCompliancePack(v *GetAggregateCompliancePackResponseBodyCompliancePack) *GetAggregateCompliancePackResponseBody {
	s.CompliancePack = v
	return s
}

func (s *GetAggregateCompliancePackResponseBody) SetRequestId(v string) *GetAggregateCompliancePackResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateCompliancePackResponseBodyCompliancePack struct {
	// The ID of the management account to which the compliance package belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the account group.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// example:
	//
	// The name of the compliance package.
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the compliance package template.
	//
	// example:
	//
	// ct-5f26ff4e06a300c4****
	CompliancePackTemplateId *string `json:"CompliancePackTemplateId,omitempty" xml:"CompliancePackTemplateId,omitempty"`
	// The rules in the compliance package.
	ConfigRules []*GetAggregateCompliancePackResponseBodyCompliancePackConfigRules `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty" type:"Repeated"`
	// The timestamp when the compliance package was created. Unit: milliseconds.
	//
	// example:
	//
	// 1624243657000
	CreateTimestamp *int64 `json:"CreateTimestamp,omitempty" xml:"CreateTimestamp,omitempty"`
	// The description of the compliance package.
	//
	// example:
	//
	// The description of the compliance package.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The evaluation scope of the compliance package.
	Scope *GetAggregateCompliancePackResponseBodyCompliancePackScope `json:"Scope,omitempty" xml:"Scope,omitempty" type:"Struct"`
	// The status of the compliance package. Valid values:
	//
	// 	- ACTIVE: The compliance package was normal.
	//
	// 	- CREATING: The compliance package was being created.
	//
	// example:
	//
	// ACTIVE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The tags.
	Tags []*GetAggregateCompliancePackResponseBodyCompliancePackTags `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
	// The information about the current compliance package template. The rules in the template do not contain custom function rules. You can quickly create the same compliance package for other accounts or account groups based on the template information.
	//
	// example:
	//
	// {
	//
	//   "configRuleTemplates": [
	//
	//     {
	//
	//       "configRuleName": "OSS-test-name",
	//
	//       "scope": {
	//
	//         "complianceResourceTypes": [
	//
	//           "ACS::OSS::Bucket"
	//
	//         ]
	//
	//       },
	//
	//       "description": "test-description",
	//
	//       "source": {
	//
	//         "owner": "ALIYUN",
	//
	//         "identifier": "oss-bucket-referer-xxx",
	//
	//         "sourceDetails": [
	//
	//           {
	//
	//             "messageType": "ConfigurationItemChangeNotification"
	//
	//           }
	//
	//         ]
	//
	//       },
	//
	//       "inputParameters": {
	//
	//         "allowEmptyReferer": "true",
	//
	//         "allowReferers": "http://www.aliyun.com"
	//
	//       }
	//
	//     }
	//
	//   ]
	//
	// }
	TemplateContent *string `json:"TemplateContent,omitempty" xml:"TemplateContent,omitempty"`
}

func (s GetAggregateCompliancePackResponseBodyCompliancePack) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackResponseBodyCompliancePack) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetAccountId(v int64) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.AccountId = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetAggregatorId(v string) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetCompliancePackId(v string) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.CompliancePackId = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetCompliancePackName(v string) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.CompliancePackName = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetCompliancePackTemplateId(v string) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.CompliancePackTemplateId = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetConfigRules(v []*GetAggregateCompliancePackResponseBodyCompliancePackConfigRules) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.ConfigRules = v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetCreateTimestamp(v int64) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.CreateTimestamp = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetDescription(v string) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.Description = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetRiskLevel(v int32) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.RiskLevel = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetScope(v *GetAggregateCompliancePackResponseBodyCompliancePackScope) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.Scope = v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetStatus(v string) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.Status = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetTags(v []*GetAggregateCompliancePackResponseBodyCompliancePackTags) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.Tags = v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePack) SetTemplateContent(v string) *GetAggregateCompliancePackResponseBodyCompliancePack {
	s.TemplateContent = &v
	return s
}

type GetAggregateCompliancePackResponseBodyCompliancePackConfigRules struct {
	// The rule ID.
	//
	// example:
	//
	// cr-a260626622af0005****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// The name of the rule.
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The details of the input parameter of the rule.
	ConfigRuleParameters []*GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters `json:"ConfigRuleParameters,omitempty" xml:"ConfigRuleParameters,omitempty" type:"Repeated"`
	// The description of the rule.
	//
	// example:
	//
	// The description of the rule.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The ID of the rule template.
	//
	// example:
	//
	// eip-bandwidth-limit
	ManagedRuleIdentifier *string `json:"ManagedRuleIdentifier,omitempty" xml:"ManagedRuleIdentifier,omitempty"`
	// The type of the resource evaluated based on the rule. Multiple resource types are separated with commas (,).
	//
	// example:
	//
	// ACS::EIP::EipAddress
	ResourceTypesScope *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackConfigRules) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackConfigRules) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules) SetConfigRuleId(v string) *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules {
	s.ConfigRuleId = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules) SetConfigRuleName(v string) *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules {
	s.ConfigRuleName = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules) SetConfigRuleParameters(v []*GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules {
	s.ConfigRuleParameters = v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules) SetDescription(v string) *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules {
	s.Description = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules) SetManagedRuleIdentifier(v string) *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules {
	s.ManagedRuleIdentifier = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules) SetResourceTypesScope(v string) *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules {
	s.ResourceTypesScope = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules) SetRiskLevel(v int32) *GetAggregateCompliancePackResponseBodyCompliancePackConfigRules {
	s.RiskLevel = &v
	return s
}

type GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters struct {
	// The name of the input parameter.
	//
	// example:
	//
	// bandwidth
	ParameterName *string `json:"ParameterName,omitempty" xml:"ParameterName,omitempty"`
	// The value of the input parameter.
	//
	// example:
	//
	// 10
	ParameterValue *string `json:"ParameterValue,omitempty" xml:"ParameterValue,omitempty"`
	// Indicates whether the input parameter was required. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	Required *bool `json:"Required,omitempty" xml:"Required,omitempty"`
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) SetParameterName(v string) *GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters {
	s.ParameterName = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) SetParameterValue(v string) *GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters {
	s.ParameterValue = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) SetRequired(v bool) *GetAggregateCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters {
	s.Required = &v
	return s
}

type GetAggregateCompliancePackResponseBodyCompliancePackScope struct {
	// The IDs of regions that are excluded. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// The IDs of the resource groups whose resources you do not want to evaluate by using the compliance package. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource that is not evaluated by using the compliance package.
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// The scope of the tag that is excluded.
	ExcludeTagsScope []*GetAggregateCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The ID of the region whose resources were evaluated by using the compliance package.
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group whose resources are evaluated by using the compliance package.
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources to which the rule applies. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The tag key of the resource that is evaluated by using the compliance package.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// The tag value of the resource that is evaluated by using the compliance package.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The tag scope.
	TagsScope []*GetAggregateCompliancePackResponseBodyCompliancePackScopeTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackScope) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackScope) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScope) SetExcludeRegionIdsScope(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScope {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScope) SetExcludeResourceGroupIdsScope(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScope {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScope) SetExcludeResourceIdsScope(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScope {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScope) SetExcludeTagsScope(v []*GetAggregateCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope) *GetAggregateCompliancePackResponseBodyCompliancePackScope {
	s.ExcludeTagsScope = v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScope) SetRegionIdsScope(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScope {
	s.RegionIdsScope = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScope) SetResourceGroupIdsScope(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScope {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScope) SetResourceIdsScope(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScope {
	s.ResourceIdsScope = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScope) SetTagKeyScope(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScope {
	s.TagKeyScope = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScope) SetTagValueScope(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScope {
	s.TagValueScope = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScope) SetTagsScope(v []*GetAggregateCompliancePackResponseBodyCompliancePackScopeTagsScope) *GetAggregateCompliancePackResponseBodyCompliancePackScope {
	s.TagsScope = v
	return s
}

type GetAggregateCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope struct {
	// The key of the tag.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The value of the tag.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope) SetTagKey(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope) SetTagValue(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope {
	s.TagValue = &v
	return s
}

type GetAggregateCompliancePackResponseBodyCompliancePackScopeTagsScope struct {
	// The key of the tag.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The value of the tag.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackScopeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackScopeTagsScope) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScopeTagsScope) SetTagKey(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScopeTagsScope {
	s.TagKey = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackScopeTagsScope) SetTagValue(v string) *GetAggregateCompliancePackResponseBodyCompliancePackScopeTagsScope {
	s.TagValue = &v
	return s
}

type GetAggregateCompliancePackResponseBodyCompliancePackTags struct {
	// The tag keys of the resource.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag values of the resource.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackTags) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackResponseBodyCompliancePackTags) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackTags) SetTagKey(v string) *GetAggregateCompliancePackResponseBodyCompliancePackTags {
	s.TagKey = &v
	return s
}

func (s *GetAggregateCompliancePackResponseBodyCompliancePackTags) SetTagValue(v string) *GetAggregateCompliancePackResponseBodyCompliancePackTags {
	s.TagValue = &v
	return s
}

type GetAggregateCompliancePackResponse struct {
	Headers    map[string]*string                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateCompliancePackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateCompliancePackResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackResponse) SetHeaders(v map[string]*string) *GetAggregateCompliancePackResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateCompliancePackResponse) SetStatusCode(v int32) *GetAggregateCompliancePackResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateCompliancePackResponse) SetBody(v *GetAggregateCompliancePackResponseBody) *GetAggregateCompliancePackResponse {
	s.Body = v
	return s
}

type GetAggregateCompliancePackReportRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
}

func (s GetAggregateCompliancePackReportRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackReportRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackReportRequest) SetAggregatorId(v string) *GetAggregateCompliancePackReportRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateCompliancePackReportRequest) SetCompliancePackId(v string) *GetAggregateCompliancePackReportRequest {
	s.CompliancePackId = &v
	return s
}

type GetAggregateCompliancePackReportResponseBody struct {
	// The compliance evaluation report that is generated based on a compliance package.
	CompliancePackReport *GetAggregateCompliancePackReportResponseBodyCompliancePackReport `json:"CompliancePackReport,omitempty" xml:"CompliancePackReport,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 0D234DAC-1ABD-42E8-9475-BE317857E29B
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateCompliancePackReportResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackReportResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackReportResponseBody) SetCompliancePackReport(v *GetAggregateCompliancePackReportResponseBodyCompliancePackReport) *GetAggregateCompliancePackReportResponseBody {
	s.CompliancePackReport = v
	return s
}

func (s *GetAggregateCompliancePackReportResponseBody) SetRequestId(v string) *GetAggregateCompliancePackReportResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateCompliancePackReportResponseBodyCompliancePackReport struct {
	// The ID of the management account to which the compliance package belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The timestamp when the compliance evaluation report was generated. Unit: milliseconds.
	//
	// example:
	//
	// 1624330246640
	ReportCreateTimestamp *int64 `json:"ReportCreateTimestamp,omitempty" xml:"ReportCreateTimestamp,omitempty"`
	// The status of the compliance evaluation report. Valid values:
	//
	// 	- NONE: The compliance evaluation report is not generated.
	//
	// 	- CREATING: The compliance evaluation report is being generated.
	//
	// 	- COMPLETE: The compliance evaluation report is generated.
	//
	// example:
	//
	// COMPLETE
	ReportStatus *string `json:"ReportStatus,omitempty" xml:"ReportStatus,omitempty"`
	// The URL that is used to download the compliance evaluation report.
	ReportUrl *string `json:"ReportUrl,omitempty" xml:"ReportUrl,omitempty"`
}

func (s GetAggregateCompliancePackReportResponseBodyCompliancePackReport) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackReportResponseBodyCompliancePackReport) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackReportResponseBodyCompliancePackReport) SetAccountId(v int64) *GetAggregateCompliancePackReportResponseBodyCompliancePackReport {
	s.AccountId = &v
	return s
}

func (s *GetAggregateCompliancePackReportResponseBodyCompliancePackReport) SetCompliancePackId(v string) *GetAggregateCompliancePackReportResponseBodyCompliancePackReport {
	s.CompliancePackId = &v
	return s
}

func (s *GetAggregateCompliancePackReportResponseBodyCompliancePackReport) SetReportCreateTimestamp(v int64) *GetAggregateCompliancePackReportResponseBodyCompliancePackReport {
	s.ReportCreateTimestamp = &v
	return s
}

func (s *GetAggregateCompliancePackReportResponseBodyCompliancePackReport) SetReportStatus(v string) *GetAggregateCompliancePackReportResponseBodyCompliancePackReport {
	s.ReportStatus = &v
	return s
}

func (s *GetAggregateCompliancePackReportResponseBodyCompliancePackReport) SetReportUrl(v string) *GetAggregateCompliancePackReportResponseBodyCompliancePackReport {
	s.ReportUrl = &v
	return s
}

type GetAggregateCompliancePackReportResponse struct {
	Headers    map[string]*string                            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateCompliancePackReportResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateCompliancePackReportResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateCompliancePackReportResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateCompliancePackReportResponse) SetHeaders(v map[string]*string) *GetAggregateCompliancePackReportResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateCompliancePackReportResponse) SetStatusCode(v int32) *GetAggregateCompliancePackReportResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateCompliancePackReportResponse) SetBody(v *GetAggregateCompliancePackReportResponseBody) *GetAggregateCompliancePackReportResponse {
	s.Body = v
	return s
}

type GetAggregateComplianceSummaryRequest struct {
	// The ID of the account group.
	//
	// This parameter is required.
	//
	// if can be null:
	// false
	//
	// example:
	//
	// ca-a91d626622af0035****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
}

func (s GetAggregateComplianceSummaryRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateComplianceSummaryRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateComplianceSummaryRequest) SetAggregatorId(v string) *GetAggregateComplianceSummaryRequest {
	s.AggregatorId = &v
	return s
}

type GetAggregateComplianceSummaryResponseBody struct {
	// The compliance statistics.
	ComplianceSummary *GetAggregateComplianceSummaryResponseBodyComplianceSummary `json:"ComplianceSummary,omitempty" xml:"ComplianceSummary,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 929B8360-BD57-54FF-96DB-AD1D9B476769
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateComplianceSummaryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateComplianceSummaryResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateComplianceSummaryResponseBody) SetComplianceSummary(v *GetAggregateComplianceSummaryResponseBodyComplianceSummary) *GetAggregateComplianceSummaryResponseBody {
	s.ComplianceSummary = v
	return s
}

func (s *GetAggregateComplianceSummaryResponseBody) SetRequestId(v string) *GetAggregateComplianceSummaryResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateComplianceSummaryResponseBodyComplianceSummary struct {
	// The summary of compliance statistics from the rule dimension.
	ComplianceSummaryByConfigRule *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule `json:"ComplianceSummaryByConfigRule,omitempty" xml:"ComplianceSummaryByConfigRule,omitempty" type:"Struct"`
	// The summary of compliance statistics from the resource dimension.
	ComplianceSummaryByResource *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource `json:"ComplianceSummaryByResource,omitempty" xml:"ComplianceSummaryByResource,omitempty" type:"Struct"`
}

func (s GetAggregateComplianceSummaryResponseBodyComplianceSummary) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateComplianceSummaryResponseBodyComplianceSummary) GoString() string {
	return s.String()
}

func (s *GetAggregateComplianceSummaryResponseBodyComplianceSummary) SetComplianceSummaryByConfigRule(v *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) *GetAggregateComplianceSummaryResponseBodyComplianceSummary {
	s.ComplianceSummaryByConfigRule = v
	return s
}

func (s *GetAggregateComplianceSummaryResponseBodyComplianceSummary) SetComplianceSummaryByResource(v *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) *GetAggregateComplianceSummaryResponseBodyComplianceSummary {
	s.ComplianceSummaryByResource = v
	return s
}

type GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule struct {
	// The time when the compliance statistics were collected. Unit: milliseconds.
	//
	// example:
	//
	// 1589853822103
	ComplianceSummaryTimestamp *int64 `json:"ComplianceSummaryTimestamp,omitempty" xml:"ComplianceSummaryTimestamp,omitempty"`
	// The number of compliant rules.
	//
	// example:
	//
	// 4
	CompliantCount *int32 `json:"CompliantCount,omitempty" xml:"CompliantCount,omitempty"`
	// The number of non-compliant rules.
	//
	// example:
	//
	// 5
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The total number of rules.
	//
	// example:
	//
	// 9
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) GoString() string {
	return s.String()
}

func (s *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) SetComplianceSummaryTimestamp(v int64) *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule {
	s.ComplianceSummaryTimestamp = &v
	return s
}

func (s *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) SetCompliantCount(v int32) *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule {
	s.CompliantCount = &v
	return s
}

func (s *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) SetNonCompliantCount(v int32) *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule {
	s.NonCompliantCount = &v
	return s
}

func (s *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) SetTotalCount(v int64) *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule {
	s.TotalCount = &v
	return s
}

type GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource struct {
	// The time when the compliance statistics were collected. Unit: milliseconds.
	//
	// example:
	//
	// 1589853822103
	ComplianceSummaryTimestamp *int64 `json:"ComplianceSummaryTimestamp,omitempty" xml:"ComplianceSummaryTimestamp,omitempty"`
	// The number of compliant resources.
	//
	// example:
	//
	// 20
	CompliantCount *int32 `json:"CompliantCount,omitempty" xml:"CompliantCount,omitempty"`
	// The number of non-compliant resources.
	//
	// example:
	//
	// 11
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The total number of resources.
	//
	// example:
	//
	// 31
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) GoString() string {
	return s.String()
}

func (s *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) SetComplianceSummaryTimestamp(v int64) *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource {
	s.ComplianceSummaryTimestamp = &v
	return s
}

func (s *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) SetCompliantCount(v int32) *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource {
	s.CompliantCount = &v
	return s
}

func (s *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) SetNonCompliantCount(v int32) *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource {
	s.NonCompliantCount = &v
	return s
}

func (s *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) SetTotalCount(v int64) *GetAggregateComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource {
	s.TotalCount = &v
	return s
}

type GetAggregateComplianceSummaryResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateComplianceSummaryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateComplianceSummaryResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateComplianceSummaryResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateComplianceSummaryResponse) SetHeaders(v map[string]*string) *GetAggregateComplianceSummaryResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateComplianceSummaryResponse) SetStatusCode(v int32) *GetAggregateComplianceSummaryResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateComplianceSummaryResponse) SetBody(v *GetAggregateComplianceSummaryResponseBody) *GetAggregateComplianceSummaryResponse {
	s.Body = v
	return s
}

type GetAggregateConfigDeliveryChannelRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the delivery channel.
	//
	// For more information about how to obtain the ID of a delivery channel, see [ListAggregateConfigDeliveryChannels](https://help.aliyun.com/document_detail/429842.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cdc-d9106457e0d900b1****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
}

func (s GetAggregateConfigDeliveryChannelRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigDeliveryChannelRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigDeliveryChannelRequest) SetAggregatorId(v string) *GetAggregateConfigDeliveryChannelRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelRequest) SetDeliveryChannelId(v string) *GetAggregateConfigDeliveryChannelRequest {
	s.DeliveryChannelId = &v
	return s
}

type GetAggregateConfigDeliveryChannelResponseBody struct {
	// The information about a delivery channel.
	DeliveryChannel *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel `json:"DeliveryChannel,omitempty" xml:"DeliveryChannel,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DC300244-FCE3-5061-8214-C27ECB668487
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateConfigDeliveryChannelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigDeliveryChannelResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigDeliveryChannelResponseBody) SetDeliveryChannel(v *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) *GetAggregateConfigDeliveryChannelResponseBody {
	s.DeliveryChannel = v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBody) SetRequestId(v string) *GetAggregateConfigDeliveryChannelResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel struct {
	// The ID of the member in the account group.
	//
	// example:
	//
	// 120886317861****
	AccountId *string `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the account group.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// Indicates whether the specified destination receives scheduled compliant snapshots. Cloud Config delivers scheduled compliant snapshots at `04:00Z` and `16:00Z` to Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: The specified destination receives scheduled compliant snapshots.
	//
	// 	- false: The specified destination does not receive scheduled compliant snapshots.
	//
	// example:
	//
	// false
	CompliantSnapshot *bool `json:"CompliantSnapshot,omitempty" xml:"CompliantSnapshot,omitempty"`
	// Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	//
	// 	- true: The specified destination receives resource change logs.
	//
	// 	- false: The specified destination does not receive resource change logs.
	//
	// example:
	//
	// true
	ConfigurationItemChangeNotification *bool `json:"ConfigurationItemChangeNotification,omitempty" xml:"ConfigurationItemChangeNotification,omitempty"`
	// Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at `04:00Z` and `16:00Z` to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: The specified destination receives scheduled resource snapshots.
	//
	// 	- false: The specified destination does not receive scheduled resource snapshots.
	//
	// example:
	//
	// false
	ConfigurationSnapshot *bool `json:"ConfigurationSnapshot,omitempty" xml:"ConfigurationSnapshot,omitempty"`
	// The ARN of the role that is assigned to the delivery channel.
	//
	// example:
	//
	// acs:ram::120886317861****:role/aliyunserviceroleforconfig
	DeliveryChannelAssumeRoleArn *string `json:"DeliveryChannelAssumeRoleArn,omitempty" xml:"DeliveryChannelAssumeRoleArn,omitempty"`
	// The rule that is attached to the delivery channel. This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// 	- If the value of the DeliveryChannelType parameter is MNS, take note of the following settings of the lowest risk level and resource types of the events to which you subscribed:
	//
	//     	- The lowest risk level of the events to which you want to subscribe is in the following format: `{"filterType":"RuleRiskLevel","value":"1","multiple":false}`.
	//
	//         The `value` field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	//     	- The setting of the resource types of the events to which you want to subscribe is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//         The `values` field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// 	- If you set the DeliveryChannelType parameter to SLS, the setting of the resource types of the snapshots to which you want to deliver is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//     The `values` field specifies the resource types of the snapshots to which you want to deliver. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// example:
	//
	// [{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]
	DeliveryChannelCondition *string `json:"DeliveryChannelCondition,omitempty" xml:"DeliveryChannelCondition,omitempty"`
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-d9106457e0d900b1****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The name of the delivery channel.
	//
	// example:
	//
	// myDeliveryChannel
	DeliveryChannelName *string `json:"DeliveryChannelName,omitempty" xml:"DeliveryChannelName,omitempty"`
	// The ARN of the delivery destination.
	//
	// 	- If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
	//
	// 	- If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
	//
	// 	- If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
	//
	// example:
	//
	// acs:oss:cn-shanghai:120886317861****:new-bucket
	DeliveryChannelTargetArn *string `json:"DeliveryChannelTargetArn,omitempty" xml:"DeliveryChannelTargetArn,omitempty"`
	// The type of the delivery channel. Valid values:
	//
	// 	- OSS: Object Storage Service (OSS)
	//
	// 	- MNS: Message Service (MNS)
	//
	// 	- SLS: Log Service
	//
	// example:
	//
	// OSS
	DeliveryChannelType *string `json:"DeliveryChannelType,omitempty" xml:"DeliveryChannelType,omitempty"`
	// The time when Cloud Config delivers scheduled resources snapshots every day.
	//
	// Format: `HH:mmZ`. This time is displayed in UTC.
	//
	// example:
	//
	// 09:10Z
	DeliverySnapshotTime *string `json:"DeliverySnapshotTime,omitempty" xml:"DeliverySnapshotTime,omitempty"`
	// The description of the delivery channel.
	//
	// example:
	//
	// My OSS delivery.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
	//
	// 	- true: The specified destination receives resource non-compliance events.
	//
	// 	- false: The specified destination does not receive resource non-compliance events.
	//
	// example:
	//
	// false
	NonCompliantNotification *bool `json:"NonCompliantNotification,omitempty" xml:"NonCompliantNotification,omitempty"`
	// The ARN of the OSS bucket to which the delivered data is transferred when the size of the data exceeds the specified upper limit of the delivery channel.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	OversizedDataOSSTargetArn *string `json:"OversizedDataOSSTargetArn,omitempty" xml:"OversizedDataOSSTargetArn,omitempty"`
	// The status of the delivery channel. Valid values:
	//
	// 	- 0: The delivery channel is disabled.
	//
	// 	- 1: The delivery channel is enabled.
	//
	// example:
	//
	// 1
	Status *int32 `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetAccountId(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.AccountId = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetAggregatorId(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetCompliantSnapshot(v bool) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.CompliantSnapshot = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetConfigurationItemChangeNotification(v bool) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.ConfigurationItemChangeNotification = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetConfigurationSnapshot(v bool) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.ConfigurationSnapshot = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelAssumeRoleArn(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelAssumeRoleArn = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelCondition(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelCondition = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelId(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelId = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelName(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelName = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelTargetArn(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelTargetArn = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelType(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelType = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliverySnapshotTime(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliverySnapshotTime = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetDescription(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.Description = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetNonCompliantNotification(v bool) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.NonCompliantNotification = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetOversizedDataOSSTargetArn(v string) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.OversizedDataOSSTargetArn = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel) SetStatus(v int32) *GetAggregateConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.Status = &v
	return s
}

type GetAggregateConfigDeliveryChannelResponse struct {
	Headers    map[string]*string                             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateConfigDeliveryChannelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateConfigDeliveryChannelResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigDeliveryChannelResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigDeliveryChannelResponse) SetHeaders(v map[string]*string) *GetAggregateConfigDeliveryChannelResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponse) SetStatusCode(v int32) *GetAggregateConfigDeliveryChannelResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateConfigDeliveryChannelResponse) SetBody(v *GetAggregateConfigDeliveryChannelResponseBody) *GetAggregateConfigDeliveryChannelResponse {
	s.Body = v
	return s
}

type GetAggregateConfigRuleRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-7f00626622af0041****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the rule.
	//
	// You can call the [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html) operation to obtain the rule ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7f7d626622af0041****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*GetAggregateConfigRuleRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s GetAggregateConfigRuleRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleRequest) SetAggregatorId(v string) *GetAggregateConfigRuleRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateConfigRuleRequest) SetConfigRuleId(v string) *GetAggregateConfigRuleRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *GetAggregateConfigRuleRequest) SetTag(v []*GetAggregateConfigRuleRequestTag) *GetAggregateConfigRuleRequest {
	s.Tag = v
	return s
}

type GetAggregateConfigRuleRequestTag struct {
	// The tag key of the resource. You can specify up to 20 tag keys.
	//
	// The tag key cannot be an empty string. The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs`:. The tag key cannot contain `http://` or `https://`.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetAggregateConfigRuleRequestTag) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleRequestTag) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleRequestTag) SetKey(v string) *GetAggregateConfigRuleRequestTag {
	s.Key = &v
	return s
}

func (s *GetAggregateConfigRuleRequestTag) SetValue(v string) *GetAggregateConfigRuleRequestTag {
	s.Value = &v
	return s
}

type GetAggregateConfigRuleShrinkRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-7f00626622af0041****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the rule.
	//
	// You can call the [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html) operation to obtain the rule ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7f7d626622af0041****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s GetAggregateConfigRuleShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleShrinkRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleShrinkRequest) SetAggregatorId(v string) *GetAggregateConfigRuleShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateConfigRuleShrinkRequest) SetConfigRuleId(v string) *GetAggregateConfigRuleShrinkRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *GetAggregateConfigRuleShrinkRequest) SetTagShrink(v string) *GetAggregateConfigRuleShrinkRequest {
	s.TagShrink = &v
	return s
}

type GetAggregateConfigRuleResponseBody struct {
	// The information about the rules.
	ConfigRule *GetAggregateConfigRuleResponseBodyConfigRule `json:"ConfigRule,omitempty" xml:"ConfigRule,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// 811234F4-C3AB-4D15-B90B-F55016D1B5AA
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateConfigRuleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBody) SetConfigRule(v *GetAggregateConfigRuleResponseBodyConfigRule) *GetAggregateConfigRuleResponseBody {
	s.ConfigRule = v
	return s
}

func (s *GetAggregateConfigRuleResponseBody) SetRequestId(v string) *GetAggregateConfigRuleResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRule struct {
	// The ID of the Alibaba Cloud account to which the rule belongs.
	//
	// example:
	//
	// 120886317861****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The IDs of the members to which the rule applies. Separate multiple member IDs with commas (,).
	//
	// example:
	//
	// 120886317861****
	AccountIdsScope *string `json:"AccountIdsScope,omitempty" xml:"AccountIdsScope,omitempty"`
	// The details of compliance evaluation results.
	Compliance *GetAggregateConfigRuleResponseBodyConfigRuleCompliance `json:"Compliance,omitempty" xml:"Compliance,omitempty" type:"Struct"`
	// The ARN of the managed rule.
	//
	// example:
	//
	// acs:config::100931896542****:rule/cr-7f7d626622af0041****
	ConfigRuleArn *string `json:"ConfigRuleArn,omitempty" xml:"ConfigRuleArn,omitempty"`
	// The information about compliance evaluations performed by the rule.
	ConfigRuleEvaluationStatus *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus `json:"ConfigRuleEvaluationStatus,omitempty" xml:"ConfigRuleEvaluationStatus,omitempty" type:"Struct"`
	// The ID of the rule.
	//
	// example:
	//
	// cr-7f7d626622af0041****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the monitoring rule.
	//
	// example:
	//
	// The name of the rule.
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The status of the rule. Valid values:
	//
	// 	- ACTIVE: The rule is being used to monitor resource configurations.
	//
	// 	- DELETING: The rule is being deleted.
	//
	// 	- EVALUATING: The rule is triggered and is being used to monitor resource configurations.
	//
	// 	- INACTIVE: The rule is disabled and is no longer used to monitor resource configurations.
	//
	// example:
	//
	// ACTIVE
	ConfigRuleState *string `json:"ConfigRuleState,omitempty" xml:"ConfigRuleState,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The managed rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The managed rule is periodically triggered.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	ConfigRuleTriggerTypes *string `json:"ConfigRuleTriggerTypes,omitempty" xml:"ConfigRuleTriggerTypes,omitempty"`
	// The information about the creation of the rule.
	CreateBy *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy `json:"CreateBy,omitempty" xml:"CreateBy,omitempty" type:"Struct"`
	// The timestamp when the rule was created. Unit: milliseconds.
	//
	// example:
	//
	// 1604684022000
	CreateTimestamp *int64 `json:"CreateTimestamp,omitempty" xml:"CreateTimestamp,omitempty"`
	// The description of the managed rule.
	//
	// example:
	//
	// The description of the managed rule.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The ID of the member account to which the rule does not apply, which means that the resources within the member account are not evaluated based on the rule.
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// 120886317861****
	ExcludeAccountIdsScope *string `json:"ExcludeAccountIdsScope,omitempty" xml:"ExcludeAccountIdsScope,omitempty"`
	// The ID of the resource directory to which the rule does not apply, which means that the resources within member accounts in the resource directory are not evaluated based on the rule.
	//
	// >
	//
	// 	- This parameter applies only to a rule of a global account group.
	//
	// 	- This parameter applies only to a managed rule.
	//
	// example:
	//
	// fd-pWmkqZ****
	ExcludeFolderIdsScope *string `json:"ExcludeFolderIdsScope,omitempty" xml:"ExcludeFolderIdsScope,omitempty"`
	// The IDs of the regions excluded from the compliance evaluations performed by the rule. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// The IDs of the resource groups excluded from the compliance evaluations performed by the rule. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzdibsjjc****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource excluded from the compliance evaluations performed by the rule.
	//
	// example:
	//
	// 23642660635687****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// The scope of the tag that is excluded.
	ExcludeTagsScope []*GetAggregateConfigRuleResponseBodyConfigRuleExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The extended content, which is temporarily only used to configure the trigger time with a 24-hour cycle trigger.
	//
	// example:
	//
	// {"fixedHour":"12"}
	ExtendContent *string `json:"ExtendContent,omitempty" xml:"ExtendContent,omitempty"`
	// The ID of the resource directory to which the rule applies, which means that the resources within member accounts in the resource directory are evaluated based on the rule.
	//
	// >
	//
	// 	- This parameter applies only to rules of a global account group.
	//
	// 	- This parameter applies only to managed rules.
	//
	// example:
	//
	// fd-ZtHsRH****
	FolderIdsScope *string `json:"FolderIdsScope,omitempty" xml:"FolderIdsScope,omitempty"`
	// The input parameters of the rule.
	//
	// example:
	//
	// {"tag1Key":"ECS","tag1Value":"test"}
	InputParameters map[string]interface{} `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
	// The details of the managed rule.
	ManagedRule *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule `json:"ManagedRule,omitempty" xml:"ManagedRule,omitempty" type:"Struct"`
	// The intervals at which the managed rule is triggered. Valid values:
	//
	// 	- One_Hour: 1 hour.
	//
	// 	- Three_Hours: 3 hours.
	//
	// 	- Six_Hours: 6 hours.
	//
	// 	- Twelve_Hours: 12 hours
	//
	// 	- TwentyFour_Hours: 24 hours
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The timestamp when the rule was last updated. Unit: milliseconds.
	//
	// example:
	//
	// 1614687022000
	ModifiedTimestamp *int64 `json:"ModifiedTimestamp,omitempty" xml:"ModifiedTimestamp,omitempty"`
	// The ID of the region to which the rule applies.
	//
	// example:
	//
	// global
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group to which the rule applies.
	//
	// example:
	//
	// rg-aekzdibsjjc****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources to which the rule applies. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The names of the resource groups to which the rule applies.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// i-xxx
	ResourceNameScope *string `json:"ResourceNameScope,omitempty" xml:"ResourceNameScope,omitempty"`
	// The type of the resource evaluated by the rule.
	//
	// example:
	//
	// ACS::RAM::User
	ResourceTypesScope *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the resources that are not compliant with the rule. Valid values:
	//
	// 	- 1: high risk level
	//
	// 	- 2: medium risk level
	//
	// 	- 3: low risk level
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The information about how the rule was created.
	Source *GetAggregateConfigRuleResponseBodyConfigRuleSource `json:"Source,omitempty" xml:"Source,omitempty" type:"Struct"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The logical relationship among the tag keys if you specify multiple tag keys for the `TagKeyScope` parameter. For example, if you set the `TagKeyScope` parameter to `ECS,OSS` and the TagKeyLogicScope parameter to `AND`, the rule applies to resources with both the `ECS` and `OSS` tag keys. Valid values:
	//
	// 	- AND
	//
	// 	- OR
	//
	// example:
	//
	// AND
	TagKeyLogicScope *string `json:"TagKeyLogicScope,omitempty" xml:"TagKeyLogicScope,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The tag key used to filter resources. The rule applies only to the resources with the specified tag key.
	//
	// example:
	//
	// RAM
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The tag value used to filter resources. The rule applies only to the resources with the specified tag value.
	//
	// example:
	//
	// MFA
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The list of tags.
	Tags []*GetAggregateConfigRuleResponseBodyConfigRuleTags `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
	// The tag scope.
	TagsScope []*GetAggregateConfigRuleResponseBodyConfigRuleTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRule) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRule) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetAccountId(v int64) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.AccountId = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetAccountIdsScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.AccountIdsScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetCompliance(v *GetAggregateConfigRuleResponseBodyConfigRuleCompliance) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.Compliance = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetConfigRuleArn(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ConfigRuleArn = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetConfigRuleEvaluationStatus(v *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ConfigRuleEvaluationStatus = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetConfigRuleId(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ConfigRuleId = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetConfigRuleName(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ConfigRuleName = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetConfigRuleState(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ConfigRuleState = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetConfigRuleTriggerTypes(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ConfigRuleTriggerTypes = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetCreateBy(v *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.CreateBy = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetCreateTimestamp(v int64) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.CreateTimestamp = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetDescription(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.Description = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetExcludeAccountIdsScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ExcludeAccountIdsScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetExcludeFolderIdsScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ExcludeFolderIdsScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetExcludeRegionIdsScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetExcludeResourceGroupIdsScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetExcludeResourceIdsScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetExcludeTagsScope(v []*GetAggregateConfigRuleResponseBodyConfigRuleExcludeTagsScope) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ExcludeTagsScope = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetExtendContent(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ExtendContent = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetFolderIdsScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.FolderIdsScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetInputParameters(v map[string]interface{}) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.InputParameters = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetManagedRule(v *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ManagedRule = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetMaximumExecutionFrequency(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetModifiedTimestamp(v int64) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ModifiedTimestamp = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetRegionIdsScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.RegionIdsScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetResourceGroupIdsScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetResourceIdsScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ResourceIdsScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetResourceNameScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ResourceNameScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetResourceTypesScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.ResourceTypesScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetRiskLevel(v int32) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.RiskLevel = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetSource(v *GetAggregateConfigRuleResponseBodyConfigRuleSource) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.Source = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetTagKeyLogicScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.TagKeyLogicScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetTagKeyScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.TagKeyScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetTagValueScope(v string) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.TagValueScope = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetTags(v []*GetAggregateConfigRuleResponseBodyConfigRuleTags) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.Tags = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRule) SetTagsScope(v []*GetAggregateConfigRuleResponseBodyConfigRuleTagsScope) *GetAggregateConfigRuleResponseBodyConfigRule {
	s.TagsScope = v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRuleCompliance struct {
	// The statistics on the compliance evaluation results by compliance type. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to your resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data is available.
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The number of evaluated resources.
	//
	// example:
	//
	// 3
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleCompliance) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleCompliance) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleCompliance) SetComplianceType(v string) *GetAggregateConfigRuleResponseBodyConfigRuleCompliance {
	s.ComplianceType = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleCompliance) SetCount(v int32) *GetAggregateConfigRuleResponseBodyConfigRuleCompliance {
	s.Count = &v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus struct {
	// The timestamp when the rule was first triggered.
	//
	// example:
	//
	// 1624932221993
	FirstActivatedTimestamp *int64 `json:"FirstActivatedTimestamp,omitempty" xml:"FirstActivatedTimestamp,omitempty"`
	// Indicates whether resources were evaluated based on the rule. Valid values:
	//
	// 	- true: Resources were evaluated based on the rule.
	//
	// 	- false: Resources were not evaluated based on the rule.
	//
	// example:
	//
	// true
	FirstEvaluationStarted *bool `json:"FirstEvaluationStarted,omitempty" xml:"FirstEvaluationStarted,omitempty"`
	// The error code returned for the last failed compliance evaluation.
	//
	// example:
	//
	// TimeOut
	LastErrorCode *string `json:"LastErrorCode,omitempty" xml:"LastErrorCode,omitempty"`
	// The error message returned for the last failed compliance evaluation.
	//
	// example:
	//
	// time out
	LastErrorMessage *string `json:"LastErrorMessage,omitempty" xml:"LastErrorMessage,omitempty"`
	// The timestamp when the last failed compliance evaluation of the rule ended. Unit: milliseconds.
	//
	// example:
	//
	// 1614687022000
	LastFailedEvaluationTimestamp *int64 `json:"LastFailedEvaluationTimestamp,omitempty" xml:"LastFailedEvaluationTimestamp,omitempty"`
	// The timestamp when the last failed compliance evaluation of the rule started. Unit: milliseconds.
	//
	// example:
	//
	// 1614687022000
	LastFailedInvocationTimestamp *int64 `json:"LastFailedInvocationTimestamp,omitempty" xml:"LastFailedInvocationTimestamp,omitempty"`
	// The timestamp when the last successful compliance evaluation of the rule ended. Unit: milliseconds.
	//
	// example:
	//
	// 1624932227486
	LastSuccessfulEvaluationTimestamp *int64 `json:"LastSuccessfulEvaluationTimestamp,omitempty" xml:"LastSuccessfulEvaluationTimestamp,omitempty"`
	// The timestamp when the last successful compliance evaluation of the rule started. Unit: milliseconds.
	//
	// example:
	//
	// 1624932227476
	LastSuccessfulInvocationTimestamp *int64 `json:"LastSuccessfulInvocationTimestamp,omitempty" xml:"LastSuccessfulInvocationTimestamp,omitempty"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetFirstActivatedTimestamp(v int64) *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.FirstActivatedTimestamp = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetFirstEvaluationStarted(v bool) *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.FirstEvaluationStarted = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastErrorCode(v string) *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastErrorCode = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastErrorMessage(v string) *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastErrorMessage = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastFailedEvaluationTimestamp(v int64) *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastFailedEvaluationTimestamp = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastFailedInvocationTimestamp(v int64) *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastFailedInvocationTimestamp = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastSuccessfulEvaluationTimestamp(v int64) *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastSuccessfulEvaluationTimestamp = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastSuccessfulInvocationTimestamp(v int64) *GetAggregateConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastSuccessfulInvocationTimestamp = &v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRuleCreateBy struct {
	// The ID of the account group.
	//
	// example:
	//
	// ca-04b3fd170e340007****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The name of the account group.
	//
	// example:
	//
	// Test_Group
	AggregatorName *string `json:"AggregatorName,omitempty" xml:"AggregatorName,omitempty"`
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-541e626622af008****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// example:
	//
	// The name of the compliance package.
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the account that was used to create the rule.
	//
	// example:
	//
	// 100931896542****
	CreatorId *string `json:"CreatorId,omitempty" xml:"CreatorId,omitempty"`
	// The name of the account that was used to create the rule.
	//
	// example:
	//
	// Alice
	CreatorName *string `json:"CreatorName,omitempty" xml:"CreatorName,omitempty"`
	// The type of the entity to which the rule belongs. The value is fixed to `AGGREGATOR`, which indicates an account group.
	//
	// example:
	//
	// AGGREGATOR
	CreatorType *string `json:"CreatorType,omitempty" xml:"CreatorType,omitempty"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleCreateBy) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleCreateBy) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy) SetAggregatorId(v string) *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy) SetAggregatorName(v string) *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy {
	s.AggregatorName = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy) SetCompliancePackId(v string) *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy {
	s.CompliancePackId = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy) SetCompliancePackName(v string) *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy {
	s.CompliancePackName = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy) SetCreatorId(v string) *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy {
	s.CreatorId = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy) SetCreatorName(v string) *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy {
	s.CreatorName = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy) SetCreatorType(v string) *GetAggregateConfigRuleResponseBodyConfigRuleCreateBy {
	s.CreatorType = &v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRuleExcludeTagsScope struct {
	// The key of the tag.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The value of the tag.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleExcludeTagsScope) SetTagKey(v string) *GetAggregateConfigRuleResponseBodyConfigRuleExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleExcludeTagsScope) SetTagValue(v string) *GetAggregateConfigRuleResponseBodyConfigRuleExcludeTagsScope {
	s.TagValue = &v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRuleManagedRule struct {
	// The required input parameters of the managed rule.
	//
	// example:
	//
	// {}
	CompulsoryInputParameterDetails map[string]interface{} `json:"CompulsoryInputParameterDetails,omitempty" xml:"CompulsoryInputParameterDetails,omitempty"`
	// The description of the managed rule.
	//
	// example:
	//
	// The description of the managed rule.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The identifier of the managed rule.
	//
	// example:
	//
	// ram-user-mfa-check
	Identifier *string `json:"Identifier,omitempty" xml:"Identifier,omitempty"`
	// The tags of the managed rule.
	Labels []*string `json:"Labels,omitempty" xml:"Labels,omitempty" type:"Repeated"`
	// The name of the managed rule.
	//
	// example:
	//
	// ram-user-mfa-check
	ManagedRuleName *string `json:"ManagedRuleName,omitempty" xml:"ManagedRuleName,omitempty"`
	// The optional input parameters of the managed rule.
	//
	// example:
	//
	// {}
	OptionalInputParameterDetails map[string]interface{} `json:"OptionalInputParameterDetails,omitempty" xml:"OptionalInputParameterDetails,omitempty"`
	// The details of the source of the managed rule.
	SourceDetails []*GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails `json:"SourceDetails,omitempty" xml:"SourceDetails,omitempty" type:"Repeated"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleManagedRule) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleManagedRule) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule) SetCompulsoryInputParameterDetails(v map[string]interface{}) *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule {
	s.CompulsoryInputParameterDetails = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule) SetDescription(v string) *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule {
	s.Description = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule) SetIdentifier(v string) *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule {
	s.Identifier = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule) SetLabels(v []*string) *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule {
	s.Labels = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule) SetManagedRuleName(v string) *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule {
	s.ManagedRuleName = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule) SetOptionalInputParameterDetails(v map[string]interface{}) *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule {
	s.OptionalInputParameterDetails = v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule) SetSourceDetails(v []*GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) *GetAggregateConfigRuleResponseBodyConfigRuleManagedRule {
	s.SourceDetails = v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails struct {
	// The event source of the managed rule.
	//
	// >  Only events related to Cloud Config are supported. The value is fixed to aliyun.config.
	//
	// example:
	//
	// aliyun.config
	EventSource *string `json:"EventSource,omitempty" xml:"EventSource,omitempty"`
	// The intervals at which the managed rule is triggered. Valid values:
	//
	// 	- One_Hour: 1 hour.
	//
	// 	- Three_Hours: 3 hours.
	//
	// 	- Six_Hours: 6 hours.
	//
	// 	- Twelve_Hours: 12 hours
	//
	// 	- TwentyFour_Hours: 24 hours
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The managed rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The managed rule is periodically triggered.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	MessageType *string `json:"MessageType,omitempty" xml:"MessageType,omitempty"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) SetEventSource(v string) *GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails {
	s.EventSource = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) SetMaximumExecutionFrequency(v string) *GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) SetMessageType(v string) *GetAggregateConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails {
	s.MessageType = &v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRuleSource struct {
	// The identifier of the rule.
	//
	// 	- If the rule was created based on a managed rule, the value of this parameter is the name of the managed rule.
	//
	// 	- If the rule is a custom rule, the value of this parameter is the Alibaba Cloud Resource Name (ARN) of the relevant function in Function Compute.
	//
	// example:
	//
	// acs:fc:cn-hangzhou:100931896542****:services/ConfigService.LATEST/functions/specific-config
	Identifier *string `json:"Identifier,omitempty" xml:"Identifier,omitempty"`
	// The way in which the rule was created. Valid values:
	//
	// 	- CUSTOM_FC: The rule is a custom rule.
	//
	// 	- ALIYUN: The rule was created based on a managed rule of Alibaba Cloud.
	//
	// example:
	//
	// ALIYUN
	Owner *string `json:"Owner,omitempty" xml:"Owner,omitempty"`
	// The details of the source of the rule.
	SourceDetails []*GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails `json:"SourceDetails,omitempty" xml:"SourceDetails,omitempty" type:"Repeated"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleSource) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleSource) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleSource) SetIdentifier(v string) *GetAggregateConfigRuleResponseBodyConfigRuleSource {
	s.Identifier = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleSource) SetOwner(v string) *GetAggregateConfigRuleResponseBodyConfigRuleSource {
	s.Owner = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleSource) SetSourceDetails(v []*GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails) *GetAggregateConfigRuleResponseBodyConfigRuleSource {
	s.SourceDetails = v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails struct {
	// The event source of the managed rule.
	//
	// >  Only events related to Cloud Config are supported. The value is fixed to aliyun.config.
	//
	// example:
	//
	// aliyun.config
	EventSource *string `json:"EventSource,omitempty" xml:"EventSource,omitempty"`
	// The intervals at which the managed rule is triggered. Valid values:
	//
	// 	- One_Hour: 1 hour.
	//
	// 	- Three_Hours: 3 hours.
	//
	// 	- Six_Hours: 6 hours.
	//
	// 	- Twelve_Hours: 12 hours
	//
	// 	- TwentyFour_Hours: 24 hours
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The managed rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The managed rule is periodically triggered.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	MessageType *string `json:"MessageType,omitempty" xml:"MessageType,omitempty"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails) SetEventSource(v string) *GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails {
	s.EventSource = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails) SetMaximumExecutionFrequency(v string) *GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails) SetMessageType(v string) *GetAggregateConfigRuleResponseBodyConfigRuleSourceSourceDetails {
	s.MessageType = &v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRuleTags struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleTags) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleTags) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleTags) SetTagKey(v string) *GetAggregateConfigRuleResponseBodyConfigRuleTags {
	s.TagKey = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleTags) SetTagValue(v string) *GetAggregateConfigRuleResponseBodyConfigRuleTags {
	s.TagValue = &v
	return s
}

type GetAggregateConfigRuleResponseBodyConfigRuleTagsScope struct {
	// The key of the tag.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The value of the tag.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleTagsScope) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponseBodyConfigRuleTagsScope) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleTagsScope) SetTagKey(v string) *GetAggregateConfigRuleResponseBodyConfigRuleTagsScope {
	s.TagKey = &v
	return s
}

func (s *GetAggregateConfigRuleResponseBodyConfigRuleTagsScope) SetTagValue(v string) *GetAggregateConfigRuleResponseBodyConfigRuleTagsScope {
	s.TagValue = &v
	return s
}

type GetAggregateConfigRuleResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateConfigRuleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateConfigRuleResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleResponse) SetHeaders(v map[string]*string) *GetAggregateConfigRuleResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateConfigRuleResponse) SetStatusCode(v int32) *GetAggregateConfigRuleResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateConfigRuleResponse) SetBody(v *GetAggregateConfigRuleResponseBody) *GetAggregateConfigRuleResponse {
	s.Body = v
	return s
}

type GetAggregateConfigRuleComplianceByPackRequest struct {
	// The ID of the account group.
	//
	// For information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-04b3fd170e340007****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
}

func (s GetAggregateConfigRuleComplianceByPackRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleComplianceByPackRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleComplianceByPackRequest) SetAggregatorId(v string) *GetAggregateConfigRuleComplianceByPackRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateConfigRuleComplianceByPackRequest) SetCompliancePackId(v string) *GetAggregateConfigRuleComplianceByPackRequest {
	s.CompliancePackId = &v
	return s
}

type GetAggregateConfigRuleComplianceByPackResponseBody struct {
	// The compliance evaluation results that are returned by rules in the compliance package.
	ConfigRuleComplianceResult *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult `json:"ConfigRuleComplianceResult,omitempty" xml:"ConfigRuleComplianceResult,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// C6B0C0A8-3245-48F1-AEAB-BC1A446E99D0
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateConfigRuleComplianceByPackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleComplianceByPackResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleComplianceByPackResponseBody) SetConfigRuleComplianceResult(v *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) *GetAggregateConfigRuleComplianceByPackResponseBody {
	s.ConfigRuleComplianceResult = v
	return s
}

func (s *GetAggregateConfigRuleComplianceByPackResponseBody) SetRequestId(v string) *GetAggregateConfigRuleComplianceByPackResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult struct {
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The information about rules in the compliance package.
	ConfigRuleCompliances []*GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances `json:"ConfigRuleCompliances,omitempty" xml:"ConfigRuleCompliances,omitempty" type:"Repeated"`
	// The number of rules against which specific resources are evaluated as non-compliant.
	//
	// example:
	//
	// 0
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The total number of rules in the compliance package.
	//
	// example:
	//
	// 1
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) SetCompliancePackId(v string) *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult {
	s.CompliancePackId = &v
	return s
}

func (s *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) SetConfigRuleCompliances(v []*GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult {
	s.ConfigRuleCompliances = v
	return s
}

func (s *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) SetNonCompliantCount(v int32) *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult {
	s.NonCompliantCount = &v
	return s
}

func (s *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) SetTotalCount(v int32) *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult {
	s.TotalCount = &v
	return s
}

type GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances struct {
	// The compliance evaluation result returned by the rule. Valid values:
	//
	// 	- COMPLIANT: The relevant resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The relevant resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to your resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The ID of the rule.
	//
	// example:
	//
	// cr-fdc8626622af00f9****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
}

func (s GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) SetComplianceType(v string) *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances {
	s.ComplianceType = &v
	return s
}

func (s *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) SetConfigRuleId(v string) *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances {
	s.ConfigRuleId = &v
	return s
}

func (s *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) SetConfigRuleName(v string) *GetAggregateConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances {
	s.ConfigRuleName = &v
	return s
}

type GetAggregateConfigRuleComplianceByPackResponse struct {
	Headers    map[string]*string                                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateConfigRuleComplianceByPackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateConfigRuleComplianceByPackResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleComplianceByPackResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleComplianceByPackResponse) SetHeaders(v map[string]*string) *GetAggregateConfigRuleComplianceByPackResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateConfigRuleComplianceByPackResponse) SetStatusCode(v int32) *GetAggregateConfigRuleComplianceByPackResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateConfigRuleComplianceByPackResponse) SetBody(v *GetAggregateConfigRuleComplianceByPackResponseBody) *GetAggregateConfigRuleComplianceByPackResponse {
	s.Body = v
	return s
}

type GetAggregateConfigRuleSummaryByRiskLevelRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-3a58626622af0005****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
}

func (s GetAggregateConfigRuleSummaryByRiskLevelRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleSummaryByRiskLevelRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleSummaryByRiskLevelRequest) SetAggregatorId(v string) *GetAggregateConfigRuleSummaryByRiskLevelRequest {
	s.AggregatorId = &v
	return s
}

type GetAggregateConfigRuleSummaryByRiskLevelResponseBody struct {
	// The summary of compliance evaluation results by rule risk level.
	ConfigRuleSummaries []*GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries `json:"ConfigRuleSummaries,omitempty" xml:"ConfigRuleSummaries,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// A3CDD98C-DE65-46AC-B2D2-04A4A9AB5B73
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateConfigRuleSummaryByRiskLevelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleSummaryByRiskLevelResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleSummaryByRiskLevelResponseBody) SetConfigRuleSummaries(v []*GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) *GetAggregateConfigRuleSummaryByRiskLevelResponseBody {
	s.ConfigRuleSummaries = v
	return s
}

func (s *GetAggregateConfigRuleSummaryByRiskLevelResponseBody) SetRequestId(v string) *GetAggregateConfigRuleSummaryByRiskLevelResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries struct {
	// The number of rules against which specific resources are evaluated as compliant.
	//
	// example:
	//
	// 3
	CompliantCount *int32 `json:"CompliantCount,omitempty" xml:"CompliantCount,omitempty"`
	// The number of rules against which specific resources are evaluated as non-compliant.
	//
	// example:
	//
	// 1
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) SetCompliantCount(v int32) *GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries {
	s.CompliantCount = &v
	return s
}

func (s *GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) SetNonCompliantCount(v int32) *GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries {
	s.NonCompliantCount = &v
	return s
}

func (s *GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) SetRiskLevel(v int32) *GetAggregateConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries {
	s.RiskLevel = &v
	return s
}

type GetAggregateConfigRuleSummaryByRiskLevelResponse struct {
	Headers    map[string]*string                                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateConfigRuleSummaryByRiskLevelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateConfigRuleSummaryByRiskLevelResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRuleSummaryByRiskLevelResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRuleSummaryByRiskLevelResponse) SetHeaders(v map[string]*string) *GetAggregateConfigRuleSummaryByRiskLevelResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateConfigRuleSummaryByRiskLevelResponse) SetStatusCode(v int32) *GetAggregateConfigRuleSummaryByRiskLevelResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateConfigRuleSummaryByRiskLevelResponse) SetBody(v *GetAggregateConfigRuleSummaryByRiskLevelResponseBody) *GetAggregateConfigRuleSummaryByRiskLevelResponse {
	s.Body = v
	return s
}

type GetAggregateConfigRulesReportRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance evaluation report.
	//
	// example:
	//
	// crp-88176457e0d900c9****
	ReportId *string `json:"ReportId,omitempty" xml:"ReportId,omitempty"`
}

func (s GetAggregateConfigRulesReportRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRulesReportRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRulesReportRequest) SetAggregatorId(v string) *GetAggregateConfigRulesReportRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateConfigRulesReportRequest) SetReportId(v string) *GetAggregateConfigRulesReportRequest {
	s.ReportId = &v
	return s
}

type GetAggregateConfigRulesReportResponseBody struct {
	// The compliance evaluation report.
	ConfigRulesReport *GetAggregateConfigRulesReportResponseBodyConfigRulesReport `json:"ConfigRulesReport,omitempty" xml:"ConfigRulesReport,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// F0BCC7B2-D0E4-49B0-95D2-6689CFB08D31
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateConfigRulesReportResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRulesReportResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRulesReportResponseBody) SetConfigRulesReport(v *GetAggregateConfigRulesReportResponseBodyConfigRulesReport) *GetAggregateConfigRulesReportResponseBody {
	s.ConfigRulesReport = v
	return s
}

func (s *GetAggregateConfigRulesReportResponseBody) SetRequestId(v string) *GetAggregateConfigRulesReportResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateConfigRulesReportResponseBodyConfigRulesReport struct {
	// The ID of the management account to which the rules belong.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the account group.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The timestamp when the compliance evaluation report was generated. Unit: milliseconds.
	//
	// example:
	//
	// 1624332329593
	ReportCreateTimestamp *int64 `json:"ReportCreateTimestamp,omitempty" xml:"ReportCreateTimestamp,omitempty"`
	// The ID of the compliance evaluation report.
	//
	// example:
	//
	// crp-88176457e0d900c9****
	ReportId *string `json:"ReportId,omitempty" xml:"ReportId,omitempty"`
	// The status of the compliance evaluation report. Valid values:
	//
	// 	- NONE: The compliance evaluation report is not generated.
	//
	// 	- CREATING: The compliance evaluation report is being generated.
	//
	// 	- COMPLETE: The compliance evaluation report was generated.
	//
	// example:
	//
	// CREATING
	ReportStatus *string `json:"ReportStatus,omitempty" xml:"ReportStatus,omitempty"`
	// The URL used to download the compliance evaluation report.
	ReportUrl *string `json:"ReportUrl,omitempty" xml:"ReportUrl,omitempty"`
}

func (s GetAggregateConfigRulesReportResponseBodyConfigRulesReport) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRulesReportResponseBodyConfigRulesReport) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRulesReportResponseBodyConfigRulesReport) SetAccountId(v int64) *GetAggregateConfigRulesReportResponseBodyConfigRulesReport {
	s.AccountId = &v
	return s
}

func (s *GetAggregateConfigRulesReportResponseBodyConfigRulesReport) SetAggregatorId(v string) *GetAggregateConfigRulesReportResponseBodyConfigRulesReport {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateConfigRulesReportResponseBodyConfigRulesReport) SetReportCreateTimestamp(v int64) *GetAggregateConfigRulesReportResponseBodyConfigRulesReport {
	s.ReportCreateTimestamp = &v
	return s
}

func (s *GetAggregateConfigRulesReportResponseBodyConfigRulesReport) SetReportId(v string) *GetAggregateConfigRulesReportResponseBodyConfigRulesReport {
	s.ReportId = &v
	return s
}

func (s *GetAggregateConfigRulesReportResponseBodyConfigRulesReport) SetReportStatus(v string) *GetAggregateConfigRulesReportResponseBodyConfigRulesReport {
	s.ReportStatus = &v
	return s
}

func (s *GetAggregateConfigRulesReportResponseBodyConfigRulesReport) SetReportUrl(v string) *GetAggregateConfigRulesReportResponseBodyConfigRulesReport {
	s.ReportUrl = &v
	return s
}

type GetAggregateConfigRulesReportResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateConfigRulesReportResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateConfigRulesReportResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateConfigRulesReportResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateConfigRulesReportResponse) SetHeaders(v map[string]*string) *GetAggregateConfigRulesReportResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateConfigRulesReportResponse) SetStatusCode(v int32) *GetAggregateConfigRulesReportResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateConfigRulesReportResponse) SetBody(v *GetAggregateConfigRulesReportResponseBody) *GetAggregateConfigRulesReportResponse {
	s.Body = v
	return s
}

type GetAggregateDiscoveredResourceRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-5885626622af0008****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// Specifies whether to query the compliance results of the resource. Valid values:
	//
	// 	- 0 (default): does not query the compliance results of the resource.
	//
	// 	- 1: queries the compliance results of the resource.
	//
	// example:
	//
	// 0
	ComplianceOption *int32 `json:"ComplianceOption,omitempty" xml:"ComplianceOption,omitempty"`
	// The ID of the region in which the resource resides.
	//
	// For more information about how to query the ID of a region in which the resource resides, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/411691.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the Alibaba Cloud account to which the specified resource belongs in the account group.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// The resource ID.
	//
	// For more information about how to obtain the ID of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/411691.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// Deprecated
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
	// The type of the resource.
	//
	// For more information about how to obtain the type of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/411691.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s GetAggregateDiscoveredResourceRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateDiscoveredResourceRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateDiscoveredResourceRequest) SetAggregatorId(v string) *GetAggregateDiscoveredResourceRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateDiscoveredResourceRequest) SetComplianceOption(v int32) *GetAggregateDiscoveredResourceRequest {
	s.ComplianceOption = &v
	return s
}

func (s *GetAggregateDiscoveredResourceRequest) SetRegion(v string) *GetAggregateDiscoveredResourceRequest {
	s.Region = &v
	return s
}

func (s *GetAggregateDiscoveredResourceRequest) SetResourceAccountId(v int64) *GetAggregateDiscoveredResourceRequest {
	s.ResourceAccountId = &v
	return s
}

func (s *GetAggregateDiscoveredResourceRequest) SetResourceId(v string) *GetAggregateDiscoveredResourceRequest {
	s.ResourceId = &v
	return s
}

func (s *GetAggregateDiscoveredResourceRequest) SetResourceOwnerId(v int64) *GetAggregateDiscoveredResourceRequest {
	s.ResourceOwnerId = &v
	return s
}

func (s *GetAggregateDiscoveredResourceRequest) SetResourceType(v string) *GetAggregateDiscoveredResourceRequest {
	s.ResourceType = &v
	return s
}

type GetAggregateDiscoveredResourceResponseBody struct {
	// The details of the resource.
	DiscoveredResourceDetail *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail `json:"DiscoveredResourceDetail,omitempty" xml:"DiscoveredResourceDetail,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// E4D71ACE-6B0A-46E0-8352-56952378CC7F
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateDiscoveredResourceResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateDiscoveredResourceResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateDiscoveredResourceResponseBody) SetDiscoveredResourceDetail(v *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) *GetAggregateDiscoveredResourceResponseBody {
	s.DiscoveredResourceDetail = v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBody) SetRequestId(v string) *GetAggregateDiscoveredResourceResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail struct {
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the zone in which the resource resides.
	//
	// example:
	//
	// cn-hangzhou-h
	AvailabilityZone *string `json:"AvailabilityZone,omitempty" xml:"AvailabilityZone,omitempty"`
	// The compliance evaluation result of the resource. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resource.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// 	- IGNORED: The resource is ignored during compliance evaluation.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The configuration of the resource.
	//
	// example:
	//
	// {\\"AccessControlList\\":{\\"Grant\\":\\"private\\"},\\"ServerSideEncryptionRule\\":{\\"SSEAlgorithm\\":\\"None\\"},\\"Comment\\":\\"\\",\\"CreationDate\\":\\"2021-06-29T10:05:12.000Z\\",\\"Owner\\":{\\"DisplayName\\":\\"100931896542****\\",\\"ID\\":\\"100931896542****\\"},\\"StorageClass\\":\\"Standard\\",\\"DataRedundancyType\\":\\"LRS\\",\\"AllowEmptyReferer\\":\\"true\\",\\"Name\\":\\"new-bucket\\",\\"BucketPolicy\\":{\\"LogPrefix\\":\\"\\",\\"LogBucket\\":\\"\\"},\\"ExtranetEndpoint\\":\\"oss-cn-hangzhou.aliyuncs.com\\",\\"IntranetEndpoint\\":\\"oss-cn-hangzhou-internal.aliyuncs.com\\",\\"Location\\":\\"oss-cn-hangzhou\\"}
	Configuration *string `json:"Configuration,omitempty" xml:"Configuration,omitempty"`
	// The region ID.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The timestamp when the resource was created.
	//
	// example:
	//
	// 1624961112000
	ResourceCreationTime *int64 `json:"ResourceCreationTime,omitempty" xml:"ResourceCreationTime,omitempty"`
	// Indicates whether the resource was deleted. Valid values:
	//
	// 	- 1: The resource was not deleted.
	//
	// 	- 0: The resource was deleted.
	//
	// example:
	//
	// 1
	ResourceDeleted *int32 `json:"ResourceDeleted,omitempty" xml:"ResourceDeleted,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The name of the resource.
	//
	// example:
	//
	// new-bucket
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The status of the resource. The value of this parameter varies based on the resource type and may be empty.
	//
	// 	- If the ResourceType parameter is set to ACS::ECS::Instance, the resource is an ECS instance that has a specific state. In this case, the valid values of this parameter are Running and Stopped.
	//
	// 	- If the ResourceType parameter is ACS::OSS::Bucket, the resource is an Object Storage Service (OSS) bucket that is not in a specific state. In this case, this parameter is left empty.
	//
	// example:
	//
	// offline
	ResourceStatus *string `json:"ResourceStatus,omitempty" xml:"ResourceStatus,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::OSS::BucketACS::CDN::Domain
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	//
	// example:
	//
	// {\\"\\"hc\\"\\":[\\"\\"value2\\"\\"]}
	Tags *string `json:"Tags,omitempty" xml:"Tags,omitempty"`
}

func (s GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) GoString() string {
	return s.String()
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetAccountId(v int64) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.AccountId = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetAvailabilityZone(v string) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.AvailabilityZone = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetComplianceType(v string) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ComplianceType = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetConfiguration(v string) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.Configuration = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetRegion(v string) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.Region = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceCreationTime(v int64) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceCreationTime = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceDeleted(v int32) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceDeleted = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceId(v string) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceId = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceName(v string) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceName = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceStatus(v string) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceStatus = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceType(v string) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceType = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetTags(v string) *GetAggregateDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.Tags = &v
	return s
}

type GetAggregateDiscoveredResourceResponse struct {
	Headers    map[string]*string                          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateDiscoveredResourceResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateDiscoveredResourceResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateDiscoveredResourceResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateDiscoveredResourceResponse) SetHeaders(v map[string]*string) *GetAggregateDiscoveredResourceResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateDiscoveredResourceResponse) SetStatusCode(v int32) *GetAggregateDiscoveredResourceResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateDiscoveredResourceResponse) SetBody(v *GetAggregateDiscoveredResourceResponseBody) *GetAggregateDiscoveredResourceResponse {
	s.Body = v
	return s
}

type GetAggregateResourceComplianceByConfigRuleRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The compliance evaluation result of the resources. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as incompliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to your resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The ID of the rule.
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-d369626622af008e****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The ID of the Alibaba Cloud account to which the resources in the account group belong.
	//
	// > You can use either the ResourceAccountId or ResourceOwnerId parameter. We recommend that you use the ResourceAccountId parameter.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// Deprecated
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
}

func (s GetAggregateResourceComplianceByConfigRuleRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceByConfigRuleRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceByConfigRuleRequest) SetAggregatorId(v string) *GetAggregateResourceComplianceByConfigRuleRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateResourceComplianceByConfigRuleRequest) SetComplianceType(v string) *GetAggregateResourceComplianceByConfigRuleRequest {
	s.ComplianceType = &v
	return s
}

func (s *GetAggregateResourceComplianceByConfigRuleRequest) SetConfigRuleId(v string) *GetAggregateResourceComplianceByConfigRuleRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *GetAggregateResourceComplianceByConfigRuleRequest) SetResourceAccountId(v int64) *GetAggregateResourceComplianceByConfigRuleRequest {
	s.ResourceAccountId = &v
	return s
}

func (s *GetAggregateResourceComplianceByConfigRuleRequest) SetResourceOwnerId(v int64) *GetAggregateResourceComplianceByConfigRuleRequest {
	s.ResourceOwnerId = &v
	return s
}

type GetAggregateResourceComplianceByConfigRuleResponseBody struct {
	// The compliance result.
	ComplianceResult *GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResult `json:"ComplianceResult,omitempty" xml:"ComplianceResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 23306AB1-34E0-468F-BD7B-68D8AEAB754C
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateResourceComplianceByConfigRuleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceByConfigRuleResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceByConfigRuleResponseBody) SetComplianceResult(v *GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResult) *GetAggregateResourceComplianceByConfigRuleResponseBody {
	s.ComplianceResult = v
	return s
}

func (s *GetAggregateResourceComplianceByConfigRuleResponseBody) SetRequestId(v string) *GetAggregateResourceComplianceByConfigRuleResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResult struct {
	// The compliance list result.
	Compliances []*GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances `json:"Compliances,omitempty" xml:"Compliances,omitempty" type:"Repeated"`
	// The total number of evaluated resources.
	//
	// example:
	//
	// 5
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResult) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResult) SetCompliances(v []*GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances) *GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResult {
	s.Compliances = v
	return s
}

func (s *GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResult) SetTotalCount(v int64) *GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResult {
	s.TotalCount = &v
	return s
}

type GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances struct {
	// The compliance evaluation results of the resources. Valid values:
	//
	// 	- COMPLIANT: The resource was evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource was evaluated as incompliant.
	//
	// 	- NOT_APPLICABLE: The rule did not apply to your resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data was available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The number of resources that have compliance evaluation results. For example, if the value of the `ComplianceType` parameter is `COMPLIANT`, this parameter value indicates the number of compliant resources.
	//
	// example:
	//
	// 3
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
}

func (s GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances) SetComplianceType(v string) *GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances {
	s.ComplianceType = &v
	return s
}

func (s *GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances) SetCount(v int32) *GetAggregateResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances {
	s.Count = &v
	return s
}

type GetAggregateResourceComplianceByConfigRuleResponse struct {
	Headers    map[string]*string                                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateResourceComplianceByConfigRuleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateResourceComplianceByConfigRuleResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceByConfigRuleResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceByConfigRuleResponse) SetHeaders(v map[string]*string) *GetAggregateResourceComplianceByConfigRuleResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateResourceComplianceByConfigRuleResponse) SetStatusCode(v int32) *GetAggregateResourceComplianceByConfigRuleResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateResourceComplianceByConfigRuleResponse) SetBody(v *GetAggregateResourceComplianceByConfigRuleResponseBody) *GetAggregateResourceComplianceByConfigRuleResponse {
	s.Body = v
	return s
}

type GetAggregateResourceComplianceByPackRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
}

func (s GetAggregateResourceComplianceByPackRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceByPackRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceByPackRequest) SetAggregatorId(v string) *GetAggregateResourceComplianceByPackRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateResourceComplianceByPackRequest) SetCompliancePackId(v string) *GetAggregateResourceComplianceByPackRequest {
	s.CompliancePackId = &v
	return s
}

type GetAggregateResourceComplianceByPackResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The compliance evaluation results returned.
	ResourceComplianceResult *GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult `json:"ResourceComplianceResult,omitempty" xml:"ResourceComplianceResult,omitempty" type:"Struct"`
}

func (s GetAggregateResourceComplianceByPackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceByPackResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceByPackResponseBody) SetRequestId(v string) *GetAggregateResourceComplianceByPackResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetAggregateResourceComplianceByPackResponseBody) SetResourceComplianceResult(v *GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult) *GetAggregateResourceComplianceByPackResponseBody {
	s.ResourceComplianceResult = v
	return s
}

type GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult struct {
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The number of non-compliant resources.
	//
	// example:
	//
	// 7
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The total number of resources.
	//
	// example:
	//
	// 10
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult) SetCompliancePackId(v string) *GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult {
	s.CompliancePackId = &v
	return s
}

func (s *GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult) SetNonCompliantCount(v int32) *GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult {
	s.NonCompliantCount = &v
	return s
}

func (s *GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult) SetTotalCount(v int32) *GetAggregateResourceComplianceByPackResponseBodyResourceComplianceResult {
	s.TotalCount = &v
	return s
}

type GetAggregateResourceComplianceByPackResponse struct {
	Headers    map[string]*string                                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateResourceComplianceByPackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateResourceComplianceByPackResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceByPackResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceByPackResponse) SetHeaders(v map[string]*string) *GetAggregateResourceComplianceByPackResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateResourceComplianceByPackResponse) SetStatusCode(v int32) *GetAggregateResourceComplianceByPackResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateResourceComplianceByPackResponse) SetBody(v *GetAggregateResourceComplianceByPackResponseBody) *GetAggregateResourceComplianceByPackResponse {
	s.Body = v
	return s
}

type GetAggregateResourceComplianceGroupByRegionRequest struct {
	// The ID of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-d6c9626622af0052****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The rule IDs. Separate multiple rule IDs with commas (,).
	//
	// example:
	//
	// cr-2652626622af005e****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s GetAggregateResourceComplianceGroupByRegionRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByRegionRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByRegionRequest) SetAggregatorId(v string) *GetAggregateResourceComplianceGroupByRegionRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateResourceComplianceGroupByRegionRequest) SetConfigRuleIds(v string) *GetAggregateResourceComplianceGroupByRegionRequest {
	s.ConfigRuleIds = &v
	return s
}

type GetAggregateResourceComplianceGroupByRegionResponseBody struct {
	// The queried evaluation results.
	ComplianceResult *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResult `json:"ComplianceResult,omitempty" xml:"ComplianceResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 5E3A847A-5D40-54A1-A2CE-77A87823ED07
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateResourceComplianceGroupByRegionResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByRegionResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByRegionResponseBody) SetComplianceResult(v *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResult) *GetAggregateResourceComplianceGroupByRegionResponseBody {
	s.ComplianceResult = v
	return s
}

func (s *GetAggregateResourceComplianceGroupByRegionResponseBody) SetRequestId(v string) *GetAggregateResourceComplianceGroupByRegionResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResult struct {
	// The evaluation results grouped by region.
	ComplianceResultList []*GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList `json:"ComplianceResultList,omitempty" xml:"ComplianceResultList,omitempty" type:"Repeated"`
}

func (s GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResult) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResult) SetComplianceResultList(v []*GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList) *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResult {
	s.ComplianceResultList = v
	return s
}

type GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList struct {
	// The queried evaluation results.
	Compliances []*GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances `json:"Compliances,omitempty" xml:"Compliances,omitempty" type:"Repeated"`
	// The region ID of the evaluated resource.
	//
	// example:
	//
	// cn-beijing
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList) SetCompliances(v []*GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances) *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList {
	s.Compliances = v
	return s
}

func (s *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList) SetRegionId(v string) *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList {
	s.RegionId = &v
	return s
}

type GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances struct {
	// The evaluation result. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resource.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The total number of evaluation results.
	//
	// example:
	//
	// 1
	Count *int64 `json:"Count,omitempty" xml:"Count,omitempty"`
}

func (s GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances) SetComplianceType(v string) *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances {
	s.ComplianceType = &v
	return s
}

func (s *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances) SetCount(v int64) *GetAggregateResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances {
	s.Count = &v
	return s
}

type GetAggregateResourceComplianceGroupByRegionResponse struct {
	Headers    map[string]*string                                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateResourceComplianceGroupByRegionResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateResourceComplianceGroupByRegionResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByRegionResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByRegionResponse) SetHeaders(v map[string]*string) *GetAggregateResourceComplianceGroupByRegionResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateResourceComplianceGroupByRegionResponse) SetStatusCode(v int32) *GetAggregateResourceComplianceGroupByRegionResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateResourceComplianceGroupByRegionResponse) SetBody(v *GetAggregateResourceComplianceGroupByRegionResponseBody) *GetAggregateResourceComplianceGroupByRegionResponse {
	s.Body = v
	return s
}

type GetAggregateResourceComplianceGroupByResourceTypeRequest struct {
	// The ID of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-cdbd626622af0042****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the rule. Separate multiple rule IDs with commas (,).
	//
	// example:
	//
	// cr-2541626622af0000****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s GetAggregateResourceComplianceGroupByResourceTypeRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByResourceTypeRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeRequest) SetAggregatorId(v string) *GetAggregateResourceComplianceGroupByResourceTypeRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeRequest) SetConfigRuleIds(v string) *GetAggregateResourceComplianceGroupByResourceTypeRequest {
	s.ConfigRuleIds = &v
	return s
}

type GetAggregateResourceComplianceGroupByResourceTypeResponseBody struct {
	// The queried evaluation results.
	ComplianceResult *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResult `json:"ComplianceResult,omitempty" xml:"ComplianceResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 0CE6AEE1-B3D8-530A-9302-6606B20503BB
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateResourceComplianceGroupByResourceTypeResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByResourceTypeResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeResponseBody) SetComplianceResult(v *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResult) *GetAggregateResourceComplianceGroupByResourceTypeResponseBody {
	s.ComplianceResult = v
	return s
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeResponseBody) SetRequestId(v string) *GetAggregateResourceComplianceGroupByResourceTypeResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResult struct {
	// The evaluation results grouped by resource type.
	ComplianceResultList []*GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList `json:"ComplianceResultList,omitempty" xml:"ComplianceResultList,omitempty" type:"Repeated"`
}

func (s GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResult) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResult) SetComplianceResultList(v []*GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList) *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResult {
	s.ComplianceResultList = v
	return s
}

type GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList struct {
	// The queried evaluation results.
	Compliances []*GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances `json:"Compliances,omitempty" xml:"Compliances,omitempty" type:"Repeated"`
	// The type of the evaluated resource.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList) SetCompliances(v []*GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances) *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList {
	s.Compliances = v
	return s
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList) SetResourceType(v string) *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList {
	s.ResourceType = &v
	return s
}

type GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances struct {
	// The evaluation result. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resource.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The number of statistical results.
	//
	// example:
	//
	// 1
	Count *int64 `json:"Count,omitempty" xml:"Count,omitempty"`
}

func (s GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances) SetComplianceType(v string) *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances {
	s.ComplianceType = &v
	return s
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances) SetCount(v int64) *GetAggregateResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances {
	s.Count = &v
	return s
}

type GetAggregateResourceComplianceGroupByResourceTypeResponse struct {
	Headers    map[string]*string                                             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateResourceComplianceGroupByResourceTypeResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateResourceComplianceGroupByResourceTypeResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceGroupByResourceTypeResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeResponse) SetHeaders(v map[string]*string) *GetAggregateResourceComplianceGroupByResourceTypeResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeResponse) SetStatusCode(v int32) *GetAggregateResourceComplianceGroupByResourceTypeResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateResourceComplianceGroupByResourceTypeResponse) SetBody(v *GetAggregateResourceComplianceGroupByResourceTypeResponseBody) *GetAggregateResourceComplianceGroupByResourceTypeResponse {
	s.Body = v
	return s
}

type GetAggregateResourceComplianceTimelineRequest struct {
	// The ID of the account group.
	//
	// For information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-5885626622af0008****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The end of the time range to query. The default value indicates the time when the GetAggregateResourceConfigurationTimeline operation is called. Unit: milliseconds.
	//
	// example:
	//
	// 1625821156000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The maximum number of entries returned for a single request. Valid values: 1 to 100.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The `token` that is used to initiate the next request if the response of the current request is truncated. You can use the token to initiate another request and obtain the remaining records.
	//
	// example:
	//
	// 5OVS5J4I1/UKTkHV5oNs****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region where the resource resides.
	//
	// For more information about how to obtain the ID of a region, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the Alibaba Cloud account to which the resources in the account group belong.
	//
	// > You can use either the ResourceAccountId or ResourceOwnerId parameter. We recommend that you use the ResourceAccountId parameter.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// The resource ID.
	//
	// For more information about how to query the ID of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// Deprecated
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
	// The resource type.
	//
	// For more information about how to obtain the type of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The beginning of the time range to query. By default, Cloud Config retrieves the configuration changes in the last 30 days for the specified resource. Unit: milliseconds.
	//
	// example:
	//
	// 1623211156000
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s GetAggregateResourceComplianceTimelineRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceTimelineRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceTimelineRequest) SetAggregatorId(v string) *GetAggregateResourceComplianceTimelineRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineRequest) SetEndTime(v int64) *GetAggregateResourceComplianceTimelineRequest {
	s.EndTime = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineRequest) SetMaxResults(v int32) *GetAggregateResourceComplianceTimelineRequest {
	s.MaxResults = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineRequest) SetNextToken(v string) *GetAggregateResourceComplianceTimelineRequest {
	s.NextToken = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineRequest) SetRegion(v string) *GetAggregateResourceComplianceTimelineRequest {
	s.Region = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineRequest) SetResourceAccountId(v int64) *GetAggregateResourceComplianceTimelineRequest {
	s.ResourceAccountId = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineRequest) SetResourceId(v string) *GetAggregateResourceComplianceTimelineRequest {
	s.ResourceId = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineRequest) SetResourceOwnerId(v int64) *GetAggregateResourceComplianceTimelineRequest {
	s.ResourceOwnerId = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineRequest) SetResourceType(v string) *GetAggregateResourceComplianceTimelineRequest {
	s.ResourceType = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineRequest) SetStartTime(v int64) *GetAggregateResourceComplianceTimelineRequest {
	s.StartTime = &v
	return s
}

type GetAggregateResourceComplianceTimelineResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 8D53A78F-1EB8-4264-A554-72F07E34FAE6
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The information about the compliance timeline.
	ResourceComplianceTimeline *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline `json:"ResourceComplianceTimeline,omitempty" xml:"ResourceComplianceTimeline,omitempty" type:"Struct"`
}

func (s GetAggregateResourceComplianceTimelineResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceTimelineResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceTimelineResponseBody) SetRequestId(v string) *GetAggregateResourceComplianceTimelineResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBody) SetResourceComplianceTimeline(v *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline) *GetAggregateResourceComplianceTimelineResponseBody {
	s.ResourceComplianceTimeline = v
	return s
}

type GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline struct {
	// The status of the resource. The parameter value varies based on the resource type and may be left empty. Examples:
	//
	// 	- If the value of the ResourceType parameter is ACS::ECS::Instance, the resource is an Elastic Compute Service (ECS) instance that has a specific state. In this case, the valid values of this parameter are Running and Stopped.
	//
	// 	- If the value of the ResourceType parameter is ACS::OSS::Bucket, the resource is an Object Storage Service (OSS) bucket that is not in a specific state. In this case, this parameter is empty.
	ComplianceList []*GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList `json:"ComplianceList,omitempty" xml:"ComplianceList,omitempty" type:"Repeated"`
	// The maximum number of entries returned for a single request.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token. It can be used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// 5OVS5J4I1/UKTkHV5oNs****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline) SetComplianceList(v []*GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline {
	s.ComplianceList = v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline) SetMaxResults(v int32) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline {
	s.MaxResults = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline) SetNextToken(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimeline {
	s.NextToken = &v
	return s
}

type GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList struct {
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *string `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the zone in which the resource resides.
	//
	// example:
	//
	// cn-hangzhou-f
	AvailabilityZone *string `json:"AvailabilityZone,omitempty" xml:"AvailabilityZone,omitempty"`
	// The timestamp when the compliance evaluation was recorded. Unit: milliseconds.
	//
	// example:
	//
	// 1625200295276
	CaptureTime *int64 `json:"CaptureTime,omitempty" xml:"CaptureTime,omitempty"`
	// The information about the rules that evaluated the resource and the compliance evaluation result.
	//
	// example:
	//
	// {
	//
	//     "AccessControlList": {
	//
	//         "Grant": "private"
	//
	//     },
	//
	//     "ServerSideEncryptionRule": {
	//
	//         "SSEAlgorithm": "None"
	//
	//     },
	//
	//     "Comment": "",
	//
	//     "Owner": {
	//
	//         "DisplayName": "126672004088****",
	//
	//         "ID": "126672004088****"
	//
	//     },
	//
	//     "ResourceGroupId": "rg-acfmy4dfoau****",
	//
	//     "StorageClass": "Standard",
	//
	//     "DataRedundancyType": "LRS",
	//
	//     "AllowEmptyReferer": "true",
	//
	//     "Name": "test-private-oss****",
	//
	//     "BucketPolicy": {
	//
	//         "LogPrefix": "",
	//
	//         "LogBucket": ""
	//
	//     },
	//
	//     "ExtranetEndpoint": "oss-cn-hangzhou.aliyuncs.com",
	//
	//     "IntranetEndpoint": "oss-cn-hangzhou-internal.aliyuncs.com",
	//
	//     "Location": "oss-cn-hangzhou"
	//
	// }
	Configuration *string `json:"Configuration,omitempty" xml:"Configuration,omitempty"`
	// The details of the resource change that triggered the compliance evaluation.
	//
	// example:
	//
	// {
	//
	//     "ResourceGroupId": [
	//
	//         "rg-acfmy4dfoau****",
	//
	//         "rg-a3dmy4lksta****"
	//
	//     ]
	//
	// }
	ConfigurationDiff *string `json:"ConfigurationDiff,omitempty" xml:"ConfigurationDiff,omitempty"`
	// The ID of the region in which the resource resides.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The timestamp when the resource was created. Unit: milliseconds.
	//
	// example:
	//
	// 1624961112000
	ResourceCreateTime *int64 `json:"ResourceCreateTime,omitempty" xml:"ResourceCreateTime,omitempty"`
	// The ID of the resource.
	//
	// example:
	//
	// test-private-oss****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The name of the resource.
	//
	// example:
	//
	// test-private-oss****
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The status of the resource. The parameter value varies based on the resource type and may be left empty. Examples:
	//
	// 	- If the ResourceType parameter is set to ACS::ECS::Instance, the resource is an Elastic Compute Service (ECS) instance that has a specific state. In this case, the valid values of this parameter are Running and Stopped.
	//
	// 	- If the ResourceType parameter is set to ACS::OSS::Bucket, the resource is an OSS bucket that does not have a specific state. In this case, this parameter is left empty.
	//
	// example:
	//
	// Running
	ResourceStatus *string `json:"ResourceStatus,omitempty" xml:"ResourceStatus,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	//
	// example:
	//
	// {\\"\\"hc\\"\\":[\\"\\"value2\\"\\"]}
	Tags *string `json:"Tags,omitempty" xml:"Tags,omitempty"`
}

func (s GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetAccountId(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.AccountId = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetAvailabilityZone(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.AvailabilityZone = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetCaptureTime(v int64) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.CaptureTime = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetConfiguration(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.Configuration = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetConfigurationDiff(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ConfigurationDiff = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetRegion(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.Region = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetResourceCreateTime(v int64) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ResourceCreateTime = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetResourceId(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ResourceId = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetResourceName(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ResourceName = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetResourceStatus(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ResourceStatus = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetResourceType(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ResourceType = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetTags(v string) *GetAggregateResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.Tags = &v
	return s
}

type GetAggregateResourceComplianceTimelineResponse struct {
	Headers    map[string]*string                                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateResourceComplianceTimelineResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateResourceComplianceTimelineResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceComplianceTimelineResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceComplianceTimelineResponse) SetHeaders(v map[string]*string) *GetAggregateResourceComplianceTimelineResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponse) SetStatusCode(v int32) *GetAggregateResourceComplianceTimelineResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateResourceComplianceTimelineResponse) SetBody(v *GetAggregateResourceComplianceTimelineResponseBody) *GetAggregateResourceComplianceTimelineResponse {
	s.Body = v
	return s
}

type GetAggregateResourceConfigurationTimelineRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-5885626622af0008****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The end of the time range to query. The default value indicates the time when the GetAggregateResourceConfigurationTimeline operation is called. Unit: milliseconds.
	//
	// example:
	//
	// 1625821156000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The maximum number of entries to return for a single request. Valid values: 1 to 100.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The `token` that is used to initiate the next request if the response of the current request is truncated. You can use the token to initiate another request and obtain the remaining records.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region in which the resource resides.
	//
	// For more information about how to obtain the ID of a region, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the Alibaba Cloud account to which the resource in the account group belongs.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// The resource ID.
	//
	// For more information about how to query the ID of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// Deprecated
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
	// The type of the resource.
	//
	// For more information about how to obtain the type of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The beginning of the time range to query. By default, Cloud Config retrieves the configuration changes in the last 30 days for the specified resource. Unit: milliseconds.
	//
	// example:
	//
	// 1623211156000
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s GetAggregateResourceConfigurationTimelineRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceConfigurationTimelineRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceConfigurationTimelineRequest) SetAggregatorId(v string) *GetAggregateResourceConfigurationTimelineRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineRequest) SetEndTime(v int64) *GetAggregateResourceConfigurationTimelineRequest {
	s.EndTime = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineRequest) SetMaxResults(v int32) *GetAggregateResourceConfigurationTimelineRequest {
	s.MaxResults = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineRequest) SetNextToken(v string) *GetAggregateResourceConfigurationTimelineRequest {
	s.NextToken = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineRequest) SetRegion(v string) *GetAggregateResourceConfigurationTimelineRequest {
	s.Region = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineRequest) SetResourceAccountId(v int64) *GetAggregateResourceConfigurationTimelineRequest {
	s.ResourceAccountId = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineRequest) SetResourceId(v string) *GetAggregateResourceConfigurationTimelineRequest {
	s.ResourceId = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineRequest) SetResourceOwnerId(v int64) *GetAggregateResourceConfigurationTimelineRequest {
	s.ResourceOwnerId = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineRequest) SetResourceType(v string) *GetAggregateResourceConfigurationTimelineRequest {
	s.ResourceType = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineRequest) SetStartTime(v int64) *GetAggregateResourceConfigurationTimelineRequest {
	s.StartTime = &v
	return s
}

type GetAggregateResourceConfigurationTimelineResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// ED9CD1B3-286C-4E05-A765-5E1E0B9BC2AB
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The configuration timeline of the resource.
	ResourceConfigurationTimeline *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline `json:"ResourceConfigurationTimeline,omitempty" xml:"ResourceConfigurationTimeline,omitempty" type:"Struct"`
}

func (s GetAggregateResourceConfigurationTimelineResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceConfigurationTimelineResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceConfigurationTimelineResponseBody) SetRequestId(v string) *GetAggregateResourceConfigurationTimelineResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBody) SetResourceConfigurationTimeline(v *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) *GetAggregateResourceConfigurationTimelineResponseBody {
	s.ResourceConfigurationTimeline = v
	return s
}

type GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline struct {
	// The resource name.
	ConfigurationList []*GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList `json:"ConfigurationList,omitempty" xml:"ConfigurationList,omitempty" type:"Repeated"`
	// The maximum number of entries returned for a single request.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The token that is used to initiate the next request.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) SetConfigurationList(v []*GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline {
	s.ConfigurationList = v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) SetMaxResults(v int32) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline {
	s.MaxResults = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) SetNextToken(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline {
	s.NextToken = &v
	return s
}

type GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList struct {
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the zone in which the resource resides.
	//
	// example:
	//
	// cn-hangzhou-h
	AvailabilityZone *string `json:"AvailabilityZone,omitempty" xml:"AvailabilityZone,omitempty"`
	// The timestamp when the resource change snapshot was recorded. Unit: milliseconds.
	//
	// example:
	//
	// 1624961156000
	CaptureTime *string `json:"CaptureTime,omitempty" xml:"CaptureTime,omitempty"`
	// The details of the resource change that triggered the compliance evaluation.
	//
	// example:
	//
	// {\\"AccessControlList\\":[null,{\\"Grant\\":\\"private\\"}],\\"ServerSideEncryptionRule\\":[null,{\\"SSEAlgorithm\\":\\"None\\"}],\\"CreationDate\\":[null,\\"2021-06-29T10:05:12.000Z\\"],\\"Owner\\":[null,{\\"DisplayName\\":\\"100931896542****\\",\\"ID\\":\\"100931896542****\\"}],\\"BucketPolicy\\":[null,{\\"LogPrefix\\":\\"\\",\\"LogBucket\\":\\"\\"}],\\"StorageClass\\":[null,\\"Standard\\"],\\"ExtranetEndpoint\\":[null,\\"oss-cn-hangzhou.aliyuncs.com\\"],\\"DataRedundancyType\\":[null,\\"LRS\\"],\\"AllowEmptyReferer\\":[null,\\"true\\"],\\"IntranetEndpoint\\":[null,\\"oss-cn-hangzhou-internal.aliyuncs.com\\"],\\"Name\\":[null,\\"new-bucket\\"],\\"Location\\":[null,\\"oss-cn-hangzhou\\"]}
	ConfigurationDiff *string `json:"ConfigurationDiff,omitempty" xml:"ConfigurationDiff,omitempty"`
	// The ID of the region in which the resource resides.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The timestamp when the resource was created. Unit: milliseconds.
	//
	// example:
	//
	// 1624961112000
	ResourceCreateTime *string `json:"ResourceCreateTime,omitempty" xml:"ResourceCreateTime,omitempty"`
	// The type of the resource change event involved. Valid values:
	//
	// 	- DISCOVERED: A resource is created.
	//
	// 	- DISCOVERED_REVISED: A resource is created by periodic remediation tasks.
	//
	// 	- MODIFY: A resource is modified.
	//
	// 	- MODIFY_REVISED: A resource is modified by periodic remediation tasks.
	//
	// 	- REMOVE: A resource is deleted.
	//
	// >
	//
	// 	- To ensure the integrity of resources, periodic remediation tasks are run to check data and generate events that indicate the creation of new resources. Such events are infrequent.
	//
	// 	- The time when a resource change event is generated by a periodic remediation task is considered as the detection time of Cloud Config. The detection time is later than the time when the resource is modified.
	//
	// example:
	//
	// DISCOVERED
	ResourceEventType *string `json:"ResourceEventType,omitempty" xml:"ResourceEventType,omitempty"`
	// The ID of the resource.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The name of the resource.
	//
	// example:
	//
	// new-bucket
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	//
	// example:
	//
	// {\\"\\"hc\\"\\":[\\"\\"value2\\"\\"]}
	Tags *string `json:"Tags,omitempty" xml:"Tags,omitempty"`
}

func (s GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetAccountId(v int64) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.AccountId = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetAvailabilityZone(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.AvailabilityZone = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetCaptureTime(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.CaptureTime = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetConfigurationDiff(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ConfigurationDiff = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetRegion(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.Region = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetResourceCreateTime(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ResourceCreateTime = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetResourceEventType(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ResourceEventType = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetResourceId(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ResourceId = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetResourceName(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ResourceName = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetResourceType(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ResourceType = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetTags(v string) *GetAggregateResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.Tags = &v
	return s
}

type GetAggregateResourceConfigurationTimelineResponse struct {
	Headers    map[string]*string                                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateResourceConfigurationTimelineResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateResourceConfigurationTimelineResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceConfigurationTimelineResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceConfigurationTimelineResponse) SetHeaders(v map[string]*string) *GetAggregateResourceConfigurationTimelineResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponse) SetStatusCode(v int32) *GetAggregateResourceConfigurationTimelineResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateResourceConfigurationTimelineResponse) SetBody(v *GetAggregateResourceConfigurationTimelineResponseBody) *GetAggregateResourceConfigurationTimelineResponse {
	s.Body = v
	return s
}

type GetAggregateResourceCountsGroupByRegionRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a260626622af0005****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the folder in the resource directory. For more information about how to obtain the ID of a folder, see [View the basic information of a folder](https://help.aliyun.com/document_detail/111223.html).
	//
	// example:
	//
	// r-BU****
	FolderId *string `json:"FolderId,omitempty" xml:"FolderId,omitempty"`
	// The ID of the Alibaba Cloud account to which the resources in the account group belong.
	//
	// > You can use either the ResourceAccountId or ResourceOwnerId parameter. We recommend that you use the ResourceAccountId parameter.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// Deprecated
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
	// The resource type.
	//
	// For more information about how to obtain the type of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s GetAggregateResourceCountsGroupByRegionRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceCountsGroupByRegionRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceCountsGroupByRegionRequest) SetAggregatorId(v string) *GetAggregateResourceCountsGroupByRegionRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByRegionRequest) SetFolderId(v string) *GetAggregateResourceCountsGroupByRegionRequest {
	s.FolderId = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByRegionRequest) SetResourceAccountId(v int64) *GetAggregateResourceCountsGroupByRegionRequest {
	s.ResourceAccountId = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByRegionRequest) SetResourceOwnerId(v int64) *GetAggregateResourceCountsGroupByRegionRequest {
	s.ResourceOwnerId = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByRegionRequest) SetResourceType(v string) *GetAggregateResourceCountsGroupByRegionRequest {
	s.ResourceType = &v
	return s
}

type GetAggregateResourceCountsGroupByRegionResponseBody struct {
	// The ID of the region by which statistics are collected.
	DiscoveredResourceCountsSummary []*GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary `json:"DiscoveredResourceCountsSummary,omitempty" xml:"DiscoveredResourceCountsSummary,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 399BD94C-D20C-4D27-88D4-89E8D75C0595
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateResourceCountsGroupByRegionResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceCountsGroupByRegionResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceCountsGroupByRegionResponseBody) SetDiscoveredResourceCountsSummary(v []*GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) *GetAggregateResourceCountsGroupByRegionResponseBody {
	s.DiscoveredResourceCountsSummary = v
	return s
}

func (s *GetAggregateResourceCountsGroupByRegionResponseBody) SetRequestId(v string) *GetAggregateResourceCountsGroupByRegionResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary struct {
	// The dimension by which statistics are collected.
	//
	// >  In most cases, the `Region` parameter is returned instead of the GroupName parameter.
	//
	// example:
	//
	// cn-hangzhou
	GroupName *string `json:"GroupName,omitempty" xml:"GroupName,omitempty"`
	// The ID of the region by which statistics are collected.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The total number of resources in the region.
	//
	// example:
	//
	// 10
	ResourceCount *int64 `json:"ResourceCount,omitempty" xml:"ResourceCount,omitempty"`
}

func (s GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) SetGroupName(v string) *GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary {
	s.GroupName = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) SetRegion(v string) *GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary {
	s.Region = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) SetResourceCount(v int64) *GetAggregateResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary {
	s.ResourceCount = &v
	return s
}

type GetAggregateResourceCountsGroupByRegionResponse struct {
	Headers    map[string]*string                                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateResourceCountsGroupByRegionResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateResourceCountsGroupByRegionResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceCountsGroupByRegionResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceCountsGroupByRegionResponse) SetHeaders(v map[string]*string) *GetAggregateResourceCountsGroupByRegionResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateResourceCountsGroupByRegionResponse) SetStatusCode(v int32) *GetAggregateResourceCountsGroupByRegionResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByRegionResponse) SetBody(v *GetAggregateResourceCountsGroupByRegionResponseBody) *GetAggregateResourceCountsGroupByRegionResponse {
	s.Body = v
	return s
}

type GetAggregateResourceCountsGroupByResourceTypeRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a260626622af0005****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the folder in the resource directory.
	//
	// For more information about how to obtain the ID of a folder, see [View the basic information of a folder](https://help.aliyun.com/document_detail/111223.html).
	//
	// example:
	//
	// r-BU****
	FolderId *string `json:"FolderId,omitempty" xml:"FolderId,omitempty"`
	// The region ID.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the Alibaba Cloud account to which the resources in the account group belong.
	//
	// > You can specify either the ResourceAccountId or ResourceOwnerId parameter. We recommend that you specify the ResourceAccountId parameter.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// Deprecated
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
}

func (s GetAggregateResourceCountsGroupByResourceTypeRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceCountsGroupByResourceTypeRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceCountsGroupByResourceTypeRequest) SetAggregatorId(v string) *GetAggregateResourceCountsGroupByResourceTypeRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByResourceTypeRequest) SetFolderId(v string) *GetAggregateResourceCountsGroupByResourceTypeRequest {
	s.FolderId = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByResourceTypeRequest) SetRegion(v string) *GetAggregateResourceCountsGroupByResourceTypeRequest {
	s.Region = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByResourceTypeRequest) SetResourceAccountId(v int64) *GetAggregateResourceCountsGroupByResourceTypeRequest {
	s.ResourceAccountId = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByResourceTypeRequest) SetResourceOwnerId(v int64) *GetAggregateResourceCountsGroupByResourceTypeRequest {
	s.ResourceOwnerId = &v
	return s
}

type GetAggregateResourceCountsGroupByResourceTypeResponseBody struct {
	// The resource type by which the statistics are collected.
	DiscoveredResourceCountsSummary []*GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary `json:"DiscoveredResourceCountsSummary,omitempty" xml:"DiscoveredResourceCountsSummary,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 99114B22-1EFF-47DF-B906-1CCE82FF9D60
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregateResourceCountsGroupByResourceTypeResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceCountsGroupByResourceTypeResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceCountsGroupByResourceTypeResponseBody) SetDiscoveredResourceCountsSummary(v []*GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) *GetAggregateResourceCountsGroupByResourceTypeResponseBody {
	s.DiscoveredResourceCountsSummary = v
	return s
}

func (s *GetAggregateResourceCountsGroupByResourceTypeResponseBody) SetRequestId(v string) *GetAggregateResourceCountsGroupByResourceTypeResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary struct {
	// This parameter is expired. The resource type by which statistics are collected.
	//
	// example:
	//
	// ACS::RAM::Role
	GroupName *string `json:"GroupName,omitempty" xml:"GroupName,omitempty"`
	// The total number of resources in the region.
	//
	// example:
	//
	// 7
	ResourceCount *int64 `json:"ResourceCount,omitempty" xml:"ResourceCount,omitempty"`
	// The resource type by which statistics are collected.
	//
	// example:
	//
	// ACS::RAM::Role
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) SetGroupName(v string) *GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary {
	s.GroupName = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) SetResourceCount(v int64) *GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary {
	s.ResourceCount = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) SetResourceType(v string) *GetAggregateResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary {
	s.ResourceType = &v
	return s
}

type GetAggregateResourceCountsGroupByResourceTypeResponse struct {
	Headers    map[string]*string                                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateResourceCountsGroupByResourceTypeResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateResourceCountsGroupByResourceTypeResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceCountsGroupByResourceTypeResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceCountsGroupByResourceTypeResponse) SetHeaders(v map[string]*string) *GetAggregateResourceCountsGroupByResourceTypeResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateResourceCountsGroupByResourceTypeResponse) SetStatusCode(v int32) *GetAggregateResourceCountsGroupByResourceTypeResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateResourceCountsGroupByResourceTypeResponse) SetBody(v *GetAggregateResourceCountsGroupByResourceTypeResponseBody) *GetAggregateResourceCountsGroupByResourceTypeResponse {
	s.Body = v
	return s
}

type GetAggregateResourceInventoryRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a91d626622af0035****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
}

func (s GetAggregateResourceInventoryRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceInventoryRequest) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceInventoryRequest) SetAggregatorId(v string) *GetAggregateResourceInventoryRequest {
	s.AggregatorId = &v
	return s
}

type GetAggregateResourceInventoryResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 1A6D3604-EF1A-5798-A576-2A5FB855493C
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The information about the resource inventory.
	ResourceInventory *GetAggregateResourceInventoryResponseBodyResourceInventory `json:"ResourceInventory,omitempty" xml:"ResourceInventory,omitempty" type:"Struct"`
}

func (s GetAggregateResourceInventoryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceInventoryResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceInventoryResponseBody) SetRequestId(v string) *GetAggregateResourceInventoryResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetAggregateResourceInventoryResponseBody) SetResourceInventory(v *GetAggregateResourceInventoryResponseBodyResourceInventory) *GetAggregateResourceInventoryResponseBody {
	s.ResourceInventory = v
	return s
}

type GetAggregateResourceInventoryResponseBodyResourceInventory struct {
	// The download URL of the resource inventory.
	DownloadUrl *string `json:"DownloadUrl,omitempty" xml:"DownloadUrl,omitempty"`
	// The time when the resource inventory was generated. The value is a timestamp.
	//
	// Unit: milliseconds.
	//
	// example:
	//
	// 1687674774123
	ResourceInventoryGenerateTime *int64 `json:"ResourceInventoryGenerateTime,omitempty" xml:"ResourceInventoryGenerateTime,omitempty"`
	// The generation status of the resource inventory. Valid values:
	//
	// 	- CREATING: The resource inventory is being generated.
	//
	// 	- COMPLETE: The resource inventory is generated.
	//
	// example:
	//
	// COMPLETE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s GetAggregateResourceInventoryResponseBodyResourceInventory) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceInventoryResponseBodyResourceInventory) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceInventoryResponseBodyResourceInventory) SetDownloadUrl(v string) *GetAggregateResourceInventoryResponseBodyResourceInventory {
	s.DownloadUrl = &v
	return s
}

func (s *GetAggregateResourceInventoryResponseBodyResourceInventory) SetResourceInventoryGenerateTime(v int64) *GetAggregateResourceInventoryResponseBodyResourceInventory {
	s.ResourceInventoryGenerateTime = &v
	return s
}

func (s *GetAggregateResourceInventoryResponseBodyResourceInventory) SetStatus(v string) *GetAggregateResourceInventoryResponseBodyResourceInventory {
	s.Status = &v
	return s
}

type GetAggregateResourceInventoryResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregateResourceInventoryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregateResourceInventoryResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregateResourceInventoryResponse) GoString() string {
	return s.String()
}

func (s *GetAggregateResourceInventoryResponse) SetHeaders(v map[string]*string) *GetAggregateResourceInventoryResponse {
	s.Headers = v
	return s
}

func (s *GetAggregateResourceInventoryResponse) SetStatusCode(v int32) *GetAggregateResourceInventoryResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregateResourceInventoryResponse) SetBody(v *GetAggregateResourceInventoryResponseBody) *GetAggregateResourceInventoryResponse {
	s.Body = v
	return s
}

type GetAggregatorRequest struct {
	// The ID of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-88ea626622af0055****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*GetAggregatorRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s GetAggregatorRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregatorRequest) GoString() string {
	return s.String()
}

func (s *GetAggregatorRequest) SetAggregatorId(v string) *GetAggregatorRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregatorRequest) SetTag(v []*GetAggregatorRequestTag) *GetAggregatorRequest {
	s.Tag = v
	return s
}

type GetAggregatorRequestTag struct {
	// The tag key.
	//
	// The tag key cannot be an empty string. The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.
	//
	// You can specify at most 20 tag keys.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetAggregatorRequestTag) String() string {
	return tea.Prettify(s)
}

func (s GetAggregatorRequestTag) GoString() string {
	return s.String()
}

func (s *GetAggregatorRequestTag) SetKey(v string) *GetAggregatorRequestTag {
	s.Key = &v
	return s
}

func (s *GetAggregatorRequestTag) SetValue(v string) *GetAggregatorRequestTag {
	s.Value = &v
	return s
}

type GetAggregatorShrinkRequest struct {
	// The ID of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-88ea626622af0055****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s GetAggregatorShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAggregatorShrinkRequest) GoString() string {
	return s.String()
}

func (s *GetAggregatorShrinkRequest) SetAggregatorId(v string) *GetAggregatorShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregatorShrinkRequest) SetTagShrink(v string) *GetAggregatorShrinkRequest {
	s.TagShrink = &v
	return s
}

type GetAggregatorResponseBody struct {
	// The details of the account group.
	Aggregator *GetAggregatorResponseBodyAggregator `json:"Aggregator,omitempty" xml:"Aggregator,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 733DD93C-2277-4905-AE0C-0BA95C04B8BC
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetAggregatorResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAggregatorResponseBody) GoString() string {
	return s.String()
}

func (s *GetAggregatorResponseBody) SetAggregator(v *GetAggregatorResponseBodyAggregator) *GetAggregatorResponseBody {
	s.Aggregator = v
	return s
}

func (s *GetAggregatorResponseBody) SetRequestId(v string) *GetAggregatorResponseBody {
	s.RequestId = &v
	return s
}

type GetAggregatorResponseBodyAggregator struct {
	// The ID of the management account that is used to create the account group.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The number of members in the account group.
	//
	// example:
	//
	// 2
	AggregatorAccountCount *int64 `json:"AggregatorAccountCount,omitempty" xml:"AggregatorAccountCount,omitempty"`
	// The information about the members in the account group.
	AggregatorAccounts []*GetAggregatorResponseBodyAggregatorAggregatorAccounts `json:"AggregatorAccounts,omitempty" xml:"AggregatorAccounts,omitempty" type:"Repeated"`
	// The timestamp generated when the account group was created.
	//
	// Unit: milliseconds.
	//
	// example:
	//
	// 1623034091000
	AggregatorCreateTimestamp *string `json:"AggregatorCreateTimestamp,omitempty" xml:"AggregatorCreateTimestamp,omitempty"`
	// The ID of the account group.
	//
	// example:
	//
	// ca-88ea626622af0055****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The name of the account group.
	//
	// example:
	//
	// Test-Group
	AggregatorName *string `json:"AggregatorName,omitempty" xml:"AggregatorName,omitempty"`
	// The status of the account group. Valid values:
	//
	// 	- 0: The account group is being created.
	//
	// 	- 1: The account group was created.
	//
	// example:
	//
	// 1
	AggregatorStatus *int32 `json:"AggregatorStatus,omitempty" xml:"AggregatorStatus,omitempty"`
	// The type of the account group. Valid values:
	//
	// 	- RD: a global account group.
	//
	// 	- FOLDER: an account group for a folder.
	//
	// 	- CUSTOM: a custom account group.
	//
	// example:
	//
	// CUSTOM
	AggregatorType *string `json:"AggregatorType,omitempty" xml:"AggregatorType,omitempty"`
	// The description of the account group.
	//
	// example:
	//
	// The description of the test account group.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The ID of the attached folder of the account group.
	//
	// example:
	//
	// fd-brHdgv****
	FolderId *string `json:"FolderId,omitempty" xml:"FolderId,omitempty"`
	// tags
	Tags []*GetAggregatorResponseBodyAggregatorTags `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s GetAggregatorResponseBodyAggregator) String() string {
	return tea.Prettify(s)
}

func (s GetAggregatorResponseBodyAggregator) GoString() string {
	return s.String()
}

func (s *GetAggregatorResponseBodyAggregator) SetAccountId(v int64) *GetAggregatorResponseBodyAggregator {
	s.AccountId = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregator) SetAggregatorAccountCount(v int64) *GetAggregatorResponseBodyAggregator {
	s.AggregatorAccountCount = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregator) SetAggregatorAccounts(v []*GetAggregatorResponseBodyAggregatorAggregatorAccounts) *GetAggregatorResponseBodyAggregator {
	s.AggregatorAccounts = v
	return s
}

func (s *GetAggregatorResponseBodyAggregator) SetAggregatorCreateTimestamp(v string) *GetAggregatorResponseBodyAggregator {
	s.AggregatorCreateTimestamp = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregator) SetAggregatorId(v string) *GetAggregatorResponseBodyAggregator {
	s.AggregatorId = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregator) SetAggregatorName(v string) *GetAggregatorResponseBodyAggregator {
	s.AggregatorName = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregator) SetAggregatorStatus(v int32) *GetAggregatorResponseBodyAggregator {
	s.AggregatorStatus = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregator) SetAggregatorType(v string) *GetAggregatorResponseBodyAggregator {
	s.AggregatorType = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregator) SetDescription(v string) *GetAggregatorResponseBodyAggregator {
	s.Description = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregator) SetFolderId(v string) *GetAggregatorResponseBodyAggregator {
	s.FolderId = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregator) SetTags(v []*GetAggregatorResponseBodyAggregatorTags) *GetAggregatorResponseBodyAggregator {
	s.Tags = v
	return s
}

type GetAggregatorResponseBodyAggregatorAggregatorAccounts struct {
	// The ID of the member.
	//
	// example:
	//
	// 171322098523****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The display name of the member.
	//
	// if can be null:
	// false
	//
	// example:
	//
	// Alice
	AccountName *string `json:"AccountName,omitempty" xml:"AccountName,omitempty"`
	// The resource directory to which the member belongs. Valid value: ResourceDirectory. ResourceDirectory indicates that the member belongs to a resource directory.
	//
	// example:
	//
	// ResourceDirectory
	AccountType *string `json:"AccountType,omitempty" xml:"AccountType,omitempty"`
	// The status of the configuration recorder for the member. Valid values:
	//
	// 	- REGISTRABLE: The configuration recorder is not registered.
	//
	// 	- BUILDING: The configuration recorder is being deployed.
	//
	// 	- REGISTERED: The configuration recorder is registered.
	//
	// 	- REBUILDING: The configuration recorder is being redeployed.
	//
	// example:
	//
	// REGISTERED
	RecorderStatus *string `json:"RecorderStatus,omitempty" xml:"RecorderStatus,omitempty"`
}

func (s GetAggregatorResponseBodyAggregatorAggregatorAccounts) String() string {
	return tea.Prettify(s)
}

func (s GetAggregatorResponseBodyAggregatorAggregatorAccounts) GoString() string {
	return s.String()
}

func (s *GetAggregatorResponseBodyAggregatorAggregatorAccounts) SetAccountId(v int64) *GetAggregatorResponseBodyAggregatorAggregatorAccounts {
	s.AccountId = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregatorAggregatorAccounts) SetAccountName(v string) *GetAggregatorResponseBodyAggregatorAggregatorAccounts {
	s.AccountName = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregatorAggregatorAccounts) SetAccountType(v string) *GetAggregatorResponseBodyAggregatorAggregatorAccounts {
	s.AccountType = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregatorAggregatorAccounts) SetRecorderStatus(v string) *GetAggregatorResponseBodyAggregatorAggregatorAccounts {
	s.RecorderStatus = &v
	return s
}

type GetAggregatorResponseBodyAggregatorTags struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetAggregatorResponseBodyAggregatorTags) String() string {
	return tea.Prettify(s)
}

func (s GetAggregatorResponseBodyAggregatorTags) GoString() string {
	return s.String()
}

func (s *GetAggregatorResponseBodyAggregatorTags) SetTagKey(v string) *GetAggregatorResponseBodyAggregatorTags {
	s.TagKey = &v
	return s
}

func (s *GetAggregatorResponseBodyAggregatorTags) SetTagValue(v string) *GetAggregatorResponseBodyAggregatorTags {
	s.TagValue = &v
	return s
}

type GetAggregatorResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAggregatorResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAggregatorResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAggregatorResponse) GoString() string {
	return s.String()
}

func (s *GetAggregatorResponse) SetHeaders(v map[string]*string) *GetAggregatorResponse {
	s.Headers = v
	return s
}

func (s *GetAggregatorResponse) SetStatusCode(v int32) *GetAggregatorResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAggregatorResponse) SetBody(v *GetAggregatorResponseBody) *GetAggregatorResponse {
	s.Body = v
	return s
}

type GetCompliancePackRequest struct {
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-a8a8626622af0082****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*GetCompliancePackRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s GetCompliancePackRequest) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackRequest) GoString() string {
	return s.String()
}

func (s *GetCompliancePackRequest) SetCompliancePackId(v string) *GetCompliancePackRequest {
	s.CompliancePackId = &v
	return s
}

func (s *GetCompliancePackRequest) SetTag(v []*GetCompliancePackRequestTag) *GetCompliancePackRequest {
	s.Tag = v
	return s
}

type GetCompliancePackRequestTag struct {
	// The tag key.
	//
	// The tag key cannot be an empty string. The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.
	//
	// You can specify at most 20 tag keys.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag value. The tag value can be up to 256 characters in length and cannot contain `http://` or `https://`.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetCompliancePackRequestTag) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackRequestTag) GoString() string {
	return s.String()
}

func (s *GetCompliancePackRequestTag) SetKey(v string) *GetCompliancePackRequestTag {
	s.Key = &v
	return s
}

func (s *GetCompliancePackRequestTag) SetValue(v string) *GetCompliancePackRequestTag {
	s.Value = &v
	return s
}

type GetCompliancePackShrinkRequest struct {
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-a8a8626622af0082****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s GetCompliancePackShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackShrinkRequest) GoString() string {
	return s.String()
}

func (s *GetCompliancePackShrinkRequest) SetCompliancePackId(v string) *GetCompliancePackShrinkRequest {
	s.CompliancePackId = &v
	return s
}

func (s *GetCompliancePackShrinkRequest) SetTagShrink(v string) *GetCompliancePackShrinkRequest {
	s.TagShrink = &v
	return s
}

type GetCompliancePackResponseBody struct {
	// The details of the compliance package.
	CompliancePack *GetCompliancePackResponseBodyCompliancePack `json:"CompliancePack,omitempty" xml:"CompliancePack,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetCompliancePackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackResponseBody) GoString() string {
	return s.String()
}

func (s *GetCompliancePackResponseBody) SetCompliancePack(v *GetCompliancePackResponseBodyCompliancePack) *GetCompliancePackResponseBody {
	s.CompliancePack = v
	return s
}

func (s *GetCompliancePackResponseBody) SetRequestId(v string) *GetCompliancePackResponseBody {
	s.RequestId = &v
	return s
}

type GetCompliancePackResponseBodyCompliancePack struct {
	// The ID of the Alibaba Cloud account to which the compliance package belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-a8a8626622af0082****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// example:
	//
	// example-pack-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the compliance package template.
	//
	// example:
	//
	// ct-5f26ff4e06a300c4****
	CompliancePackTemplateId *string `json:"CompliancePackTemplateId,omitempty" xml:"CompliancePackTemplateId,omitempty"`
	// The rules in the compliance package.
	ConfigRules []*GetCompliancePackResponseBodyCompliancePackConfigRules `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty" type:"Repeated"`
	// The timestamp when the compliance package was created. Unit: milliseconds.
	//
	// example:
	//
	// 1624245766000
	CreateTimestamp *int64 `json:"CreateTimestamp,omitempty" xml:"CreateTimestamp,omitempty"`
	// The description of the compliance package.
	//
	// example:
	//
	// example-name
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The resource group for which the compliance package took effect.
	Scope *GetCompliancePackResponseBodyCompliancePackScope `json:"Scope,omitempty" xml:"Scope,omitempty" type:"Struct"`
	// The status of the compliance package. Valid values:
	//
	// 	- ACTIVE: The compliance package is normal.
	//
	// 	- CREATING: The compliance package is being created.
	//
	// example:
	//
	// ACTIVE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The list of tags.
	Tags []*GetCompliancePackResponseBodyCompliancePackTags `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
	// The information about the current compliance package template. The rules in the template do not contain custom function rules. You can quickly create the same compliance package for other accounts or account groups based on the template information.
	//
	// example:
	//
	// {
	//
	//     "configRuleTemplates": [
	//
	//         {
	//
	//             "configRuleName": "rule-example",
	//
	//             "scope": {
	//
	//                 "complianceResourceTypes": [
	//
	//                     "ACS::ECS::Instance"
	//
	//                 ]
	//
	//             },
	//
	//             "description": "",
	//
	//             "source": {
	//
	//                 "owner": "CUSTOM_CONFIGURATION",
	//
	//                 "identifier": "acs-config-configuration",
	//
	//                 "sourceDetails": [
	//
	//                     {
	//
	//                         "messageType": "ScheduledNotification",
	//
	//                         "maximumExecutionFrequency": "Twelve_Hours"
	//
	//                     },
	//
	//                     {
	//
	//                         "messageType": "ConfigurationItemChangeNotification"
	//
	//                     }
	//
	//                 ],
	//
	//                 "conditions": "{\\"ComplianceConditions\\":\\"{\\\\\\"operator\\\\\\":\\\\\\"and\\\\\\",\\\\\\"children\\\\\\":[{\\\\\\"operator\\\\\\":\\\\\\"GreaterOrEquals\\\\\\",\\\\\\"featurePath\\\\\\":\\\\\\"$.Cpu\\\\\\",\\\\\\"featureSource\\\\\\":\\\\\\"CONFIGURATION\\\\\\",\\\\\\"desired\\\\\\":\\\\\\"2\\\\\\"}]}\\"}"
	//
	//             },
	//
	//             "inputParameters": {}
	//
	//         },
	//
	//         {
	//
	//             "configRuleName": "name",
	//
	//             "scope": {
	//
	//                 "complianceResourceTypes": [
	//
	//                     "ACS::OSS::Bucket"
	//
	//                 ]
	//
	//             },
	//
	//             "description": "description-1",
	//
	//             "source": {
	//
	//                 "owner": "ALIYUN",
	//
	//                 "identifier": "oss-bucket-referer-limit",
	//
	//                 "sourceDetails": [
	//
	//                     {
	//
	//                         "messageType": "ConfigurationItemChangeNotification"
	//
	//                     }
	//
	//                 ]
	//
	//             },
	//
	//             "inputParameters": {
	//
	//                 "allowEmptyReferer": "true",
	//
	//                 "allowReferers": "http://www.aliyun.com"
	//
	//             }
	//
	//         }
	//
	//     ]
	//
	// }
	TemplateContent *string `json:"TemplateContent,omitempty" xml:"TemplateContent,omitempty"`
}

func (s GetCompliancePackResponseBodyCompliancePack) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackResponseBodyCompliancePack) GoString() string {
	return s.String()
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetAccountId(v int64) *GetCompliancePackResponseBodyCompliancePack {
	s.AccountId = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetCompliancePackId(v string) *GetCompliancePackResponseBodyCompliancePack {
	s.CompliancePackId = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetCompliancePackName(v string) *GetCompliancePackResponseBodyCompliancePack {
	s.CompliancePackName = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetCompliancePackTemplateId(v string) *GetCompliancePackResponseBodyCompliancePack {
	s.CompliancePackTemplateId = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetConfigRules(v []*GetCompliancePackResponseBodyCompliancePackConfigRules) *GetCompliancePackResponseBodyCompliancePack {
	s.ConfigRules = v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetCreateTimestamp(v int64) *GetCompliancePackResponseBodyCompliancePack {
	s.CreateTimestamp = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetDescription(v string) *GetCompliancePackResponseBodyCompliancePack {
	s.Description = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetRiskLevel(v int32) *GetCompliancePackResponseBodyCompliancePack {
	s.RiskLevel = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetScope(v *GetCompliancePackResponseBodyCompliancePackScope) *GetCompliancePackResponseBodyCompliancePack {
	s.Scope = v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetStatus(v string) *GetCompliancePackResponseBodyCompliancePack {
	s.Status = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetTags(v []*GetCompliancePackResponseBodyCompliancePackTags) *GetCompliancePackResponseBodyCompliancePack {
	s.Tags = v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePack) SetTemplateContent(v string) *GetCompliancePackResponseBodyCompliancePack {
	s.TemplateContent = &v
	return s
}

type GetCompliancePackResponseBodyCompliancePackConfigRules struct {
	// The rule ID.
	//
	// example:
	//
	// cr-a260626622af0005****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The rule name.
	//
	// example:
	//
	// eip-bandwidth-limit
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The input parameters of the rule.
	ConfigRuleParameters []*GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters `json:"ConfigRuleParameters,omitempty" xml:"ConfigRuleParameters,omitempty" type:"Repeated"`
	// The rule description.
	//
	// example:
	//
	// example-description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The identifier of the managed rule.
	//
	// example:
	//
	// eip-bandwidth-limit
	ManagedRuleIdentifier *string `json:"ManagedRuleIdentifier,omitempty" xml:"ManagedRuleIdentifier,omitempty"`
	// The type of the resource evaluated based on the rule. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::EIP::EipAddress
	ResourceTypesScope *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s GetCompliancePackResponseBodyCompliancePackConfigRules) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackResponseBodyCompliancePackConfigRules) GoString() string {
	return s.String()
}

func (s *GetCompliancePackResponseBodyCompliancePackConfigRules) SetConfigRuleId(v string) *GetCompliancePackResponseBodyCompliancePackConfigRules {
	s.ConfigRuleId = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackConfigRules) SetConfigRuleName(v string) *GetCompliancePackResponseBodyCompliancePackConfigRules {
	s.ConfigRuleName = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackConfigRules) SetConfigRuleParameters(v []*GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) *GetCompliancePackResponseBodyCompliancePackConfigRules {
	s.ConfigRuleParameters = v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackConfigRules) SetDescription(v string) *GetCompliancePackResponseBodyCompliancePackConfigRules {
	s.Description = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackConfigRules) SetManagedRuleIdentifier(v string) *GetCompliancePackResponseBodyCompliancePackConfigRules {
	s.ManagedRuleIdentifier = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackConfigRules) SetResourceTypesScope(v string) *GetCompliancePackResponseBodyCompliancePackConfigRules {
	s.ResourceTypesScope = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackConfigRules) SetRiskLevel(v int32) *GetCompliancePackResponseBodyCompliancePackConfigRules {
	s.RiskLevel = &v
	return s
}

type GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters struct {
	// The name of the input parameter.
	//
	// example:
	//
	// bandwidth
	ParameterName *string `json:"ParameterName,omitempty" xml:"ParameterName,omitempty"`
	// The value of the input parameter.
	//
	// example:
	//
	// 10
	ParameterValue *string `json:"ParameterValue,omitempty" xml:"ParameterValue,omitempty"`
	// Indicates whether the input parameters are required. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	Required *bool `json:"Required,omitempty" xml:"Required,omitempty"`
}

func (s GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) GoString() string {
	return s.String()
}

func (s *GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) SetParameterName(v string) *GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters {
	s.ParameterName = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) SetParameterValue(v string) *GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters {
	s.ParameterValue = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters) SetRequired(v bool) *GetCompliancePackResponseBodyCompliancePackConfigRulesConfigRuleParameters {
	s.Required = &v
	return s
}

type GetCompliancePackResponseBodyCompliancePackScope struct {
	// The IDs of regions that are excluded. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// The IDs of the resource groups whose resources you do not want to evaluate by using the compliance package. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource that you do not want to evaluate by using the compliance package.
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// The scope of the tag that is excluded.
	//
	// This parameter is required.
	ExcludeTagsScope []*GetCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The ID of the region whose resources you want to evaluate by using the compliance package.
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group whose resources you want to evaluate by using the compliance package.
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources to which the rule applies. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The tag key of the resource that you want to evaluate by using the compliance package.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// The tag value of the resource that you want to evaluate by using the compliance package.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The tag scope.
	//
	// This parameter is required.
	TagsScope []*GetCompliancePackResponseBodyCompliancePackScopeTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s GetCompliancePackResponseBodyCompliancePackScope) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackResponseBodyCompliancePackScope) GoString() string {
	return s.String()
}

func (s *GetCompliancePackResponseBodyCompliancePackScope) SetExcludeRegionIdsScope(v string) *GetCompliancePackResponseBodyCompliancePackScope {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScope) SetExcludeResourceGroupIdsScope(v string) *GetCompliancePackResponseBodyCompliancePackScope {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScope) SetExcludeResourceIdsScope(v string) *GetCompliancePackResponseBodyCompliancePackScope {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScope) SetExcludeTagsScope(v []*GetCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope) *GetCompliancePackResponseBodyCompliancePackScope {
	s.ExcludeTagsScope = v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScope) SetRegionIdsScope(v string) *GetCompliancePackResponseBodyCompliancePackScope {
	s.RegionIdsScope = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScope) SetResourceGroupIdsScope(v string) *GetCompliancePackResponseBodyCompliancePackScope {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScope) SetResourceIdsScope(v string) *GetCompliancePackResponseBodyCompliancePackScope {
	s.ResourceIdsScope = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScope) SetTagKeyScope(v string) *GetCompliancePackResponseBodyCompliancePackScope {
	s.TagKeyScope = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScope) SetTagValueScope(v string) *GetCompliancePackResponseBodyCompliancePackScope {
	s.TagValueScope = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScope) SetTagsScope(v []*GetCompliancePackResponseBodyCompliancePackScopeTagsScope) *GetCompliancePackResponseBodyCompliancePackScope {
	s.TagsScope = v
	return s
}

type GetCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope struct {
	// The key of the tag.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The value of the tag.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *GetCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope) SetTagKey(v string) *GetCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope) SetTagValue(v string) *GetCompliancePackResponseBodyCompliancePackScopeExcludeTagsScope {
	s.TagValue = &v
	return s
}

type GetCompliancePackResponseBodyCompliancePackScopeTagsScope struct {
	// The key of the tag.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The value of the tag.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetCompliancePackResponseBodyCompliancePackScopeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackResponseBodyCompliancePackScopeTagsScope) GoString() string {
	return s.String()
}

func (s *GetCompliancePackResponseBodyCompliancePackScopeTagsScope) SetTagKey(v string) *GetCompliancePackResponseBodyCompliancePackScopeTagsScope {
	s.TagKey = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackScopeTagsScope) SetTagValue(v string) *GetCompliancePackResponseBodyCompliancePackScopeTagsScope {
	s.TagValue = &v
	return s
}

type GetCompliancePackResponseBodyCompliancePackTags struct {
	// The tag keys of the resource.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag values of the resource.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetCompliancePackResponseBodyCompliancePackTags) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackResponseBodyCompliancePackTags) GoString() string {
	return s.String()
}

func (s *GetCompliancePackResponseBodyCompliancePackTags) SetTagKey(v string) *GetCompliancePackResponseBodyCompliancePackTags {
	s.TagKey = &v
	return s
}

func (s *GetCompliancePackResponseBodyCompliancePackTags) SetTagValue(v string) *GetCompliancePackResponseBodyCompliancePackTags {
	s.TagValue = &v
	return s
}

type GetCompliancePackResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetCompliancePackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetCompliancePackResponse) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackResponse) GoString() string {
	return s.String()
}

func (s *GetCompliancePackResponse) SetHeaders(v map[string]*string) *GetCompliancePackResponse {
	s.Headers = v
	return s
}

func (s *GetCompliancePackResponse) SetStatusCode(v int32) *GetCompliancePackResponse {
	s.StatusCode = &v
	return s
}

func (s *GetCompliancePackResponse) SetBody(v *GetCompliancePackResponseBody) *GetCompliancePackResponse {
	s.Body = v
	return s
}

type GetCompliancePackReportRequest struct {
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
}

func (s GetCompliancePackReportRequest) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackReportRequest) GoString() string {
	return s.String()
}

func (s *GetCompliancePackReportRequest) SetCompliancePackId(v string) *GetCompliancePackReportRequest {
	s.CompliancePackId = &v
	return s
}

type GetCompliancePackReportResponseBody struct {
	// The information about the compliance evaluation report.
	CompliancePackReport *GetCompliancePackReportResponseBodyCompliancePackReport `json:"CompliancePackReport,omitempty" xml:"CompliancePackReport,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetCompliancePackReportResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackReportResponseBody) GoString() string {
	return s.String()
}

func (s *GetCompliancePackReportResponseBody) SetCompliancePackReport(v *GetCompliancePackReportResponseBodyCompliancePackReport) *GetCompliancePackReportResponseBody {
	s.CompliancePackReport = v
	return s
}

func (s *GetCompliancePackReportResponseBody) SetRequestId(v string) *GetCompliancePackReportResponseBody {
	s.RequestId = &v
	return s
}

type GetCompliancePackReportResponseBodyCompliancePackReport struct {
	// The ID of the Alibaba Cloud account to which the compliance package belongs.
	//
	// example:
	//
	// 120886317861****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The timestamp when the compliance evaluation report was generated. Unit: milliseconds.
	//
	// example:
	//
	// 1624329965857
	ReportCreateTimestamp *int64 `json:"ReportCreateTimestamp,omitempty" xml:"ReportCreateTimestamp,omitempty"`
	// The status of the compliance evaluation report. Valid values:
	//
	// 	- NONE: The compliance evaluation report is not generated.
	//
	// 	- CREATING: The compliance evaluation report is being generated.
	//
	// 	- COMPLETE: The compliance evaluation report is generated.
	//
	// example:
	//
	// COMPLETE
	ReportStatus *string `json:"ReportStatus,omitempty" xml:"ReportStatus,omitempty"`
	// The URL that is used to download the compliance evaluation report.
	ReportUrl *string `json:"ReportUrl,omitempty" xml:"ReportUrl,omitempty"`
}

func (s GetCompliancePackReportResponseBodyCompliancePackReport) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackReportResponseBodyCompliancePackReport) GoString() string {
	return s.String()
}

func (s *GetCompliancePackReportResponseBodyCompliancePackReport) SetAccountId(v int64) *GetCompliancePackReportResponseBodyCompliancePackReport {
	s.AccountId = &v
	return s
}

func (s *GetCompliancePackReportResponseBodyCompliancePackReport) SetCompliancePackId(v string) *GetCompliancePackReportResponseBodyCompliancePackReport {
	s.CompliancePackId = &v
	return s
}

func (s *GetCompliancePackReportResponseBodyCompliancePackReport) SetReportCreateTimestamp(v int64) *GetCompliancePackReportResponseBodyCompliancePackReport {
	s.ReportCreateTimestamp = &v
	return s
}

func (s *GetCompliancePackReportResponseBodyCompliancePackReport) SetReportStatus(v string) *GetCompliancePackReportResponseBodyCompliancePackReport {
	s.ReportStatus = &v
	return s
}

func (s *GetCompliancePackReportResponseBodyCompliancePackReport) SetReportUrl(v string) *GetCompliancePackReportResponseBodyCompliancePackReport {
	s.ReportUrl = &v
	return s
}

type GetCompliancePackReportResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetCompliancePackReportResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetCompliancePackReportResponse) String() string {
	return tea.Prettify(s)
}

func (s GetCompliancePackReportResponse) GoString() string {
	return s.String()
}

func (s *GetCompliancePackReportResponse) SetHeaders(v map[string]*string) *GetCompliancePackReportResponse {
	s.Headers = v
	return s
}

func (s *GetCompliancePackReportResponse) SetStatusCode(v int32) *GetCompliancePackReportResponse {
	s.StatusCode = &v
	return s
}

func (s *GetCompliancePackReportResponse) SetBody(v *GetCompliancePackReportResponseBody) *GetCompliancePackReportResponse {
	s.Body = v
	return s
}

type GetComplianceSummaryResponseBody struct {
	// The summary of compliance statistics.
	ComplianceSummary *GetComplianceSummaryResponseBodyComplianceSummary `json:"ComplianceSummary,omitempty" xml:"ComplianceSummary,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// CAEE6F34-DEDC-4BAA-AA8C-946D5D008737
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetComplianceSummaryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetComplianceSummaryResponseBody) GoString() string {
	return s.String()
}

func (s *GetComplianceSummaryResponseBody) SetComplianceSummary(v *GetComplianceSummaryResponseBodyComplianceSummary) *GetComplianceSummaryResponseBody {
	s.ComplianceSummary = v
	return s
}

func (s *GetComplianceSummaryResponseBody) SetRequestId(v string) *GetComplianceSummaryResponseBody {
	s.RequestId = &v
	return s
}

type GetComplianceSummaryResponseBodyComplianceSummary struct {
	// The summary of compliance statistics from the rule dimension.
	ComplianceSummaryByConfigRule *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule `json:"ComplianceSummaryByConfigRule,omitempty" xml:"ComplianceSummaryByConfigRule,omitempty" type:"Struct"`
	// The summary of compliance statistics from the resource dimension.
	ComplianceSummaryByResource *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource `json:"ComplianceSummaryByResource,omitempty" xml:"ComplianceSummaryByResource,omitempty" type:"Struct"`
}

func (s GetComplianceSummaryResponseBodyComplianceSummary) String() string {
	return tea.Prettify(s)
}

func (s GetComplianceSummaryResponseBodyComplianceSummary) GoString() string {
	return s.String()
}

func (s *GetComplianceSummaryResponseBodyComplianceSummary) SetComplianceSummaryByConfigRule(v *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) *GetComplianceSummaryResponseBodyComplianceSummary {
	s.ComplianceSummaryByConfigRule = v
	return s
}

func (s *GetComplianceSummaryResponseBodyComplianceSummary) SetComplianceSummaryByResource(v *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) *GetComplianceSummaryResponseBodyComplianceSummary {
	s.ComplianceSummaryByResource = v
	return s
}

type GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule struct {
	// The time when the compliance summary was generated. Unit: milliseconds.
	//
	// example:
	//
	// 1589853712165
	ComplianceSummaryTimestamp *int64 `json:"ComplianceSummaryTimestamp,omitempty" xml:"ComplianceSummaryTimestamp,omitempty"`
	// The number of rules evaluated as compliant.
	//
	// example:
	//
	// 5
	CompliantCount *int32 `json:"CompliantCount,omitempty" xml:"CompliantCount,omitempty"`
	// The number of rules evaluated as non-compliant.
	//
	// example:
	//
	// 11
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The total number of rules.
	//
	// example:
	//
	// 16
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) String() string {
	return tea.Prettify(s)
}

func (s GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) GoString() string {
	return s.String()
}

func (s *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) SetComplianceSummaryTimestamp(v int64) *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule {
	s.ComplianceSummaryTimestamp = &v
	return s
}

func (s *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) SetCompliantCount(v int32) *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule {
	s.CompliantCount = &v
	return s
}

func (s *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) SetNonCompliantCount(v int32) *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule {
	s.NonCompliantCount = &v
	return s
}

func (s *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule) SetTotalCount(v int64) *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByConfigRule {
	s.TotalCount = &v
	return s
}

type GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource struct {
	// The time when the compliance summary was generated. Unit: milliseconds.
	//
	// example:
	//
	// 1589853712165
	ComplianceSummaryTimestamp *int64 `json:"ComplianceSummaryTimestamp,omitempty" xml:"ComplianceSummaryTimestamp,omitempty"`
	// The number of resources evaluated as compliant.
	//
	// example:
	//
	// 1
	CompliantCount *int32 `json:"CompliantCount,omitempty" xml:"CompliantCount,omitempty"`
	// The number of resources evaluated as non-compliant.
	//
	// example:
	//
	// 12
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The total number of resources.
	//
	// example:
	//
	// 13
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) String() string {
	return tea.Prettify(s)
}

func (s GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) GoString() string {
	return s.String()
}

func (s *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) SetComplianceSummaryTimestamp(v int64) *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource {
	s.ComplianceSummaryTimestamp = &v
	return s
}

func (s *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) SetCompliantCount(v int32) *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource {
	s.CompliantCount = &v
	return s
}

func (s *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) SetNonCompliantCount(v int32) *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource {
	s.NonCompliantCount = &v
	return s
}

func (s *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource) SetTotalCount(v int64) *GetComplianceSummaryResponseBodyComplianceSummaryComplianceSummaryByResource {
	s.TotalCount = &v
	return s
}

type GetComplianceSummaryResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetComplianceSummaryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetComplianceSummaryResponse) String() string {
	return tea.Prettify(s)
}

func (s GetComplianceSummaryResponse) GoString() string {
	return s.String()
}

func (s *GetComplianceSummaryResponse) SetHeaders(v map[string]*string) *GetComplianceSummaryResponse {
	s.Headers = v
	return s
}

func (s *GetComplianceSummaryResponse) SetStatusCode(v int32) *GetComplianceSummaryResponse {
	s.StatusCode = &v
	return s
}

func (s *GetComplianceSummaryResponse) SetBody(v *GetComplianceSummaryResponseBody) *GetComplianceSummaryResponse {
	s.Body = v
	return s
}

type GetConfigDeliveryChannelRequest struct {
	// The ID of the delivery channel.
	//
	// For more information about how to obtain the ID of a delivery channel, see [DescribeDeliveryChannels](https://help.aliyun.com/document_detail/429841.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cdc-d9106457e0d900b1****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
}

func (s GetConfigDeliveryChannelRequest) String() string {
	return tea.Prettify(s)
}

func (s GetConfigDeliveryChannelRequest) GoString() string {
	return s.String()
}

func (s *GetConfigDeliveryChannelRequest) SetDeliveryChannelId(v string) *GetConfigDeliveryChannelRequest {
	s.DeliveryChannelId = &v
	return s
}

type GetConfigDeliveryChannelResponseBody struct {
	// The information about the delivery channel.
	DeliveryChannel *GetConfigDeliveryChannelResponseBodyDeliveryChannel `json:"DeliveryChannel,omitempty" xml:"DeliveryChannel,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DC300244-FCE3-5061-8214-C27ECB668487
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetConfigDeliveryChannelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetConfigDeliveryChannelResponseBody) GoString() string {
	return s.String()
}

func (s *GetConfigDeliveryChannelResponseBody) SetDeliveryChannel(v *GetConfigDeliveryChannelResponseBodyDeliveryChannel) *GetConfigDeliveryChannelResponseBody {
	s.DeliveryChannel = v
	return s
}

func (s *GetConfigDeliveryChannelResponseBody) SetRequestId(v string) *GetConfigDeliveryChannelResponseBody {
	s.RequestId = &v
	return s
}

type GetConfigDeliveryChannelResponseBodyDeliveryChannel struct {
	// The ID of your Alibaba Cloud account.
	//
	// example:
	//
	// 120886317861****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// Indicates whether the specified destination receives scheduled compliant snapshots. Cloud Config delivers scheduled compliant snapshots at `04:00Z` and `16:00Z` to Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: The specified destination receives scheduled compliant snapshots.
	//
	// 	- false: The specified destination does not receive scheduled compliant snapshots.
	//
	// example:
	//
	// false
	CompliantSnapshot *bool `json:"CompliantSnapshot,omitempty" xml:"CompliantSnapshot,omitempty"`
	// Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	//
	// 	- true: The specified destination receives resource change logs.
	//
	// 	- false: The specified destination does not receive resource change logs.
	//
	// example:
	//
	// true
	ConfigurationItemChangeNotification *bool `json:"ConfigurationItemChangeNotification,omitempty" xml:"ConfigurationItemChangeNotification,omitempty"`
	// Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at `04:00Z` and `16:00Z` to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: The specified destination receives scheduled resource snapshots.
	//
	// 	- false: The specified destination does not receive scheduled resource snapshots.
	//
	// example:
	//
	// false
	ConfigurationSnapshot *bool `json:"ConfigurationSnapshot,omitempty" xml:"ConfigurationSnapshot,omitempty"`
	// The Alibaba Cloud Resource Name (ARN) of the role assumed by the delivery channel.
	//
	// example:
	//
	// acs:ram::120886317861****:role/aliyunserviceroleforconfig
	DeliveryChannelAssumeRoleArn *string `json:"DeliveryChannelAssumeRoleArn,omitempty" xml:"DeliveryChannelAssumeRoleArn,omitempty"`
	// The rule that is attached to the delivery channel. This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// 	- If the value of the DeliveryChannelType parameter is MNS, take note of the following settings of the lowest risk level and resource types of the events to which you subscribed:
	//
	//     	- The setting of the lowest risk level for the events to which you want to subscribe is in the following format: `{"filterType":"RuleRiskLevel","value":"1","multiple":false}`.
	//
	//         The `value` field indicates the lowest risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	//     	- The setting of the resource types of the events to which you want to subscribe is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//         The `values` field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// 	- If you set the DeliveryChannelType parameter to SLS, the setting of the resource types of the snapshots to which you want to deliver is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//     The `values` field specifies the resource types of the snapshots to which you want to deliver. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// example:
	//
	// [{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]
	DeliveryChannelCondition *string `json:"DeliveryChannelCondition,omitempty" xml:"DeliveryChannelCondition,omitempty"`
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-d9106457e0d900b1****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The name of the delivery channel.
	//
	// example:
	//
	// myDeliveryChannel
	DeliveryChannelName *string `json:"DeliveryChannelName,omitempty" xml:"DeliveryChannelName,omitempty"`
	// The Alibaba Cloud Resource Name (ARN) of the delivery destination.
	//
	// 	- If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
	//
	// 	- If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
	//
	// 	- If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
	//
	// example:
	//
	// acs:oss:cn-shanghai:120886317861****:new-bucket
	DeliveryChannelTargetArn *string `json:"DeliveryChannelTargetArn,omitempty" xml:"DeliveryChannelTargetArn,omitempty"`
	// The type of the delivery channel. Valid values:
	//
	// 	- OSS: Object Storage Service (OSS)
	//
	// 	- MNS: Message Service (MNS)
	//
	// 	- SLS: Log Service
	//
	// example:
	//
	// OSS
	DeliveryChannelType *string `json:"DeliveryChannelType,omitempty" xml:"DeliveryChannelType,omitempty"`
	// The time when Cloud Config delivers scheduled resources snapshots every day.
	//
	// Format: `HH:mmZ`. This time is displayed in UTC.
	//
	// example:
	//
	// 09:10Z
	DeliverySnapshotTime *string `json:"DeliverySnapshotTime,omitempty" xml:"DeliverySnapshotTime,omitempty"`
	// The description of the delivery channel.
	//
	// example:
	//
	// My OSS delivery.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
	//
	// 	- true: The specified destination receives resource non-compliance events.
	//
	// 	- false: The specified destination does not receive resource non-compliance events.
	//
	// example:
	//
	// false
	NonCompliantNotification *bool `json:"NonCompliantNotification,omitempty" xml:"NonCompliantNotification,omitempty"`
	// The ARN of the OSS bucket to which you want to transfer the delivery data when the size of the data exceeds the specified upper limit of the delivery channel.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	OversizedDataOSSTargetArn *string `json:"OversizedDataOSSTargetArn,omitempty" xml:"OversizedDataOSSTargetArn,omitempty"`
	// The status of the delivery channel. Valid values:
	//
	// 	- 0: The delivery channel is disabled.
	//
	// 	- 1: The delivery channel is enabled.
	//
	// example:
	//
	// 1
	Status *int32 `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s GetConfigDeliveryChannelResponseBodyDeliveryChannel) String() string {
	return tea.Prettify(s)
}

func (s GetConfigDeliveryChannelResponseBodyDeliveryChannel) GoString() string {
	return s.String()
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetAccountId(v int64) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.AccountId = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetCompliantSnapshot(v bool) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.CompliantSnapshot = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetConfigurationItemChangeNotification(v bool) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.ConfigurationItemChangeNotification = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetConfigurationSnapshot(v bool) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.ConfigurationSnapshot = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelAssumeRoleArn(v string) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelAssumeRoleArn = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelCondition(v string) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelCondition = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelId(v string) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelId = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelName(v string) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelName = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelTargetArn(v string) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelTargetArn = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliveryChannelType(v string) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliveryChannelType = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetDeliverySnapshotTime(v string) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.DeliverySnapshotTime = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetDescription(v string) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.Description = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetNonCompliantNotification(v bool) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.NonCompliantNotification = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetOversizedDataOSSTargetArn(v string) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.OversizedDataOSSTargetArn = &v
	return s
}

func (s *GetConfigDeliveryChannelResponseBodyDeliveryChannel) SetStatus(v int32) *GetConfigDeliveryChannelResponseBodyDeliveryChannel {
	s.Status = &v
	return s
}

type GetConfigDeliveryChannelResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetConfigDeliveryChannelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetConfigDeliveryChannelResponse) String() string {
	return tea.Prettify(s)
}

func (s GetConfigDeliveryChannelResponse) GoString() string {
	return s.String()
}

func (s *GetConfigDeliveryChannelResponse) SetHeaders(v map[string]*string) *GetConfigDeliveryChannelResponse {
	s.Headers = v
	return s
}

func (s *GetConfigDeliveryChannelResponse) SetStatusCode(v int32) *GetConfigDeliveryChannelResponse {
	s.StatusCode = &v
	return s
}

func (s *GetConfigDeliveryChannelResponse) SetBody(v *GetConfigDeliveryChannelResponseBody) *GetConfigDeliveryChannelResponse {
	s.Body = v
	return s
}

type GetConfigRuleRequest struct {
	// The rule ID.
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7f7d626622af0041****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*GetConfigRuleRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s GetConfigRuleRequest) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleRequest) GoString() string {
	return s.String()
}

func (s *GetConfigRuleRequest) SetConfigRuleId(v string) *GetConfigRuleRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *GetConfigRuleRequest) SetTag(v []*GetConfigRuleRequestTag) *GetConfigRuleRequest {
	s.Tag = v
	return s
}

type GetConfigRuleRequestTag struct {
	// The tag key.
	//
	// The tag key cannot be an empty string. The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.
	//
	// You can specify at most 20 tag keys.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag value. The tag value can be up to 256 characters in length and cannot contain `http://` or `https://`.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetConfigRuleRequestTag) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleRequestTag) GoString() string {
	return s.String()
}

func (s *GetConfigRuleRequestTag) SetKey(v string) *GetConfigRuleRequestTag {
	s.Key = &v
	return s
}

func (s *GetConfigRuleRequestTag) SetValue(v string) *GetConfigRuleRequestTag {
	s.Value = &v
	return s
}

type GetConfigRuleShrinkRequest struct {
	// The rule ID.
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7f7d626622af0041****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s GetConfigRuleShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleShrinkRequest) GoString() string {
	return s.String()
}

func (s *GetConfigRuleShrinkRequest) SetConfigRuleId(v string) *GetConfigRuleShrinkRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *GetConfigRuleShrinkRequest) SetTagShrink(v string) *GetConfigRuleShrinkRequest {
	s.TagShrink = &v
	return s
}

type GetConfigRuleResponseBody struct {
	// The details of the rule.
	ConfigRule *GetConfigRuleResponseBodyConfigRule `json:"ConfigRule,omitempty" xml:"ConfigRule,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 811234F4-C3AB-4D15-B90B-F55016D1B5AA
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetConfigRuleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBody) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBody) SetConfigRule(v *GetConfigRuleResponseBodyConfigRule) *GetConfigRuleResponseBody {
	s.ConfigRule = v
	return s
}

func (s *GetConfigRuleResponseBody) SetRequestId(v string) *GetConfigRuleResponseBody {
	s.RequestId = &v
	return s
}

type GetConfigRuleResponseBodyConfigRule struct {
	// The ID of the Alibaba Cloud account to which the rule belongs.
	//
	// example:
	//
	// 120886317861****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The details of compliance evaluation results.
	Compliance *GetConfigRuleResponseBodyConfigRuleCompliance `json:"Compliance,omitempty" xml:"Compliance,omitempty" type:"Struct"`
	// The ARN of the managed rule.
	//
	// example:
	//
	// acs:config::100931896542****:rule/cr-7f7d626622af0041****
	ConfigRuleArn *string `json:"ConfigRuleArn,omitempty" xml:"ConfigRuleArn,omitempty"`
	// The information about compliance evaluations performed by the rule.
	ConfigRuleEvaluationStatus *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus `json:"ConfigRuleEvaluationStatus,omitempty" xml:"ConfigRuleEvaluationStatus,omitempty" type:"Struct"`
	// The rule ID.
	//
	// example:
	//
	// cr-7f7d626622af0041****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// ecs-disk-auto-snapshot-policy
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The status of the rule. Valid values:
	//
	// 	- ACTIVE: The rule is enabled.
	//
	// 	- DELETING: The rule is being deleted.
	//
	// 	- EVALUATING: The rule is being used to evaluate resource configurations.
	//
	// 	- INACTIVE: The rule is disabled.
	//
	// example:
	//
	// ACTIVE
	ConfigRuleState *string `json:"ConfigRuleState,omitempty" xml:"ConfigRuleState,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule was triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule was periodically triggered.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	ConfigRuleTriggerTypes *string `json:"ConfigRuleTriggerTypes,omitempty" xml:"ConfigRuleTriggerTypes,omitempty"`
	// The information about the creation of the rule.
	CreateBy *GetConfigRuleResponseBodyConfigRuleCreateBy `json:"CreateBy,omitempty" xml:"CreateBy,omitempty" type:"Struct"`
	// The timestamp generated when the rule was created. Unit: millisecond.
	//
	// example:
	//
	// 1604684022000
	CreateTimestamp *int64 `json:"CreateTimestamp,omitempty" xml:"CreateTimestamp,omitempty"`
	// The description of the managed rule.
	//
	// example:
	//
	// example-description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// ExcludeRegionIdsScope
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope
	//
	// example:
	//
	// rg-aekzdibsjjc****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource excluded from the compliance evaluations performed by the rule.
	//
	// example:
	//
	// 23642660635687****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// ExcludeTagsScope
	ExcludeTagsScope []*GetConfigRuleResponseBodyConfigRuleExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// Optional field, only used in conjunction with the 24-hour cycle execution to set the trigger time.
	//
	// example:
	//
	// {"fixedHour":"12"}
	ExtendContent *string `json:"ExtendContent,omitempty" xml:"ExtendContent,omitempty"`
	// The input parameters of the rule.
	//
	// example:
	//
	// {}
	InputParameters map[string]interface{} `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
	// The details of the managed rule.
	ManagedRule *GetConfigRuleResponseBodyConfigRuleManagedRule `json:"ManagedRule,omitempty" xml:"ManagedRule,omitempty" type:"Struct"`
	// The interval at which the rule is triggered. Valid values:
	//
	// 	- One_Hour
	//
	// 	- Three_Hours
	//
	// 	- Six_Hours
	//
	// 	- Twelve_Hours
	//
	// 	- TwentyFour_Hours
	//
	// >  This parameter is returned if the rule is periodically triggered.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The timestamp generated when the rule was last updated. Unit: millisecond.
	//
	// example:
	//
	// 1614687022000
	ModifiedTimestamp *int64 `json:"ModifiedTimestamp,omitempty" xml:"ModifiedTimestamp,omitempty"`
	// The ID of the region to which the rule applies.
	//
	// example:
	//
	// global
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group to which the rule applies.
	//
	// example:
	//
	// rg-aekzdibsjjc****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// ResourceIdsScope
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// if can be null:
	// true
	ResourceNameScope *string `json:"ResourceNameScope,omitempty" xml:"ResourceNameScope,omitempty"`
	// The type of the resource to be evaluated by the rule.
	//
	// example:
	//
	// ACS::RAM::User
	ResourceTypesScope *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high.
	//
	// 	- 2: medium.
	//
	// 	- 3: low.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The effective scope of the rule.
	Scope *GetConfigRuleResponseBodyConfigRuleScope `json:"Scope,omitempty" xml:"Scope,omitempty" type:"Struct"`
	// The information about how the rule was created.
	Source *GetConfigRuleResponseBodyConfigRuleSource `json:"Source,omitempty" xml:"Source,omitempty" type:"Struct"`
	// Deprecated
	//
	// The ID of the member account to which the rule does not apply, which means that the resources within the member account are not evaluated based on the rule.
	//
	// > This parameter applies only to a managed rule.
	//
	// example:
	//
	// 120886317861****
	TagKeyLogicScope *string `json:"TagKeyLogicScope,omitempty" xml:"TagKeyLogicScope,omitempty"`
	// Deprecated
	//
	// The tag key used to filter resources. The rule applies only to the resources with the specified tag key.
	//
	// > The `TagKeyScope` and `TagValueScope` parameters are returned at the same time.
	//
	// example:
	//
	// RAM
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// Deprecated
	//
	// The tag value used to filter resources. The rule applies only to the resources with the specified tag value.
	//
	// > The `TagKeyScope` and `TagValueScope` parameters are returned at the same time.
	//
	// example:
	//
	// MFA
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The tag list.
	Tags []*GetConfigRuleResponseBodyConfigRuleTags `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
	// TagsScope
	TagsScope []*GetConfigRuleResponseBodyConfigRuleTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s GetConfigRuleResponseBodyConfigRule) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRule) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRule) SetAccountId(v int64) *GetConfigRuleResponseBodyConfigRule {
	s.AccountId = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetCompliance(v *GetConfigRuleResponseBodyConfigRuleCompliance) *GetConfigRuleResponseBodyConfigRule {
	s.Compliance = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetConfigRuleArn(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ConfigRuleArn = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetConfigRuleEvaluationStatus(v *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) *GetConfigRuleResponseBodyConfigRule {
	s.ConfigRuleEvaluationStatus = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetConfigRuleId(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ConfigRuleId = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetConfigRuleName(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ConfigRuleName = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetConfigRuleState(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ConfigRuleState = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetConfigRuleTriggerTypes(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ConfigRuleTriggerTypes = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetCreateBy(v *GetConfigRuleResponseBodyConfigRuleCreateBy) *GetConfigRuleResponseBodyConfigRule {
	s.CreateBy = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetCreateTimestamp(v int64) *GetConfigRuleResponseBodyConfigRule {
	s.CreateTimestamp = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetDescription(v string) *GetConfigRuleResponseBodyConfigRule {
	s.Description = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetExcludeRegionIdsScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetExcludeResourceGroupIdsScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetExcludeResourceIdsScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetExcludeTagsScope(v []*GetConfigRuleResponseBodyConfigRuleExcludeTagsScope) *GetConfigRuleResponseBodyConfigRule {
	s.ExcludeTagsScope = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetExtendContent(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ExtendContent = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetInputParameters(v map[string]interface{}) *GetConfigRuleResponseBodyConfigRule {
	s.InputParameters = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetManagedRule(v *GetConfigRuleResponseBodyConfigRuleManagedRule) *GetConfigRuleResponseBodyConfigRule {
	s.ManagedRule = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetMaximumExecutionFrequency(v string) *GetConfigRuleResponseBodyConfigRule {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetModifiedTimestamp(v int64) *GetConfigRuleResponseBodyConfigRule {
	s.ModifiedTimestamp = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetRegionIdsScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.RegionIdsScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetResourceGroupIdsScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetResourceIdsScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ResourceIdsScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetResourceNameScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ResourceNameScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetResourceTypesScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.ResourceTypesScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetRiskLevel(v int32) *GetConfigRuleResponseBodyConfigRule {
	s.RiskLevel = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetScope(v *GetConfigRuleResponseBodyConfigRuleScope) *GetConfigRuleResponseBodyConfigRule {
	s.Scope = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetSource(v *GetConfigRuleResponseBodyConfigRuleSource) *GetConfigRuleResponseBodyConfigRule {
	s.Source = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetTagKeyLogicScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.TagKeyLogicScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetTagKeyScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.TagKeyScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetTagValueScope(v string) *GetConfigRuleResponseBodyConfigRule {
	s.TagValueScope = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetTags(v []*GetConfigRuleResponseBodyConfigRuleTags) *GetConfigRuleResponseBodyConfigRule {
	s.Tags = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRule) SetTagsScope(v []*GetConfigRuleResponseBodyConfigRuleTagsScope) *GetConfigRuleResponseBodyConfigRule {
	s.TagsScope = v
	return s
}

type GetConfigRuleResponseBodyConfigRuleCompliance struct {
	// The statistics on the compliance evaluation results by compliance type. Valid values:
	//
	// 	- COMPLIANT: The resource was evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource was evaluated as incompliant.
	//
	// 	- NOT_APPLICABLE: The rule did not apply to your resource.
	//
	// 	- INSUFFICIENT_DATA: No resource data was available.
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The number of evaluated resources.
	//
	// example:
	//
	// 3
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
}

func (s GetConfigRuleResponseBodyConfigRuleCompliance) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleCompliance) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleCompliance) SetComplianceType(v string) *GetConfigRuleResponseBodyConfigRuleCompliance {
	s.ComplianceType = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleCompliance) SetCount(v int32) *GetConfigRuleResponseBodyConfigRuleCompliance {
	s.Count = &v
	return s
}

type GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus struct {
	// The timestamp generated when the rule was first triggered. Unit: millisecond.
	//
	// example:
	//
	// 1624932221993
	FirstActivatedTimestamp *int64 `json:"FirstActivatedTimestamp,omitempty" xml:"FirstActivatedTimestamp,omitempty"`
	// Indicates whether resource configurations were evaluated based on the rule. Valid values:
	//
	// 	- true: Resource configurations were evaluated based on the rule.
	//
	// 	- false: Resource configurations were not evaluated based on the rule.
	//
	// example:
	//
	// true
	FirstEvaluationStarted *bool `json:"FirstEvaluationStarted,omitempty" xml:"FirstEvaluationStarted,omitempty"`
	// The error code returned for the previous failed compliance evaluation.
	//
	// example:
	//
	// TimeOut
	LastErrorCode *string `json:"LastErrorCode,omitempty" xml:"LastErrorCode,omitempty"`
	// The error message returned for the previous failed compliance evaluation.
	//
	// example:
	//
	// Time out
	LastErrorMessage *string `json:"LastErrorMessage,omitempty" xml:"LastErrorMessage,omitempty"`
	// The timestamp generated when the previous failed compliance evaluation of the rule ended. Unit: millisecond.
	//
	// example:
	//
	// 1614687022000
	LastFailedEvaluationTimestamp *int64 `json:"LastFailedEvaluationTimestamp,omitempty" xml:"LastFailedEvaluationTimestamp,omitempty"`
	// The timestamp generated when the previous failed compliance evaluation of the rule started. Unit: millisecond.
	//
	// example:
	//
	// 1614687022000
	LastFailedInvocationTimestamp *int64 `json:"LastFailedInvocationTimestamp,omitempty" xml:"LastFailedInvocationTimestamp,omitempty"`
	// The timestamp generated when the previous successful compliance evaluation of the rule ended. Unit: millisecond.
	//
	// example:
	//
	// 1624932227486
	LastSuccessfulEvaluationTimestamp *int64 `json:"LastSuccessfulEvaluationTimestamp,omitempty" xml:"LastSuccessfulEvaluationTimestamp,omitempty"`
	// The timestamp generated when the previous successful compliance evaluation of the rule started. Unit: millisecond.
	//
	// example:
	//
	// 1624932227476
	LastSuccessfulInvocationTimestamp *int64 `json:"LastSuccessfulInvocationTimestamp,omitempty" xml:"LastSuccessfulInvocationTimestamp,omitempty"`
}

func (s GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetFirstActivatedTimestamp(v int64) *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.FirstActivatedTimestamp = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetFirstEvaluationStarted(v bool) *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.FirstEvaluationStarted = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastErrorCode(v string) *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastErrorCode = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastErrorMessage(v string) *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastErrorMessage = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastFailedEvaluationTimestamp(v int64) *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastFailedEvaluationTimestamp = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastFailedInvocationTimestamp(v int64) *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastFailedInvocationTimestamp = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastSuccessfulEvaluationTimestamp(v int64) *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastSuccessfulEvaluationTimestamp = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus) SetLastSuccessfulInvocationTimestamp(v int64) *GetConfigRuleResponseBodyConfigRuleConfigRuleEvaluationStatus {
	s.LastSuccessfulInvocationTimestamp = &v
	return s
}

type GetConfigRuleResponseBodyConfigRuleCreateBy struct {
	// The compliance package ID.
	//
	// example:
	//
	// cp-541e626622af008****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// example:
	//
	// example-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the account that was used to create the rule.
	//
	// example:
	//
	// 100931896542****
	CreatorId *string `json:"CreatorId,omitempty" xml:"CreatorId,omitempty"`
	// The name of the account that was used to create the rule.
	//
	// example:
	//
	// Alice
	CreatorName *string `json:"CreatorName,omitempty" xml:"CreatorName,omitempty"`
}

func (s GetConfigRuleResponseBodyConfigRuleCreateBy) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleCreateBy) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleCreateBy) SetCompliancePackId(v string) *GetConfigRuleResponseBodyConfigRuleCreateBy {
	s.CompliancePackId = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleCreateBy) SetCompliancePackName(v string) *GetConfigRuleResponseBodyConfigRuleCreateBy {
	s.CompliancePackName = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleCreateBy) SetCreatorId(v string) *GetConfigRuleResponseBodyConfigRuleCreateBy {
	s.CreatorId = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleCreateBy) SetCreatorName(v string) *GetConfigRuleResponseBodyConfigRuleCreateBy {
	s.CreatorName = &v
	return s
}

type GetConfigRuleResponseBodyConfigRuleExcludeTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetConfigRuleResponseBodyConfigRuleExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleExcludeTagsScope) SetTagKey(v string) *GetConfigRuleResponseBodyConfigRuleExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleExcludeTagsScope) SetTagValue(v string) *GetConfigRuleResponseBodyConfigRuleExcludeTagsScope {
	s.TagValue = &v
	return s
}

type GetConfigRuleResponseBodyConfigRuleManagedRule struct {
	// The settings of the required input parameters for the managed rule.
	//
	// example:
	//
	// {}
	CompulsoryInputParameterDetails map[string]interface{} `json:"CompulsoryInputParameterDetails,omitempty" xml:"CompulsoryInputParameterDetails,omitempty"`
	// The description of the managed rule.
	//
	// example:
	//
	// example-description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The identifier of the managed rule.
	//
	// example:
	//
	// ram-user-mfa-check
	Identifier *string `json:"Identifier,omitempty" xml:"Identifier,omitempty"`
	// The rule tags.
	Labels []*string `json:"Labels,omitempty" xml:"Labels,omitempty" type:"Repeated"`
	// The name of the managed rule.
	//
	// example:
	//
	// example-name
	ManagedRuleName *string `json:"ManagedRuleName,omitempty" xml:"ManagedRuleName,omitempty"`
	// The settings of the optional input parameters for the managed rule.
	//
	// example:
	//
	// {}
	OptionalInputParameterDetails map[string]interface{} `json:"OptionalInputParameterDetails,omitempty" xml:"OptionalInputParameterDetails,omitempty"`
	// The details of the source of the managed rule.
	SourceDetails []*GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails `json:"SourceDetails,omitempty" xml:"SourceDetails,omitempty" type:"Repeated"`
}

func (s GetConfigRuleResponseBodyConfigRuleManagedRule) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleManagedRule) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleManagedRule) SetCompulsoryInputParameterDetails(v map[string]interface{}) *GetConfigRuleResponseBodyConfigRuleManagedRule {
	s.CompulsoryInputParameterDetails = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleManagedRule) SetDescription(v string) *GetConfigRuleResponseBodyConfigRuleManagedRule {
	s.Description = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleManagedRule) SetIdentifier(v string) *GetConfigRuleResponseBodyConfigRuleManagedRule {
	s.Identifier = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleManagedRule) SetLabels(v []*string) *GetConfigRuleResponseBodyConfigRuleManagedRule {
	s.Labels = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleManagedRule) SetManagedRuleName(v string) *GetConfigRuleResponseBodyConfigRuleManagedRule {
	s.ManagedRuleName = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleManagedRule) SetOptionalInputParameterDetails(v map[string]interface{}) *GetConfigRuleResponseBodyConfigRuleManagedRule {
	s.OptionalInputParameterDetails = v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleManagedRule) SetSourceDetails(v []*GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) *GetConfigRuleResponseBodyConfigRuleManagedRule {
	s.SourceDetails = v
	return s
}

type GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails struct {
	// The event source.
	//
	// >  Only aliyun.config is returned, which indicates that only events related to Cloud Config are supported.
	//
	// example:
	//
	// aliyun.config
	EventSource *string `json:"EventSource,omitempty" xml:"EventSource,omitempty"`
	// The interval at which the rule is triggered. Valid values:
	//
	// 	- One_Hour
	//
	// 	- Three_Hours
	//
	// 	- Six_Hours
	//
	// 	- Twelve_Hours
	//
	// 	- TwentyFour_Hours
	//
	// >  This parameter is returned if the rule is periodically triggered.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	MessageType *string `json:"MessageType,omitempty" xml:"MessageType,omitempty"`
}

func (s GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) SetEventSource(v string) *GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails {
	s.EventSource = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) SetMaximumExecutionFrequency(v string) *GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails) SetMessageType(v string) *GetConfigRuleResponseBodyConfigRuleManagedRuleSourceDetails {
	s.MessageType = &v
	return s
}

type GetConfigRuleResponseBodyConfigRuleScope struct {
	// The types of the resources to be evaluated against the rule. You can also view the resource types by using the ResourceTypesScope parameter.
	ComplianceResourceTypes []*string `json:"ComplianceResourceTypes,omitempty" xml:"ComplianceResourceTypes,omitempty" type:"Repeated"`
}

func (s GetConfigRuleResponseBodyConfigRuleScope) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleScope) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleScope) SetComplianceResourceTypes(v []*string) *GetConfigRuleResponseBodyConfigRuleScope {
	s.ComplianceResourceTypes = v
	return s
}

type GetConfigRuleResponseBodyConfigRuleSource struct {
	// The identifier of the rule.
	//
	// 	- If the rule is a managed rule, the value of this parameter is the identifier of the managed rule.
	//
	// 	- If the rule is a custom rule, the value of this parameter is the Alibaba Cloud Resource Name (ARN) of a function.
	//
	// example:
	//
	// acs:fc:cn-hangzhou:100931896542****:services/ConfigService.LATEST/functions/specific-config
	Identifier *string `json:"Identifier,omitempty" xml:"Identifier,omitempty"`
	// The type of the rule. Valid values:
	//
	// 	- CUSTOM_FC: a custom rule.
	//
	// 	- ALIYUN: a managed rule.
	//
	// example:
	//
	// ALIYUN
	Owner *string `json:"Owner,omitempty" xml:"Owner,omitempty"`
	// The details of the source of the rule.
	SourceDetails []*GetConfigRuleResponseBodyConfigRuleSourceSourceDetails `json:"SourceDetails,omitempty" xml:"SourceDetails,omitempty" type:"Repeated"`
}

func (s GetConfigRuleResponseBodyConfigRuleSource) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleSource) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleSource) SetIdentifier(v string) *GetConfigRuleResponseBodyConfigRuleSource {
	s.Identifier = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleSource) SetOwner(v string) *GetConfigRuleResponseBodyConfigRuleSource {
	s.Owner = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleSource) SetSourceDetails(v []*GetConfigRuleResponseBodyConfigRuleSourceSourceDetails) *GetConfigRuleResponseBodyConfigRuleSource {
	s.SourceDetails = v
	return s
}

type GetConfigRuleResponseBodyConfigRuleSourceSourceDetails struct {
	// The event source.
	//
	// >  Only aliyun.config is returned, which indicates that only events related to Cloud Config are supported.
	//
	// example:
	//
	// aliyun.config
	EventSource *string `json:"EventSource,omitempty" xml:"EventSource,omitempty"`
	// The interval at which the rule is triggered. Valid values:
	//
	// 	- One_Hour
	//
	// 	- Three_Hours
	//
	// 	- Six_Hours
	//
	// 	- Twelve_Hours
	//
	// 	- TwentyFour_Hours
	//
	// >  This parameter is returned if the rule is periodically triggered.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	MessageType *string `json:"MessageType,omitempty" xml:"MessageType,omitempty"`
}

func (s GetConfigRuleResponseBodyConfigRuleSourceSourceDetails) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleSourceSourceDetails) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleSourceSourceDetails) SetEventSource(v string) *GetConfigRuleResponseBodyConfigRuleSourceSourceDetails {
	s.EventSource = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleSourceSourceDetails) SetMaximumExecutionFrequency(v string) *GetConfigRuleResponseBodyConfigRuleSourceSourceDetails {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleSourceSourceDetails) SetMessageType(v string) *GetConfigRuleResponseBodyConfigRuleSourceSourceDetails {
	s.MessageType = &v
	return s
}

type GetConfigRuleResponseBodyConfigRuleTags struct {
	// The tag key. The tag key can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetConfigRuleResponseBodyConfigRuleTags) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleTags) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleTags) SetTagKey(v string) *GetConfigRuleResponseBodyConfigRuleTags {
	s.TagKey = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleTags) SetTagValue(v string) *GetConfigRuleResponseBodyConfigRuleTags {
	s.TagValue = &v
	return s
}

type GetConfigRuleResponseBodyConfigRuleTagsScope struct {
	// TagKey
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// TagValue
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s GetConfigRuleResponseBodyConfigRuleTagsScope) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponseBodyConfigRuleTagsScope) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponseBodyConfigRuleTagsScope) SetTagKey(v string) *GetConfigRuleResponseBodyConfigRuleTagsScope {
	s.TagKey = &v
	return s
}

func (s *GetConfigRuleResponseBodyConfigRuleTagsScope) SetTagValue(v string) *GetConfigRuleResponseBodyConfigRuleTagsScope {
	s.TagValue = &v
	return s
}

type GetConfigRuleResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetConfigRuleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetConfigRuleResponse) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleResponse) GoString() string {
	return s.String()
}

func (s *GetConfigRuleResponse) SetHeaders(v map[string]*string) *GetConfigRuleResponse {
	s.Headers = v
	return s
}

func (s *GetConfigRuleResponse) SetStatusCode(v int32) *GetConfigRuleResponse {
	s.StatusCode = &v
	return s
}

func (s *GetConfigRuleResponse) SetBody(v *GetConfigRuleResponseBody) *GetConfigRuleResponse {
	s.Body = v
	return s
}

type GetConfigRuleComplianceByPackRequest struct {
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
}

func (s GetConfigRuleComplianceByPackRequest) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleComplianceByPackRequest) GoString() string {
	return s.String()
}

func (s *GetConfigRuleComplianceByPackRequest) SetCompliancePackId(v string) *GetConfigRuleComplianceByPackRequest {
	s.CompliancePackId = &v
	return s
}

type GetConfigRuleComplianceByPackResponseBody struct {
	// The information about the compliance evaluation results returned.
	ConfigRuleComplianceResult *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult `json:"ConfigRuleComplianceResult,omitempty" xml:"ConfigRuleComplianceResult,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetConfigRuleComplianceByPackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleComplianceByPackResponseBody) GoString() string {
	return s.String()
}

func (s *GetConfigRuleComplianceByPackResponseBody) SetConfigRuleComplianceResult(v *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) *GetConfigRuleComplianceByPackResponseBody {
	s.ConfigRuleComplianceResult = v
	return s
}

func (s *GetConfigRuleComplianceByPackResponseBody) SetRequestId(v string) *GetConfigRuleComplianceByPackResponseBody {
	s.RequestId = &v
	return s
}

type GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult struct {
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The rule enabled in the compliance package and the compliance evaluation result returned by the rule.
	ConfigRuleCompliances []*GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances `json:"ConfigRuleCompliances,omitempty" xml:"ConfigRuleCompliances,omitempty" type:"Repeated"`
	// The number of rules against which specific resources are evaluated as non-compliant.
	//
	// example:
	//
	// 0
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The total number of rules enabled in the compliance package.
	//
	// example:
	//
	// 1
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) GoString() string {
	return s.String()
}

func (s *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) SetCompliancePackId(v string) *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult {
	s.CompliancePackId = &v
	return s
}

func (s *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) SetConfigRuleCompliances(v []*GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult {
	s.ConfigRuleCompliances = v
	return s
}

func (s *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) SetNonCompliantCount(v int32) *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult {
	s.NonCompliantCount = &v
	return s
}

func (s *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult) SetTotalCount(v int32) *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResult {
	s.TotalCount = &v
	return s
}

type GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances struct {
	// The compliance evaluation result. Valid values:
	//
	// 	- COMPLIANT: The relevant resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The relevant resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to your resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The ID of the rule enabled in the compliance package.
	//
	// example:
	//
	// cr-fdc8626622af00f9****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule enabled in the compliance package.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
}

func (s GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) GoString() string {
	return s.String()
}

func (s *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) SetComplianceType(v string) *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances {
	s.ComplianceType = &v
	return s
}

func (s *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) SetConfigRuleId(v string) *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances {
	s.ConfigRuleId = &v
	return s
}

func (s *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances) SetConfigRuleName(v string) *GetConfigRuleComplianceByPackResponseBodyConfigRuleComplianceResultConfigRuleCompliances {
	s.ConfigRuleName = &v
	return s
}

type GetConfigRuleComplianceByPackResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetConfigRuleComplianceByPackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetConfigRuleComplianceByPackResponse) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleComplianceByPackResponse) GoString() string {
	return s.String()
}

func (s *GetConfigRuleComplianceByPackResponse) SetHeaders(v map[string]*string) *GetConfigRuleComplianceByPackResponse {
	s.Headers = v
	return s
}

func (s *GetConfigRuleComplianceByPackResponse) SetStatusCode(v int32) *GetConfigRuleComplianceByPackResponse {
	s.StatusCode = &v
	return s
}

func (s *GetConfigRuleComplianceByPackResponse) SetBody(v *GetConfigRuleComplianceByPackResponseBody) *GetConfigRuleComplianceByPackResponse {
	s.Body = v
	return s
}

type GetConfigRuleSummaryByRiskLevelResponseBody struct {
	// The summary of compliance evaluation results by rule risk level.
	ConfigRuleSummaries []*GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries `json:"ConfigRuleSummaries,omitempty" xml:"ConfigRuleSummaries,omitempty" type:"Repeated"`
	// The ID of the request.
	//
	// example:
	//
	// A3CED98C-DE65-46AC-B2D2-04A4A9AB5B36
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetConfigRuleSummaryByRiskLevelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleSummaryByRiskLevelResponseBody) GoString() string {
	return s.String()
}

func (s *GetConfigRuleSummaryByRiskLevelResponseBody) SetConfigRuleSummaries(v []*GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) *GetConfigRuleSummaryByRiskLevelResponseBody {
	s.ConfigRuleSummaries = v
	return s
}

func (s *GetConfigRuleSummaryByRiskLevelResponseBody) SetRequestId(v string) *GetConfigRuleSummaryByRiskLevelResponseBody {
	s.RequestId = &v
	return s
}

type GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries struct {
	// The number of rules against which specific resources are evaluated as compliant.
	//
	// example:
	//
	// 3
	CompliantCount *int32 `json:"CompliantCount,omitempty" xml:"CompliantCount,omitempty"`
	// The number of rules against which specific resources are evaluated as non-compliant.
	//
	// example:
	//
	// 1
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The risk level of the resources that are not compliant with the rules. Valid values:
	//
	// 	- 1: high risk level.
	//
	// 	- 2: medium risk level.
	//
	// 	- 3: low risk level.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) GoString() string {
	return s.String()
}

func (s *GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) SetCompliantCount(v int32) *GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries {
	s.CompliantCount = &v
	return s
}

func (s *GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) SetNonCompliantCount(v int32) *GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries {
	s.NonCompliantCount = &v
	return s
}

func (s *GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries) SetRiskLevel(v int32) *GetConfigRuleSummaryByRiskLevelResponseBodyConfigRuleSummaries {
	s.RiskLevel = &v
	return s
}

type GetConfigRuleSummaryByRiskLevelResponse struct {
	Headers    map[string]*string                           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetConfigRuleSummaryByRiskLevelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetConfigRuleSummaryByRiskLevelResponse) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRuleSummaryByRiskLevelResponse) GoString() string {
	return s.String()
}

func (s *GetConfigRuleSummaryByRiskLevelResponse) SetHeaders(v map[string]*string) *GetConfigRuleSummaryByRiskLevelResponse {
	s.Headers = v
	return s
}

func (s *GetConfigRuleSummaryByRiskLevelResponse) SetStatusCode(v int32) *GetConfigRuleSummaryByRiskLevelResponse {
	s.StatusCode = &v
	return s
}

func (s *GetConfigRuleSummaryByRiskLevelResponse) SetBody(v *GetConfigRuleSummaryByRiskLevelResponseBody) *GetConfigRuleSummaryByRiskLevelResponse {
	s.Body = v
	return s
}

type GetConfigRulesReportRequest struct {
	// The ID of the compliance evaluation report.
	//
	// example:
	//
	// crp-88176457e0d900c9****
	ReportId *string `json:"ReportId,omitempty" xml:"ReportId,omitempty"`
}

func (s GetConfigRulesReportRequest) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRulesReportRequest) GoString() string {
	return s.String()
}

func (s *GetConfigRulesReportRequest) SetReportId(v string) *GetConfigRulesReportRequest {
	s.ReportId = &v
	return s
}

type GetConfigRulesReportResponseBody struct {
	// The information about the compliance evaluation report.
	ConfigRulesReport *GetConfigRulesReportResponseBodyConfigRulesReport `json:"ConfigRulesReport,omitempty" xml:"ConfigRulesReport,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetConfigRulesReportResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRulesReportResponseBody) GoString() string {
	return s.String()
}

func (s *GetConfigRulesReportResponseBody) SetConfigRulesReport(v *GetConfigRulesReportResponseBodyConfigRulesReport) *GetConfigRulesReportResponseBody {
	s.ConfigRulesReport = v
	return s
}

func (s *GetConfigRulesReportResponseBody) SetRequestId(v string) *GetConfigRulesReportResponseBody {
	s.RequestId = &v
	return s
}

type GetConfigRulesReportResponseBodyConfigRulesReport struct {
	// The ID of the Alibaba Cloud account to which the rules belong.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The timestamp when the compliance evaluation report was generated. Unit: milliseconds.
	//
	// example:
	//
	// 1614687022000
	ReportCreateTimestamp *int64 `json:"ReportCreateTimestamp,omitempty" xml:"ReportCreateTimestamp,omitempty"`
	// The ID of the compliance evaluation report.
	//
	// example:
	//
	// crp-88176457e0d900c9****
	ReportId *string `json:"ReportId,omitempty" xml:"ReportId,omitempty"`
	// The status of the compliance evaluation report. Valid values:
	//
	// 	- NONE: The compliance evaluation report is not generated.
	//
	// 	- CREATING: The compliance evaluation report is being generated.
	//
	// 	- COMPLETE: The compliance evaluation report is generated.
	//
	// example:
	//
	// CREATING
	ReportStatus *string `json:"ReportStatus,omitempty" xml:"ReportStatus,omitempty"`
	// The URL that is used to download the compliance evaluation report.
	ReportUrl *string `json:"ReportUrl,omitempty" xml:"ReportUrl,omitempty"`
}

func (s GetConfigRulesReportResponseBodyConfigRulesReport) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRulesReportResponseBodyConfigRulesReport) GoString() string {
	return s.String()
}

func (s *GetConfigRulesReportResponseBodyConfigRulesReport) SetAccountId(v int64) *GetConfigRulesReportResponseBodyConfigRulesReport {
	s.AccountId = &v
	return s
}

func (s *GetConfigRulesReportResponseBodyConfigRulesReport) SetReportCreateTimestamp(v int64) *GetConfigRulesReportResponseBodyConfigRulesReport {
	s.ReportCreateTimestamp = &v
	return s
}

func (s *GetConfigRulesReportResponseBodyConfigRulesReport) SetReportId(v string) *GetConfigRulesReportResponseBodyConfigRulesReport {
	s.ReportId = &v
	return s
}

func (s *GetConfigRulesReportResponseBodyConfigRulesReport) SetReportStatus(v string) *GetConfigRulesReportResponseBodyConfigRulesReport {
	s.ReportStatus = &v
	return s
}

func (s *GetConfigRulesReportResponseBodyConfigRulesReport) SetReportUrl(v string) *GetConfigRulesReportResponseBodyConfigRulesReport {
	s.ReportUrl = &v
	return s
}

type GetConfigRulesReportResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetConfigRulesReportResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetConfigRulesReportResponse) String() string {
	return tea.Prettify(s)
}

func (s GetConfigRulesReportResponse) GoString() string {
	return s.String()
}

func (s *GetConfigRulesReportResponse) SetHeaders(v map[string]*string) *GetConfigRulesReportResponse {
	s.Headers = v
	return s
}

func (s *GetConfigRulesReportResponse) SetStatusCode(v int32) *GetConfigRulesReportResponse {
	s.StatusCode = &v
	return s
}

func (s *GetConfigRulesReportResponse) SetBody(v *GetConfigRulesReportResponseBody) *GetConfigRulesReportResponse {
	s.Body = v
	return s
}

type GetConfigurationRecorderResponseBody struct {
	// The details of the configuration recorder that monitors resources.
	ConfigurationRecorder *GetConfigurationRecorderResponseBodyConfigurationRecorder `json:"ConfigurationRecorder,omitempty" xml:"ConfigurationRecorder,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// AE43696A-B3AF-5E55-9845-11393127E6D3
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetConfigurationRecorderResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetConfigurationRecorderResponseBody) GoString() string {
	return s.String()
}

func (s *GetConfigurationRecorderResponseBody) SetConfigurationRecorder(v *GetConfigurationRecorderResponseBodyConfigurationRecorder) *GetConfigurationRecorderResponseBody {
	s.ConfigurationRecorder = v
	return s
}

func (s *GetConfigurationRecorderResponseBody) SetRequestId(v string) *GetConfigurationRecorderResponseBody {
	s.RequestId = &v
	return s
}

type GetConfigurationRecorderResponseBodyConfigurationRecorder struct {
	// The status of the configuration recorder. Valid values:
	//
	// 	- REGISTRABLE: The configuration recorder has not been registered.
	//
	// 	- BUILDING: The configuration recorder is being deployed.
	//
	// 	- REGISTERED: The configuration recorder has been registered.
	//
	// 	- REBUILDING: The configuration recorder is being redeployed.
	//
	// example:
	//
	// REGISTERED
	ConfigurationRecorderStatus *string `json:"ConfigurationRecorderStatus,omitempty" xml:"ConfigurationRecorderStatus,omitempty"`
	// The types of resources that are monitored.
	ResourceTypes []*string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty" type:"Repeated"`
}

func (s GetConfigurationRecorderResponseBodyConfigurationRecorder) String() string {
	return tea.Prettify(s)
}

func (s GetConfigurationRecorderResponseBodyConfigurationRecorder) GoString() string {
	return s.String()
}

func (s *GetConfigurationRecorderResponseBodyConfigurationRecorder) SetConfigurationRecorderStatus(v string) *GetConfigurationRecorderResponseBodyConfigurationRecorder {
	s.ConfigurationRecorderStatus = &v
	return s
}

func (s *GetConfigurationRecorderResponseBodyConfigurationRecorder) SetResourceTypes(v []*string) *GetConfigurationRecorderResponseBodyConfigurationRecorder {
	s.ResourceTypes = v
	return s
}

type GetConfigurationRecorderResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetConfigurationRecorderResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetConfigurationRecorderResponse) String() string {
	return tea.Prettify(s)
}

func (s GetConfigurationRecorderResponse) GoString() string {
	return s.String()
}

func (s *GetConfigurationRecorderResponse) SetHeaders(v map[string]*string) *GetConfigurationRecorderResponse {
	s.Headers = v
	return s
}

func (s *GetConfigurationRecorderResponse) SetStatusCode(v int32) *GetConfigurationRecorderResponse {
	s.StatusCode = &v
	return s
}

func (s *GetConfigurationRecorderResponse) SetBody(v *GetConfigurationRecorderResponseBody) *GetConfigurationRecorderResponse {
	s.Body = v
	return s
}

type GetDiscoveredResourceRequest struct {
	// Specifies whether to query the compliance results of the resource. Valid values:
	//
	// 	- 0 (default): does not query the compliance results of the resource.
	//
	// 	- 1: queries the compliance results of the resource.
	//
	// example:
	//
	// 0
	ComplianceOption *int32 `json:"ComplianceOption,omitempty" xml:"ComplianceOption,omitempty"`
	// The ID of the region in which the resource resides.
	//
	// For more information about how to query the region ID of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/411702.html).
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The resource ID.
	//
	// For more information about how to obtain the ID of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/411702.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource.
	//
	// For more information about how to obtain the type of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/411702.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s GetDiscoveredResourceRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceRequest) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceRequest) SetComplianceOption(v int32) *GetDiscoveredResourceRequest {
	s.ComplianceOption = &v
	return s
}

func (s *GetDiscoveredResourceRequest) SetRegion(v string) *GetDiscoveredResourceRequest {
	s.Region = &v
	return s
}

func (s *GetDiscoveredResourceRequest) SetResourceId(v string) *GetDiscoveredResourceRequest {
	s.ResourceId = &v
	return s
}

func (s *GetDiscoveredResourceRequest) SetResourceType(v string) *GetDiscoveredResourceRequest {
	s.ResourceType = &v
	return s
}

type GetDiscoveredResourceResponseBody struct {
	// The details of the resource.
	DiscoveredResourceDetail *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail `json:"DiscoveredResourceDetail,omitempty" xml:"DiscoveredResourceDetail,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// E4D71ACE-6B0A-46E0-8352-56952378CC7F
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDiscoveredResourceResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceResponseBody) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceResponseBody) SetDiscoveredResourceDetail(v *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) *GetDiscoveredResourceResponseBody {
	s.DiscoveredResourceDetail = v
	return s
}

func (s *GetDiscoveredResourceResponseBody) SetRequestId(v string) *GetDiscoveredResourceResponseBody {
	s.RequestId = &v
	return s
}

type GetDiscoveredResourceResponseBodyDiscoveredResourceDetail struct {
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the zone in which the resource resides.
	//
	// example:
	//
	// cn-hangzhou-h
	AvailabilityZone *string `json:"AvailabilityZone,omitempty" xml:"AvailabilityZone,omitempty"`
	// The compliance evaluation result of the resource. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The configuration of the resource.
	//
	// example:
	//
	// {\\"AccessControlList\\":{\\"Grant\\":\\"private\\"},\\"ServerSideEncryptionRule\\":{\\"SSEAlgorithm\\":\\"None\\"},\\"Comment\\":\\"\\",\\"CreationDate\\":\\"2021-06-29T10:05:12.000Z\\",\\"Owner\\":{\\"DisplayName\\":\\"100931896542****\\",\\"ID\\":\\"100931896542****\\"},\\"StorageClass\\":\\"Standard\\",\\"DataRedundancyType\\":\\"LRS\\",\\"AllowEmptyReferer\\":\\"true\\",\\"Name\\":\\"new-bucket\\",\\"BucketPolicy\\":{\\"LogPrefix\\":\\"\\",\\"LogBucket\\":\\"\\"},\\"ExtranetEndpoint\\":\\"oss-cn-hangzhou.aliyuncs.com\\",\\"IntranetEndpoint\\":\\"oss-cn-hangzhou-internal.aliyuncs.com\\",\\"Location\\":\\"oss-cn-hangzhou\\"}
	Configuration *string `json:"Configuration,omitempty" xml:"Configuration,omitempty"`
	// The region ID.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The timestamp when the resource was created.
	//
	// example:
	//
	// 1624961112000
	ResourceCreationTime *int64 `json:"ResourceCreationTime,omitempty" xml:"ResourceCreationTime,omitempty"`
	// Indicates whether the resource was deleted. Valid values:
	//
	// 	- 1: The resource was not deleted.
	//
	// 	- 0: The resource was deleted.
	//
	// example:
	//
	// 1
	ResourceDeleted *int32 `json:"ResourceDeleted,omitempty" xml:"ResourceDeleted,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The name of the resource.
	//
	// example:
	//
	// new-bucket
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The status of the resource. The value of this parameter varies based on the resource type and may be empty.
	//
	// 	- If the ResourceType parameter is set to ACS::ECS::Instance, the resource is an ECS instance that has a specific state. In this case, the valid values of this parameter are Running and Stopped.
	//
	// 	- If the ResourceType parameter is ACS::OSS::Bucket, the resource is an Object Storage Service (OSS) bucket that is not in a specific state. In this case, this parameter is left empty.
	//
	// example:
	//
	// offline
	ResourceStatus *string `json:"ResourceStatus,omitempty" xml:"ResourceStatus,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::OSS::BucketACS::CDN::Domain
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	//
	// example:
	//
	// {\\"\\"hc\\"\\":[\\"\\"value2\\"\\"]}
	Tags *string `json:"Tags,omitempty" xml:"Tags,omitempty"`
}

func (s GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetAccountId(v int64) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.AccountId = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetAvailabilityZone(v string) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.AvailabilityZone = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetComplianceType(v string) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ComplianceType = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetConfiguration(v string) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.Configuration = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetRegion(v string) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.Region = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceCreationTime(v int64) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceCreationTime = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceDeleted(v int32) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceDeleted = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceId(v string) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceId = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceName(v string) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceName = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceStatus(v string) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceStatus = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetResourceType(v string) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.ResourceType = &v
	return s
}

func (s *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail) SetTags(v string) *GetDiscoveredResourceResponseBodyDiscoveredResourceDetail {
	s.Tags = &v
	return s
}

type GetDiscoveredResourceResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDiscoveredResourceResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDiscoveredResourceResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceResponse) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceResponse) SetHeaders(v map[string]*string) *GetDiscoveredResourceResponse {
	s.Headers = v
	return s
}

func (s *GetDiscoveredResourceResponse) SetStatusCode(v int32) *GetDiscoveredResourceResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDiscoveredResourceResponse) SetBody(v *GetDiscoveredResourceResponseBody) *GetDiscoveredResourceResponse {
	s.Body = v
	return s
}

type GetDiscoveredResourceCountsGroupByRegionRequest struct {
	// The resource type.
	//
	// For more information about how to obtain the type of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s GetDiscoveredResourceCountsGroupByRegionRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceCountsGroupByRegionRequest) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceCountsGroupByRegionRequest) SetResourceType(v string) *GetDiscoveredResourceCountsGroupByRegionRequest {
	s.ResourceType = &v
	return s
}

type GetDiscoveredResourceCountsGroupByRegionResponseBody struct {
	// The statistics on the resources.
	DiscoveredResourceCountsSummary []*GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary `json:"DiscoveredResourceCountsSummary,omitempty" xml:"DiscoveredResourceCountsSummary,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 399BD94C-D20C-4D27-88D4-89E8D75C0595
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDiscoveredResourceCountsGroupByRegionResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceCountsGroupByRegionResponseBody) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceCountsGroupByRegionResponseBody) SetDiscoveredResourceCountsSummary(v []*GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) *GetDiscoveredResourceCountsGroupByRegionResponseBody {
	s.DiscoveredResourceCountsSummary = v
	return s
}

func (s *GetDiscoveredResourceCountsGroupByRegionResponseBody) SetRequestId(v string) *GetDiscoveredResourceCountsGroupByRegionResponseBody {
	s.RequestId = &v
	return s
}

type GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary struct {
	// The dimension by which statistics are collected.
	//
	// >  In most cases, the `Region` parameter instead of the GroupName parameter is returned.
	//
	// example:
	//
	// cn-hangzhou
	GroupName *string `json:"GroupName,omitempty" xml:"GroupName,omitempty"`
	// The ID of the region by which statistics are collected.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The total number of resources.
	//
	// example:
	//
	// 10
	ResourceCount *int64 `json:"ResourceCount,omitempty" xml:"ResourceCount,omitempty"`
}

func (s GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) SetGroupName(v string) *GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary {
	s.GroupName = &v
	return s
}

func (s *GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) SetRegion(v string) *GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary {
	s.Region = &v
	return s
}

func (s *GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary) SetResourceCount(v int64) *GetDiscoveredResourceCountsGroupByRegionResponseBodyDiscoveredResourceCountsSummary {
	s.ResourceCount = &v
	return s
}

type GetDiscoveredResourceCountsGroupByRegionResponse struct {
	Headers    map[string]*string                                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDiscoveredResourceCountsGroupByRegionResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDiscoveredResourceCountsGroupByRegionResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceCountsGroupByRegionResponse) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceCountsGroupByRegionResponse) SetHeaders(v map[string]*string) *GetDiscoveredResourceCountsGroupByRegionResponse {
	s.Headers = v
	return s
}

func (s *GetDiscoveredResourceCountsGroupByRegionResponse) SetStatusCode(v int32) *GetDiscoveredResourceCountsGroupByRegionResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDiscoveredResourceCountsGroupByRegionResponse) SetBody(v *GetDiscoveredResourceCountsGroupByRegionResponseBody) *GetDiscoveredResourceCountsGroupByRegionResponse {
	s.Body = v
	return s
}

type GetDiscoveredResourceCountsGroupByResourceTypeRequest struct {
	// The region ID.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
}

func (s GetDiscoveredResourceCountsGroupByResourceTypeRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceCountsGroupByResourceTypeRequest) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceCountsGroupByResourceTypeRequest) SetRegion(v string) *GetDiscoveredResourceCountsGroupByResourceTypeRequest {
	s.Region = &v
	return s
}

type GetDiscoveredResourceCountsGroupByResourceTypeResponseBody struct {
	// The statistics on the resources.
	DiscoveredResourceCountsSummary []*GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary `json:"DiscoveredResourceCountsSummary,omitempty" xml:"DiscoveredResourceCountsSummary,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// AC9BD94C-D20C-4D27-88D4-89E8D75C051B
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDiscoveredResourceCountsGroupByResourceTypeResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceCountsGroupByResourceTypeResponseBody) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceCountsGroupByResourceTypeResponseBody) SetDiscoveredResourceCountsSummary(v []*GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) *GetDiscoveredResourceCountsGroupByResourceTypeResponseBody {
	s.DiscoveredResourceCountsSummary = v
	return s
}

func (s *GetDiscoveredResourceCountsGroupByResourceTypeResponseBody) SetRequestId(v string) *GetDiscoveredResourceCountsGroupByResourceTypeResponseBody {
	s.RequestId = &v
	return s
}

type GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary struct {
	// The resource type by which the statistics are collected.
	//
	// > We recommend that you use the `ResourceType` parameter.
	//
	// example:
	//
	// ACS::ECS::Instance
	GroupName *string `json:"GroupName,omitempty" xml:"GroupName,omitempty"`
	// The total number of resources.
	//
	// example:
	//
	// 10
	ResourceCount *int64 `json:"ResourceCount,omitempty" xml:"ResourceCount,omitempty"`
	// The resource type by which the statistics are collected.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) SetGroupName(v string) *GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary {
	s.GroupName = &v
	return s
}

func (s *GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) SetResourceCount(v int64) *GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary {
	s.ResourceCount = &v
	return s
}

func (s *GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary) SetResourceType(v string) *GetDiscoveredResourceCountsGroupByResourceTypeResponseBodyDiscoveredResourceCountsSummary {
	s.ResourceType = &v
	return s
}

type GetDiscoveredResourceCountsGroupByResourceTypeResponse struct {
	Headers    map[string]*string                                          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDiscoveredResourceCountsGroupByResourceTypeResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDiscoveredResourceCountsGroupByResourceTypeResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDiscoveredResourceCountsGroupByResourceTypeResponse) GoString() string {
	return s.String()
}

func (s *GetDiscoveredResourceCountsGroupByResourceTypeResponse) SetHeaders(v map[string]*string) *GetDiscoveredResourceCountsGroupByResourceTypeResponse {
	s.Headers = v
	return s
}

func (s *GetDiscoveredResourceCountsGroupByResourceTypeResponse) SetStatusCode(v int32) *GetDiscoveredResourceCountsGroupByResourceTypeResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDiscoveredResourceCountsGroupByResourceTypeResponse) SetBody(v *GetDiscoveredResourceCountsGroupByResourceTypeResponseBody) *GetDiscoveredResourceCountsGroupByResourceTypeResponse {
	s.Body = v
	return s
}

type GetIntegratedServiceStatusRequest struct {
	// The identity of the cloud service that is integrated with Cloud Config. Valid values:
	//
	// 	- eventbridge: EventBridge
	//
	// 	- cms: CloudMonitor
	//
	// 	- bpstudio: Cloud Architect Design Tools (CADT)
	//
	// This parameter is required.
	//
	// example:
	//
	// cadt
	ServiceCode *string `json:"ServiceCode,omitempty" xml:"ServiceCode,omitempty"`
}

func (s GetIntegratedServiceStatusRequest) String() string {
	return tea.Prettify(s)
}

func (s GetIntegratedServiceStatusRequest) GoString() string {
	return s.String()
}

func (s *GetIntegratedServiceStatusRequest) SetServiceCode(v string) *GetIntegratedServiceStatusRequest {
	s.ServiceCode = &v
	return s
}

type GetIntegratedServiceStatusResponseBody struct {
	// The type of the event that is integrated across accounts. Valid values:
	//
	// 	- NonCompliantNotification: non-compliance event
	//
	// example:
	//
	// NonCompliantNotification
	AggregatorDeliveryDataType *string `json:"AggregatorDeliveryDataType,omitempty" xml:"AggregatorDeliveryDataType,omitempty"`
	// Indicates whether the product has been integrated. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	Data *bool `json:"Data,omitempty" xml:"Data,omitempty"`
	// The types of the integrated events. Separate multiple event types with commas (,). Valid values:
	//
	// 	- ConfigurationItemChangeNotification: resource change event
	//
	// 	- NonCompliantNotification: non-compliance event
	//
	// example:
	//
	// NonCompliantNotification
	IntegratedTypes *string `json:"IntegratedTypes,omitempty" xml:"IntegratedTypes,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 2E396C84-8D50-5F95-97FA-C0367181BA8A
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetIntegratedServiceStatusResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetIntegratedServiceStatusResponseBody) GoString() string {
	return s.String()
}

func (s *GetIntegratedServiceStatusResponseBody) SetAggregatorDeliveryDataType(v string) *GetIntegratedServiceStatusResponseBody {
	s.AggregatorDeliveryDataType = &v
	return s
}

func (s *GetIntegratedServiceStatusResponseBody) SetData(v bool) *GetIntegratedServiceStatusResponseBody {
	s.Data = &v
	return s
}

func (s *GetIntegratedServiceStatusResponseBody) SetIntegratedTypes(v string) *GetIntegratedServiceStatusResponseBody {
	s.IntegratedTypes = &v
	return s
}

func (s *GetIntegratedServiceStatusResponseBody) SetRequestId(v string) *GetIntegratedServiceStatusResponseBody {
	s.RequestId = &v
	return s
}

type GetIntegratedServiceStatusResponse struct {
	Headers    map[string]*string                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetIntegratedServiceStatusResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetIntegratedServiceStatusResponse) String() string {
	return tea.Prettify(s)
}

func (s GetIntegratedServiceStatusResponse) GoString() string {
	return s.String()
}

func (s *GetIntegratedServiceStatusResponse) SetHeaders(v map[string]*string) *GetIntegratedServiceStatusResponse {
	s.Headers = v
	return s
}

func (s *GetIntegratedServiceStatusResponse) SetStatusCode(v int32) *GetIntegratedServiceStatusResponse {
	s.StatusCode = &v
	return s
}

func (s *GetIntegratedServiceStatusResponse) SetBody(v *GetIntegratedServiceStatusResponseBody) *GetIntegratedServiceStatusResponse {
	s.Body = v
	return s
}

type GetManagedRuleRequest struct {
	// The identifier of the managed rule.
	//
	// For more information about how to obtain the identifier of a managed rule, see [ListManagedRules](https://help.aliyun.com/document_detail/421144.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cdn-domain-https-enabled
	Identifier *string `json:"Identifier,omitempty" xml:"Identifier,omitempty"`
}

func (s GetManagedRuleRequest) String() string {
	return tea.Prettify(s)
}

func (s GetManagedRuleRequest) GoString() string {
	return s.String()
}

func (s *GetManagedRuleRequest) SetIdentifier(v string) *GetManagedRuleRequest {
	s.Identifier = &v
	return s
}

type GetManagedRuleResponseBody struct {
	// The details of the managed rule.
	ManagedRule *GetManagedRuleResponseBodyManagedRule `json:"ManagedRule,omitempty" xml:"ManagedRule,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// 7E6DDC09-87C1-5310-A924-3491EAAE6F90
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetManagedRuleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetManagedRuleResponseBody) GoString() string {
	return s.String()
}

func (s *GetManagedRuleResponseBody) SetManagedRule(v *GetManagedRuleResponseBodyManagedRule) *GetManagedRuleResponseBody {
	s.ManagedRule = v
	return s
}

func (s *GetManagedRuleResponseBody) SetRequestId(v string) *GetManagedRuleResponseBody {
	s.RequestId = &v
	return s
}

type GetManagedRuleResponseBodyManagedRule struct {
	// The details of the required input parameters for the managed rule.
	//
	// example:
	//
	// {}
	CompulsoryInputParameterDetails map[string]interface{} `json:"CompulsoryInputParameterDetails,omitempty" xml:"CompulsoryInputParameterDetails,omitempty"`
	// The name of the managed rule.
	//
	// example:
	//
	// cdn-domain-https-enabled
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The description of the managed rule.
	//
	// example:
	//
	// If HTTPS encryption is enabled for the CDN domain name, the configuration is considered compliant.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The URL of the topic that provides guidance on remediation for the managed rule.
	//
	// example:
	//
	// https://example.aliyundoc.com
	HelpUrls *string `json:"HelpUrls,omitempty" xml:"HelpUrls,omitempty"`
	// The identifier of the managed rule.
	//
	// example:
	//
	// cdn-domain-https-enabled
	Identifier *string `json:"Identifier,omitempty" xml:"Identifier,omitempty"`
	// The tags of the managed rule.
	Labels []*string `json:"Labels,omitempty" xml:"Labels,omitempty" type:"Repeated"`
	// The details of the optional input parameters for the managed rule.
	//
	// example:
	//
	// {}
	OptionalInputParameterDetails map[string]interface{} `json:"OptionalInputParameterDetails,omitempty" xml:"OptionalInputParameterDetails,omitempty"`
	// The risk level of the managed rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The effective scope of the managed rule.
	Scope *GetManagedRuleResponseBodyManagedRuleScope `json:"Scope,omitempty" xml:"Scope,omitempty" type:"Struct"`
	// The information about the trigger type of the managed rule.
	SourceDetails []*GetManagedRuleResponseBodyManagedRuleSourceDetails `json:"SourceDetails,omitempty" xml:"SourceDetails,omitempty" type:"Repeated"`
}

func (s GetManagedRuleResponseBodyManagedRule) String() string {
	return tea.Prettify(s)
}

func (s GetManagedRuleResponseBodyManagedRule) GoString() string {
	return s.String()
}

func (s *GetManagedRuleResponseBodyManagedRule) SetCompulsoryInputParameterDetails(v map[string]interface{}) *GetManagedRuleResponseBodyManagedRule {
	s.CompulsoryInputParameterDetails = v
	return s
}

func (s *GetManagedRuleResponseBodyManagedRule) SetConfigRuleName(v string) *GetManagedRuleResponseBodyManagedRule {
	s.ConfigRuleName = &v
	return s
}

func (s *GetManagedRuleResponseBodyManagedRule) SetDescription(v string) *GetManagedRuleResponseBodyManagedRule {
	s.Description = &v
	return s
}

func (s *GetManagedRuleResponseBodyManagedRule) SetHelpUrls(v string) *GetManagedRuleResponseBodyManagedRule {
	s.HelpUrls = &v
	return s
}

func (s *GetManagedRuleResponseBodyManagedRule) SetIdentifier(v string) *GetManagedRuleResponseBodyManagedRule {
	s.Identifier = &v
	return s
}

func (s *GetManagedRuleResponseBodyManagedRule) SetLabels(v []*string) *GetManagedRuleResponseBodyManagedRule {
	s.Labels = v
	return s
}

func (s *GetManagedRuleResponseBodyManagedRule) SetOptionalInputParameterDetails(v map[string]interface{}) *GetManagedRuleResponseBodyManagedRule {
	s.OptionalInputParameterDetails = v
	return s
}

func (s *GetManagedRuleResponseBodyManagedRule) SetRiskLevel(v int32) *GetManagedRuleResponseBodyManagedRule {
	s.RiskLevel = &v
	return s
}

func (s *GetManagedRuleResponseBodyManagedRule) SetScope(v *GetManagedRuleResponseBodyManagedRuleScope) *GetManagedRuleResponseBodyManagedRule {
	s.Scope = v
	return s
}

func (s *GetManagedRuleResponseBodyManagedRule) SetSourceDetails(v []*GetManagedRuleResponseBodyManagedRuleSourceDetails) *GetManagedRuleResponseBodyManagedRule {
	s.SourceDetails = v
	return s
}

type GetManagedRuleResponseBodyManagedRuleScope struct {
	// The types of resources to which the managed rule applies.
	ComplianceResourceTypes []*string `json:"ComplianceResourceTypes,omitempty" xml:"ComplianceResourceTypes,omitempty" type:"Repeated"`
}

func (s GetManagedRuleResponseBodyManagedRuleScope) String() string {
	return tea.Prettify(s)
}

func (s GetManagedRuleResponseBodyManagedRuleScope) GoString() string {
	return s.String()
}

func (s *GetManagedRuleResponseBodyManagedRuleScope) SetComplianceResourceTypes(v []*string) *GetManagedRuleResponseBodyManagedRuleScope {
	s.ComplianceResourceTypes = v
	return s
}

type GetManagedRuleResponseBodyManagedRuleSourceDetails struct {
	// The interval at which the rule is triggered. Valid values: Valid values:
	//
	// 	- One_Hour
	//
	// 	- Three_Hours
	//
	// 	- Six_Hours
	//
	// 	- Twelve_Hours
	//
	// 	- TwentyFour_Hours
	//
	// example:
	//
	// TwentyFour_Hours
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	MessageType *string `json:"MessageType,omitempty" xml:"MessageType,omitempty"`
}

func (s GetManagedRuleResponseBodyManagedRuleSourceDetails) String() string {
	return tea.Prettify(s)
}

func (s GetManagedRuleResponseBodyManagedRuleSourceDetails) GoString() string {
	return s.String()
}

func (s *GetManagedRuleResponseBodyManagedRuleSourceDetails) SetMaximumExecutionFrequency(v string) *GetManagedRuleResponseBodyManagedRuleSourceDetails {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *GetManagedRuleResponseBodyManagedRuleSourceDetails) SetMessageType(v string) *GetManagedRuleResponseBodyManagedRuleSourceDetails {
	s.MessageType = &v
	return s
}

type GetManagedRuleResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetManagedRuleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetManagedRuleResponse) String() string {
	return tea.Prettify(s)
}

func (s GetManagedRuleResponse) GoString() string {
	return s.String()
}

func (s *GetManagedRuleResponse) SetHeaders(v map[string]*string) *GetManagedRuleResponse {
	s.Headers = v
	return s
}

func (s *GetManagedRuleResponse) SetStatusCode(v int32) *GetManagedRuleResponse {
	s.StatusCode = &v
	return s
}

func (s *GetManagedRuleResponse) SetBody(v *GetManagedRuleResponseBody) *GetManagedRuleResponse {
	s.Body = v
	return s
}

type GetRemediationTemplateRequest struct {
	// The ID of the automatic remediation template.
	//
	// For more information about how to obtain the ID of a remediation template, see [Compliance library](https://help.aliyun.com/document_detail/2337741.html).
	//
	// if can be null:
	// true
	//
	// example:
	//
	// ACS-ALB-BulkyEnableDeletionProtection
	TemplateIdentifier *string `json:"TemplateIdentifier,omitempty" xml:"TemplateIdentifier,omitempty"`
}

func (s GetRemediationTemplateRequest) String() string {
	return tea.Prettify(s)
}

func (s GetRemediationTemplateRequest) GoString() string {
	return s.String()
}

func (s *GetRemediationTemplateRequest) SetTemplateIdentifier(v string) *GetRemediationTemplateRequest {
	s.TemplateIdentifier = &v
	return s
}

type GetRemediationTemplateResponseBody struct {
	// The information about the automatic remediation template.
	RemediationTemplates []*GetRemediationTemplateResponseBodyRemediationTemplates `json:"RemediationTemplates,omitempty" xml:"RemediationTemplates,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// E232FC35-BD40-51E3-B2EB-09416A234939
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetRemediationTemplateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetRemediationTemplateResponseBody) GoString() string {
	return s.String()
}

func (s *GetRemediationTemplateResponseBody) SetRemediationTemplates(v []*GetRemediationTemplateResponseBodyRemediationTemplates) *GetRemediationTemplateResponseBody {
	s.RemediationTemplates = v
	return s
}

func (s *GetRemediationTemplateResponseBody) SetRequestId(v string) *GetRemediationTemplateResponseBody {
	s.RequestId = &v
	return s
}

type GetRemediationTemplateResponseBodyRemediationTemplates struct {
	// The ID of the supported rule template.
	//
	// This parameter is required.
	//
	// example:
	//
	// alb-delete-protection-enabled
	ManagedRuleIdentifier *string `json:"ManagedRuleIdentifier,omitempty" xml:"ManagedRuleIdentifier,omitempty"`
	// The type of the automatic remediation template. The value is set to OOS.
	//
	// example:
	//
	// OOS
	RemediationType *string `json:"RemediationType,omitempty" xml:"RemediationType,omitempty"`
	// The parameters of the automatic remediation template.
	//
	// example:
	//
	// {\\"Parameters\\":{\\"regionId\\":{\\"AssociationProperty\\":\\"RegionId\\",\\"CreateDated\\":\\"2023-09-08T16:36:15\\",\\"Default\\":\\"{regionId}\\",\\"Description\\":{\\"en\\":\\"regionId\\",\\"zh-cn\\":\\"regionId\\"},\\"Id\\":538,\\"MaxKeyLength\\":\\"125\\",\\"MaxValueLength\\":\\"255\\",\\"ModifiedDate\\":\\"2023-09-08T16:36:15\\",\\"Name\\":\\"regionId\\",\\"Optional\\":1,\\"TemplateIdentifier\\":\\"ACS-ALB-BulkyEnableDeletionProtection\\",\\"Type\\":\\"String\\",\\"Version\\":\\"LASTEST\\"},\\"loadBalancerIds\\":{\\"CreateDated\\":\\"2023-09-08T16:36:16\\",\\"Default\\":\\"[\\\\\\"{resourceId}\\\\\\"]\\",\\"Description\\":{\\"en\\":\\"loadBalancerIds\\",\\"zh-cn\\":\\"loadBalancerIds\\"},\\"Id\\":539,\\"MaxKeyLength\\":\\"125\\",\\"MaxValueLength\\":\\"255\\",\\"ModifiedDate\\":\\"2023-09-08T16:36:16\\",\\"Name\\":\\"loadBalancerIds\\",\\"Optional\\":1,\\"TemplateIdentifier\\":\\"ACS-ALB-BulkyEnableDeletionProtection\\",\\"Type\\":\\"ARRAY\\",\\"Version\\":\\"LASTEST\\"}}}
	TemplateDefinition *string `json:"TemplateDefinition,omitempty" xml:"TemplateDefinition,omitempty"`
	// The description of the automatic remediation template.
	//
	// This parameter is required.
	//
	// example:
	//
	// 调用接口EnableDeletionProtection，开启ALB实例删除保护，请您知晓风险谨慎操作。
	TemplateDescription *string `json:"TemplateDescription,omitempty" xml:"TemplateDescription,omitempty"`
	// The ID of the automatic remediation template.
	//
	// example:
	//
	// ACS-ALB-BulkyEnableDeletionProtection
	TemplateIdentifier *string `json:"TemplateIdentifier,omitempty" xml:"TemplateIdentifier,omitempty"`
	// The name of the automatic remediation template.
	//
	// example:
	//
	// 开启ALB实例删除保护
	TemplateName *string `json:"TemplateName,omitempty" xml:"TemplateName,omitempty"`
}

func (s GetRemediationTemplateResponseBodyRemediationTemplates) String() string {
	return tea.Prettify(s)
}

func (s GetRemediationTemplateResponseBodyRemediationTemplates) GoString() string {
	return s.String()
}

func (s *GetRemediationTemplateResponseBodyRemediationTemplates) SetManagedRuleIdentifier(v string) *GetRemediationTemplateResponseBodyRemediationTemplates {
	s.ManagedRuleIdentifier = &v
	return s
}

func (s *GetRemediationTemplateResponseBodyRemediationTemplates) SetRemediationType(v string) *GetRemediationTemplateResponseBodyRemediationTemplates {
	s.RemediationType = &v
	return s
}

func (s *GetRemediationTemplateResponseBodyRemediationTemplates) SetTemplateDefinition(v string) *GetRemediationTemplateResponseBodyRemediationTemplates {
	s.TemplateDefinition = &v
	return s
}

func (s *GetRemediationTemplateResponseBodyRemediationTemplates) SetTemplateDescription(v string) *GetRemediationTemplateResponseBodyRemediationTemplates {
	s.TemplateDescription = &v
	return s
}

func (s *GetRemediationTemplateResponseBodyRemediationTemplates) SetTemplateIdentifier(v string) *GetRemediationTemplateResponseBodyRemediationTemplates {
	s.TemplateIdentifier = &v
	return s
}

func (s *GetRemediationTemplateResponseBodyRemediationTemplates) SetTemplateName(v string) *GetRemediationTemplateResponseBodyRemediationTemplates {
	s.TemplateName = &v
	return s
}

type GetRemediationTemplateResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetRemediationTemplateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetRemediationTemplateResponse) String() string {
	return tea.Prettify(s)
}

func (s GetRemediationTemplateResponse) GoString() string {
	return s.String()
}

func (s *GetRemediationTemplateResponse) SetHeaders(v map[string]*string) *GetRemediationTemplateResponse {
	s.Headers = v
	return s
}

func (s *GetRemediationTemplateResponse) SetStatusCode(v int32) *GetRemediationTemplateResponse {
	s.StatusCode = &v
	return s
}

func (s *GetRemediationTemplateResponse) SetBody(v *GetRemediationTemplateResponseBody) *GetRemediationTemplateResponse {
	s.Body = v
	return s
}

type GetResourceComplianceByConfigRuleRequest struct {
	// The compliance evaluation result. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The rule ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-d369626622af008e****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
}

func (s GetResourceComplianceByConfigRuleRequest) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceByConfigRuleRequest) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceByConfigRuleRequest) SetComplianceType(v string) *GetResourceComplianceByConfigRuleRequest {
	s.ComplianceType = &v
	return s
}

func (s *GetResourceComplianceByConfigRuleRequest) SetConfigRuleId(v string) *GetResourceComplianceByConfigRuleRequest {
	s.ConfigRuleId = &v
	return s
}

type GetResourceComplianceByConfigRuleResponseBody struct {
	// The compliance result.
	ComplianceResult *GetResourceComplianceByConfigRuleResponseBodyComplianceResult `json:"ComplianceResult,omitempty" xml:"ComplianceResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 23306AB1-34E0-468F-BD7B-68D8AEAB753d
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetResourceComplianceByConfigRuleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceByConfigRuleResponseBody) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceByConfigRuleResponseBody) SetComplianceResult(v *GetResourceComplianceByConfigRuleResponseBodyComplianceResult) *GetResourceComplianceByConfigRuleResponseBody {
	s.ComplianceResult = v
	return s
}

func (s *GetResourceComplianceByConfigRuleResponseBody) SetRequestId(v string) *GetResourceComplianceByConfigRuleResponseBody {
	s.RequestId = &v
	return s
}

type GetResourceComplianceByConfigRuleResponseBodyComplianceResult struct {
	// The compliance evaluation results based on compliance types.
	Compliances []*GetResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances `json:"Compliances,omitempty" xml:"Compliances,omitempty" type:"Repeated"`
	// The total number of evaluated resources.
	//
	// example:
	//
	// 10
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetResourceComplianceByConfigRuleResponseBodyComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceByConfigRuleResponseBodyComplianceResult) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceByConfigRuleResponseBodyComplianceResult) SetCompliances(v []*GetResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances) *GetResourceComplianceByConfigRuleResponseBodyComplianceResult {
	s.Compliances = v
	return s
}

func (s *GetResourceComplianceByConfigRuleResponseBodyComplianceResult) SetTotalCount(v int64) *GetResourceComplianceByConfigRuleResponseBodyComplianceResult {
	s.TotalCount = &v
	return s
}

type GetResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances struct {
	// The compliance evaluation results of the resources. Valid values:
	//
	// 	- COMPLIANT: The resource was evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource was evaluated as incompliant.
	//
	// 	- NOT_APPLICABLE: The rule did not apply to your resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data was available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The number of resources that have compliance evaluation results. For example, if the value of the `ComplianceType` parameter is `COMPLIANT`, this parameter value indicates the number of compliant resources.
	//
	// example:
	//
	// 5
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
}

func (s GetResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances) SetComplianceType(v string) *GetResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances {
	s.ComplianceType = &v
	return s
}

func (s *GetResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances) SetCount(v int32) *GetResourceComplianceByConfigRuleResponseBodyComplianceResultCompliances {
	s.Count = &v
	return s
}

type GetResourceComplianceByConfigRuleResponse struct {
	Headers    map[string]*string                             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetResourceComplianceByConfigRuleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetResourceComplianceByConfigRuleResponse) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceByConfigRuleResponse) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceByConfigRuleResponse) SetHeaders(v map[string]*string) *GetResourceComplianceByConfigRuleResponse {
	s.Headers = v
	return s
}

func (s *GetResourceComplianceByConfigRuleResponse) SetStatusCode(v int32) *GetResourceComplianceByConfigRuleResponse {
	s.StatusCode = &v
	return s
}

func (s *GetResourceComplianceByConfigRuleResponse) SetBody(v *GetResourceComplianceByConfigRuleResponseBody) *GetResourceComplianceByConfigRuleResponse {
	s.Body = v
	return s
}

type GetResourceComplianceByPackRequest struct {
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
}

func (s GetResourceComplianceByPackRequest) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceByPackRequest) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceByPackRequest) SetCompliancePackId(v string) *GetResourceComplianceByPackRequest {
	s.CompliancePackId = &v
	return s
}

type GetResourceComplianceByPackResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The compliance evaluation results returned.
	ResourceComplianceResult *GetResourceComplianceByPackResponseBodyResourceComplianceResult `json:"ResourceComplianceResult,omitempty" xml:"ResourceComplianceResult,omitempty" type:"Struct"`
}

func (s GetResourceComplianceByPackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceByPackResponseBody) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceByPackResponseBody) SetRequestId(v string) *GetResourceComplianceByPackResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetResourceComplianceByPackResponseBody) SetResourceComplianceResult(v *GetResourceComplianceByPackResponseBodyResourceComplianceResult) *GetResourceComplianceByPackResponseBody {
	s.ResourceComplianceResult = v
	return s
}

type GetResourceComplianceByPackResponseBodyResourceComplianceResult struct {
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-541e626622af0087****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The number of non-compliant resources.
	//
	// example:
	//
	// 7
	NonCompliantCount *int32 `json:"NonCompliantCount,omitempty" xml:"NonCompliantCount,omitempty"`
	// The total number of resources.
	//
	// example:
	//
	// 10
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s GetResourceComplianceByPackResponseBodyResourceComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceByPackResponseBodyResourceComplianceResult) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceByPackResponseBodyResourceComplianceResult) SetCompliancePackId(v string) *GetResourceComplianceByPackResponseBodyResourceComplianceResult {
	s.CompliancePackId = &v
	return s
}

func (s *GetResourceComplianceByPackResponseBodyResourceComplianceResult) SetNonCompliantCount(v int32) *GetResourceComplianceByPackResponseBodyResourceComplianceResult {
	s.NonCompliantCount = &v
	return s
}

func (s *GetResourceComplianceByPackResponseBodyResourceComplianceResult) SetTotalCount(v int32) *GetResourceComplianceByPackResponseBodyResourceComplianceResult {
	s.TotalCount = &v
	return s
}

type GetResourceComplianceByPackResponse struct {
	Headers    map[string]*string                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetResourceComplianceByPackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetResourceComplianceByPackResponse) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceByPackResponse) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceByPackResponse) SetHeaders(v map[string]*string) *GetResourceComplianceByPackResponse {
	s.Headers = v
	return s
}

func (s *GetResourceComplianceByPackResponse) SetStatusCode(v int32) *GetResourceComplianceByPackResponse {
	s.StatusCode = &v
	return s
}

func (s *GetResourceComplianceByPackResponse) SetBody(v *GetResourceComplianceByPackResponseBody) *GetResourceComplianceByPackResponse {
	s.Body = v
	return s
}

type GetResourceComplianceGroupByRegionRequest struct {
	// The rule IDs. Separate multiple rule IDs with commas (,).
	//
	// example:
	//
	// cr-2541626622af0000****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s GetResourceComplianceGroupByRegionRequest) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByRegionRequest) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByRegionRequest) SetConfigRuleIds(v string) *GetResourceComplianceGroupByRegionRequest {
	s.ConfigRuleIds = &v
	return s
}

type GetResourceComplianceGroupByRegionResponseBody struct {
	// The queried evaluation results.
	ComplianceResult *GetResourceComplianceGroupByRegionResponseBodyComplianceResult `json:"ComplianceResult,omitempty" xml:"ComplianceResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 0FDF8006-34A0-5334-8C79-48F64EAB34F1
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetResourceComplianceGroupByRegionResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByRegionResponseBody) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByRegionResponseBody) SetComplianceResult(v *GetResourceComplianceGroupByRegionResponseBodyComplianceResult) *GetResourceComplianceGroupByRegionResponseBody {
	s.ComplianceResult = v
	return s
}

func (s *GetResourceComplianceGroupByRegionResponseBody) SetRequestId(v string) *GetResourceComplianceGroupByRegionResponseBody {
	s.RequestId = &v
	return s
}

type GetResourceComplianceGroupByRegionResponseBodyComplianceResult struct {
	// The evaluation results grouped by region.
	ComplianceResultList []*GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList `json:"ComplianceResultList,omitempty" xml:"ComplianceResultList,omitempty" type:"Repeated"`
}

func (s GetResourceComplianceGroupByRegionResponseBodyComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByRegionResponseBodyComplianceResult) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByRegionResponseBodyComplianceResult) SetComplianceResultList(v []*GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList) *GetResourceComplianceGroupByRegionResponseBodyComplianceResult {
	s.ComplianceResultList = v
	return s
}

type GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList struct {
	// The queried evaluation results.
	Compliances []*GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances `json:"Compliances,omitempty" xml:"Compliances,omitempty" type:"Repeated"`
	// The region ID of the evaluated resource.
	//
	// example:
	//
	// cn-beijing
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList) SetCompliances(v []*GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances) *GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList {
	s.Compliances = v
	return s
}

func (s *GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList) SetRegionId(v string) *GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultList {
	s.RegionId = &v
	return s
}

type GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances struct {
	// The evaluation result. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The total number of evaluation results.
	//
	// example:
	//
	// 1
	Count *int64 `json:"Count,omitempty" xml:"Count,omitempty"`
}

func (s GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances) SetComplianceType(v string) *GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances {
	s.ComplianceType = &v
	return s
}

func (s *GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances) SetCount(v int64) *GetResourceComplianceGroupByRegionResponseBodyComplianceResultComplianceResultListCompliances {
	s.Count = &v
	return s
}

type GetResourceComplianceGroupByRegionResponse struct {
	Headers    map[string]*string                              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetResourceComplianceGroupByRegionResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetResourceComplianceGroupByRegionResponse) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByRegionResponse) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByRegionResponse) SetHeaders(v map[string]*string) *GetResourceComplianceGroupByRegionResponse {
	s.Headers = v
	return s
}

func (s *GetResourceComplianceGroupByRegionResponse) SetStatusCode(v int32) *GetResourceComplianceGroupByRegionResponse {
	s.StatusCode = &v
	return s
}

func (s *GetResourceComplianceGroupByRegionResponse) SetBody(v *GetResourceComplianceGroupByRegionResponseBody) *GetResourceComplianceGroupByRegionResponse {
	s.Body = v
	return s
}

type GetResourceComplianceGroupByResourceTypeRequest struct {
	// The rule IDs. Separate multiple rule IDs with commas (,).
	//
	// example:
	//
	// cr-a5c6626622af0058****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s GetResourceComplianceGroupByResourceTypeRequest) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByResourceTypeRequest) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByResourceTypeRequest) SetConfigRuleIds(v string) *GetResourceComplianceGroupByResourceTypeRequest {
	s.ConfigRuleIds = &v
	return s
}

type GetResourceComplianceGroupByResourceTypeResponseBody struct {
	// The queried evaluation results.
	ComplianceResult *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResult `json:"ComplianceResult,omitempty" xml:"ComplianceResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 84610B68-2DD3-5AF0-B68D-E1FA8F051F7D
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetResourceComplianceGroupByResourceTypeResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByResourceTypeResponseBody) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByResourceTypeResponseBody) SetComplianceResult(v *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResult) *GetResourceComplianceGroupByResourceTypeResponseBody {
	s.ComplianceResult = v
	return s
}

func (s *GetResourceComplianceGroupByResourceTypeResponseBody) SetRequestId(v string) *GetResourceComplianceGroupByResourceTypeResponseBody {
	s.RequestId = &v
	return s
}

type GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResult struct {
	// The evaluation results grouped by resource type.
	ComplianceResultList []*GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList `json:"ComplianceResultList,omitempty" xml:"ComplianceResultList,omitempty" type:"Repeated"`
}

func (s GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResult) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResult) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResult) SetComplianceResultList(v []*GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList) *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResult {
	s.ComplianceResultList = v
	return s
}

type GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList struct {
	// The queried evaluation results.
	Compliances []*GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances `json:"Compliances,omitempty" xml:"Compliances,omitempty" type:"Repeated"`
	// The type of the evaluated resource.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList) SetCompliances(v []*GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances) *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList {
	s.Compliances = v
	return s
}

func (s *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList) SetResourceType(v string) *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultList {
	s.ResourceType = &v
	return s
}

type GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances struct {
	// The evaluation result. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resource.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The total number of evaluation results.
	//
	// example:
	//
	// 1
	Count *int64 `json:"Count,omitempty" xml:"Count,omitempty"`
}

func (s GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances) SetComplianceType(v string) *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances {
	s.ComplianceType = &v
	return s
}

func (s *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances) SetCount(v int64) *GetResourceComplianceGroupByResourceTypeResponseBodyComplianceResultComplianceResultListCompliances {
	s.Count = &v
	return s
}

type GetResourceComplianceGroupByResourceTypeResponse struct {
	Headers    map[string]*string                                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetResourceComplianceGroupByResourceTypeResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetResourceComplianceGroupByResourceTypeResponse) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceGroupByResourceTypeResponse) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceGroupByResourceTypeResponse) SetHeaders(v map[string]*string) *GetResourceComplianceGroupByResourceTypeResponse {
	s.Headers = v
	return s
}

func (s *GetResourceComplianceGroupByResourceTypeResponse) SetStatusCode(v int32) *GetResourceComplianceGroupByResourceTypeResponse {
	s.StatusCode = &v
	return s
}

func (s *GetResourceComplianceGroupByResourceTypeResponse) SetBody(v *GetResourceComplianceGroupByResourceTypeResponseBody) *GetResourceComplianceGroupByResourceTypeResponse {
	s.Body = v
	return s
}

type GetResourceComplianceTimelineRequest struct {
	// The timestamp that specifies the end of the time range to query. The default value is the time when the GetResourceComplianceTimeline operation is called. Unit: milliseconds.
	//
	// example:
	//
	// 1625821156000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The maximum number of entries to return for a single request. Valid values: 1 to 100.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The token that is used to initiate the next request. If the response of the current request is truncated, this token is used to initiate another request and obtain the remaining entries.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region where the resource resides.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the resource.
	//
	// For more information about how to obtain the ID of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource.
	//
	// For more information about how to obtain the type of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The timestamp that specifies the beginning of the time range to query. By default, Cloud Config retrieves the compliance evaluations in the last 30 days for the specified resource. Unit: milliseconds.
	//
	// example:
	//
	// 1623211156000
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s GetResourceComplianceTimelineRequest) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceTimelineRequest) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceTimelineRequest) SetEndTime(v int64) *GetResourceComplianceTimelineRequest {
	s.EndTime = &v
	return s
}

func (s *GetResourceComplianceTimelineRequest) SetMaxResults(v int32) *GetResourceComplianceTimelineRequest {
	s.MaxResults = &v
	return s
}

func (s *GetResourceComplianceTimelineRequest) SetNextToken(v string) *GetResourceComplianceTimelineRequest {
	s.NextToken = &v
	return s
}

func (s *GetResourceComplianceTimelineRequest) SetRegion(v string) *GetResourceComplianceTimelineRequest {
	s.Region = &v
	return s
}

func (s *GetResourceComplianceTimelineRequest) SetResourceId(v string) *GetResourceComplianceTimelineRequest {
	s.ResourceId = &v
	return s
}

func (s *GetResourceComplianceTimelineRequest) SetResourceType(v string) *GetResourceComplianceTimelineRequest {
	s.ResourceType = &v
	return s
}

func (s *GetResourceComplianceTimelineRequest) SetStartTime(v int64) *GetResourceComplianceTimelineRequest {
	s.StartTime = &v
	return s
}

type GetResourceComplianceTimelineResponseBody struct {
	// The ID of the request.
	//
	// example:
	//
	// 8D53A78F-1EB8-4264-A554-72F07E34FAE6
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The information about the compliance timeline.
	ResourceComplianceTimeline *GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline `json:"ResourceComplianceTimeline,omitempty" xml:"ResourceComplianceTimeline,omitempty" type:"Struct"`
}

func (s GetResourceComplianceTimelineResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceTimelineResponseBody) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceTimelineResponseBody) SetRequestId(v string) *GetResourceComplianceTimelineResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBody) SetResourceComplianceTimeline(v *GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline) *GetResourceComplianceTimelineResponseBody {
	s.ResourceComplianceTimeline = v
	return s
}

type GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline struct {
	// The compliance evaluation records on the compliance timeline.
	ComplianceList []*GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList `json:"ComplianceList,omitempty" xml:"ComplianceList,omitempty" type:"Repeated"`
	// The maximum number of entries that can be returned for a single request.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The token that is used to initiate the next request.
	//
	// example:
	//
	// 5OVS5J4I1/UKTkHV5oNs****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline) SetComplianceList(v []*GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline {
	s.ComplianceList = v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline) SetMaxResults(v int32) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline {
	s.MaxResults = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline) SetNextToken(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimeline {
	s.NextToken = &v
	return s
}

type GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList struct {
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *string `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the zone in which the resource resides.
	//
	// example:
	//
	// cn-hangzhou-f
	AvailabilityZone *string `json:"AvailabilityZone,omitempty" xml:"AvailabilityZone,omitempty"`
	// The timestamp when the compliance evaluation was recorded. Unit: milliseconds.
	//
	// example:
	//
	// 1625200295276
	CaptureTime *int64 `json:"CaptureTime,omitempty" xml:"CaptureTime,omitempty"`
	// The rules associated with the resource and the compliance details of the rules.
	//
	// example:
	//
	// {\\"Compliance\\":{\\"complianceType\\":\\"COMPLIANT\\",\\"count\\":1},\\"ConfigRuleList\\":[{\\"accountId\\":100931896542****,\\"configRuleId\\":\\"cr-9524626622af003d****\\",\\"configRuleArn\\":\\"acs:config::100931896542****:rule/cr-9524626622af003d****\\",\\"configRuleName\\":\\"test-rule-name\\",\\"complianceType\\":\\"COMPLIANT\\",\\"riskLevel\\":1,\\"annotation\\":\\"\\",\\"invokingEventMessageType\\":\\"ScheduledNotification\\"}]}
	Configuration *string `json:"Configuration,omitempty" xml:"Configuration,omitempty"`
	// The details of the resource changes that trigger the compliance evaluation.
	//
	// example:
	//
	// {\\"test-rule-name\\":[{\\"accountId\\":100931896542****,\\"configRuleId\\":\\"cr-965f626622af003d****\\",\\"configRuleArn\\":\\"acs:config::100931896542****:rule/cr-965f626622af003d****\\",\\"configRuleName\\":\\"test-rule-name\\",\\"complianceType\\":\\"COMPLIANT\\",\\"riskLevel\\":1,\\"annotation\\":\\"\\",\\"invokingEventMessageType\\":\\"ScheduledNotification\\"},{}]}
	ConfigurationDiff *string `json:"ConfigurationDiff,omitempty" xml:"ConfigurationDiff,omitempty"`
	// The region ID.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The time when the resource was created. Unit: milliseconds.
	//
	// example:
	//
	// 1624961112000
	ResourceCreateTime *int64 `json:"ResourceCreateTime,omitempty" xml:"ResourceCreateTime,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource name.
	//
	// example:
	//
	// new-bucket
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The status of the resource. The parameter value varies based on the resource type and may be left empty. Examples:
	//
	// 	- If the ResourceType parameter is set to ACS::ECS::Instance, the resource is an Elastic Compute Service (ECS) instance that has a specific state. In this case, the valid values of this parameter are Running and Stopped.
	//
	// 	- If the ResourceType parameter is ACS::OSS::Bucket, the resource is an Object Storage Service (OSS) bucket that is not in a specific state. In this case, this parameter is left empty.
	//
	// example:
	//
	// Running
	ResourceStatus *string `json:"ResourceStatus,omitempty" xml:"ResourceStatus,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	//
	// example:
	//
	// {\\"\\"hc\\"\\":[\\"\\"value2\\"\\"]}
	Tags *string `json:"Tags,omitempty" xml:"Tags,omitempty"`
}

func (s GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetAccountId(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.AccountId = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetAvailabilityZone(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.AvailabilityZone = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetCaptureTime(v int64) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.CaptureTime = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetConfiguration(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.Configuration = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetConfigurationDiff(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ConfigurationDiff = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetRegion(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.Region = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetResourceCreateTime(v int64) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ResourceCreateTime = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetResourceId(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ResourceId = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetResourceName(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ResourceName = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetResourceStatus(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ResourceStatus = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetResourceType(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.ResourceType = &v
	return s
}

func (s *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList) SetTags(v string) *GetResourceComplianceTimelineResponseBodyResourceComplianceTimelineComplianceList {
	s.Tags = &v
	return s
}

type GetResourceComplianceTimelineResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetResourceComplianceTimelineResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetResourceComplianceTimelineResponse) String() string {
	return tea.Prettify(s)
}

func (s GetResourceComplianceTimelineResponse) GoString() string {
	return s.String()
}

func (s *GetResourceComplianceTimelineResponse) SetHeaders(v map[string]*string) *GetResourceComplianceTimelineResponse {
	s.Headers = v
	return s
}

func (s *GetResourceComplianceTimelineResponse) SetStatusCode(v int32) *GetResourceComplianceTimelineResponse {
	s.StatusCode = &v
	return s
}

func (s *GetResourceComplianceTimelineResponse) SetBody(v *GetResourceComplianceTimelineResponseBody) *GetResourceComplianceTimelineResponse {
	s.Body = v
	return s
}

type GetResourceConfigurationTimelineRequest struct {
	// The end of the time range to query. The default value indicates the time when the GetResourceConfigurationTimeline operation is called. Unit: milliseconds.
	//
	// example:
	//
	// 1625821156000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The maximum number of entries to return for a single request. Valid values: 1 to 100.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of `NextToken`.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The resource IDs.
	//
	// For more information about how to query the ID of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource type.
	//
	// For more information about how to obtain the type of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The beginning of the time range to query. By default, Cloud Config retrieves the configuration changes in the last 30 days for the specified resource. Unit: milliseconds.
	//
	// example:
	//
	// 1623211156000
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s GetResourceConfigurationTimelineRequest) String() string {
	return tea.Prettify(s)
}

func (s GetResourceConfigurationTimelineRequest) GoString() string {
	return s.String()
}

func (s *GetResourceConfigurationTimelineRequest) SetEndTime(v int64) *GetResourceConfigurationTimelineRequest {
	s.EndTime = &v
	return s
}

func (s *GetResourceConfigurationTimelineRequest) SetMaxResults(v int32) *GetResourceConfigurationTimelineRequest {
	s.MaxResults = &v
	return s
}

func (s *GetResourceConfigurationTimelineRequest) SetNextToken(v string) *GetResourceConfigurationTimelineRequest {
	s.NextToken = &v
	return s
}

func (s *GetResourceConfigurationTimelineRequest) SetRegion(v string) *GetResourceConfigurationTimelineRequest {
	s.Region = &v
	return s
}

func (s *GetResourceConfigurationTimelineRequest) SetResourceId(v string) *GetResourceConfigurationTimelineRequest {
	s.ResourceId = &v
	return s
}

func (s *GetResourceConfigurationTimelineRequest) SetResourceType(v string) *GetResourceConfigurationTimelineRequest {
	s.ResourceType = &v
	return s
}

func (s *GetResourceConfigurationTimelineRequest) SetStartTime(v int64) *GetResourceConfigurationTimelineRequest {
	s.StartTime = &v
	return s
}

type GetResourceConfigurationTimelineResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// ED9CD1B3-286C-4E05-A765-5E1E0B9BC2AB
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The configuration timeline of the resource.
	ResourceConfigurationTimeline *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline `json:"ResourceConfigurationTimeline,omitempty" xml:"ResourceConfigurationTimeline,omitempty" type:"Struct"`
}

func (s GetResourceConfigurationTimelineResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetResourceConfigurationTimelineResponseBody) GoString() string {
	return s.String()
}

func (s *GetResourceConfigurationTimelineResponseBody) SetRequestId(v string) *GetResourceConfigurationTimelineResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBody) SetResourceConfigurationTimeline(v *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) *GetResourceConfigurationTimelineResponseBody {
	s.ResourceConfigurationTimeline = v
	return s
}

type GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline struct {
	// The configuration changes on the configuration timeline.
	ConfigurationList []*GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList `json:"ConfigurationList,omitempty" xml:"ConfigurationList,omitempty" type:"Repeated"`
	// The maximum number of entries returned for a single request.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token. It can be used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) String() string {
	return tea.Prettify(s)
}

func (s GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) GoString() string {
	return s.String()
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) SetConfigurationList(v []*GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline {
	s.ConfigurationList = v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) SetMaxResults(v int32) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline {
	s.MaxResults = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline) SetNextToken(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimeline {
	s.NextToken = &v
	return s
}

type GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList struct {
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The zone ID.
	//
	// example:
	//
	// cn-hangzhou-h
	AvailabilityZone *string `json:"AvailabilityZone,omitempty" xml:"AvailabilityZone,omitempty"`
	// The time when the resource change snapshot was recorded. Unit: milliseconds.
	//
	// example:
	//
	// 1624961156000
	CaptureTime *string `json:"CaptureTime,omitempty" xml:"CaptureTime,omitempty"`
	// The details of the resource changes that trigger the compliance evaluation.
	//
	// example:
	//
	// {\\"AccessControlList\\":[null,{\\"Grant\\":\\"private\\"}],\\"ServerSideEncryptionRule\\":[null,{\\"SSEAlgorithm\\":\\"None\\"}],\\"CreationDate\\":[null,\\"2021-06-29T10:05:12.000Z\\"],\\"Owner\\":[null,{\\"DisplayName\\":\\"100931896542****\\",\\"ID\\":\\"100931896542****\\"}],\\"BucketPolicy\\":[null,{\\"LogPrefix\\":\\"\\",\\"LogBucket\\":\\"\\"}],\\"StorageClass\\":[null,\\"Standard\\"],\\"ExtranetEndpoint\\":[null,\\"oss-cn-hangzhou.aliyuncs.com\\"],\\"DataRedundancyType\\":[null,\\"LRS\\"],\\"AllowEmptyReferer\\":[null,\\"true\\"],\\"IntranetEndpoint\\":[null,\\"oss-cn-hangzhou-internal.aliyuncs.com\\"],\\"Name\\":[null,\\"new-bucket\\"],\\"Location\\":[null,\\"oss-cn-hangzhou\\"]}
	ConfigurationDiff *string `json:"ConfigurationDiff,omitempty" xml:"ConfigurationDiff,omitempty"`
	// The region ID.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The details of each resource that is associated with the current resource, including the region ID, resource relationship, resource ID, and resource type.
	//
	// example:
	//
	// ""
	Relationship *string `json:"Relationship,omitempty" xml:"Relationship,omitempty"`
	// The change records of the resource relationship.
	//
	// example:
	//
	// ""
	RelationshipDiff *string `json:"RelationshipDiff,omitempty" xml:"RelationshipDiff,omitempty"`
	// The time when the resource was created. Unit: milliseconds.
	//
	// example:
	//
	// 1624961112000
	ResourceCreateTime *string `json:"ResourceCreateTime,omitempty" xml:"ResourceCreateTime,omitempty"`
	// The type of the resource change event. Valid values:
	//
	// 	- DISCOVERED: A resource is created.
	//
	// 	- DISCOVERED_REVISED: A resource is created by periodic remediation tasks.
	//
	// 	- MODIFY: A resource is modified.
	//
	// 	- MODIFY_REVISED: A resource is modified by periodic remediation tasks.
	//
	// 	- REMOVE: A resource is deleted.
	//
	// >
	//
	// 	- To ensure the integrity of resources, periodic remediation tasks are run to check data and generate events that indicate the creation of new resources. Such events are infrequent.
	//
	// 	- The time when a resource change event is generated by a periodic remediation task is considered as the detection time of Cloud Config. The detection time is later than the time when the resource is modified.
	//
	// example:
	//
	// DISCOVERED
	ResourceEventType *string `json:"ResourceEventType,omitempty" xml:"ResourceEventType,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// new-bucket
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource name.
	//
	// example:
	//
	// new-bucket
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The resource type.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	//
	// example:
	//
	// {\\"\\"hc\\"\\":[\\"\\"value2\\"\\"]}
	Tags *string `json:"Tags,omitempty" xml:"Tags,omitempty"`
}

func (s GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) String() string {
	return tea.Prettify(s)
}

func (s GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) GoString() string {
	return s.String()
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetAccountId(v int64) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.AccountId = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetAvailabilityZone(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.AvailabilityZone = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetCaptureTime(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.CaptureTime = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetConfigurationDiff(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ConfigurationDiff = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetRegion(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.Region = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetRelationship(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.Relationship = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetRelationshipDiff(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.RelationshipDiff = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetResourceCreateTime(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ResourceCreateTime = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetResourceEventType(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ResourceEventType = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetResourceId(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ResourceId = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetResourceName(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ResourceName = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetResourceType(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.ResourceType = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList) SetTags(v string) *GetResourceConfigurationTimelineResponseBodyResourceConfigurationTimelineConfigurationList {
	s.Tags = &v
	return s
}

type GetResourceConfigurationTimelineResponse struct {
	Headers    map[string]*string                            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetResourceConfigurationTimelineResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetResourceConfigurationTimelineResponse) String() string {
	return tea.Prettify(s)
}

func (s GetResourceConfigurationTimelineResponse) GoString() string {
	return s.String()
}

func (s *GetResourceConfigurationTimelineResponse) SetHeaders(v map[string]*string) *GetResourceConfigurationTimelineResponse {
	s.Headers = v
	return s
}

func (s *GetResourceConfigurationTimelineResponse) SetStatusCode(v int32) *GetResourceConfigurationTimelineResponse {
	s.StatusCode = &v
	return s
}

func (s *GetResourceConfigurationTimelineResponse) SetBody(v *GetResourceConfigurationTimelineResponseBody) *GetResourceConfigurationTimelineResponse {
	s.Body = v
	return s
}

type GetResourceInventoryResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 89E2F38F-4EE4-545A-BD56-92E007ECFEE9
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The information about the resource inventory.
	ResourceInventory *GetResourceInventoryResponseBodyResourceInventory `json:"ResourceInventory,omitempty" xml:"ResourceInventory,omitempty" type:"Struct"`
}

func (s GetResourceInventoryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetResourceInventoryResponseBody) GoString() string {
	return s.String()
}

func (s *GetResourceInventoryResponseBody) SetRequestId(v string) *GetResourceInventoryResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetResourceInventoryResponseBody) SetResourceInventory(v *GetResourceInventoryResponseBodyResourceInventory) *GetResourceInventoryResponseBody {
	s.ResourceInventory = v
	return s
}

type GetResourceInventoryResponseBodyResourceInventory struct {
	// The download URL of the resource inventory.
	DownloadUrl *string `json:"DownloadUrl,omitempty" xml:"DownloadUrl,omitempty"`
	// The time when the resource inventory was generated. The value is a timestamp.
	//
	// example:
	//
	// 1687674634220
	ResourceInventoryGenerateTime *int64 `json:"ResourceInventoryGenerateTime,omitempty" xml:"ResourceInventoryGenerateTime,omitempty"`
	// The generation status of the resource inventory. Valid values:
	//
	// 	- CREATING: The resource inventory is being generated.
	//
	// 	- COMPLETE: The resource inventory is generated.
	//
	// example:
	//
	// COMPLETE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s GetResourceInventoryResponseBodyResourceInventory) String() string {
	return tea.Prettify(s)
}

func (s GetResourceInventoryResponseBodyResourceInventory) GoString() string {
	return s.String()
}

func (s *GetResourceInventoryResponseBodyResourceInventory) SetDownloadUrl(v string) *GetResourceInventoryResponseBodyResourceInventory {
	s.DownloadUrl = &v
	return s
}

func (s *GetResourceInventoryResponseBodyResourceInventory) SetResourceInventoryGenerateTime(v int64) *GetResourceInventoryResponseBodyResourceInventory {
	s.ResourceInventoryGenerateTime = &v
	return s
}

func (s *GetResourceInventoryResponseBodyResourceInventory) SetStatus(v string) *GetResourceInventoryResponseBodyResourceInventory {
	s.Status = &v
	return s
}

type GetResourceInventoryResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetResourceInventoryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetResourceInventoryResponse) String() string {
	return tea.Prettify(s)
}

func (s GetResourceInventoryResponse) GoString() string {
	return s.String()
}

func (s *GetResourceInventoryResponse) SetHeaders(v map[string]*string) *GetResourceInventoryResponse {
	s.Headers = v
	return s
}

func (s *GetResourceInventoryResponse) SetStatusCode(v int32) *GetResourceInventoryResponse {
	s.StatusCode = &v
	return s
}

func (s *GetResourceInventoryResponse) SetBody(v *GetResourceInventoryResponseBody) *GetResourceInventoryResponse {
	s.Body = v
	return s
}

type GetSupportedResourceRelationConfigRequest struct {
	// The resource type.
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s GetSupportedResourceRelationConfigRequest) String() string {
	return tea.Prettify(s)
}

func (s GetSupportedResourceRelationConfigRequest) GoString() string {
	return s.String()
}

func (s *GetSupportedResourceRelationConfigRequest) SetResourceType(v string) *GetSupportedResourceRelationConfigRequest {
	s.ResourceType = &v
	return s
}

type GetSupportedResourceRelationConfigResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 409D022F-394C-5AAB-A74A-2F1DC9F6375E
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// An array that contains the relationships.
	ResourceRelationConfigList []*GetSupportedResourceRelationConfigResponseBodyResourceRelationConfigList `json:"ResourceRelationConfigList,omitempty" xml:"ResourceRelationConfigList,omitempty" type:"Repeated"`
}

func (s GetSupportedResourceRelationConfigResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetSupportedResourceRelationConfigResponseBody) GoString() string {
	return s.String()
}

func (s *GetSupportedResourceRelationConfigResponseBody) SetRequestId(v string) *GetSupportedResourceRelationConfigResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetSupportedResourceRelationConfigResponseBody) SetResourceRelationConfigList(v []*GetSupportedResourceRelationConfigResponseBodyResourceRelationConfigList) *GetSupportedResourceRelationConfigResponseBody {
	s.ResourceRelationConfigList = v
	return s
}

type GetSupportedResourceRelationConfigResponseBodyResourceRelationConfigList struct {
	// The type of the relationship between the resource and the object. Valid values:
	//
	// 	- IsContained: The object is included as part of the resource.
	//
	// 	- IsAttachedTo: The object is added to the resource.
	//
	// 	- IsAssociatedIn: The object is associated with the resource.
	//
	// 	- Contains: The actual value contains the expected value.
	//
	// example:
	//
	// IsAttachedTo
	RelationType *string `json:"RelationType,omitempty" xml:"RelationType,omitempty"`
	// The resource type.
	//
	// example:
	//
	// ACS::ECS::Disk
	TargetResourceType *string `json:"TargetResourceType,omitempty" xml:"TargetResourceType,omitempty"`
}

func (s GetSupportedResourceRelationConfigResponseBodyResourceRelationConfigList) String() string {
	return tea.Prettify(s)
}

func (s GetSupportedResourceRelationConfigResponseBodyResourceRelationConfigList) GoString() string {
	return s.String()
}

func (s *GetSupportedResourceRelationConfigResponseBodyResourceRelationConfigList) SetRelationType(v string) *GetSupportedResourceRelationConfigResponseBodyResourceRelationConfigList {
	s.RelationType = &v
	return s
}

func (s *GetSupportedResourceRelationConfigResponseBodyResourceRelationConfigList) SetTargetResourceType(v string) *GetSupportedResourceRelationConfigResponseBodyResourceRelationConfigList {
	s.TargetResourceType = &v
	return s
}

type GetSupportedResourceRelationConfigResponse struct {
	Headers    map[string]*string                              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetSupportedResourceRelationConfigResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetSupportedResourceRelationConfigResponse) String() string {
	return tea.Prettify(s)
}

func (s GetSupportedResourceRelationConfigResponse) GoString() string {
	return s.String()
}

func (s *GetSupportedResourceRelationConfigResponse) SetHeaders(v map[string]*string) *GetSupportedResourceRelationConfigResponse {
	s.Headers = v
	return s
}

func (s *GetSupportedResourceRelationConfigResponse) SetStatusCode(v int32) *GetSupportedResourceRelationConfigResponse {
	s.StatusCode = &v
	return s
}

func (s *GetSupportedResourceRelationConfigResponse) SetBody(v *GetSupportedResourceRelationConfigResponseBody) *GetSupportedResourceRelationConfigResponse {
	s.Body = v
	return s
}

type IgnoreAggregateEvaluationResultsRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-5b6c626622af008f****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the rule.
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7e72626622af0051****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The date from which the system automatically re-evaluates the ignored incompliant resources.
	//
	// >  If you leave this parameter empty, the system does not automatically re-evaluate the ignored incompliant resources. You must manually re-evaluate the ignored incompliant resources.
	//
	// example:
	//
	// 2022-06-01
	IgnoreDate *string `json:"IgnoreDate,omitempty" xml:"IgnoreDate,omitempty"`
	// The reason why you ignore the resource.
	//
	// example:
	//
	// The reason why you ignore the resource.
	Reason *string `json:"Reason,omitempty" xml:"Reason,omitempty"`
	// The resources to be ignored.
	//
	// This parameter is required.
	Resources []*IgnoreAggregateEvaluationResultsRequestResources `json:"Resources,omitempty" xml:"Resources,omitempty" type:"Repeated"`
}

func (s IgnoreAggregateEvaluationResultsRequest) String() string {
	return tea.Prettify(s)
}

func (s IgnoreAggregateEvaluationResultsRequest) GoString() string {
	return s.String()
}

func (s *IgnoreAggregateEvaluationResultsRequest) SetAggregatorId(v string) *IgnoreAggregateEvaluationResultsRequest {
	s.AggregatorId = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsRequest) SetConfigRuleId(v string) *IgnoreAggregateEvaluationResultsRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsRequest) SetIgnoreDate(v string) *IgnoreAggregateEvaluationResultsRequest {
	s.IgnoreDate = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsRequest) SetReason(v string) *IgnoreAggregateEvaluationResultsRequest {
	s.Reason = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsRequest) SetResources(v []*IgnoreAggregateEvaluationResultsRequestResources) *IgnoreAggregateEvaluationResultsRequest {
	s.Resources = v
	return s
}

type IgnoreAggregateEvaluationResultsRequestResources struct {
	// The ID of the region in which the resource resides.
	//
	// For more information about how to obtain the ID of a region, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-beijing
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the Alibaba Cloud account to which the resources belong.
	//
	// >  You must specify the ID of the current management account or a member account in the account group of the management account.
	//
	// This parameter is required.
	//
	// example:
	//
	// 120886317861****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// The ID of the resource.
	//
	// For more information about how to query the ID of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// lb-hp3a3b4ztyfm2plgm****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource.
	//
	// For more information about how to query the type of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::SLB::LoadBalancer
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s IgnoreAggregateEvaluationResultsRequestResources) String() string {
	return tea.Prettify(s)
}

func (s IgnoreAggregateEvaluationResultsRequestResources) GoString() string {
	return s.String()
}

func (s *IgnoreAggregateEvaluationResultsRequestResources) SetRegion(v string) *IgnoreAggregateEvaluationResultsRequestResources {
	s.Region = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsRequestResources) SetResourceAccountId(v int64) *IgnoreAggregateEvaluationResultsRequestResources {
	s.ResourceAccountId = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsRequestResources) SetResourceId(v string) *IgnoreAggregateEvaluationResultsRequestResources {
	s.ResourceId = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsRequestResources) SetResourceType(v string) *IgnoreAggregateEvaluationResultsRequestResources {
	s.ResourceType = &v
	return s
}

type IgnoreAggregateEvaluationResultsShrinkRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-5b6c626622af008f****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the rule.
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7e72626622af0051****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The date from which the system automatically re-evaluates the ignored incompliant resources.
	//
	// >  If you leave this parameter empty, the system does not automatically re-evaluate the ignored incompliant resources. You must manually re-evaluate the ignored incompliant resources.
	//
	// example:
	//
	// 2022-06-01
	IgnoreDate *string `json:"IgnoreDate,omitempty" xml:"IgnoreDate,omitempty"`
	// The reason why you ignore the resource.
	//
	// example:
	//
	// The reason why you ignore the resource.
	Reason *string `json:"Reason,omitempty" xml:"Reason,omitempty"`
	// The resources to be ignored.
	//
	// This parameter is required.
	ResourcesShrink *string `json:"Resources,omitempty" xml:"Resources,omitempty"`
}

func (s IgnoreAggregateEvaluationResultsShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s IgnoreAggregateEvaluationResultsShrinkRequest) GoString() string {
	return s.String()
}

func (s *IgnoreAggregateEvaluationResultsShrinkRequest) SetAggregatorId(v string) *IgnoreAggregateEvaluationResultsShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsShrinkRequest) SetConfigRuleId(v string) *IgnoreAggregateEvaluationResultsShrinkRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsShrinkRequest) SetIgnoreDate(v string) *IgnoreAggregateEvaluationResultsShrinkRequest {
	s.IgnoreDate = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsShrinkRequest) SetReason(v string) *IgnoreAggregateEvaluationResultsShrinkRequest {
	s.Reason = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsShrinkRequest) SetResourcesShrink(v string) *IgnoreAggregateEvaluationResultsShrinkRequest {
	s.ResourcesShrink = &v
	return s
}

type IgnoreAggregateEvaluationResultsResponseBody struct {
	// The ID of the request.
	//
	// example:
	//
	// 0132CBF2-0B0B-59F2-9E84-07B38267BC32
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s IgnoreAggregateEvaluationResultsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IgnoreAggregateEvaluationResultsResponseBody) GoString() string {
	return s.String()
}

func (s *IgnoreAggregateEvaluationResultsResponseBody) SetRequestId(v string) *IgnoreAggregateEvaluationResultsResponseBody {
	s.RequestId = &v
	return s
}

type IgnoreAggregateEvaluationResultsResponse struct {
	Headers    map[string]*string                            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IgnoreAggregateEvaluationResultsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IgnoreAggregateEvaluationResultsResponse) String() string {
	return tea.Prettify(s)
}

func (s IgnoreAggregateEvaluationResultsResponse) GoString() string {
	return s.String()
}

func (s *IgnoreAggregateEvaluationResultsResponse) SetHeaders(v map[string]*string) *IgnoreAggregateEvaluationResultsResponse {
	s.Headers = v
	return s
}

func (s *IgnoreAggregateEvaluationResultsResponse) SetStatusCode(v int32) *IgnoreAggregateEvaluationResultsResponse {
	s.StatusCode = &v
	return s
}

func (s *IgnoreAggregateEvaluationResultsResponse) SetBody(v *IgnoreAggregateEvaluationResultsResponseBody) *IgnoreAggregateEvaluationResultsResponse {
	s.Body = v
	return s
}

type IgnoreEvaluationResultsRequest struct {
	// The ID of the rule.
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7e72626622af0051****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The date from which the system automatically re-evaluates the ignored incompliant resources.
	//
	// >  If you leave this parameter empty, the system does not automatically re-evaluate the ignored incompliant resources. You must manually re-evaluate the ignored incompliant resources.
	//
	// example:
	//
	// 2022-06-01
	IgnoreDate *string `json:"IgnoreDate,omitempty" xml:"IgnoreDate,omitempty"`
	// The reason why you want to ignore the resource.
	//
	// example:
	//
	// Test ignore.
	Reason *string `json:"Reason,omitempty" xml:"Reason,omitempty"`
	// The resources to be ignored.
	//
	// This parameter is required.
	Resources []*IgnoreEvaluationResultsRequestResources `json:"Resources,omitempty" xml:"Resources,omitempty" type:"Repeated"`
}

func (s IgnoreEvaluationResultsRequest) String() string {
	return tea.Prettify(s)
}

func (s IgnoreEvaluationResultsRequest) GoString() string {
	return s.String()
}

func (s *IgnoreEvaluationResultsRequest) SetConfigRuleId(v string) *IgnoreEvaluationResultsRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *IgnoreEvaluationResultsRequest) SetIgnoreDate(v string) *IgnoreEvaluationResultsRequest {
	s.IgnoreDate = &v
	return s
}

func (s *IgnoreEvaluationResultsRequest) SetReason(v string) *IgnoreEvaluationResultsRequest {
	s.Reason = &v
	return s
}

func (s *IgnoreEvaluationResultsRequest) SetResources(v []*IgnoreEvaluationResultsRequestResources) *IgnoreEvaluationResultsRequest {
	s.Resources = v
	return s
}

type IgnoreEvaluationResultsRequestResources struct {
	// The ID of the region in which the resource resides.
	//
	// For more information about how to obtain the ID of the region in which a resource resides, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-beijing
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the Alibaba Cloud account to which the resources belong.
	//
	// This parameter is required.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// The ID of the resource.
	//
	// For more information about how to obtain the ID of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// lb-hp3a3b4ztyfm2plgm****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource.
	//
	// For more information about how to obtain the type of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::SLB::LoadBalancer
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s IgnoreEvaluationResultsRequestResources) String() string {
	return tea.Prettify(s)
}

func (s IgnoreEvaluationResultsRequestResources) GoString() string {
	return s.String()
}

func (s *IgnoreEvaluationResultsRequestResources) SetRegion(v string) *IgnoreEvaluationResultsRequestResources {
	s.Region = &v
	return s
}

func (s *IgnoreEvaluationResultsRequestResources) SetResourceAccountId(v int64) *IgnoreEvaluationResultsRequestResources {
	s.ResourceAccountId = &v
	return s
}

func (s *IgnoreEvaluationResultsRequestResources) SetResourceId(v string) *IgnoreEvaluationResultsRequestResources {
	s.ResourceId = &v
	return s
}

func (s *IgnoreEvaluationResultsRequestResources) SetResourceType(v string) *IgnoreEvaluationResultsRequestResources {
	s.ResourceType = &v
	return s
}

type IgnoreEvaluationResultsShrinkRequest struct {
	// The ID of the rule.
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7e72626622af0051****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The date from which the system automatically re-evaluates the ignored incompliant resources.
	//
	// >  If you leave this parameter empty, the system does not automatically re-evaluate the ignored incompliant resources. You must manually re-evaluate the ignored incompliant resources.
	//
	// example:
	//
	// 2022-06-01
	IgnoreDate *string `json:"IgnoreDate,omitempty" xml:"IgnoreDate,omitempty"`
	// The reason why you want to ignore the resource.
	//
	// example:
	//
	// Test ignore.
	Reason *string `json:"Reason,omitempty" xml:"Reason,omitempty"`
	// The resources to be ignored.
	//
	// This parameter is required.
	ResourcesShrink *string `json:"Resources,omitempty" xml:"Resources,omitempty"`
}

func (s IgnoreEvaluationResultsShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s IgnoreEvaluationResultsShrinkRequest) GoString() string {
	return s.String()
}

func (s *IgnoreEvaluationResultsShrinkRequest) SetConfigRuleId(v string) *IgnoreEvaluationResultsShrinkRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *IgnoreEvaluationResultsShrinkRequest) SetIgnoreDate(v string) *IgnoreEvaluationResultsShrinkRequest {
	s.IgnoreDate = &v
	return s
}

func (s *IgnoreEvaluationResultsShrinkRequest) SetReason(v string) *IgnoreEvaluationResultsShrinkRequest {
	s.Reason = &v
	return s
}

func (s *IgnoreEvaluationResultsShrinkRequest) SetResourcesShrink(v string) *IgnoreEvaluationResultsShrinkRequest {
	s.ResourcesShrink = &v
	return s
}

type IgnoreEvaluationResultsResponseBody struct {
	// The ID of the request.
	//
	// example:
	//
	// 1840CBF2-0B0B-59F2-9E84-07B38267A279
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s IgnoreEvaluationResultsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IgnoreEvaluationResultsResponseBody) GoString() string {
	return s.String()
}

func (s *IgnoreEvaluationResultsResponseBody) SetRequestId(v string) *IgnoreEvaluationResultsResponseBody {
	s.RequestId = &v
	return s
}

type IgnoreEvaluationResultsResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IgnoreEvaluationResultsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IgnoreEvaluationResultsResponse) String() string {
	return tea.Prettify(s)
}

func (s IgnoreEvaluationResultsResponse) GoString() string {
	return s.String()
}

func (s *IgnoreEvaluationResultsResponse) SetHeaders(v map[string]*string) *IgnoreEvaluationResultsResponse {
	s.Headers = v
	return s
}

func (s *IgnoreEvaluationResultsResponse) SetStatusCode(v int32) *IgnoreEvaluationResultsResponse {
	s.StatusCode = &v
	return s
}

func (s *IgnoreEvaluationResultsResponse) SetBody(v *IgnoreEvaluationResultsResponseBody) *IgnoreEvaluationResultsResponse {
	s.Body = v
	return s
}

type ListAggregateCompliancePacksRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The number of the page to return.
	//
	// Pages start from page 1. Default value: 1.
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries to return on each page.
	//
	// Valid values: 1 to 100. Default value: 10.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The status of the one or more compliance packages to be queried. Valid values:
	//
	// 	- ACTIVE: compliance packages that are available for use.
	//
	// 	- CREATING: compliance packages that are being created.
	//
	// example:
	//
	// ACTIVE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The tags.
	Tag []*ListAggregateCompliancePacksRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s ListAggregateCompliancePacksRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateCompliancePacksRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateCompliancePacksRequest) SetAggregatorId(v string) *ListAggregateCompliancePacksRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateCompliancePacksRequest) SetPageNumber(v int32) *ListAggregateCompliancePacksRequest {
	s.PageNumber = &v
	return s
}

func (s *ListAggregateCompliancePacksRequest) SetPageSize(v int32) *ListAggregateCompliancePacksRequest {
	s.PageSize = &v
	return s
}

func (s *ListAggregateCompliancePacksRequest) SetStatus(v string) *ListAggregateCompliancePacksRequest {
	s.Status = &v
	return s
}

func (s *ListAggregateCompliancePacksRequest) SetTag(v []*ListAggregateCompliancePacksRequestTag) *ListAggregateCompliancePacksRequest {
	s.Tag = v
	return s
}

type ListAggregateCompliancePacksRequestTag struct {
	// The tag key of the resource. You can specify up to 20 tag keys.
	//
	// The tag key cannot be an empty string. The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs`:. The tag key cannot contain `http://` or `https://`.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListAggregateCompliancePacksRequestTag) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateCompliancePacksRequestTag) GoString() string {
	return s.String()
}

func (s *ListAggregateCompliancePacksRequestTag) SetKey(v string) *ListAggregateCompliancePacksRequestTag {
	s.Key = &v
	return s
}

func (s *ListAggregateCompliancePacksRequestTag) SetValue(v string) *ListAggregateCompliancePacksRequestTag {
	s.Value = &v
	return s
}

type ListAggregateCompliancePacksShrinkRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The number of the page to return.
	//
	// Pages start from page 1. Default value: 1.
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries to return on each page.
	//
	// Valid values: 1 to 100. Default value: 10.
	//
	// example:
	//
	// 20
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The status of the one or more compliance packages to be queried. Valid values:
	//
	// 	- ACTIVE: compliance packages that are available for use.
	//
	// 	- CREATING: compliance packages that are being created.
	//
	// example:
	//
	// ACTIVE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The tags.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s ListAggregateCompliancePacksShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateCompliancePacksShrinkRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateCompliancePacksShrinkRequest) SetAggregatorId(v string) *ListAggregateCompliancePacksShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateCompliancePacksShrinkRequest) SetPageNumber(v int32) *ListAggregateCompliancePacksShrinkRequest {
	s.PageNumber = &v
	return s
}

func (s *ListAggregateCompliancePacksShrinkRequest) SetPageSize(v int32) *ListAggregateCompliancePacksShrinkRequest {
	s.PageSize = &v
	return s
}

func (s *ListAggregateCompliancePacksShrinkRequest) SetStatus(v string) *ListAggregateCompliancePacksShrinkRequest {
	s.Status = &v
	return s
}

func (s *ListAggregateCompliancePacksShrinkRequest) SetTagShrink(v string) *ListAggregateCompliancePacksShrinkRequest {
	s.TagShrink = &v
	return s
}

type ListAggregateCompliancePacksResponseBody struct {
	// The compliance packages returned.
	CompliancePacksResult *ListAggregateCompliancePacksResponseBodyCompliancePacksResult `json:"CompliancePacksResult,omitempty" xml:"CompliancePacksResult,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// B5806142-3090-4F86-A84E-12B3FE52C1C4
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregateCompliancePacksResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateCompliancePacksResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateCompliancePacksResponseBody) SetCompliancePacksResult(v *ListAggregateCompliancePacksResponseBodyCompliancePacksResult) *ListAggregateCompliancePacksResponseBody {
	s.CompliancePacksResult = v
	return s
}

func (s *ListAggregateCompliancePacksResponseBody) SetRequestId(v string) *ListAggregateCompliancePacksResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregateCompliancePacksResponseBodyCompliancePacksResult struct {
	// The compliance packages.
	CompliancePacks []*ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks `json:"CompliancePacks,omitempty" xml:"CompliancePacks,omitempty" type:"Repeated"`
	// The page number of the returned page.
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries returned per page.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The total number of compliance packages returned.
	//
	// example:
	//
	// 1
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListAggregateCompliancePacksResponseBodyCompliancePacksResult) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateCompliancePacksResponseBodyCompliancePacksResult) GoString() string {
	return s.String()
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResult) SetCompliancePacks(v []*ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) *ListAggregateCompliancePacksResponseBodyCompliancePacksResult {
	s.CompliancePacks = v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResult) SetPageNumber(v int32) *ListAggregateCompliancePacksResponseBodyCompliancePacksResult {
	s.PageNumber = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResult) SetPageSize(v int32) *ListAggregateCompliancePacksResponseBodyCompliancePacksResult {
	s.PageSize = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResult) SetTotalCount(v int64) *ListAggregateCompliancePacksResponseBodyCompliancePacksResult {
	s.TotalCount = &v
	return s
}

type ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks struct {
	// The ID of the management account to which the compliance package belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the account group.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// example:
	//
	// example-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the compliance package template.
	//
	// example:
	//
	// ct-5f26ff4e06a300c4****
	CompliancePackTemplateId *string `json:"CompliancePackTemplateId,omitempty" xml:"CompliancePackTemplateId,omitempty"`
	// The timestamp when the compliance package was created. Unit: milliseconds.
	//
	// example:
	//
	// 1624243657000
	CreateTimestamp *int64 `json:"CreateTimestamp,omitempty" xml:"CreateTimestamp,omitempty"`
	// The description of the compliance package.
	//
	// example:
	//
	// example-description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The risk level of the resources that are not compliant with the managed rules in the compliance package. Valid values:
	//
	// 	- 1: high risk level.
	//
	// 	- 2: medium risk level.
	//
	// 	- 3: low risk level.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The status of the compliance package. Valid values:
	//
	// 	- ACTIVE: The compliance package is available for use.
	//
	// 	- CREATING: The compliance package is being created.
	//
	// example:
	//
	// ACTIVE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The tags.
	Tags []*ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) GoString() string {
	return s.String()
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetAccountId(v int64) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.AccountId = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetAggregatorId(v string) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetCompliancePackId(v string) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.CompliancePackId = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetCompliancePackName(v string) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.CompliancePackName = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetCompliancePackTemplateId(v string) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.CompliancePackTemplateId = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetCreateTimestamp(v int64) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.CreateTimestamp = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetDescription(v string) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.Description = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetRiskLevel(v int32) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.RiskLevel = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetStatus(v string) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.Status = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetTags(v []*ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.Tags = v
	return s
}

type ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags) GoString() string {
	return s.String()
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags) SetTagKey(v string) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags {
	s.TagKey = &v
	return s
}

func (s *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags) SetTagValue(v string) *ListAggregateCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags {
	s.TagValue = &v
	return s
}

type ListAggregateCompliancePacksResponse struct {
	Headers    map[string]*string                        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateCompliancePacksResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateCompliancePacksResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateCompliancePacksResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateCompliancePacksResponse) SetHeaders(v map[string]*string) *ListAggregateCompliancePacksResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateCompliancePacksResponse) SetStatusCode(v int32) *ListAggregateCompliancePacksResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateCompliancePacksResponse) SetBody(v *ListAggregateCompliancePacksResponseBody) *ListAggregateCompliancePacksResponse {
	s.Body = v
	return s
}

type ListAggregateConfigDeliveryChannelsRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The IDs of the delivery channels. Separate multiple IDs with commas (,).
	//
	// example:
	//
	// cdc-d9106457e0d900b1****
	DeliveryChannelIds *string `json:"DeliveryChannelIds,omitempty" xml:"DeliveryChannelIds,omitempty"`
}

func (s ListAggregateConfigDeliveryChannelsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigDeliveryChannelsRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigDeliveryChannelsRequest) SetAggregatorId(v string) *ListAggregateConfigDeliveryChannelsRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsRequest) SetDeliveryChannelIds(v string) *ListAggregateConfigDeliveryChannelsRequest {
	s.DeliveryChannelIds = &v
	return s
}

type ListAggregateConfigDeliveryChannelsResponseBody struct {
	// The information about the delivery channels.
	DeliveryChannels []*ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels `json:"DeliveryChannels,omitempty" xml:"DeliveryChannels,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// DC300244-FCE3-5061-8214-C27ECB668487
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregateConfigDeliveryChannelsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigDeliveryChannelsResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigDeliveryChannelsResponseBody) SetDeliveryChannels(v []*ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) *ListAggregateConfigDeliveryChannelsResponseBody {
	s.DeliveryChannels = v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBody) SetRequestId(v string) *ListAggregateConfigDeliveryChannelsResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels struct {
	// The ID of the member in the account group.
	//
	// example:
	//
	// 120886317861****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the account group.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// Indicates whether the specified destination receives scheduled compliant snapshots. Cloud Config delivers scheduled compliant snapshots at `04:00Z` and `16:00Z` to Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: The specified destination receives scheduled compliant snapshots.
	//
	// 	- false: The specified destination does not receive scheduled compliant snapshots.
	//
	// example:
	//
	// false
	CompliantSnapshot *bool `json:"CompliantSnapshot,omitempty" xml:"CompliantSnapshot,omitempty"`
	// Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	//
	// 	- true: The specified destination receives resource change logs.
	//
	// 	- false: The specified destination does not receive resource change logs.
	//
	// example:
	//
	// true
	ConfigurationItemChangeNotification *bool `json:"ConfigurationItemChangeNotification,omitempty" xml:"ConfigurationItemChangeNotification,omitempty"`
	// Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at `04:00Z` and `16:00Z` to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: The specified destination receives scheduled resource snapshots.
	//
	// 	- false: The specified destination does not receive scheduled resource snapshots.
	//
	// example:
	//
	// false
	ConfigurationSnapshot *bool `json:"ConfigurationSnapshot,omitempty" xml:"ConfigurationSnapshot,omitempty"`
	// The ARN of the role that is assigned to the delivery channel.
	//
	// example:
	//
	// acs:ram::120886317861****:role/aliyunserviceroleforconfig
	DeliveryChannelAssumeRoleArn *string `json:"DeliveryChannelAssumeRoleArn,omitempty" xml:"DeliveryChannelAssumeRoleArn,omitempty"`
	// The rule that is attached to the delivery channel. This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// 	- If the value of the DeliveryChannelType parameter is MNS, take note of the following settings of the lowest risk level and resource types of the events to which you subscribed:
	//
	//     	- The lowest risk level of the events to which you want to subscribe is in the following format: `{"filterType":"RuleRiskLevel","value":"1","multiple":false}`.
	//
	//         The `value` field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	//     	- The setting of the resource types of the events to which you want to subscribe is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//         The `values` field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// 	- If you set the DeliveryChannelType parameter to SLS, the setting of the resource types of the snapshots to which you want to deliver is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//     The `values` field specifies the resource types of the snapshots to which you want to deliver. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// example:
	//
	// [{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]
	DeliveryChannelCondition *string `json:"DeliveryChannelCondition,omitempty" xml:"DeliveryChannelCondition,omitempty"`
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-d9106457e0d900b1****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The name of the delivery channel.
	//
	// example:
	//
	// myDeliveryChannel
	DeliveryChannelName *string `json:"DeliveryChannelName,omitempty" xml:"DeliveryChannelName,omitempty"`
	// The ARN of the delivery destination.
	//
	// 	- If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
	//
	// 	- If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
	//
	// 	- If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
	//
	// example:
	//
	// acs:oss:cn-shanghai:120886317861****:new-bucket
	DeliveryChannelTargetArn *string `json:"DeliveryChannelTargetArn,omitempty" xml:"DeliveryChannelTargetArn,omitempty"`
	// The type of the delivery channel. Valid values:
	//
	// 	- OSS: Object Storage Service (OSS)
	//
	// 	- MNS: Message Service (MNS)
	//
	// 	- SLS: Log Service
	//
	// example:
	//
	// OSS
	DeliveryChannelType *string `json:"DeliveryChannelType,omitempty" xml:"DeliveryChannelType,omitempty"`
	// The time when Cloud Config delivers scheduled resources snapshots every day.
	//
	// Format: `HH:mmZ`. This time is displayed in UTC.
	//
	// example:
	//
	// 09:10Z
	DeliverySnapshotTime *string `json:"DeliverySnapshotTime,omitempty" xml:"DeliverySnapshotTime,omitempty"`
	// The description of the delivery channel.
	//
	// example:
	//
	// My OSS delivery.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
	//
	// 	- true: The specified destination receives resource non-compliance events.
	//
	// 	- false: The specified destination does not receive resource non-compliance events.
	//
	// example:
	//
	// false
	NonCompliantNotification *bool `json:"NonCompliantNotification,omitempty" xml:"NonCompliantNotification,omitempty"`
	// The ARN of the OSS bucket to which the delivered data is transferred when the size of the data exceeds the specified upper limit of the delivery channel.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	OversizedDataOSSTargetArn *string `json:"OversizedDataOSSTargetArn,omitempty" xml:"OversizedDataOSSTargetArn,omitempty"`
	// The status of the delivery channel. Valid values:
	//
	// 	- 0: The delivery channel is disabled.
	//
	// 	- 1: The delivery channel is enabled.
	//
	// example:
	//
	// 1
	Status *int32 `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetAccountId(v int64) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.AccountId = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetAggregatorId(v string) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetCompliantSnapshot(v bool) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.CompliantSnapshot = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetConfigurationItemChangeNotification(v bool) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.ConfigurationItemChangeNotification = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetConfigurationSnapshot(v bool) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.ConfigurationSnapshot = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelAssumeRoleArn(v string) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelAssumeRoleArn = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelCondition(v string) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelCondition = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelId(v string) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelId = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelName(v string) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelName = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelTargetArn(v string) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelTargetArn = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelType(v string) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelType = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliverySnapshotTime(v string) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliverySnapshotTime = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDescription(v string) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.Description = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetNonCompliantNotification(v bool) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.NonCompliantNotification = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetOversizedDataOSSTargetArn(v string) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.OversizedDataOSSTargetArn = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels) SetStatus(v int32) *ListAggregateConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.Status = &v
	return s
}

type ListAggregateConfigDeliveryChannelsResponse struct {
	Headers    map[string]*string                               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateConfigDeliveryChannelsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateConfigDeliveryChannelsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigDeliveryChannelsResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigDeliveryChannelsResponse) SetHeaders(v map[string]*string) *ListAggregateConfigDeliveryChannelsResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponse) SetStatusCode(v int32) *ListAggregateConfigDeliveryChannelsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateConfigDeliveryChannelsResponse) SetBody(v *ListAggregateConfigDeliveryChannelsResponseBody) *ListAggregateConfigDeliveryChannelsResponse {
	s.Body = v
	return s
}

type ListAggregateConfigRuleEvaluationResultsRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-b1e6626622af00cb****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// example:
	//
	// cp-f1e3326622af00cb****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The compliance evaluation result of the resource. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to your resource.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// 	- IGNORED: The resource is ignored during compliance evaluation.
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The rule ID.
	//
	// For more information about how to query the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// example:
	//
	// cr-888f626622af00ae****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The maximum number of entries to return in a request. Valid values: 1 to 100.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of `NextToken`.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region whose resources you want to evaluate. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	Regions *string `json:"Regions,omitempty" xml:"Regions,omitempty"`
	// Member accountId to which the resource to be queried belongs.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// The ID of the resource group whose resources you want to evaluate. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aek2cqyzvuj****
	ResourceGroupIds *string `json:"ResourceGroupIds,omitempty" xml:"ResourceGroupIds,omitempty"`
	// Deprecated
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
	// The type of the resources that you want to evaluate. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationResultsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationResultsRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetAggregatorId(v string) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetCompliancePackId(v string) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.CompliancePackId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetComplianceType(v string) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.ComplianceType = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetConfigRuleId(v string) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetMaxResults(v int32) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetNextToken(v string) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.NextToken = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetRegions(v string) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.Regions = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetResourceAccountId(v int64) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.ResourceAccountId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetResourceGroupIds(v string) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.ResourceGroupIds = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetResourceOwnerId(v int64) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.ResourceOwnerId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsRequest) SetResourceTypes(v string) *ListAggregateConfigRuleEvaluationResultsRequest {
	s.ResourceTypes = &v
	return s
}

type ListAggregateConfigRuleEvaluationResultsResponseBody struct {
	// The information about the compliance evaluation results returned.
	EvaluationResults *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults `json:"EvaluationResults,omitempty" xml:"EvaluationResults,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// A6662516-D056-4325-B6A7-CD3E89C97C39
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationResultsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationResultsResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBody) SetEvaluationResults(v *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults) *ListAggregateConfigRuleEvaluationResultsResponseBody {
	s.EvaluationResults = v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBody) SetRequestId(v string) *ListAggregateConfigRuleEvaluationResultsResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults struct {
	// The details of the compliance evaluation result.
	EvaluationResultList []*ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList `json:"EvaluationResultList,omitempty" xml:"EvaluationResultList,omitempty" type:"Repeated"`
	// The maximum number of entries returned on each page.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token. It can be used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults) SetEvaluationResultList(v []*ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults {
	s.EvaluationResultList = v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults) SetMaxResults(v int32) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults {
	s.MaxResults = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults) SetNextToken(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResults {
	s.NextToken = &v
	return s
}

type ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList struct {
	// The annotation to the resource that is evaluated as non-compliant. The following parameters may be returned:
	//
	// 	- `configuration`: the current resource configuration that is evaluated as incompliant by using the rule.
	//
	// 	- `desiredValue`: the expected resource configuration that is evaluated as compliant.
	//
	// 	- `operator`: the operator that compares the current configuration with the expected configuration of the resource.
	//
	// 	- `property`: the JSON path of the current configuration in the resource property struct.
	//
	// 	- `reason`: the reason why the resource is evaluated as non-compliant.
	//
	// example:
	//
	// {\\"configuration\\":\\"LRS\\",\\"desiredValue\\":\\"ZRS\\",\\"operator\\":\\"StringEquals\\",\\"property\\":\\"$.DataRedundancyType\\"}
	Annotation *string `json:"Annotation,omitempty" xml:"Annotation,omitempty"`
	// The compliance evaluation result of the resource. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to your resource.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// 	- IGNORED: The resource is ignored during compliance evaluation.
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The timestamp when the rule was triggered for the compliance evaluation. Unit: milliseconds.
	//
	// example:
	//
	// 1624869012713
	ConfigRuleInvokedTimestamp *int64 `json:"ConfigRuleInvokedTimestamp,omitempty" xml:"ConfigRuleInvokedTimestamp,omitempty"`
	// The identifying information about the compliance evaluation result.
	EvaluationResultIdentifier *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier `json:"EvaluationResultIdentifier,omitempty" xml:"EvaluationResultIdentifier,omitempty" type:"Struct"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// example:
	//
	// ScheduledNotification
	InvokingEventMessageType *string `json:"InvokingEventMessageType,omitempty" xml:"InvokingEventMessageType,omitempty"`
	// Indicates whether the remediation template is enabled. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// false
	RemediationEnabled *bool `json:"RemediationEnabled,omitempty" xml:"RemediationEnabled,omitempty"`
	// The timestamp when the compliance evaluation result was recorded. The value of this parameter is a UNIX timestamp in milliseconds.
	//
	// example:
	//
	// 1624869013065
	ResultRecordedTimestamp *int64 `json:"ResultRecordedTimestamp,omitempty" xml:"ResultRecordedTimestamp,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium.
	//
	// 	- 3: low.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetAnnotation(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.Annotation = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetComplianceType(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ComplianceType = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetConfigRuleInvokedTimestamp(v int64) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ConfigRuleInvokedTimestamp = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetEvaluationResultIdentifier(v *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.EvaluationResultIdentifier = v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetInvokingEventMessageType(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.InvokingEventMessageType = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetRemediationEnabled(v bool) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.RemediationEnabled = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetResultRecordedTimestamp(v int64) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ResultRecordedTimestamp = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetRiskLevel(v int32) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.RiskLevel = &v
	return s
}

type ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier struct {
	// The information about the evaluated resource in the compliance evaluation result.
	EvaluationResultQualifier *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier `json:"EvaluationResultQualifier,omitempty" xml:"EvaluationResultQualifier,omitempty" type:"Struct"`
	// The timestamp when the compliance evaluation was performed. Unit: milliseconds.
	//
	// >  This timestamp indicates the time when the rule was triggered. You can obtain the timestamp from the `ConfigRuleInvokedTimestamp` parameter.
	//
	// example:
	//
	// 1624869012713
	OrderingTimestamp *int64 `json:"OrderingTimestamp,omitempty" xml:"OrderingTimestamp,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) SetEvaluationResultQualifier(v *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier {
	s.EvaluationResultQualifier = v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) SetOrderingTimestamp(v int64) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier {
	s.OrderingTimestamp = &v
	return s
}

type ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier struct {
	// The ID of the compliance package to which the rule belongs.
	//
	// example:
	//
	// cr-7263fd26622af00bc****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The ARN of the rule.
	//
	// example:
	//
	// acs:config::100931896542****:rule/cr-888f626622af00ae****
	ConfigRuleArn *string `json:"ConfigRuleArn,omitempty" xml:"ConfigRuleArn,omitempty"`
	// The rule ID.
	//
	// example:
	//
	// cr-888f626622af00ae****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The rule name.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The date on which the system automatically re-evaluates the ignored incompliant resources.
	//
	// >  If the value of this parameter is left empty, the system does not automatically re-evaluate the ignored incompliant resources. You must manually re-evaluate the ignored incompliant resources.
	//
	// example:
	//
	// 2022-06-01
	IgnoreDate *string `json:"IgnoreDate,omitempty" xml:"IgnoreDate,omitempty"`
	// The ID of the region in which your resources reside.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// Bucket-test
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource name.
	//
	// example:
	//
	// Bucket-test
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 173808452267****
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::OSS::Bucket
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetCompliancePackId(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.CompliancePackId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleArn(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleArn = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleId(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleName(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleName = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetIgnoreDate(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.IgnoreDate = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetRegionId(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.RegionId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceId(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceName(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceName = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceOwnerId(v int64) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceOwnerId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceType(v string) *ListAggregateConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceType = &v
	return s
}

type ListAggregateConfigRuleEvaluationResultsResponse struct {
	Headers    map[string]*string                                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateConfigRuleEvaluationResultsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationResultsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationResultsResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationResultsResponse) SetHeaders(v map[string]*string) *ListAggregateConfigRuleEvaluationResultsResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponse) SetStatusCode(v int32) *ListAggregateConfigRuleEvaluationResultsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationResultsResponse) SetBody(v *ListAggregateConfigRuleEvaluationResultsResponseBody) *ListAggregateConfigRuleEvaluationResultsResponse {
	s.Body = v
	return s
}

type ListAggregateConfigRuleEvaluationStatisticsRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-edd3626622af00b3****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationStatisticsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationStatisticsRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationStatisticsRequest) SetAggregatorId(v string) *ListAggregateConfigRuleEvaluationStatisticsRequest {
	s.AggregatorId = &v
	return s
}

type ListAggregateConfigRuleEvaluationStatisticsResponseBody struct {
	// The statistics of compliance evaluation results.
	EvaluationResults []*ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults `json:"EvaluationResults,omitempty" xml:"EvaluationResults,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 9EFA436B-FC6F-513B-9DB8-C96E6CEBE5E0
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationStatisticsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationStatisticsResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponseBody) SetEvaluationResults(v []*ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) *ListAggregateConfigRuleEvaluationStatisticsResponseBody {
	s.EvaluationResults = v
	return s
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponseBody) SetRequestId(v string) *ListAggregateConfigRuleEvaluationStatisticsResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults struct {
	// The ID of the account group.
	//
	// example:
	//
	// ca-edd3626622af00b3****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The number of resources that are evaluated as non-compliant.
	//
	// example:
	//
	// 25
	NonCompliantResourceCnt *int32 `json:"NonCompliantResourceCnt,omitempty" xml:"NonCompliantResourceCnt,omitempty"`
	// The number of rules based on which resources are evaluated as non-compliant.
	//
	// example:
	//
	// 3
	NonCompliantRuleCnt *int32 `json:"NonCompliantRuleCnt,omitempty" xml:"NonCompliantRuleCnt,omitempty"`
	// The date on which the statistics are obtained.
	//
	// example:
	//
	// 2023-06-27
	StatisticDate *string `json:"StatisticDate,omitempty" xml:"StatisticDate,omitempty"`
	// The total number of resources.
	//
	// example:
	//
	// 153
	TotalResourceCnt *int32 `json:"TotalResourceCnt,omitempty" xml:"TotalResourceCnt,omitempty"`
	// The total number of rules.
	//
	// example:
	//
	// 10
	TotalRuleCnt *int32 `json:"TotalRuleCnt,omitempty" xml:"TotalRuleCnt,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetAggregatorId(v string) *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetNonCompliantResourceCnt(v int32) *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.NonCompliantResourceCnt = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetNonCompliantRuleCnt(v int32) *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.NonCompliantRuleCnt = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetStatisticDate(v string) *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.StatisticDate = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetTotalResourceCnt(v int32) *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.TotalResourceCnt = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetTotalRuleCnt(v int32) *ListAggregateConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.TotalRuleCnt = &v
	return s
}

type ListAggregateConfigRuleEvaluationStatisticsResponse struct {
	Headers    map[string]*string                                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateConfigRuleEvaluationStatisticsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateConfigRuleEvaluationStatisticsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRuleEvaluationStatisticsResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponse) SetHeaders(v map[string]*string) *ListAggregateConfigRuleEvaluationStatisticsResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponse) SetStatusCode(v int32) *ListAggregateConfigRuleEvaluationStatisticsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateConfigRuleEvaluationStatisticsResponse) SetBody(v *ListAggregateConfigRuleEvaluationStatisticsResponseBody) *ListAggregateConfigRuleEvaluationStatisticsResponse {
	s.Body = v
	return s
}

type ListAggregateConfigRulesRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The compliance package ID.
	//
	// example:
	//
	// cp-fe416457e0d90022****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The compliance evaluation result. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The status of the rule. Valid values:
	//
	// 	- ACTIVE: The rule is being used to monitor resource configurations.
	//
	// 	- DELETING: The rule is being deleted.
	//
	// 	- EVALUATING: The rule is triggered and is being used to monitor resource configurations.
	//
	// 	- INACTIVE: The rule is disabled.
	//
	// example:
	//
	// ACTIVE
	ConfigRuleState *string `json:"ConfigRuleState,omitempty" xml:"ConfigRuleState,omitempty"`
	// The keyword that is used for queries.
	//
	// You can perform a fuzzy search by rule ID, rule name, rule description, or managed rule ID.
	//
	// example:
	//
	// ecs
	Keyword *string `json:"Keyword,omitempty" xml:"Keyword,omitempty"`
	// The page number.
	//
	// Pages start from page 1. Default value: 1
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page.
	//
	// Valid values: 1 to 100. Minimum value: 1. Default value: 10
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// Resource type for the rule to evaluate.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*ListAggregateConfigRulesRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s ListAggregateConfigRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRulesRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRulesRequest) SetAggregatorId(v string) *ListAggregateConfigRulesRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateConfigRulesRequest) SetCompliancePackId(v string) *ListAggregateConfigRulesRequest {
	s.CompliancePackId = &v
	return s
}

func (s *ListAggregateConfigRulesRequest) SetComplianceType(v string) *ListAggregateConfigRulesRequest {
	s.ComplianceType = &v
	return s
}

func (s *ListAggregateConfigRulesRequest) SetConfigRuleName(v string) *ListAggregateConfigRulesRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *ListAggregateConfigRulesRequest) SetConfigRuleState(v string) *ListAggregateConfigRulesRequest {
	s.ConfigRuleState = &v
	return s
}

func (s *ListAggregateConfigRulesRequest) SetKeyword(v string) *ListAggregateConfigRulesRequest {
	s.Keyword = &v
	return s
}

func (s *ListAggregateConfigRulesRequest) SetPageNumber(v int32) *ListAggregateConfigRulesRequest {
	s.PageNumber = &v
	return s
}

func (s *ListAggregateConfigRulesRequest) SetPageSize(v int32) *ListAggregateConfigRulesRequest {
	s.PageSize = &v
	return s
}

func (s *ListAggregateConfigRulesRequest) SetResourceTypes(v string) *ListAggregateConfigRulesRequest {
	s.ResourceTypes = &v
	return s
}

func (s *ListAggregateConfigRulesRequest) SetRiskLevel(v int32) *ListAggregateConfigRulesRequest {
	s.RiskLevel = &v
	return s
}

func (s *ListAggregateConfigRulesRequest) SetTag(v []*ListAggregateConfigRulesRequestTag) *ListAggregateConfigRulesRequest {
	s.Tag = v
	return s
}

type ListAggregateConfigRulesRequestTag struct {
	// The tag key.
	//
	// The tag key cannot be an empty string. The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.
	//
	// You can specify at most 20 tag keys.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The value of the tag. You can specify up to 20 tag values. The tag value can be an empty string.
	//
	// The tag value can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. The tag value cannot contain `http://` or `https://`.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListAggregateConfigRulesRequestTag) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRulesRequestTag) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRulesRequestTag) SetKey(v string) *ListAggregateConfigRulesRequestTag {
	s.Key = &v
	return s
}

func (s *ListAggregateConfigRulesRequestTag) SetValue(v string) *ListAggregateConfigRulesRequestTag {
	s.Value = &v
	return s
}

type ListAggregateConfigRulesShrinkRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The compliance package ID.
	//
	// example:
	//
	// cp-fe416457e0d90022****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The compliance evaluation result. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The status of the rule. Valid values:
	//
	// 	- ACTIVE: The rule is being used to monitor resource configurations.
	//
	// 	- DELETING: The rule is being deleted.
	//
	// 	- EVALUATING: The rule is triggered and is being used to monitor resource configurations.
	//
	// 	- INACTIVE: The rule is disabled.
	//
	// example:
	//
	// ACTIVE
	ConfigRuleState *string `json:"ConfigRuleState,omitempty" xml:"ConfigRuleState,omitempty"`
	// The keyword that is used for queries.
	//
	// You can perform a fuzzy search by rule ID, rule name, rule description, or managed rule ID.
	//
	// example:
	//
	// ecs
	Keyword *string `json:"Keyword,omitempty" xml:"Keyword,omitempty"`
	// The page number.
	//
	// Pages start from page 1. Default value: 1
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page.
	//
	// Valid values: 1 to 100. Minimum value: 1. Default value: 10
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// Resource type for the rule to evaluate.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s ListAggregateConfigRulesShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRulesShrinkRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRulesShrinkRequest) SetAggregatorId(v string) *ListAggregateConfigRulesShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateConfigRulesShrinkRequest) SetCompliancePackId(v string) *ListAggregateConfigRulesShrinkRequest {
	s.CompliancePackId = &v
	return s
}

func (s *ListAggregateConfigRulesShrinkRequest) SetComplianceType(v string) *ListAggregateConfigRulesShrinkRequest {
	s.ComplianceType = &v
	return s
}

func (s *ListAggregateConfigRulesShrinkRequest) SetConfigRuleName(v string) *ListAggregateConfigRulesShrinkRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *ListAggregateConfigRulesShrinkRequest) SetConfigRuleState(v string) *ListAggregateConfigRulesShrinkRequest {
	s.ConfigRuleState = &v
	return s
}

func (s *ListAggregateConfigRulesShrinkRequest) SetKeyword(v string) *ListAggregateConfigRulesShrinkRequest {
	s.Keyword = &v
	return s
}

func (s *ListAggregateConfigRulesShrinkRequest) SetPageNumber(v int32) *ListAggregateConfigRulesShrinkRequest {
	s.PageNumber = &v
	return s
}

func (s *ListAggregateConfigRulesShrinkRequest) SetPageSize(v int32) *ListAggregateConfigRulesShrinkRequest {
	s.PageSize = &v
	return s
}

func (s *ListAggregateConfigRulesShrinkRequest) SetResourceTypes(v string) *ListAggregateConfigRulesShrinkRequest {
	s.ResourceTypes = &v
	return s
}

func (s *ListAggregateConfigRulesShrinkRequest) SetRiskLevel(v int32) *ListAggregateConfigRulesShrinkRequest {
	s.RiskLevel = &v
	return s
}

func (s *ListAggregateConfigRulesShrinkRequest) SetTagShrink(v string) *ListAggregateConfigRulesShrinkRequest {
	s.TagShrink = &v
	return s
}

type ListAggregateConfigRulesResponseBody struct {
	// The queried rules.
	ConfigRules *ListAggregateConfigRulesResponseBodyConfigRules `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 22EF8287-2C9A-4F1F-80A6-CEFA7612689D
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregateConfigRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRulesResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRulesResponseBody) SetConfigRules(v *ListAggregateConfigRulesResponseBodyConfigRules) *ListAggregateConfigRulesResponseBody {
	s.ConfigRules = v
	return s
}

func (s *ListAggregateConfigRulesResponseBody) SetRequestId(v string) *ListAggregateConfigRulesResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregateConfigRulesResponseBodyConfigRules struct {
	// The details of the rule.
	ConfigRuleList []*ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList `json:"ConfigRuleList,omitempty" xml:"ConfigRuleList,omitempty" type:"Repeated"`
	// The number of the page returned.
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries returned per page.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The total number of rules.
	//
	// example:
	//
	// 1
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListAggregateConfigRulesResponseBodyConfigRules) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRulesResponseBodyConfigRules) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRulesResponseBodyConfigRules) SetConfigRuleList(v []*ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) *ListAggregateConfigRulesResponseBodyConfigRules {
	s.ConfigRuleList = v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRules) SetPageNumber(v int32) *ListAggregateConfigRulesResponseBodyConfigRules {
	s.PageNumber = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRules) SetPageSize(v int32) *ListAggregateConfigRulesResponseBodyConfigRules {
	s.PageSize = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRules) SetTotalCount(v int64) *ListAggregateConfigRulesResponseBodyConfigRules {
	s.TotalCount = &v
	return s
}

type ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList struct {
	// The ID of the management account to which the rules belong.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The type of the remediation template. Only OOS is returned, which indicates CloudOps Orchestration Service.
	//
	// example:
	//
	// OOS
	AutomationType *string `json:"AutomationType,omitempty" xml:"AutomationType,omitempty"`
	// The compliance evaluation result.
	Compliance *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCompliance `json:"Compliance,omitempty" xml:"Compliance,omitempty" type:"Struct"`
	// The ARN of the rule.
	//
	// example:
	//
	// acs:config::100931896542****:rule/cr-fdc8626622af00f9****
	ConfigRuleArn *string `json:"ConfigRuleArn,omitempty" xml:"ConfigRuleArn,omitempty"`
	// The rule ID.
	//
	// example:
	//
	// cr-fdc8626622af00f9****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The status of the rule. Valid values:
	//
	// 	- ACTIVE: The rule is being used to monitor resource configurations.
	//
	// 	- DELETING: The rule is being deleted.
	//
	// 	- EVALUATING: The rule is triggered and is being used to monitor resource configurations.
	//
	// 	- INACTIVE: The rule is disabled.
	//
	// example:
	//
	// ACTIVE
	ConfigRuleState *string `json:"ConfigRuleState,omitempty" xml:"ConfigRuleState,omitempty"`
	// The information about the creation of the rule.
	CreateBy *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy `json:"CreateBy,omitempty" xml:"CreateBy,omitempty" type:"Struct"`
	// The description of the rule.
	//
	// example:
	//
	// The description of the test rule.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The types of resources evaluated by the rule. Multiple resource types are separated with commas (,).
	//
	// example:
	//
	// ACS::EIP::EipAddress
	ResourceTypesScope *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The identifier of the rule.
	//
	// 	- If the rule is a managed rule, the value of this parameter is the name of the managed rule.
	//
	// 	- If the rule is a custom rule, the value of this parameter is the Alibaba Cloud Resource Name (ARN) of a function.
	//
	// example:
	//
	// eip-bandwidth-limit
	SourceIdentifier *string `json:"SourceIdentifier,omitempty" xml:"SourceIdentifier,omitempty"`
	// The type of the rule. Valid values:
	//
	// 	- CUSTOM_FC: a custom rule.
	//
	// 	- ALIYUN: a managed rule.
	//
	// example:
	//
	// ALIYUN
	SourceOwner *string `json:"SourceOwner,omitempty" xml:"SourceOwner,omitempty"`
	// The tags of the rule.
	Tags []*ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListTags `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetAccountId(v int64) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.AccountId = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetAutomationType(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.AutomationType = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetCompliance(v *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCompliance) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.Compliance = v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetConfigRuleArn(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.ConfigRuleArn = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetConfigRuleId(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.ConfigRuleId = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetConfigRuleName(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.ConfigRuleName = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetConfigRuleState(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.ConfigRuleState = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetCreateBy(v *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.CreateBy = v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetDescription(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.Description = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetResourceTypesScope(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.ResourceTypesScope = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetRiskLevel(v int32) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.RiskLevel = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetSourceIdentifier(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.SourceIdentifier = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetSourceOwner(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.SourceOwner = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList) SetTags(v []*ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListTags) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.Tags = v
	return s
}

type ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCompliance struct {
	// The compliance evaluation result. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The number of evaluation resources that correspond to the summary result of the rule compliance evaluation.
	//
	// example:
	//
	// 2
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
}

func (s ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCompliance) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCompliance) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCompliance) SetComplianceType(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCompliance {
	s.ComplianceType = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCompliance) SetCount(v int32) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCompliance {
	s.Count = &v
	return s
}

type ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy struct {
	// The account group ID.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The name of the account group.
	//
	// example:
	//
	// Test_Group
	AggregatorName *string `json:"AggregatorName,omitempty" xml:"AggregatorName,omitempty"`
	// The compliance package ID.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// example:
	//
	// test-pack-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the management account that created the rule.
	//
	// example:
	//
	// 100931896542****
	CreatorId *string `json:"CreatorId,omitempty" xml:"CreatorId,omitempty"`
	// The name of the management account that create the rule.
	//
	// example:
	//
	// Alice
	CreatorName *string `json:"CreatorName,omitempty" xml:"CreatorName,omitempty"`
	// The type of the creator of the rule. The value is fixed to AGGREGATOR, which indicates an account group.
	//
	// example:
	//
	// AGGREGATOR
	CreatorType *string `json:"CreatorType,omitempty" xml:"CreatorType,omitempty"`
}

func (s ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) SetAggregatorId(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) SetAggregatorName(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy {
	s.AggregatorName = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) SetCompliancePackId(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy {
	s.CompliancePackId = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) SetCompliancePackName(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy {
	s.CompliancePackName = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) SetCreatorId(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy {
	s.CreatorId = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) SetCreatorName(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy {
	s.CreatorName = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) SetCreatorType(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy {
	s.CreatorType = &v
	return s
}

type ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListTags struct {
	// The tag key of the rule.
	//
	// example:
	//
	// env
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag value of the rule.
	//
	// example:
	//
	// prod
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListTags) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListTags) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListTags) SetKey(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListTags {
	s.Key = &v
	return s
}

func (s *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListTags) SetValue(v string) *ListAggregateConfigRulesResponseBodyConfigRulesConfigRuleListTags {
	s.Value = &v
	return s
}

type ListAggregateConfigRulesResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateConfigRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateConfigRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateConfigRulesResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateConfigRulesResponse) SetHeaders(v map[string]*string) *ListAggregateConfigRulesResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateConfigRulesResponse) SetStatusCode(v int32) *ListAggregateConfigRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateConfigRulesResponse) SetBody(v *ListAggregateConfigRulesResponseBody) *ListAggregateConfigRulesResponse {
	s.Body = v
	return s
}

type ListAggregateDiscoveredResourcesRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-c560626622af0005****
	AggregatorId         *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	EndUpdateTimestamp   *int64  `json:"EndUpdateTimestamp,omitempty" xml:"EndUpdateTimestamp,omitempty"`
	ExcludeResourceTypes *string `json:"ExcludeResourceTypes,omitempty" xml:"ExcludeResourceTypes,omitempty"`
	// The maximum number of entries to return for a single request. Valid values: 1 to 100.
	//
	// This parameter is required.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The `token` that you want to use to initiate the current request. If the response of the previous request is truncated, you can use this token to initiate another request and obtain the remaining entries.
	//
	// if can be null:
	// false
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region in which the resource resides. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-huhehaote
	Regions *string `json:"Regions,omitempty" xml:"Regions,omitempty"`
	// The ID of the Alibaba Cloud account to which the specified resource belongs in the account group.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// The status of the resource. Valid values:
	//
	// 	- 0: The resource is deleted. If a resource is deleted from the desired cloud service, **Deleted*	- is displayed in the resource list in the Cloud Config console.
	//
	// 	- 1 (default): The resource is retained. If a resource is managed as expected, **Active*	- is displayed in the resource list in the Cloud Config console.
	//
	// example:
	//
	// 1
	ResourceDeleted *int32 `json:"ResourceDeleted,omitempty" xml:"ResourceDeleted,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// eni-hp31cqoba96jagtz****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// Deprecated
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
	// The type of the resource. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::ECS::NetworkInterface
	ResourceTypes        *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
	StartUpdateTimestamp *int64  `json:"StartUpdateTimestamp,omitempty" xml:"StartUpdateTimestamp,omitempty"`
}

func (s ListAggregateDiscoveredResourcesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateDiscoveredResourcesRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateDiscoveredResourcesRequest) SetAggregatorId(v string) *ListAggregateDiscoveredResourcesRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetEndUpdateTimestamp(v int64) *ListAggregateDiscoveredResourcesRequest {
	s.EndUpdateTimestamp = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetExcludeResourceTypes(v string) *ListAggregateDiscoveredResourcesRequest {
	s.ExcludeResourceTypes = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetMaxResults(v int32) *ListAggregateDiscoveredResourcesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetNextToken(v string) *ListAggregateDiscoveredResourcesRequest {
	s.NextToken = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetRegions(v string) *ListAggregateDiscoveredResourcesRequest {
	s.Regions = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetResourceAccountId(v int64) *ListAggregateDiscoveredResourcesRequest {
	s.ResourceAccountId = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetResourceDeleted(v int32) *ListAggregateDiscoveredResourcesRequest {
	s.ResourceDeleted = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetResourceId(v string) *ListAggregateDiscoveredResourcesRequest {
	s.ResourceId = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetResourceOwnerId(v int64) *ListAggregateDiscoveredResourcesRequest {
	s.ResourceOwnerId = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetResourceTypes(v string) *ListAggregateDiscoveredResourcesRequest {
	s.ResourceTypes = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesRequest) SetStartUpdateTimestamp(v int64) *ListAggregateDiscoveredResourcesRequest {
	s.StartUpdateTimestamp = &v
	return s
}

type ListAggregateDiscoveredResourcesResponseBody struct {
	// The queried resources.
	DiscoveredResourceProfiles *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles `json:"DiscoveredResourceProfiles,omitempty" xml:"DiscoveredResourceProfiles,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// C7817373-78CB-4F9A-8AFA-E7A88E9D64A2
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregateDiscoveredResourcesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateDiscoveredResourcesResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateDiscoveredResourcesResponseBody) SetDiscoveredResourceProfiles(v *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) *ListAggregateDiscoveredResourcesResponseBody {
	s.DiscoveredResourceProfiles = v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBody) SetRequestId(v string) *ListAggregateDiscoveredResourcesResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles struct {
	// The queried resource.
	DiscoveredResourceProfileList []*ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList `json:"DiscoveredResourceProfileList,omitempty" xml:"DiscoveredResourceProfileList,omitempty" type:"Repeated"`
	// The maximum number of entries returned on each page.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The token that was used to initiate the next request.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The total number of resources.
	//
	// example:
	//
	// 8
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) GoString() string {
	return s.String()
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) SetDiscoveredResourceProfileList(v []*ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles {
	s.DiscoveredResourceProfileList = v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) SetMaxResults(v int32) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles {
	s.MaxResults = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) SetNextToken(v string) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles {
	s.NextToken = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) SetTotalCount(v int32) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfiles {
	s.TotalCount = &v
	return s
}

type ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList struct {
	// The ID of the Alibaba Cloud account to which the resource belongs. We recommend that you use the ResourceOwnerId parameter.
	//
	// example:
	//
	// 161259599160****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the zone in which the resource resides.
	//
	// example:
	//
	// cn-huhehaote-a
	AvailabilityZone *string `json:"AvailabilityZone,omitempty" xml:"AvailabilityZone,omitempty"`
	// The region ID.
	//
	// example:
	//
	// cn-huhehaote
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The time when the resource was created. Unit: milliseconds.
	//
	// example:
	//
	// 1618675206000
	ResourceCreationTime *int64 `json:"ResourceCreationTime,omitempty" xml:"ResourceCreationTime,omitempty"`
	// The status of the resource. Valid values:
	//
	// 	- 0: The resource is deleted.
	//
	// 	- 1: The resource is retained.
	//
	// example:
	//
	// 1
	ResourceDeleted *int32 `json:"ResourceDeleted,omitempty" xml:"ResourceDeleted,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// eni-hp31cqoba96jagtz****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource name.
	//
	// example:
	//
	// Cloud Firewall
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 161259599160****
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
	// The status of the resource. The value of this parameter varies with the resource type and may be empty. Examples:
	//
	// 	- If the value of the ResourceType parameter is ACS::ECS::Instance, the resource is an Elastic Compute Service (ECS) instance that is in a specific state. In this case, the valid values of this parameter are Running and Stopped.
	//
	// 	- If the value of the ResourceType parameter is ACS::OSS::Bucket, the resource is an Object Storage Service (OSS) bucket that is not in a specific state. In this case, this parameter is empty.
	//
	// example:
	//
	// InUse
	ResourceStatus *string `json:"ResourceStatus,omitempty" xml:"ResourceStatus,omitempty"`
	// The resource type.
	//
	// example:
	//
	// ACS::ECS::NetworkInterface
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	//
	// example:
	//
	// {\\"key1\\":[\\"value2\\"]}
	Tags       *string `json:"Tags,omitempty" xml:"Tags,omitempty"`
	UpdateTime *int64  `json:"UpdateTime,omitempty" xml:"UpdateTime,omitempty"`
	// The build version of the resource.
	//
	// example:
	//
	// 1
	Version *int64 `json:"Version,omitempty" xml:"Version,omitempty"`
}

func (s ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) GoString() string {
	return s.String()
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetAccountId(v int64) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.AccountId = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetAvailabilityZone(v string) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.AvailabilityZone = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetRegion(v string) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.Region = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceCreationTime(v int64) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceCreationTime = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceDeleted(v int32) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceDeleted = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceId(v string) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceId = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceName(v string) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceName = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceOwnerId(v int64) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceOwnerId = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceStatus(v string) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceStatus = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceType(v string) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceType = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetTags(v string) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.Tags = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetUpdateTime(v int64) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.UpdateTime = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetVersion(v int64) *ListAggregateDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.Version = &v
	return s
}

type ListAggregateDiscoveredResourcesResponse struct {
	Headers    map[string]*string                            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateDiscoveredResourcesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateDiscoveredResourcesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateDiscoveredResourcesResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateDiscoveredResourcesResponse) SetHeaders(v map[string]*string) *ListAggregateDiscoveredResourcesResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponse) SetStatusCode(v int32) *ListAggregateDiscoveredResourcesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateDiscoveredResourcesResponse) SetBody(v *ListAggregateDiscoveredResourcesResponseBody) *ListAggregateDiscoveredResourcesResponse {
	s.Body = v
	return s
}

type ListAggregateRemediationExecutionsRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-edd3626622af00b3****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The rule ID.
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-2792626622af0c21****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The status of the remediation. Valid values:
	//
	// 	- Success
	//
	// 	- Failed
	//
	// example:
	//
	// Success
	ExecutionStatus *string `json:"ExecutionStatus,omitempty" xml:"ExecutionStatus,omitempty"`
	// The maximum number of entries to return for a single request. Valid values: 10 to 100.
	//
	// example:
	//
	// 10
	MaxResults *int64 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.
	//
	// example:
	//
	// aVCjqFaSy0Ps6zSMGw09****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the member account in the account group.
	//
	// example:
	//
	// 126672004088****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
}

func (s ListAggregateRemediationExecutionsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateRemediationExecutionsRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateRemediationExecutionsRequest) SetAggregatorId(v string) *ListAggregateRemediationExecutionsRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateRemediationExecutionsRequest) SetConfigRuleId(v string) *ListAggregateRemediationExecutionsRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *ListAggregateRemediationExecutionsRequest) SetExecutionStatus(v string) *ListAggregateRemediationExecutionsRequest {
	s.ExecutionStatus = &v
	return s
}

func (s *ListAggregateRemediationExecutionsRequest) SetMaxResults(v int64) *ListAggregateRemediationExecutionsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListAggregateRemediationExecutionsRequest) SetNextToken(v string) *ListAggregateRemediationExecutionsRequest {
	s.NextToken = &v
	return s
}

func (s *ListAggregateRemediationExecutionsRequest) SetResourceAccountId(v int64) *ListAggregateRemediationExecutionsRequest {
	s.ResourceAccountId = &v
	return s
}

type ListAggregateRemediationExecutionsResponseBody struct {
	// The queried remediation records.
	RemediationExecutionData *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData `json:"RemediationExecutionData,omitempty" xml:"RemediationExecutionData,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 13E67493-3165-529A-A961-BE9E4B11BA11
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregateRemediationExecutionsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateRemediationExecutionsResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateRemediationExecutionsResponseBody) SetRemediationExecutionData(v *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData) *ListAggregateRemediationExecutionsResponseBody {
	s.RemediationExecutionData = v
	return s
}

func (s *ListAggregateRemediationExecutionsResponseBody) SetRequestId(v string) *ListAggregateRemediationExecutionsResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData struct {
	// The maximum number of entries returned for a single request.
	//
	// example:
	//
	// 10
	MaxResults *int64 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token. It can be used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// cNclqNaKs0Ds7zSNip0a****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The queried remediation records.
	RemediationExecutions []*ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions `json:"RemediationExecutions,omitempty" xml:"RemediationExecutions,omitempty" type:"Repeated"`
}

func (s ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData) GoString() string {
	return s.String()
}

func (s *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData) SetMaxResults(v int64) *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData {
	s.MaxResults = &v
	return s
}

func (s *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData) SetNextToken(v string) *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData {
	s.NextToken = &v
	return s
}

func (s *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData) SetRemediationExecutions(v []*ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionData {
	s.RemediationExecutions = v
	return s
}

type ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions struct {
	// The time when the remediation record was created.
	//
	// example:
	//
	// 2023-06-25T11:48:15Z
	ExecutionCreateDate *string `json:"ExecutionCreateDate,omitempty" xml:"ExecutionCreateDate,omitempty"`
	// The invocation ID of the remediation record.
	//
	// example:
	//
	// exec-befded3781994ccf****
	ExecutionInvocationId *string `json:"ExecutionInvocationId,omitempty" xml:"ExecutionInvocationId,omitempty"`
	// The IDs of the remediated resources. Multiple resource IDs are separated with commas (,).
	//
	// example:
	//
	// rm-0jlk629z240l8****
	ExecutionResourceIds *string `json:"ExecutionResourceIds,omitempty" xml:"ExecutionResourceIds,omitempty"`
	// The resource type.
	//
	// example:
	//
	// ACS::RDS::DBInstance
	ExecutionResourceType *string `json:"ExecutionResourceType,omitempty" xml:"ExecutionResourceType,omitempty"`
	// The status of the remediation. Valid values:
	//
	// 	- Success
	//
	// 	- Failed
	//
	// example:
	//
	// Success
	ExecutionStatus *string `json:"ExecutionStatus,omitempty" xml:"ExecutionStatus,omitempty"`
	// The error message returned when the remediation fails.
	//
	// example:
	//
	// Invocation time out.
	ExecutionStatusMessage *string `json:"ExecutionStatusMessage,omitempty" xml:"ExecutionStatusMessage,omitempty"`
}

func (s ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) GoString() string {
	return s.String()
}

func (s *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionCreateDate(v string) *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionCreateDate = &v
	return s
}

func (s *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionInvocationId(v string) *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionInvocationId = &v
	return s
}

func (s *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionResourceIds(v string) *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionResourceIds = &v
	return s
}

func (s *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionResourceType(v string) *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionResourceType = &v
	return s
}

func (s *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionStatus(v string) *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionStatus = &v
	return s
}

func (s *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionStatusMessage(v string) *ListAggregateRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionStatusMessage = &v
	return s
}

type ListAggregateRemediationExecutionsResponse struct {
	Headers    map[string]*string                              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateRemediationExecutionsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateRemediationExecutionsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateRemediationExecutionsResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateRemediationExecutionsResponse) SetHeaders(v map[string]*string) *ListAggregateRemediationExecutionsResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateRemediationExecutionsResponse) SetStatusCode(v int32) *ListAggregateRemediationExecutionsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateRemediationExecutionsResponse) SetBody(v *ListAggregateRemediationExecutionsResponseBody) *ListAggregateRemediationExecutionsResponse {
	s.Body = v
	return s
}

type ListAggregateRemediationsRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-6b4a626622af0012****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The rule IDs. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-6b7c626622af00b4****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
}

func (s ListAggregateRemediationsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateRemediationsRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateRemediationsRequest) SetAggregatorId(v string) *ListAggregateRemediationsRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateRemediationsRequest) SetConfigRuleIds(v string) *ListAggregateRemediationsRequest {
	s.ConfigRuleIds = &v
	return s
}

type ListAggregateRemediationsResponseBody struct {
	// An array that contains remediation templates.
	Remediations []*ListAggregateRemediationsResponseBodyRemediations `json:"Remediations,omitempty" xml:"Remediations,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 0146963A-20C0-4E75-B93A-7D622B5FD7C8
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregateRemediationsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateRemediationsResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateRemediationsResponseBody) SetRemediations(v []*ListAggregateRemediationsResponseBodyRemediations) *ListAggregateRemediationsResponseBody {
	s.Remediations = v
	return s
}

func (s *ListAggregateRemediationsResponseBody) SetRequestId(v string) *ListAggregateRemediationsResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregateRemediationsResponseBodyRemediations struct {
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The ID of the account group.
	//
	// example:
	//
	// ca-6b4a626622af0012****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The rule ID.
	//
	// example:
	//
	// cr-6b7c626622af00b4****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The execution mode of the remediation template. Valid values:
	//
	// 	- NON_EXECUTION: The remediation template is not executed.
	//
	// 	- AUTO_EXECUTION: The remediation template is automatically executed.
	//
	// 	- MANUAL_EXECUTION: The remediation template is manually executed.
	//
	// 	- NOT_CONFIG: The execution mode is not specified.
	//
	// example:
	//
	// AUTO_EXECUTION
	InvokeType *string `json:"InvokeType,omitempty" xml:"InvokeType,omitempty"`
	// The ID of the last successful execution of the remediation template.
	//
	// example:
	//
	// bd7629fb-cac8-42fe-bcb1-e362c5a6****
	LastSuccessfulInvocationId *string `json:"LastSuccessfulInvocationId,omitempty" xml:"LastSuccessfulInvocationId,omitempty"`
	// The timestamp of the last successful execution of the remediation template. Unit: milliseconds.
	//
	// example:
	//
	// 1625451393589
	LastSuccessfulInvocationTime *int64 `json:"LastSuccessfulInvocationTime,omitempty" xml:"LastSuccessfulInvocationTime,omitempty"`
	// The mode of the last successful execution of the remediation template. Valid values:
	//
	// 	- NON_EXECUTION: The remediation template is not executed.
	//
	// 	- AUTO_EXECUTION: The remediation template is automatically executed.
	//
	// 	- MANUAL_EXECUTION: The remediation template is manually executed.
	//
	// 	- NOT_CONFIG: The execution mode is not specified.
	//
	// example:
	//
	// AUTO_EXECUTION
	LastSuccessfulInvocationType *string `json:"LastSuccessfulInvocationType,omitempty" xml:"LastSuccessfulInvocationType,omitempty"`
	// The converted configuration of the remediation template. This parameter is returned only for an OOS remediation template.
	//
	// example:
	//
	// {"bucketName": "{resourceId}", "regionId": "{regionId}", "permissionName": "private"}
	RemediaitonOriginParams *string `json:"RemediaitonOriginParams,omitempty" xml:"RemediaitonOriginParams,omitempty"`
	// The ID of the remediation template.
	//
	// example:
	//
	// crr-6b7c626622af0026****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// The source of remediation template. Valid values:
	//
	// 	- ALIYUN: official template.
	//
	// 	- CUSTOM: custom template.
	//
	// 	- NONE: none.
	//
	// example:
	//
	// ALIYUN
	RemediationSourceType *string `json:"RemediationSourceType,omitempty" xml:"RemediationSourceType,omitempty"`
	// The ID of the remediation template.
	//
	// example:
	//
	// ACS-OSS-PutBucketAcl
	RemediationTemplateId *string `json:"RemediationTemplateId,omitempty" xml:"RemediationTemplateId,omitempty"`
	// The type of the remediation template. Valid values:
	//
	// 	- OOS: Operation Orchestration Service (official remediation).
	//
	// 	- FC: Function Compute (custom remediation).
	//
	// example:
	//
	// OOS
	RemediationType *string `json:"RemediationType,omitempty" xml:"RemediationType,omitempty"`
}

func (s ListAggregateRemediationsResponseBodyRemediations) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateRemediationsResponseBodyRemediations) GoString() string {
	return s.String()
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetAccountId(v int64) *ListAggregateRemediationsResponseBodyRemediations {
	s.AccountId = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetAggregatorId(v string) *ListAggregateRemediationsResponseBodyRemediations {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetConfigRuleId(v string) *ListAggregateRemediationsResponseBodyRemediations {
	s.ConfigRuleId = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetInvokeType(v string) *ListAggregateRemediationsResponseBodyRemediations {
	s.InvokeType = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetLastSuccessfulInvocationId(v string) *ListAggregateRemediationsResponseBodyRemediations {
	s.LastSuccessfulInvocationId = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetLastSuccessfulInvocationTime(v int64) *ListAggregateRemediationsResponseBodyRemediations {
	s.LastSuccessfulInvocationTime = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetLastSuccessfulInvocationType(v string) *ListAggregateRemediationsResponseBodyRemediations {
	s.LastSuccessfulInvocationType = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetRemediaitonOriginParams(v string) *ListAggregateRemediationsResponseBodyRemediations {
	s.RemediaitonOriginParams = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetRemediationId(v string) *ListAggregateRemediationsResponseBodyRemediations {
	s.RemediationId = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetRemediationSourceType(v string) *ListAggregateRemediationsResponseBodyRemediations {
	s.RemediationSourceType = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetRemediationTemplateId(v string) *ListAggregateRemediationsResponseBodyRemediations {
	s.RemediationTemplateId = &v
	return s
}

func (s *ListAggregateRemediationsResponseBodyRemediations) SetRemediationType(v string) *ListAggregateRemediationsResponseBodyRemediations {
	s.RemediationType = &v
	return s
}

type ListAggregateRemediationsResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateRemediationsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateRemediationsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateRemediationsResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateRemediationsResponse) SetHeaders(v map[string]*string) *ListAggregateRemediationsResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateRemediationsResponse) SetStatusCode(v int32) *ListAggregateRemediationsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateRemediationsResponse) SetBody(v *ListAggregateRemediationsResponseBody) *ListAggregateRemediationsResponse {
	s.Body = v
	return s
}

type ListAggregateResourceEvaluationResultsRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-7f00626622af0041****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The compliance evaluation result of the resource. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resource.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// 	- IGNORED: The resource is ignored during compliance evaluation.
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The maximum number of entries to return for a single request. Valid values: 1 to 100.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The token that you want to use to initiate the current request. If the response of the previous request is truncated, you can use this token to initiate another request and obtain the remaining entries.``
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region where one or more resources that you want to query reside. For example, the value `global` indicates global regions and the value `cn-hangzhou` indicates the China (Hangzhou) region.
	//
	// For more information about how to obtain the ID of a region, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// example:
	//
	// global
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the resource.
	//
	// For more information about how to obtain the ID of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// example:
	//
	// 23642660635396****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource.
	//
	// For more information about how to query the type of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// example:
	//
	// ACS::RAM::User
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s ListAggregateResourceEvaluationResultsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceEvaluationResultsRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceEvaluationResultsRequest) SetAggregatorId(v string) *ListAggregateResourceEvaluationResultsRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsRequest) SetComplianceType(v string) *ListAggregateResourceEvaluationResultsRequest {
	s.ComplianceType = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsRequest) SetMaxResults(v int32) *ListAggregateResourceEvaluationResultsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsRequest) SetNextToken(v string) *ListAggregateResourceEvaluationResultsRequest {
	s.NextToken = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsRequest) SetRegion(v string) *ListAggregateResourceEvaluationResultsRequest {
	s.Region = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsRequest) SetResourceId(v string) *ListAggregateResourceEvaluationResultsRequest {
	s.ResourceId = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsRequest) SetResourceType(v string) *ListAggregateResourceEvaluationResultsRequest {
	s.ResourceType = &v
	return s
}

type ListAggregateResourceEvaluationResultsResponseBody struct {
	// The information about the compliance evaluation results returned.
	EvaluationResults *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults `json:"EvaluationResults,omitempty" xml:"EvaluationResults,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// 25C89DDB-BB79-487D-88C3-4A561F21EFC4
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregateResourceEvaluationResultsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceEvaluationResultsResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceEvaluationResultsResponseBody) SetEvaluationResults(v *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults) *ListAggregateResourceEvaluationResultsResponseBody {
	s.EvaluationResults = v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBody) SetRequestId(v string) *ListAggregateResourceEvaluationResultsResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults struct {
	// The details of the compliance evaluation result.
	EvaluationResultList []*ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList `json:"EvaluationResultList,omitempty" xml:"EvaluationResultList,omitempty" type:"Repeated"`
	// The maximum number of entries returned on each page.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The token that was used to initiate the next request.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults) SetEvaluationResultList(v []*ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults {
	s.EvaluationResultList = v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults) SetMaxResults(v int32) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults {
	s.MaxResults = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults) SetNextToken(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResults {
	s.NextToken = &v
	return s
}

type ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList struct {
	// The annotation to the resource that is evaluated as incompliant.
	//
	// example:
	//
	// {\\"configuration\\":\\"false\\",\\"desiredValue\\":\\"True\\",\\"operator\\":\\"StringEquals\\",\\"property\\":\\"$.LoginProfile.MFABindRequired\\"}
	Annotation *string `json:"Annotation,omitempty" xml:"Annotation,omitempty"`
	// The compliance evaluation result of the resources. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as incompliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to your resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data is available.
	//
	// 	- IGNORED: The resource is ignored during compliance evaluation.
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The timestamp when the rule was triggered. Unit: milliseconds.
	//
	// example:
	//
	// 1624932227157
	ConfigRuleInvokedTimestamp *int64 `json:"ConfigRuleInvokedTimestamp,omitempty" xml:"ConfigRuleInvokedTimestamp,omitempty"`
	// The identifying information about the compliance evaluation result.
	EvaluationResultIdentifier *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier `json:"EvaluationResultIdentifier,omitempty" xml:"EvaluationResultIdentifier,omitempty" type:"Struct"`
	// The trigger type of the managed rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The managed rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The managed rule is periodically triggered.
	//
	// example:
	//
	// ScheduledNotification
	InvokingEventMessageType *string `json:"InvokingEventMessageType,omitempty" xml:"InvokingEventMessageType,omitempty"`
	// Indicates whether the remediation template is enabled. Valid values:
	//
	// - true: The remediation template is enabled.
	//
	// - false: The remediation template is disabled.
	//
	// example:
	//
	// false
	RemediationEnabled *bool `json:"RemediationEnabled,omitempty" xml:"RemediationEnabled,omitempty"`
	// The timestamp when the compliance evaluation result was recorded. Unit: milliseconds.
	//
	// example:
	//
	// 1624932227595
	ResultRecordedTimestamp *int64 `json:"ResultRecordedTimestamp,omitempty" xml:"ResultRecordedTimestamp,omitempty"`
	// The risk level of the resources that are not compliant with the rule. Valid values:
	//
	// 	- 1: high risk level
	//
	// 	- 2: medium risk level
	//
	// 	- 3: low risk level
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetAnnotation(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.Annotation = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetComplianceType(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ComplianceType = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetConfigRuleInvokedTimestamp(v int64) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ConfigRuleInvokedTimestamp = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetEvaluationResultIdentifier(v *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.EvaluationResultIdentifier = v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetInvokingEventMessageType(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.InvokingEventMessageType = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetRemediationEnabled(v bool) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.RemediationEnabled = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetResultRecordedTimestamp(v int64) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ResultRecordedTimestamp = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetRiskLevel(v int32) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.RiskLevel = &v
	return s
}

type ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier struct {
	// The information about the evaluated resource in the compliance evaluation result.
	EvaluationResultQualifier *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier `json:"EvaluationResultQualifier,omitempty" xml:"EvaluationResultQualifier,omitempty" type:"Struct"`
	// The timestamp when the compliance evaluation was performed. Unit: milliseconds.
	//
	// example:
	//
	// 1624932227157
	OrderingTimestamp *int64 `json:"OrderingTimestamp,omitempty" xml:"OrderingTimestamp,omitempty"`
}

func (s ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) SetEvaluationResultQualifier(v *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier {
	s.EvaluationResultQualifier = v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) SetOrderingTimestamp(v int64) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier {
	s.OrderingTimestamp = &v
	return s
}

type ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier struct {
	// The Alibaba Cloud Resource Name (ARN) of the rule.
	//
	// example:
	//
	// acs:config::100931896542****:rule/cr-7f7d626622af0041****
	ConfigRuleArn *string `json:"ConfigRuleArn,omitempty" xml:"ConfigRuleArn,omitempty"`
	// The ID of the rule.
	//
	// example:
	//
	// cr-7f7d626622af0041****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the monitoring rule.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The date from which the system automatically re-evaluates the ignored incompliant resources.
	//
	// >  If the value of this parameter is left empty, the system does not automatically re-evaluate the ignored incompliant resources. You must manually re-evaluate the ignored incompliant resources.
	//
	// example:
	//
	// 2022-06-01
	IgnoreDate *string `json:"IgnoreDate,omitempty" xml:"IgnoreDate,omitempty"`
	// The ID of the region where the resource resides.
	//
	// example:
	//
	// global
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The ID of the resource.
	//
	// example:
	//
	// 23642660635396****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The name of the resource.
	//
	// example:
	//
	// rd_member
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::RAM::User
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleArn(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleArn = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleId(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleId = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleName(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleName = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetIgnoreDate(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.IgnoreDate = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetRegionId(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.RegionId = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceId(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceId = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceName(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceName = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceType(v string) *ListAggregateResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceType = &v
	return s
}

type ListAggregateResourceEvaluationResultsResponse struct {
	Headers    map[string]*string                                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateResourceEvaluationResultsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateResourceEvaluationResultsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceEvaluationResultsResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceEvaluationResultsResponse) SetHeaders(v map[string]*string) *ListAggregateResourceEvaluationResultsResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponse) SetStatusCode(v int32) *ListAggregateResourceEvaluationResultsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateResourceEvaluationResultsResponse) SetBody(v *ListAggregateResourceEvaluationResultsResponseBody) *ListAggregateResourceEvaluationResultsResponse {
	s.Body = v
	return s
}

type ListAggregateResourceRelationsRequest struct {
	// The ID of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-856a626622af0033****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The maximum number of entries to return for a single request. Valid values: 1 to 1000.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.
	//
	// example:
	//
	// AcBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region in which the resource resides.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-shanghai
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The type of the relationship between the resource and the object.
	//
	// Valid values:
	//
	// 	- IsContained: The object is included as part of the resource.
	//
	// 	- IsAttachedTo: The object is added to the resource.
	//
	// 	- IsAssociatedIn: The object is associated with the resource.
	//
	// 	- Contains: The object contains the resource.
	//
	// example:
	//
	// IsAttachedTo
	RelationType *string `json:"RelationType,omitempty" xml:"RelationType,omitempty"`
	// The ID of the Alibaba Cloud account to which the resources in the account group belong.
	//
	// This parameter is required.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// The resource ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// i-j6cajg9yrfoh4sas****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource.
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The ID of the resource that is associated with the object.
	//
	// example:
	//
	// d-j6c8k731qbrc7fxi****
	TargetResourceId *string `json:"TargetResourceId,omitempty" xml:"TargetResourceId,omitempty"`
	// The type of the resource that is associated with the object.
	//
	// example:
	//
	// ACS::ECS::Disk
	TargetResourceType *string `json:"TargetResourceType,omitempty" xml:"TargetResourceType,omitempty"`
}

func (s ListAggregateResourceRelationsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceRelationsRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceRelationsRequest) SetAggregatorId(v string) *ListAggregateResourceRelationsRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateResourceRelationsRequest) SetMaxResults(v int32) *ListAggregateResourceRelationsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListAggregateResourceRelationsRequest) SetNextToken(v string) *ListAggregateResourceRelationsRequest {
	s.NextToken = &v
	return s
}

func (s *ListAggregateResourceRelationsRequest) SetRegion(v string) *ListAggregateResourceRelationsRequest {
	s.Region = &v
	return s
}

func (s *ListAggregateResourceRelationsRequest) SetRelationType(v string) *ListAggregateResourceRelationsRequest {
	s.RelationType = &v
	return s
}

func (s *ListAggregateResourceRelationsRequest) SetResourceAccountId(v int64) *ListAggregateResourceRelationsRequest {
	s.ResourceAccountId = &v
	return s
}

func (s *ListAggregateResourceRelationsRequest) SetResourceId(v string) *ListAggregateResourceRelationsRequest {
	s.ResourceId = &v
	return s
}

func (s *ListAggregateResourceRelationsRequest) SetResourceType(v string) *ListAggregateResourceRelationsRequest {
	s.ResourceType = &v
	return s
}

func (s *ListAggregateResourceRelationsRequest) SetTargetResourceId(v string) *ListAggregateResourceRelationsRequest {
	s.TargetResourceId = &v
	return s
}

func (s *ListAggregateResourceRelationsRequest) SetTargetResourceType(v string) *ListAggregateResourceRelationsRequest {
	s.TargetResourceType = &v
	return s
}

type ListAggregateResourceRelationsResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 7A25F9DE-4C8B-5AD3-A241-FFF5A259E5A1
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The result of the relationship.
	ResourceRelations *ListAggregateResourceRelationsResponseBodyResourceRelations `json:"ResourceRelations,omitempty" xml:"ResourceRelations,omitempty" type:"Struct"`
}

func (s ListAggregateResourceRelationsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceRelationsResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceRelationsResponseBody) SetRequestId(v string) *ListAggregateResourceRelationsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListAggregateResourceRelationsResponseBody) SetResourceRelations(v *ListAggregateResourceRelationsResponseBodyResourceRelations) *ListAggregateResourceRelationsResponseBody {
	s.ResourceRelations = v
	return s
}

type ListAggregateResourceRelationsResponseBodyResourceRelations struct {
	// The maximum number of entries returned on each page.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The token that was used to initiate the next request.
	//
	// example:
	//
	// AcBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// An array that contains the relationships.
	ResourceRelationList []*ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList `json:"ResourceRelationList,omitempty" xml:"ResourceRelationList,omitempty" type:"Repeated"`
}

func (s ListAggregateResourceRelationsResponseBodyResourceRelations) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceRelationsResponseBodyResourceRelations) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceRelationsResponseBodyResourceRelations) SetMaxResults(v int32) *ListAggregateResourceRelationsResponseBodyResourceRelations {
	s.MaxResults = &v
	return s
}

func (s *ListAggregateResourceRelationsResponseBodyResourceRelations) SetNextToken(v string) *ListAggregateResourceRelationsResponseBodyResourceRelations {
	s.NextToken = &v
	return s
}

func (s *ListAggregateResourceRelationsResponseBodyResourceRelations) SetResourceRelationList(v []*ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList) *ListAggregateResourceRelationsResponseBodyResourceRelations {
	s.ResourceRelationList = v
	return s
}

type ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList struct {
	// The Alibaba Cloud account ID of the resource owner.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The type of the relationship between the resource and the object.
	//
	// Valid values:
	//
	// 	- IsContained: The object is included as part of the resource.
	//
	// 	- IsAttachedTo: The object is added to the resource.
	//
	// 	- IsAssociatedIn: The object is associated with the resource.
	//
	// 	- Contains: The object contains the resource.
	//
	// example:
	//
	// IsAttachedTo
	RelationType *string `json:"RelationType,omitempty" xml:"RelationType,omitempty"`
	// The resource ID of the current resource.
	//
	// example:
	//
	// i-j6cajg9yrfoh4sas****
	SourceResourceId *string `json:"SourceResourceId,omitempty" xml:"SourceResourceId,omitempty"`
	// The region ID of the current resource.
	//
	// example:
	//
	// cn-shanghai
	SourceResourceRegionId *string `json:"SourceResourceRegionId,omitempty" xml:"SourceResourceRegionId,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::ECS::Instance
	SourceResourceType *string `json:"SourceResourceType,omitempty" xml:"SourceResourceType,omitempty"`
	// The resource ID of the resource that is associated with the object.
	//
	// example:
	//
	// d-j6c8k731qbrc7fxi****
	TargetResourceId *string `json:"TargetResourceId,omitempty" xml:"TargetResourceId,omitempty"`
	// The type of the resource that is associated with the object.
	//
	// example:
	//
	// ACS::ECS::Disk
	TargetResourceType *string `json:"TargetResourceType,omitempty" xml:"TargetResourceType,omitempty"`
}

func (s ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetAccountId(v int64) *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.AccountId = &v
	return s
}

func (s *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetRelationType(v string) *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.RelationType = &v
	return s
}

func (s *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetSourceResourceId(v string) *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.SourceResourceId = &v
	return s
}

func (s *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetSourceResourceRegionId(v string) *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.SourceResourceRegionId = &v
	return s
}

func (s *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetSourceResourceType(v string) *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.SourceResourceType = &v
	return s
}

func (s *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetTargetResourceId(v string) *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.TargetResourceId = &v
	return s
}

func (s *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetTargetResourceType(v string) *ListAggregateResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.TargetResourceType = &v
	return s
}

type ListAggregateResourceRelationsResponse struct {
	Headers    map[string]*string                          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateResourceRelationsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateResourceRelationsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourceRelationsResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateResourceRelationsResponse) SetHeaders(v map[string]*string) *ListAggregateResourceRelationsResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateResourceRelationsResponse) SetStatusCode(v int32) *ListAggregateResourceRelationsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateResourceRelationsResponse) SetBody(v *ListAggregateResourceRelationsResponseBody) *ListAggregateResourceRelationsResponse {
	s.Body = v
	return s
}

type ListAggregateResourcesByAdvancedSearchRequest struct {
	// The ID of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-4b05626622af000c****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The SQL query statement.
	//
	// This parameter is required.
	//
	// example:
	//
	// SELECT ResourceId, ResourceName WHERE Tags.Kvpair=\\"business:online\\"
	Sql *string `json:"Sql,omitempty" xml:"Sql,omitempty"`
}

func (s ListAggregateResourcesByAdvancedSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourcesByAdvancedSearchRequest) GoString() string {
	return s.String()
}

func (s *ListAggregateResourcesByAdvancedSearchRequest) SetAggregatorId(v string) *ListAggregateResourcesByAdvancedSearchRequest {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregateResourcesByAdvancedSearchRequest) SetSql(v string) *ListAggregateResourcesByAdvancedSearchRequest {
	s.Sql = &v
	return s
}

type ListAggregateResourcesByAdvancedSearchResponseBody struct {
	// The returned data.
	QueryResults *ListAggregateResourcesByAdvancedSearchResponseBodyQueryResults `json:"QueryResults,omitempty" xml:"QueryResults,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// B0DBF868-460F-5E7C-8F76-1ACE2FCCE153
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregateResourcesByAdvancedSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourcesByAdvancedSearchResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregateResourcesByAdvancedSearchResponseBody) SetQueryResults(v *ListAggregateResourcesByAdvancedSearchResponseBodyQueryResults) *ListAggregateResourcesByAdvancedSearchResponseBody {
	s.QueryResults = v
	return s
}

func (s *ListAggregateResourcesByAdvancedSearchResponseBody) SetRequestId(v string) *ListAggregateResourcesByAdvancedSearchResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregateResourcesByAdvancedSearchResponseBodyQueryResults struct {
	// The queried resources. A maximum of 1,000 data records can be returned. To view more data, use the download URL of the resource file.
	QueryResultList *ListAggregateResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList `json:"QueryResultList,omitempty" xml:"QueryResultList,omitempty" type:"Struct"`
}

func (s ListAggregateResourcesByAdvancedSearchResponseBodyQueryResults) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourcesByAdvancedSearchResponseBodyQueryResults) GoString() string {
	return s.String()
}

func (s *ListAggregateResourcesByAdvancedSearchResponseBodyQueryResults) SetQueryResultList(v *ListAggregateResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList) *ListAggregateResourcesByAdvancedSearchResponseBodyQueryResults {
	s.QueryResultList = v
	return s
}

type ListAggregateResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList struct {
	// The field names.
	Columns []*string `json:"Columns,omitempty" xml:"Columns,omitempty" type:"Repeated"`
	// The resource data.
	Values []interface{} `json:"Values,omitempty" xml:"Values,omitempty" type:"Repeated"`
}

func (s ListAggregateResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList) GoString() string {
	return s.String()
}

func (s *ListAggregateResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList) SetColumns(v []*string) *ListAggregateResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList {
	s.Columns = v
	return s
}

func (s *ListAggregateResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList) SetValues(v []interface{}) *ListAggregateResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList {
	s.Values = v
	return s
}

type ListAggregateResourcesByAdvancedSearchResponse struct {
	Headers    map[string]*string                                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregateResourcesByAdvancedSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregateResourcesByAdvancedSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregateResourcesByAdvancedSearchResponse) GoString() string {
	return s.String()
}

func (s *ListAggregateResourcesByAdvancedSearchResponse) SetHeaders(v map[string]*string) *ListAggregateResourcesByAdvancedSearchResponse {
	s.Headers = v
	return s
}

func (s *ListAggregateResourcesByAdvancedSearchResponse) SetStatusCode(v int32) *ListAggregateResourcesByAdvancedSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregateResourcesByAdvancedSearchResponse) SetBody(v *ListAggregateResourcesByAdvancedSearchResponseBody) *ListAggregateResourcesByAdvancedSearchResponse {
	s.Body = v
	return s
}

type ListAggregatorsRequest struct {
	// The maximum number of entries to return in a request. Valid values: 1 to 100.
	//
	// This parameter is required.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of `NextToken`.
	//
	// example:
	//
	// TGlzdFJlc291cmNlU2hhcmVzJjE1MTI2NjY4NzY5MTAzOTEmMiZORnI4NDhVeEtrUT0
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*ListAggregatorsRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s ListAggregatorsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregatorsRequest) GoString() string {
	return s.String()
}

func (s *ListAggregatorsRequest) SetMaxResults(v int32) *ListAggregatorsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListAggregatorsRequest) SetNextToken(v string) *ListAggregatorsRequest {
	s.NextToken = &v
	return s
}

func (s *ListAggregatorsRequest) SetTag(v []*ListAggregatorsRequestTag) *ListAggregatorsRequest {
	s.Tag = v
	return s
}

type ListAggregatorsRequestTag struct {
	// The tag key of the resource. You can specify up to 20 tag keys.
	//
	// The tag key cannot be an empty string. The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs`:. The tag key cannot contain `http://` or `https://`.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListAggregatorsRequestTag) String() string {
	return tea.Prettify(s)
}

func (s ListAggregatorsRequestTag) GoString() string {
	return s.String()
}

func (s *ListAggregatorsRequestTag) SetKey(v string) *ListAggregatorsRequestTag {
	s.Key = &v
	return s
}

func (s *ListAggregatorsRequestTag) SetValue(v string) *ListAggregatorsRequestTag {
	s.Value = &v
	return s
}

type ListAggregatorsShrinkRequest struct {
	// The maximum number of entries to return in a request. Valid values: 1 to 100.
	//
	// This parameter is required.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of `NextToken`.
	//
	// example:
	//
	// TGlzdFJlc291cmNlU2hhcmVzJjE1MTI2NjY4NzY5MTAzOTEmMiZORnI4NDhVeEtrUT0
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s ListAggregatorsShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAggregatorsShrinkRequest) GoString() string {
	return s.String()
}

func (s *ListAggregatorsShrinkRequest) SetMaxResults(v int32) *ListAggregatorsShrinkRequest {
	s.MaxResults = &v
	return s
}

func (s *ListAggregatorsShrinkRequest) SetNextToken(v string) *ListAggregatorsShrinkRequest {
	s.NextToken = &v
	return s
}

func (s *ListAggregatorsShrinkRequest) SetTagShrink(v string) *ListAggregatorsShrinkRequest {
	s.TagShrink = &v
	return s
}

type ListAggregatorsResponseBody struct {
	// The account groups.
	AggregatorsResult *ListAggregatorsResponseBodyAggregatorsResult `json:"AggregatorsResult,omitempty" xml:"AggregatorsResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 20C8526D-12C5-4336-BC72-EBD5D1BA732F
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListAggregatorsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAggregatorsResponseBody) GoString() string {
	return s.String()
}

func (s *ListAggregatorsResponseBody) SetAggregatorsResult(v *ListAggregatorsResponseBodyAggregatorsResult) *ListAggregatorsResponseBody {
	s.AggregatorsResult = v
	return s
}

func (s *ListAggregatorsResponseBody) SetRequestId(v string) *ListAggregatorsResponseBody {
	s.RequestId = &v
	return s
}

type ListAggregatorsResponseBodyAggregatorsResult struct {
	// The list of the account groups.
	Aggregators []*ListAggregatorsResponseBodyAggregatorsResultAggregators `json:"Aggregators,omitempty" xml:"Aggregators,omitempty" type:"Repeated"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of `NextToken`.
	//
	// example:
	//
	// TGlzdFJlc291cmNlU2hhcmVzJjE1MTI2NjY4NzY5MTAzOTEmMiZORnI4NDhVeEtrUT0
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s ListAggregatorsResponseBodyAggregatorsResult) String() string {
	return tea.Prettify(s)
}

func (s ListAggregatorsResponseBodyAggregatorsResult) GoString() string {
	return s.String()
}

func (s *ListAggregatorsResponseBodyAggregatorsResult) SetAggregators(v []*ListAggregatorsResponseBodyAggregatorsResultAggregators) *ListAggregatorsResponseBodyAggregatorsResult {
	s.Aggregators = v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResult) SetNextToken(v string) *ListAggregatorsResponseBodyAggregatorsResult {
	s.NextToken = &v
	return s
}

type ListAggregatorsResponseBodyAggregatorsResultAggregators struct {
	// The ID of the management account that is used to create the account group.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The number of member accounts in the account group.
	//
	// example:
	//
	// 2
	AggregatorAccountCount *int64 `json:"AggregatorAccountCount,omitempty" xml:"AggregatorAccountCount,omitempty"`
	// The timestamp generated when the account group was created.
	//
	// example:
	//
	// 1623036305000
	AggregatorCreateTimestamp *int64 `json:"AggregatorCreateTimestamp,omitempty" xml:"AggregatorCreateTimestamp,omitempty"`
	// The ID of the account group.
	//
	// example:
	//
	// ca-88ea626622af0055****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The name of the account group.
	//
	// example:
	//
	// Test_Group
	AggregatorName *string `json:"AggregatorName,omitempty" xml:"AggregatorName,omitempty"`
	// The status of the account group. Valid values:
	//
	// 	- 0: The account group is being created.
	//
	// 	- 1: The account group was created.
	//
	// example:
	//
	// 1
	AggregatorStatus *int32 `json:"AggregatorStatus,omitempty" xml:"AggregatorStatus,omitempty"`
	// The type of the account group. Valid values:
	//
	// 	- RD: global account group.
	//
	// 	- FOLDER: account group of the folder.
	//
	// 	- CUSTOM: custom account group.
	//
	// example:
	//
	// CUSTOM
	AggregatorType *string `json:"AggregatorType,omitempty" xml:"AggregatorType,omitempty"`
	// The description of the account group.
	//
	// example:
	//
	// Example-description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The ID of the folder.
	//
	// example:
	//
	// r-BU****
	FolderId *string `json:"FolderId,omitempty" xml:"FolderId,omitempty"`
	// tags
	Tags []*ListAggregatorsResponseBodyAggregatorsResultAggregatorsTags `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s ListAggregatorsResponseBodyAggregatorsResultAggregators) String() string {
	return tea.Prettify(s)
}

func (s ListAggregatorsResponseBodyAggregatorsResultAggregators) GoString() string {
	return s.String()
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregators) SetAccountId(v int64) *ListAggregatorsResponseBodyAggregatorsResultAggregators {
	s.AccountId = &v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregators) SetAggregatorAccountCount(v int64) *ListAggregatorsResponseBodyAggregatorsResultAggregators {
	s.AggregatorAccountCount = &v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregators) SetAggregatorCreateTimestamp(v int64) *ListAggregatorsResponseBodyAggregatorsResultAggregators {
	s.AggregatorCreateTimestamp = &v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregators) SetAggregatorId(v string) *ListAggregatorsResponseBodyAggregatorsResultAggregators {
	s.AggregatorId = &v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregators) SetAggregatorName(v string) *ListAggregatorsResponseBodyAggregatorsResultAggregators {
	s.AggregatorName = &v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregators) SetAggregatorStatus(v int32) *ListAggregatorsResponseBodyAggregatorsResultAggregators {
	s.AggregatorStatus = &v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregators) SetAggregatorType(v string) *ListAggregatorsResponseBodyAggregatorsResultAggregators {
	s.AggregatorType = &v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregators) SetDescription(v string) *ListAggregatorsResponseBodyAggregatorsResultAggregators {
	s.Description = &v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregators) SetFolderId(v string) *ListAggregatorsResponseBodyAggregatorsResultAggregators {
	s.FolderId = &v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregators) SetTags(v []*ListAggregatorsResponseBodyAggregatorsResultAggregatorsTags) *ListAggregatorsResponseBodyAggregatorsResultAggregators {
	s.Tags = v
	return s
}

type ListAggregatorsResponseBodyAggregatorsResultAggregatorsTags struct {
	// The tag keys of the resource.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag values of the resource.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s ListAggregatorsResponseBodyAggregatorsResultAggregatorsTags) String() string {
	return tea.Prettify(s)
}

func (s ListAggregatorsResponseBodyAggregatorsResultAggregatorsTags) GoString() string {
	return s.String()
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregatorsTags) SetTagKey(v string) *ListAggregatorsResponseBodyAggregatorsResultAggregatorsTags {
	s.TagKey = &v
	return s
}

func (s *ListAggregatorsResponseBodyAggregatorsResultAggregatorsTags) SetTagValue(v string) *ListAggregatorsResponseBodyAggregatorsResultAggregatorsTags {
	s.TagValue = &v
	return s
}

type ListAggregatorsResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAggregatorsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAggregatorsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAggregatorsResponse) GoString() string {
	return s.String()
}

func (s *ListAggregatorsResponse) SetHeaders(v map[string]*string) *ListAggregatorsResponse {
	s.Headers = v
	return s
}

func (s *ListAggregatorsResponse) SetStatusCode(v int32) *ListAggregatorsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAggregatorsResponse) SetBody(v *ListAggregatorsResponseBody) *ListAggregatorsResponse {
	s.Body = v
	return s
}

type ListCompliancePackTemplatesRequest struct {
	// The ID of the compliance package template.
	//
	// example:
	//
	// ct-d254ff4e06a300cf****
	CompliancePackTemplateId *string `json:"CompliancePackTemplateId,omitempty" xml:"CompliancePackTemplateId,omitempty"`
	// The page number.
	//
	// Pages start from page 1. Default value: 1
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page.
	//
	// Valid values: 1 to 100. Minimum value: 1. Default value: 10.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The types of the resources evaluated based on the rule. If you configure this parameter, only the rules that include the resource types in the compliance package template are returned.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
}

func (s ListCompliancePackTemplatesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePackTemplatesRequest) GoString() string {
	return s.String()
}

func (s *ListCompliancePackTemplatesRequest) SetCompliancePackTemplateId(v string) *ListCompliancePackTemplatesRequest {
	s.CompliancePackTemplateId = &v
	return s
}

func (s *ListCompliancePackTemplatesRequest) SetPageNumber(v int32) *ListCompliancePackTemplatesRequest {
	s.PageNumber = &v
	return s
}

func (s *ListCompliancePackTemplatesRequest) SetPageSize(v int32) *ListCompliancePackTemplatesRequest {
	s.PageSize = &v
	return s
}

func (s *ListCompliancePackTemplatesRequest) SetResourceTypes(v string) *ListCompliancePackTemplatesRequest {
	s.ResourceTypes = &v
	return s
}

type ListCompliancePackTemplatesResponseBody struct {
	// The information about the compliance package templates returned.
	CompliancePackTemplatesResult *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult `json:"CompliancePackTemplatesResult,omitempty" xml:"CompliancePackTemplatesResult,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// D67FC82F-25AE-4268-A94C-3348340748F9
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListCompliancePackTemplatesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePackTemplatesResponseBody) GoString() string {
	return s.String()
}

func (s *ListCompliancePackTemplatesResponseBody) SetCompliancePackTemplatesResult(v *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult) *ListCompliancePackTemplatesResponseBody {
	s.CompliancePackTemplatesResult = v
	return s
}

func (s *ListCompliancePackTemplatesResponseBody) SetRequestId(v string) *ListCompliancePackTemplatesResponseBody {
	s.RequestId = &v
	return s
}

type ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult struct {
	// The compliance package templates.
	CompliancePackTemplates []*ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates `json:"CompliancePackTemplates,omitempty" xml:"CompliancePackTemplates,omitempty" type:"Repeated"`
	// The page number.
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The total number of the compliance package templates returned.
	//
	// example:
	//
	// 1
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult) GoString() string {
	return s.String()
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult) SetCompliancePackTemplates(v []*ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult {
	s.CompliancePackTemplates = v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult) SetPageNumber(v int32) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult {
	s.PageNumber = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult) SetPageSize(v int32) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult {
	s.PageSize = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult) SetTotalCount(v int64) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResult {
	s.TotalCount = &v
	return s
}

type ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates struct {
	// The ID of the compliance package template.
	//
	// example:
	//
	// ct-d254ff4e06a300cf****
	CompliancePackTemplateId *string `json:"CompliancePackTemplateId,omitempty" xml:"CompliancePackTemplateId,omitempty"`
	// The name of the compliance package template.
	//
	// example:
	//
	// BestPracticesForResourceStability
	CompliancePackTemplateName *string `json:"CompliancePackTemplateName,omitempty" xml:"CompliancePackTemplateName,omitempty"`
	// The default rules in the compliance package.
	ConfigRules []*ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty" type:"Repeated"`
	// The description of the compliance package.
	//
	// example:
	//
	// example-description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The tag of the compliance package.
	//
	// example:
	//
	// tagKey-1
	Labels *string `json:"Labels,omitempty" xml:"Labels,omitempty"`
	// The time when the compliance package was last updated.
	//
	// example:
	//
	// 1663408308
	LastUpdate *int32 `json:"LastUpdate,omitempty" xml:"LastUpdate,omitempty"`
	// The risk level of the managed rule in the compliance package. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates) GoString() string {
	return s.String()
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates) SetCompliancePackTemplateId(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates {
	s.CompliancePackTemplateId = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates) SetCompliancePackTemplateName(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates {
	s.CompliancePackTemplateName = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates) SetConfigRules(v []*ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates {
	s.ConfigRules = v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates) SetDescription(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates {
	s.Description = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates) SetLabels(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates {
	s.Labels = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates) SetLastUpdate(v int32) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates {
	s.LastUpdate = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates) SetRiskLevel(v int32) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplates {
	s.RiskLevel = &v
	return s
}

type ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules struct {
	// The input parameter of the managed rule.
	ConfigRuleParameters []*ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters `json:"ConfigRuleParameters,omitempty" xml:"ConfigRuleParameters,omitempty" type:"Repeated"`
	// The description of the regulation. This parameter is available only for regulation compliance packages.
	//
	// example:
	//
	// No classic networks exist.
	ControlDescription *string `json:"ControlDescription,omitempty" xml:"ControlDescription,omitempty"`
	// The regulation ID.
	//
	// >  This parameter is available only for regulation compliance packages.
	//
	// example:
	//
	// 3.1
	ControlId *string `json:"ControlId,omitempty" xml:"ControlId,omitempty"`
	// Indicates whether the rules are enabled together with the compliance package. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// false
	DefaultEnable *bool `json:"DefaultEnable,omitempty" xml:"DefaultEnable,omitempty"`
	// The description of the rule.
	//
	// example:
	//
	// If the expiration time of the SLB certificate is later than the specified number of days after the check time, the configuration is considered compliant. Default value: 90 days.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The identifier of the managed rule.
	//
	// example:
	//
	// slb-servercertificate-expired-check
	ManagedRuleIdentifier *string `json:"ManagedRuleIdentifier,omitempty" xml:"ManagedRuleIdentifier,omitempty"`
	// The name of the managed rule.
	//
	// example:
	//
	// slb-servercertificate-expired-check
	ManagedRuleName *string `json:"ManagedRuleName,omitempty" xml:"ManagedRuleName,omitempty"`
	// The types of the resources evaluated based on the rule.
	//
	// example:
	//
	// ACS::SLB::ServerCertificate
	ResourceTypesScope *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the managed rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) GoString() string {
	return s.String()
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) SetConfigRuleParameters(v []*ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules {
	s.ConfigRuleParameters = v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) SetControlDescription(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules {
	s.ControlDescription = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) SetControlId(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules {
	s.ControlId = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) SetDefaultEnable(v bool) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules {
	s.DefaultEnable = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) SetDescription(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules {
	s.Description = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) SetManagedRuleIdentifier(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules {
	s.ManagedRuleIdentifier = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) SetManagedRuleName(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules {
	s.ManagedRuleName = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) SetResourceTypesScope(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules {
	s.ResourceTypesScope = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules) SetRiskLevel(v int32) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRules {
	s.RiskLevel = &v
	return s
}

type ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters struct {
	// The name of the input parameter of the managed rule.
	//
	// example:
	//
	// days
	ParameterName *string `json:"ParameterName,omitempty" xml:"ParameterName,omitempty"`
	// The value of the input parameter of the managed rule.
	//
	// example:
	//
	// 90
	ParameterValue *string `json:"ParameterValue,omitempty" xml:"ParameterValue,omitempty"`
	// Indicates whether the parameter is required in the managed rule. Valid values:
	//
	// 	- true: required
	//
	// 	- false: optional
	//
	// example:
	//
	// true
	Required *bool `json:"Required,omitempty" xml:"Required,omitempty"`
}

func (s ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters) GoString() string {
	return s.String()
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters) SetParameterName(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters {
	s.ParameterName = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters) SetParameterValue(v string) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters {
	s.ParameterValue = &v
	return s
}

func (s *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters) SetRequired(v bool) *ListCompliancePackTemplatesResponseBodyCompliancePackTemplatesResultCompliancePackTemplatesConfigRulesConfigRuleParameters {
	s.Required = &v
	return s
}

type ListCompliancePackTemplatesResponse struct {
	Headers    map[string]*string                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListCompliancePackTemplatesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListCompliancePackTemplatesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePackTemplatesResponse) GoString() string {
	return s.String()
}

func (s *ListCompliancePackTemplatesResponse) SetHeaders(v map[string]*string) *ListCompliancePackTemplatesResponse {
	s.Headers = v
	return s
}

func (s *ListCompliancePackTemplatesResponse) SetStatusCode(v int32) *ListCompliancePackTemplatesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListCompliancePackTemplatesResponse) SetBody(v *ListCompliancePackTemplatesResponseBody) *ListCompliancePackTemplatesResponse {
	s.Body = v
	return s
}

type ListCompliancePacksRequest struct {
	// The page number.
	//
	// Pages start from page 1. Default value: 1
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page.
	//
	// Valid values: 1 to 100. Minimum value: 1. Default value: 10.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The status of the compliance package to be queried. Valid values:
	//
	// 	- ACTIVE: The compliance package is active.
	//
	// 	- CREATING: The compliance package is being created.
	//
	// example:
	//
	// ACTIVE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*ListCompliancePacksRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s ListCompliancePacksRequest) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePacksRequest) GoString() string {
	return s.String()
}

func (s *ListCompliancePacksRequest) SetPageNumber(v int32) *ListCompliancePacksRequest {
	s.PageNumber = &v
	return s
}

func (s *ListCompliancePacksRequest) SetPageSize(v int32) *ListCompliancePacksRequest {
	s.PageSize = &v
	return s
}

func (s *ListCompliancePacksRequest) SetStatus(v string) *ListCompliancePacksRequest {
	s.Status = &v
	return s
}

func (s *ListCompliancePacksRequest) SetTag(v []*ListCompliancePacksRequestTag) *ListCompliancePacksRequest {
	s.Tag = v
	return s
}

type ListCompliancePacksRequestTag struct {
	// The tag key of the resource. You can specify up to 20 tag keys.
	//
	// The tag key cannot be an empty string. The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs`:. The tag key cannot contain `http://` or `https://`.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListCompliancePacksRequestTag) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePacksRequestTag) GoString() string {
	return s.String()
}

func (s *ListCompliancePacksRequestTag) SetKey(v string) *ListCompliancePacksRequestTag {
	s.Key = &v
	return s
}

func (s *ListCompliancePacksRequestTag) SetValue(v string) *ListCompliancePacksRequestTag {
	s.Value = &v
	return s
}

type ListCompliancePacksShrinkRequest struct {
	// The page number.
	//
	// Pages start from page 1. Default value: 1
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page.
	//
	// Valid values: 1 to 100. Minimum value: 1. Default value: 10.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The status of the compliance package to be queried. Valid values:
	//
	// 	- ACTIVE: The compliance package is active.
	//
	// 	- CREATING: The compliance package is being created.
	//
	// example:
	//
	// ACTIVE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s ListCompliancePacksShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePacksShrinkRequest) GoString() string {
	return s.String()
}

func (s *ListCompliancePacksShrinkRequest) SetPageNumber(v int32) *ListCompliancePacksShrinkRequest {
	s.PageNumber = &v
	return s
}

func (s *ListCompliancePacksShrinkRequest) SetPageSize(v int32) *ListCompliancePacksShrinkRequest {
	s.PageSize = &v
	return s
}

func (s *ListCompliancePacksShrinkRequest) SetStatus(v string) *ListCompliancePacksShrinkRequest {
	s.Status = &v
	return s
}

func (s *ListCompliancePacksShrinkRequest) SetTagShrink(v string) *ListCompliancePacksShrinkRequest {
	s.TagShrink = &v
	return s
}

type ListCompliancePacksResponseBody struct {
	// The compliance packages returned.
	CompliancePacksResult *ListCompliancePacksResponseBodyCompliancePacksResult `json:"CompliancePacksResult,omitempty" xml:"CompliancePacksResult,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListCompliancePacksResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePacksResponseBody) GoString() string {
	return s.String()
}

func (s *ListCompliancePacksResponseBody) SetCompliancePacksResult(v *ListCompliancePacksResponseBodyCompliancePacksResult) *ListCompliancePacksResponseBody {
	s.CompliancePacksResult = v
	return s
}

func (s *ListCompliancePacksResponseBody) SetRequestId(v string) *ListCompliancePacksResponseBody {
	s.RequestId = &v
	return s
}

type ListCompliancePacksResponseBodyCompliancePacksResult struct {
	// The compliance packages.
	CompliancePacks []*ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks `json:"CompliancePacks,omitempty" xml:"CompliancePacks,omitempty" type:"Repeated"`
	// The page number of the returned page.
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries returned per page.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The total number of compliance packages returned.
	//
	// example:
	//
	// 1
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListCompliancePacksResponseBodyCompliancePacksResult) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePacksResponseBodyCompliancePacksResult) GoString() string {
	return s.String()
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResult) SetCompliancePacks(v []*ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) *ListCompliancePacksResponseBodyCompliancePacksResult {
	s.CompliancePacks = v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResult) SetPageNumber(v int32) *ListCompliancePacksResponseBodyCompliancePacksResult {
	s.PageNumber = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResult) SetPageSize(v int32) *ListCompliancePacksResponseBodyCompliancePacksResult {
	s.PageSize = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResult) SetTotalCount(v int64) *ListCompliancePacksResponseBodyCompliancePacksResult {
	s.TotalCount = &v
	return s
}

type ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks struct {
	// The ID of the Alibaba Cloud account to which the compliance package belongs.
	//
	// example:
	//
	// 120886317861****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The compliance package ID.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// example:
	//
	// ClassifiedProtectionPreCheck
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The ID of the compliance package template.
	//
	// example:
	//
	// ct-5f26ff4e06a300c4****
	CompliancePackTemplateId *string `json:"CompliancePackTemplateId,omitempty" xml:"CompliancePackTemplateId,omitempty"`
	// The timestamp when the compliance package was created. Unit: milliseconds.
	//
	// example:
	//
	// 1621325046000
	CreateTimestamp *int64 `json:"CreateTimestamp,omitempty" xml:"CreateTimestamp,omitempty"`
	// The description of the compliance package.
	//
	// example:
	//
	// Based on the Level 3 standards Equal Protection 2.0, this template provides continuous compliance monitoring recommendations to help you perform self-inspections and fix issues in advance, ensuring a quick pass during the official inspection.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The status of the compliance package. Valid values:
	//
	// 	- ACTIVE: The compliance package is normal.
	//
	// 	- CREATING: The compliance package is being created.
	//
	// example:
	//
	// ACTIVE
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The tags.
	Tags []*ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) GoString() string {
	return s.String()
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetAccountId(v int64) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.AccountId = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetCompliancePackId(v string) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.CompliancePackId = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetCompliancePackName(v string) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.CompliancePackName = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetCompliancePackTemplateId(v string) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.CompliancePackTemplateId = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetCreateTimestamp(v int64) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.CreateTimestamp = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetDescription(v string) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.Description = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetRiskLevel(v int32) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.RiskLevel = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetStatus(v string) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.Status = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks) SetTags(v []*ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacks {
	s.Tags = v
	return s
}

type ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags struct {
	// tag key
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// tag value
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags) GoString() string {
	return s.String()
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags) SetTagKey(v string) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags {
	s.TagKey = &v
	return s
}

func (s *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags) SetTagValue(v string) *ListCompliancePacksResponseBodyCompliancePacksResultCompliancePacksTags {
	s.TagValue = &v
	return s
}

type ListCompliancePacksResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListCompliancePacksResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListCompliancePacksResponse) String() string {
	return tea.Prettify(s)
}

func (s ListCompliancePacksResponse) GoString() string {
	return s.String()
}

func (s *ListCompliancePacksResponse) SetHeaders(v map[string]*string) *ListCompliancePacksResponse {
	s.Headers = v
	return s
}

func (s *ListCompliancePacksResponse) SetStatusCode(v int32) *ListCompliancePacksResponse {
	s.StatusCode = &v
	return s
}

func (s *ListCompliancePacksResponse) SetBody(v *ListCompliancePacksResponseBody) *ListCompliancePacksResponse {
	s.Body = v
	return s
}

type ListConfigDeliveryChannelsRequest struct {
	// The ID of the delivery channel. Separate multiple IDs with commas (,).
	//
	// example:
	//
	// cdc-d9106457e0d900b1****
	DeliveryChannelIds *string `json:"DeliveryChannelIds,omitempty" xml:"DeliveryChannelIds,omitempty"`
}

func (s ListConfigDeliveryChannelsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListConfigDeliveryChannelsRequest) GoString() string {
	return s.String()
}

func (s *ListConfigDeliveryChannelsRequest) SetDeliveryChannelIds(v string) *ListConfigDeliveryChannelsRequest {
	s.DeliveryChannelIds = &v
	return s
}

type ListConfigDeliveryChannelsResponseBody struct {
	// The information about the delivery channels.
	DeliveryChannels []*ListConfigDeliveryChannelsResponseBodyDeliveryChannels `json:"DeliveryChannels,omitempty" xml:"DeliveryChannels,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// DC300244-FCE3-5061-8214-C27ECB668487
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListConfigDeliveryChannelsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListConfigDeliveryChannelsResponseBody) GoString() string {
	return s.String()
}

func (s *ListConfigDeliveryChannelsResponseBody) SetDeliveryChannels(v []*ListConfigDeliveryChannelsResponseBodyDeliveryChannels) *ListConfigDeliveryChannelsResponseBody {
	s.DeliveryChannels = v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBody) SetRequestId(v string) *ListConfigDeliveryChannelsResponseBody {
	s.RequestId = &v
	return s
}

type ListConfigDeliveryChannelsResponseBodyDeliveryChannels struct {
	// The ID of your Alibaba Cloud account.
	//
	// example:
	//
	// 120886317861****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// Indicates whether the specified destination receives scheduled compliant snapshots. Cloud Config delivers scheduled compliant snapshots at `04:00Z` and `16:00Z` to  Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: The specified destination receives scheduled compliant snapshots.
	//
	// 	- false: The specified destination does not receive scheduled compliant snapshots.
	//
	// example:
	//
	// false
	CompliantSnapshot *bool `json:"CompliantSnapshot,omitempty" xml:"CompliantSnapshot,omitempty"`
	// Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	//
	// 	- true: The specified destination receives resource change logs.
	//
	// 	- false: The specified destination does not receive resource change logs.
	//
	// example:
	//
	// true
	ConfigurationItemChangeNotification *bool `json:"ConfigurationItemChangeNotification,omitempty" xml:"ConfigurationItemChangeNotification,omitempty"`
	// Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at `04:00Z` and `16:00Z` to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: The specified destination receives scheduled resource snapshots.
	//
	// 	- false: The specified destination does not receive scheduled resource snapshots.
	//
	// example:
	//
	// false
	ConfigurationSnapshot *bool `json:"ConfigurationSnapshot,omitempty" xml:"ConfigurationSnapshot,omitempty"`
	// The ARN of the role assumed by the delivery channel.
	//
	// example:
	//
	// acs:ram::120886317861****:role/aliyunserviceroleforconfig
	DeliveryChannelAssumeRoleArn *string `json:"DeliveryChannelAssumeRoleArn,omitempty" xml:"DeliveryChannelAssumeRoleArn,omitempty"`
	// The rule that is attached to the delivery channel. This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// 	- If the value of the DeliveryChannelType parameter is MNS, take note of the following settings of the lowest risk level and resource types of the events to which you subscribed:
	//
	//     	- The setting of the lowest risk level for the events to which you want to subscribe is in the following format: `{"filterType":"RuleRiskLevel","value":"1","multiple":false}`.
	//
	//         The `value` field indicates the lowest risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	//     	- The setting of the resource types of the events to which you want to subscribe is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//         The `values` field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// 	- If you set the DeliveryChannelType parameter to SLS, the setting of the resource types of the snapshots to which you want to deliver is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//     The `values` field specifies the resource types of the snapshots to which you want to deliver. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// example:
	//
	// [{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]
	DeliveryChannelCondition *string `json:"DeliveryChannelCondition,omitempty" xml:"DeliveryChannelCondition,omitempty"`
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-d9106457e0d900b1****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The name of the delivery channel.
	//
	// example:
	//
	// myDeliveryChannel
	DeliveryChannelName *string `json:"DeliveryChannelName,omitempty" xml:"DeliveryChannelName,omitempty"`
	// The Alibaba Cloud Resource Name (ARN) of the delivery destination.
	//
	// 	- If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
	//
	// 	- If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
	//
	// 	- If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
	//
	// example:
	//
	// acs:oss:cn-shanghai:120886317861****:new-bucket
	DeliveryChannelTargetArn *string `json:"DeliveryChannelTargetArn,omitempty" xml:"DeliveryChannelTargetArn,omitempty"`
	// The type of the delivery channel. Valid values:
	//
	// 	- OSS: Object Storage Service (OSS)
	//
	// 	- MNS: Message Service (MNS)
	//
	// 	- SLS: Log Service
	//
	// example:
	//
	// OSS
	DeliveryChannelType *string `json:"DeliveryChannelType,omitempty" xml:"DeliveryChannelType,omitempty"`
	// The time when Cloud Config delivers scheduled resources snapshots every day.
	//
	// Format: `HH:mmZ`. This time is displayed in UTC.
	//
	// example:
	//
	// 09:10Z
	DeliverySnapshotTime *string `json:"DeliverySnapshotTime,omitempty" xml:"DeliverySnapshotTime,omitempty"`
	// The description of the delivery channel.
	//
	// example:
	//
	// My OSS delivery.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
	//
	// 	- true: The specified destination receives resource non-compliance events.
	//
	// 	- false: The specified destination does not receive resource non-compliance events.
	//
	// example:
	//
	// false
	NonCompliantNotification *bool `json:"NonCompliantNotification,omitempty" xml:"NonCompliantNotification,omitempty"`
	// The ARN of the OSS bucket to which you want to transfer the delivery data when the size of the data exceeds the specified upper limit of the delivery channel.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	OversizedDataOSSTargetArn *string `json:"OversizedDataOSSTargetArn,omitempty" xml:"OversizedDataOSSTargetArn,omitempty"`
	// The status of the delivery channel. Valid values:
	//
	// 	- 0: The delivery channel is disabled.
	//
	// 	- 1: The delivery channel is enabled.
	//
	// example:
	//
	// 1
	Status *int32 `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s ListConfigDeliveryChannelsResponseBodyDeliveryChannels) String() string {
	return tea.Prettify(s)
}

func (s ListConfigDeliveryChannelsResponseBodyDeliveryChannels) GoString() string {
	return s.String()
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetAccountId(v int64) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.AccountId = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetCompliantSnapshot(v bool) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.CompliantSnapshot = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetConfigurationItemChangeNotification(v bool) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.ConfigurationItemChangeNotification = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetConfigurationSnapshot(v bool) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.ConfigurationSnapshot = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelAssumeRoleArn(v string) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelAssumeRoleArn = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelCondition(v string) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelCondition = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelId(v string) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelId = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelName(v string) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelName = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelTargetArn(v string) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelTargetArn = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliveryChannelType(v string) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliveryChannelType = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDeliverySnapshotTime(v string) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.DeliverySnapshotTime = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetDescription(v string) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.Description = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetNonCompliantNotification(v bool) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.NonCompliantNotification = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetOversizedDataOSSTargetArn(v string) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.OversizedDataOSSTargetArn = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponseBodyDeliveryChannels) SetStatus(v int32) *ListConfigDeliveryChannelsResponseBodyDeliveryChannels {
	s.Status = &v
	return s
}

type ListConfigDeliveryChannelsResponse struct {
	Headers    map[string]*string                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListConfigDeliveryChannelsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListConfigDeliveryChannelsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListConfigDeliveryChannelsResponse) GoString() string {
	return s.String()
}

func (s *ListConfigDeliveryChannelsResponse) SetHeaders(v map[string]*string) *ListConfigDeliveryChannelsResponse {
	s.Headers = v
	return s
}

func (s *ListConfigDeliveryChannelsResponse) SetStatusCode(v int32) *ListConfigDeliveryChannelsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListConfigDeliveryChannelsResponse) SetBody(v *ListConfigDeliveryChannelsResponseBody) *ListConfigDeliveryChannelsResponse {
	s.Body = v
	return s
}

type ListConfigRuleEvaluationResultsRequest struct {
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// example:
	//
	// cp-f1e3326622af00cb****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The compliance evaluation result of the resource. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// 	- IGNORED: The resource is ignored during compliance evaluation.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The rule ID.
	//
	// You can call the [ListConfigRules](https://help.aliyun.com/document_detail/169607.html) operation to obtain the rule ID.
	//
	// example:
	//
	// cr-cac56457e0d900d3****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The maximum number of entries to return in a request. Valid values: 1 to 100.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of `NextToken`.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region where the resources that you want to evaluate reside. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	Regions *string `json:"Regions,omitempty" xml:"Regions,omitempty"`
	// The ID of the resource group to which the resources that you want to evaluate belong. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aek2indxn3g****
	ResourceGroupIds *string `json:"ResourceGroupIds,omitempty" xml:"ResourceGroupIds,omitempty"`
	// The type of the resources that you want to evaluate. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::ECS::Instane
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
}

func (s ListConfigRuleEvaluationResultsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRuleEvaluationResultsRequest) GoString() string {
	return s.String()
}

func (s *ListConfigRuleEvaluationResultsRequest) SetCompliancePackId(v string) *ListConfigRuleEvaluationResultsRequest {
	s.CompliancePackId = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsRequest) SetComplianceType(v string) *ListConfigRuleEvaluationResultsRequest {
	s.ComplianceType = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsRequest) SetConfigRuleId(v string) *ListConfigRuleEvaluationResultsRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsRequest) SetMaxResults(v int32) *ListConfigRuleEvaluationResultsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsRequest) SetNextToken(v string) *ListConfigRuleEvaluationResultsRequest {
	s.NextToken = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsRequest) SetRegions(v string) *ListConfigRuleEvaluationResultsRequest {
	s.Regions = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsRequest) SetResourceGroupIds(v string) *ListConfigRuleEvaluationResultsRequest {
	s.ResourceGroupIds = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsRequest) SetResourceTypes(v string) *ListConfigRuleEvaluationResultsRequest {
	s.ResourceTypes = &v
	return s
}

type ListConfigRuleEvaluationResultsResponseBody struct {
	// The compliance evaluation results returned.
	EvaluationResults *ListConfigRuleEvaluationResultsResponseBodyEvaluationResults `json:"EvaluationResults,omitempty" xml:"EvaluationResults,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 2A4A33BD-8186-4D60-91B9-42174EED75B5
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListConfigRuleEvaluationResultsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRuleEvaluationResultsResponseBody) GoString() string {
	return s.String()
}

func (s *ListConfigRuleEvaluationResultsResponseBody) SetEvaluationResults(v *ListConfigRuleEvaluationResultsResponseBodyEvaluationResults) *ListConfigRuleEvaluationResultsResponseBody {
	s.EvaluationResults = v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBody) SetRequestId(v string) *ListConfigRuleEvaluationResultsResponseBody {
	s.RequestId = &v
	return s
}

type ListConfigRuleEvaluationResultsResponseBodyEvaluationResults struct {
	// The details of the compliance evaluation result.
	EvaluationResultList []*ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList `json:"EvaluationResultList,omitempty" xml:"EvaluationResultList,omitempty" type:"Repeated"`
	// The maximum number of entries returned per page.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token. It can be used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s ListConfigRuleEvaluationResultsResponseBodyEvaluationResults) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRuleEvaluationResultsResponseBodyEvaluationResults) GoString() string {
	return s.String()
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResults) SetEvaluationResultList(v []*ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResults {
	s.EvaluationResultList = v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResults) SetMaxResults(v int32) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResults {
	s.MaxResults = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResults) SetNextToken(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResults {
	s.NextToken = &v
	return s
}

type ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList struct {
	// The annotation to the resource that is evaluated as non-compliant. The following section describe the parameters that can be returned:
	//
	// 	- `configuration`: the current resource configuration that is evaluated as non-compliant.
	//
	// 	- `desiredValue`: the expected resource configuration that is evaluated as compliant.
	//
	// 	- `operator`: the operator that compares the current configuration with the expected configuration of the resource.
	//
	// 	- `property`: the JSON path of the current configuration in the resource property struct.
	//
	// 	- `reason`: the reason why the resource is evaluated as non-compliant.
	//
	// example:
	//
	// {\\"configuration\\":\\"\\",\\"desiredValue\\":\\"\\",\\"operator\\":\\"IsNotStringEmpty\\",\\"property\\":\\"$.KeyPairName\\",\\"reason\\":\\"No property contains.\\"}
	Annotation *string `json:"Annotation,omitempty" xml:"Annotation,omitempty"`
	// The compliance evaluation result of the resource. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// 	- IGNORED: The resource is ignored during compliance evaluation.
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The timestamp when the rule was triggered for the compliance evaluation. Unit: milliseconds.
	//
	// example:
	//
	// 1622802307081
	ConfigRuleInvokedTimestamp *int64 `json:"ConfigRuleInvokedTimestamp,omitempty" xml:"ConfigRuleInvokedTimestamp,omitempty"`
	// The identifying information about the compliance evaluation result.
	EvaluationResultIdentifier *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier `json:"EvaluationResultIdentifier,omitempty" xml:"EvaluationResultIdentifier,omitempty" type:"Struct"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// 	- Manual: The rule is manually triggered.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	InvokingEventMessageType *string `json:"InvokingEventMessageType,omitempty" xml:"InvokingEventMessageType,omitempty"`
	// Indicates whether the remediation template is enabled. Valid values:
	//
	// 	- true: The remediation template is enabled.
	//
	// 	- false: The remediation template is disabled.
	//
	// example:
	//
	// false
	RemediationEnabled *bool `json:"RemediationEnabled,omitempty" xml:"RemediationEnabled,omitempty"`
	// The timestamp when the compliance evaluation result was recorded. Unit: milliseconds.
	//
	// example:
	//
	// 1622802307150
	ResultRecordedTimestamp *int64 `json:"ResultRecordedTimestamp,omitempty" xml:"ResultRecordedTimestamp,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) GoString() string {
	return s.String()
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetAnnotation(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.Annotation = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetComplianceType(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ComplianceType = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetConfigRuleInvokedTimestamp(v int64) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ConfigRuleInvokedTimestamp = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetEvaluationResultIdentifier(v *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.EvaluationResultIdentifier = v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetInvokingEventMessageType(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.InvokingEventMessageType = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetRemediationEnabled(v bool) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.RemediationEnabled = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetResultRecordedTimestamp(v int64) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ResultRecordedTimestamp = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetRiskLevel(v int32) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.RiskLevel = &v
	return s
}

type ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier struct {
	// The information about the evaluated resource in the compliance evaluation result.
	EvaluationResultQualifier *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier `json:"EvaluationResultQualifier,omitempty" xml:"EvaluationResultQualifier,omitempty" type:"Struct"`
	// The timestamp when the compliance evaluation was performed. Unit: milliseconds.
	//
	// example:
	//
	// 1622802307081
	OrderingTimestamp *int64 `json:"OrderingTimestamp,omitempty" xml:"OrderingTimestamp,omitempty"`
}

func (s ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) GoString() string {
	return s.String()
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) SetEvaluationResultQualifier(v *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier {
	s.EvaluationResultQualifier = v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) SetOrderingTimestamp(v int64) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier {
	s.OrderingTimestamp = &v
	return s
}

type ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier struct {
	// The ID of the compliance package to which the rule belongs.
	//
	// example:
	//
	// cp-bcc33457e0d900d5****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The ARN of the rule.
	//
	// example:
	//
	// acs:config::120886317861****:rule/cr-cac56457e0d900d3****
	ConfigRuleArn *string `json:"ConfigRuleArn,omitempty" xml:"ConfigRuleArn,omitempty"`
	// The rule ID.
	//
	// example:
	//
	// cr-cac56457e0d900d3****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The rule name.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The date on which the system automatically re-evaluates the ignored incompliant resources.
	//
	// >  If the value of this parameter is left empty, the system does not automatically re-evaluate the ignored incompliant resources. You must manually re-evaluate the ignored incompliant resources.
	//
	// example:
	//
	// 2022-06-01
	IgnoreDate *string `json:"IgnoreDate,omitempty" xml:"IgnoreDate,omitempty"`
	// The ID of the region in which your resources reside.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// i-hp3e4kvhzqn2s11t****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource name.
	//
	// example:
	//
	// iZuf6j91r34rnwawoox****
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 120886317861****
	ResourceOwnerId *int64 `json:"ResourceOwnerId,omitempty" xml:"ResourceOwnerId,omitempty"`
	// The type of the resource that is monitored by Cloud Config.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) GoString() string {
	return s.String()
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetCompliancePackId(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.CompliancePackId = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleArn(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleArn = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleId(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleId = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleName(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleName = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetIgnoreDate(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.IgnoreDate = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetRegionId(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.RegionId = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceId(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceId = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceName(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceName = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceOwnerId(v int64) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceOwnerId = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceType(v string) *ListConfigRuleEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceType = &v
	return s
}

type ListConfigRuleEvaluationResultsResponse struct {
	Headers    map[string]*string                           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListConfigRuleEvaluationResultsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListConfigRuleEvaluationResultsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRuleEvaluationResultsResponse) GoString() string {
	return s.String()
}

func (s *ListConfigRuleEvaluationResultsResponse) SetHeaders(v map[string]*string) *ListConfigRuleEvaluationResultsResponse {
	s.Headers = v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponse) SetStatusCode(v int32) *ListConfigRuleEvaluationResultsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListConfigRuleEvaluationResultsResponse) SetBody(v *ListConfigRuleEvaluationResultsResponseBody) *ListConfigRuleEvaluationResultsResponse {
	s.Body = v
	return s
}

type ListConfigRuleEvaluationStatisticsResponseBody struct {
	// The statistics of compliance evaluation results.
	EvaluationResults []*ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults `json:"EvaluationResults,omitempty" xml:"EvaluationResults,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 4FF2B787-347E-5299-A196-2C0448DEA341
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListConfigRuleEvaluationStatisticsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRuleEvaluationStatisticsResponseBody) GoString() string {
	return s.String()
}

func (s *ListConfigRuleEvaluationStatisticsResponseBody) SetEvaluationResults(v []*ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) *ListConfigRuleEvaluationStatisticsResponseBody {
	s.EvaluationResults = v
	return s
}

func (s *ListConfigRuleEvaluationStatisticsResponseBody) SetRequestId(v string) *ListConfigRuleEvaluationStatisticsResponseBody {
	s.RequestId = &v
	return s
}

type ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults struct {
	// The number of resources that are evaluated as non-compliant.
	//
	// example:
	//
	// 30
	NonCompliantResourceCnt *int32 `json:"NonCompliantResourceCnt,omitempty" xml:"NonCompliantResourceCnt,omitempty"`
	// The number of rules based on which resources are evaluated as non-compliant.
	//
	// example:
	//
	// 5
	NonCompliantRuleCnt *int32 `json:"NonCompliantRuleCnt,omitempty" xml:"NonCompliantRuleCnt,omitempty"`
	// The date on which the statistics are obtained.
	//
	// example:
	//
	// 2023-06-27
	StatisticDate *string `json:"StatisticDate,omitempty" xml:"StatisticDate,omitempty"`
	// The total number of resources.
	//
	// example:
	//
	// 91
	TotalResourceCnt *int32 `json:"TotalResourceCnt,omitempty" xml:"TotalResourceCnt,omitempty"`
	// The total number of rules.
	//
	// example:
	//
	// 13
	TotalRuleCnt *int32 `json:"TotalRuleCnt,omitempty" xml:"TotalRuleCnt,omitempty"`
}

func (s ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) GoString() string {
	return s.String()
}

func (s *ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetNonCompliantResourceCnt(v int32) *ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.NonCompliantResourceCnt = &v
	return s
}

func (s *ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetNonCompliantRuleCnt(v int32) *ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.NonCompliantRuleCnt = &v
	return s
}

func (s *ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetStatisticDate(v string) *ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.StatisticDate = &v
	return s
}

func (s *ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetTotalResourceCnt(v int32) *ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.TotalResourceCnt = &v
	return s
}

func (s *ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults) SetTotalRuleCnt(v int32) *ListConfigRuleEvaluationStatisticsResponseBodyEvaluationResults {
	s.TotalRuleCnt = &v
	return s
}

type ListConfigRuleEvaluationStatisticsResponse struct {
	Headers    map[string]*string                              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListConfigRuleEvaluationStatisticsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListConfigRuleEvaluationStatisticsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRuleEvaluationStatisticsResponse) GoString() string {
	return s.String()
}

func (s *ListConfigRuleEvaluationStatisticsResponse) SetHeaders(v map[string]*string) *ListConfigRuleEvaluationStatisticsResponse {
	s.Headers = v
	return s
}

func (s *ListConfigRuleEvaluationStatisticsResponse) SetStatusCode(v int32) *ListConfigRuleEvaluationStatisticsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListConfigRuleEvaluationStatisticsResponse) SetBody(v *ListConfigRuleEvaluationStatisticsResponseBody) *ListConfigRuleEvaluationStatisticsResponse {
	s.Body = v
	return s
}

type ListConfigRulesRequest struct {
	// The compliance package ID.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/606968.html).
	//
	// >  You must configure either the `CompliancePackId` or `ConfigRuleId` parameter.
	//
	// example:
	//
	// cp-fe416457e0d90022****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The compliance evaluation result of the rule. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The status of the rule. Valid values:
	//
	// 	- ACTIVE: The rule is enabled.
	//
	// 	- DELETING: The rule is being deleted.
	//
	// 	- EVALUATING: The rule is being used to evaluate resource configurations.
	//
	// 	- INACTIVE: The rule is disabled.
	//
	// example:
	//
	// ACTIVE
	ConfigRuleState *string `json:"ConfigRuleState,omitempty" xml:"ConfigRuleState,omitempty"`
	// The query keyword.
	//
	// You can perform a fuzzy search by rule ID, rule name, rule description, or managed rule ID.
	//
	// example:
	//
	// ecs
	Keyword *string `json:"Keyword,omitempty" xml:"Keyword,omitempty"`
	// The page number.
	//
	// Page numbers start from 1. Default value: 1.
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page.
	//
	// Valid values: 1 to 100. A minimum of 1 entry can be returned per page. Default value: 10.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The type of the resources to be evaluated based on the rule.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
	// The risk level of the resources that are not compliant with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*ListConfigRulesRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s ListConfigRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRulesRequest) GoString() string {
	return s.String()
}

func (s *ListConfigRulesRequest) SetCompliancePackId(v string) *ListConfigRulesRequest {
	s.CompliancePackId = &v
	return s
}

func (s *ListConfigRulesRequest) SetComplianceType(v string) *ListConfigRulesRequest {
	s.ComplianceType = &v
	return s
}

func (s *ListConfigRulesRequest) SetConfigRuleName(v string) *ListConfigRulesRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *ListConfigRulesRequest) SetConfigRuleState(v string) *ListConfigRulesRequest {
	s.ConfigRuleState = &v
	return s
}

func (s *ListConfigRulesRequest) SetKeyword(v string) *ListConfigRulesRequest {
	s.Keyword = &v
	return s
}

func (s *ListConfigRulesRequest) SetPageNumber(v int32) *ListConfigRulesRequest {
	s.PageNumber = &v
	return s
}

func (s *ListConfigRulesRequest) SetPageSize(v int32) *ListConfigRulesRequest {
	s.PageSize = &v
	return s
}

func (s *ListConfigRulesRequest) SetResourceTypes(v string) *ListConfigRulesRequest {
	s.ResourceTypes = &v
	return s
}

func (s *ListConfigRulesRequest) SetRiskLevel(v int32) *ListConfigRulesRequest {
	s.RiskLevel = &v
	return s
}

func (s *ListConfigRulesRequest) SetTag(v []*ListConfigRulesRequestTag) *ListConfigRulesRequest {
	s.Tag = v
	return s
}

type ListConfigRulesRequestTag struct {
	// The tag key.
	//
	// The tag key cannot be an empty string. The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.
	//
	// You can specify at most 20 tag keys.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The value of tag N to add to the resource. You can specify up to 20 tag values. The tag value can be an empty string.
	//
	// The tag value can be up to 128 characters in length and can contain letters, digits, periods (.), underscores (_), and hyphens (-). The tag value must start with a letter but cannot start with `aliyun` or `acs:`. The tag value cannot contain `http://` or `https://`.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListConfigRulesRequestTag) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRulesRequestTag) GoString() string {
	return s.String()
}

func (s *ListConfigRulesRequestTag) SetKey(v string) *ListConfigRulesRequestTag {
	s.Key = &v
	return s
}

func (s *ListConfigRulesRequestTag) SetValue(v string) *ListConfigRulesRequestTag {
	s.Value = &v
	return s
}

type ListConfigRulesShrinkRequest struct {
	// The compliance package ID.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/606968.html).
	//
	// >  You must configure either the `CompliancePackId` or `ConfigRuleId` parameter.
	//
	// example:
	//
	// cp-fe416457e0d90022****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The compliance evaluation result of the rule. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The status of the rule. Valid values:
	//
	// 	- ACTIVE: The rule is enabled.
	//
	// 	- DELETING: The rule is being deleted.
	//
	// 	- EVALUATING: The rule is being used to evaluate resource configurations.
	//
	// 	- INACTIVE: The rule is disabled.
	//
	// example:
	//
	// ACTIVE
	ConfigRuleState *string `json:"ConfigRuleState,omitempty" xml:"ConfigRuleState,omitempty"`
	// The query keyword.
	//
	// You can perform a fuzzy search by rule ID, rule name, rule description, or managed rule ID.
	//
	// example:
	//
	// ecs
	Keyword *string `json:"Keyword,omitempty" xml:"Keyword,omitempty"`
	// The page number.
	//
	// Page numbers start from 1. Default value: 1.
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page.
	//
	// Valid values: 1 to 100. A minimum of 1 entry can be returned per page. Default value: 10.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The type of the resources to be evaluated based on the rule.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
	// The risk level of the resources that are not compliant with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s ListConfigRulesShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRulesShrinkRequest) GoString() string {
	return s.String()
}

func (s *ListConfigRulesShrinkRequest) SetCompliancePackId(v string) *ListConfigRulesShrinkRequest {
	s.CompliancePackId = &v
	return s
}

func (s *ListConfigRulesShrinkRequest) SetComplianceType(v string) *ListConfigRulesShrinkRequest {
	s.ComplianceType = &v
	return s
}

func (s *ListConfigRulesShrinkRequest) SetConfigRuleName(v string) *ListConfigRulesShrinkRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *ListConfigRulesShrinkRequest) SetConfigRuleState(v string) *ListConfigRulesShrinkRequest {
	s.ConfigRuleState = &v
	return s
}

func (s *ListConfigRulesShrinkRequest) SetKeyword(v string) *ListConfigRulesShrinkRequest {
	s.Keyword = &v
	return s
}

func (s *ListConfigRulesShrinkRequest) SetPageNumber(v int32) *ListConfigRulesShrinkRequest {
	s.PageNumber = &v
	return s
}

func (s *ListConfigRulesShrinkRequest) SetPageSize(v int32) *ListConfigRulesShrinkRequest {
	s.PageSize = &v
	return s
}

func (s *ListConfigRulesShrinkRequest) SetResourceTypes(v string) *ListConfigRulesShrinkRequest {
	s.ResourceTypes = &v
	return s
}

func (s *ListConfigRulesShrinkRequest) SetRiskLevel(v int32) *ListConfigRulesShrinkRequest {
	s.RiskLevel = &v
	return s
}

func (s *ListConfigRulesShrinkRequest) SetTagShrink(v string) *ListConfigRulesShrinkRequest {
	s.TagShrink = &v
	return s
}

type ListConfigRulesResponseBody struct {
	// The information about the rules.
	ConfigRules *ListConfigRulesResponseBodyConfigRules `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// AC3A7E12-72E6-5CC9-A5C1-D8D8919829A7
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListConfigRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRulesResponseBody) GoString() string {
	return s.String()
}

func (s *ListConfigRulesResponseBody) SetConfigRules(v *ListConfigRulesResponseBodyConfigRules) *ListConfigRulesResponseBody {
	s.ConfigRules = v
	return s
}

func (s *ListConfigRulesResponseBody) SetRequestId(v string) *ListConfigRulesResponseBody {
	s.RequestId = &v
	return s
}

type ListConfigRulesResponseBodyConfigRules struct {
	// The details of the rule.
	ConfigRuleList []*ListConfigRulesResponseBodyConfigRulesConfigRuleList `json:"ConfigRuleList,omitempty" xml:"ConfigRuleList,omitempty" type:"Repeated"`
	// The page number.
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The total number of rules.
	//
	// example:
	//
	// 1
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListConfigRulesResponseBodyConfigRules) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRulesResponseBodyConfigRules) GoString() string {
	return s.String()
}

func (s *ListConfigRulesResponseBodyConfigRules) SetConfigRuleList(v []*ListConfigRulesResponseBodyConfigRulesConfigRuleList) *ListConfigRulesResponseBodyConfigRules {
	s.ConfigRuleList = v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRules) SetPageNumber(v int32) *ListConfigRulesResponseBodyConfigRules {
	s.PageNumber = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRules) SetPageSize(v int32) *ListConfigRulesResponseBodyConfigRules {
	s.PageSize = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRules) SetTotalCount(v int64) *ListConfigRulesResponseBodyConfigRules {
	s.TotalCount = &v
	return s
}

type ListConfigRulesResponseBodyConfigRulesConfigRuleList struct {
	// The ID of the account to which the rule belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The type of the remediation template. Only OOS is returned, which indicates CloudOps Orchestration Service.
	//
	// example:
	//
	// OOS
	AutomationType *string `json:"AutomationType,omitempty" xml:"AutomationType,omitempty"`
	// The compliance aggregation result of the rule.
	Compliance *ListConfigRulesResponseBodyConfigRulesConfigRuleListCompliance `json:"Compliance,omitempty" xml:"Compliance,omitempty" type:"Struct"`
	// The ARN of the rule.
	//
	// example:
	//
	// acs:config::100931896542****:rule/cr-fdc8626622af00f9****
	ConfigRuleArn *string `json:"ConfigRuleArn,omitempty" xml:"ConfigRuleArn,omitempty"`
	// The rule ID.
	//
	// example:
	//
	// cr-fdc8626622af00f9****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The status of the rule. Valid values:
	//
	// 	- ACTIVE: The rule is enabled.
	//
	// 	- DELETING: The rule is being deleted.
	//
	// 	- EVALUATING: The rule is being used to evaluate resource configurations.
	//
	// 	- INACTIVE: The rule is disabled.
	//
	// example:
	//
	// ACTIVE
	ConfigRuleState *string `json:"ConfigRuleState,omitempty" xml:"ConfigRuleState,omitempty"`
	// The information about the creation of the rule.
	CreateBy *ListConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy `json:"CreateBy,omitempty" xml:"CreateBy,omitempty" type:"Struct"`
	// The description of the rule.
	//
	// example:
	//
	// The description of the test rule.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The types of resources evaluated by the rule. Multiple resource types are separated with commas (,).
	//
	// example:
	//
	// ACS::EIP::EipAddress
	ResourceTypesScope *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high.
	//
	// 	- 2: medium.
	//
	// 	- 3: low.
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The identifier of the rule.
	//
	// 	- If the rule is a managed rule, the value of this parameter is the identifier of the managed rule.
	//
	// 	- If the rule is a custom rule, the value of this parameter is the Alibaba Cloud Resource Name (ARN) of the rule.
	//
	// example:
	//
	// eip-bandwidth-limit
	SourceIdentifier *string `json:"SourceIdentifier,omitempty" xml:"SourceIdentifier,omitempty"`
	// The type of the rule. Valid values:
	//
	// 	- CUSTOM_FC: a custom rule.
	//
	// 	- ALIYUN: a managed rule.
	//
	// example:
	//
	// ALIYUN
	SourceOwner *string `json:"SourceOwner,omitempty" xml:"SourceOwner,omitempty"`
	// The tags of the rule.
	Tags []*ListConfigRulesResponseBodyConfigRulesConfigRuleListTags `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s ListConfigRulesResponseBodyConfigRulesConfigRuleList) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRulesResponseBodyConfigRulesConfigRuleList) GoString() string {
	return s.String()
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetAccountId(v int64) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.AccountId = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetAutomationType(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.AutomationType = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetCompliance(v *ListConfigRulesResponseBodyConfigRulesConfigRuleListCompliance) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.Compliance = v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetConfigRuleArn(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.ConfigRuleArn = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetConfigRuleId(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.ConfigRuleId = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetConfigRuleName(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.ConfigRuleName = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetConfigRuleState(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.ConfigRuleState = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetCreateBy(v *ListConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.CreateBy = v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetDescription(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.Description = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetResourceTypesScope(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.ResourceTypesScope = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetRiskLevel(v int32) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.RiskLevel = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetSourceIdentifier(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.SourceIdentifier = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetSourceOwner(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.SourceOwner = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleList) SetTags(v []*ListConfigRulesResponseBodyConfigRulesConfigRuleListTags) *ListConfigRulesResponseBodyConfigRulesConfigRuleList {
	s.Tags = v
	return s
}

type ListConfigRulesResponseBodyConfigRulesConfigRuleListCompliance struct {
	// The compliance evaluation result of the rule. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data is available.
	//
	// example:
	//
	// COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The number of resources that are evaluated based on the rule.
	//
	// example:
	//
	// 2
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
}

func (s ListConfigRulesResponseBodyConfigRulesConfigRuleListCompliance) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRulesResponseBodyConfigRulesConfigRuleListCompliance) GoString() string {
	return s.String()
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleListCompliance) SetComplianceType(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleListCompliance {
	s.ComplianceType = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleListCompliance) SetCount(v int32) *ListConfigRulesResponseBodyConfigRulesConfigRuleListCompliance {
	s.Count = &v
	return s
}

type ListConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy struct {
	// The compliance package ID.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// example:
	//
	// test-pack-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
}

func (s ListConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) GoString() string {
	return s.String()
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) SetCompliancePackId(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy {
	s.CompliancePackId = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy) SetCompliancePackName(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleListCreateBy {
	s.CompliancePackName = &v
	return s
}

type ListConfigRulesResponseBodyConfigRulesConfigRuleListTags struct {
	// The tag key of the rule.
	//
	// example:
	//
	// env
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag value of the rule.
	//
	// example:
	//
	// prod
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListConfigRulesResponseBodyConfigRulesConfigRuleListTags) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRulesResponseBodyConfigRulesConfigRuleListTags) GoString() string {
	return s.String()
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleListTags) SetKey(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleListTags {
	s.Key = &v
	return s
}

func (s *ListConfigRulesResponseBodyConfigRulesConfigRuleListTags) SetValue(v string) *ListConfigRulesResponseBodyConfigRulesConfigRuleListTags {
	s.Value = &v
	return s
}

type ListConfigRulesResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListConfigRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListConfigRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListConfigRulesResponse) GoString() string {
	return s.String()
}

func (s *ListConfigRulesResponse) SetHeaders(v map[string]*string) *ListConfigRulesResponse {
	s.Headers = v
	return s
}

func (s *ListConfigRulesResponse) SetStatusCode(v int32) *ListConfigRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListConfigRulesResponse) SetBody(v *ListConfigRulesResponseBody) *ListConfigRulesResponse {
	s.Body = v
	return s
}

type ListDiscoveredResourcesRequest struct {
	EndUpdateTimestamp   *int64  `json:"EndUpdateTimestamp,omitempty" xml:"EndUpdateTimestamp,omitempty"`
	ExcludeResourceTypes *string `json:"ExcludeResourceTypes,omitempty" xml:"ExcludeResourceTypes,omitempty"`
	// The maximum number of entries returned for a single request. Valid values: 1 to 100.
	//
	// This parameter is required.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The `token` that you want to use to initiate the current request. If the response of the previous request is truncated, you can use this token to initiate another request and obtain the remaining entries.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region where the resource resides. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	Regions *string `json:"Regions,omitempty" xml:"Regions,omitempty"`
	// The status of the resource. Valid values:
	//
	// 	- 0: The resource is deleted. If a resource is deleted from the desired cloud service, **Deleted*	- is displayed in the resource list in the Cloud Config console.
	//
	// 	- 1 (default): The resource is retained. If a resource is managed as expected, **Active*	- is displayed in the resource list in the Cloud Config console.
	//
	// example:
	//
	// 1
	ResourceDeleted *int32 `json:"ResourceDeleted,omitempty" xml:"ResourceDeleted,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// eni-hp31cqoba96jagtz****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::ECS::NetworkInterface
	ResourceTypes        *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
	StartUpdateTimestamp *int64  `json:"StartUpdateTimestamp,omitempty" xml:"StartUpdateTimestamp,omitempty"`
}

func (s ListDiscoveredResourcesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDiscoveredResourcesRequest) GoString() string {
	return s.String()
}

func (s *ListDiscoveredResourcesRequest) SetEndUpdateTimestamp(v int64) *ListDiscoveredResourcesRequest {
	s.EndUpdateTimestamp = &v
	return s
}

func (s *ListDiscoveredResourcesRequest) SetExcludeResourceTypes(v string) *ListDiscoveredResourcesRequest {
	s.ExcludeResourceTypes = &v
	return s
}

func (s *ListDiscoveredResourcesRequest) SetMaxResults(v int32) *ListDiscoveredResourcesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDiscoveredResourcesRequest) SetNextToken(v string) *ListDiscoveredResourcesRequest {
	s.NextToken = &v
	return s
}

func (s *ListDiscoveredResourcesRequest) SetRegions(v string) *ListDiscoveredResourcesRequest {
	s.Regions = &v
	return s
}

func (s *ListDiscoveredResourcesRequest) SetResourceDeleted(v int32) *ListDiscoveredResourcesRequest {
	s.ResourceDeleted = &v
	return s
}

func (s *ListDiscoveredResourcesRequest) SetResourceId(v string) *ListDiscoveredResourcesRequest {
	s.ResourceId = &v
	return s
}

func (s *ListDiscoveredResourcesRequest) SetResourceTypes(v string) *ListDiscoveredResourcesRequest {
	s.ResourceTypes = &v
	return s
}

func (s *ListDiscoveredResourcesRequest) SetStartUpdateTimestamp(v int64) *ListDiscoveredResourcesRequest {
	s.StartUpdateTimestamp = &v
	return s
}

type ListDiscoveredResourcesResponseBody struct {
	// The information about the resources.
	DiscoveredResourceProfiles *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles `json:"DiscoveredResourceProfiles,omitempty" xml:"DiscoveredResourceProfiles,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// C7817373-78CB-4F9A-8AFA-E7A88E9D64A2
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListDiscoveredResourcesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDiscoveredResourcesResponseBody) GoString() string {
	return s.String()
}

func (s *ListDiscoveredResourcesResponseBody) SetDiscoveredResourceProfiles(v *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) *ListDiscoveredResourcesResponseBody {
	s.DiscoveredResourceProfiles = v
	return s
}

func (s *ListDiscoveredResourcesResponseBody) SetRequestId(v string) *ListDiscoveredResourcesResponseBody {
	s.RequestId = &v
	return s
}

type ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles struct {
	// The details of the resources.
	DiscoveredResourceProfileList []*ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList `json:"DiscoveredResourceProfileList,omitempty" xml:"DiscoveredResourceProfileList,omitempty" type:"Repeated"`
	// The maximum number of entries returned on each page.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token. It can be used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// 161259599160****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The total number of resources.
	//
	// example:
	//
	// 8
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) String() string {
	return tea.Prettify(s)
}

func (s ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) GoString() string {
	return s.String()
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) SetDiscoveredResourceProfileList(v []*ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles {
	s.DiscoveredResourceProfileList = v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) SetMaxResults(v int32) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles {
	s.MaxResults = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) SetNextToken(v string) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles {
	s.NextToken = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles) SetTotalCount(v int32) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfiles {
	s.TotalCount = &v
	return s
}

type ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList struct {
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 161259599160****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The zone ID.
	//
	// example:
	//
	// cn-hangzhou-h
	AvailabilityZone *string `json:"AvailabilityZone,omitempty" xml:"AvailabilityZone,omitempty"`
	// The region ID.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The timestamp when the resource was created. Unit: milliseconds.
	//
	// example:
	//
	// 1618675206000
	ResourceCreationTime *int64 `json:"ResourceCreationTime,omitempty" xml:"ResourceCreationTime,omitempty"`
	// The status of the resource. Valid values:
	//
	// 	- 0: The resource is deleted.
	//
	// 	- 1: The resource is retained.
	//
	// example:
	//
	// 1
	ResourceDeleted *int32 `json:"ResourceDeleted,omitempty" xml:"ResourceDeleted,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// eni-hp31cqoba96jagtz****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource name.
	//
	// example:
	//
	// Cloud Firewall
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The status of the resource. The value of this parameter varies based on the resource type and may be empty. Examples:
	//
	// 	- If the ResourceType parameter is set to ACS::ECS::Instance, the resource is an Elastic Compute Service (ECS) instance that has a specific state. In this case, the valid values of this parameter are Running and Stopped.
	//
	// 	- If the ResourceType parameter is ACS::OSS::Bucket, the resource is an Object Storage Service (OSS) bucket that is not in a specific state. In this case, this parameter is left empty.
	//
	// example:
	//
	// InUse
	ResourceStatus *string `json:"ResourceStatus,omitempty" xml:"ResourceStatus,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::ECS::NetworkInterface
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	//
	// example:
	//
	// {\\"key1\\":[\\"value2\\"]}
	Tags       *string `json:"Tags,omitempty" xml:"Tags,omitempty"`
	UpdateTime *int64  `json:"UpdateTime,omitempty" xml:"UpdateTime,omitempty"`
	// The version of the resource change.
	//
	// example:
	//
	// 1
	Version *int64 `json:"Version,omitempty" xml:"Version,omitempty"`
}

func (s ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) String() string {
	return tea.Prettify(s)
}

func (s ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) GoString() string {
	return s.String()
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetAccountId(v int64) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.AccountId = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetAvailabilityZone(v string) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.AvailabilityZone = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetRegion(v string) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.Region = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceCreationTime(v int64) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceCreationTime = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceDeleted(v int32) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceDeleted = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceId(v string) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceId = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceName(v string) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceName = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceStatus(v string) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceStatus = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetResourceType(v string) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.ResourceType = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetTags(v string) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.Tags = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetUpdateTime(v int64) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.UpdateTime = &v
	return s
}

func (s *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList) SetVersion(v int64) *ListDiscoveredResourcesResponseBodyDiscoveredResourceProfilesDiscoveredResourceProfileList {
	s.Version = &v
	return s
}

type ListDiscoveredResourcesResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDiscoveredResourcesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDiscoveredResourcesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDiscoveredResourcesResponse) GoString() string {
	return s.String()
}

func (s *ListDiscoveredResourcesResponse) SetHeaders(v map[string]*string) *ListDiscoveredResourcesResponse {
	s.Headers = v
	return s
}

func (s *ListDiscoveredResourcesResponse) SetStatusCode(v int32) *ListDiscoveredResourcesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDiscoveredResourcesResponse) SetBody(v *ListDiscoveredResourcesResponseBody) *ListDiscoveredResourcesResponse {
	s.Body = v
	return s
}

type ListIntegratedServiceResponseBody struct {
	// The information about the cloud service that can be integrated.
	Data []*ListIntegratedServiceResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 86DB52A5-0C25-505A-96D5-9BAE1EFA00B9
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListIntegratedServiceResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListIntegratedServiceResponseBody) GoString() string {
	return s.String()
}

func (s *ListIntegratedServiceResponseBody) SetData(v []*ListIntegratedServiceResponseBodyData) *ListIntegratedServiceResponseBody {
	s.Data = v
	return s
}

func (s *ListIntegratedServiceResponseBody) SetRequestId(v string) *ListIntegratedServiceResponseBody {
	s.RequestId = &v
	return s
}

type ListIntegratedServiceResponseBodyData struct {
	// The type of the event that is integrated across accounts. Valid values:
	//
	// 	- NonCompliantNotification: non-compliance event
	//
	// example:
	//
	// NonCompliantNotification
	AggregatorDeliveryDataType *string `json:"AggregatorDeliveryDataType,omitempty" xml:"AggregatorDeliveryDataType,omitempty"`
	// The types of the integrated events. Separate multiple event types with commas (,). Valid values:
	//
	// 	- ConfigurationItemChangeNotification: resource change event
	//
	// 	- NonCompliantNotification: non-compliance event
	//
	// example:
	//
	// NonCompliantNotification
	IntegratedTypes *string `json:"IntegratedTypes,omitempty" xml:"IntegratedTypes,omitempty"`
	// The identifier of the cloud service. Valid values:
	//
	// 	- eventbridge: EventBridge
	//
	// 	- cms: CloudMonitor
	//
	// 	- bpstudio: Cloud Architect Design Tools
	//
	// example:
	//
	// cms
	ServiceCode *string `json:"ServiceCode,omitempty" xml:"ServiceCode,omitempty"`
	// The name of the cloud service.
	//
	// example:
	//
	// cms
	ServiceName *string `json:"ServiceName,omitempty" xml:"ServiceName,omitempty"`
	// The integration status of the cloud service. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	Status *bool `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s ListIntegratedServiceResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListIntegratedServiceResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListIntegratedServiceResponseBodyData) SetAggregatorDeliveryDataType(v string) *ListIntegratedServiceResponseBodyData {
	s.AggregatorDeliveryDataType = &v
	return s
}

func (s *ListIntegratedServiceResponseBodyData) SetIntegratedTypes(v string) *ListIntegratedServiceResponseBodyData {
	s.IntegratedTypes = &v
	return s
}

func (s *ListIntegratedServiceResponseBodyData) SetServiceCode(v string) *ListIntegratedServiceResponseBodyData {
	s.ServiceCode = &v
	return s
}

func (s *ListIntegratedServiceResponseBodyData) SetServiceName(v string) *ListIntegratedServiceResponseBodyData {
	s.ServiceName = &v
	return s
}

func (s *ListIntegratedServiceResponseBodyData) SetStatus(v bool) *ListIntegratedServiceResponseBodyData {
	s.Status = &v
	return s
}

type ListIntegratedServiceResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListIntegratedServiceResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListIntegratedServiceResponse) String() string {
	return tea.Prettify(s)
}

func (s ListIntegratedServiceResponse) GoString() string {
	return s.String()
}

func (s *ListIntegratedServiceResponse) SetHeaders(v map[string]*string) *ListIntegratedServiceResponse {
	s.Headers = v
	return s
}

func (s *ListIntegratedServiceResponse) SetStatusCode(v int32) *ListIntegratedServiceResponse {
	s.StatusCode = &v
	return s
}

func (s *ListIntegratedServiceResponse) SetBody(v *ListIntegratedServiceResponseBody) *ListIntegratedServiceResponse {
	s.Body = v
	return s
}

type ListManagedRulesRequest struct {
	FilterType *string `json:"FilterType,omitempty" xml:"FilterType,omitempty"`
	// The keyword of the managed rule.
	//
	// example:
	//
	// CDN
	Keyword *string `json:"Keyword,omitempty" xml:"Keyword,omitempty"`
	// The page number of the page to return.
	//
	// Pages start from page 1. Default value: 1
	//
	// example:
	//
	// 1
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page.
	//
	// Valid values: 1 to 100. Minimum value: 1. Default value: 10.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The type of the resources to be evaluated based on the rule.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
	// The risk level of the managed rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s ListManagedRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListManagedRulesRequest) GoString() string {
	return s.String()
}

func (s *ListManagedRulesRequest) SetFilterType(v string) *ListManagedRulesRequest {
	s.FilterType = &v
	return s
}

func (s *ListManagedRulesRequest) SetKeyword(v string) *ListManagedRulesRequest {
	s.Keyword = &v
	return s
}

func (s *ListManagedRulesRequest) SetPageNumber(v int32) *ListManagedRulesRequest {
	s.PageNumber = &v
	return s
}

func (s *ListManagedRulesRequest) SetPageSize(v int32) *ListManagedRulesRequest {
	s.PageSize = &v
	return s
}

func (s *ListManagedRulesRequest) SetResourceTypes(v string) *ListManagedRulesRequest {
	s.ResourceTypes = &v
	return s
}

func (s *ListManagedRulesRequest) SetRiskLevel(v int32) *ListManagedRulesRequest {
	s.RiskLevel = &v
	return s
}

type ListManagedRulesResponseBody struct {
	// The managed rules.
	ManagedRules *ListManagedRulesResponseBodyManagedRules `json:"ManagedRules,omitempty" xml:"ManagedRules,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// B3E605AB-63D5-1EE0-BFA6-0BAC247B0461
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListManagedRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListManagedRulesResponseBody) GoString() string {
	return s.String()
}

func (s *ListManagedRulesResponseBody) SetManagedRules(v *ListManagedRulesResponseBodyManagedRules) *ListManagedRulesResponseBody {
	s.ManagedRules = v
	return s
}

func (s *ListManagedRulesResponseBody) SetRequestId(v string) *ListManagedRulesResponseBody {
	s.RequestId = &v
	return s
}

type ListManagedRulesResponseBodyManagedRules struct {
	// The details of the managed rule.
	ManagedRuleList []*ListManagedRulesResponseBodyManagedRulesManagedRuleList `json:"ManagedRuleList,omitempty" xml:"ManagedRuleList,omitempty" type:"Repeated"`
	// The page number.
	//
	// Page start from page 1.
	//
	// example:
	//
	// 10
	PageNumber *int32 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries returned per page. Valid values: 1 to 500.
	//
	// example:
	//
	// 1
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 1
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListManagedRulesResponseBodyManagedRules) String() string {
	return tea.Prettify(s)
}

func (s ListManagedRulesResponseBodyManagedRules) GoString() string {
	return s.String()
}

func (s *ListManagedRulesResponseBodyManagedRules) SetManagedRuleList(v []*ListManagedRulesResponseBodyManagedRulesManagedRuleList) *ListManagedRulesResponseBodyManagedRules {
	s.ManagedRuleList = v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRules) SetPageNumber(v int32) *ListManagedRulesResponseBodyManagedRules {
	s.PageNumber = &v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRules) SetPageSize(v int32) *ListManagedRulesResponseBodyManagedRules {
	s.PageSize = &v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRules) SetTotalCount(v int64) *ListManagedRulesResponseBodyManagedRules {
	s.TotalCount = &v
	return s
}

type ListManagedRulesResponseBodyManagedRulesManagedRuleList struct {
	// The name of the managed rule.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The description of the managed rule.
	//
	// example:
	//
	// The description of the test rule.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The URL of the topic that describes how the managed rule remediates the incompliant configurations.
	//
	// example:
	//
	// https://example.aliyundoc.com
	HelpUrls *string `json:"HelpUrls,omitempty" xml:"HelpUrls,omitempty"`
	// The unique identifier of the managed rule.
	//
	// example:
	//
	// cdn-domain-https-enabled
	Identifier *string `json:"Identifier,omitempty" xml:"Identifier,omitempty"`
	// The classification description of the managed rule.
	Labels []*string `json:"Labels,omitempty" xml:"Labels,omitempty" type:"Repeated"`
	// The ID of the remediation template.
	//
	// example:
	//
	// ACS-CDN-SetDomainServerCertificate
	RemediationTemplateIdentifier *string `json:"RemediationTemplateIdentifier,omitempty" xml:"RemediationTemplateIdentifier,omitempty"`
	// The name of the remediation template.
	//
	// example:
	//
	// Configure encryption rules for OSS buckets
	RemediationTemplateName *string `json:"RemediationTemplateName,omitempty" xml:"RemediationTemplateName,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The effective scope of the managed rule.
	Scope *ListManagedRulesResponseBodyManagedRulesManagedRuleListScope `json:"Scope,omitempty" xml:"Scope,omitempty" type:"Struct"`
	// Indicates whether precheck is supported. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	SupportPreviewManagedRule *bool `json:"SupportPreviewManagedRule,omitempty" xml:"SupportPreviewManagedRule,omitempty"`
}

func (s ListManagedRulesResponseBodyManagedRulesManagedRuleList) String() string {
	return tea.Prettify(s)
}

func (s ListManagedRulesResponseBodyManagedRulesManagedRuleList) GoString() string {
	return s.String()
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleList) SetConfigRuleName(v string) *ListManagedRulesResponseBodyManagedRulesManagedRuleList {
	s.ConfigRuleName = &v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleList) SetDescription(v string) *ListManagedRulesResponseBodyManagedRulesManagedRuleList {
	s.Description = &v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleList) SetHelpUrls(v string) *ListManagedRulesResponseBodyManagedRulesManagedRuleList {
	s.HelpUrls = &v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleList) SetIdentifier(v string) *ListManagedRulesResponseBodyManagedRulesManagedRuleList {
	s.Identifier = &v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleList) SetLabels(v []*string) *ListManagedRulesResponseBodyManagedRulesManagedRuleList {
	s.Labels = v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleList) SetRemediationTemplateIdentifier(v string) *ListManagedRulesResponseBodyManagedRulesManagedRuleList {
	s.RemediationTemplateIdentifier = &v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleList) SetRemediationTemplateName(v string) *ListManagedRulesResponseBodyManagedRulesManagedRuleList {
	s.RemediationTemplateName = &v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleList) SetRiskLevel(v int32) *ListManagedRulesResponseBodyManagedRulesManagedRuleList {
	s.RiskLevel = &v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleList) SetScope(v *ListManagedRulesResponseBodyManagedRulesManagedRuleListScope) *ListManagedRulesResponseBodyManagedRulesManagedRuleList {
	s.Scope = v
	return s
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleList) SetSupportPreviewManagedRule(v bool) *ListManagedRulesResponseBodyManagedRulesManagedRuleList {
	s.SupportPreviewManagedRule = &v
	return s
}

type ListManagedRulesResponseBodyManagedRulesManagedRuleListScope struct {
	// The types of resources to which the managed rule applies.
	ComplianceResourceTypes []*string `json:"ComplianceResourceTypes,omitempty" xml:"ComplianceResourceTypes,omitempty" type:"Repeated"`
}

func (s ListManagedRulesResponseBodyManagedRulesManagedRuleListScope) String() string {
	return tea.Prettify(s)
}

func (s ListManagedRulesResponseBodyManagedRulesManagedRuleListScope) GoString() string {
	return s.String()
}

func (s *ListManagedRulesResponseBodyManagedRulesManagedRuleListScope) SetComplianceResourceTypes(v []*string) *ListManagedRulesResponseBodyManagedRulesManagedRuleListScope {
	s.ComplianceResourceTypes = v
	return s
}

type ListManagedRulesResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListManagedRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListManagedRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListManagedRulesResponse) GoString() string {
	return s.String()
}

func (s *ListManagedRulesResponse) SetHeaders(v map[string]*string) *ListManagedRulesResponse {
	s.Headers = v
	return s
}

func (s *ListManagedRulesResponse) SetStatusCode(v int32) *ListManagedRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListManagedRulesResponse) SetBody(v *ListManagedRulesResponseBody) *ListManagedRulesResponse {
	s.Body = v
	return s
}

type ListPreManagedRulesRequest struct {
	// The number of the page to return.
	//
	// Pages start from page 1. Default value: 1.
	//
	// example:
	//
	// 1
	PageNumber *int64 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries to return on each page.
	//
	// Default value: 10.
	//
	// example:
	//
	// 1
	PageSize *int64 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The type of the resource.
	ResourceTypes []*string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty" type:"Repeated"`
}

func (s ListPreManagedRulesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListPreManagedRulesRequest) GoString() string {
	return s.String()
}

func (s *ListPreManagedRulesRequest) SetPageNumber(v int64) *ListPreManagedRulesRequest {
	s.PageNumber = &v
	return s
}

func (s *ListPreManagedRulesRequest) SetPageSize(v int64) *ListPreManagedRulesRequest {
	s.PageSize = &v
	return s
}

func (s *ListPreManagedRulesRequest) SetResourceTypes(v []*string) *ListPreManagedRulesRequest {
	s.ResourceTypes = v
	return s
}

type ListPreManagedRulesShrinkRequest struct {
	// The number of the page to return.
	//
	// Pages start from page 1. Default value: 1.
	//
	// example:
	//
	// 1
	PageNumber *int64 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries to return on each page.
	//
	// Default value: 10.
	//
	// example:
	//
	// 1
	PageSize *int64 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The type of the resource.
	ResourceTypesShrink *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
}

func (s ListPreManagedRulesShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ListPreManagedRulesShrinkRequest) GoString() string {
	return s.String()
}

func (s *ListPreManagedRulesShrinkRequest) SetPageNumber(v int64) *ListPreManagedRulesShrinkRequest {
	s.PageNumber = &v
	return s
}

func (s *ListPreManagedRulesShrinkRequest) SetPageSize(v int64) *ListPreManagedRulesShrinkRequest {
	s.PageSize = &v
	return s
}

func (s *ListPreManagedRulesShrinkRequest) SetResourceTypesShrink(v string) *ListPreManagedRulesShrinkRequest {
	s.ResourceTypesShrink = &v
	return s
}

type ListPreManagedRulesResponseBody struct {
	// The evaluation rules.
	ManagedRules []*ListPreManagedRulesResponseBodyManagedRules `json:"ManagedRules,omitempty" xml:"ManagedRules,omitempty" type:"Repeated"`
	// The page number of the returned page.
	//
	// example:
	//
	// 1
	PageNumber *int64 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries returned per page.
	//
	// example:
	//
	// 1
	PageSize *int64 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// A2A9F1BE-0712-1B26-9899-D82F7DA8476C
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListPreManagedRulesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListPreManagedRulesResponseBody) GoString() string {
	return s.String()
}

func (s *ListPreManagedRulesResponseBody) SetManagedRules(v []*ListPreManagedRulesResponseBodyManagedRules) *ListPreManagedRulesResponseBody {
	s.ManagedRules = v
	return s
}

func (s *ListPreManagedRulesResponseBody) SetPageNumber(v int64) *ListPreManagedRulesResponseBody {
	s.PageNumber = &v
	return s
}

func (s *ListPreManagedRulesResponseBody) SetPageSize(v int64) *ListPreManagedRulesResponseBody {
	s.PageSize = &v
	return s
}

func (s *ListPreManagedRulesResponseBody) SetRequestId(v string) *ListPreManagedRulesResponseBody {
	s.RequestId = &v
	return s
}

type ListPreManagedRulesResponseBodyManagedRules struct {
	// The details of the required input parameters of the rule.
	//
	// example:
	//
	// {}
	CompulsoryInputParameterDetails map[string]interface{} `json:"CompulsoryInputParameterDetails,omitempty" xml:"CompulsoryInputParameterDetails,omitempty"`
	// The name of the rule.
	//
	// example:
	//
	// ram-user-ak-used-expired-check
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The description of the rule.
	//
	// example:
	//
	// Example description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The URL of the topic that describes how the evaluation rule remediates the incompliant configurations.
	//
	// example:
	//
	// https://example.aliyundoc.com
	HelpUrls *string `json:"HelpUrls,omitempty" xml:"HelpUrls,omitempty"`
	// The identifier of the rule.
	//
	// example:
	//
	// ecs-instance-deletion-protection-enabled
	Identifier *string `json:"Identifier,omitempty" xml:"Identifier,omitempty"`
	// The details of the optional input parameters of the rule.
	//
	// example:
	//
	// {}
	OptionalInputParameterDetails map[string]interface{} `json:"OptionalInputParameterDetails,omitempty" xml:"OptionalInputParameterDetails,omitempty"`
	// The type of resource.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s ListPreManagedRulesResponseBodyManagedRules) String() string {
	return tea.Prettify(s)
}

func (s ListPreManagedRulesResponseBodyManagedRules) GoString() string {
	return s.String()
}

func (s *ListPreManagedRulesResponseBodyManagedRules) SetCompulsoryInputParameterDetails(v map[string]interface{}) *ListPreManagedRulesResponseBodyManagedRules {
	s.CompulsoryInputParameterDetails = v
	return s
}

func (s *ListPreManagedRulesResponseBodyManagedRules) SetConfigRuleName(v string) *ListPreManagedRulesResponseBodyManagedRules {
	s.ConfigRuleName = &v
	return s
}

func (s *ListPreManagedRulesResponseBodyManagedRules) SetDescription(v string) *ListPreManagedRulesResponseBodyManagedRules {
	s.Description = &v
	return s
}

func (s *ListPreManagedRulesResponseBodyManagedRules) SetHelpUrls(v string) *ListPreManagedRulesResponseBodyManagedRules {
	s.HelpUrls = &v
	return s
}

func (s *ListPreManagedRulesResponseBodyManagedRules) SetIdentifier(v string) *ListPreManagedRulesResponseBodyManagedRules {
	s.Identifier = &v
	return s
}

func (s *ListPreManagedRulesResponseBodyManagedRules) SetOptionalInputParameterDetails(v map[string]interface{}) *ListPreManagedRulesResponseBodyManagedRules {
	s.OptionalInputParameterDetails = v
	return s
}

func (s *ListPreManagedRulesResponseBodyManagedRules) SetResourceType(v string) *ListPreManagedRulesResponseBodyManagedRules {
	s.ResourceType = &v
	return s
}

type ListPreManagedRulesResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListPreManagedRulesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListPreManagedRulesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListPreManagedRulesResponse) GoString() string {
	return s.String()
}

func (s *ListPreManagedRulesResponse) SetHeaders(v map[string]*string) *ListPreManagedRulesResponse {
	s.Headers = v
	return s
}

func (s *ListPreManagedRulesResponse) SetStatusCode(v int32) *ListPreManagedRulesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListPreManagedRulesResponse) SetBody(v *ListPreManagedRulesResponseBody) *ListPreManagedRulesResponse {
	s.Body = v
	return s
}

type ListRemediationExecutionsRequest struct {
	// The rule ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-5392626622af0000****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The status of the remediation. Valid values:
	//
	// 	- Success
	//
	// 	- Failed
	//
	// example:
	//
	// Success
	ExecutionStatus *string `json:"ExecutionStatus,omitempty" xml:"ExecutionStatus,omitempty"`
	// The maximum number of entries to return for a single request. Valid values: 10 to 100.
	//
	// example:
	//
	// 10
	MaxResults *int64 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.
	//
	// example:
	//
	// aVCjqNaSy0Ps7zSMGu25****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s ListRemediationExecutionsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationExecutionsRequest) GoString() string {
	return s.String()
}

func (s *ListRemediationExecutionsRequest) SetConfigRuleId(v string) *ListRemediationExecutionsRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *ListRemediationExecutionsRequest) SetExecutionStatus(v string) *ListRemediationExecutionsRequest {
	s.ExecutionStatus = &v
	return s
}

func (s *ListRemediationExecutionsRequest) SetMaxResults(v int64) *ListRemediationExecutionsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListRemediationExecutionsRequest) SetNextToken(v string) *ListRemediationExecutionsRequest {
	s.NextToken = &v
	return s
}

type ListRemediationExecutionsResponseBody struct {
	// The queried remediation records.
	RemediationExecutionData *ListRemediationExecutionsResponseBodyRemediationExecutionData `json:"RemediationExecutionData,omitempty" xml:"RemediationExecutionData,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 13E67493-3165-529A-A961-BE9E4B11BA11
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListRemediationExecutionsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationExecutionsResponseBody) GoString() string {
	return s.String()
}

func (s *ListRemediationExecutionsResponseBody) SetRemediationExecutionData(v *ListRemediationExecutionsResponseBodyRemediationExecutionData) *ListRemediationExecutionsResponseBody {
	s.RemediationExecutionData = v
	return s
}

func (s *ListRemediationExecutionsResponseBody) SetRequestId(v string) *ListRemediationExecutionsResponseBody {
	s.RequestId = &v
	return s
}

type ListRemediationExecutionsResponseBodyRemediationExecutionData struct {
	// The maximum number of entries to return for a single request.
	//
	// example:
	//
	// 10
	MaxResults *int64 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token. It can be used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// cMbjqNaYs0Ps7zSNiu37****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The queried remediation records.
	RemediationExecutions []*ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions `json:"RemediationExecutions,omitempty" xml:"RemediationExecutions,omitempty" type:"Repeated"`
}

func (s ListRemediationExecutionsResponseBodyRemediationExecutionData) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationExecutionsResponseBodyRemediationExecutionData) GoString() string {
	return s.String()
}

func (s *ListRemediationExecutionsResponseBodyRemediationExecutionData) SetMaxResults(v int64) *ListRemediationExecutionsResponseBodyRemediationExecutionData {
	s.MaxResults = &v
	return s
}

func (s *ListRemediationExecutionsResponseBodyRemediationExecutionData) SetNextToken(v string) *ListRemediationExecutionsResponseBodyRemediationExecutionData {
	s.NextToken = &v
	return s
}

func (s *ListRemediationExecutionsResponseBodyRemediationExecutionData) SetRemediationExecutions(v []*ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) *ListRemediationExecutionsResponseBodyRemediationExecutionData {
	s.RemediationExecutions = v
	return s
}

type ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions struct {
	// The time when the remediation record was created.
	//
	// example:
	//
	// 2023-06-25T11:48:15Z
	ExecutionCreateDate *string `json:"ExecutionCreateDate,omitempty" xml:"ExecutionCreateDate,omitempty"`
	// The invocation ID of the remediation record.
	//
	// example:
	//
	// exec-befded3781994ccf****
	ExecutionInvocationId *string `json:"ExecutionInvocationId,omitempty" xml:"ExecutionInvocationId,omitempty"`
	// The IDs of the resources to which the remediation belongs. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// rm-0jlk629z240l8****
	ExecutionResourceIds *string `json:"ExecutionResourceIds,omitempty" xml:"ExecutionResourceIds,omitempty"`
	// The resource type.
	//
	// example:
	//
	// ACS::RDS::DBInstance
	ExecutionResourceType *string `json:"ExecutionResourceType,omitempty" xml:"ExecutionResourceType,omitempty"`
	// The status of the remediation record. Valid values:
	//
	// 	- Success
	//
	// 	- Failed
	//
	// example:
	//
	// Success
	ExecutionStatus *string `json:"ExecutionStatus,omitempty" xml:"ExecutionStatus,omitempty"`
	// The error message returned when the remediation fails.
	//
	// example:
	//
	// Invocation time out.
	ExecutionStatusMessage *string `json:"ExecutionStatusMessage,omitempty" xml:"ExecutionStatusMessage,omitempty"`
}

func (s ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) GoString() string {
	return s.String()
}

func (s *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionCreateDate(v string) *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionCreateDate = &v
	return s
}

func (s *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionInvocationId(v string) *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionInvocationId = &v
	return s
}

func (s *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionResourceIds(v string) *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionResourceIds = &v
	return s
}

func (s *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionResourceType(v string) *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionResourceType = &v
	return s
}

func (s *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionStatus(v string) *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionStatus = &v
	return s
}

func (s *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions) SetExecutionStatusMessage(v string) *ListRemediationExecutionsResponseBodyRemediationExecutionDataRemediationExecutions {
	s.ExecutionStatusMessage = &v
	return s
}

type ListRemediationExecutionsResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListRemediationExecutionsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListRemediationExecutionsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationExecutionsResponse) GoString() string {
	return s.String()
}

func (s *ListRemediationExecutionsResponse) SetHeaders(v map[string]*string) *ListRemediationExecutionsResponse {
	s.Headers = v
	return s
}

func (s *ListRemediationExecutionsResponse) SetStatusCode(v int32) *ListRemediationExecutionsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListRemediationExecutionsResponse) SetBody(v *ListRemediationExecutionsResponseBody) *ListRemediationExecutionsResponse {
	s.Body = v
	return s
}

type ListRemediationTemplatesRequest struct {
	// The identifier of the managed rule.
	//
	// You can call the [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html) operation to obtain the managed rule identifier.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// oss-bucket-public-write-prohibited
	ManagedRuleIdentifier *string `json:"ManagedRuleIdentifier,omitempty" xml:"ManagedRuleIdentifier,omitempty"`
	// The page number. Pages start from 1.
	//
	// example:
	//
	// 1
	PageNumber *int64 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page. Valid values: 1 to 100.
	//
	// example:
	//
	// 10
	PageSize *int64 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The type of the remediation template. Valid value: OOS, which stands for Operation Orchestration Service.
	//
	// example:
	//
	// OOS
	RemediationType *string `json:"RemediationType,omitempty" xml:"RemediationType,omitempty"`
}

func (s ListRemediationTemplatesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationTemplatesRequest) GoString() string {
	return s.String()
}

func (s *ListRemediationTemplatesRequest) SetManagedRuleIdentifier(v string) *ListRemediationTemplatesRequest {
	s.ManagedRuleIdentifier = &v
	return s
}

func (s *ListRemediationTemplatesRequest) SetPageNumber(v int64) *ListRemediationTemplatesRequest {
	s.PageNumber = &v
	return s
}

func (s *ListRemediationTemplatesRequest) SetPageSize(v int64) *ListRemediationTemplatesRequest {
	s.PageSize = &v
	return s
}

func (s *ListRemediationTemplatesRequest) SetRemediationType(v string) *ListRemediationTemplatesRequest {
	s.RemediationType = &v
	return s
}

type ListRemediationTemplatesResponseBody struct {
	// The page number. Pages start from page 1.
	//
	// example:
	//
	// 1
	PageNumber *int64 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page. Valid values: 1 to 100.
	//
	// example:
	//
	// 10
	PageSize *int64 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The queried remediation templates.
	RemediationTemplates []*ListRemediationTemplatesResponseBodyRemediationTemplates `json:"RemediationTemplates,omitempty" xml:"RemediationTemplates,omitempty" type:"Repeated"`
	// The ID of the request.
	//
	// example:
	//
	// FC2C4750-7024-499C-A69F-763543D1CBE3
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of remediation templates.
	//
	// example:
	//
	// 1
	TotalCount *string `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListRemediationTemplatesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationTemplatesResponseBody) GoString() string {
	return s.String()
}

func (s *ListRemediationTemplatesResponseBody) SetPageNumber(v int64) *ListRemediationTemplatesResponseBody {
	s.PageNumber = &v
	return s
}

func (s *ListRemediationTemplatesResponseBody) SetPageSize(v int64) *ListRemediationTemplatesResponseBody {
	s.PageSize = &v
	return s
}

func (s *ListRemediationTemplatesResponseBody) SetRemediationTemplates(v []*ListRemediationTemplatesResponseBodyRemediationTemplates) *ListRemediationTemplatesResponseBody {
	s.RemediationTemplates = v
	return s
}

func (s *ListRemediationTemplatesResponseBody) SetRequestId(v string) *ListRemediationTemplatesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListRemediationTemplatesResponseBody) SetTotalCount(v string) *ListRemediationTemplatesResponseBody {
	s.TotalCount = &v
	return s
}

type ListRemediationTemplatesResponseBodyRemediationTemplates struct {
	// The type of the remediation template. Valid value: OOS, which indicates Operation Orchestration Service.
	//
	// example:
	//
	// OOS
	RemediationType *string `json:"RemediationType,omitempty" xml:"RemediationType,omitempty"`
	// The definition of the remediation template.
	//
	// example:
	//
	// {
	//
	//     "Parameters": {
	//
	//         "bucketName": {
	//
	//             "Default": "{resourceId}",
	//
	//             "Description": {
	//
	//                 "zh-cn": "[Required]OSS Bucket Name.",
	//
	//                 "en": "[Required]OSS Bucket Name."
	//
	//             },
	//
	//             "Type": "String"
	//
	//         },
	//
	//         "regionId": {
	//
	//             "AssociationProperty": "RegionId",
	//
	//             "Default": "{regionId}",
	//
	//             "Description": {
	//
	//                 "zh-cn": "[Required]The id of target region.",
	//
	//                 "en": "[Required]The id of target region."
	//
	//             },
	//
	//             "Type": "String"
	//
	//         },
	//
	//         "permissionName": {
	//
	//             "AllowValues": "[\\"public-read-write\\",\\"public-read\\",\\"private\\"]",
	//
	//             "Default": "private",
	//
	//             "Description": {
	//
	//                 "zh-cn": "[Required]ACL Permission Name.",
	//
	//                 "en": "[Required]ACL Permission Name."
	//
	//             },
	//
	//             "Type": "String"
	//
	//         }
	//
	//     }
	//
	// }
	TemplateDefinition *string `json:"TemplateDefinition,omitempty" xml:"TemplateDefinition,omitempty"`
	// The description of the remediation template.
	//
	// example:
	//
	// Configure encryption rules for OSSBucket through the PutBucketEncryption interface. Be aware of the risks and exercise caution.
	TemplateDescription *string `json:"TemplateDescription,omitempty" xml:"TemplateDescription,omitempty"`
	// The ID of the remediation template.
	//
	// example:
	//
	// ACS-OSS-PutBucketAcl
	TemplateIdentifier *string `json:"TemplateIdentifier,omitempty" xml:"TemplateIdentifier,omitempty"`
	// The name of the remediation template.
	//
	// example:
	//
	// Set the ACL of an OSS bucket to private
	TemplateName *string `json:"TemplateName,omitempty" xml:"TemplateName,omitempty"`
}

func (s ListRemediationTemplatesResponseBodyRemediationTemplates) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationTemplatesResponseBodyRemediationTemplates) GoString() string {
	return s.String()
}

func (s *ListRemediationTemplatesResponseBodyRemediationTemplates) SetRemediationType(v string) *ListRemediationTemplatesResponseBodyRemediationTemplates {
	s.RemediationType = &v
	return s
}

func (s *ListRemediationTemplatesResponseBodyRemediationTemplates) SetTemplateDefinition(v string) *ListRemediationTemplatesResponseBodyRemediationTemplates {
	s.TemplateDefinition = &v
	return s
}

func (s *ListRemediationTemplatesResponseBodyRemediationTemplates) SetTemplateDescription(v string) *ListRemediationTemplatesResponseBodyRemediationTemplates {
	s.TemplateDescription = &v
	return s
}

func (s *ListRemediationTemplatesResponseBodyRemediationTemplates) SetTemplateIdentifier(v string) *ListRemediationTemplatesResponseBodyRemediationTemplates {
	s.TemplateIdentifier = &v
	return s
}

func (s *ListRemediationTemplatesResponseBodyRemediationTemplates) SetTemplateName(v string) *ListRemediationTemplatesResponseBodyRemediationTemplates {
	s.TemplateName = &v
	return s
}

type ListRemediationTemplatesResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListRemediationTemplatesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListRemediationTemplatesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationTemplatesResponse) GoString() string {
	return s.String()
}

func (s *ListRemediationTemplatesResponse) SetHeaders(v map[string]*string) *ListRemediationTemplatesResponse {
	s.Headers = v
	return s
}

func (s *ListRemediationTemplatesResponse) SetStatusCode(v int32) *ListRemediationTemplatesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListRemediationTemplatesResponse) SetBody(v *ListRemediationTemplatesResponseBody) *ListRemediationTemplatesResponse {
	s.Body = v
	return s
}

type ListRemediationsRequest struct {
	// The rule IDs. Separate multiple rule IDs with commas (,).
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// example:
	//
	// cr-6b7c626622af00b4****
	ConfigRuleIds *string `json:"ConfigRuleIds,omitempty" xml:"ConfigRuleIds,omitempty"`
	// The page number. Pages start from page 1.
	//
	// example:
	//
	// 1
	PageNumber *int64 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page. Valid values: 1 to 50.
	//
	// example:
	//
	// 10
	PageSize *int64 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
}

func (s ListRemediationsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationsRequest) GoString() string {
	return s.String()
}

func (s *ListRemediationsRequest) SetConfigRuleIds(v string) *ListRemediationsRequest {
	s.ConfigRuleIds = &v
	return s
}

func (s *ListRemediationsRequest) SetPageNumber(v int64) *ListRemediationsRequest {
	s.PageNumber = &v
	return s
}

func (s *ListRemediationsRequest) SetPageSize(v int64) *ListRemediationsRequest {
	s.PageSize = &v
	return s
}

type ListRemediationsResponseBody struct {
	// The page number. Pages start from page 1.
	//
	// This parameter is required.
	//
	// example:
	//
	// 1
	PageNumber *int64 `json:"PageNumber,omitempty" xml:"PageNumber,omitempty"`
	// The number of entries per page. Valid values: 1 to 50.
	//
	// This parameter is required.
	//
	// example:
	//
	// 10
	PageSize *int64 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The converted configuration of the remediation template. This parameter is returned only for an OOS remediation template.
	Remediations []*ListRemediationsResponseBodyRemediations `json:"Remediations,omitempty" xml:"Remediations,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 0146963A-20C0-4E75-B93A-7D622B5FD7C8
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of remediation settings.
	//
	// This parameter is required.
	//
	// example:
	//
	// 1
	TotalCount *string `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListRemediationsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationsResponseBody) GoString() string {
	return s.String()
}

func (s *ListRemediationsResponseBody) SetPageNumber(v int64) *ListRemediationsResponseBody {
	s.PageNumber = &v
	return s
}

func (s *ListRemediationsResponseBody) SetPageSize(v int64) *ListRemediationsResponseBody {
	s.PageSize = &v
	return s
}

func (s *ListRemediationsResponseBody) SetRemediations(v []*ListRemediationsResponseBodyRemediations) *ListRemediationsResponseBody {
	s.Remediations = v
	return s
}

func (s *ListRemediationsResponseBody) SetRequestId(v string) *ListRemediationsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListRemediationsResponseBody) SetTotalCount(v string) *ListRemediationsResponseBody {
	s.TotalCount = &v
	return s
}

type ListRemediationsResponseBodyRemediations struct {
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The rule ID.
	//
	// example:
	//
	// cr-6b7c626622af00b4****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The execution mode of the remediation template. Valid values:
	//
	// 	- NON_EXECUTION: The remediation template was not executed.
	//
	// 	- AUTO_EXECUTION: The remediation template was automatically executed.
	//
	// 	- MANUAL_EXECUTION: The remediation template was manually executed.
	//
	// 	- NOT_CONFIG: The execution mode was not specified.
	//
	// example:
	//
	// AUTO_EXECUTION
	InvokeType *string `json:"InvokeType,omitempty" xml:"InvokeType,omitempty"`
	// The ID of the last successful execution of the remediation template.
	//
	// example:
	//
	// bd7629fb-cac8-42fe-bcb1-e362c5a6****
	LastSuccessfulInvocationId *string `json:"LastSuccessfulInvocationId,omitempty" xml:"LastSuccessfulInvocationId,omitempty"`
	// The timestamp of the last successful execution of the remediation template Unit: milliseconds.
	//
	// example:
	//
	// 1625451393589
	LastSuccessfulInvocationTime *int64 `json:"LastSuccessfulInvocationTime,omitempty" xml:"LastSuccessfulInvocationTime,omitempty"`
	// The mode of the last successful execution of the remediation template. Valid values:
	//
	// 	- NON_EXECUTION: The remediation template was not executed.
	//
	// 	- AUTO_EXECUTION: The remediation template was automatically executed.
	//
	// 	- MANUAL_EXECUTION: The remediation template was manually executed.
	//
	// 	- NOT_CONFIG: The execution mode was not specified.
	//
	// example:
	//
	// AUTO_EXECUTION
	LastSuccessfulInvocationType *string `json:"LastSuccessfulInvocationType,omitempty" xml:"LastSuccessfulInvocationType,omitempty"`
	// The ID of the remediation template.
	//
	// example:
	//
	// crr-6b7c626622af0026****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// The converted configuration of the remediation template. This parameter is available only for an OOS remediation template.
	//
	// example:
	//
	// {"bucketName": "{resourceId}", "regionId": "{regionId}", "permissionName": "private"}
	RemediationOriginParams *string `json:"RemediationOriginParams,omitempty" xml:"RemediationOriginParams,omitempty"`
	// The source of remediation. Valid values:
	//
	// 	- ALIYUN: official template.
	//
	// 	- CUSTOM: custom template.
	//
	// 	- NONE: none.
	//
	// example:
	//
	// ALIYUN
	RemediationSourceType *string `json:"RemediationSourceType,omitempty" xml:"RemediationSourceType,omitempty"`
	// The ID of the remediation template.
	//
	// example:
	//
	// ACS-OSS-PutBucketAcl
	RemediationTemplateId *string `json:"RemediationTemplateId,omitempty" xml:"RemediationTemplateId,omitempty"`
	// The type of the remediation template. Valid values:
	//
	// 	- OOS: Operation Orchestration Service (official remediation)
	//
	// 	- FC: Function Compute (custom remediation)
	//
	// example:
	//
	// OOS
	RemediationType *string `json:"RemediationType,omitempty" xml:"RemediationType,omitempty"`
}

func (s ListRemediationsResponseBodyRemediations) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationsResponseBodyRemediations) GoString() string {
	return s.String()
}

func (s *ListRemediationsResponseBodyRemediations) SetAccountId(v int64) *ListRemediationsResponseBodyRemediations {
	s.AccountId = &v
	return s
}

func (s *ListRemediationsResponseBodyRemediations) SetConfigRuleId(v string) *ListRemediationsResponseBodyRemediations {
	s.ConfigRuleId = &v
	return s
}

func (s *ListRemediationsResponseBodyRemediations) SetInvokeType(v string) *ListRemediationsResponseBodyRemediations {
	s.InvokeType = &v
	return s
}

func (s *ListRemediationsResponseBodyRemediations) SetLastSuccessfulInvocationId(v string) *ListRemediationsResponseBodyRemediations {
	s.LastSuccessfulInvocationId = &v
	return s
}

func (s *ListRemediationsResponseBodyRemediations) SetLastSuccessfulInvocationTime(v int64) *ListRemediationsResponseBodyRemediations {
	s.LastSuccessfulInvocationTime = &v
	return s
}

func (s *ListRemediationsResponseBodyRemediations) SetLastSuccessfulInvocationType(v string) *ListRemediationsResponseBodyRemediations {
	s.LastSuccessfulInvocationType = &v
	return s
}

func (s *ListRemediationsResponseBodyRemediations) SetRemediationId(v string) *ListRemediationsResponseBodyRemediations {
	s.RemediationId = &v
	return s
}

func (s *ListRemediationsResponseBodyRemediations) SetRemediationOriginParams(v string) *ListRemediationsResponseBodyRemediations {
	s.RemediationOriginParams = &v
	return s
}

func (s *ListRemediationsResponseBodyRemediations) SetRemediationSourceType(v string) *ListRemediationsResponseBodyRemediations {
	s.RemediationSourceType = &v
	return s
}

func (s *ListRemediationsResponseBodyRemediations) SetRemediationTemplateId(v string) *ListRemediationsResponseBodyRemediations {
	s.RemediationTemplateId = &v
	return s
}

func (s *ListRemediationsResponseBodyRemediations) SetRemediationType(v string) *ListRemediationsResponseBodyRemediations {
	s.RemediationType = &v
	return s
}

type ListRemediationsResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListRemediationsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListRemediationsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListRemediationsResponse) GoString() string {
	return s.String()
}

func (s *ListRemediationsResponse) SetHeaders(v map[string]*string) *ListRemediationsResponse {
	s.Headers = v
	return s
}

func (s *ListRemediationsResponse) SetStatusCode(v int32) *ListRemediationsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListRemediationsResponse) SetBody(v *ListRemediationsResponseBody) *ListRemediationsResponse {
	s.Body = v
	return s
}

type ListResourceEvaluationResultsRequest struct {
	// The compliance evaluation result of the resource. Valid values:
	//
	// 	- COMPLIANT: The resource is evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resource is evaluated as non-compliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to the resources.
	//
	// 	- INSUFFICIENT_DATA: No data is available.
	//
	// 	- IGNORED: The resource is ignored during compliance evaluation.
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The maximum number of entries to return in a request. Valid values: 1 to 100.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The token that you want to use to initiate the current request. If the response of the previous request is truncated, you can use this token to initiate another request and obtain the remaining entries.``
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region where one or more resources you want to query reside. For example, the value `global` indicates global regions and the value `cn-hangzhou` indicates the China (Hangzhou) region.
	//
	// For more information about how to obtain the ID of the region where a resource resides, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// example:
	//
	// global
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the resource.
	//
	// For more information about how to obtain the ID of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// example:
	//
	// 23642660635396****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource.
	//
	// For more information about how to query the type of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// example:
	//
	// ACS::RAM::User
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s ListResourceEvaluationResultsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListResourceEvaluationResultsRequest) GoString() string {
	return s.String()
}

func (s *ListResourceEvaluationResultsRequest) SetComplianceType(v string) *ListResourceEvaluationResultsRequest {
	s.ComplianceType = &v
	return s
}

func (s *ListResourceEvaluationResultsRequest) SetMaxResults(v int32) *ListResourceEvaluationResultsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListResourceEvaluationResultsRequest) SetNextToken(v string) *ListResourceEvaluationResultsRequest {
	s.NextToken = &v
	return s
}

func (s *ListResourceEvaluationResultsRequest) SetRegion(v string) *ListResourceEvaluationResultsRequest {
	s.Region = &v
	return s
}

func (s *ListResourceEvaluationResultsRequest) SetResourceId(v string) *ListResourceEvaluationResultsRequest {
	s.ResourceId = &v
	return s
}

func (s *ListResourceEvaluationResultsRequest) SetResourceType(v string) *ListResourceEvaluationResultsRequest {
	s.ResourceType = &v
	return s
}

type ListResourceEvaluationResultsResponseBody struct {
	// The information about the compliance evaluation results returned.
	EvaluationResults *ListResourceEvaluationResultsResponseBodyEvaluationResults `json:"EvaluationResults,omitempty" xml:"EvaluationResults,omitempty" type:"Struct"`
	// The ID of the request.
	//
	// example:
	//
	// 25C89DDB-BB79-487D-88C3-4A561F21EFC4
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListResourceEvaluationResultsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListResourceEvaluationResultsResponseBody) GoString() string {
	return s.String()
}

func (s *ListResourceEvaluationResultsResponseBody) SetEvaluationResults(v *ListResourceEvaluationResultsResponseBodyEvaluationResults) *ListResourceEvaluationResultsResponseBody {
	s.EvaluationResults = v
	return s
}

func (s *ListResourceEvaluationResultsResponseBody) SetRequestId(v string) *ListResourceEvaluationResultsResponseBody {
	s.RequestId = &v
	return s
}

type ListResourceEvaluationResultsResponseBodyEvaluationResults struct {
	// The details of the compliance evaluation result.
	EvaluationResultList []*ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList `json:"EvaluationResultList,omitempty" xml:"EvaluationResultList,omitempty" type:"Repeated"`
	// The maximum number of entries to return for a single request.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The token that was used to initiate the next request.
	//
	// example:
	//
	// IWBjqMYSy0is7zSMGu16****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s ListResourceEvaluationResultsResponseBodyEvaluationResults) String() string {
	return tea.Prettify(s)
}

func (s ListResourceEvaluationResultsResponseBodyEvaluationResults) GoString() string {
	return s.String()
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResults) SetEvaluationResultList(v []*ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) *ListResourceEvaluationResultsResponseBodyEvaluationResults {
	s.EvaluationResultList = v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResults) SetMaxResults(v int32) *ListResourceEvaluationResultsResponseBodyEvaluationResults {
	s.MaxResults = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResults) SetNextToken(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResults {
	s.NextToken = &v
	return s
}

type ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList struct {
	// The annotation to the resource that is evaluated as incompliant. The following section describes the parameters that can be returned:
	//
	// 	- `configuration`: the current resource configuration that is evaluated as incompliant by using the rule.
	//
	// 	- `desiredValue`: the expected resource configuration that is evaluated as compliant by using the rule.
	//
	// 	- `operator`: the operator that is used to compare the current configuration with the expected configuration of the resource.
	//
	// 	- `property`: the JSON path of the current configuration in the resource property struct.
	//
	// 	- `reason`: the reason why the resource is evaluated as incompliant.
	//
	// example:
	//
	// {\\"configuration\\":\\"false\\",\\"desiredValue\\":\\"True\\",\\"operator\\":\\"StringEquals\\",\\"property\\":\\"$.LoginProfile.MFABindRequired\\"}
	Annotation *string `json:"Annotation,omitempty" xml:"Annotation,omitempty"`
	// The compliance evaluation result of the resources. Valid values:
	//
	// 	- COMPLIANT: The resources are evaluated as compliant.
	//
	// 	- NON_COMPLIANT: The resources are evaluated as incompliant.
	//
	// 	- NOT_APPLICABLE: The rule does not apply to your resources.
	//
	// 	- INSUFFICIENT_DATA: No resource data is available.
	//
	// 	- IGNORED: The resource is ignored during compliance evaluation.
	//
	// example:
	//
	// NON_COMPLIANT
	ComplianceType *string `json:"ComplianceType,omitempty" xml:"ComplianceType,omitempty"`
	// The timestamp when the rule was triggered for the compliance evaluation. Unit: milliseconds.
	//
	// example:
	//
	// 1624932227157
	ConfigRuleInvokedTimestamp *int64 `json:"ConfigRuleInvokedTimestamp,omitempty" xml:"ConfigRuleInvokedTimestamp,omitempty"`
	// The identifying information about the compliance evaluation result.
	EvaluationResultIdentifier *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier `json:"EvaluationResultIdentifier,omitempty" xml:"EvaluationResultIdentifier,omitempty" type:"Struct"`
	// The trigger type of the managed rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The managed rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The managed rule is periodically triggered.
	//
	// 	- Manual: The rule is manually triggered.
	//
	// example:
	//
	// ScheduledNotification
	InvokingEventMessageType *string `json:"InvokingEventMessageType,omitempty" xml:"InvokingEventMessageType,omitempty"`
	// Indicates whether the remediation template is enabled. Valid values:
	//
	// - true: The remediation template is enabled.
	//
	// - false: The remediation template is disabled.
	//
	// example:
	//
	// true
	RemediationEnabled *bool `json:"RemediationEnabled,omitempty" xml:"RemediationEnabled,omitempty"`
	// The timestamp when the compliance evaluation result was recorded. Unit: milliseconds.
	//
	// example:
	//
	// 1624932227595
	ResultRecordedTimestamp *int64 `json:"ResultRecordedTimestamp,omitempty" xml:"ResultRecordedTimestamp,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high risk level
	//
	// 	- 2: medium risk level
	//
	// 	- 3: low risk level
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) String() string {
	return tea.Prettify(s)
}

func (s ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) GoString() string {
	return s.String()
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetAnnotation(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.Annotation = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetComplianceType(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ComplianceType = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetConfigRuleInvokedTimestamp(v int64) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ConfigRuleInvokedTimestamp = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetEvaluationResultIdentifier(v *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.EvaluationResultIdentifier = v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetInvokingEventMessageType(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.InvokingEventMessageType = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetRemediationEnabled(v bool) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.RemediationEnabled = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetResultRecordedTimestamp(v int64) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.ResultRecordedTimestamp = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList) SetRiskLevel(v int32) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultList {
	s.RiskLevel = &v
	return s
}

type ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier struct {
	// The information about the evaluated resource returned in the compliance evaluation result.
	EvaluationResultQualifier *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier `json:"EvaluationResultQualifier,omitempty" xml:"EvaluationResultQualifier,omitempty" type:"Struct"`
	// The timestamp when the compliance evaluation was performed. Unit: milliseconds.
	//
	// example:
	//
	// 1624932227157
	OrderingTimestamp *int64 `json:"OrderingTimestamp,omitempty" xml:"OrderingTimestamp,omitempty"`
}

func (s ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) String() string {
	return tea.Prettify(s)
}

func (s ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) GoString() string {
	return s.String()
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) SetEvaluationResultQualifier(v *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier {
	s.EvaluationResultQualifier = v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier) SetOrderingTimestamp(v int64) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifier {
	s.OrderingTimestamp = &v
	return s
}

type ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier struct {
	// The Alibaba Cloud Resource Name (ARN) of the rule.
	//
	// example:
	//
	// acs:config::100931896542****:rule/cr-7f7d626622af0041****
	ConfigRuleArn *string `json:"ConfigRuleArn,omitempty" xml:"ConfigRuleArn,omitempty"`
	// The ID of the rule.
	//
	// example:
	//
	// cr-7f7d626622af0041****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the monitoring rule.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The date from which the system automatically re-evaluates the ignored incompliant resources.
	//
	// >  If the value of this parameter is left empty, the system does not automatically re-evaluate the ignored incompliant resources. You must re-evaluate the ignored incompliant resources.
	//
	// example:
	//
	// 2022-06-01
	IgnoreDate *string `json:"IgnoreDate,omitempty" xml:"IgnoreDate,omitempty"`
	// The ID of the region where your resources reside.
	//
	// example:
	//
	// global
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The ID of the resource.
	//
	// example:
	//
	// 23642660635396****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The name of the resource.
	//
	// example:
	//
	// Alice
	ResourceName *string `json:"ResourceName,omitempty" xml:"ResourceName,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::RAM::User
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) String() string {
	return tea.Prettify(s)
}

func (s ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) GoString() string {
	return s.String()
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleArn(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleArn = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleId(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleId = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetConfigRuleName(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ConfigRuleName = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetIgnoreDate(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.IgnoreDate = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetRegionId(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.RegionId = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceId(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceId = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceName(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceName = &v
	return s
}

func (s *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier) SetResourceType(v string) *ListResourceEvaluationResultsResponseBodyEvaluationResultsEvaluationResultListEvaluationResultIdentifierEvaluationResultQualifier {
	s.ResourceType = &v
	return s
}

type ListResourceEvaluationResultsResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListResourceEvaluationResultsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListResourceEvaluationResultsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListResourceEvaluationResultsResponse) GoString() string {
	return s.String()
}

func (s *ListResourceEvaluationResultsResponse) SetHeaders(v map[string]*string) *ListResourceEvaluationResultsResponse {
	s.Headers = v
	return s
}

func (s *ListResourceEvaluationResultsResponse) SetStatusCode(v int32) *ListResourceEvaluationResultsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListResourceEvaluationResultsResponse) SetBody(v *ListResourceEvaluationResultsResponseBody) *ListResourceEvaluationResultsResponse {
	s.Body = v
	return s
}

type ListResourceRelationsRequest struct {
	// The maximum number of entries to return in a request. Valid values: 1 to 1000.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.
	//
	// example:
	//
	// C2DjqMYSy0is7zSMGf21****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region in which the resource resides.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-shanghai
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The type of the relationship between the resource and the object.
	//
	// Valid values:
	//
	// 	- IsContained: The object is included as part of the resource.
	//
	// 	- IsAttachedTo: The object is added to the resource.
	//
	// 	- IsAssociatedIn: The object is associated with the resource.
	//
	// 	- Contains: The object contains the resource.
	//
	// example:
	//
	// IsAttachedTo
	RelationType *string `json:"RelationType,omitempty" xml:"RelationType,omitempty"`
	// The resource ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// i-j6cajg9yrfoh4sas****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource.
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The ID of the resource that is associated with the object.
	//
	// example:
	//
	// d-j6c8k731qbrc7fxi****
	TargetResourceId *string `json:"TargetResourceId,omitempty" xml:"TargetResourceId,omitempty"`
	// The type of the resource that is associated with the object.
	//
	// example:
	//
	// ACS::ECS::Disk
	TargetResourceType *string `json:"TargetResourceType,omitempty" xml:"TargetResourceType,omitempty"`
}

func (s ListResourceRelationsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListResourceRelationsRequest) GoString() string {
	return s.String()
}

func (s *ListResourceRelationsRequest) SetMaxResults(v int32) *ListResourceRelationsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListResourceRelationsRequest) SetNextToken(v string) *ListResourceRelationsRequest {
	s.NextToken = &v
	return s
}

func (s *ListResourceRelationsRequest) SetRegion(v string) *ListResourceRelationsRequest {
	s.Region = &v
	return s
}

func (s *ListResourceRelationsRequest) SetRelationType(v string) *ListResourceRelationsRequest {
	s.RelationType = &v
	return s
}

func (s *ListResourceRelationsRequest) SetResourceId(v string) *ListResourceRelationsRequest {
	s.ResourceId = &v
	return s
}

func (s *ListResourceRelationsRequest) SetResourceType(v string) *ListResourceRelationsRequest {
	s.ResourceType = &v
	return s
}

func (s *ListResourceRelationsRequest) SetTargetResourceId(v string) *ListResourceRelationsRequest {
	s.TargetResourceId = &v
	return s
}

func (s *ListResourceRelationsRequest) SetTargetResourceType(v string) *ListResourceRelationsRequest {
	s.TargetResourceType = &v
	return s
}

type ListResourceRelationsResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 6525F8DE-5A8B-5AD3-A241-BBF5A259E5B2
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The result of the relationship.
	ResourceRelations *ListResourceRelationsResponseBodyResourceRelations `json:"ResourceRelations,omitempty" xml:"ResourceRelations,omitempty" type:"Struct"`
}

func (s ListResourceRelationsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListResourceRelationsResponseBody) GoString() string {
	return s.String()
}

func (s *ListResourceRelationsResponseBody) SetRequestId(v string) *ListResourceRelationsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListResourceRelationsResponseBody) SetResourceRelations(v *ListResourceRelationsResponseBodyResourceRelations) *ListResourceRelationsResponseBody {
	s.ResourceRelations = v
	return s
}

type ListResourceRelationsResponseBodyResourceRelations struct {
	// The maximum number of entries returned on each page.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The token that was used to initiate the next request.
	//
	// example:
	//
	// C2DjqMYSy0is7zSMGf21****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// An array that contains the relationships.
	ResourceRelationList []*ListResourceRelationsResponseBodyResourceRelationsResourceRelationList `json:"ResourceRelationList,omitempty" xml:"ResourceRelationList,omitempty" type:"Repeated"`
}

func (s ListResourceRelationsResponseBodyResourceRelations) String() string {
	return tea.Prettify(s)
}

func (s ListResourceRelationsResponseBodyResourceRelations) GoString() string {
	return s.String()
}

func (s *ListResourceRelationsResponseBodyResourceRelations) SetMaxResults(v int32) *ListResourceRelationsResponseBodyResourceRelations {
	s.MaxResults = &v
	return s
}

func (s *ListResourceRelationsResponseBodyResourceRelations) SetNextToken(v string) *ListResourceRelationsResponseBodyResourceRelations {
	s.NextToken = &v
	return s
}

func (s *ListResourceRelationsResponseBodyResourceRelations) SetResourceRelationList(v []*ListResourceRelationsResponseBodyResourceRelationsResourceRelationList) *ListResourceRelationsResponseBodyResourceRelations {
	s.ResourceRelationList = v
	return s
}

type ListResourceRelationsResponseBodyResourceRelationsResourceRelationList struct {
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// example:
	//
	// 100931896542****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The type of the relationship between the resource and the object.
	//
	// Valid values:
	//
	// 	- IsContained: The object is included as part of the resource.
	//
	// 	- IsAttachedTo: The object is added to the resource.
	//
	// 	- IsAssociatedIn: The object is associated with the resource.
	//
	// 	- Contains: The object contains the resource.
	//
	// example:
	//
	// IsAttachedTo
	RelationType *string `json:"RelationType,omitempty" xml:"RelationType,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// i-j6cajg9yrfoh4sas****
	SourceResourceId *string `json:"SourceResourceId,omitempty" xml:"SourceResourceId,omitempty"`
	// The ID of the region in which the resource resides.
	//
	// example:
	//
	// cn-shanghai
	SourceResourceRegionId *string `json:"SourceResourceRegionId,omitempty" xml:"SourceResourceRegionId,omitempty"`
	// The type of the resource.
	//
	// example:
	//
	// ACS::ECS::Instance
	SourceResourceType *string `json:"SourceResourceType,omitempty" xml:"SourceResourceType,omitempty"`
	// The ID of the associated resource.
	//
	// example:
	//
	// d-j6c8k731qbrc7fxi****
	TargetResourceId *string `json:"TargetResourceId,omitempty" xml:"TargetResourceId,omitempty"`
	// The type of the associated resource.
	//
	// example:
	//
	// ACS::ECS::Disk
	TargetResourceType *string `json:"TargetResourceType,omitempty" xml:"TargetResourceType,omitempty"`
}

func (s ListResourceRelationsResponseBodyResourceRelationsResourceRelationList) String() string {
	return tea.Prettify(s)
}

func (s ListResourceRelationsResponseBodyResourceRelationsResourceRelationList) GoString() string {
	return s.String()
}

func (s *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetAccountId(v int64) *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.AccountId = &v
	return s
}

func (s *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetRelationType(v string) *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.RelationType = &v
	return s
}

func (s *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetSourceResourceId(v string) *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.SourceResourceId = &v
	return s
}

func (s *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetSourceResourceRegionId(v string) *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.SourceResourceRegionId = &v
	return s
}

func (s *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetSourceResourceType(v string) *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.SourceResourceType = &v
	return s
}

func (s *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetTargetResourceId(v string) *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.TargetResourceId = &v
	return s
}

func (s *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList) SetTargetResourceType(v string) *ListResourceRelationsResponseBodyResourceRelationsResourceRelationList {
	s.TargetResourceType = &v
	return s
}

type ListResourceRelationsResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListResourceRelationsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListResourceRelationsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListResourceRelationsResponse) GoString() string {
	return s.String()
}

func (s *ListResourceRelationsResponse) SetHeaders(v map[string]*string) *ListResourceRelationsResponse {
	s.Headers = v
	return s
}

func (s *ListResourceRelationsResponse) SetStatusCode(v int32) *ListResourceRelationsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListResourceRelationsResponse) SetBody(v *ListResourceRelationsResponseBody) *ListResourceRelationsResponse {
	s.Body = v
	return s
}

type ListResourcesByAdvancedSearchRequest struct {
	// The SQL query statement.
	//
	// This parameter is required.
	//
	// example:
	//
	// SELECT ResourceId, ResourceName WHERE Tags.Kvpair=\\"business:online\\"
	Sql *string `json:"Sql,omitempty" xml:"Sql,omitempty"`
}

func (s ListResourcesByAdvancedSearchRequest) String() string {
	return tea.Prettify(s)
}

func (s ListResourcesByAdvancedSearchRequest) GoString() string {
	return s.String()
}

func (s *ListResourcesByAdvancedSearchRequest) SetSql(v string) *ListResourcesByAdvancedSearchRequest {
	s.Sql = &v
	return s
}

type ListResourcesByAdvancedSearchResponseBody struct {
	// The query result.
	QueryResults *ListResourcesByAdvancedSearchResponseBodyQueryResults `json:"QueryResults,omitempty" xml:"QueryResults,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// D241DEBF-67A2-56AF-88CF-57BF78F0A850
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListResourcesByAdvancedSearchResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListResourcesByAdvancedSearchResponseBody) GoString() string {
	return s.String()
}

func (s *ListResourcesByAdvancedSearchResponseBody) SetQueryResults(v *ListResourcesByAdvancedSearchResponseBodyQueryResults) *ListResourcesByAdvancedSearchResponseBody {
	s.QueryResults = v
	return s
}

func (s *ListResourcesByAdvancedSearchResponseBody) SetRequestId(v string) *ListResourcesByAdvancedSearchResponseBody {
	s.RequestId = &v
	return s
}

type ListResourcesByAdvancedSearchResponseBodyQueryResults struct {
	// The queried resources. A maximum of 1,000 data records can be returned. To view more data, use the download URL of the resource file.
	QueryResultList *ListResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList `json:"QueryResultList,omitempty" xml:"QueryResultList,omitempty" type:"Struct"`
}

func (s ListResourcesByAdvancedSearchResponseBodyQueryResults) String() string {
	return tea.Prettify(s)
}

func (s ListResourcesByAdvancedSearchResponseBodyQueryResults) GoString() string {
	return s.String()
}

func (s *ListResourcesByAdvancedSearchResponseBodyQueryResults) SetQueryResultList(v *ListResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList) *ListResourcesByAdvancedSearchResponseBodyQueryResults {
	s.QueryResultList = v
	return s
}

type ListResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList struct {
	// The field names.
	Columns []*string `json:"Columns,omitempty" xml:"Columns,omitempty" type:"Repeated"`
	// The resource data.
	Values []interface{} `json:"Values,omitempty" xml:"Values,omitempty" type:"Repeated"`
}

func (s ListResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList) String() string {
	return tea.Prettify(s)
}

func (s ListResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList) GoString() string {
	return s.String()
}

func (s *ListResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList) SetColumns(v []*string) *ListResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList {
	s.Columns = v
	return s
}

func (s *ListResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList) SetValues(v []interface{}) *ListResourcesByAdvancedSearchResponseBodyQueryResultsQueryResultList {
	s.Values = v
	return s
}

type ListResourcesByAdvancedSearchResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListResourcesByAdvancedSearchResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListResourcesByAdvancedSearchResponse) String() string {
	return tea.Prettify(s)
}

func (s ListResourcesByAdvancedSearchResponse) GoString() string {
	return s.String()
}

func (s *ListResourcesByAdvancedSearchResponse) SetHeaders(v map[string]*string) *ListResourcesByAdvancedSearchResponse {
	s.Headers = v
	return s
}

func (s *ListResourcesByAdvancedSearchResponse) SetStatusCode(v int32) *ListResourcesByAdvancedSearchResponse {
	s.StatusCode = &v
	return s
}

func (s *ListResourcesByAdvancedSearchResponse) SetBody(v *ListResourcesByAdvancedSearchResponseBody) *ListResourcesByAdvancedSearchResponse {
	s.Body = v
	return s
}

type ListSupportedProductsRequest struct {
	// The maximum number of entries to return in a request.
	//
	// Valid values: 1 to 500. Default value: 200.
	//
	// example:
	//
	// 100
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.
	//
	// example:
	//
	// D3AjqMNSy0ls7zBNCf3a****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
}

func (s ListSupportedProductsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListSupportedProductsRequest) GoString() string {
	return s.String()
}

func (s *ListSupportedProductsRequest) SetMaxResults(v int32) *ListSupportedProductsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListSupportedProductsRequest) SetNextToken(v string) *ListSupportedProductsRequest {
	s.NextToken = &v
	return s
}

type ListSupportedProductsResponseBody struct {
	// The maximum number of entries to return for a single request. Valid values: 1 to 500.
	//
	// example:
	//
	// 100
	MaxResults *string `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token. It can be used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// D3AjqMNSy0ls7zBNCf3a****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The cloud services that are supported by Cloud Config.
	Products []*ListSupportedProductsResponseBodyProducts `json:"Products,omitempty" xml:"Products,omitempty" type:"Repeated"`
	// The request ID.
	//
	// example:
	//
	// 610B0276-ABEE-57DF-9C13-C2324FADA9D7
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s ListSupportedProductsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListSupportedProductsResponseBody) GoString() string {
	return s.String()
}

func (s *ListSupportedProductsResponseBody) SetMaxResults(v string) *ListSupportedProductsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListSupportedProductsResponseBody) SetNextToken(v string) *ListSupportedProductsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListSupportedProductsResponseBody) SetProducts(v []*ListSupportedProductsResponseBodyProducts) *ListSupportedProductsResponseBody {
	s.Products = v
	return s
}

func (s *ListSupportedProductsResponseBody) SetRequestId(v string) *ListSupportedProductsResponseBody {
	s.RequestId = &v
	return s
}

type ListSupportedProductsResponseBodyProducts struct {
	// The English name of the Alibaba Cloud service.
	//
	// example:
	//
	// Elastic Compute Service
	ProductNameEn *string `json:"ProductNameEn,omitempty" xml:"ProductNameEn,omitempty"`
	// The Chinese name of the Alibaba Cloud service.
	//
	// example:
	//
	// 云服务器ECS
	ProductNameZh *string `json:"ProductNameZh,omitempty" xml:"ProductNameZh,omitempty"`
	// The resource types that are supported by Cloud Config.
	ResourceTypeList []*ListSupportedProductsResponseBodyProductsResourceTypeList `json:"ResourceTypeList,omitempty" xml:"ResourceTypeList,omitempty" type:"Repeated"`
}

func (s ListSupportedProductsResponseBodyProducts) String() string {
	return tea.Prettify(s)
}

func (s ListSupportedProductsResponseBodyProducts) GoString() string {
	return s.String()
}

func (s *ListSupportedProductsResponseBodyProducts) SetProductNameEn(v string) *ListSupportedProductsResponseBodyProducts {
	s.ProductNameEn = &v
	return s
}

func (s *ListSupportedProductsResponseBodyProducts) SetProductNameZh(v string) *ListSupportedProductsResponseBodyProducts {
	s.ProductNameZh = &v
	return s
}

func (s *ListSupportedProductsResponseBodyProducts) SetResourceTypeList(v []*ListSupportedProductsResponseBodyProductsResourceTypeList) *ListSupportedProductsResponseBodyProducts {
	s.ResourceTypeList = v
	return s
}

type ListSupportedProductsResponseBodyProductsResourceTypeList struct {
	// The identifier of the resource type.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The English name of the resource type.
	//
	// example:
	//
	// Ecs Instance
	TypeNameEn *string `json:"TypeNameEn,omitempty" xml:"TypeNameEn,omitempty"`
	// The Chinese name of the resource type.
	//
	// example:
	//
	// ECS实例
	TypeNameZh *string `json:"TypeNameZh,omitempty" xml:"TypeNameZh,omitempty"`
	// The URL of the resource type in the console.
	//
	// example:
	//
	// https://ecs.console.aliyun.com/#/server/@{ResourceId}/detail?regionId=@{RegionId}
	TypePageLink *string `json:"TypePageLink,omitempty" xml:"TypePageLink,omitempty"`
}

func (s ListSupportedProductsResponseBodyProductsResourceTypeList) String() string {
	return tea.Prettify(s)
}

func (s ListSupportedProductsResponseBodyProductsResourceTypeList) GoString() string {
	return s.String()
}

func (s *ListSupportedProductsResponseBodyProductsResourceTypeList) SetResourceType(v string) *ListSupportedProductsResponseBodyProductsResourceTypeList {
	s.ResourceType = &v
	return s
}

func (s *ListSupportedProductsResponseBodyProductsResourceTypeList) SetTypeNameEn(v string) *ListSupportedProductsResponseBodyProductsResourceTypeList {
	s.TypeNameEn = &v
	return s
}

func (s *ListSupportedProductsResponseBodyProductsResourceTypeList) SetTypeNameZh(v string) *ListSupportedProductsResponseBodyProductsResourceTypeList {
	s.TypeNameZh = &v
	return s
}

func (s *ListSupportedProductsResponseBodyProductsResourceTypeList) SetTypePageLink(v string) *ListSupportedProductsResponseBodyProductsResourceTypeList {
	s.TypePageLink = &v
	return s
}

type ListSupportedProductsResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListSupportedProductsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListSupportedProductsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListSupportedProductsResponse) GoString() string {
	return s.String()
}

func (s *ListSupportedProductsResponse) SetHeaders(v map[string]*string) *ListSupportedProductsResponse {
	s.Headers = v
	return s
}

func (s *ListSupportedProductsResponse) SetStatusCode(v int32) *ListSupportedProductsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListSupportedProductsResponse) SetBody(v *ListSupportedProductsResponseBody) *ListSupportedProductsResponse {
	s.Body = v
	return s
}

type ListTagResourcesRequest struct {
	// The pagination token that is used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// MTRBMDc0NjAtRUJFNy00N0NBLTk3NTctMTJ****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The region ID of the tag.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-shanghai
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The resource ID.
	//
	// You can add tags to up to 50 resources.
	ResourceId []*string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty" type:"Repeated"`
	// The resource type. Valid values:
	//
	// 	- `ACS::Config::Rule`
	//
	// 	- `ACS::Config::AggregateConfigRule`
	//
	// 	- `ACS::Config::Aggregator`
	//
	// 	- `ACS::Config::CompliancePack`
	//
	// 	- `ACS::Config::AggregateCompliancePack`
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::Config:rule
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*ListTagResourcesRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s ListTagResourcesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesRequest) GoString() string {
	return s.String()
}

func (s *ListTagResourcesRequest) SetNextToken(v string) *ListTagResourcesRequest {
	s.NextToken = &v
	return s
}

func (s *ListTagResourcesRequest) SetRegionId(v string) *ListTagResourcesRequest {
	s.RegionId = &v
	return s
}

func (s *ListTagResourcesRequest) SetResourceId(v []*string) *ListTagResourcesRequest {
	s.ResourceId = v
	return s
}

func (s *ListTagResourcesRequest) SetResourceType(v string) *ListTagResourcesRequest {
	s.ResourceType = &v
	return s
}

func (s *ListTagResourcesRequest) SetTag(v []*ListTagResourcesRequestTag) *ListTagResourcesRequest {
	s.Tag = v
	return s
}

type ListTagResourcesRequestTag struct {
	// The key of the tag that is added to the resource.
	//
	// You can add up to 20 tag keys to a resource.
	//
	// example:
	//
	// Env
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The value of the tag that is added to the resource.
	//
	// You can add up to 20 tag values to a resource.
	//
	// example:
	//
	// prod
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListTagResourcesRequestTag) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesRequestTag) GoString() string {
	return s.String()
}

func (s *ListTagResourcesRequestTag) SetKey(v string) *ListTagResourcesRequestTag {
	s.Key = &v
	return s
}

func (s *ListTagResourcesRequestTag) SetValue(v string) *ListTagResourcesRequestTag {
	s.Value = &v
	return s
}

type ListTagResourcesShrinkRequest struct {
	// The pagination token that is used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// MTRBMDc0NjAtRUJFNy00N0NBLTk3NTctMTJ****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The region ID of the tag.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-shanghai
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The resource ID.
	//
	// You can add tags to up to 50 resources.
	ResourceId []*string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty" type:"Repeated"`
	// The resource type. Valid values:
	//
	// 	- `ACS::Config::Rule`
	//
	// 	- `ACS::Config::AggregateConfigRule`
	//
	// 	- `ACS::Config::Aggregator`
	//
	// 	- `ACS::Config::CompliancePack`
	//
	// 	- `ACS::Config::AggregateCompliancePack`
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::Config:rule
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s ListTagResourcesShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesShrinkRequest) GoString() string {
	return s.String()
}

func (s *ListTagResourcesShrinkRequest) SetNextToken(v string) *ListTagResourcesShrinkRequest {
	s.NextToken = &v
	return s
}

func (s *ListTagResourcesShrinkRequest) SetRegionId(v string) *ListTagResourcesShrinkRequest {
	s.RegionId = &v
	return s
}

func (s *ListTagResourcesShrinkRequest) SetResourceId(v []*string) *ListTagResourcesShrinkRequest {
	s.ResourceId = v
	return s
}

func (s *ListTagResourcesShrinkRequest) SetResourceType(v string) *ListTagResourcesShrinkRequest {
	s.ResourceType = &v
	return s
}

func (s *ListTagResourcesShrinkRequest) SetTagShrink(v string) *ListTagResourcesShrinkRequest {
	s.TagShrink = &v
	return s
}

type ListTagResourcesResponseBody struct {
	// A pagination token. It can be used in the next request to retrieve a new page of results.
	//
	// > If NextToken is empty, no next page exists.
	//
	// example:
	//
	// MTRBMDc0NjAtRUJFNy00N0NBLTk3NTctMTJ****
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// AB2E4317-06A6-5745-B7C3-E001E551****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The tags of the resource.
	TagResources *ListTagResourcesResponseBodyTagResources `json:"TagResources,omitempty" xml:"TagResources,omitempty" type:"Struct"`
}

func (s ListTagResourcesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesResponseBody) GoString() string {
	return s.String()
}

func (s *ListTagResourcesResponseBody) SetNextToken(v string) *ListTagResourcesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListTagResourcesResponseBody) SetRequestId(v string) *ListTagResourcesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListTagResourcesResponseBody) SetTagResources(v *ListTagResourcesResponseBodyTagResources) *ListTagResourcesResponseBody {
	s.TagResources = v
	return s
}

type ListTagResourcesResponseBodyTagResources struct {
	TagResource []*ListTagResourcesResponseBodyTagResourcesTagResource `json:"TagResource,omitempty" xml:"TagResource,omitempty" type:"Repeated"`
}

func (s ListTagResourcesResponseBodyTagResources) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesResponseBodyTagResources) GoString() string {
	return s.String()
}

func (s *ListTagResourcesResponseBodyTagResources) SetTagResource(v []*ListTagResourcesResponseBodyTagResourcesTagResource) *ListTagResourcesResponseBodyTagResources {
	s.TagResource = v
	return s
}

type ListTagResourcesResponseBodyTagResourcesTagResource struct {
	// The resource ID.
	//
	// example:
	//
	// cr-115b626622af0060****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource type.
	//
	// example:
	//
	// ACS::Config:rule
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tag key.
	//
	// example:
	//
	// Env
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// prod
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s ListTagResourcesResponseBodyTagResourcesTagResource) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesResponseBodyTagResourcesTagResource) GoString() string {
	return s.String()
}

func (s *ListTagResourcesResponseBodyTagResourcesTagResource) SetResourceId(v string) *ListTagResourcesResponseBodyTagResourcesTagResource {
	s.ResourceId = &v
	return s
}

func (s *ListTagResourcesResponseBodyTagResourcesTagResource) SetResourceType(v string) *ListTagResourcesResponseBodyTagResourcesTagResource {
	s.ResourceType = &v
	return s
}

func (s *ListTagResourcesResponseBodyTagResourcesTagResource) SetTagKey(v string) *ListTagResourcesResponseBodyTagResourcesTagResource {
	s.TagKey = &v
	return s
}

func (s *ListTagResourcesResponseBodyTagResourcesTagResource) SetTagValue(v string) *ListTagResourcesResponseBodyTagResourcesTagResource {
	s.TagValue = &v
	return s
}

type ListTagResourcesResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListTagResourcesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListTagResourcesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesResponse) GoString() string {
	return s.String()
}

func (s *ListTagResourcesResponse) SetHeaders(v map[string]*string) *ListTagResourcesResponse {
	s.Headers = v
	return s
}

func (s *ListTagResourcesResponse) SetStatusCode(v int32) *ListTagResourcesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListTagResourcesResponse) SetBody(v *ListTagResourcesResponseBody) *ListTagResourcesResponse {
	s.Body = v
	return s
}

type PutEvaluationsRequest struct {
	// Specifies whether to enable the delete mode. Valid values:
	//
	// 	- true: enables the delete mode
	//
	// 	- false (default): disables the delete mode
	//
	// > This parameter is valid only when you manually trigger or periodically trigger custom rules to evaluate resources. If you enable the delete mode, the evaluation results that are not updated during the current evaluation are automatically deleted.
	//
	// example:
	//
	// false
	DeleteMode *bool `json:"DeleteMode,omitempty" xml:"DeleteMode,omitempty"`
	// The evaluation results.
	//
	// example:
	//
	// [{"accountId":120886317861****,"annotation":"The flow log is not enabled.","complianceResourceId":"flowlog-o6wdfo1yvgo4i8****","complianceResourceType":"ACS::CEN::Flowlog","complianceRegionId":"cn-shanghai","complianceType":"NON_COMPLIANT","orderingTimestamp":1588907220408}]
	Evaluations *string `json:"Evaluations,omitempty" xml:"Evaluations,omitempty"`
	// The callback token. When Cloud Config triggers a custom rule to evaluate resources, the token information is sent to Function Compute as an input parameter. The token must be specified when you submit the evaluation results.
	//
	// This parameter is required.
	//
	// example:
	//
	// =lAUbfkWp7GL9AFoQEIStinqBMc4FC8sHvip/1F1npkWUDNS2GEm6xwL6Zl/fSr0bbkWY+aiCLjTJxnp4H/yp/8p/Q8VCAtqG5uhRii4sfnYRnTPnE****
	ResultToken *string `json:"ResultToken,omitempty" xml:"ResultToken,omitempty"`
}

func (s PutEvaluationsRequest) String() string {
	return tea.Prettify(s)
}

func (s PutEvaluationsRequest) GoString() string {
	return s.String()
}

func (s *PutEvaluationsRequest) SetDeleteMode(v bool) *PutEvaluationsRequest {
	s.DeleteMode = &v
	return s
}

func (s *PutEvaluationsRequest) SetEvaluations(v string) *PutEvaluationsRequest {
	s.Evaluations = &v
	return s
}

func (s *PutEvaluationsRequest) SetResultToken(v string) *PutEvaluationsRequest {
	s.ResultToken = &v
	return s
}

type PutEvaluationsResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// EDB324E2-A202-5FE4-A9BC-31E2C34F78A4
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Indicates whether the evaluation results of the custom rule are submitted. Valid values:
	//
	// 	- true: The evaluation results are submitted.
	//
	// 	- false: The evaluation results fail to be submitted.
	//
	// example:
	//
	// true
	Result *bool `json:"Result,omitempty" xml:"Result,omitempty"`
}

func (s PutEvaluationsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s PutEvaluationsResponseBody) GoString() string {
	return s.String()
}

func (s *PutEvaluationsResponseBody) SetRequestId(v string) *PutEvaluationsResponseBody {
	s.RequestId = &v
	return s
}

func (s *PutEvaluationsResponseBody) SetResult(v bool) *PutEvaluationsResponseBody {
	s.Result = &v
	return s
}

type PutEvaluationsResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *PutEvaluationsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s PutEvaluationsResponse) String() string {
	return tea.Prettify(s)
}

func (s PutEvaluationsResponse) GoString() string {
	return s.String()
}

func (s *PutEvaluationsResponse) SetHeaders(v map[string]*string) *PutEvaluationsResponse {
	s.Headers = v
	return s
}

func (s *PutEvaluationsResponse) SetStatusCode(v int32) *PutEvaluationsResponse {
	s.StatusCode = &v
	return s
}

func (s *PutEvaluationsResponse) SetBody(v *PutEvaluationsResponseBody) *PutEvaluationsResponse {
	s.Body = v
	return s
}

type RevertAggregateEvaluationResultsRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-5b6c626622af008f****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the rule in the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7e72626622af0051****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The resources that you want to re-evaluate.
	//
	// This parameter is required.
	Resources []*RevertAggregateEvaluationResultsRequestResources `json:"Resources,omitempty" xml:"Resources,omitempty" type:"Repeated"`
}

func (s RevertAggregateEvaluationResultsRequest) String() string {
	return tea.Prettify(s)
}

func (s RevertAggregateEvaluationResultsRequest) GoString() string {
	return s.String()
}

func (s *RevertAggregateEvaluationResultsRequest) SetAggregatorId(v string) *RevertAggregateEvaluationResultsRequest {
	s.AggregatorId = &v
	return s
}

func (s *RevertAggregateEvaluationResultsRequest) SetConfigRuleId(v string) *RevertAggregateEvaluationResultsRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *RevertAggregateEvaluationResultsRequest) SetResources(v []*RevertAggregateEvaluationResultsRequestResources) *RevertAggregateEvaluationResultsRequest {
	s.Resources = v
	return s
}

type RevertAggregateEvaluationResultsRequestResources struct {
	// The ID of the region in which your resources reside.
	//
	// For more information about how to obtain the ID of the region in which your resources reside, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-beijing
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// >  You must specify the ID of the current management account or a member in the account group of the management account.
	//
	// This parameter is required.
	//
	// example:
	//
	// 120886317861****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// The resource ID.
	//
	// For more information about how to obtain the ID of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// lb-hp3a3b4ztyfm2plgm****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource.
	//
	// For more information about how to obtain the type of a resource, see [ListAggregateDiscoveredResources](https://help.aliyun.com/document_detail/265983.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::SLB::LoadBalancer
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s RevertAggregateEvaluationResultsRequestResources) String() string {
	return tea.Prettify(s)
}

func (s RevertAggregateEvaluationResultsRequestResources) GoString() string {
	return s.String()
}

func (s *RevertAggregateEvaluationResultsRequestResources) SetRegion(v string) *RevertAggregateEvaluationResultsRequestResources {
	s.Region = &v
	return s
}

func (s *RevertAggregateEvaluationResultsRequestResources) SetResourceAccountId(v int64) *RevertAggregateEvaluationResultsRequestResources {
	s.ResourceAccountId = &v
	return s
}

func (s *RevertAggregateEvaluationResultsRequestResources) SetResourceId(v string) *RevertAggregateEvaluationResultsRequestResources {
	s.ResourceId = &v
	return s
}

func (s *RevertAggregateEvaluationResultsRequestResources) SetResourceType(v string) *RevertAggregateEvaluationResultsRequestResources {
	s.ResourceType = &v
	return s
}

type RevertAggregateEvaluationResultsShrinkRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-5b6c626622af008f****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the rule in the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7e72626622af0051****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The resources that you want to re-evaluate.
	//
	// This parameter is required.
	ResourcesShrink *string `json:"Resources,omitempty" xml:"Resources,omitempty"`
}

func (s RevertAggregateEvaluationResultsShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s RevertAggregateEvaluationResultsShrinkRequest) GoString() string {
	return s.String()
}

func (s *RevertAggregateEvaluationResultsShrinkRequest) SetAggregatorId(v string) *RevertAggregateEvaluationResultsShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *RevertAggregateEvaluationResultsShrinkRequest) SetConfigRuleId(v string) *RevertAggregateEvaluationResultsShrinkRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *RevertAggregateEvaluationResultsShrinkRequest) SetResourcesShrink(v string) *RevertAggregateEvaluationResultsShrinkRequest {
	s.ResourcesShrink = &v
	return s
}

type RevertAggregateEvaluationResultsResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// BB11CBF2-0B0B-59F2-9E84-07B38267AD12
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s RevertAggregateEvaluationResultsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s RevertAggregateEvaluationResultsResponseBody) GoString() string {
	return s.String()
}

func (s *RevertAggregateEvaluationResultsResponseBody) SetRequestId(v string) *RevertAggregateEvaluationResultsResponseBody {
	s.RequestId = &v
	return s
}

type RevertAggregateEvaluationResultsResponse struct {
	Headers    map[string]*string                            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *RevertAggregateEvaluationResultsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s RevertAggregateEvaluationResultsResponse) String() string {
	return tea.Prettify(s)
}

func (s RevertAggregateEvaluationResultsResponse) GoString() string {
	return s.String()
}

func (s *RevertAggregateEvaluationResultsResponse) SetHeaders(v map[string]*string) *RevertAggregateEvaluationResultsResponse {
	s.Headers = v
	return s
}

func (s *RevertAggregateEvaluationResultsResponse) SetStatusCode(v int32) *RevertAggregateEvaluationResultsResponse {
	s.StatusCode = &v
	return s
}

func (s *RevertAggregateEvaluationResultsResponse) SetBody(v *RevertAggregateEvaluationResultsResponseBody) *RevertAggregateEvaluationResultsResponse {
	s.Body = v
	return s
}

type RevertEvaluationResultsRequest struct {
	// The rule ID.
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7e72626622af0051****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The resources that are to be re-evaluated.
	//
	// This parameter is required.
	Resources []*RevertEvaluationResultsRequestResources `json:"Resources,omitempty" xml:"Resources,omitempty" type:"Repeated"`
}

func (s RevertEvaluationResultsRequest) String() string {
	return tea.Prettify(s)
}

func (s RevertEvaluationResultsRequest) GoString() string {
	return s.String()
}

func (s *RevertEvaluationResultsRequest) SetConfigRuleId(v string) *RevertEvaluationResultsRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *RevertEvaluationResultsRequest) SetResources(v []*RevertEvaluationResultsRequestResources) *RevertEvaluationResultsRequest {
	s.Resources = v
	return s
}

type RevertEvaluationResultsRequestResources struct {
	// The ID of the region in which the resource resides.
	//
	// For more information about how to obtain the ID of the region in which a resource resides, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-beijing
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The ID of the Alibaba Cloud account to which the resource belongs.
	//
	// This parameter is required.
	//
	// example:
	//
	// 100931896542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
	// The resource ID.
	//
	// For more information about how to obtain the ID of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// lb-hp3a3b4ztyfm2plgm****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource type.
	//
	// For more information about how to query the type of a resource, see [ListDiscoveredResources](https://help.aliyun.com/document_detail/169620.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::SLB::LoadBalancer
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s RevertEvaluationResultsRequestResources) String() string {
	return tea.Prettify(s)
}

func (s RevertEvaluationResultsRequestResources) GoString() string {
	return s.String()
}

func (s *RevertEvaluationResultsRequestResources) SetRegion(v string) *RevertEvaluationResultsRequestResources {
	s.Region = &v
	return s
}

func (s *RevertEvaluationResultsRequestResources) SetResourceAccountId(v int64) *RevertEvaluationResultsRequestResources {
	s.ResourceAccountId = &v
	return s
}

func (s *RevertEvaluationResultsRequestResources) SetResourceId(v string) *RevertEvaluationResultsRequestResources {
	s.ResourceId = &v
	return s
}

func (s *RevertEvaluationResultsRequestResources) SetResourceType(v string) *RevertEvaluationResultsRequestResources {
	s.ResourceType = &v
	return s
}

type RevertEvaluationResultsShrinkRequest struct {
	// The rule ID.
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-7e72626622af0051****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The resources that are to be re-evaluated.
	//
	// This parameter is required.
	ResourcesShrink *string `json:"Resources,omitempty" xml:"Resources,omitempty"`
}

func (s RevertEvaluationResultsShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s RevertEvaluationResultsShrinkRequest) GoString() string {
	return s.String()
}

func (s *RevertEvaluationResultsShrinkRequest) SetConfigRuleId(v string) *RevertEvaluationResultsShrinkRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *RevertEvaluationResultsShrinkRequest) SetResourcesShrink(v string) *RevertEvaluationResultsShrinkRequest {
	s.ResourcesShrink = &v
	return s
}

type RevertEvaluationResultsResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 01ACCBF2-0B0B-59F2-9E84-07B38267BCA1
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s RevertEvaluationResultsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s RevertEvaluationResultsResponseBody) GoString() string {
	return s.String()
}

func (s *RevertEvaluationResultsResponseBody) SetRequestId(v string) *RevertEvaluationResultsResponseBody {
	s.RequestId = &v
	return s
}

type RevertEvaluationResultsResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *RevertEvaluationResultsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s RevertEvaluationResultsResponse) String() string {
	return tea.Prettify(s)
}

func (s RevertEvaluationResultsResponse) GoString() string {
	return s.String()
}

func (s *RevertEvaluationResultsResponse) SetHeaders(v map[string]*string) *RevertEvaluationResultsResponse {
	s.Headers = v
	return s
}

func (s *RevertEvaluationResultsResponse) SetStatusCode(v int32) *RevertEvaluationResultsResponse {
	s.StatusCode = &v
	return s
}

func (s *RevertEvaluationResultsResponse) SetBody(v *RevertEvaluationResultsResponseBody) *RevertEvaluationResultsResponse {
	s.Body = v
	return s
}

type StartAggregateConfigRuleEvaluationRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-3a58626622af0005****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// > You must configure either the `CompliancePackId` or `ConfigRuleId` parameter.
	//
	// example:
	//
	// cp-ac16626622af0053****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The rule ID.
	//
	// For more information about how to query the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// >  You must configure either the `CompliancePackId` or `ConfigRuleId` parameter.
	//
	// example:
	//
	// cr-c169626622af009f****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// Specifies whether to re-evaluate the ignored non-compliant resource. Valid values:
	//
	// 	- true: re-evaluates the ignored non-compliant resource based on the rule.
	//
	// 	- false (default): does not re-evaluate the ignored non-compliant resource based on the rule.
	//
	// example:
	//
	// false
	RevertEvaluation *bool `json:"RevertEvaluation,omitempty" xml:"RevertEvaluation,omitempty"`
}

func (s StartAggregateConfigRuleEvaluationRequest) String() string {
	return tea.Prettify(s)
}

func (s StartAggregateConfigRuleEvaluationRequest) GoString() string {
	return s.String()
}

func (s *StartAggregateConfigRuleEvaluationRequest) SetAggregatorId(v string) *StartAggregateConfigRuleEvaluationRequest {
	s.AggregatorId = &v
	return s
}

func (s *StartAggregateConfigRuleEvaluationRequest) SetCompliancePackId(v string) *StartAggregateConfigRuleEvaluationRequest {
	s.CompliancePackId = &v
	return s
}

func (s *StartAggregateConfigRuleEvaluationRequest) SetConfigRuleId(v string) *StartAggregateConfigRuleEvaluationRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *StartAggregateConfigRuleEvaluationRequest) SetRevertEvaluation(v bool) *StartAggregateConfigRuleEvaluationRequest {
	s.RevertEvaluation = &v
	return s
}

type StartAggregateConfigRuleEvaluationResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// ABC0FFF8-0B44-40C6-8BBF-3A185EFDD212
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Indicates whether the involved resources were evaluated. Valid values:
	//
	// 	- true: The involved resources were evaluated.
	//
	// 	- false: The involved resources were not evaluated
	//
	// example:
	//
	// true
	Result *bool `json:"Result,omitempty" xml:"Result,omitempty"`
}

func (s StartAggregateConfigRuleEvaluationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s StartAggregateConfigRuleEvaluationResponseBody) GoString() string {
	return s.String()
}

func (s *StartAggregateConfigRuleEvaluationResponseBody) SetRequestId(v string) *StartAggregateConfigRuleEvaluationResponseBody {
	s.RequestId = &v
	return s
}

func (s *StartAggregateConfigRuleEvaluationResponseBody) SetResult(v bool) *StartAggregateConfigRuleEvaluationResponseBody {
	s.Result = &v
	return s
}

type StartAggregateConfigRuleEvaluationResponse struct {
	Headers    map[string]*string                              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *StartAggregateConfigRuleEvaluationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s StartAggregateConfigRuleEvaluationResponse) String() string {
	return tea.Prettify(s)
}

func (s StartAggregateConfigRuleEvaluationResponse) GoString() string {
	return s.String()
}

func (s *StartAggregateConfigRuleEvaluationResponse) SetHeaders(v map[string]*string) *StartAggregateConfigRuleEvaluationResponse {
	s.Headers = v
	return s
}

func (s *StartAggregateConfigRuleEvaluationResponse) SetStatusCode(v int32) *StartAggregateConfigRuleEvaluationResponse {
	s.StatusCode = &v
	return s
}

func (s *StartAggregateConfigRuleEvaluationResponse) SetBody(v *StartAggregateConfigRuleEvaluationResponseBody) *StartAggregateConfigRuleEvaluationResponse {
	s.Body = v
	return s
}

type StartAggregateRemediationRequest struct {
	// The ID of the account group.
	//
	// For information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-6b4a626622af0012****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The rule ID.
	//
	// For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-6b7c626622af00b4****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The ID of the Alibaba Cloud account to which the resources to be remediated belong. If this parameter is left empty, non-compliant resources of all accounts in the account group are remediated.
	//
	// > You must specify the ID of the current management account or a member account in the account group of the management account.
	//
	// example:
	//
	// 100271897542****
	ResourceAccountId *int64 `json:"ResourceAccountId,omitempty" xml:"ResourceAccountId,omitempty"`
}

func (s StartAggregateRemediationRequest) String() string {
	return tea.Prettify(s)
}

func (s StartAggregateRemediationRequest) GoString() string {
	return s.String()
}

func (s *StartAggregateRemediationRequest) SetAggregatorId(v string) *StartAggregateRemediationRequest {
	s.AggregatorId = &v
	return s
}

func (s *StartAggregateRemediationRequest) SetConfigRuleId(v string) *StartAggregateRemediationRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *StartAggregateRemediationRequest) SetResourceAccountId(v int64) *StartAggregateRemediationRequest {
	s.ResourceAccountId = &v
	return s
}

type StartAggregateRemediationResponseBody struct {
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	Data *bool `json:"Data,omitempty" xml:"Data,omitempty"`
	// The request ID.
	//
	// example:
	//
	// C7817373-78CB-4F9A-8AFA-E7A88E9D64A2
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s StartAggregateRemediationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s StartAggregateRemediationResponseBody) GoString() string {
	return s.String()
}

func (s *StartAggregateRemediationResponseBody) SetData(v bool) *StartAggregateRemediationResponseBody {
	s.Data = &v
	return s
}

func (s *StartAggregateRemediationResponseBody) SetRequestId(v string) *StartAggregateRemediationResponseBody {
	s.RequestId = &v
	return s
}

type StartAggregateRemediationResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *StartAggregateRemediationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s StartAggregateRemediationResponse) String() string {
	return tea.Prettify(s)
}

func (s StartAggregateRemediationResponse) GoString() string {
	return s.String()
}

func (s *StartAggregateRemediationResponse) SetHeaders(v map[string]*string) *StartAggregateRemediationResponse {
	s.Headers = v
	return s
}

func (s *StartAggregateRemediationResponse) SetStatusCode(v int32) *StartAggregateRemediationResponse {
	s.StatusCode = &v
	return s
}

func (s *StartAggregateRemediationResponse) SetBody(v *StartAggregateRemediationResponseBody) *StartAggregateRemediationResponse {
	s.Body = v
	return s
}

type StartConfigRuleEvaluationRequest struct {
	// The compliance package ID.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/606968.html).
	//
	// >  You must configure either the `CompliancePackId` or `ConfigRuleId` parameter.
	//
	// example:
	//
	// cp-ac16626622af0053****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The rule ID.
	//
	// You can call the [ListConfigRules](https://help.aliyun.com/document_detail/609222.html) operation to obtain the rule ID.
	//
	// >  You must configure either the `CompliancePackId` or `ConfigRuleId` parameter.
	//
	// example:
	//
	// cr-9920626622af0035****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// Specifies whether to re-evaluate the ignored non-compliant resource. Valid values:
	//
	// 	- true: re-evaluates the ignored non-compliant resource based on the rule.
	//
	// 	- false (default): does not re-evaluate the ignored non-compliant resource based on the rule.
	//
	// example:
	//
	// false
	RevertEvaluation *bool `json:"RevertEvaluation,omitempty" xml:"RevertEvaluation,omitempty"`
}

func (s StartConfigRuleEvaluationRequest) String() string {
	return tea.Prettify(s)
}

func (s StartConfigRuleEvaluationRequest) GoString() string {
	return s.String()
}

func (s *StartConfigRuleEvaluationRequest) SetCompliancePackId(v string) *StartConfigRuleEvaluationRequest {
	s.CompliancePackId = &v
	return s
}

func (s *StartConfigRuleEvaluationRequest) SetConfigRuleId(v string) *StartConfigRuleEvaluationRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *StartConfigRuleEvaluationRequest) SetRevertEvaluation(v bool) *StartConfigRuleEvaluationRequest {
	s.RevertEvaluation = &v
	return s
}

type StartConfigRuleEvaluationResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// D31EEAD7-BF1E-5927-977A-AFF9342A7273
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Indicates whether the operation is successful. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// example:
	//
	// true
	Result *bool `json:"Result,omitempty" xml:"Result,omitempty"`
}

func (s StartConfigRuleEvaluationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s StartConfigRuleEvaluationResponseBody) GoString() string {
	return s.String()
}

func (s *StartConfigRuleEvaluationResponseBody) SetRequestId(v string) *StartConfigRuleEvaluationResponseBody {
	s.RequestId = &v
	return s
}

func (s *StartConfigRuleEvaluationResponseBody) SetResult(v bool) *StartConfigRuleEvaluationResponseBody {
	s.Result = &v
	return s
}

type StartConfigRuleEvaluationResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *StartConfigRuleEvaluationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s StartConfigRuleEvaluationResponse) String() string {
	return tea.Prettify(s)
}

func (s StartConfigRuleEvaluationResponse) GoString() string {
	return s.String()
}

func (s *StartConfigRuleEvaluationResponse) SetHeaders(v map[string]*string) *StartConfigRuleEvaluationResponse {
	s.Headers = v
	return s
}

func (s *StartConfigRuleEvaluationResponse) SetStatusCode(v int32) *StartConfigRuleEvaluationResponse {
	s.StatusCode = &v
	return s
}

func (s *StartConfigRuleEvaluationResponse) SetBody(v *StartConfigRuleEvaluationResponseBody) *StartConfigRuleEvaluationResponse {
	s.Body = v
	return s
}

type StartConfigurationRecorderResponseBody struct {
	// The details of the configuration recorder.
	ConfigurationRecorder *StartConfigurationRecorderResponseBodyConfigurationRecorder `json:"ConfigurationRecorder,omitempty" xml:"ConfigurationRecorder,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 4D994662-6B27-536F-B320-38F4B3D58705
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s StartConfigurationRecorderResponseBody) String() string {
	return tea.Prettify(s)
}

func (s StartConfigurationRecorderResponseBody) GoString() string {
	return s.String()
}

func (s *StartConfigurationRecorderResponseBody) SetConfigurationRecorder(v *StartConfigurationRecorderResponseBodyConfigurationRecorder) *StartConfigurationRecorderResponseBody {
	s.ConfigurationRecorder = v
	return s
}

func (s *StartConfigurationRecorderResponseBody) SetRequestId(v string) *StartConfigurationRecorderResponseBody {
	s.RequestId = &v
	return s
}

type StartConfigurationRecorderResponseBodyConfigurationRecorder struct {
	// The status of the configuration recorder. Valid values:
	//
	// 	- REGISTRABLE: The configuration recorder has not been registered.
	//
	// 	- BUILDING: The configuration recorder is being deployed.
	//
	// 	- REGISTERED: The configuration recorder has been registered.
	//
	// 	- REBUILDING: The configuration recorder is being redeployed.
	//
	// example:
	//
	// REGISTERED
	ConfigurationRecorderStatus *string `json:"ConfigurationRecorderStatus,omitempty" xml:"ConfigurationRecorderStatus,omitempty"`
	// The types of the resources that are monitored by Cloud Config.
	ResourceTypes []*string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty" type:"Repeated"`
}

func (s StartConfigurationRecorderResponseBodyConfigurationRecorder) String() string {
	return tea.Prettify(s)
}

func (s StartConfigurationRecorderResponseBodyConfigurationRecorder) GoString() string {
	return s.String()
}

func (s *StartConfigurationRecorderResponseBodyConfigurationRecorder) SetConfigurationRecorderStatus(v string) *StartConfigurationRecorderResponseBodyConfigurationRecorder {
	s.ConfigurationRecorderStatus = &v
	return s
}

func (s *StartConfigurationRecorderResponseBodyConfigurationRecorder) SetResourceTypes(v []*string) *StartConfigurationRecorderResponseBodyConfigurationRecorder {
	s.ResourceTypes = v
	return s
}

type StartConfigurationRecorderResponse struct {
	Headers    map[string]*string                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *StartConfigurationRecorderResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s StartConfigurationRecorderResponse) String() string {
	return tea.Prettify(s)
}

func (s StartConfigurationRecorderResponse) GoString() string {
	return s.String()
}

func (s *StartConfigurationRecorderResponse) SetHeaders(v map[string]*string) *StartConfigurationRecorderResponse {
	s.Headers = v
	return s
}

func (s *StartConfigurationRecorderResponse) SetStatusCode(v int32) *StartConfigurationRecorderResponse {
	s.StatusCode = &v
	return s
}

func (s *StartConfigurationRecorderResponse) SetBody(v *StartConfigurationRecorderResponseBody) *StartConfigurationRecorderResponse {
	s.Body = v
	return s
}

type StartRemediationRequest struct {
	// The rule ID.
	//
	// For more information about how to obtain the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-8a973ac2e2be00a2****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
}

func (s StartRemediationRequest) String() string {
	return tea.Prettify(s)
}

func (s StartRemediationRequest) GoString() string {
	return s.String()
}

func (s *StartRemediationRequest) SetConfigRuleId(v string) *StartRemediationRequest {
	s.ConfigRuleId = &v
	return s
}

type StartRemediationResponseBody struct {
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// example:
	//
	// true
	Data *bool `json:"Data,omitempty" xml:"Data,omitempty"`
	// The request ID.
	//
	// example:
	//
	// C7817373-78CB-4F9A-8AFA-E7A88E9D64A2
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s StartRemediationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s StartRemediationResponseBody) GoString() string {
	return s.String()
}

func (s *StartRemediationResponseBody) SetData(v bool) *StartRemediationResponseBody {
	s.Data = &v
	return s
}

func (s *StartRemediationResponseBody) SetRequestId(v string) *StartRemediationResponseBody {
	s.RequestId = &v
	return s
}

type StartRemediationResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *StartRemediationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s StartRemediationResponse) String() string {
	return tea.Prettify(s)
}

func (s StartRemediationResponse) GoString() string {
	return s.String()
}

func (s *StartRemediationResponse) SetHeaders(v map[string]*string) *StartRemediationResponse {
	s.Headers = v
	return s
}

func (s *StartRemediationResponse) SetStatusCode(v int32) *StartRemediationResponse {
	s.StatusCode = &v
	return s
}

func (s *StartRemediationResponse) SetBody(v *StartRemediationResponseBody) *StartRemediationResponse {
	s.Body = v
	return s
}

type StopConfigurationRecorderResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// AB2E892E-8A43-5B0F-8FE3-B53ADA53CB2D
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- true: The request was successful.
	//
	// 	- false: The request failed.
	//
	// example:
	//
	// true
	StopConfigurationRecorderResult *bool `json:"StopConfigurationRecorderResult,omitempty" xml:"StopConfigurationRecorderResult,omitempty"`
}

func (s StopConfigurationRecorderResponseBody) String() string {
	return tea.Prettify(s)
}

func (s StopConfigurationRecorderResponseBody) GoString() string {
	return s.String()
}

func (s *StopConfigurationRecorderResponseBody) SetRequestId(v string) *StopConfigurationRecorderResponseBody {
	s.RequestId = &v
	return s
}

func (s *StopConfigurationRecorderResponseBody) SetStopConfigurationRecorderResult(v bool) *StopConfigurationRecorderResponseBody {
	s.StopConfigurationRecorderResult = &v
	return s
}

type StopConfigurationRecorderResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *StopConfigurationRecorderResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s StopConfigurationRecorderResponse) String() string {
	return tea.Prettify(s)
}

func (s StopConfigurationRecorderResponse) GoString() string {
	return s.String()
}

func (s *StopConfigurationRecorderResponse) SetHeaders(v map[string]*string) *StopConfigurationRecorderResponse {
	s.Headers = v
	return s
}

func (s *StopConfigurationRecorderResponse) SetStatusCode(v int32) *StopConfigurationRecorderResponse {
	s.StatusCode = &v
	return s
}

func (s *StopConfigurationRecorderResponse) SetBody(v *StopConfigurationRecorderResponseBody) *StopConfigurationRecorderResponse {
	s.Body = v
	return s
}

type TagResourcesRequest struct {
	// The region ID of the tags.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-shanghai
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The resource IDs. You can add tags to up to 50 resources.
	//
	// This parameter is required.
	ResourceId []*string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty" type:"Repeated"`
	// The resource type. Valid values:
	//
	// 	- `ACS::Config::Rule`
	//
	// 	- `ACS::Config::AggregateConfigRule`
	//
	// 	- `ACS::Config::Aggregator`
	//
	// 	- `ACS::Config::CompliancePack`
	//
	// 	- `ACS::Config::AggregateCompliancePack`
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::Config::Rule
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tag value of the resource.
	//
	// You can specify up to 20 tag values.
	//
	// This parameter is required.
	Tag []*TagResourcesRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s TagResourcesRequest) String() string {
	return tea.Prettify(s)
}

func (s TagResourcesRequest) GoString() string {
	return s.String()
}

func (s *TagResourcesRequest) SetRegionId(v string) *TagResourcesRequest {
	s.RegionId = &v
	return s
}

func (s *TagResourcesRequest) SetResourceId(v []*string) *TagResourcesRequest {
	s.ResourceId = v
	return s
}

func (s *TagResourcesRequest) SetResourceType(v string) *TagResourcesRequest {
	s.ResourceType = &v
	return s
}

func (s *TagResourcesRequest) SetTag(v []*TagResourcesRequestTag) *TagResourcesRequest {
	s.Tag = v
	return s
}

type TagResourcesRequestTag struct {
	// The key of the tag that is added to the resource.
	//
	// You can add up to 20 tag keys to a resource.
	//
	// example:
	//
	// Env
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The value of the tag that is added to the resource.
	//
	// You can add up to 20 tag values to a resource.
	//
	// example:
	//
	// prod
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s TagResourcesRequestTag) String() string {
	return tea.Prettify(s)
}

func (s TagResourcesRequestTag) GoString() string {
	return s.String()
}

func (s *TagResourcesRequestTag) SetKey(v string) *TagResourcesRequestTag {
	s.Key = &v
	return s
}

func (s *TagResourcesRequestTag) SetValue(v string) *TagResourcesRequestTag {
	s.Value = &v
	return s
}

type TagResourcesShrinkRequest struct {
	// The region ID of the tags.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-shanghai
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The resource IDs. You can add tags to up to 50 resources.
	//
	// This parameter is required.
	ResourceId []*string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty" type:"Repeated"`
	// The resource type. Valid values:
	//
	// 	- `ACS::Config::Rule`
	//
	// 	- `ACS::Config::AggregateConfigRule`
	//
	// 	- `ACS::Config::Aggregator`
	//
	// 	- `ACS::Config::CompliancePack`
	//
	// 	- `ACS::Config::AggregateCompliancePack`
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::Config::Rule
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tag value of the resource.
	//
	// You can specify up to 20 tag values.
	//
	// This parameter is required.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s TagResourcesShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s TagResourcesShrinkRequest) GoString() string {
	return s.String()
}

func (s *TagResourcesShrinkRequest) SetRegionId(v string) *TagResourcesShrinkRequest {
	s.RegionId = &v
	return s
}

func (s *TagResourcesShrinkRequest) SetResourceId(v []*string) *TagResourcesShrinkRequest {
	s.ResourceId = v
	return s
}

func (s *TagResourcesShrinkRequest) SetResourceType(v string) *TagResourcesShrinkRequest {
	s.ResourceType = &v
	return s
}

func (s *TagResourcesShrinkRequest) SetTagShrink(v string) *TagResourcesShrinkRequest {
	s.TagShrink = &v
	return s
}

type TagResourcesResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// AB2E4317-06A6-5745-B7C3-E001E551B380
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s TagResourcesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TagResourcesResponseBody) GoString() string {
	return s.String()
}

func (s *TagResourcesResponseBody) SetRequestId(v string) *TagResourcesResponseBody {
	s.RequestId = &v
	return s
}

type TagResourcesResponse struct {
	Headers    map[string]*string        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TagResourcesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TagResourcesResponse) String() string {
	return tea.Prettify(s)
}

func (s TagResourcesResponse) GoString() string {
	return s.String()
}

func (s *TagResourcesResponse) SetHeaders(v map[string]*string) *TagResourcesResponse {
	s.Headers = v
	return s
}

func (s *TagResourcesResponse) SetStatusCode(v int32) *TagResourcesResponse {
	s.StatusCode = &v
	return s
}

func (s *TagResourcesResponse) SetBody(v *TagResourcesResponseBody) *TagResourcesResponse {
	s.Body = v
	return s
}

type UntagResourcesRequest struct {
	// Specifies whether to remove all tags from the resource. Valid values:
	//
	// 	- true: All tags are removed from the resource.
	//
	// 	- false (default): The specified tags are removed from the resource.
	//
	// example:
	//
	// false
	All *bool `json:"All,omitempty" xml:"All,omitempty"`
	// The region ID of the tag.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-shanghai
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The resource ID.
	//
	// You can remove tags from up to 50 resources at a time.
	//
	// This parameter is required.
	ResourceId []*string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty" type:"Repeated"`
	// The resource type. Valid values:
	//
	// 	- `ACS::Config::Rule`
	//
	// 	- `ACS::Config::AggregateConfigRule`
	//
	// 	- `ACS::Config::Aggregator`
	//
	// 	- `ACS::Config::CompliancePack`
	//
	// 	- `ACS::Config::AggregateCompliancePack`
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::Config::Rule
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tags of the resource.
	TagKey []*string `json:"TagKey,omitempty" xml:"TagKey,omitempty" type:"Repeated"`
}

func (s UntagResourcesRequest) String() string {
	return tea.Prettify(s)
}

func (s UntagResourcesRequest) GoString() string {
	return s.String()
}

func (s *UntagResourcesRequest) SetAll(v bool) *UntagResourcesRequest {
	s.All = &v
	return s
}

func (s *UntagResourcesRequest) SetRegionId(v string) *UntagResourcesRequest {
	s.RegionId = &v
	return s
}

func (s *UntagResourcesRequest) SetResourceId(v []*string) *UntagResourcesRequest {
	s.ResourceId = v
	return s
}

func (s *UntagResourcesRequest) SetResourceType(v string) *UntagResourcesRequest {
	s.ResourceType = &v
	return s
}

func (s *UntagResourcesRequest) SetTagKey(v []*string) *UntagResourcesRequest {
	s.TagKey = v
	return s
}

type UntagResourcesResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// AB2E4317-06A6-5745-B7C3-E001E551B380
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UntagResourcesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UntagResourcesResponseBody) GoString() string {
	return s.String()
}

func (s *UntagResourcesResponseBody) SetRequestId(v string) *UntagResourcesResponseBody {
	s.RequestId = &v
	return s
}

type UntagResourcesResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UntagResourcesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UntagResourcesResponse) String() string {
	return tea.Prettify(s)
}

func (s UntagResourcesResponse) GoString() string {
	return s.String()
}

func (s *UntagResourcesResponse) SetHeaders(v map[string]*string) *UntagResourcesResponse {
	s.Headers = v
	return s
}

func (s *UntagResourcesResponse) SetStatusCode(v int32) *UntagResourcesResponse {
	s.StatusCode = &v
	return s
}

func (s *UntagResourcesResponse) SetBody(v *UntagResourcesResponseBody) *UntagResourcesResponse {
	s.Body = v
	return s
}

type UpdateAggregateCompliancePackRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// For more information about how to obtain the name of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// example:
	//
	// test-pack-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The rules in the compliance package.
	//
	// If you leave this parameter empty, the rules in the compliance package remain unchanged. If you set this parameter, Cloud Config replaces the existing rules in the compliance package with the specified rules.
	ConfigRules []*UpdateAggregateCompliancePackRequestConfigRules `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty" type:"Repeated"`
	// The description of the compliance package.
	//
	// example:
	//
	// Test compliance pack description.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The IDs of the regions to which the rule not applies. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource that you do not want to evaluate by using the compliance package. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// ExcludeTagsScope
	ExcludeTagsScope []*UpdateAggregateCompliancePackRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The ID of the region whose resources you want to evaluate by using the compliance package. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group whose resources you want to evaluate by using the compliance package. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources included from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Valid values:
	//
	// 	- 1: high risk level
	//
	// 	- 2: medium risk level
	//
	// 	- 3: low risk level
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*UpdateAggregateCompliancePackRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
	// The tag key of the resource that you want to evaluate by using the compliance package.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// The tag value of the resource that you want to evaluate by using the compliance package.
	//
	// >  You must configure the TagValueScope parameter together with the TagKeyScope parameter.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// TagsScope
	TagsScope []*UpdateAggregateCompliancePackRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s UpdateAggregateCompliancePackRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackRequest) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackRequest) SetAggregatorId(v string) *UpdateAggregateCompliancePackRequest {
	s.AggregatorId = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetClientToken(v string) *UpdateAggregateCompliancePackRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetCompliancePackId(v string) *UpdateAggregateCompliancePackRequest {
	s.CompliancePackId = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetCompliancePackName(v string) *UpdateAggregateCompliancePackRequest {
	s.CompliancePackName = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetConfigRules(v []*UpdateAggregateCompliancePackRequestConfigRules) *UpdateAggregateCompliancePackRequest {
	s.ConfigRules = v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetDescription(v string) *UpdateAggregateCompliancePackRequest {
	s.Description = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetExcludeRegionIdsScope(v string) *UpdateAggregateCompliancePackRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetExcludeResourceGroupIdsScope(v string) *UpdateAggregateCompliancePackRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetExcludeResourceIdsScope(v string) *UpdateAggregateCompliancePackRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetExcludeTagsScope(v []*UpdateAggregateCompliancePackRequestExcludeTagsScope) *UpdateAggregateCompliancePackRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetRegionIdsScope(v string) *UpdateAggregateCompliancePackRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetResourceGroupIdsScope(v string) *UpdateAggregateCompliancePackRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetResourceIdsScope(v string) *UpdateAggregateCompliancePackRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetRiskLevel(v int32) *UpdateAggregateCompliancePackRequest {
	s.RiskLevel = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetTag(v []*UpdateAggregateCompliancePackRequestTag) *UpdateAggregateCompliancePackRequest {
	s.Tag = v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetTagKeyScope(v string) *UpdateAggregateCompliancePackRequest {
	s.TagKeyScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetTagValueScope(v string) *UpdateAggregateCompliancePackRequest {
	s.TagValueScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequest) SetTagsScope(v []*UpdateAggregateCompliancePackRequestTagsScope) *UpdateAggregateCompliancePackRequest {
	s.TagsScope = v
	return s
}

type UpdateAggregateCompliancePackRequestConfigRules struct {
	// The rule ID. If you specify this parameter, Cloud Config adds the rule that has the specified ID to the compliance package.
	//
	// You only need to configure the `ManagedRuleIdentifier` or `ConfigRuleId` parameter. If you configure both parameters, the value of the `ConfigRuleId` parameter takes precedence. For more information about how to obtain the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// example:
	//
	// cr-e918626622af000f****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The rule name.
	//
	// example:
	//
	// test-rule-name
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The details of the input parameter of the rule.
	ConfigRuleParameters []*UpdateAggregateCompliancePackRequestConfigRulesConfigRuleParameters `json:"ConfigRuleParameters,omitempty" xml:"ConfigRuleParameters,omitempty" type:"Repeated"`
	// The rule description.
	//
	// example:
	//
	// The description of the test rule.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The identifier of the managed rule. Cloud Config automatically creates a rule based on the identifier of the managed rule and adds the rule to the current compliance package.
	//
	// You need to only configure the `ManagedRuleIdentifier` or `ConfigRuleId` parameter. If you configure both parameters, the value of the `ConfigRuleId` parameter takes precedence. You can call the [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html) operation to obtain the identifier of the managed rule.
	//
	// example:
	//
	// eip-bandwidth-limit
	ManagedRuleIdentifier *string `json:"ManagedRuleIdentifier,omitempty" xml:"ManagedRuleIdentifier,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high risk level
	//
	// 	- 2: medium risk level
	//
	// 	- 3: low risk level
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s UpdateAggregateCompliancePackRequestConfigRules) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackRequestConfigRules) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackRequestConfigRules) SetConfigRuleId(v string) *UpdateAggregateCompliancePackRequestConfigRules {
	s.ConfigRuleId = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequestConfigRules) SetConfigRuleName(v string) *UpdateAggregateCompliancePackRequestConfigRules {
	s.ConfigRuleName = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequestConfigRules) SetConfigRuleParameters(v []*UpdateAggregateCompliancePackRequestConfigRulesConfigRuleParameters) *UpdateAggregateCompliancePackRequestConfigRules {
	s.ConfigRuleParameters = v
	return s
}

func (s *UpdateAggregateCompliancePackRequestConfigRules) SetDescription(v string) *UpdateAggregateCompliancePackRequestConfigRules {
	s.Description = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequestConfigRules) SetManagedRuleIdentifier(v string) *UpdateAggregateCompliancePackRequestConfigRules {
	s.ManagedRuleIdentifier = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequestConfigRules) SetRiskLevel(v int32) *UpdateAggregateCompliancePackRequestConfigRules {
	s.RiskLevel = &v
	return s
}

type UpdateAggregateCompliancePackRequestConfigRulesConfigRuleParameters struct {
	// The name of the input parameter.
	//
	// You must specify both `ParameterName` and `ParameterValue` or neither of them. If the managed rule has an input parameter but no default value exists, you must configure this parameter. For more information about how to obtain the name of an input parameter for a managed rule, see [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html).
	//
	// example:
	//
	// bandwidth
	ParameterName *string `json:"ParameterName,omitempty" xml:"ParameterName,omitempty"`
	// The value of the input parameter.
	//
	// You must specify both `ParameterName` and `ParameterValue` or neither of them. If the managed rule has an input parameter but no default value exists, you must configure this parameter. For more information about how to obtain the value of an input parameter for a managed rule, see [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html).
	//
	// example:
	//
	// 20
	ParameterValue *string `json:"ParameterValue,omitempty" xml:"ParameterValue,omitempty"`
}

func (s UpdateAggregateCompliancePackRequestConfigRulesConfigRuleParameters) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackRequestConfigRulesConfigRuleParameters) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackRequestConfigRulesConfigRuleParameters) SetParameterName(v string) *UpdateAggregateCompliancePackRequestConfigRulesConfigRuleParameters {
	s.ParameterName = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequestConfigRulesConfigRuleParameters) SetParameterValue(v string) *UpdateAggregateCompliancePackRequestConfigRulesConfigRuleParameters {
	s.ParameterValue = &v
	return s
}

type UpdateAggregateCompliancePackRequestExcludeTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateAggregateCompliancePackRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackRequestExcludeTagsScope) SetTagKey(v string) *UpdateAggregateCompliancePackRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequestExcludeTagsScope) SetTagValue(v string) *UpdateAggregateCompliancePackRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type UpdateAggregateCompliancePackRequestTag struct {
	// The tag key of the resource. You can specify up to 20 tag keys.
	//
	// The tag key cannot be an empty string. The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs`:. The tag key cannot contain `http://` or `https://`.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s UpdateAggregateCompliancePackRequestTag) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackRequestTag) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackRequestTag) SetKey(v string) *UpdateAggregateCompliancePackRequestTag {
	s.Key = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequestTag) SetValue(v string) *UpdateAggregateCompliancePackRequestTag {
	s.Value = &v
	return s
}

type UpdateAggregateCompliancePackRequestTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateAggregateCompliancePackRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackRequestTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackRequestTagsScope) SetTagKey(v string) *UpdateAggregateCompliancePackRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateAggregateCompliancePackRequestTagsScope) SetTagValue(v string) *UpdateAggregateCompliancePackRequestTagsScope {
	s.TagValue = &v
	return s
}

type UpdateAggregateCompliancePackShrinkRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-f632626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-fdc8626622af00f9****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// For more information about how to obtain the name of a compliance package, see [ListAggregateCompliancePacks](https://help.aliyun.com/document_detail/262059.html).
	//
	// example:
	//
	// test-pack-name
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The rules in the compliance package.
	//
	// If you leave this parameter empty, the rules in the compliance package remain unchanged. If you set this parameter, Cloud Config replaces the existing rules in the compliance package with the specified rules.
	ConfigRulesShrink *string `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty"`
	// The description of the compliance package.
	//
	// example:
	//
	// Test compliance pack description.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The IDs of the regions to which the rule not applies. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource that you do not want to evaluate by using the compliance package. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// eip-8vbf3x310fn56ijfd****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// ExcludeTagsScope
	ExcludeTagsScope []*UpdateAggregateCompliancePackShrinkRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The ID of the region whose resources you want to evaluate by using the compliance package. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group whose resources you want to evaluate by using the compliance package. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources included from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Valid values:
	//
	// 	- 1: high risk level
	//
	// 	- 2: medium risk level
	//
	// 	- 3: low risk level
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
	// The tag key of the resource that you want to evaluate by using the compliance package.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// The tag value of the resource that you want to evaluate by using the compliance package.
	//
	// >  You must configure the TagValueScope parameter together with the TagKeyScope parameter.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// TagsScope
	TagsScope []*UpdateAggregateCompliancePackShrinkRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s UpdateAggregateCompliancePackShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackShrinkRequest) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetAggregatorId(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetClientToken(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetCompliancePackId(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.CompliancePackId = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetCompliancePackName(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.CompliancePackName = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetConfigRulesShrink(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.ConfigRulesShrink = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetDescription(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.Description = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetExcludeRegionIdsScope(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetExcludeResourceGroupIdsScope(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetExcludeResourceIdsScope(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetExcludeTagsScope(v []*UpdateAggregateCompliancePackShrinkRequestExcludeTagsScope) *UpdateAggregateCompliancePackShrinkRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetRegionIdsScope(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetResourceGroupIdsScope(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetResourceIdsScope(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetRiskLevel(v int32) *UpdateAggregateCompliancePackShrinkRequest {
	s.RiskLevel = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetTagShrink(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.TagShrink = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetTagKeyScope(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.TagKeyScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetTagValueScope(v string) *UpdateAggregateCompliancePackShrinkRequest {
	s.TagValueScope = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequest) SetTagsScope(v []*UpdateAggregateCompliancePackShrinkRequestTagsScope) *UpdateAggregateCompliancePackShrinkRequest {
	s.TagsScope = v
	return s
}

type UpdateAggregateCompliancePackShrinkRequestExcludeTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateAggregateCompliancePackShrinkRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackShrinkRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackShrinkRequestExcludeTagsScope) SetTagKey(v string) *UpdateAggregateCompliancePackShrinkRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequestExcludeTagsScope) SetTagValue(v string) *UpdateAggregateCompliancePackShrinkRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type UpdateAggregateCompliancePackShrinkRequestTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateAggregateCompliancePackShrinkRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackShrinkRequestTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackShrinkRequestTagsScope) SetTagKey(v string) *UpdateAggregateCompliancePackShrinkRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateAggregateCompliancePackShrinkRequestTagsScope) SetTagValue(v string) *UpdateAggregateCompliancePackShrinkRequestTagsScope {
	s.TagValue = &v
	return s
}

type UpdateAggregateCompliancePackResponseBody struct {
	// The compliance package ID.
	//
	// example:
	//
	// ca-f632626622af0079****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateAggregateCompliancePackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackResponseBody) SetCompliancePackId(v string) *UpdateAggregateCompliancePackResponseBody {
	s.CompliancePackId = &v
	return s
}

func (s *UpdateAggregateCompliancePackResponseBody) SetRequestId(v string) *UpdateAggregateCompliancePackResponseBody {
	s.RequestId = &v
	return s
}

type UpdateAggregateCompliancePackResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateAggregateCompliancePackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateAggregateCompliancePackResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateCompliancePackResponse) GoString() string {
	return s.String()
}

func (s *UpdateAggregateCompliancePackResponse) SetHeaders(v map[string]*string) *UpdateAggregateCompliancePackResponse {
	s.Headers = v
	return s
}

func (s *UpdateAggregateCompliancePackResponse) SetStatusCode(v int32) *UpdateAggregateCompliancePackResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateAggregateCompliancePackResponse) SetBody(v *UpdateAggregateCompliancePackResponseBody) *UpdateAggregateCompliancePackResponse {
	s.Body = v
	return s
}

type UpdateAggregateConfigDeliveryChannelRequest struct {
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of the account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests.
	//
	// The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [Ensure idempotence](https://help.aliyun.com/document_detail/25693.html)
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// Specifies whether to deliver scheduled compliant snapshots. Cloud Config delivers scheduled compliant snapshots at `04:00Z` and `16:00Z` to Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: Cloud Config delivers scheduled compliant snapshots.
	//
	// 	- false (default): Cloud Config does not deliver scheduled compliant snapshots.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// false
	CompliantSnapshot *bool `json:"CompliantSnapshot,omitempty" xml:"CompliantSnapshot,omitempty"`
	// Specifies whether to deliver resource change logs. If you set this parameter to true, Cloud Config delivers resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	//
	// 	- true: Cloud Config delivers resource change logs.
	//
	// 	- false (default): Cloud Config does not deliver resource change logs.
	//
	// > This parameter is available for delivery channels of the OSS, SLS, and MNS types.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// false
	ConfigurationItemChangeNotification *bool `json:"ConfigurationItemChangeNotification,omitempty" xml:"ConfigurationItemChangeNotification,omitempty"`
	// Specifies whether to deliver scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at `04:00Z` and `16:00Z` to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: Cloud Config delivers scheduled resource snapshots.
	//
	// 	- false (default): Cloud Config does not deliver scheduled resource snapshots.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// false
	ConfigurationSnapshot *bool `json:"ConfigurationSnapshot,omitempty" xml:"ConfigurationSnapshot,omitempty"`
	// The rule that is attached to the delivery channel. This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// 	- If the value of the DeliveryChannelType parameter is MNS, take note of the following settings of the lowest risk level and resource types of the events to which you subscribed:
	//
	//     	- The lowest risk level of the events to which you want to subscribe is in the following format: `{"filterType":"RuleRiskLevel","value":"1","multiple":false}`.
	//
	//         The `value` field indicates the lowest risk level of the events to which you subscribed. Valid values: 1, 2, and 3, where 1 indicates the high risk level, 2 indicates the medium risk level, and 3 indicates the low risk level.
	//
	//     	- The setting of the resource types of the events to which you want to subscribe is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//         The `values` field indicates the resource types of the events to which you subscribed. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// 	- If you set the DeliveryChannelType parameter to SLS, the setting of the resource types of the snapshots to which you want to deliver is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//     The `values` field specifies the resource types of the snapshots to which you want to deliver. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// example:
	//
	// [{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]
	DeliveryChannelCondition *string `json:"DeliveryChannelCondition,omitempty" xml:"DeliveryChannelCondition,omitempty"`
	// The ID of the delivery channel.
	//
	// For more information about how to obtain the ID of a delivery channel, see [ListAggregateConfigDeliveryChannels](https://help.aliyun.com/document_detail/429842.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cdc-8e45ff4e06a3a8****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The name of the delivery channel.
	//
	// example:
	//
	// testoss
	DeliveryChannelName *string `json:"DeliveryChannelName,omitempty" xml:"DeliveryChannelName,omitempty"`
	// The ARN of the delivery destination. Valid values:
	//
	// 	- `acs:oss:{RegionId}:{accountId}:{bucketName}` if your delivery destination is an OSS bucket. Example: `acs:oss:cn-shanghai:100931896542****:new-bucket`.
	//
	// 	- `acs:mns:{RegionId}:{accountId}:/topics/{topicName}` if your delivery destination is an MNS topic. Example: `acs:mns:cn-shanghai:100931896542****:/topics/topic1`.
	//
	// 	- `acs:log:{RegionId}:{accountId}:project/{projectName}/logstore/{logstoreName}` if your delivery destination is a Log Service Logstore. Example: `acs:log:cn-shanghai:100931896542****:project/project1/logstore/logstore1`.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	DeliveryChannelTargetArn *string `json:"DeliveryChannelTargetArn,omitempty" xml:"DeliveryChannelTargetArn,omitempty"`
	// The time when Cloud Config delivers scheduled resources snapshots every day.
	//
	// Format: `HH:mmZ`. This time is displayed in UTC.
	//
	// > When you enable the scheduled resource delivery feature, you can specify a custom delivery time for this parameter. If you do not configure this parameter, Cloud Config automatically delivers scheduled resource snapshots at `04:00Z` and `16:00Z` every day.
	//
	// example:
	//
	// 09:10Z
	DeliverySnapshotTime *string `json:"DeliverySnapshotTime,omitempty" xml:"DeliverySnapshotTime,omitempty"`
	// The description of the delivery channel.
	//
	// example:
	//
	// My OSS delivery.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Specifies whether to deliver resource non-compliance events. If you set this parameter to true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are considered non-compliant. Valid values:
	//
	// 	- true: Cloud Config delivers resource non-compliance events.
	//
	// 	- false (default): Cloud Config does not deliver resource non-compliance events.
	//
	// > This parameter is available only for delivery channels of the SLS or MNS type.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// false
	NonCompliantNotification *bool `json:"NonCompliantNotification,omitempty" xml:"NonCompliantNotification,omitempty"`
	// The ARN of the OSS bucket to which the delivered data is transferred when the size of the data exceeds the specified upper limit of the delivery channel. Format: `acs:oss:{RegionId}:{accountId}:{bucketName}`.
	//
	// If you do not configure this parameter, Cloud Config delivers only summary data.
	//
	// > This parameter is available only for delivery channels of the SLS or MNS type. The upper limit on the storage size of delivery channels of the SLS type is 1 MB, and the upper limit on the storage size of delivery channels of the MNS type is 64 KB.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	OversizedDataOSSTargetArn *string `json:"OversizedDataOSSTargetArn,omitempty" xml:"OversizedDataOSSTargetArn,omitempty"`
	// Specifies whether to enable the delivery channel. Valid values:
	//
	// 	- 0: The delivery channel is disabled. Cloud Config retains the most recent delivery configuration and stops resource data delivery.
	//
	// 	- 1 (default): The delivery channel is enabled.
	//
	// example:
	//
	// 0
	Status *int64 `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s UpdateAggregateConfigDeliveryChannelRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigDeliveryChannelRequest) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetAggregatorId(v string) *UpdateAggregateConfigDeliveryChannelRequest {
	s.AggregatorId = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetClientToken(v string) *UpdateAggregateConfigDeliveryChannelRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetCompliantSnapshot(v bool) *UpdateAggregateConfigDeliveryChannelRequest {
	s.CompliantSnapshot = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetConfigurationItemChangeNotification(v bool) *UpdateAggregateConfigDeliveryChannelRequest {
	s.ConfigurationItemChangeNotification = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetConfigurationSnapshot(v bool) *UpdateAggregateConfigDeliveryChannelRequest {
	s.ConfigurationSnapshot = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetDeliveryChannelCondition(v string) *UpdateAggregateConfigDeliveryChannelRequest {
	s.DeliveryChannelCondition = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetDeliveryChannelId(v string) *UpdateAggregateConfigDeliveryChannelRequest {
	s.DeliveryChannelId = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetDeliveryChannelName(v string) *UpdateAggregateConfigDeliveryChannelRequest {
	s.DeliveryChannelName = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetDeliveryChannelTargetArn(v string) *UpdateAggregateConfigDeliveryChannelRequest {
	s.DeliveryChannelTargetArn = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetDeliverySnapshotTime(v string) *UpdateAggregateConfigDeliveryChannelRequest {
	s.DeliverySnapshotTime = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetDescription(v string) *UpdateAggregateConfigDeliveryChannelRequest {
	s.Description = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetNonCompliantNotification(v bool) *UpdateAggregateConfigDeliveryChannelRequest {
	s.NonCompliantNotification = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetOversizedDataOSSTargetArn(v string) *UpdateAggregateConfigDeliveryChannelRequest {
	s.OversizedDataOSSTargetArn = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelRequest) SetStatus(v int64) *UpdateAggregateConfigDeliveryChannelRequest {
	s.Status = &v
	return s
}

type UpdateAggregateConfigDeliveryChannelResponseBody struct {
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-8e45ff4e06a3a8****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// A7A0FFF8-0B44-40C6-8BBF-3A185EFDERTHG
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateAggregateConfigDeliveryChannelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigDeliveryChannelResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigDeliveryChannelResponseBody) SetDeliveryChannelId(v string) *UpdateAggregateConfigDeliveryChannelResponseBody {
	s.DeliveryChannelId = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelResponseBody) SetRequestId(v string) *UpdateAggregateConfigDeliveryChannelResponseBody {
	s.RequestId = &v
	return s
}

type UpdateAggregateConfigDeliveryChannelResponse struct {
	Headers    map[string]*string                                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateAggregateConfigDeliveryChannelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateAggregateConfigDeliveryChannelResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigDeliveryChannelResponse) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigDeliveryChannelResponse) SetHeaders(v map[string]*string) *UpdateAggregateConfigDeliveryChannelResponse {
	s.Headers = v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelResponse) SetStatusCode(v int32) *UpdateAggregateConfigDeliveryChannelResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateAggregateConfigDeliveryChannelResponse) SetBody(v *UpdateAggregateConfigDeliveryChannelResponseBody) *UpdateAggregateConfigDeliveryChannelResponse {
	s.Body = v
	return s
}

type UpdateAggregateConfigRuleRequest struct {
	// The IDs of the member accounts to which the rule applies, which means that the resources within the member accounts are evaluated based on the rule. Separate multiple member account IDs with commas (,).
	//
	// example:
	//
	// 115748125982****
	AccountIdsScope *string `json:"AccountIdsScope,omitempty" xml:"AccountIdsScope,omitempty"`
	// The ID of the account group.
	//
	// For more information about how to query the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the rule.
	//
	// For more information about how to query the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-4e3d626622af0080****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule.
	//
	// For more information about how to query the name of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// example:
	//
	// test_rule
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// >  This parameter applies only to a custom rule.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	ConfigRuleTriggerTypes *string `json:"ConfigRuleTriggerTypes,omitempty" xml:"ConfigRuleTriggerTypes,omitempty"`
	// The description of the rule.
	//
	// example:
	//
	// test_description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The IDs of the member accounts to which the rule does not apply, which means that the resources within the member accounts are not evaluated based on the rule. Separate multiple member account IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// 120886317861****
	ExcludeAccountIdsScope *string `json:"ExcludeAccountIdsScope,omitempty" xml:"ExcludeAccountIdsScope,omitempty"`
	// The IDs of the resource directories to which the rule does not apply, which means that the resources within member accounts in the resource directories are not evaluated based on the rule. Separate multiple resource directory IDs with commas (,).
	//
	// >
	//
	// 	- This parameter applies only to a rule of a global account group.
	//
	// 	- This parameter applies only to a managed rule.
	//
	// example:
	//
	// fd-pWmkqZ****
	ExcludeFolderIdsScope *string `json:"ExcludeFolderIdsScope,omitempty" xml:"ExcludeFolderIdsScope,omitempty"`
	// The IDs of the regions to which the rule not applies. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// The IDs of the resource groups to which the rule not applies. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The IDs of the resources excluded from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// lb-t4nbowvtbkss7t326****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// Exclude the specific tag scope of resources .
	ExcludeTagsScope []*UpdateAggregateConfigRuleRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The IDs of the resource directories to which the rule applies, which means that the resources within member accounts in the resource directories are evaluated based on the rule.
	//
	// >
	//
	// 	- This parameter applies only to a rule of a global account group.
	//
	// 	- This parameter applies only to a managed rule.
	//
	// example:
	//
	// fd-ZtHsRH****
	FolderIdsScope *string `json:"FolderIdsScope,omitempty" xml:"FolderIdsScope,omitempty"`
	// The input parameters of the rule.
	//
	// example:
	//
	// {"tag1Key":"ECS","tag1Value":"test"}
	InputParameters map[string]interface{} `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
	// The interval at which the rule is triggered. Valid values:
	//
	// 	- One_Hour
	//
	// 	- Three_Hours
	//
	// 	- Six_Hours
	//
	// 	- Twelve_Hours
	//
	// 	- TwentyFour_Hours
	//
	// >  This parameter is required if the `ConfigRuleTriggerTypes` parameter is set to `ScheduledNotification`.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The IDs of the regions to which the rule applies. Separate multiple region IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The IDs of the resource groups to which the rule applies. Separate multiple resource group IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources included from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The names of the resource groups to which the rule applies.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// i-xxx
	ResourceNameScope *string `json:"ResourceNameScope,omitempty" xml:"ResourceNameScope,omitempty"`
	// The type of the resource to be evaluated by the rule. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypesScope []*string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty" type:"Repeated"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 3
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*UpdateAggregateConfigRuleRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The logical relationship among the tag keys if you specify multiple tag keys for the `TagKeyScope` parameter. For example, if you set the `TagKeyScope` parameter to `ECS,OSS` and the TagKeyLogicScope parameter to `AND`, the rule applies to resources with both the `ECS` and `OSS` tag keys. Valid values:
	//
	// 	- AND
	//
	// 	- OR
	//
	// example:
	//
	// AND
	TagKeyLogicScope *string `json:"TagKeyLogicScope,omitempty" xml:"TagKeyLogicScope,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The tag key used to filter resources. The rule applies only to the resources with the specified tag key.
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The tag value used to filter resources. The rule applies only to the resources that use the specified tag value.
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The valid tag scope of resources.
	TagsScope []*UpdateAggregateConfigRuleRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s UpdateAggregateConfigRuleRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigRuleRequest) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigRuleRequest) SetAccountIdsScope(v string) *UpdateAggregateConfigRuleRequest {
	s.AccountIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetAggregatorId(v string) *UpdateAggregateConfigRuleRequest {
	s.AggregatorId = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetClientToken(v string) *UpdateAggregateConfigRuleRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetConfigRuleId(v string) *UpdateAggregateConfigRuleRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetConfigRuleName(v string) *UpdateAggregateConfigRuleRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetConfigRuleTriggerTypes(v string) *UpdateAggregateConfigRuleRequest {
	s.ConfigRuleTriggerTypes = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetDescription(v string) *UpdateAggregateConfigRuleRequest {
	s.Description = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetExcludeAccountIdsScope(v string) *UpdateAggregateConfigRuleRequest {
	s.ExcludeAccountIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetExcludeFolderIdsScope(v string) *UpdateAggregateConfigRuleRequest {
	s.ExcludeFolderIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetExcludeRegionIdsScope(v string) *UpdateAggregateConfigRuleRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetExcludeResourceGroupIdsScope(v string) *UpdateAggregateConfigRuleRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetExcludeResourceIdsScope(v string) *UpdateAggregateConfigRuleRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetExcludeTagsScope(v []*UpdateAggregateConfigRuleRequestExcludeTagsScope) *UpdateAggregateConfigRuleRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetFolderIdsScope(v string) *UpdateAggregateConfigRuleRequest {
	s.FolderIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetInputParameters(v map[string]interface{}) *UpdateAggregateConfigRuleRequest {
	s.InputParameters = v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetMaximumExecutionFrequency(v string) *UpdateAggregateConfigRuleRequest {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetRegionIdsScope(v string) *UpdateAggregateConfigRuleRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetResourceGroupIdsScope(v string) *UpdateAggregateConfigRuleRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetResourceIdsScope(v string) *UpdateAggregateConfigRuleRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetResourceNameScope(v string) *UpdateAggregateConfigRuleRequest {
	s.ResourceNameScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetResourceTypesScope(v []*string) *UpdateAggregateConfigRuleRequest {
	s.ResourceTypesScope = v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetRiskLevel(v int32) *UpdateAggregateConfigRuleRequest {
	s.RiskLevel = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetTag(v []*UpdateAggregateConfigRuleRequestTag) *UpdateAggregateConfigRuleRequest {
	s.Tag = v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetTagKeyLogicScope(v string) *UpdateAggregateConfigRuleRequest {
	s.TagKeyLogicScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetTagKeyScope(v string) *UpdateAggregateConfigRuleRequest {
	s.TagKeyScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetTagValueScope(v string) *UpdateAggregateConfigRuleRequest {
	s.TagValueScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequest) SetTagsScope(v []*UpdateAggregateConfigRuleRequestTagsScope) *UpdateAggregateConfigRuleRequest {
	s.TagsScope = v
	return s
}

type UpdateAggregateConfigRuleRequestExcludeTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateAggregateConfigRuleRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigRuleRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigRuleRequestExcludeTagsScope) SetTagKey(v string) *UpdateAggregateConfigRuleRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequestExcludeTagsScope) SetTagValue(v string) *UpdateAggregateConfigRuleRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type UpdateAggregateConfigRuleRequestTag struct {
	// The tag key of the resource. You can specify up to 20 tag keys.
	//
	// The tag key cannot be an empty string. The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs`:. The tag key cannot contain `http://` or `https://`.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s UpdateAggregateConfigRuleRequestTag) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigRuleRequestTag) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigRuleRequestTag) SetKey(v string) *UpdateAggregateConfigRuleRequestTag {
	s.Key = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequestTag) SetValue(v string) *UpdateAggregateConfigRuleRequestTag {
	s.Value = &v
	return s
}

type UpdateAggregateConfigRuleRequestTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateAggregateConfigRuleRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigRuleRequestTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigRuleRequestTagsScope) SetTagKey(v string) *UpdateAggregateConfigRuleRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateAggregateConfigRuleRequestTagsScope) SetTagValue(v string) *UpdateAggregateConfigRuleRequestTagsScope {
	s.TagValue = &v
	return s
}

type UpdateAggregateConfigRuleShrinkRequest struct {
	// The IDs of the member accounts to which the rule applies, which means that the resources within the member accounts are evaluated based on the rule. Separate multiple member account IDs with commas (,).
	//
	// example:
	//
	// 115748125982****
	AccountIdsScope *string `json:"AccountIdsScope,omitempty" xml:"AccountIdsScope,omitempty"`
	// The ID of the account group.
	//
	// For more information about how to query the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-a4e5626622af0079****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the rule.
	//
	// For more information about how to query the ID of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-4e3d626622af0080****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule.
	//
	// For more information about how to query the name of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// example:
	//
	// test_rule
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// >  This parameter applies only to a custom rule.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	ConfigRuleTriggerTypes *string `json:"ConfigRuleTriggerTypes,omitempty" xml:"ConfigRuleTriggerTypes,omitempty"`
	// The description of the rule.
	//
	// example:
	//
	// test_description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The IDs of the member accounts to which the rule does not apply, which means that the resources within the member accounts are not evaluated based on the rule. Separate multiple member account IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// 120886317861****
	ExcludeAccountIdsScope *string `json:"ExcludeAccountIdsScope,omitempty" xml:"ExcludeAccountIdsScope,omitempty"`
	// The IDs of the resource directories to which the rule does not apply, which means that the resources within member accounts in the resource directories are not evaluated based on the rule. Separate multiple resource directory IDs with commas (,).
	//
	// >
	//
	// 	- This parameter applies only to a rule of a global account group.
	//
	// 	- This parameter applies only to a managed rule.
	//
	// example:
	//
	// fd-pWmkqZ****
	ExcludeFolderIdsScope *string `json:"ExcludeFolderIdsScope,omitempty" xml:"ExcludeFolderIdsScope,omitempty"`
	// The IDs of the regions to which the rule not applies. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// The IDs of the resource groups to which the rule not applies. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The IDs of the resources excluded from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// lb-t4nbowvtbkss7t326****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// Exclude the specific tag scope of resources .
	ExcludeTagsScope []*UpdateAggregateConfigRuleShrinkRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The IDs of the resource directories to which the rule applies, which means that the resources within member accounts in the resource directories are evaluated based on the rule.
	//
	// >
	//
	// 	- This parameter applies only to a rule of a global account group.
	//
	// 	- This parameter applies only to a managed rule.
	//
	// example:
	//
	// fd-ZtHsRH****
	FolderIdsScope *string `json:"FolderIdsScope,omitempty" xml:"FolderIdsScope,omitempty"`
	// The input parameters of the rule.
	//
	// example:
	//
	// {"tag1Key":"ECS","tag1Value":"test"}
	InputParametersShrink *string `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
	// The interval at which the rule is triggered. Valid values:
	//
	// 	- One_Hour
	//
	// 	- Three_Hours
	//
	// 	- Six_Hours
	//
	// 	- Twelve_Hours
	//
	// 	- TwentyFour_Hours
	//
	// >  This parameter is required if the `ConfigRuleTriggerTypes` parameter is set to `ScheduledNotification`.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The IDs of the regions to which the rule applies. Separate multiple region IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The IDs of the resource groups to which the rule applies. Separate multiple resource group IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources included from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The names of the resource groups to which the rule applies.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// i-xxx
	ResourceNameScope *string `json:"ResourceNameScope,omitempty" xml:"ResourceNameScope,omitempty"`
	// The type of the resource to be evaluated by the rule. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypesScopeShrink *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 3
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The logical relationship among the tag keys if you specify multiple tag keys for the `TagKeyScope` parameter. For example, if you set the `TagKeyScope` parameter to `ECS,OSS` and the TagKeyLogicScope parameter to `AND`, the rule applies to resources with both the `ECS` and `OSS` tag keys. Valid values:
	//
	// 	- AND
	//
	// 	- OR
	//
	// example:
	//
	// AND
	TagKeyLogicScope *string `json:"TagKeyLogicScope,omitempty" xml:"TagKeyLogicScope,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The tag key used to filter resources. The rule applies only to the resources with the specified tag key.
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// Deprecated
	//
	// This parameter is deprecated. We recommend that you use the `TagsScope` parameter.
	//
	// The tag value used to filter resources. The rule applies only to the resources that use the specified tag value.
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The valid tag scope of resources.
	TagsScope []*UpdateAggregateConfigRuleShrinkRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s UpdateAggregateConfigRuleShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigRuleShrinkRequest) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetAccountIdsScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.AccountIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetAggregatorId(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetClientToken(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetConfigRuleId(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetConfigRuleName(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetConfigRuleTriggerTypes(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ConfigRuleTriggerTypes = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetDescription(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.Description = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetExcludeAccountIdsScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ExcludeAccountIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetExcludeFolderIdsScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ExcludeFolderIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetExcludeRegionIdsScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetExcludeResourceGroupIdsScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetExcludeResourceIdsScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetExcludeTagsScope(v []*UpdateAggregateConfigRuleShrinkRequestExcludeTagsScope) *UpdateAggregateConfigRuleShrinkRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetFolderIdsScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.FolderIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetInputParametersShrink(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.InputParametersShrink = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetMaximumExecutionFrequency(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetRegionIdsScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetResourceGroupIdsScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetResourceIdsScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetResourceNameScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ResourceNameScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetResourceTypesScopeShrink(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.ResourceTypesScopeShrink = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetRiskLevel(v int32) *UpdateAggregateConfigRuleShrinkRequest {
	s.RiskLevel = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetTagShrink(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.TagShrink = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetTagKeyLogicScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.TagKeyLogicScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetTagKeyScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.TagKeyScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetTagValueScope(v string) *UpdateAggregateConfigRuleShrinkRequest {
	s.TagValueScope = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequest) SetTagsScope(v []*UpdateAggregateConfigRuleShrinkRequestTagsScope) *UpdateAggregateConfigRuleShrinkRequest {
	s.TagsScope = v
	return s
}

type UpdateAggregateConfigRuleShrinkRequestExcludeTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateAggregateConfigRuleShrinkRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigRuleShrinkRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigRuleShrinkRequestExcludeTagsScope) SetTagKey(v string) *UpdateAggregateConfigRuleShrinkRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequestExcludeTagsScope) SetTagValue(v string) *UpdateAggregateConfigRuleShrinkRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type UpdateAggregateConfigRuleShrinkRequestTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateAggregateConfigRuleShrinkRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigRuleShrinkRequestTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigRuleShrinkRequestTagsScope) SetTagKey(v string) *UpdateAggregateConfigRuleShrinkRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateAggregateConfigRuleShrinkRequestTagsScope) SetTagValue(v string) *UpdateAggregateConfigRuleShrinkRequestTagsScope {
	s.TagValue = &v
	return s
}

type UpdateAggregateConfigRuleResponseBody struct {
	// The ID of the rule.
	//
	// example:
	//
	// cr-4e3d626622af0080****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateAggregateConfigRuleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigRuleResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigRuleResponseBody) SetConfigRuleId(v string) *UpdateAggregateConfigRuleResponseBody {
	s.ConfigRuleId = &v
	return s
}

func (s *UpdateAggregateConfigRuleResponseBody) SetRequestId(v string) *UpdateAggregateConfigRuleResponseBody {
	s.RequestId = &v
	return s
}

type UpdateAggregateConfigRuleResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateAggregateConfigRuleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateAggregateConfigRuleResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateConfigRuleResponse) GoString() string {
	return s.String()
}

func (s *UpdateAggregateConfigRuleResponse) SetHeaders(v map[string]*string) *UpdateAggregateConfigRuleResponse {
	s.Headers = v
	return s
}

func (s *UpdateAggregateConfigRuleResponse) SetStatusCode(v int32) *UpdateAggregateConfigRuleResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateAggregateConfigRuleResponse) SetBody(v *UpdateAggregateConfigRuleResponseBody) *UpdateAggregateConfigRuleResponse {
	s.Body = v
	return s
}

type UpdateAggregateRemediationRequest struct {
	// The ID of the account group.
	//
	// You can the [ListAggregators](https://help.aliyun.com/document_detail/255797.html) operation to obtain the ID of the account group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-6b4a626622af0012****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The execution mode of the remediation. Valid values:
	//
	// 	- NON_EXECUTION: The remediation is not executed.
	//
	// 	- AUTO_EXECUTION: The remediation is automatically executed.
	//
	// 	- MANUAL_EXECUTION: The remediation is manually executed.
	//
	// 	- NOT_CONFIG: The execution mode is not specified.
	//
	// example:
	//
	// AUTO_EXECUTION
	InvokeType *string `json:"InvokeType,omitempty" xml:"InvokeType,omitempty"`
	// The desired parameter values of the remediation setting.
	//
	// example:
	//
	// {"properties":[{"name":"regionId","type":"STRING","value":"{regionId}","allowedValues":[]},{"name":"bucketName","type":"STRING","value":"{resourceId}","allowedValues":[],"description":"OSS Bucket Name."},{"name":"permissionName","type":"STRING","value":"private","allowedValues":["public-read-write","public-read","private"],"description":"ACL Permission Name."}]}
	Params *string `json:"Params,omitempty" xml:"Params,omitempty"`
	// The ID of the remediation setting.
	//
	// You can call the [ListAggregateRemediations](https://help.aliyun.com/document_detail/270036.html) operation to obtain the ID of the remediation setting.
	//
	// This parameter is required.
	//
	// example:
	//
	// crr-909ba2d4716700eb****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// The ID of the remediation template.
	//
	// You can call the [ListRemediationTemplates](https://help.aliyun.com/document_detail/270066.html) operation to obtain the ID of the remediation template.
	//
	// example:
	//
	// ACS-OSS-PutBucketAcl
	RemediationTemplateId *string `json:"RemediationTemplateId,omitempty" xml:"RemediationTemplateId,omitempty"`
	// The type of the remediation template. Valid values:
	//
	// 	- OOS: Operation Orchestration Service (OOS)
	//
	// 	- FC: Function Compute. You can use Function Compute to configure custom remediation settings.
	//
	// example:
	//
	// OOS
	RemediationType *string `json:"RemediationType,omitempty" xml:"RemediationType,omitempty"`
	// The type of the rule for which the remediation template is configured. Valid values:
	//
	// 	- ALIYUN: managed rule.
	//
	// 	- CUSTOM: custom rule.
	//
	// 	- NONE: The rule is not specified.
	//
	// example:
	//
	// ALIYUN
	SourceType *string `json:"SourceType,omitempty" xml:"SourceType,omitempty"`
}

func (s UpdateAggregateRemediationRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateRemediationRequest) GoString() string {
	return s.String()
}

func (s *UpdateAggregateRemediationRequest) SetAggregatorId(v string) *UpdateAggregateRemediationRequest {
	s.AggregatorId = &v
	return s
}

func (s *UpdateAggregateRemediationRequest) SetInvokeType(v string) *UpdateAggregateRemediationRequest {
	s.InvokeType = &v
	return s
}

func (s *UpdateAggregateRemediationRequest) SetParams(v string) *UpdateAggregateRemediationRequest {
	s.Params = &v
	return s
}

func (s *UpdateAggregateRemediationRequest) SetRemediationId(v string) *UpdateAggregateRemediationRequest {
	s.RemediationId = &v
	return s
}

func (s *UpdateAggregateRemediationRequest) SetRemediationTemplateId(v string) *UpdateAggregateRemediationRequest {
	s.RemediationTemplateId = &v
	return s
}

func (s *UpdateAggregateRemediationRequest) SetRemediationType(v string) *UpdateAggregateRemediationRequest {
	s.RemediationType = &v
	return s
}

func (s *UpdateAggregateRemediationRequest) SetSourceType(v string) *UpdateAggregateRemediationRequest {
	s.SourceType = &v
	return s
}

type UpdateAggregateRemediationResponseBody struct {
	// The ID of the remediation setting.
	//
	// example:
	//
	// crr-909ba2d4716700eb****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// C7817373-78CB-4F9A-8AFA-E7A88E9D64A2
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateAggregateRemediationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateRemediationResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateAggregateRemediationResponseBody) SetRemediationId(v string) *UpdateAggregateRemediationResponseBody {
	s.RemediationId = &v
	return s
}

func (s *UpdateAggregateRemediationResponseBody) SetRequestId(v string) *UpdateAggregateRemediationResponseBody {
	s.RequestId = &v
	return s
}

type UpdateAggregateRemediationResponse struct {
	Headers    map[string]*string                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateAggregateRemediationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateAggregateRemediationResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregateRemediationResponse) GoString() string {
	return s.String()
}

func (s *UpdateAggregateRemediationResponse) SetHeaders(v map[string]*string) *UpdateAggregateRemediationResponse {
	s.Headers = v
	return s
}

func (s *UpdateAggregateRemediationResponse) SetStatusCode(v int32) *UpdateAggregateRemediationResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateAggregateRemediationResponse) SetBody(v *UpdateAggregateRemediationResponseBody) *UpdateAggregateRemediationResponse {
	s.Body = v
	return s
}

type UpdateAggregatorRequest struct {
	// The members in the account group.
	//
	// >  When you modify the configurations of an account group, this parameter can be left empty. In this case, the member list is not updated. If you want to update the member list, you must configure both the `AccountId` and `AccountType` parameters.
	//
	// if can be null:
	// false
	AggregatorAccounts []*UpdateAggregatorRequestAggregatorAccounts `json:"AggregatorAccounts,omitempty" xml:"AggregatorAccounts,omitempty" type:"Repeated"`
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-dacf86d8314e00eb****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The name of the account group.
	//
	// For more information about how to obtain the name of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// example:
	//
	// Test_Group
	AggregatorName *string `json:"AggregatorName,omitempty" xml:"AggregatorName,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The description of the account group.
	//
	// For more information about how to obtain the description of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// example:
	//
	// Test_Aggregator_Description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	FolderId    *string `json:"FolderId,omitempty" xml:"FolderId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*UpdateAggregatorRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
}

func (s UpdateAggregatorRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregatorRequest) GoString() string {
	return s.String()
}

func (s *UpdateAggregatorRequest) SetAggregatorAccounts(v []*UpdateAggregatorRequestAggregatorAccounts) *UpdateAggregatorRequest {
	s.AggregatorAccounts = v
	return s
}

func (s *UpdateAggregatorRequest) SetAggregatorId(v string) *UpdateAggregatorRequest {
	s.AggregatorId = &v
	return s
}

func (s *UpdateAggregatorRequest) SetAggregatorName(v string) *UpdateAggregatorRequest {
	s.AggregatorName = &v
	return s
}

func (s *UpdateAggregatorRequest) SetClientToken(v string) *UpdateAggregatorRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateAggregatorRequest) SetDescription(v string) *UpdateAggregatorRequest {
	s.Description = &v
	return s
}

func (s *UpdateAggregatorRequest) SetFolderId(v string) *UpdateAggregatorRequest {
	s.FolderId = &v
	return s
}

func (s *UpdateAggregatorRequest) SetTag(v []*UpdateAggregatorRequestTag) *UpdateAggregatorRequest {
	s.Tag = v
	return s
}

type UpdateAggregatorRequestAggregatorAccounts struct {
	// The ID of the member.
	//
	// For more information about how to obtain the ID of a member, see [ListAccounts](https://help.aliyun.com/document_detail/160016.html).
	//
	// >  If you want to update the member list, you must configure both the `AccountId` and `AccountType` parameters.
	//
	// example:
	//
	// 173808452267****
	AccountId *int64 `json:"AccountId,omitempty" xml:"AccountId,omitempty"`
	// The display name of the member.
	//
	// For more information about how to obtain the name of a member, see [ListAccounts](https://help.aliyun.com/document_detail/160016.html).
	//
	// >  If you want to update the member list, you must configure both the `AccountId` and `AccountType` parameters.
	//
	// example:
	//
	// Tony
	AccountName *string `json:"AccountName,omitempty" xml:"AccountName,omitempty"`
	// The resource directory to which the member belongs. Valid value: ResourceDirectory. ResourceDirectory indicates that the member belongs to a resource directory.
	//
	// >  If you want to update the member list, you must configure both the `AccountId` and `AccountType` parameters.
	//
	// example:
	//
	// ResourceDirectory
	AccountType *string `json:"AccountType,omitempty" xml:"AccountType,omitempty"`
}

func (s UpdateAggregatorRequestAggregatorAccounts) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregatorRequestAggregatorAccounts) GoString() string {
	return s.String()
}

func (s *UpdateAggregatorRequestAggregatorAccounts) SetAccountId(v int64) *UpdateAggregatorRequestAggregatorAccounts {
	s.AccountId = &v
	return s
}

func (s *UpdateAggregatorRequestAggregatorAccounts) SetAccountName(v string) *UpdateAggregatorRequestAggregatorAccounts {
	s.AccountName = &v
	return s
}

func (s *UpdateAggregatorRequestAggregatorAccounts) SetAccountType(v string) *UpdateAggregatorRequestAggregatorAccounts {
	s.AccountType = &v
	return s
}

type UpdateAggregatorRequestTag struct {
	// The tag key of the resource. You can specify up to 20 tag keys.
	//
	// The tag key cannot be an empty string. The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs`:. The tag key cannot contain `http://` or `https://`.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s UpdateAggregatorRequestTag) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregatorRequestTag) GoString() string {
	return s.String()
}

func (s *UpdateAggregatorRequestTag) SetKey(v string) *UpdateAggregatorRequestTag {
	s.Key = &v
	return s
}

func (s *UpdateAggregatorRequestTag) SetValue(v string) *UpdateAggregatorRequestTag {
	s.Value = &v
	return s
}

type UpdateAggregatorShrinkRequest struct {
	// The members in the account group.
	//
	// >  When you modify the configurations of an account group, this parameter can be left empty. In this case, the member list is not updated. If you want to update the member list, you must configure both the `AccountId` and `AccountType` parameters.
	//
	// if can be null:
	// false
	AggregatorAccountsShrink *string `json:"AggregatorAccounts,omitempty" xml:"AggregatorAccounts,omitempty"`
	// The ID of the account group.
	//
	// For more information about how to obtain the ID of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// ca-dacf86d8314e00eb****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The name of the account group.
	//
	// For more information about how to obtain the name of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// example:
	//
	// Test_Group
	AggregatorName *string `json:"AggregatorName,omitempty" xml:"AggregatorName,omitempty"`
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The description of the account group.
	//
	// For more information about how to obtain the description of an account group, see [ListAggregators](https://help.aliyun.com/document_detail/255797.html).
	//
	// example:
	//
	// Test_Aggregator_Description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	FolderId    *string `json:"FolderId,omitempty" xml:"FolderId,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
}

func (s UpdateAggregatorShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregatorShrinkRequest) GoString() string {
	return s.String()
}

func (s *UpdateAggregatorShrinkRequest) SetAggregatorAccountsShrink(v string) *UpdateAggregatorShrinkRequest {
	s.AggregatorAccountsShrink = &v
	return s
}

func (s *UpdateAggregatorShrinkRequest) SetAggregatorId(v string) *UpdateAggregatorShrinkRequest {
	s.AggregatorId = &v
	return s
}

func (s *UpdateAggregatorShrinkRequest) SetAggregatorName(v string) *UpdateAggregatorShrinkRequest {
	s.AggregatorName = &v
	return s
}

func (s *UpdateAggregatorShrinkRequest) SetClientToken(v string) *UpdateAggregatorShrinkRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateAggregatorShrinkRequest) SetDescription(v string) *UpdateAggregatorShrinkRequest {
	s.Description = &v
	return s
}

func (s *UpdateAggregatorShrinkRequest) SetFolderId(v string) *UpdateAggregatorShrinkRequest {
	s.FolderId = &v
	return s
}

func (s *UpdateAggregatorShrinkRequest) SetTagShrink(v string) *UpdateAggregatorShrinkRequest {
	s.TagShrink = &v
	return s
}

type UpdateAggregatorResponseBody struct {
	// The ID of the account group.
	//
	// example:
	//
	// ca-dacf86d8314e00eb****
	AggregatorId *string `json:"AggregatorId,omitempty" xml:"AggregatorId,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// 8195B664-9565-4685-89AC-8B5F04B44B92
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateAggregatorResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregatorResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateAggregatorResponseBody) SetAggregatorId(v string) *UpdateAggregatorResponseBody {
	s.AggregatorId = &v
	return s
}

func (s *UpdateAggregatorResponseBody) SetRequestId(v string) *UpdateAggregatorResponseBody {
	s.RequestId = &v
	return s
}

type UpdateAggregatorResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateAggregatorResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateAggregatorResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateAggregatorResponse) GoString() string {
	return s.String()
}

func (s *UpdateAggregatorResponse) SetHeaders(v map[string]*string) *UpdateAggregatorResponse {
	s.Headers = v
	return s
}

func (s *UpdateAggregatorResponse) SetStatusCode(v int32) *UpdateAggregatorResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateAggregatorResponse) SetBody(v *UpdateAggregatorResponseBody) *UpdateAggregatorResponse {
	s.Body = v
	return s
}

type UpdateCompliancePackRequest struct {
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-a8a8626622af0082****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// For more information about how to obtain the name of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// example:
	//
	// The name of the compliance package.
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The rules in the compliance package.
	//
	// If you leave this parameter empty, the rules in the compliance package remain unchanged. If you configure this parameter, Cloud Config replaces the existing rules in the compliance package with the specified rules.
	ConfigRules []*UpdateCompliancePackRequestConfigRules `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty" type:"Repeated"`
	// The description of the compliance package.
	//
	// example:
	//
	// The description of the compliance package.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The IDs of the regions to which the rule not applies. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource that you do not want to evaluate by using the compliance package. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// 23642660635687****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// ExcludeTagsScope
	ExcludeTagsScope []*UpdateCompliancePackRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The ID of the region whose resources you want to evaluate by using the compliance package. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group whose resources you want to evaluate by using the compliance package. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzdibsjjc****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources included from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Valid values:
	//
	// 	- 1: high risk level
	//
	// 	- 2: medium risk level
	//
	// 	- 3: low risk level
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*UpdateCompliancePackRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
	// The tag key of the resource that you want to evaluate by using the compliance package.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// The tag value of the resource that you want to evaluate by using the compliance package.
	//
	// >  You must configure the TagValueScope parameter together with the TagValueScope parameter.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// TagsScope
	TagsScope []*UpdateCompliancePackRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s UpdateCompliancePackRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackRequest) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackRequest) SetClientToken(v string) *UpdateCompliancePackRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetCompliancePackId(v string) *UpdateCompliancePackRequest {
	s.CompliancePackId = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetCompliancePackName(v string) *UpdateCompliancePackRequest {
	s.CompliancePackName = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetConfigRules(v []*UpdateCompliancePackRequestConfigRules) *UpdateCompliancePackRequest {
	s.ConfigRules = v
	return s
}

func (s *UpdateCompliancePackRequest) SetDescription(v string) *UpdateCompliancePackRequest {
	s.Description = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetExcludeRegionIdsScope(v string) *UpdateCompliancePackRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetExcludeResourceGroupIdsScope(v string) *UpdateCompliancePackRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetExcludeResourceIdsScope(v string) *UpdateCompliancePackRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetExcludeTagsScope(v []*UpdateCompliancePackRequestExcludeTagsScope) *UpdateCompliancePackRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *UpdateCompliancePackRequest) SetRegionIdsScope(v string) *UpdateCompliancePackRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetResourceGroupIdsScope(v string) *UpdateCompliancePackRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetResourceIdsScope(v string) *UpdateCompliancePackRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetRiskLevel(v int32) *UpdateCompliancePackRequest {
	s.RiskLevel = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetTag(v []*UpdateCompliancePackRequestTag) *UpdateCompliancePackRequest {
	s.Tag = v
	return s
}

func (s *UpdateCompliancePackRequest) SetTagKeyScope(v string) *UpdateCompliancePackRequest {
	s.TagKeyScope = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetTagValueScope(v string) *UpdateCompliancePackRequest {
	s.TagValueScope = &v
	return s
}

func (s *UpdateCompliancePackRequest) SetTagsScope(v []*UpdateCompliancePackRequestTagsScope) *UpdateCompliancePackRequest {
	s.TagsScope = v
	return s
}

type UpdateCompliancePackRequestConfigRules struct {
	// The rule ID. If you configure this parameter, Cloud Config adds the rule that has the specified ID to the compliance package.
	//
	// You need to only specify one of the `ManagedRuleIdentifier` and `ConfigRuleId` properties. If you specify both the properties, the value of the `ConfigRuleId` property takes precedence. You can call the [ListConfigRules](https://help.aliyun.com/document_detail/169607.html) operation to obtain the rule ID.
	//
	// example:
	//
	// cr-e918626622af000f****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The rule name.
	//
	// example:
	//
	// The rule name.
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The details of the input parameter of the rule.
	ConfigRuleParameters []*UpdateCompliancePackRequestConfigRulesConfigRuleParameters `json:"ConfigRuleParameters,omitempty" xml:"ConfigRuleParameters,omitempty" type:"Repeated"`
	// The rule description.
	//
	// example:
	//
	// The rule description.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The identifier of the managed rule. Cloud Config automatically creates a rule based on the identifier of the managed rule and adds the rule to the current compliance package.
	//
	// You need to only configure the `ManagedRuleIdentifier` or `ConfigRuleId` parameter. If you configure both parameters, the value of the `ConfigRuleId` parameter takes precedence. For more information about how to obtain the identifier of a managed rule, see [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html).
	//
	// example:
	//
	// eip-bandwidth-limit
	ManagedRuleIdentifier *string `json:"ManagedRuleIdentifier,omitempty" xml:"ManagedRuleIdentifier,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high risk level
	//
	// 	- 2: medium risk level
	//
	// 	- 3: low risk level
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
}

func (s UpdateCompliancePackRequestConfigRules) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackRequestConfigRules) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackRequestConfigRules) SetConfigRuleId(v string) *UpdateCompliancePackRequestConfigRules {
	s.ConfigRuleId = &v
	return s
}

func (s *UpdateCompliancePackRequestConfigRules) SetConfigRuleName(v string) *UpdateCompliancePackRequestConfigRules {
	s.ConfigRuleName = &v
	return s
}

func (s *UpdateCompliancePackRequestConfigRules) SetConfigRuleParameters(v []*UpdateCompliancePackRequestConfigRulesConfigRuleParameters) *UpdateCompliancePackRequestConfigRules {
	s.ConfigRuleParameters = v
	return s
}

func (s *UpdateCompliancePackRequestConfigRules) SetDescription(v string) *UpdateCompliancePackRequestConfigRules {
	s.Description = &v
	return s
}

func (s *UpdateCompliancePackRequestConfigRules) SetManagedRuleIdentifier(v string) *UpdateCompliancePackRequestConfigRules {
	s.ManagedRuleIdentifier = &v
	return s
}

func (s *UpdateCompliancePackRequestConfigRules) SetRiskLevel(v int32) *UpdateCompliancePackRequestConfigRules {
	s.RiskLevel = &v
	return s
}

type UpdateCompliancePackRequestConfigRulesConfigRuleParameters struct {
	// The name of the managed rule parameter.
	//
	// You must specify both `ParameterName` and `ParameterValue` or neither of them. If the managed rule has an input parameter but no default value exists, you must configure this parameter. For more information about how to obtain the name of an input parameter for a managed rule, see [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html).
	//
	// example:
	//
	// bandwidth
	ParameterName *string `json:"ParameterName,omitempty" xml:"ParameterName,omitempty"`
	// The value of the managed rule parameter.
	//
	// You must configure the `ParameterName` and `ParameterValue` parameters or neither of them. If the managed rule has an input parameter but no default value exists, you must configure this parameter. For more information about how to obtain the value of an input parameter for a managed rule, see [ListCompliancePackTemplates](https://help.aliyun.com/document_detail/261176.html).
	//
	// example:
	//
	// 20
	ParameterValue *string `json:"ParameterValue,omitempty" xml:"ParameterValue,omitempty"`
}

func (s UpdateCompliancePackRequestConfigRulesConfigRuleParameters) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackRequestConfigRulesConfigRuleParameters) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackRequestConfigRulesConfigRuleParameters) SetParameterName(v string) *UpdateCompliancePackRequestConfigRulesConfigRuleParameters {
	s.ParameterName = &v
	return s
}

func (s *UpdateCompliancePackRequestConfigRulesConfigRuleParameters) SetParameterValue(v string) *UpdateCompliancePackRequestConfigRulesConfigRuleParameters {
	s.ParameterValue = &v
	return s
}

type UpdateCompliancePackRequestExcludeTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateCompliancePackRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackRequestExcludeTagsScope) SetTagKey(v string) *UpdateCompliancePackRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateCompliancePackRequestExcludeTagsScope) SetTagValue(v string) *UpdateCompliancePackRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type UpdateCompliancePackRequestTag struct {
	// The tag keys.
	//
	// The tag keys cannot be an empty string. The tag keys can be up to 64 characters in length. The tag keys cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// You can specify at most 20 tag keys in each call.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The tag values.
	//
	// The tag values can be an empty string or up to 128 characters in length. The tag values cannot start with `aliyun` or `acs:` and cannot contain `http://` or `https://`.
	//
	// Each key-value must be unique. You can specify at most 20 tag values in each call.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s UpdateCompliancePackRequestTag) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackRequestTag) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackRequestTag) SetKey(v string) *UpdateCompliancePackRequestTag {
	s.Key = &v
	return s
}

func (s *UpdateCompliancePackRequestTag) SetValue(v string) *UpdateCompliancePackRequestTag {
	s.Value = &v
	return s
}

type UpdateCompliancePackRequestTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateCompliancePackRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackRequestTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackRequestTagsScope) SetTagKey(v string) *UpdateCompliancePackRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateCompliancePackRequestTagsScope) SetTagValue(v string) *UpdateCompliancePackRequestTagsScope {
	s.TagValue = &v
	return s
}

type UpdateCompliancePackShrinkRequest struct {
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the compliance package.
	//
	// For more information about how to obtain the ID of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cp-a8a8626622af0082****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The name of the compliance package.
	//
	// For more information about how to obtain the name of a compliance package, see [ListCompliancePacks](https://help.aliyun.com/document_detail/263332.html).
	//
	// example:
	//
	// The name of the compliance package.
	CompliancePackName *string `json:"CompliancePackName,omitempty" xml:"CompliancePackName,omitempty"`
	// The rules in the compliance package.
	//
	// If you leave this parameter empty, the rules in the compliance package remain unchanged. If you configure this parameter, Cloud Config replaces the existing rules in the compliance package with the specified rules.
	ConfigRulesShrink *string `json:"ConfigRules,omitempty" xml:"ConfigRules,omitempty"`
	// The description of the compliance package.
	//
	// example:
	//
	// The description of the compliance package.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The IDs of the regions to which the rule not applies. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// ExcludeResourceGroupIdsScope. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The ID of the resource that you do not want to evaluate by using the compliance package. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// 23642660635687****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// ExcludeTagsScope
	ExcludeTagsScope []*UpdateCompliancePackShrinkRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// The ID of the region whose resources you want to evaluate by using the compliance package. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The ID of the resource group whose resources you want to evaluate by using the compliance package. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-aekzdibsjjc****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources included from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// The risk level of the resources that are not compliant with the rules in the compliance package. Valid values:
	//
	// 	- 1: high risk level
	//
	// 	- 2: medium risk level
	//
	// 	- 3: low risk level
	//
	// example:
	//
	// 1
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
	// The tag key of the resource that you want to evaluate by using the compliance package.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// The tag value of the resource that you want to evaluate by using the compliance package.
	//
	// >  You must configure the TagValueScope parameter together with the TagValueScope parameter.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// TagsScope
	TagsScope []*UpdateCompliancePackShrinkRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s UpdateCompliancePackShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackShrinkRequest) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackShrinkRequest) SetClientToken(v string) *UpdateCompliancePackShrinkRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetCompliancePackId(v string) *UpdateCompliancePackShrinkRequest {
	s.CompliancePackId = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetCompliancePackName(v string) *UpdateCompliancePackShrinkRequest {
	s.CompliancePackName = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetConfigRulesShrink(v string) *UpdateCompliancePackShrinkRequest {
	s.ConfigRulesShrink = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetDescription(v string) *UpdateCompliancePackShrinkRequest {
	s.Description = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetExcludeRegionIdsScope(v string) *UpdateCompliancePackShrinkRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetExcludeResourceGroupIdsScope(v string) *UpdateCompliancePackShrinkRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetExcludeResourceIdsScope(v string) *UpdateCompliancePackShrinkRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetExcludeTagsScope(v []*UpdateCompliancePackShrinkRequestExcludeTagsScope) *UpdateCompliancePackShrinkRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetRegionIdsScope(v string) *UpdateCompliancePackShrinkRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetResourceGroupIdsScope(v string) *UpdateCompliancePackShrinkRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetResourceIdsScope(v string) *UpdateCompliancePackShrinkRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetRiskLevel(v int32) *UpdateCompliancePackShrinkRequest {
	s.RiskLevel = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetTagShrink(v string) *UpdateCompliancePackShrinkRequest {
	s.TagShrink = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetTagKeyScope(v string) *UpdateCompliancePackShrinkRequest {
	s.TagKeyScope = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetTagValueScope(v string) *UpdateCompliancePackShrinkRequest {
	s.TagValueScope = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequest) SetTagsScope(v []*UpdateCompliancePackShrinkRequestTagsScope) *UpdateCompliancePackShrinkRequest {
	s.TagsScope = v
	return s
}

type UpdateCompliancePackShrinkRequestExcludeTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateCompliancePackShrinkRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackShrinkRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackShrinkRequestExcludeTagsScope) SetTagKey(v string) *UpdateCompliancePackShrinkRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequestExcludeTagsScope) SetTagValue(v string) *UpdateCompliancePackShrinkRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type UpdateCompliancePackShrinkRequestTagsScope struct {
	// The tag key.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateCompliancePackShrinkRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackShrinkRequestTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackShrinkRequestTagsScope) SetTagKey(v string) *UpdateCompliancePackShrinkRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateCompliancePackShrinkRequestTagsScope) SetTagValue(v string) *UpdateCompliancePackShrinkRequestTagsScope {
	s.TagValue = &v
	return s
}

type UpdateCompliancePackResponseBody struct {
	// The ID of the compliance package.
	//
	// example:
	//
	// cp-a8a8626622af0082****
	CompliancePackId *string `json:"CompliancePackId,omitempty" xml:"CompliancePackId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateCompliancePackResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackResponseBody) SetCompliancePackId(v string) *UpdateCompliancePackResponseBody {
	s.CompliancePackId = &v
	return s
}

func (s *UpdateCompliancePackResponseBody) SetRequestId(v string) *UpdateCompliancePackResponseBody {
	s.RequestId = &v
	return s
}

type UpdateCompliancePackResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateCompliancePackResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateCompliancePackResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateCompliancePackResponse) GoString() string {
	return s.String()
}

func (s *UpdateCompliancePackResponse) SetHeaders(v map[string]*string) *UpdateCompliancePackResponse {
	s.Headers = v
	return s
}

func (s *UpdateCompliancePackResponse) SetStatusCode(v int32) *UpdateCompliancePackResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateCompliancePackResponse) SetBody(v *UpdateCompliancePackResponseBody) *UpdateCompliancePackResponse {
	s.Body = v
	return s
}

type UpdateConfigDeliveryChannelRequest struct {
	// The client token that is used to ensure the idempotency of the request. You can use the client to generate the token, but you must ensure that the token is unique among different requests.
	//
	// The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](https://help.aliyun.com/document_detail/25693.html).
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// Specifies whether to deliver scheduled compliant snapshots. Cloud Config delivers scheduled compliant snapshots at `04:00Z` and `16:00Z` to  Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: Cloud Config delivers compliant snapshots.
	//
	// 	- false (default): Cloud Config does not deliver scheduled compliant snapshots.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// false
	CompliantSnapshot *bool `json:"CompliantSnapshot,omitempty" xml:"CompliantSnapshot,omitempty"`
	// Specifies whether to deliver resource change logs. If you set this parameter to true, Cloud Config delivers resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	//
	// 	- true: Cloud Config delivers resource change logs.
	//
	// 	- false (default): Cloud Config does not deliver resource change logs.
	//
	// > This parameter is available for delivery channels of the OSS, SLS, and MNS types.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// false
	ConfigurationItemChangeNotification *bool `json:"ConfigurationItemChangeNotification,omitempty" xml:"ConfigurationItemChangeNotification,omitempty"`
	// Specifies whether to deliver scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at `04:00Z` and `16:00Z` to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	//
	// 	- true: Cloud Config delivers scheduled resource snapshots.
	//
	// 	- false (default): Cloud Config does not deliver scheduled resource snapshots.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// false
	ConfigurationSnapshot *bool `json:"ConfigurationSnapshot,omitempty" xml:"ConfigurationSnapshot,omitempty"`
	// The rule that you want to attach to the delivery channel. This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// 	- If the value of the DeliveryChannelType parameter is MNS, take note of the following settings of the lowest risk level and resource types of the events to which you subscribed:
	//
	//     	- The setting of the lowest risk level for the events to which you want to subscribe is in the following format: `{"filterType":"RuleRiskLevel","value":"1","multiple":false}`.
	//
	//         The `value` field indicates the lowest risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	//     	- The setting of the resource types of the events to which you want to subscribe is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//         The `values` field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// 	- If you set the DeliveryChannelType parameter to SLS, the setting of the resource types of the snapshots to which you want to deliver is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//     The `values` field specifies the resource types of the snapshots to which you want to deliver. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// example:
	//
	// [{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]
	DeliveryChannelCondition *string `json:"DeliveryChannelCondition,omitempty" xml:"DeliveryChannelCondition,omitempty"`
	// The ID of the delivery channel.
	//
	// For more information about how to obtain the ID of a delivery channel, see [DescribeDeliveryChannels](https://help.aliyun.com/document_detail/429841.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cdc-8e45ff4e06a3a8****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The name of the delivery channel.
	//
	// example:
	//
	// testoss
	DeliveryChannelName *string `json:"DeliveryChannelName,omitempty" xml:"DeliveryChannelName,omitempty"`
	// The Alibaba Cloud Resource Name (ARN) of the delivery destination. Valid values:
	//
	// 	- `acs:oss:{RegionId}:{accountId}:{bucketName}` if your delivery destination is an OSS bucket. Example: `acs:oss:cn-shanghai:100931896542****:new-bucket`.
	//
	// 	- `acs:mns:{RegionId}:{accountId}:/topics/{topicName}` if your delivery destination is an MNS topic. Example: `acs:mns:cn-shanghai:100931896542****:/topics/topic1`.
	//
	// 	- `acs:log:{RegionId}:{accountId}:project/{projectName}/logstore/{logstoreName}` if your delivery destination is a Log Service Logstore. Example: `acs:log:cn-shanghai:100931896542****:project/project1/logstore/logstore1`.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	DeliveryChannelTargetArn *string `json:"DeliveryChannelTargetArn,omitempty" xml:"DeliveryChannelTargetArn,omitempty"`
	// The time when you want Cloud Config to deliver scheduled resource snapshots every day.
	//
	// Format: `HH:mmZ`. This time is displayed in UTC.
	//
	// > When you enable the scheduled resource delivery feature, you can configure this parameter to specify a custom delivery time. If you do not configure this parameter, Cloud Config automatically delivers scheduled resource snapshots at `04:00Z` and `16:00Z` every day.
	//
	// example:
	//
	// 09:10Z
	DeliverySnapshotTime *string `json:"DeliverySnapshotTime,omitempty" xml:"DeliverySnapshotTime,omitempty"`
	// The description of the delivery channel.
	//
	// example:
	//
	// My OSS delivery.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Specifies whether to deliver resource non-compliance events. If you set this parameter to true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are considered non-compliant. Valid values:
	//
	// 	- true: Cloud Config delivers resource non-compliance events.
	//
	// 	- false (default): Cloud Config does not deliver resource non-compliance events.
	//
	// > This parameter is available only for delivery channels of the SLS or MNS type.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// false
	NonCompliantNotification *bool `json:"NonCompliantNotification,omitempty" xml:"NonCompliantNotification,omitempty"`
	// The ARN of the OSS bucket to which you want to transfer the delivery data when the size of the data exceeds the specified upper limit of the delivery channel. Format: `acs:oss:{RegionId}:{accountId}:{bucketName}`.
	//
	// If you do not configure this parameter, Cloud Config delivers only summary data.
	//
	// > This parameter is available only for delivery channels of the SLS or MNS type. The maximum storage size of delivery channels of the SLS type is 1 MB, and the maximum storage size of delivery channels of the MNS type is 64 KB.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	OversizedDataOSSTargetArn *string `json:"OversizedDataOSSTargetArn,omitempty" xml:"OversizedDataOSSTargetArn,omitempty"`
	// Specifies whether to enable the delivery channel. Valid values:
	//
	// 	- 0: Cloud Config disables the delivery channel. Cloud Config retains the most recent delivery configuration and stops resource data delivery.
	//
	// 	- 1 (default): Cloud Config enables the delivery channel.
	//
	// example:
	//
	// 0
	Status *int64 `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s UpdateConfigDeliveryChannelRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigDeliveryChannelRequest) GoString() string {
	return s.String()
}

func (s *UpdateConfigDeliveryChannelRequest) SetClientToken(v string) *UpdateConfigDeliveryChannelRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetCompliantSnapshot(v bool) *UpdateConfigDeliveryChannelRequest {
	s.CompliantSnapshot = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetConfigurationItemChangeNotification(v bool) *UpdateConfigDeliveryChannelRequest {
	s.ConfigurationItemChangeNotification = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetConfigurationSnapshot(v bool) *UpdateConfigDeliveryChannelRequest {
	s.ConfigurationSnapshot = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetDeliveryChannelCondition(v string) *UpdateConfigDeliveryChannelRequest {
	s.DeliveryChannelCondition = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetDeliveryChannelId(v string) *UpdateConfigDeliveryChannelRequest {
	s.DeliveryChannelId = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetDeliveryChannelName(v string) *UpdateConfigDeliveryChannelRequest {
	s.DeliveryChannelName = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetDeliveryChannelTargetArn(v string) *UpdateConfigDeliveryChannelRequest {
	s.DeliveryChannelTargetArn = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetDeliverySnapshotTime(v string) *UpdateConfigDeliveryChannelRequest {
	s.DeliverySnapshotTime = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetDescription(v string) *UpdateConfigDeliveryChannelRequest {
	s.Description = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetNonCompliantNotification(v bool) *UpdateConfigDeliveryChannelRequest {
	s.NonCompliantNotification = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetOversizedDataOSSTargetArn(v string) *UpdateConfigDeliveryChannelRequest {
	s.OversizedDataOSSTargetArn = &v
	return s
}

func (s *UpdateConfigDeliveryChannelRequest) SetStatus(v int64) *UpdateConfigDeliveryChannelRequest {
	s.Status = &v
	return s
}

type UpdateConfigDeliveryChannelResponseBody struct {
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-8e45ff4e06a3a8****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// A7A0FFF8-0B44-40C6-8BBF-3A185EFDERTHG
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateConfigDeliveryChannelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigDeliveryChannelResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateConfigDeliveryChannelResponseBody) SetDeliveryChannelId(v string) *UpdateConfigDeliveryChannelResponseBody {
	s.DeliveryChannelId = &v
	return s
}

func (s *UpdateConfigDeliveryChannelResponseBody) SetRequestId(v string) *UpdateConfigDeliveryChannelResponseBody {
	s.RequestId = &v
	return s
}

type UpdateConfigDeliveryChannelResponse struct {
	Headers    map[string]*string                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateConfigDeliveryChannelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateConfigDeliveryChannelResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigDeliveryChannelResponse) GoString() string {
	return s.String()
}

func (s *UpdateConfigDeliveryChannelResponse) SetHeaders(v map[string]*string) *UpdateConfigDeliveryChannelResponse {
	s.Headers = v
	return s
}

func (s *UpdateConfigDeliveryChannelResponse) SetStatusCode(v int32) *UpdateConfigDeliveryChannelResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateConfigDeliveryChannelResponse) SetBody(v *UpdateConfigDeliveryChannelResponseBody) *UpdateConfigDeliveryChannelResponse {
	s.Body = v
	return s
}

type UpdateConfigRuleRequest struct {
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the rule.
	//
	// For more information about how to query the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-a260626622af0005****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule.
	//
	// For more information about how to query the name of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// example:
	//
	// The name of the rule.
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// >  This parameter applies only to custom rules.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	ConfigRuleTriggerTypes *string `json:"ConfigRuleTriggerTypes,omitempty" xml:"ConfigRuleTriggerTypes,omitempty"`
	// The description of the rule. You can enter up to 500 characters.
	//
	// example:
	//
	// The description of the rule.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The IDs of the regions excluded from the compliance evaluations performed by the rule. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// The IDs of the resource groups excluded from the compliance evaluations performed by the rule. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The IDs of the resources excluded from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// lb-t4nbowvtbkss7t326****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// The scope of the tag that is excluded.
	ExcludeTagsScope []*UpdateConfigRuleRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// Optional. The extended content of the resource. This parameter can be used together with the MaximumExecutionFrequency parameter when the MaximumExecutionFrequency parameter is set to TwentyFour_Hours to specify the trigger time.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// {"fixedHour":"12"}
	ExtendContent *string `json:"ExtendContent,omitempty" xml:"ExtendContent,omitempty"`
	// The input parameters of the rule.
	//
	// example:
	//
	// {"tag1Key":"ECS","tag1Value":"test"}
	InputParameters map[string]interface{} `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
	// The interval at which the rule is triggered. Valid values:
	//
	// 	- One_Hour
	//
	// 	- Three_Hours
	//
	// 	- Six_Hours
	//
	// 	- Twelve_Hours
	//
	// 	- TwentyFour_Hours (default)
	//
	// >  This parameter is required if the `ConfigRuleTriggerTypes` parameter is set to `ScheduledNotification`.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The IDs of the regions to which the rule applies. Separate multiple region IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The IDs of the resource groups to which the rule applies. Separate multiple resource group IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources to which the rule applies. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// if can be null:
	// true
	ResourceNameScope *string `json:"ResourceNameScope,omitempty" xml:"ResourceNameScope,omitempty"`
	// The type of the resource to be evaluated by the rule. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypesScope []*string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty" type:"Repeated"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 3
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	Tag []*UpdateConfigRuleRequestTag `json:"Tag,omitempty" xml:"Tag,omitempty" type:"Repeated"`
	// Deprecated
	//
	// The logical relationship among the tag keys if you specify multiple tag keys for the `TagKeyScope` parameter. For example, if you set the `TagKeyScope` parameter to `ECS,OSS` and the TagKeyLogicScope parameter to `AND`, the rule applies to resources with both the `ECS` and `OSS` tag keys. Valid values:
	//
	// 	- AND
	//
	// 	- OR
	//
	// example:
	//
	// AND
	TagKeyLogicScope *string `json:"TagKeyLogicScope,omitempty" xml:"TagKeyLogicScope,omitempty"`
	// Deprecated
	//
	// The tag key used to filter resources. The rule applies only to the resources with the specified tag key.
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// Deprecated
	//
	// The tag value used to filter resources. The rule applies only to the resources that use the specified tag value.
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The tag scope.
	TagsScope []*UpdateConfigRuleRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s UpdateConfigRuleRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigRuleRequest) GoString() string {
	return s.String()
}

func (s *UpdateConfigRuleRequest) SetClientToken(v string) *UpdateConfigRuleRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetConfigRuleId(v string) *UpdateConfigRuleRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetConfigRuleName(v string) *UpdateConfigRuleRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetConfigRuleTriggerTypes(v string) *UpdateConfigRuleRequest {
	s.ConfigRuleTriggerTypes = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetDescription(v string) *UpdateConfigRuleRequest {
	s.Description = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetExcludeRegionIdsScope(v string) *UpdateConfigRuleRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetExcludeResourceGroupIdsScope(v string) *UpdateConfigRuleRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetExcludeResourceIdsScope(v string) *UpdateConfigRuleRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetExcludeTagsScope(v []*UpdateConfigRuleRequestExcludeTagsScope) *UpdateConfigRuleRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *UpdateConfigRuleRequest) SetExtendContent(v string) *UpdateConfigRuleRequest {
	s.ExtendContent = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetInputParameters(v map[string]interface{}) *UpdateConfigRuleRequest {
	s.InputParameters = v
	return s
}

func (s *UpdateConfigRuleRequest) SetMaximumExecutionFrequency(v string) *UpdateConfigRuleRequest {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetRegionIdsScope(v string) *UpdateConfigRuleRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetResourceGroupIdsScope(v string) *UpdateConfigRuleRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetResourceIdsScope(v string) *UpdateConfigRuleRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetResourceNameScope(v string) *UpdateConfigRuleRequest {
	s.ResourceNameScope = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetResourceTypesScope(v []*string) *UpdateConfigRuleRequest {
	s.ResourceTypesScope = v
	return s
}

func (s *UpdateConfigRuleRequest) SetRiskLevel(v int32) *UpdateConfigRuleRequest {
	s.RiskLevel = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetTag(v []*UpdateConfigRuleRequestTag) *UpdateConfigRuleRequest {
	s.Tag = v
	return s
}

func (s *UpdateConfigRuleRequest) SetTagKeyLogicScope(v string) *UpdateConfigRuleRequest {
	s.TagKeyLogicScope = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetTagKeyScope(v string) *UpdateConfigRuleRequest {
	s.TagKeyScope = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetTagValueScope(v string) *UpdateConfigRuleRequest {
	s.TagValueScope = &v
	return s
}

func (s *UpdateConfigRuleRequest) SetTagsScope(v []*UpdateConfigRuleRequestTagsScope) *UpdateConfigRuleRequest {
	s.TagsScope = v
	return s
}

type UpdateConfigRuleRequestExcludeTagsScope struct {
	// The key of the tag.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The value of the tag.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateConfigRuleRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigRuleRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateConfigRuleRequestExcludeTagsScope) SetTagKey(v string) *UpdateConfigRuleRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateConfigRuleRequestExcludeTagsScope) SetTagValue(v string) *UpdateConfigRuleRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type UpdateConfigRuleRequestTag struct {
	// The key of tag N to add to the key pair. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.
	//
	// example:
	//
	// key-1
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The value of tag N. Valid values of N: **1 to 20**. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag value cannot start with `aliyun` and `acs:`.
	//
	// example:
	//
	// value-1
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s UpdateConfigRuleRequestTag) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigRuleRequestTag) GoString() string {
	return s.String()
}

func (s *UpdateConfigRuleRequestTag) SetKey(v string) *UpdateConfigRuleRequestTag {
	s.Key = &v
	return s
}

func (s *UpdateConfigRuleRequestTag) SetValue(v string) *UpdateConfigRuleRequestTag {
	s.Value = &v
	return s
}

type UpdateConfigRuleRequestTagsScope struct {
	// The key of the tag.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The value of the tag.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateConfigRuleRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigRuleRequestTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateConfigRuleRequestTagsScope) SetTagKey(v string) *UpdateConfigRuleRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateConfigRuleRequestTagsScope) SetTagValue(v string) *UpdateConfigRuleRequestTagsScope {
	s.TagValue = &v
	return s
}

type UpdateConfigRuleShrinkRequest struct {
	// The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.``
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The ID of the rule.
	//
	// For more information about how to query the ID of a rule, see [ListConfigRules](https://help.aliyun.com/document_detail/169607.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cr-a260626622af0005****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The name of the rule.
	//
	// For more information about how to query the name of a rule, see [ListAggregateConfigRules](https://help.aliyun.com/document_detail/264148.html).
	//
	// example:
	//
	// The name of the rule.
	ConfigRuleName *string `json:"ConfigRuleName,omitempty" xml:"ConfigRuleName,omitempty"`
	// The trigger type of the rule. Valid values:
	//
	// 	- ConfigurationItemChangeNotification: The rule is triggered by configuration changes.
	//
	// 	- ScheduledNotification: The rule is periodically triggered.
	//
	// >  This parameter applies only to custom rules.
	//
	// example:
	//
	// ConfigurationItemChangeNotification
	ConfigRuleTriggerTypes *string `json:"ConfigRuleTriggerTypes,omitempty" xml:"ConfigRuleTriggerTypes,omitempty"`
	// The description of the rule. You can enter up to 500 characters.
	//
	// example:
	//
	// The description of the rule.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The IDs of the regions excluded from the compliance evaluations performed by the rule. Separate multiple region IDs with commas (,).
	//
	// example:
	//
	// cn-shanghai
	ExcludeRegionIdsScope *string `json:"ExcludeRegionIdsScope,omitempty" xml:"ExcludeRegionIdsScope,omitempty"`
	// The IDs of the resource groups excluded from the compliance evaluations performed by the rule. Separate multiple resource group IDs with commas (,).
	//
	// example:
	//
	// rg-bnczc6r7rml****
	ExcludeResourceGroupIdsScope *string `json:"ExcludeResourceGroupIdsScope,omitempty" xml:"ExcludeResourceGroupIdsScope,omitempty"`
	// The IDs of the resources excluded from the compliance evaluations performed by the rule. Separate multiple resource IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// lb-t4nbowvtbkss7t326****
	ExcludeResourceIdsScope *string `json:"ExcludeResourceIdsScope,omitempty" xml:"ExcludeResourceIdsScope,omitempty"`
	// The scope of the tag that is excluded.
	ExcludeTagsScope []*UpdateConfigRuleShrinkRequestExcludeTagsScope `json:"ExcludeTagsScope,omitempty" xml:"ExcludeTagsScope,omitempty" type:"Repeated"`
	// Optional. The extended content of the resource. This parameter can be used together with the MaximumExecutionFrequency parameter when the MaximumExecutionFrequency parameter is set to TwentyFour_Hours to specify the trigger time.
	//
	// if can be null:
	// true
	//
	// example:
	//
	// {"fixedHour":"12"}
	ExtendContent *string `json:"ExtendContent,omitempty" xml:"ExtendContent,omitempty"`
	// The input parameters of the rule.
	//
	// example:
	//
	// {"tag1Key":"ECS","tag1Value":"test"}
	InputParametersShrink *string `json:"InputParameters,omitempty" xml:"InputParameters,omitempty"`
	// The interval at which the rule is triggered. Valid values:
	//
	// 	- One_Hour
	//
	// 	- Three_Hours
	//
	// 	- Six_Hours
	//
	// 	- Twelve_Hours
	//
	// 	- TwentyFour_Hours (default)
	//
	// >  This parameter is required if the `ConfigRuleTriggerTypes` parameter is set to `ScheduledNotification`.
	//
	// example:
	//
	// One_Hour
	MaximumExecutionFrequency *string `json:"MaximumExecutionFrequency,omitempty" xml:"MaximumExecutionFrequency,omitempty"`
	// The IDs of the regions to which the rule applies. Separate multiple region IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// cn-hangzhou
	RegionIdsScope *string `json:"RegionIdsScope,omitempty" xml:"RegionIdsScope,omitempty"`
	// The IDs of the resource groups to which the rule applies. Separate multiple resource group IDs with commas (,).
	//
	// >  This parameter applies only to a managed rule.
	//
	// example:
	//
	// rg-aekzc7r7rhx****
	ResourceGroupIdsScope *string `json:"ResourceGroupIdsScope,omitempty" xml:"ResourceGroupIdsScope,omitempty"`
	// The IDs of the resources to which the rule applies. Separate multiple resource IDs with commas (,).
	//
	// example:
	//
	// lb-5cmbowstbkss9ta03****
	ResourceIdsScope *string `json:"ResourceIdsScope,omitempty" xml:"ResourceIdsScope,omitempty"`
	// if can be null:
	// true
	ResourceNameScope *string `json:"ResourceNameScope,omitempty" xml:"ResourceNameScope,omitempty"`
	// The type of the resource to be evaluated by the rule. Separate multiple resource types with commas (,).
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypesScopeShrink *string `json:"ResourceTypesScope,omitempty" xml:"ResourceTypesScope,omitempty"`
	// The risk level of the resources that do not comply with the rule. Valid values:
	//
	// 	- 1: high
	//
	// 	- 2: medium
	//
	// 	- 3: low
	//
	// example:
	//
	// 3
	RiskLevel *int32 `json:"RiskLevel,omitempty" xml:"RiskLevel,omitempty"`
	// The tags of the resource.
	//
	// You can add up to 20 tags to a resource.
	TagShrink *string `json:"Tag,omitempty" xml:"Tag,omitempty"`
	// Deprecated
	//
	// The logical relationship among the tag keys if you specify multiple tag keys for the `TagKeyScope` parameter. For example, if you set the `TagKeyScope` parameter to `ECS,OSS` and the TagKeyLogicScope parameter to `AND`, the rule applies to resources with both the `ECS` and `OSS` tag keys. Valid values:
	//
	// 	- AND
	//
	// 	- OR
	//
	// example:
	//
	// AND
	TagKeyLogicScope *string `json:"TagKeyLogicScope,omitempty" xml:"TagKeyLogicScope,omitempty"`
	// Deprecated
	//
	// The tag key used to filter resources. The rule applies only to the resources with the specified tag key.
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// ECS
	TagKeyScope *string `json:"TagKeyScope,omitempty" xml:"TagKeyScope,omitempty"`
	// Deprecated
	//
	// The tag value used to filter resources. The rule applies only to the resources that use the specified tag value.
	//
	// >  This parameter applies only to a managed rule. You must configure the `TagKeyScope` and `TagValueScope` parameters at the same time.
	//
	// example:
	//
	// test
	TagValueScope *string `json:"TagValueScope,omitempty" xml:"TagValueScope,omitempty"`
	// The tag scope.
	TagsScope []*UpdateConfigRuleShrinkRequestTagsScope `json:"TagsScope,omitempty" xml:"TagsScope,omitempty" type:"Repeated"`
}

func (s UpdateConfigRuleShrinkRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigRuleShrinkRequest) GoString() string {
	return s.String()
}

func (s *UpdateConfigRuleShrinkRequest) SetClientToken(v string) *UpdateConfigRuleShrinkRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetConfigRuleId(v string) *UpdateConfigRuleShrinkRequest {
	s.ConfigRuleId = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetConfigRuleName(v string) *UpdateConfigRuleShrinkRequest {
	s.ConfigRuleName = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetConfigRuleTriggerTypes(v string) *UpdateConfigRuleShrinkRequest {
	s.ConfigRuleTriggerTypes = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetDescription(v string) *UpdateConfigRuleShrinkRequest {
	s.Description = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetExcludeRegionIdsScope(v string) *UpdateConfigRuleShrinkRequest {
	s.ExcludeRegionIdsScope = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetExcludeResourceGroupIdsScope(v string) *UpdateConfigRuleShrinkRequest {
	s.ExcludeResourceGroupIdsScope = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetExcludeResourceIdsScope(v string) *UpdateConfigRuleShrinkRequest {
	s.ExcludeResourceIdsScope = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetExcludeTagsScope(v []*UpdateConfigRuleShrinkRequestExcludeTagsScope) *UpdateConfigRuleShrinkRequest {
	s.ExcludeTagsScope = v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetExtendContent(v string) *UpdateConfigRuleShrinkRequest {
	s.ExtendContent = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetInputParametersShrink(v string) *UpdateConfigRuleShrinkRequest {
	s.InputParametersShrink = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetMaximumExecutionFrequency(v string) *UpdateConfigRuleShrinkRequest {
	s.MaximumExecutionFrequency = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetRegionIdsScope(v string) *UpdateConfigRuleShrinkRequest {
	s.RegionIdsScope = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetResourceGroupIdsScope(v string) *UpdateConfigRuleShrinkRequest {
	s.ResourceGroupIdsScope = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetResourceIdsScope(v string) *UpdateConfigRuleShrinkRequest {
	s.ResourceIdsScope = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetResourceNameScope(v string) *UpdateConfigRuleShrinkRequest {
	s.ResourceNameScope = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetResourceTypesScopeShrink(v string) *UpdateConfigRuleShrinkRequest {
	s.ResourceTypesScopeShrink = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetRiskLevel(v int32) *UpdateConfigRuleShrinkRequest {
	s.RiskLevel = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetTagShrink(v string) *UpdateConfigRuleShrinkRequest {
	s.TagShrink = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetTagKeyLogicScope(v string) *UpdateConfigRuleShrinkRequest {
	s.TagKeyLogicScope = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetTagKeyScope(v string) *UpdateConfigRuleShrinkRequest {
	s.TagKeyScope = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetTagValueScope(v string) *UpdateConfigRuleShrinkRequest {
	s.TagValueScope = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequest) SetTagsScope(v []*UpdateConfigRuleShrinkRequestTagsScope) *UpdateConfigRuleShrinkRequest {
	s.TagsScope = v
	return s
}

type UpdateConfigRuleShrinkRequestExcludeTagsScope struct {
	// The key of the tag.
	//
	// example:
	//
	// key-2
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The value of the tag.
	//
	// example:
	//
	// value-2
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateConfigRuleShrinkRequestExcludeTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigRuleShrinkRequestExcludeTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateConfigRuleShrinkRequestExcludeTagsScope) SetTagKey(v string) *UpdateConfigRuleShrinkRequestExcludeTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequestExcludeTagsScope) SetTagValue(v string) *UpdateConfigRuleShrinkRequestExcludeTagsScope {
	s.TagValue = &v
	return s
}

type UpdateConfigRuleShrinkRequestTagsScope struct {
	// The key of the tag.
	//
	// example:
	//
	// key-1
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The value of the tag.
	//
	// example:
	//
	// value-1
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s UpdateConfigRuleShrinkRequestTagsScope) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigRuleShrinkRequestTagsScope) GoString() string {
	return s.String()
}

func (s *UpdateConfigRuleShrinkRequestTagsScope) SetTagKey(v string) *UpdateConfigRuleShrinkRequestTagsScope {
	s.TagKey = &v
	return s
}

func (s *UpdateConfigRuleShrinkRequestTagsScope) SetTagValue(v string) *UpdateConfigRuleShrinkRequestTagsScope {
	s.TagValue = &v
	return s
}

type UpdateConfigRuleResponseBody struct {
	// The ID of the rule.
	//
	// example:
	//
	// cr-a260626622af0005****
	ConfigRuleId *string `json:"ConfigRuleId,omitempty" xml:"ConfigRuleId,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// 6EC7AED1-172F-42AE-9C12-295BC2ADB751
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateConfigRuleResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigRuleResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateConfigRuleResponseBody) SetConfigRuleId(v string) *UpdateConfigRuleResponseBody {
	s.ConfigRuleId = &v
	return s
}

func (s *UpdateConfigRuleResponseBody) SetRequestId(v string) *UpdateConfigRuleResponseBody {
	s.RequestId = &v
	return s
}

type UpdateConfigRuleResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateConfigRuleResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateConfigRuleResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigRuleResponse) GoString() string {
	return s.String()
}

func (s *UpdateConfigRuleResponse) SetHeaders(v map[string]*string) *UpdateConfigRuleResponse {
	s.Headers = v
	return s
}

func (s *UpdateConfigRuleResponse) SetStatusCode(v int32) *UpdateConfigRuleResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateConfigRuleResponse) SetBody(v *UpdateConfigRuleResponseBody) *UpdateConfigRuleResponse {
	s.Body = v
	return s
}

type UpdateConfigurationRecorderRequest struct {
	// The resource types. Separate multiple resource types with commas (,).
	//
	// This parameter is required.
	//
	// example:
	//
	// ACS::ECS::Instance
	ResourceTypes *string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty"`
}

func (s UpdateConfigurationRecorderRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigurationRecorderRequest) GoString() string {
	return s.String()
}

func (s *UpdateConfigurationRecorderRequest) SetResourceTypes(v string) *UpdateConfigurationRecorderRequest {
	s.ResourceTypes = &v
	return s
}

type UpdateConfigurationRecorderResponseBody struct {
	// The details of the configuration recorder.
	ConfigurationRecorder *UpdateConfigurationRecorderResponseBodyConfigurationRecorder `json:"ConfigurationRecorder,omitempty" xml:"ConfigurationRecorder,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// 2A1D5095-D1F9-56B6-A712-EA495608E79A
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateConfigurationRecorderResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigurationRecorderResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateConfigurationRecorderResponseBody) SetConfigurationRecorder(v *UpdateConfigurationRecorderResponseBodyConfigurationRecorder) *UpdateConfigurationRecorderResponseBody {
	s.ConfigurationRecorder = v
	return s
}

func (s *UpdateConfigurationRecorderResponseBody) SetRequestId(v string) *UpdateConfigurationRecorderResponseBody {
	s.RequestId = &v
	return s
}

type UpdateConfigurationRecorderResponseBodyConfigurationRecorder struct {
	// The status of the configuration recorder. Valid values:
	//
	// 	- REGISTRABLE: The configuration recorder has not been registered.
	//
	// 	- BUILDING: The configuration recorder is being deployed.
	//
	// 	- REGISTERED: The configuration recorder has been registered.
	//
	// 	- REBUILDING: The configuration recorder is being redeployed.
	//
	// example:
	//
	// REGISTERED
	ConfigurationRecorderStatus *string `json:"ConfigurationRecorderStatus,omitempty" xml:"ConfigurationRecorderStatus,omitempty"`
	// The types of the resources that are monitored by Cloud Config.
	ResourceTypes []*string `json:"ResourceTypes,omitempty" xml:"ResourceTypes,omitempty" type:"Repeated"`
}

func (s UpdateConfigurationRecorderResponseBodyConfigurationRecorder) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigurationRecorderResponseBodyConfigurationRecorder) GoString() string {
	return s.String()
}

func (s *UpdateConfigurationRecorderResponseBodyConfigurationRecorder) SetConfigurationRecorderStatus(v string) *UpdateConfigurationRecorderResponseBodyConfigurationRecorder {
	s.ConfigurationRecorderStatus = &v
	return s
}

func (s *UpdateConfigurationRecorderResponseBodyConfigurationRecorder) SetResourceTypes(v []*string) *UpdateConfigurationRecorderResponseBodyConfigurationRecorder {
	s.ResourceTypes = v
	return s
}

type UpdateConfigurationRecorderResponse struct {
	Headers    map[string]*string                       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateConfigurationRecorderResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateConfigurationRecorderResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateConfigurationRecorderResponse) GoString() string {
	return s.String()
}

func (s *UpdateConfigurationRecorderResponse) SetHeaders(v map[string]*string) *UpdateConfigurationRecorderResponse {
	s.Headers = v
	return s
}

func (s *UpdateConfigurationRecorderResponse) SetStatusCode(v int32) *UpdateConfigurationRecorderResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateConfigurationRecorderResponse) SetBody(v *UpdateConfigurationRecorderResponseBody) *UpdateConfigurationRecorderResponse {
	s.Body = v
	return s
}

type UpdateDeliveryChannelRequest struct {
	// The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests.
	//
	// The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [Ensure idempotence](https://help.aliyun.com/document_detail/25693.html)
	//
	// example:
	//
	// 1594295238-f9361358-5843-4294-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// Specifies whether to deliver resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	//
	// 	- true
	//
	// 	- false (default)
	//
	// > This parameter is available for delivery channels of the OSS, Log Service, and MNS types.
	//
	// example:
	//
	// false
	ConfigurationItemChangeNotification *bool `json:"ConfigurationItemChangeNotification,omitempty" xml:"ConfigurationItemChangeNotification,omitempty"`
	// Specifies whether to deliver scheduled resource snapshots to the OSS bucket. If the value of this parameter is true, the scheduled resource snapshots are delivered to the specified OSS bucket at 00:00:00 and 12:00:00 on a daily basis. Valid values:
	//
	// 	- true
	//
	// 	- false (default)
	//
	// > This parameter is applicable only to delivery channels of the OSS type.
	//
	// example:
	//
	// false
	ConfigurationSnapshot *bool `json:"ConfigurationSnapshot,omitempty" xml:"ConfigurationSnapshot,omitempty"`
	// The ARN of the role that you want to assign to the delivery channel. Specify the ARN in the following format: `acs:ram::{accountId}:role/aliyunserviceroleforconfig`.
	//
	// example:
	//
	// acs:ram::100931896542****:role/aliyunserviceroleforconfig
	DeliveryChannelAssumeRoleArn *string `json:"DeliveryChannelAssumeRoleArn,omitempty" xml:"DeliveryChannelAssumeRoleArn,omitempty"`
	// The rule that is attached to the delivery channel. This parameter is available only for delivery channels of the MNS type.
	//
	// This parameter specifies the lowest risk level and the resource types for the events to which you want to subscribe.
	//
	// 	- The setting of the lowest risk level for the events to which you want to subscribe is in the following format: `{"filterType":"RuleRiskLevel","value":"1","multiple":false}`.
	//
	//     The `value` field specifies the lowest risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level. The value 2 indicates the medium risk level. The value 3 indicates the low risk level.
	//
	// 	- The setting of the resource types of the events to which you want to subscribe is in the following format: `{"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}`.
	//
	//     The `values` field specifies the resource types of the events to which you want to subscribe. The value of the field is a JSON array. Examples:
	//
	// `[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]`
	//
	// example:
	//
	// [{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}]
	DeliveryChannelCondition *string `json:"DeliveryChannelCondition,omitempty" xml:"DeliveryChannelCondition,omitempty"`
	// The ID of the delivery channel.
	//
	// For more information about how to obtain the ID of the delivery channel, see [DescribeDeliveryChannels](https://help.aliyun.com/document_detail/174466.html).
	//
	// This parameter is required.
	//
	// example:
	//
	// cdc-8e45ff4e06a3a8****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The name of the delivery channel.
	//
	// > If you do not configure this parameter, this parameter is left empty.
	//
	// example:
	//
	// testoss
	DeliveryChannelName *string `json:"DeliveryChannelName,omitempty" xml:"DeliveryChannelName,omitempty"`
	// The ARN of the delivery destination. Valid values:
	//
	// 	- `acs:oss:{RegionId}:{accountId}:{bucketName}` if your delivery destination is an OSS bucket. Example: `acs:oss:cn-shanghai:100931896542****:new-bucket`.
	//
	// 	- `acs:mns:{RegionId}:{accountId}:/topics/{topicName}` if your delivery destination is an MNS topic. Example: `acs:mns:cn-shanghai:100931896542****:/topics/topic1`.
	//
	// 	- `acs:log:{RegionId}:{accountId}:project/{projectName}/logstore/{logstoreName}` if your delivery destination is a Log Service Logstore. Example: `acs:log:cn-shanghai:100931896542****:project/project1/logstore/logstore1`.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	DeliveryChannelTargetArn *string `json:"DeliveryChannelTargetArn,omitempty" xml:"DeliveryChannelTargetArn,omitempty"`
	// The description of the delivery channel.
	//
	// example:
	//
	// My OSS delivery.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Specifies whether to deliver resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
	//
	// 	- true
	//
	// 	- false (default)
	//
	// > This parameter is available only for delivery channels of the Log Service or MNS type.
	//
	// example:
	//
	// false
	NonCompliantNotification *bool `json:"NonCompliantNotification,omitempty" xml:"NonCompliantNotification,omitempty"`
	// The ARN of the OSS bucket to which you want to transfer the delivery data when the size of the data exceeds the specified upper limit of the delivery channel. Format: `acs:oss:{RegionId}:{accountId}:{bucketName}`.
	//
	// If you do not configure this parameter, Cloud Config delivers only summary data.
	//
	// > This parameter is available only for delivery channels of the Log Service or MNS type. The maximum storage size of delivery channels of the Log Service type is 1 MB, and the maximum storage size of delivery channels of the MNS type is 64 KB.
	//
	// example:
	//
	// acs:oss:cn-shanghai:100931896542****:new-bucket
	OversizedDataOSSTargetArn *string `json:"OversizedDataOSSTargetArn,omitempty" xml:"OversizedDataOSSTargetArn,omitempty"`
	// Specifies whether to enable the delivery channel. Valid values:
	//
	// 	- 0: The delivery channel is disabled for Cloud Config. Cloud Config retains the most recent delivery configuration and stops resource data delivery.
	//
	// 	- 1 (default): The delivery channel is enabled for Cloud Config.
	//
	// example:
	//
	// 0
	Status *int64 `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s UpdateDeliveryChannelRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateDeliveryChannelRequest) GoString() string {
	return s.String()
}

func (s *UpdateDeliveryChannelRequest) SetClientToken(v string) *UpdateDeliveryChannelRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetConfigurationItemChangeNotification(v bool) *UpdateDeliveryChannelRequest {
	s.ConfigurationItemChangeNotification = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetConfigurationSnapshot(v bool) *UpdateDeliveryChannelRequest {
	s.ConfigurationSnapshot = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetDeliveryChannelAssumeRoleArn(v string) *UpdateDeliveryChannelRequest {
	s.DeliveryChannelAssumeRoleArn = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetDeliveryChannelCondition(v string) *UpdateDeliveryChannelRequest {
	s.DeliveryChannelCondition = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetDeliveryChannelId(v string) *UpdateDeliveryChannelRequest {
	s.DeliveryChannelId = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetDeliveryChannelName(v string) *UpdateDeliveryChannelRequest {
	s.DeliveryChannelName = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetDeliveryChannelTargetArn(v string) *UpdateDeliveryChannelRequest {
	s.DeliveryChannelTargetArn = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetDescription(v string) *UpdateDeliveryChannelRequest {
	s.Description = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetNonCompliantNotification(v bool) *UpdateDeliveryChannelRequest {
	s.NonCompliantNotification = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetOversizedDataOSSTargetArn(v string) *UpdateDeliveryChannelRequest {
	s.OversizedDataOSSTargetArn = &v
	return s
}

func (s *UpdateDeliveryChannelRequest) SetStatus(v int64) *UpdateDeliveryChannelRequest {
	s.Status = &v
	return s
}

type UpdateDeliveryChannelResponseBody struct {
	// The ID of the delivery channel.
	//
	// example:
	//
	// cdc-8e45ff4e06a3a8****
	DeliveryChannelId *string `json:"DeliveryChannelId,omitempty" xml:"DeliveryChannelId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// A7A0FFF8-0B44-40C6-8BBF-3A185EFDERTHG
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateDeliveryChannelResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateDeliveryChannelResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateDeliveryChannelResponseBody) SetDeliveryChannelId(v string) *UpdateDeliveryChannelResponseBody {
	s.DeliveryChannelId = &v
	return s
}

func (s *UpdateDeliveryChannelResponseBody) SetRequestId(v string) *UpdateDeliveryChannelResponseBody {
	s.RequestId = &v
	return s
}

type UpdateDeliveryChannelResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateDeliveryChannelResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateDeliveryChannelResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateDeliveryChannelResponse) GoString() string {
	return s.String()
}

func (s *UpdateDeliveryChannelResponse) SetHeaders(v map[string]*string) *UpdateDeliveryChannelResponse {
	s.Headers = v
	return s
}

func (s *UpdateDeliveryChannelResponse) SetStatusCode(v int32) *UpdateDeliveryChannelResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateDeliveryChannelResponse) SetBody(v *UpdateDeliveryChannelResponseBody) *UpdateDeliveryChannelResponse {
	s.Body = v
	return s
}

type UpdateIntegratedServiceStatusRequest struct {
	// The type of the event that is integrated across accounts. Valid values:
	//
	// 	- NonCompliantNotification: non-compliance event
	//
	// example:
	//
	// NonCompliantNotification
	AggregatorDeliveryDataType *string `json:"AggregatorDeliveryDataType,omitempty" xml:"AggregatorDeliveryDataType,omitempty"`
	// The types of the integrated events. Separate multiple event types with commas (,). Valid values:
	//
	// 	- ConfigurationItemChangeNotification: resource change event
	//
	// 	- NonCompliantNotification: non-compliance event
	//
	// example:
	//
	// NonCompliantNotification
	IntegratedTypes *string `json:"IntegratedTypes,omitempty" xml:"IntegratedTypes,omitempty"`
	// The identity of the cloud service that is integrated with Cloud Config. Valid values:
	//
	// 	- eventbridge: EventBridge
	//
	// 	- cms: CloudMonitor
	//
	// 	- bpstudio: Cloud Architect Design Tools
	//
	// This parameter is required.
	//
	// example:
	//
	// cadt
	ServiceCode *string `json:"ServiceCode,omitempty" xml:"ServiceCode,omitempty"`
	// Specifies whether you want the product to be integrated. Valid values:
	//
	// 	- true
	//
	// 	- false
	//
	// This parameter is required.
	//
	// example:
	//
	// true
	Status *bool `json:"Status,omitempty" xml:"Status,omitempty"`
}

func (s UpdateIntegratedServiceStatusRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateIntegratedServiceStatusRequest) GoString() string {
	return s.String()
}

func (s *UpdateIntegratedServiceStatusRequest) SetAggregatorDeliveryDataType(v string) *UpdateIntegratedServiceStatusRequest {
	s.AggregatorDeliveryDataType = &v
	return s
}

func (s *UpdateIntegratedServiceStatusRequest) SetIntegratedTypes(v string) *UpdateIntegratedServiceStatusRequest {
	s.IntegratedTypes = &v
	return s
}

func (s *UpdateIntegratedServiceStatusRequest) SetServiceCode(v string) *UpdateIntegratedServiceStatusRequest {
	s.ServiceCode = &v
	return s
}

func (s *UpdateIntegratedServiceStatusRequest) SetStatus(v bool) *UpdateIntegratedServiceStatusRequest {
	s.Status = &v
	return s
}

type UpdateIntegratedServiceStatusResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// 02EB7638-B029-5ABB-93F5-A2ABEEAC282D
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateIntegratedServiceStatusResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateIntegratedServiceStatusResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateIntegratedServiceStatusResponseBody) SetRequestId(v string) *UpdateIntegratedServiceStatusResponseBody {
	s.RequestId = &v
	return s
}

type UpdateIntegratedServiceStatusResponse struct {
	Headers    map[string]*string                         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateIntegratedServiceStatusResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateIntegratedServiceStatusResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateIntegratedServiceStatusResponse) GoString() string {
	return s.String()
}

func (s *UpdateIntegratedServiceStatusResponse) SetHeaders(v map[string]*string) *UpdateIntegratedServiceStatusResponse {
	s.Headers = v
	return s
}

func (s *UpdateIntegratedServiceStatusResponse) SetStatusCode(v int32) *UpdateIntegratedServiceStatusResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateIntegratedServiceStatusResponse) SetBody(v *UpdateIntegratedServiceStatusResponseBody) *UpdateIntegratedServiceStatusResponse {
	s.Body = v
	return s
}

type UpdateRemediationRequest struct {
	// The client token that is used to ensure the idempotency of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.
	//
	// example:
	//
	// 2014295338-e7361358-5822-4276-8d30-b5183fac****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The execution mode of the remediation. Valid values:
	//
	// 	- NON_EXECUTION: The remediation is not executed.
	//
	// 	- AUTO_EXECUTION: The remediation is automatically executed.
	//
	// 	- MANUAL_EXECUTION: The remediation is manually executed.
	//
	// 	- NOT_CONFIG: The execution mode is not specified.
	//
	// example:
	//
	// AUTO_EXECUTION
	InvokeType *string `json:"InvokeType,omitempty" xml:"InvokeType,omitempty"`
	// The desired parameter values of the remediation setting.
	//
	// example:
	//
	// {"properties":[{"name":"regionId","type":"STRING","value":"{regionId}","allowedValues":[]},{"name":"bucketName","type":"STRING","value":"{resourceId}","allowedValues":[],"description":"OSS Bucket Name."},{"name":"permissionName","type":"STRING","value":"private","allowedValues":["public-read-write","public-read","private"],"description":"ACL Permission Name."}]}
	Params *string `json:"Params,omitempty" xml:"Params,omitempty"`
	// The ID of the remediation setting.
	//
	// You can call the [ListRemediations](https://help.aliyun.com/document_detail/270772.html) operation to obtain the ID of the remediation setting.
	//
	// This parameter is required.
	//
	// example:
	//
	// crr-909ba2d4716700eb****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// The ID of the remediation template.
	//
	// You can call the [ListRemediationTemplates](https://help.aliyun.com/document_detail/270066.html) operation to obtain the ID of the remediation template.
	//
	// example:
	//
	// ACS-OSS-PutBucketAcl
	RemediationTemplateId *string `json:"RemediationTemplateId,omitempty" xml:"RemediationTemplateId,omitempty"`
	// The type of the remediation template. Valid values:
	//
	// 	- OOS: Operation Orchestration Service (OOS)
	//
	// 	- FC: Function Compute. You can use Function Compute to configure custom remediation settings.
	//
	// example:
	//
	// OOS
	RemediationType *string `json:"RemediationType,omitempty" xml:"RemediationType,omitempty"`
	// The source of the remediation setting. Valid values:
	//
	// 	- ALIYUN: the default remediation setting of Alibaba Cloud.
	//
	// 	- CUSTOM: a custom remediation setting.
	//
	// 	- NONE: The source is not specified.
	//
	// example:
	//
	// ALIYUN
	SourceType *string `json:"SourceType,omitempty" xml:"SourceType,omitempty"`
}

func (s UpdateRemediationRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateRemediationRequest) GoString() string {
	return s.String()
}

func (s *UpdateRemediationRequest) SetClientToken(v string) *UpdateRemediationRequest {
	s.ClientToken = &v
	return s
}

func (s *UpdateRemediationRequest) SetInvokeType(v string) *UpdateRemediationRequest {
	s.InvokeType = &v
	return s
}

func (s *UpdateRemediationRequest) SetParams(v string) *UpdateRemediationRequest {
	s.Params = &v
	return s
}

func (s *UpdateRemediationRequest) SetRemediationId(v string) *UpdateRemediationRequest {
	s.RemediationId = &v
	return s
}

func (s *UpdateRemediationRequest) SetRemediationTemplateId(v string) *UpdateRemediationRequest {
	s.RemediationTemplateId = &v
	return s
}

func (s *UpdateRemediationRequest) SetRemediationType(v string) *UpdateRemediationRequest {
	s.RemediationType = &v
	return s
}

func (s *UpdateRemediationRequest) SetSourceType(v string) *UpdateRemediationRequest {
	s.SourceType = &v
	return s
}

type UpdateRemediationResponseBody struct {
	// The ID of the remediation setting.
	//
	// example:
	//
	// crr-7c2ba2d0236700a3****
	RemediationId *string `json:"RemediationId,omitempty" xml:"RemediationId,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// C7817373-78CB-4F9A-8AFA-E7A88E9D64A2
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateRemediationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateRemediationResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateRemediationResponseBody) SetRemediationId(v string) *UpdateRemediationResponseBody {
	s.RemediationId = &v
	return s
}

func (s *UpdateRemediationResponseBody) SetRequestId(v string) *UpdateRemediationResponseBody {
	s.RequestId = &v
	return s
}

type UpdateRemediationResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateRemediationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateRemediationResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateRemediationResponse) GoString() string {
	return s.String()
}

func (s *UpdateRemediationResponse) SetHeaders(v map[string]*string) *UpdateRemediationResponse {
	s.Headers = v
	return s
}

func (s *UpdateRemediationResponse) SetStatusCode(v int32) *UpdateRemediationResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateRemediationResponse) SetBody(v *UpdateRemediationResponseBody) *UpdateRemediationResponse {
	s.Body = v
	return s
}

type Client struct {
	openapi.Client
}

func NewClient(config *openapi.Config) (*Client, error) {
	client := new(Client)
	err := client.Init(config)
	return client, err
}

func (client *Client) Init(config *openapi.Config) (_err error) {
	_err = client.Client.Init(config)
	if _err != nil {
		return _err
	}
	client.EndpointRule = tea.String("central")
	client.EndpointMap = map[string]*string{
		"cn-shanghai":    tea.String("config.cn-shanghai.aliyuncs.com"),
		"ap-southeast-1": tea.String("config.ap-southeast-1.aliyuncs.com"),
	}
	_err = client.CheckConfig(config)
	if _err != nil {
		return _err
	}
	client.Endpoint, _err = client.GetEndpoint(tea.String("config"), client.RegionId, client.EndpointRule, client.Network, client.Suffix, client.EndpointMap, client.Endpoint)
	if _err != nil {
		return _err
	}

	return nil
}

func (client *Client) GetEndpoint(productId *string, regionId *string, endpointRule *string, network *string, suffix *string, endpointMap map[string]*string, endpoint *string) (_result *string, _err error) {
	if !tea.BoolValue(util.Empty(endpoint)) {
		_result = endpoint
		return _result, _err
	}

	if !tea.BoolValue(util.IsUnset(endpointMap)) && !tea.BoolValue(util.Empty(endpointMap[tea.StringValue(regionId)])) {
		_result = endpointMap[tea.StringValue(regionId)]
		return _result, _err
	}

	_body, _err := endpointutil.GetEndpointRules(productId, regionId, endpointRule, network, suffix)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Enables one or more rules in an account group. After a rule is enabled, the rule continues to automatically evaluate resources based on the trigger mechanism.
//
// Description:
//
// Enables one or more rules in an account group. After a rule is enabled, the rule continues to automatically evaluate resources based on the trigger mechanism.
//
// @param request - ActiveAggregateConfigRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ActiveAggregateConfigRulesResponse
func (client *Client) ActiveAggregateConfigRulesWithOptions(request *ActiveAggregateConfigRulesRequest, runtime *util.RuntimeOptions) (_result *ActiveAggregateConfigRulesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ActiveAggregateConfigRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ActiveAggregateConfigRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ActiveAggregateConfigRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Enables one or more rules in an account group. After a rule is enabled, the rule continues to automatically evaluate resources based on the trigger mechanism.
//
// Description:
//
// Enables one or more rules in an account group. After a rule is enabled, the rule continues to automatically evaluate resources based on the trigger mechanism.
//
// @param request - ActiveAggregateConfigRulesRequest
//
// @return ActiveAggregateConfigRulesResponse
func (client *Client) ActiveAggregateConfigRules(request *ActiveAggregateConfigRulesRequest) (_result *ActiveAggregateConfigRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ActiveAggregateConfigRulesResponse{}
	_body, _err := client.ActiveAggregateConfigRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Enables a rule in Cloud Config. After a rule is enabled, Cloud Config automatically evaluates the compliance of a resource based on the trigger mechanism of the rule.
//
// Description:
//
// ### [](#)Prerequisites
//
// The rule is in the `INACTIVE` state.
//
// @param request - ActiveConfigRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ActiveConfigRulesResponse
func (client *Client) ActiveConfigRulesWithOptions(request *ActiveConfigRulesRequest, runtime *util.RuntimeOptions) (_result *ActiveConfigRulesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ActiveConfigRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ActiveConfigRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ActiveConfigRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Enables a rule in Cloud Config. After a rule is enabled, Cloud Config automatically evaluates the compliance of a resource based on the trigger mechanism of the rule.
//
// Description:
//
// ### [](#)Prerequisites
//
// The rule is in the `INACTIVE` state.
//
// @param request - ActiveConfigRulesRequest
//
// @return ActiveConfigRulesResponse
func (client *Client) ActiveConfigRules(request *ActiveConfigRulesRequest) (_result *ActiveConfigRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ActiveConfigRulesResponse{}
	_body, _err := client.ActiveConfigRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Adds one or more rules in an account group to a compliance package.
//
// Description:
//
// The sample request in this topic shows you how to add the `cr-6cc4626622af00e7****` rule in the `ca-75b4626622af00c3****` account group to the `cp-5bb1626622af00bd****` compliance package.
//
// @param request - AttachAggregateConfigRuleToCompliancePackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return AttachAggregateConfigRuleToCompliancePackResponse
func (client *Client) AttachAggregateConfigRuleToCompliancePackWithOptions(request *AttachAggregateConfigRuleToCompliancePackRequest, runtime *util.RuntimeOptions) (_result *AttachAggregateConfigRuleToCompliancePackResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("AttachAggregateConfigRuleToCompliancePack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &AttachAggregateConfigRuleToCompliancePackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &AttachAggregateConfigRuleToCompliancePackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Adds one or more rules in an account group to a compliance package.
//
// Description:
//
// The sample request in this topic shows you how to add the `cr-6cc4626622af00e7****` rule in the `ca-75b4626622af00c3****` account group to the `cp-5bb1626622af00bd****` compliance package.
//
// @param request - AttachAggregateConfigRuleToCompliancePackRequest
//
// @return AttachAggregateConfigRuleToCompliancePackResponse
func (client *Client) AttachAggregateConfigRuleToCompliancePack(request *AttachAggregateConfigRuleToCompliancePackRequest) (_result *AttachAggregateConfigRuleToCompliancePackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &AttachAggregateConfigRuleToCompliancePackResponse{}
	_body, _err := client.AttachAggregateConfigRuleToCompliancePackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Adds one or more rules to a compliance package.
//
// Description:
//
// This topic provides an example on how to add the `cr-6cc4626622af00e7****` rule to the `cp-5bb1626622af00bd****` compliance package.
//
// @param request - AttachConfigRuleToCompliancePackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return AttachConfigRuleToCompliancePackResponse
func (client *Client) AttachConfigRuleToCompliancePackWithOptions(request *AttachConfigRuleToCompliancePackRequest, runtime *util.RuntimeOptions) (_result *AttachConfigRuleToCompliancePackResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("AttachConfigRuleToCompliancePack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &AttachConfigRuleToCompliancePackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &AttachConfigRuleToCompliancePackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Adds one or more rules to a compliance package.
//
// Description:
//
// This topic provides an example on how to add the `cr-6cc4626622af00e7****` rule to the `cp-5bb1626622af00bd****` compliance package.
//
// @param request - AttachConfigRuleToCompliancePackRequest
//
// @return AttachConfigRuleToCompliancePackResponse
func (client *Client) AttachConfigRuleToCompliancePack(request *AttachConfigRuleToCompliancePackRequest) (_result *AttachConfigRuleToCompliancePackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &AttachConfigRuleToCompliancePackResponse{}
	_body, _err := client.AttachConfigRuleToCompliancePackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Replicates compliance packages.
//
// @param request - CopyCompliancePacksRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CopyCompliancePacksResponse
func (client *Client) CopyCompliancePacksWithOptions(request *CopyCompliancePacksRequest, runtime *util.RuntimeOptions) (_result *CopyCompliancePacksResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DesAggregatorIds)) {
		query["DesAggregatorIds"] = request.DesAggregatorIds
	}

	if !tea.BoolValue(util.IsUnset(request.SrcAggregatorId)) {
		query["SrcAggregatorId"] = request.SrcAggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.SrcCompliancePackIds)) {
		query["SrcCompliancePackIds"] = request.SrcCompliancePackIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CopyCompliancePacks"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CopyCompliancePacksResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CopyCompliancePacksResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Replicates compliance packages.
//
// @param request - CopyCompliancePacksRequest
//
// @return CopyCompliancePacksResponse
func (client *Client) CopyCompliancePacks(request *CopyCompliancePacksRequest) (_result *CopyCompliancePacksResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CopyCompliancePacksResponse{}
	_body, _err := client.CopyCompliancePacksWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Replicates rules.
//
// @param request - CopyConfigRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CopyConfigRulesResponse
func (client *Client) CopyConfigRulesWithOptions(request *CopyConfigRulesRequest, runtime *util.RuntimeOptions) (_result *CopyConfigRulesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DesAggregatorIds)) {
		query["DesAggregatorIds"] = request.DesAggregatorIds
	}

	if !tea.BoolValue(util.IsUnset(request.SrcAggregatorId)) {
		query["SrcAggregatorId"] = request.SrcAggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.SrcConfigRuleIds)) {
		query["SrcConfigRuleIds"] = request.SrcConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CopyConfigRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CopyConfigRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CopyConfigRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Replicates rules.
//
// @param request - CopyConfigRulesRequest
//
// @return CopyConfigRulesResponse
func (client *Client) CopyConfigRules(request *CopyConfigRulesRequest) (_result *CopyConfigRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CopyConfigRulesResponse{}
	_body, _err := client.CopyConfigRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a downloadable resource file for the current Alibaba Cloud account.
//
// @param request - CreateAdvancedSearchFileRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateAdvancedSearchFileResponse
func (client *Client) CreateAdvancedSearchFileWithOptions(request *CreateAdvancedSearchFileRequest, runtime *util.RuntimeOptions) (_result *CreateAdvancedSearchFileResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Sql)) {
		query["Sql"] = request.Sql
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateAdvancedSearchFile"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateAdvancedSearchFileResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateAdvancedSearchFileResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates a downloadable resource file for the current Alibaba Cloud account.
//
// @param request - CreateAdvancedSearchFileRequest
//
// @return CreateAdvancedSearchFileResponse
func (client *Client) CreateAdvancedSearchFile(request *CreateAdvancedSearchFileRequest) (_result *CreateAdvancedSearchFileResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateAdvancedSearchFileResponse{}
	_body, _err := client.CreateAdvancedSearchFileWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a downloadable resource file for an account group.
//
// Description:
//
// This topic provides an example on how to create a downloadable resource file for an account group whose ID is `ca-edd3626622af00b3****`. The resource file includes all the ECS instances in the account group.
//
// @param request - CreateAggregateAdvancedSearchFileRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateAggregateAdvancedSearchFileResponse
func (client *Client) CreateAggregateAdvancedSearchFileWithOptions(request *CreateAggregateAdvancedSearchFileRequest, runtime *util.RuntimeOptions) (_result *CreateAggregateAdvancedSearchFileResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.Sql)) {
		query["Sql"] = request.Sql
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateAggregateAdvancedSearchFile"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateAggregateAdvancedSearchFileResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateAggregateAdvancedSearchFileResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates a downloadable resource file for an account group.
//
// Description:
//
// This topic provides an example on how to create a downloadable resource file for an account group whose ID is `ca-edd3626622af00b3****`. The resource file includes all the ECS instances in the account group.
//
// @param request - CreateAggregateAdvancedSearchFileRequest
//
// @return CreateAggregateAdvancedSearchFileResponse
func (client *Client) CreateAggregateAdvancedSearchFile(request *CreateAggregateAdvancedSearchFileRequest) (_result *CreateAggregateAdvancedSearchFileResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateAggregateAdvancedSearchFileResponse{}
	_body, _err := client.CreateAggregateAdvancedSearchFileWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a compliance package for an account group.
//
// Description:
//
// This topic provides an example on how to create a compliance package for the account group `ca-f632626622af0079****` by using the compliance package template `ClassifiedProtectionPreCheck`.
//
// @param tmpReq - CreateAggregateCompliancePackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateAggregateCompliancePackResponse
func (client *Client) CreateAggregateCompliancePackWithOptions(tmpReq *CreateAggregateCompliancePackRequest, runtime *util.RuntimeOptions) (_result *CreateAggregateCompliancePackResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &CreateAggregateCompliancePackShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ConfigRules)) {
		request.ConfigRulesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ConfigRules, tea.String("ConfigRules"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackName)) {
		body["CompliancePackName"] = request.CompliancePackName
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackTemplateId)) {
		body["CompliancePackTemplateId"] = request.CompliancePackTemplateId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRulesShrink)) {
		body["ConfigRules"] = request.ConfigRulesShrink
	}

	if !tea.BoolValue(util.IsUnset(request.DefaultEnable)) {
		body["DefaultEnable"] = request.DefaultEnable
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeRegionIdsScope)) {
		body["ExcludeRegionIdsScope"] = request.ExcludeRegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceGroupIdsScope)) {
		body["ExcludeResourceGroupIdsScope"] = request.ExcludeResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceIdsScope)) {
		body["ExcludeResourceIdsScope"] = request.ExcludeResourceIdsScope
	}

	bodyFlat := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ExcludeTagsScope)) {
		bodyFlat["ExcludeTagsScope"] = request.ExcludeTagsScope
	}

	if !tea.BoolValue(util.IsUnset(request.RegionIdsScope)) {
		body["RegionIdsScope"] = request.RegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupIdsScope)) {
		body["ResourceGroupIdsScope"] = request.ResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIdsScope)) {
		body["ResourceIdsScope"] = request.ResourceIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		body["RiskLevel"] = request.RiskLevel
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyScope)) {
		body["TagKeyScope"] = request.TagKeyScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagValueScope)) {
		body["TagValueScope"] = request.TagValueScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagsScope)) {
		bodyFlat["TagsScope"] = request.TagsScope
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateContent)) {
		body["TemplateContent"] = request.TemplateContent
	}

	body = tea.ToMap(body,
		openapiutil.Query(bodyFlat))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
		Body:  openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateAggregateCompliancePack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateAggregateCompliancePackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateAggregateCompliancePackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates a compliance package for an account group.
//
// Description:
//
// This topic provides an example on how to create a compliance package for the account group `ca-f632626622af0079****` by using the compliance package template `ClassifiedProtectionPreCheck`.
//
// @param request - CreateAggregateCompliancePackRequest
//
// @return CreateAggregateCompliancePackResponse
func (client *Client) CreateAggregateCompliancePack(request *CreateAggregateCompliancePackRequest) (_result *CreateAggregateCompliancePackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateAggregateCompliancePackResponse{}
	_body, _err := client.CreateAggregateCompliancePackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a delivery channel for an account group.
//
// Description:
//
// In this example, a delivery channel is created for an account group. The ID of the account group is `ca-a4e5626622af0079****`. The type of the delivery channel is `OSS` and the Alibaba Cloud Resource Name (ARN) of the delivery destination is `acs:oss:cn-shanghai:100931896542****:new-bucket`. The result indicates that the delivery channel is created. The ID of the delivery channel is `cdc-8e45ff4e06a3a8****`.
//
// @param request - CreateAggregateConfigDeliveryChannelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateAggregateConfigDeliveryChannelResponse
func (client *Client) CreateAggregateConfigDeliveryChannelWithOptions(request *CreateAggregateConfigDeliveryChannelRequest, runtime *util.RuntimeOptions) (_result *CreateAggregateConfigDeliveryChannelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		query["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliantSnapshot)) {
		query["CompliantSnapshot"] = request.CompliantSnapshot
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationItemChangeNotification)) {
		query["ConfigurationItemChangeNotification"] = request.ConfigurationItemChangeNotification
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationSnapshot)) {
		query["ConfigurationSnapshot"] = request.ConfigurationSnapshot
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelCondition)) {
		query["DeliveryChannelCondition"] = request.DeliveryChannelCondition
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelName)) {
		query["DeliveryChannelName"] = request.DeliveryChannelName
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelTargetArn)) {
		query["DeliveryChannelTargetArn"] = request.DeliveryChannelTargetArn
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelType)) {
		query["DeliveryChannelType"] = request.DeliveryChannelType
	}

	if !tea.BoolValue(util.IsUnset(request.DeliverySnapshotTime)) {
		query["DeliverySnapshotTime"] = request.DeliverySnapshotTime
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		query["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.NonCompliantNotification)) {
		query["NonCompliantNotification"] = request.NonCompliantNotification
	}

	if !tea.BoolValue(util.IsUnset(request.OversizedDataOSSTargetArn)) {
		query["OversizedDataOSSTargetArn"] = request.OversizedDataOSSTargetArn
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateAggregateConfigDeliveryChannel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateAggregateConfigDeliveryChannelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateAggregateConfigDeliveryChannelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates a delivery channel for an account group.
//
// Description:
//
// In this example, a delivery channel is created for an account group. The ID of the account group is `ca-a4e5626622af0079****`. The type of the delivery channel is `OSS` and the Alibaba Cloud Resource Name (ARN) of the delivery destination is `acs:oss:cn-shanghai:100931896542****:new-bucket`. The result indicates that the delivery channel is created. The ID of the delivery channel is `cdc-8e45ff4e06a3a8****`.
//
// @param request - CreateAggregateConfigDeliveryChannelRequest
//
// @return CreateAggregateConfigDeliveryChannelResponse
func (client *Client) CreateAggregateConfigDeliveryChannel(request *CreateAggregateConfigDeliveryChannelRequest) (_result *CreateAggregateConfigDeliveryChannelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateAggregateConfigDeliveryChannelResponse{}
	_body, _err := client.CreateAggregateConfigDeliveryChannelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a rule for an account group.
//
// Description:
//
// ### Limits
//
// You can create up to 200 rules for each management account.
//
// ### Usage notes
//
// This topic provides an example on how to create a rule based on the required-tags managed rule in the `ca-a4e5626622af0079****` account group. The returned result shows that the rule is created and its ID is `cr-4e3d626622af0080****`.
//
// @param tmpReq - CreateAggregateConfigRuleRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateAggregateConfigRuleResponse
func (client *Client) CreateAggregateConfigRuleWithOptions(tmpReq *CreateAggregateConfigRuleRequest, runtime *util.RuntimeOptions) (_result *CreateAggregateConfigRuleResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &CreateAggregateConfigRuleShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.InputParameters)) {
		request.InputParametersShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.InputParameters, tea.String("InputParameters"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ResourceTypesScope)) {
		request.ResourceTypesScopeShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ResourceTypesScope, tea.String("ResourceTypesScope"), tea.String("simple"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ResourceNameScope)) {
		query["ResourceNameScope"] = request.ResourceNameScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AccountIdsScope)) {
		body["AccountIdsScope"] = request.AccountIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleName)) {
		body["ConfigRuleName"] = request.ConfigRuleName
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleTriggerTypes)) {
		body["ConfigRuleTriggerTypes"] = request.ConfigRuleTriggerTypes
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeAccountIdsScope)) {
		body["ExcludeAccountIdsScope"] = request.ExcludeAccountIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeFolderIdsScope)) {
		body["ExcludeFolderIdsScope"] = request.ExcludeFolderIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeRegionIdsScope)) {
		body["ExcludeRegionIdsScope"] = request.ExcludeRegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceGroupIdsScope)) {
		body["ExcludeResourceGroupIdsScope"] = request.ExcludeResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceIdsScope)) {
		body["ExcludeResourceIdsScope"] = request.ExcludeResourceIdsScope
	}

	bodyFlat := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ExcludeTagsScope)) {
		bodyFlat["ExcludeTagsScope"] = request.ExcludeTagsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExtendContent)) {
		body["ExtendContent"] = request.ExtendContent
	}

	if !tea.BoolValue(util.IsUnset(request.FolderIdsScope)) {
		body["FolderIdsScope"] = request.FolderIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.InputParametersShrink)) {
		body["InputParameters"] = request.InputParametersShrink
	}

	if !tea.BoolValue(util.IsUnset(request.MaximumExecutionFrequency)) {
		body["MaximumExecutionFrequency"] = request.MaximumExecutionFrequency
	}

	if !tea.BoolValue(util.IsUnset(request.RegionIdsScope)) {
		body["RegionIdsScope"] = request.RegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupIdsScope)) {
		body["ResourceGroupIdsScope"] = request.ResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIdsScope)) {
		body["ResourceIdsScope"] = request.ResourceIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypesScopeShrink)) {
		body["ResourceTypesScope"] = request.ResourceTypesScopeShrink
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		body["RiskLevel"] = request.RiskLevel
	}

	if !tea.BoolValue(util.IsUnset(request.SourceIdentifier)) {
		body["SourceIdentifier"] = request.SourceIdentifier
	}

	if !tea.BoolValue(util.IsUnset(request.SourceOwner)) {
		body["SourceOwner"] = request.SourceOwner
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyLogicScope)) {
		body["TagKeyLogicScope"] = request.TagKeyLogicScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyScope)) {
		body["TagKeyScope"] = request.TagKeyScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagValueScope)) {
		body["TagValueScope"] = request.TagValueScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagsScope)) {
		bodyFlat["TagsScope"] = request.TagsScope
	}

	body = tea.ToMap(body,
		openapiutil.Query(bodyFlat))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
		Body:  openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateAggregateConfigRule"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateAggregateConfigRuleResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateAggregateConfigRuleResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates a rule for an account group.
//
// Description:
//
// ### Limits
//
// You can create up to 200 rules for each management account.
//
// ### Usage notes
//
// This topic provides an example on how to create a rule based on the required-tags managed rule in the `ca-a4e5626622af0079****` account group. The returned result shows that the rule is created and its ID is `cr-4e3d626622af0080****`.
//
// @param request - CreateAggregateConfigRuleRequest
//
// @return CreateAggregateConfigRuleResponse
func (client *Client) CreateAggregateConfigRule(request *CreateAggregateConfigRuleRequest) (_result *CreateAggregateConfigRuleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateAggregateConfigRuleResponse{}
	_body, _err := client.CreateAggregateConfigRuleWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a remediation template for a rule in an account group.
//
// Description:
//
// This topic provides an example on how to create a remediation template for the rule whose ID is `cr-6b7c626622af00b4****` in the account group whose ID is `ca-6b4a626622af0012****`. The returned result shows that a remediation template is created and the ID of the remediation template is `crr-909ba2d4716700eb****`.
//
// @param request - CreateAggregateRemediationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateAggregateRemediationResponse
func (client *Client) CreateAggregateRemediationWithOptions(request *CreateAggregateRemediationRequest, runtime *util.RuntimeOptions) (_result *CreateAggregateRemediationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		body["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.InvokeType)) {
		body["InvokeType"] = request.InvokeType
	}

	if !tea.BoolValue(util.IsUnset(request.Params)) {
		body["Params"] = request.Params
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationTemplateId)) {
		body["RemediationTemplateId"] = request.RemediationTemplateId
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationType)) {
		body["RemediationType"] = request.RemediationType
	}

	if !tea.BoolValue(util.IsUnset(request.SourceType)) {
		body["SourceType"] = request.SourceType
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateAggregateRemediation"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateAggregateRemediationResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateAggregateRemediationResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates a remediation template for a rule in an account group.
//
// Description:
//
// This topic provides an example on how to create a remediation template for the rule whose ID is `cr-6b7c626622af00b4****` in the account group whose ID is `ca-6b4a626622af0012****`. The returned result shows that a remediation template is created and the ID of the remediation template is `crr-909ba2d4716700eb****`.
//
// @param request - CreateAggregateRemediationRequest
//
// @return CreateAggregateRemediationResponse
func (client *Client) CreateAggregateRemediation(request *CreateAggregateRemediationRequest) (_result *CreateAggregateRemediationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateAggregateRemediationResponse{}
	_body, _err := client.CreateAggregateRemediationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates an account group.
//
// Description:
//
// Each management account can create a maximum of five account groups. Each account group can contain a maximum of 200 member accounts.
//
// Cloud Config supports the following types of account groups:
//
//   - Global account group: The global account group contains all the member accounts that are added to the resource directory. A management account can create only one global account group.
//
//   - Custom account group: If you create a custom account group, you must manually add all or specific member accounts from the resource directory to the custom account group.
//
// This topic provides an example on how to create an account group of the `CUSTOM` type. The custom account group is named `Test_Group`, and its description is `Test account group`. The custom account group contains the following two member accounts:
//
//   - Member account ID: `171322098523****`. Member account name: `Alice`.
//
//   - Member account ID: `100532098349****`. Member account name: `Tom`.
//
// @param tmpReq - CreateAggregatorRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateAggregatorResponse
func (client *Client) CreateAggregatorWithOptions(tmpReq *CreateAggregatorRequest, runtime *util.RuntimeOptions) (_result *CreateAggregatorResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &CreateAggregatorShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.AggregatorAccounts)) {
		request.AggregatorAccountsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.AggregatorAccounts, tea.String("AggregatorAccounts"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorAccountsShrink)) {
		body["AggregatorAccounts"] = request.AggregatorAccountsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.AggregatorName)) {
		body["AggregatorName"] = request.AggregatorName
	}

	if !tea.BoolValue(util.IsUnset(request.AggregatorType)) {
		body["AggregatorType"] = request.AggregatorType
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.FolderId)) {
		body["FolderId"] = request.FolderId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
		Body:  openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateAggregator"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateAggregatorResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateAggregatorResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates an account group.
//
// Description:
//
// Each management account can create a maximum of five account groups. Each account group can contain a maximum of 200 member accounts.
//
// Cloud Config supports the following types of account groups:
//
//   - Global account group: The global account group contains all the member accounts that are added to the resource directory. A management account can create only one global account group.
//
//   - Custom account group: If you create a custom account group, you must manually add all or specific member accounts from the resource directory to the custom account group.
//
// This topic provides an example on how to create an account group of the `CUSTOM` type. The custom account group is named `Test_Group`, and its description is `Test account group`. The custom account group contains the following two member accounts:
//
//   - Member account ID: `171322098523****`. Member account name: `Alice`.
//
//   - Member account ID: `100532098349****`. Member account name: `Tom`.
//
// @param request - CreateAggregatorRequest
//
// @return CreateAggregatorResponse
func (client *Client) CreateAggregator(request *CreateAggregatorRequest) (_result *CreateAggregatorResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateAggregatorResponse{}
	_body, _err := client.CreateAggregatorWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a compliance package for the current account.
//
// Description:
//
// Each ordinary account can create up to five compliance packages.
//
// This topic provides an example on how to create a compliance package named ClassifiedProtectionPreCheck. The compliance package contains a managed rule named `eip-bandwidth-limit`.
//
// @param tmpReq - CreateCompliancePackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateCompliancePackResponse
func (client *Client) CreateCompliancePackWithOptions(tmpReq *CreateCompliancePackRequest, runtime *util.RuntimeOptions) (_result *CreateCompliancePackResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &CreateCompliancePackShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ConfigRules)) {
		request.ConfigRulesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ConfigRules, tea.String("ConfigRules"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackName)) {
		body["CompliancePackName"] = request.CompliancePackName
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackTemplateId)) {
		body["CompliancePackTemplateId"] = request.CompliancePackTemplateId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRulesShrink)) {
		body["ConfigRules"] = request.ConfigRulesShrink
	}

	if !tea.BoolValue(util.IsUnset(request.DefaultEnable)) {
		body["DefaultEnable"] = request.DefaultEnable
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeRegionIdsScope)) {
		body["ExcludeRegionIdsScope"] = request.ExcludeRegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceGroupIdsScope)) {
		body["ExcludeResourceGroupIdsScope"] = request.ExcludeResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceIdsScope)) {
		body["ExcludeResourceIdsScope"] = request.ExcludeResourceIdsScope
	}

	bodyFlat := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ExcludeTagsScope)) {
		bodyFlat["ExcludeTagsScope"] = request.ExcludeTagsScope
	}

	if !tea.BoolValue(util.IsUnset(request.RegionIdsScope)) {
		body["RegionIdsScope"] = request.RegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupIdsScope)) {
		body["ResourceGroupIdsScope"] = request.ResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIdsScope)) {
		body["ResourceIdsScope"] = request.ResourceIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		body["RiskLevel"] = request.RiskLevel
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyScope)) {
		body["TagKeyScope"] = request.TagKeyScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagValueScope)) {
		body["TagValueScope"] = request.TagValueScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagsScope)) {
		bodyFlat["TagsScope"] = request.TagsScope
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateContent)) {
		body["TemplateContent"] = request.TemplateContent
	}

	body = tea.ToMap(body,
		openapiutil.Query(bodyFlat))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
		Body:  openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateCompliancePack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateCompliancePackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateCompliancePackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates a compliance package for the current account.
//
// Description:
//
// Each ordinary account can create up to five compliance packages.
//
// This topic provides an example on how to create a compliance package named ClassifiedProtectionPreCheck. The compliance package contains a managed rule named `eip-bandwidth-limit`.
//
// @param request - CreateCompliancePackRequest
//
// @return CreateCompliancePackResponse
func (client *Client) CreateCompliancePack(request *CreateCompliancePackRequest) (_result *CreateCompliancePackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateCompliancePackResponse{}
	_body, _err := client.CreateCompliancePackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a delivery channel.
//
// Description:
//
// In this example, a delivery channel is created. The type of the delivery channel is `OSS` and the Alibaba Cloud Resource Name (ARN) of the delivery destination is `acs:oss:cn-shanghai:100931896542****:new-bucket`. The result indicates that the delivery channel is created, and the ID of the delivery channel is `cdc-8e45ff4e06a3a8****`.
//
// @param request - CreateConfigDeliveryChannelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateConfigDeliveryChannelResponse
func (client *Client) CreateConfigDeliveryChannelWithOptions(request *CreateConfigDeliveryChannelRequest, runtime *util.RuntimeOptions) (_result *CreateConfigDeliveryChannelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		query["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliantSnapshot)) {
		query["CompliantSnapshot"] = request.CompliantSnapshot
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationItemChangeNotification)) {
		query["ConfigurationItemChangeNotification"] = request.ConfigurationItemChangeNotification
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationSnapshot)) {
		query["ConfigurationSnapshot"] = request.ConfigurationSnapshot
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelCondition)) {
		query["DeliveryChannelCondition"] = request.DeliveryChannelCondition
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelName)) {
		query["DeliveryChannelName"] = request.DeliveryChannelName
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelTargetArn)) {
		query["DeliveryChannelTargetArn"] = request.DeliveryChannelTargetArn
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelType)) {
		query["DeliveryChannelType"] = request.DeliveryChannelType
	}

	if !tea.BoolValue(util.IsUnset(request.DeliverySnapshotTime)) {
		query["DeliverySnapshotTime"] = request.DeliverySnapshotTime
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		query["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.NonCompliantNotification)) {
		query["NonCompliantNotification"] = request.NonCompliantNotification
	}

	if !tea.BoolValue(util.IsUnset(request.OversizedDataOSSTargetArn)) {
		query["OversizedDataOSSTargetArn"] = request.OversizedDataOSSTargetArn
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateConfigDeliveryChannel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateConfigDeliveryChannelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateConfigDeliveryChannelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates a delivery channel.
//
// Description:
//
// In this example, a delivery channel is created. The type of the delivery channel is `OSS` and the Alibaba Cloud Resource Name (ARN) of the delivery destination is `acs:oss:cn-shanghai:100931896542****:new-bucket`. The result indicates that the delivery channel is created, and the ID of the delivery channel is `cdc-8e45ff4e06a3a8****`.
//
// @param request - CreateConfigDeliveryChannelRequest
//
// @return CreateConfigDeliveryChannelResponse
func (client *Client) CreateConfigDeliveryChannel(request *CreateConfigDeliveryChannelRequest) (_result *CreateConfigDeliveryChannelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateConfigDeliveryChannelResponse{}
	_body, _err := client.CreateConfigDeliveryChannelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a rule for the current account.
//
// Description:
//
// ## Limits
//
// You can use a common account to create up to 200 rules.
//
// @param tmpReq - CreateConfigRuleRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateConfigRuleResponse
func (client *Client) CreateConfigRuleWithOptions(tmpReq *CreateConfigRuleRequest, runtime *util.RuntimeOptions) (_result *CreateConfigRuleResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &CreateConfigRuleShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.InputParameters)) {
		request.InputParametersShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.InputParameters, tea.String("InputParameters"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ResourceTypesScope)) {
		request.ResourceTypesScopeShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ResourceTypesScope, tea.String("ResourceTypesScope"), tea.String("simple"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleName)) {
		body["ConfigRuleName"] = request.ConfigRuleName
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleTriggerTypes)) {
		body["ConfigRuleTriggerTypes"] = request.ConfigRuleTriggerTypes
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeRegionIdsScope)) {
		body["ExcludeRegionIdsScope"] = request.ExcludeRegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceGroupIdsScope)) {
		body["ExcludeResourceGroupIdsScope"] = request.ExcludeResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceIdsScope)) {
		body["ExcludeResourceIdsScope"] = request.ExcludeResourceIdsScope
	}

	bodyFlat := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ExcludeTagsScope)) {
		bodyFlat["ExcludeTagsScope"] = request.ExcludeTagsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExtendContent)) {
		body["ExtendContent"] = request.ExtendContent
	}

	if !tea.BoolValue(util.IsUnset(request.InputParametersShrink)) {
		body["InputParameters"] = request.InputParametersShrink
	}

	if !tea.BoolValue(util.IsUnset(request.MaximumExecutionFrequency)) {
		body["MaximumExecutionFrequency"] = request.MaximumExecutionFrequency
	}

	if !tea.BoolValue(util.IsUnset(request.RegionIdsScope)) {
		body["RegionIdsScope"] = request.RegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupIdsScope)) {
		body["ResourceGroupIdsScope"] = request.ResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIdsScope)) {
		body["ResourceIdsScope"] = request.ResourceIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceNameScope)) {
		body["ResourceNameScope"] = request.ResourceNameScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypesScopeShrink)) {
		body["ResourceTypesScope"] = request.ResourceTypesScopeShrink
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		body["RiskLevel"] = request.RiskLevel
	}

	if !tea.BoolValue(util.IsUnset(request.SourceIdentifier)) {
		body["SourceIdentifier"] = request.SourceIdentifier
	}

	if !tea.BoolValue(util.IsUnset(request.SourceOwner)) {
		body["SourceOwner"] = request.SourceOwner
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyLogicScope)) {
		body["TagKeyLogicScope"] = request.TagKeyLogicScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyScope)) {
		body["TagKeyScope"] = request.TagKeyScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagValueScope)) {
		body["TagValueScope"] = request.TagValueScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagsScope)) {
		bodyFlat["TagsScope"] = request.TagsScope
	}

	body = tea.ToMap(body,
		openapiutil.Query(bodyFlat))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
		Body:  openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateConfigRule"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateConfigRuleResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateConfigRuleResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates a rule for the current account.
//
// Description:
//
// ## Limits
//
// You can use a common account to create up to 200 rules.
//
// @param request - CreateConfigRuleRequest
//
// @return CreateConfigRuleResponse
func (client *Client) CreateConfigRule(request *CreateConfigRuleRequest) (_result *CreateConfigRuleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateConfigRuleResponse{}
	_body, _err := client.CreateConfigRuleWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Deprecated: OpenAPI CreateDeliveryChannel is deprecated, please use Config::2020-09-07::CreateConfigDeliveryChannel,Config::2020-09-07::CreateAggregateConfigDeliveryChannel instead.
//
// Summary:
//
// Creates a delivery channel.
//
// Description:
//
// In this example, a delivery channel is created. The type of the delivery channel is `OSS`, the Alibaba Cloud Resource Name (ARN) of the delivery destination is `acs:oss:cn-shanghai:100931896542****:new-bucket`, and the ARN of the role that is assigned to the delivery channel is `acs:ram::100931896542****:role/aliyunserviceroleforconfig`. The returned result shows that the delivery channel is created, and the ID of the delivery channel is `cdc-8e45ff4e06a3a8****`.
//
// @param request - CreateDeliveryChannelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateDeliveryChannelResponse
// Deprecated
func (client *Client) CreateDeliveryChannelWithOptions(request *CreateDeliveryChannelRequest, runtime *util.RuntimeOptions) (_result *CreateDeliveryChannelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationItemChangeNotification)) {
		body["ConfigurationItemChangeNotification"] = request.ConfigurationItemChangeNotification
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationSnapshot)) {
		body["ConfigurationSnapshot"] = request.ConfigurationSnapshot
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelAssumeRoleArn)) {
		body["DeliveryChannelAssumeRoleArn"] = request.DeliveryChannelAssumeRoleArn
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelCondition)) {
		body["DeliveryChannelCondition"] = request.DeliveryChannelCondition
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelName)) {
		body["DeliveryChannelName"] = request.DeliveryChannelName
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelTargetArn)) {
		body["DeliveryChannelTargetArn"] = request.DeliveryChannelTargetArn
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelType)) {
		body["DeliveryChannelType"] = request.DeliveryChannelType
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.NonCompliantNotification)) {
		body["NonCompliantNotification"] = request.NonCompliantNotification
	}

	if !tea.BoolValue(util.IsUnset(request.OversizedDataOSSTargetArn)) {
		body["OversizedDataOSSTargetArn"] = request.OversizedDataOSSTargetArn
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateDeliveryChannel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateDeliveryChannelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateDeliveryChannelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Deprecated: OpenAPI CreateDeliveryChannel is deprecated, please use Config::2020-09-07::CreateConfigDeliveryChannel,Config::2020-09-07::CreateAggregateConfigDeliveryChannel instead.
//
// Summary:
//
// Creates a delivery channel.
//
// Description:
//
// In this example, a delivery channel is created. The type of the delivery channel is `OSS`, the Alibaba Cloud Resource Name (ARN) of the delivery destination is `acs:oss:cn-shanghai:100931896542****:new-bucket`, and the ARN of the role that is assigned to the delivery channel is `acs:ram::100931896542****:role/aliyunserviceroleforconfig`. The returned result shows that the delivery channel is created, and the ID of the delivery channel is `cdc-8e45ff4e06a3a8****`.
//
// @param request - CreateDeliveryChannelRequest
//
// @return CreateDeliveryChannelResponse
// Deprecated
func (client *Client) CreateDeliveryChannel(request *CreateDeliveryChannelRequest) (_result *CreateDeliveryChannelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateDeliveryChannelResponse{}
	_body, _err := client.CreateDeliveryChannelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a remediation template for a rule.
//
// Description:
//
// This topic provides an example on how to create a remediation template for the rule `cr-8a973ac2e2be00a2****`. The returned result shows that a remediation template is created and the ID of the remediation template is `crr-909ba2d4716700eb****`.
//
// @param request - CreateRemediationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateRemediationResponse
func (client *Client) CreateRemediationWithOptions(request *CreateRemediationRequest, runtime *util.RuntimeOptions) (_result *CreateRemediationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		body["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.InvokeType)) {
		body["InvokeType"] = request.InvokeType
	}

	if !tea.BoolValue(util.IsUnset(request.Params)) {
		body["Params"] = request.Params
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationTemplateId)) {
		body["RemediationTemplateId"] = request.RemediationTemplateId
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationType)) {
		body["RemediationType"] = request.RemediationType
	}

	if !tea.BoolValue(util.IsUnset(request.SourceType)) {
		body["SourceType"] = request.SourceType
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateRemediation"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &CreateRemediationResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &CreateRemediationResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Creates a remediation template for a rule.
//
// Description:
//
// This topic provides an example on how to create a remediation template for the rule `cr-8a973ac2e2be00a2****`. The returned result shows that a remediation template is created and the ID of the remediation template is `crr-909ba2d4716700eb****`.
//
// @param request - CreateRemediationRequest
//
// @return CreateRemediationResponse
func (client *Client) CreateRemediation(request *CreateRemediationRequest) (_result *CreateRemediationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateRemediationResponse{}
	_body, _err := client.CreateRemediationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Disables one or more rules in an account group. After a rule is disabled, the resource in the rule is no longer evaluated. The compliance evaluation results before the rule is disabled are still displayed.
//
// Description:
//
// ### [](#)Prerequisites
//
// The status of the rule is `ACTIVE`.
//
// ### [](#)Description
//
// This topic provides an example on how to disable the `cr-5772ba41209e007b****` rule in the `ca-04b3fd170e340007****` account group.
//
// @param request - DeactiveAggregateConfigRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeactiveAggregateConfigRulesResponse
func (client *Client) DeactiveAggregateConfigRulesWithOptions(request *DeactiveAggregateConfigRulesRequest, runtime *util.RuntimeOptions) (_result *DeactiveAggregateConfigRulesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DeactiveAggregateConfigRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeactiveAggregateConfigRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeactiveAggregateConfigRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Disables one or more rules in an account group. After a rule is disabled, the resource in the rule is no longer evaluated. The compliance evaluation results before the rule is disabled are still displayed.
//
// Description:
//
// ### [](#)Prerequisites
//
// The status of the rule is `ACTIVE`.
//
// ### [](#)Description
//
// This topic provides an example on how to disable the `cr-5772ba41209e007b****` rule in the `ca-04b3fd170e340007****` account group.
//
// @param request - DeactiveAggregateConfigRulesRequest
//
// @return DeactiveAggregateConfigRulesResponse
func (client *Client) DeactiveAggregateConfigRules(request *DeactiveAggregateConfigRulesRequest) (_result *DeactiveAggregateConfigRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeactiveAggregateConfigRulesResponse{}
	_body, _err := client.DeactiveAggregateConfigRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Disables a rule. After a rule is disabled, the resource in the rule is no longer evaluated. The compliance evaluation results before the rule is disabled are still displayed.
//
// Description:
//
// ### [](#)Prerequisites
//
// The status of the rule is `ACTIVE`.
//
// ### [](#)Description
//
// This topic provides an example on how to disable the `cr-19a56457e0d90058****` rule.
//
// @param request - DeactiveConfigRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeactiveConfigRulesResponse
func (client *Client) DeactiveConfigRulesWithOptions(request *DeactiveConfigRulesRequest, runtime *util.RuntimeOptions) (_result *DeactiveConfigRulesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DeactiveConfigRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeactiveConfigRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeactiveConfigRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Disables a rule. After a rule is disabled, the resource in the rule is no longer evaluated. The compliance evaluation results before the rule is disabled are still displayed.
//
// Description:
//
// ### [](#)Prerequisites
//
// The status of the rule is `ACTIVE`.
//
// ### [](#)Description
//
// This topic provides an example on how to disable the `cr-19a56457e0d90058****` rule.
//
// @param request - DeactiveConfigRulesRequest
//
// @return DeactiveConfigRulesResponse
func (client *Client) DeactiveConfigRules(request *DeactiveConfigRulesRequest) (_result *DeactiveConfigRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeactiveConfigRulesResponse{}
	_body, _err := client.DeactiveConfigRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Deletes the compliance packages of an account group.
//
// Description:
//
// This topic provides an example on how to delete the `cp-541e626622af0087****` compliance package from the `ca-04b3fd170e340007****` account group.
//
// @param request - DeleteAggregateCompliancePacksRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteAggregateCompliancePacksResponse
func (client *Client) DeleteAggregateCompliancePacksWithOptions(request *DeleteAggregateCompliancePacksRequest, runtime *util.RuntimeOptions) (_result *DeleteAggregateCompliancePacksResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackIds)) {
		body["CompliancePackIds"] = request.CompliancePackIds
	}

	if !tea.BoolValue(util.IsUnset(request.DeleteRule)) {
		body["DeleteRule"] = request.DeleteRule
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteAggregateCompliancePacks"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeleteAggregateCompliancePacksResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeleteAggregateCompliancePacksResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Deletes the compliance packages of an account group.
//
// Description:
//
// This topic provides an example on how to delete the `cp-541e626622af0087****` compliance package from the `ca-04b3fd170e340007****` account group.
//
// @param request - DeleteAggregateCompliancePacksRequest
//
// @return DeleteAggregateCompliancePacksResponse
func (client *Client) DeleteAggregateCompliancePacks(request *DeleteAggregateCompliancePacksRequest) (_result *DeleteAggregateCompliancePacksResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteAggregateCompliancePacksResponse{}
	_body, _err := client.DeleteAggregateCompliancePacksWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Deletes a delivery channel from an account group.
//
// Description:
//
// This topic provides an example on how to delete the `cdc-38c3013b46c9002c****` delivery channel from the `ca-23c6626622af0041****` account group. The returned result shows that the `cdc-38c3013b46c9002c****` delivery channel is deleted.
//
// @param request - DeleteAggregateConfigDeliveryChannelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteAggregateConfigDeliveryChannelResponse
func (client *Client) DeleteAggregateConfigDeliveryChannelWithOptions(request *DeleteAggregateConfigDeliveryChannelRequest, runtime *util.RuntimeOptions) (_result *DeleteAggregateConfigDeliveryChannelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelId)) {
		query["DeliveryChannelId"] = request.DeliveryChannelId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteAggregateConfigDeliveryChannel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeleteAggregateConfigDeliveryChannelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeleteAggregateConfigDeliveryChannelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Deletes a delivery channel from an account group.
//
// Description:
//
// This topic provides an example on how to delete the `cdc-38c3013b46c9002c****` delivery channel from the `ca-23c6626622af0041****` account group. The returned result shows that the `cdc-38c3013b46c9002c****` delivery channel is deleted.
//
// @param request - DeleteAggregateConfigDeliveryChannelRequest
//
// @return DeleteAggregateConfigDeliveryChannelResponse
func (client *Client) DeleteAggregateConfigDeliveryChannel(request *DeleteAggregateConfigDeliveryChannelRequest) (_result *DeleteAggregateConfigDeliveryChannelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteAggregateConfigDeliveryChannelResponse{}
	_body, _err := client.DeleteAggregateConfigDeliveryChannelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Deletes one or more rules from an account group. You can delete a rule in the Cloud Config console. After you delete the rule, the configurations of the rule are deleted.
//
// Description:
//
// This topic provides an example on how to delete the `cr-4e3d626622af0080****` rule from the `ca-a4e5626622af0079****` account group.
//
// @param request - DeleteAggregateConfigRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteAggregateConfigRulesResponse
func (client *Client) DeleteAggregateConfigRulesWithOptions(request *DeleteAggregateConfigRulesRequest, runtime *util.RuntimeOptions) (_result *DeleteAggregateConfigRulesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteAggregateConfigRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeleteAggregateConfigRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeleteAggregateConfigRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Deletes one or more rules from an account group. You can delete a rule in the Cloud Config console. After you delete the rule, the configurations of the rule are deleted.
//
// Description:
//
// This topic provides an example on how to delete the `cr-4e3d626622af0080****` rule from the `ca-a4e5626622af0079****` account group.
//
// @param request - DeleteAggregateConfigRulesRequest
//
// @return DeleteAggregateConfigRulesResponse
func (client *Client) DeleteAggregateConfigRules(request *DeleteAggregateConfigRulesRequest) (_result *DeleteAggregateConfigRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteAggregateConfigRulesResponse{}
	_body, _err := client.DeleteAggregateConfigRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Deletes one or more remediation templates from a rule in an account group.
//
// Description:
//
// This topic provides an example on how to delete the remediation template whose ID is `crr-909ba2d4716700eb****` from the account group whose ID is `ca-6b4a626622af0012****`. The returned result shows that the remediation template whose ID is `crr-909ba2d4716700eb****` is deleted.
//
// @param request - DeleteAggregateRemediationsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteAggregateRemediationsResponse
func (client *Client) DeleteAggregateRemediationsWithOptions(request *DeleteAggregateRemediationsRequest, runtime *util.RuntimeOptions) (_result *DeleteAggregateRemediationsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationIds)) {
		body["RemediationIds"] = request.RemediationIds
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteAggregateRemediations"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeleteAggregateRemediationsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeleteAggregateRemediationsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Deletes one or more remediation templates from a rule in an account group.
//
// Description:
//
// This topic provides an example on how to delete the remediation template whose ID is `crr-909ba2d4716700eb****` from the account group whose ID is `ca-6b4a626622af0012****`. The returned result shows that the remediation template whose ID is `crr-909ba2d4716700eb****` is deleted.
//
// @param request - DeleteAggregateRemediationsRequest
//
// @return DeleteAggregateRemediationsResponse
func (client *Client) DeleteAggregateRemediations(request *DeleteAggregateRemediationsRequest) (_result *DeleteAggregateRemediationsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteAggregateRemediationsResponse{}
	_body, _err := client.DeleteAggregateRemediationsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// The management account or delegated administrator account of a resource directory can delete an account group.
//
// Description:
//
// ### [](#)Background information
//
// After you delete an account group, the following changes occur to Cloud Config:
//
//   - The rules and compliance packages of the account group are deleted and cannot be recovered.
//
//   - All compliance results generated in the account group are automatically deleted and cannot be recovered.
//
//   - Service-linked roles for Cloud Config of member accounts in the account group are retained.
//
//   - If the account groups to which a member belongs are all deleted, the member account uses Cloud Config as an independent Alibaba Cloud account.
//
// ### [](#)Description
//
// This topic provides an example on how to delete the account group whose ID is `ca-9190626622af00a9****`.
//
// @param request - DeleteAggregatorsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteAggregatorsResponse
func (client *Client) DeleteAggregatorsWithOptions(request *DeleteAggregatorsRequest, runtime *util.RuntimeOptions) (_result *DeleteAggregatorsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorIds)) {
		body["AggregatorIds"] = request.AggregatorIds
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteAggregators"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeleteAggregatorsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeleteAggregatorsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// The management account or delegated administrator account of a resource directory can delete an account group.
//
// Description:
//
// ### [](#)Background information
//
// After you delete an account group, the following changes occur to Cloud Config:
//
//   - The rules and compliance packages of the account group are deleted and cannot be recovered.
//
//   - All compliance results generated in the account group are automatically deleted and cannot be recovered.
//
//   - Service-linked roles for Cloud Config of member accounts in the account group are retained.
//
//   - If the account groups to which a member belongs are all deleted, the member account uses Cloud Config as an independent Alibaba Cloud account.
//
// ### [](#)Description
//
// This topic provides an example on how to delete the account group whose ID is `ca-9190626622af00a9****`.
//
// @param request - DeleteAggregatorsRequest
//
// @return DeleteAggregatorsResponse
func (client *Client) DeleteAggregators(request *DeleteAggregatorsRequest) (_result *DeleteAggregatorsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteAggregatorsResponse{}
	_body, _err := client.DeleteAggregatorsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Deletes one or more compliance packages.
//
// Description:
//
// This topic provides an example on how to delete the `cp-541e626622af0087****` compliance package.
//
// @param request - DeleteCompliancePacksRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteCompliancePacksResponse
func (client *Client) DeleteCompliancePacksWithOptions(request *DeleteCompliancePacksRequest, runtime *util.RuntimeOptions) (_result *DeleteCompliancePacksResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackIds)) {
		body["CompliancePackIds"] = request.CompliancePackIds
	}

	if !tea.BoolValue(util.IsUnset(request.DeleteRule)) {
		body["DeleteRule"] = request.DeleteRule
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteCompliancePacks"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeleteCompliancePacksResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeleteCompliancePacksResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Deletes one or more compliance packages.
//
// Description:
//
// This topic provides an example on how to delete the `cp-541e626622af0087****` compliance package.
//
// @param request - DeleteCompliancePacksRequest
//
// @return DeleteCompliancePacksResponse
func (client *Client) DeleteCompliancePacks(request *DeleteCompliancePacksRequest) (_result *DeleteCompliancePacksResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteCompliancePacksResponse{}
	_body, _err := client.DeleteCompliancePacksWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Deletes a delivery channel.
//
// Description:
//
// This topic provides an example on how to delete the `cdc-38c3013b46c9002c****` delivery channel. The returned result shows that the `cdc-38c3013b46c9002c****` delivery channel is deleted.
//
// @param request - DeleteConfigDeliveryChannelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteConfigDeliveryChannelResponse
func (client *Client) DeleteConfigDeliveryChannelWithOptions(request *DeleteConfigDeliveryChannelRequest, runtime *util.RuntimeOptions) (_result *DeleteConfigDeliveryChannelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelId)) {
		query["DeliveryChannelId"] = request.DeliveryChannelId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteConfigDeliveryChannel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeleteConfigDeliveryChannelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeleteConfigDeliveryChannelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Deletes a delivery channel.
//
// Description:
//
// This topic provides an example on how to delete the `cdc-38c3013b46c9002c****` delivery channel. The returned result shows that the `cdc-38c3013b46c9002c****` delivery channel is deleted.
//
// @param request - DeleteConfigDeliveryChannelRequest
//
// @return DeleteConfigDeliveryChannelResponse
func (client *Client) DeleteConfigDeliveryChannel(request *DeleteConfigDeliveryChannelRequest) (_result *DeleteConfigDeliveryChannelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteConfigDeliveryChannelResponse{}
	_body, _err := client.DeleteConfigDeliveryChannelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Deletes rules.
//
// Description:
//
// In this example, the rule whose ID is cr-9908626622af0035\\*\\*\\*\\	- is deleted.
//
// @param request - DeleteConfigRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteConfigRulesResponse
func (client *Client) DeleteConfigRulesWithOptions(request *DeleteConfigRulesRequest, runtime *util.RuntimeOptions) (_result *DeleteConfigRulesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteConfigRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeleteConfigRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeleteConfigRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Deletes rules.
//
// Description:
//
// In this example, the rule whose ID is cr-9908626622af0035\\*\\*\\*\\	- is deleted.
//
// @param request - DeleteConfigRulesRequest
//
// @return DeleteConfigRulesResponse
func (client *Client) DeleteConfigRules(request *DeleteConfigRulesRequest) (_result *DeleteConfigRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteConfigRulesResponse{}
	_body, _err := client.DeleteConfigRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Deletes one or more configured remediation templates that are associated with a rule.
//
// Description:
//
// This topic provides an example on how to delete the remediation template `crr-909ba2d4716700eb****`. The returned result shows that the remediation template whose ID is `crr-909ba2d4716700eb****` is deleted.
//
// @param request - DeleteRemediationsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteRemediationsResponse
func (client *Client) DeleteRemediationsWithOptions(request *DeleteRemediationsRequest, runtime *util.RuntimeOptions) (_result *DeleteRemediationsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RemediationIds)) {
		body["RemediationIds"] = request.RemediationIds
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteRemediations"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DeleteRemediationsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DeleteRemediationsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Deletes one or more configured remediation templates that are associated with a rule.
//
// Description:
//
// This topic provides an example on how to delete the remediation template `crr-909ba2d4716700eb****`. The returned result shows that the remediation template whose ID is `crr-909ba2d4716700eb****` is deleted.
//
// @param request - DeleteRemediationsRequest
//
// @return DeleteRemediationsResponse
func (client *Client) DeleteRemediations(request *DeleteRemediationsRequest) (_result *DeleteRemediationsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteRemediationsResponse{}
	_body, _err := client.DeleteRemediationsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// This topic provides an example on how to query the details of a remediation configuration whose ID is crr-f381cf0c1c2f004e\\*\\*\\*\\*.
//
// @param request - DescribeRemediationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DescribeRemediationResponse
func (client *Client) DescribeRemediationWithOptions(request *DescribeRemediationRequest, runtime *util.RuntimeOptions) (_result *DescribeRemediationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DescribeRemediation"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DescribeRemediationResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DescribeRemediationResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// This topic provides an example on how to query the details of a remediation configuration whose ID is crr-f381cf0c1c2f004e\\*\\*\\*\\*.
//
// @param request - DescribeRemediationRequest
//
// @return DescribeRemediationResponse
func (client *Client) DescribeRemediation(request *DescribeRemediationRequest) (_result *DescribeRemediationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DescribeRemediationResponse{}
	_body, _err := client.DescribeRemediationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Removes one or more rules in an account group from a compliance package.
//
// Description:
//
// ### Prerequisites
//
// One or more rules are added to a compliance package.
//
// ### Usage notes
//
// The sample request in this topic shows you how to remove the `cr-6cc4626622af00e7****` rule in the `ca-75b4626622af00c3****` account group from the `cp-5bb1626622af00bd****` compliance package.
//
// @param request - DetachAggregateConfigRuleToCompliancePackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DetachAggregateConfigRuleToCompliancePackResponse
func (client *Client) DetachAggregateConfigRuleToCompliancePackWithOptions(request *DetachAggregateConfigRuleToCompliancePackRequest, runtime *util.RuntimeOptions) (_result *DetachAggregateConfigRuleToCompliancePackResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DetachAggregateConfigRuleToCompliancePack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DetachAggregateConfigRuleToCompliancePackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DetachAggregateConfigRuleToCompliancePackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Removes one or more rules in an account group from a compliance package.
//
// Description:
//
// ### Prerequisites
//
// One or more rules are added to a compliance package.
//
// ### Usage notes
//
// The sample request in this topic shows you how to remove the `cr-6cc4626622af00e7****` rule in the `ca-75b4626622af00c3****` account group from the `cp-5bb1626622af00bd****` compliance package.
//
// @param request - DetachAggregateConfigRuleToCompliancePackRequest
//
// @return DetachAggregateConfigRuleToCompliancePackResponse
func (client *Client) DetachAggregateConfigRuleToCompliancePack(request *DetachAggregateConfigRuleToCompliancePackRequest) (_result *DetachAggregateConfigRuleToCompliancePackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DetachAggregateConfigRuleToCompliancePackResponse{}
	_body, _err := client.DetachAggregateConfigRuleToCompliancePackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Removes one or more rules from a compliance package.
//
// Description:
//
// ### Prerequisites
//
// One or more rules are added to a compliance package.
//
// ### Usage notes
//
// This topic provides an example on how to remove the `cr-6cc4626622af00e7****` rule from the `cp-5bb1626622af00bd****` compliance package.
//
// @param request - DetachConfigRuleToCompliancePackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DetachConfigRuleToCompliancePackResponse
func (client *Client) DetachConfigRuleToCompliancePackWithOptions(request *DetachConfigRuleToCompliancePackRequest, runtime *util.RuntimeOptions) (_result *DetachConfigRuleToCompliancePackResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DetachConfigRuleToCompliancePack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &DetachConfigRuleToCompliancePackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &DetachConfigRuleToCompliancePackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Removes one or more rules from a compliance package.
//
// Description:
//
// ### Prerequisites
//
// One or more rules are added to a compliance package.
//
// ### Usage notes
//
// This topic provides an example on how to remove the `cr-6cc4626622af00e7****` rule from the `cp-5bb1626622af00bd****` compliance package.
//
// @param request - DetachConfigRuleToCompliancePackRequest
//
// @return DetachConfigRuleToCompliancePackResponse
func (client *Client) DetachConfigRuleToCompliancePack(request *DetachConfigRuleToCompliancePackRequest) (_result *DetachConfigRuleToCompliancePackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DetachConfigRuleToCompliancePackResponse{}
	_body, _err := client.DetachConfigRuleToCompliancePackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Executes evaluation rules to evaluate resources.
//
// @param tmpReq - EvaluatePreConfigRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return EvaluatePreConfigRulesResponse
func (client *Client) EvaluatePreConfigRulesWithOptions(tmpReq *EvaluatePreConfigRulesRequest, runtime *util.RuntimeOptions) (_result *EvaluatePreConfigRulesResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &EvaluatePreConfigRulesShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ResourceEvaluateItems)) {
		request.ResourceEvaluateItemsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ResourceEvaluateItems, tea.String("ResourceEvaluateItems"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.EnableManagedRules)) {
		body["EnableManagedRules"] = request.EnableManagedRules
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceEvaluateItemsShrink)) {
		body["ResourceEvaluateItems"] = request.ResourceEvaluateItemsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypeFormat)) {
		body["ResourceTypeFormat"] = request.ResourceTypeFormat
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("EvaluatePreConfigRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &EvaluatePreConfigRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &EvaluatePreConfigRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Executes evaluation rules to evaluate resources.
//
// @param request - EvaluatePreConfigRulesRequest
//
// @return EvaluatePreConfigRulesResponse
func (client *Client) EvaluatePreConfigRules(request *EvaluatePreConfigRulesRequest) (_result *EvaluatePreConfigRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &EvaluatePreConfigRulesResponse{}
	_body, _err := client.EvaluatePreConfigRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Generates a compliance evaluation report based on a compliance package in an account group.
//
// Description:
//
// > You can call this operation to generate the latest compliance evaluation report. To download the report, call the GetAggregateConfigRulesReport operation. For more information, see [GetAggregateCompliancePackReport](https://help.aliyun.com/document_detail/262699.html).
//
// This topic provides an example on how to generate a compliance evaluation report based on the `cp-fdc8626622af00f9****` compliance package in the `ca-f632626622af0079****` account group.
//
// @param request - GenerateAggregateCompliancePackReportRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GenerateAggregateCompliancePackReportResponse
func (client *Client) GenerateAggregateCompliancePackReportWithOptions(request *GenerateAggregateCompliancePackReportRequest, runtime *util.RuntimeOptions) (_result *GenerateAggregateCompliancePackReportResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		body["CompliancePackId"] = request.CompliancePackId
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("GenerateAggregateCompliancePackReport"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GenerateAggregateCompliancePackReportResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GenerateAggregateCompliancePackReportResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Generates a compliance evaluation report based on a compliance package in an account group.
//
// Description:
//
// > You can call this operation to generate the latest compliance evaluation report. To download the report, call the GetAggregateConfigRulesReport operation. For more information, see [GetAggregateCompliancePackReport](https://help.aliyun.com/document_detail/262699.html).
//
// This topic provides an example on how to generate a compliance evaluation report based on the `cp-fdc8626622af00f9****` compliance package in the `ca-f632626622af0079****` account group.
//
// @param request - GenerateAggregateCompliancePackReportRequest
//
// @return GenerateAggregateCompliancePackReportResponse
func (client *Client) GenerateAggregateCompliancePackReport(request *GenerateAggregateCompliancePackReportRequest) (_result *GenerateAggregateCompliancePackReportResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GenerateAggregateCompliancePackReportResponse{}
	_body, _err := client.GenerateAggregateCompliancePackReportWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Generates a compliance evaluation report for the rules in a specified account group.
//
// Description:
//
// > You can call this operation to generate the latest compliance evaluation report. To download the report, call the GetAggregateConfigRulesReport operation. For more information, see [GetAggregateConfigRulesReport](https://help.aliyun.com/document_detail/262706.html).
//
// The topic provides an example on how to generate a compliance evaluation report based on all rules in the `ca-f632626622af0079****` account group.
//
// @param request - GenerateAggregateConfigRulesReportRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GenerateAggregateConfigRulesReportResponse
func (client *Client) GenerateAggregateConfigRulesReportWithOptions(request *GenerateAggregateConfigRulesReportRequest, runtime *util.RuntimeOptions) (_result *GenerateAggregateConfigRulesReportResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		body["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("GenerateAggregateConfigRulesReport"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GenerateAggregateConfigRulesReportResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GenerateAggregateConfigRulesReportResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Generates a compliance evaluation report for the rules in a specified account group.
//
// Description:
//
// > You can call this operation to generate the latest compliance evaluation report. To download the report, call the GetAggregateConfigRulesReport operation. For more information, see [GetAggregateConfigRulesReport](https://help.aliyun.com/document_detail/262706.html).
//
// The topic provides an example on how to generate a compliance evaluation report based on all rules in the `ca-f632626622af0079****` account group.
//
// @param request - GenerateAggregateConfigRulesReportRequest
//
// @return GenerateAggregateConfigRulesReportResponse
func (client *Client) GenerateAggregateConfigRulesReport(request *GenerateAggregateConfigRulesReportRequest) (_result *GenerateAggregateConfigRulesReportResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GenerateAggregateConfigRulesReportResponse{}
	_body, _err := client.GenerateAggregateConfigRulesReportWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Generates a downloadable inventory for global resources in an account group.
//
// Description:
//
// This topic provides an example to show how to generate a downloadable inventory for global resources in the account group ca-a91d626622af0035\\*\\*\\*\\*.
//
// @param request - GenerateAggregateResourceInventoryRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GenerateAggregateResourceInventoryResponse
func (client *Client) GenerateAggregateResourceInventoryWithOptions(request *GenerateAggregateResourceInventoryRequest, runtime *util.RuntimeOptions) (_result *GenerateAggregateResourceInventoryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AccountIds)) {
		query["AccountIds"] = request.AccountIds
	}

	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.Regions)) {
		query["Regions"] = request.Regions
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceDeleted)) {
		query["ResourceDeleted"] = request.ResourceDeleted
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypes)) {
		query["ResourceTypes"] = request.ResourceTypes
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GenerateAggregateResourceInventory"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GenerateAggregateResourceInventoryResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GenerateAggregateResourceInventoryResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Generates a downloadable inventory for global resources in an account group.
//
// Description:
//
// This topic provides an example to show how to generate a downloadable inventory for global resources in the account group ca-a91d626622af0035\\*\\*\\*\\*.
//
// @param request - GenerateAggregateResourceInventoryRequest
//
// @return GenerateAggregateResourceInventoryResponse
func (client *Client) GenerateAggregateResourceInventory(request *GenerateAggregateResourceInventoryRequest) (_result *GenerateAggregateResourceInventoryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GenerateAggregateResourceInventoryResponse{}
	_body, _err := client.GenerateAggregateResourceInventoryWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Generates a compliance evaluation report based on a compliance package.
//
// Description:
//
// > You can call this operation to generate the latest compliance evaluation report. To download the report, call the GetCompliancePackReport operation. For more information, see [GetCompliancePackReport](https://help.aliyun.com/document_detail/263347.html).
//
// This topic provides an example on how to generate a compliance evaluation report based on the `cp-a8a8626622af0082****` compliance package.
//
// @param request - GenerateCompliancePackReportRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GenerateCompliancePackReportResponse
func (client *Client) GenerateCompliancePackReportWithOptions(request *GenerateCompliancePackReportRequest, runtime *util.RuntimeOptions) (_result *GenerateCompliancePackReportResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		body["CompliancePackId"] = request.CompliancePackId
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("GenerateCompliancePackReport"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GenerateCompliancePackReportResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GenerateCompliancePackReportResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Generates a compliance evaluation report based on a compliance package.
//
// Description:
//
// > You can call this operation to generate the latest compliance evaluation report. To download the report, call the GetCompliancePackReport operation. For more information, see [GetCompliancePackReport](https://help.aliyun.com/document_detail/263347.html).
//
// This topic provides an example on how to generate a compliance evaluation report based on the `cp-a8a8626622af0082****` compliance package.
//
// @param request - GenerateCompliancePackReportRequest
//
// @return GenerateCompliancePackReportResponse
func (client *Client) GenerateCompliancePackReport(request *GenerateCompliancePackReportRequest) (_result *GenerateCompliancePackReportResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GenerateCompliancePackReportResponse{}
	_body, _err := client.GenerateCompliancePackReportWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Generates a compliance evaluation report for a rule.
//
// Description:
//
// >  You can call this operation to generate the latest compliance evaluation report. To download the report, call the GetConfigRulesReport operation. For more information, see [GetConfigRulesReport](https://help.aliyun.com/document_detail/263608.html).
//
// This topic provides an example of how to generate a compliance evaluation report based on all existing rules.
//
// @param request - GenerateConfigRulesReportRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GenerateConfigRulesReportResponse
func (client *Client) GenerateConfigRulesReportWithOptions(request *GenerateConfigRulesReportRequest, runtime *util.RuntimeOptions) (_result *GenerateConfigRulesReportResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		body["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("GenerateConfigRulesReport"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GenerateConfigRulesReportResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GenerateConfigRulesReportResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Generates a compliance evaluation report for a rule.
//
// Description:
//
// >  You can call this operation to generate the latest compliance evaluation report. To download the report, call the GetConfigRulesReport operation. For more information, see [GetConfigRulesReport](https://help.aliyun.com/document_detail/263608.html).
//
// This topic provides an example of how to generate a compliance evaluation report based on all existing rules.
//
// @param request - GenerateConfigRulesReportRequest
//
// @return GenerateConfigRulesReportResponse
func (client *Client) GenerateConfigRulesReport(request *GenerateConfigRulesReportRequest) (_result *GenerateConfigRulesReportResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GenerateConfigRulesReportResponse{}
	_body, _err := client.GenerateConfigRulesReportWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Generates a resource inventory for global resources.
//
// Description:
//
// This topic provides an example on how to generate a resource inventory for global resources of the current account.
//
// @param request - GenerateResourceInventoryRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GenerateResourceInventoryResponse
func (client *Client) GenerateResourceInventoryWithOptions(request *GenerateResourceInventoryRequest, runtime *util.RuntimeOptions) (_result *GenerateResourceInventoryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Regions)) {
		query["Regions"] = request.Regions
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceDeleted)) {
		query["ResourceDeleted"] = request.ResourceDeleted
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypes)) {
		query["ResourceTypes"] = request.ResourceTypes
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GenerateResourceInventory"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GenerateResourceInventoryResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GenerateResourceInventoryResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Generates a resource inventory for global resources.
//
// Description:
//
// This topic provides an example on how to generate a resource inventory for global resources of the current account.
//
// @param request - GenerateResourceInventoryRequest
//
// @return GenerateResourceInventoryResponse
func (client *Client) GenerateResourceInventory(request *GenerateResourceInventoryRequest) (_result *GenerateResourceInventoryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GenerateResourceInventoryResponse{}
	_body, _err := client.GenerateResourceInventoryWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the last resource advanced search file that is generated within the current account. You can call this operation to obtain the URL of the resource advanced search file.
//
// Description:
//
// ### [](#)Prerequisites
//
// You must call the [CreateAdvancedSearchFile](https://help.aliyun.com/document_detail/2511967.html) operation to create a resource advanced search file. Then, you can call this operation to obtain the URL of the resource advanced search file.
//
// @param request - GetAdvancedSearchFileRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAdvancedSearchFileResponse
func (client *Client) GetAdvancedSearchFileWithOptions(runtime *util.RuntimeOptions) (_result *GetAdvancedSearchFileResponse, _err error) {
	req := &openapi.OpenApiRequest{}
	params := &openapi.Params{
		Action:      tea.String("GetAdvancedSearchFile"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAdvancedSearchFileResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAdvancedSearchFileResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Obtains the last resource advanced search file that is generated within the current account. You can call this operation to obtain the URL of the resource advanced search file.
//
// Description:
//
// ### [](#)Prerequisites
//
// You must call the [CreateAdvancedSearchFile](https://help.aliyun.com/document_detail/2511967.html) operation to create a resource advanced search file. Then, you can call this operation to obtain the URL of the resource advanced search file.
//
// @return GetAdvancedSearchFileResponse
func (client *Client) GetAdvancedSearchFile() (_result *GetAdvancedSearchFileResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAdvancedSearchFileResponse{}
	_body, _err := client.GetAdvancedSearchFileWithOptions(runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance evaluation results of member accounts for which a compliance package takes effect in an account group.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation results of member accounts for which the `cp-541e626622af0087****` compliance package takes effect in the `ca-04b3fd170e340007****` account group. The returned result shows that two member accounts are monitored by the compliance package and they are both evaluated as compliant.
//
// @param request - GetAggregateAccountComplianceByPackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateAccountComplianceByPackResponse
func (client *Client) GetAggregateAccountComplianceByPackWithOptions(request *GetAggregateAccountComplianceByPackRequest, runtime *util.RuntimeOptions) (_result *GetAggregateAccountComplianceByPackResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateAccountComplianceByPack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateAccountComplianceByPackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateAccountComplianceByPackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance evaluation results of member accounts for which a compliance package takes effect in an account group.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation results of member accounts for which the `cp-541e626622af0087****` compliance package takes effect in the `ca-04b3fd170e340007****` account group. The returned result shows that two member accounts are monitored by the compliance package and they are both evaluated as compliant.
//
// @param request - GetAggregateAccountComplianceByPackRequest
//
// @return GetAggregateAccountComplianceByPackResponse
func (client *Client) GetAggregateAccountComplianceByPack(request *GetAggregateAccountComplianceByPackRequest) (_result *GetAggregateAccountComplianceByPackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateAccountComplianceByPackResponse{}
	_body, _err := client.GetAggregateAccountComplianceByPackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the most recently generated resource file of an account group.
//
// @param request - GetAggregateAdvancedSearchFileRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateAdvancedSearchFileResponse
func (client *Client) GetAggregateAdvancedSearchFileWithOptions(request *GetAggregateAdvancedSearchFileRequest, runtime *util.RuntimeOptions) (_result *GetAggregateAdvancedSearchFileResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateAdvancedSearchFile"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateAdvancedSearchFileResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateAdvancedSearchFileResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the most recently generated resource file of an account group.
//
// @param request - GetAggregateAdvancedSearchFileRequest
//
// @return GetAggregateAdvancedSearchFileResponse
func (client *Client) GetAggregateAdvancedSearchFile(request *GetAggregateAdvancedSearchFileRequest) (_result *GetAggregateAdvancedSearchFileResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateAdvancedSearchFileResponse{}
	_body, _err := client.GetAggregateAdvancedSearchFileWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the details of a compliance package in an account group.
//
// Description:
//
// The topic provides an example on how to query the details of a compliance package whose ID is `cp-fdc8626622af00f9****` in an account group whose ID is `ca-f632626622af0079****`.
//
// @param tmpReq - GetAggregateCompliancePackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateCompliancePackResponse
func (client *Client) GetAggregateCompliancePackWithOptions(tmpReq *GetAggregateCompliancePackRequest, runtime *util.RuntimeOptions) (_result *GetAggregateCompliancePackResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &GetAggregateCompliancePackShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateCompliancePack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateCompliancePackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateCompliancePackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the details of a compliance package in an account group.
//
// Description:
//
// The topic provides an example on how to query the details of a compliance package whose ID is `cp-fdc8626622af00f9****` in an account group whose ID is `ca-f632626622af0079****`.
//
// @param request - GetAggregateCompliancePackRequest
//
// @return GetAggregateCompliancePackResponse
func (client *Client) GetAggregateCompliancePack(request *GetAggregateCompliancePackRequest) (_result *GetAggregateCompliancePackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateCompliancePackResponse{}
	_body, _err := client.GetAggregateCompliancePackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance evaluation report that is generated based on a compliance package of an account group.
//
// Description:
//
// > Before you call this operation, you must call the GenerateAggregateCompliancePackReport operation to generate the latest compliance evaluation report based on a compliance package. For more information, see [GenerateAggregateCompliancePackReport](https://help.aliyun.com/document_detail/262687.html).
//
// This topic provides an example on how to query the compliance evaluation report that is generated based on the `cp-fdc8626622af00f9****` compliance package in the `ca-f632626622af0079****` account group.
//
// @param request - GetAggregateCompliancePackReportRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateCompliancePackReportResponse
func (client *Client) GetAggregateCompliancePackReportWithOptions(request *GetAggregateCompliancePackReportRequest, runtime *util.RuntimeOptions) (_result *GetAggregateCompliancePackReportResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateCompliancePackReport"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateCompliancePackReportResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateCompliancePackReportResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance evaluation report that is generated based on a compliance package of an account group.
//
// Description:
//
// > Before you call this operation, you must call the GenerateAggregateCompliancePackReport operation to generate the latest compliance evaluation report based on a compliance package. For more information, see [GenerateAggregateCompliancePackReport](https://help.aliyun.com/document_detail/262687.html).
//
// This topic provides an example on how to query the compliance evaluation report that is generated based on the `cp-fdc8626622af00f9****` compliance package in the `ca-f632626622af0079****` account group.
//
// @param request - GetAggregateCompliancePackReportRequest
//
// @return GetAggregateCompliancePackReportResponse
func (client *Client) GetAggregateCompliancePackReport(request *GetAggregateCompliancePackReportRequest) (_result *GetAggregateCompliancePackReportResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateCompliancePackReportResponse{}
	_body, _err := client.GetAggregateCompliancePackReportWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance statistics of an account group.
//
// Description:
//
// This topic provides an example on how to query the compliance statistics of resources and rules in the account group ca-a91d626622af0035\\*\\*\\*\\*.
//
// @param request - GetAggregateComplianceSummaryRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateComplianceSummaryResponse
func (client *Client) GetAggregateComplianceSummaryWithOptions(request *GetAggregateComplianceSummaryRequest, runtime *util.RuntimeOptions) (_result *GetAggregateComplianceSummaryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateComplianceSummary"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateComplianceSummaryResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateComplianceSummaryResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance statistics of an account group.
//
// Description:
//
// This topic provides an example on how to query the compliance statistics of resources and rules in the account group ca-a91d626622af0035\\*\\*\\*\\*.
//
// @param request - GetAggregateComplianceSummaryRequest
//
// @return GetAggregateComplianceSummaryResponse
func (client *Client) GetAggregateComplianceSummary(request *GetAggregateComplianceSummaryRequest) (_result *GetAggregateComplianceSummaryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateComplianceSummaryResponse{}
	_body, _err := client.GetAggregateComplianceSummaryWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the information about a delivery channel in an account group.
//
// @param request - GetAggregateConfigDeliveryChannelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateConfigDeliveryChannelResponse
func (client *Client) GetAggregateConfigDeliveryChannelWithOptions(request *GetAggregateConfigDeliveryChannelRequest, runtime *util.RuntimeOptions) (_result *GetAggregateConfigDeliveryChannelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelId)) {
		query["DeliveryChannelId"] = request.DeliveryChannelId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateConfigDeliveryChannel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateConfigDeliveryChannelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateConfigDeliveryChannelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the information about a delivery channel in an account group.
//
// @param request - GetAggregateConfigDeliveryChannelRequest
//
// @return GetAggregateConfigDeliveryChannelResponse
func (client *Client) GetAggregateConfigDeliveryChannel(request *GetAggregateConfigDeliveryChannelRequest) (_result *GetAggregateConfigDeliveryChannelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateConfigDeliveryChannelResponse{}
	_body, _err := client.GetAggregateConfigDeliveryChannelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the details of a rule in an account group.
//
// Description:
//
// This example shows how to query the details of the `cr-7f7d626622af0041****` rule in the `ca-7f00626622af0041****` account group.
//
// @param tmpReq - GetAggregateConfigRuleRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateConfigRuleResponse
func (client *Client) GetAggregateConfigRuleWithOptions(tmpReq *GetAggregateConfigRuleRequest, runtime *util.RuntimeOptions) (_result *GetAggregateConfigRuleResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &GetAggregateConfigRuleShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		query["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateConfigRule"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateConfigRuleResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateConfigRuleResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the details of a rule in an account group.
//
// Description:
//
// This example shows how to query the details of the `cr-7f7d626622af0041****` rule in the `ca-7f00626622af0041****` account group.
//
// @param request - GetAggregateConfigRuleRequest
//
// @return GetAggregateConfigRuleResponse
func (client *Client) GetAggregateConfigRule(request *GetAggregateConfigRuleRequest) (_result *GetAggregateConfigRuleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateConfigRuleResponse{}
	_body, _err := client.GetAggregateConfigRuleWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries compliance evaluation results based on the rules in a compliance package in an account group.
//
// Description:
//
// The sample request in this topic shows you how to query the compliance evaluation results based on rules in the `cp-541e626622af0087****` compliance package that is created for the `ca-04b3fd170e340007****` account group. The return result shows a total of `one` rule. `No resources` are evaluated as non-compliant based on the rule.
//
// @param request - GetAggregateConfigRuleComplianceByPackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateConfigRuleComplianceByPackResponse
func (client *Client) GetAggregateConfigRuleComplianceByPackWithOptions(request *GetAggregateConfigRuleComplianceByPackRequest, runtime *util.RuntimeOptions) (_result *GetAggregateConfigRuleComplianceByPackResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateConfigRuleComplianceByPack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateConfigRuleComplianceByPackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateConfigRuleComplianceByPackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries compliance evaluation results based on the rules in a compliance package in an account group.
//
// Description:
//
// The sample request in this topic shows you how to query the compliance evaluation results based on rules in the `cp-541e626622af0087****` compliance package that is created for the `ca-04b3fd170e340007****` account group. The return result shows a total of `one` rule. `No resources` are evaluated as non-compliant based on the rule.
//
// @param request - GetAggregateConfigRuleComplianceByPackRequest
//
// @return GetAggregateConfigRuleComplianceByPackResponse
func (client *Client) GetAggregateConfigRuleComplianceByPack(request *GetAggregateConfigRuleComplianceByPackRequest) (_result *GetAggregateConfigRuleComplianceByPackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateConfigRuleComplianceByPackResponse{}
	_body, _err := client.GetAggregateConfigRuleComplianceByPackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the summary of compliance evaluation results by rule risk level in an account group.
//
// Description:
//
// This topic provides an example on how to query the summary of compliance evaluation results by rule risk level in the `ca-3a58626622af0005****` account group. The returned result shows four rules that are specified with the high risk level. One of the rules detects non-compliant resources, and the resources evaluated by the remaining three are compliant.
//
// @param request - GetAggregateConfigRuleSummaryByRiskLevelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateConfigRuleSummaryByRiskLevelResponse
func (client *Client) GetAggregateConfigRuleSummaryByRiskLevelWithOptions(request *GetAggregateConfigRuleSummaryByRiskLevelRequest, runtime *util.RuntimeOptions) (_result *GetAggregateConfigRuleSummaryByRiskLevelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateConfigRuleSummaryByRiskLevel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateConfigRuleSummaryByRiskLevelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateConfigRuleSummaryByRiskLevelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the summary of compliance evaluation results by rule risk level in an account group.
//
// Description:
//
// This topic provides an example on how to query the summary of compliance evaluation results by rule risk level in the `ca-3a58626622af0005****` account group. The returned result shows four rules that are specified with the high risk level. One of the rules detects non-compliant resources, and the resources evaluated by the remaining three are compliant.
//
// @param request - GetAggregateConfigRuleSummaryByRiskLevelRequest
//
// @return GetAggregateConfigRuleSummaryByRiskLevelResponse
func (client *Client) GetAggregateConfigRuleSummaryByRiskLevel(request *GetAggregateConfigRuleSummaryByRiskLevelRequest) (_result *GetAggregateConfigRuleSummaryByRiskLevelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateConfigRuleSummaryByRiskLevelResponse{}
	_body, _err := client.GetAggregateConfigRuleSummaryByRiskLevelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Downloads the compliance evaluation report in the Excel format to your on-premises machine. This allows you to assign tasks and modify incompliant resource configurations.
//
// Description:
//
// > Before you call this operation, you must call the GenerateAggregateConfigRulesReport operation to generate the latest compliance evaluation report based on all rules in an account group. For more information, see [GenerateAggregateConfigRulesReport](https://help.aliyun.com/document_detail/262701.html).
//
// This topic provides an example on how to query the compliance evaluation report that is generated based on all rules in the `ca-f632626622af0079****` account group.
//
// @param request - GetAggregateConfigRulesReportRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateConfigRulesReportResponse
func (client *Client) GetAggregateConfigRulesReportWithOptions(request *GetAggregateConfigRulesReportRequest, runtime *util.RuntimeOptions) (_result *GetAggregateConfigRulesReportResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ReportId)) {
		query["ReportId"] = request.ReportId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateConfigRulesReport"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateConfigRulesReportResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateConfigRulesReportResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Downloads the compliance evaluation report in the Excel format to your on-premises machine. This allows you to assign tasks and modify incompliant resource configurations.
//
// Description:
//
// > Before you call this operation, you must call the GenerateAggregateConfigRulesReport operation to generate the latest compliance evaluation report based on all rules in an account group. For more information, see [GenerateAggregateConfigRulesReport](https://help.aliyun.com/document_detail/262701.html).
//
// This topic provides an example on how to query the compliance evaluation report that is generated based on all rules in the `ca-f632626622af0079****` account group.
//
// @param request - GetAggregateConfigRulesReportRequest
//
// @return GetAggregateConfigRulesReportResponse
func (client *Client) GetAggregateConfigRulesReport(request *GetAggregateConfigRulesReportRequest) (_result *GetAggregateConfigRulesReportResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateConfigRulesReportResponse{}
	_body, _err := client.GetAggregateConfigRulesReportWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the details of a specific resource in an account group.
//
// Description:
//
// This topic provides an example on how to query the details of an Elastic Compute Service (ECS) instance `i-bp12g4xbl4i0brkn****` that resides in the China (Hangzhou) region in the account group `ca-5885626622af0008****`.
//
// @param request - GetAggregateDiscoveredResourceRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateDiscoveredResourceResponse
func (client *Client) GetAggregateDiscoveredResourceWithOptions(request *GetAggregateDiscoveredResourceRequest, runtime *util.RuntimeOptions) (_result *GetAggregateDiscoveredResourceResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ComplianceOption)) {
		query["ComplianceOption"] = request.ComplianceOption
	}

	if !tea.BoolValue(util.IsUnset(request.Region)) {
		query["Region"] = request.Region
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceAccountId)) {
		query["ResourceAccountId"] = request.ResourceAccountId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		query["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceOwnerId)) {
		query["ResourceOwnerId"] = request.ResourceOwnerId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateDiscoveredResource"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateDiscoveredResourceResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateDiscoveredResourceResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the details of a specific resource in an account group.
//
// Description:
//
// This topic provides an example on how to query the details of an Elastic Compute Service (ECS) instance `i-bp12g4xbl4i0brkn****` that resides in the China (Hangzhou) region in the account group `ca-5885626622af0008****`.
//
// @param request - GetAggregateDiscoveredResourceRequest
//
// @return GetAggregateDiscoveredResourceResponse
func (client *Client) GetAggregateDiscoveredResource(request *GetAggregateDiscoveredResourceRequest) (_result *GetAggregateDiscoveredResourceResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateDiscoveredResourceResponse{}
	_body, _err := client.GetAggregateDiscoveredResourceWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries compliance evaluation results based on the rules in a compliance package in an account group.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation results based on the `cr-d369626622af008e****` rule in the `ca-a4e5626622af0079****` account group. The returned result shows that a total of 10 resources are evaluated by the rule and five of them are evaluated as compliant.
//
// @param request - GetAggregateResourceComplianceByConfigRuleRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateResourceComplianceByConfigRuleResponse
func (client *Client) GetAggregateResourceComplianceByConfigRuleWithOptions(request *GetAggregateResourceComplianceByConfigRuleRequest, runtime *util.RuntimeOptions) (_result *GetAggregateResourceComplianceByConfigRuleResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ComplianceType)) {
		query["ComplianceType"] = request.ComplianceType
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		query["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceAccountId)) {
		query["ResourceAccountId"] = request.ResourceAccountId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceOwnerId)) {
		query["ResourceOwnerId"] = request.ResourceOwnerId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateResourceComplianceByConfigRule"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateResourceComplianceByConfigRuleResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateResourceComplianceByConfigRuleResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries compliance evaluation results based on the rules in a compliance package in an account group.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation results based on the `cr-d369626622af008e****` rule in the `ca-a4e5626622af0079****` account group. The returned result shows that a total of 10 resources are evaluated by the rule and five of them are evaluated as compliant.
//
// @param request - GetAggregateResourceComplianceByConfigRuleRequest
//
// @return GetAggregateResourceComplianceByConfigRuleResponse
func (client *Client) GetAggregateResourceComplianceByConfigRule(request *GetAggregateResourceComplianceByConfigRuleRequest) (_result *GetAggregateResourceComplianceByConfigRuleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateResourceComplianceByConfigRuleResponse{}
	_body, _err := client.GetAggregateResourceComplianceByConfigRuleWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance evaluation results of resources evaluated based on a compliance package of an account group.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation results of resources monitored based on the `cp-fdc8626622af00f9****` compliance package in the `ca-f632626622af0079****`account group. The returned result shows that the total number of monitored resources is `10` and the number of non-compliant resources is `7`.
//
// @param request - GetAggregateResourceComplianceByPackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateResourceComplianceByPackResponse
func (client *Client) GetAggregateResourceComplianceByPackWithOptions(request *GetAggregateResourceComplianceByPackRequest, runtime *util.RuntimeOptions) (_result *GetAggregateResourceComplianceByPackResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateResourceComplianceByPack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateResourceComplianceByPackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateResourceComplianceByPackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance evaluation results of resources evaluated based on a compliance package of an account group.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation results of resources monitored based on the `cp-fdc8626622af00f9****` compliance package in the `ca-f632626622af0079****`account group. The returned result shows that the total number of monitored resources is `10` and the number of non-compliant resources is `7`.
//
// @param request - GetAggregateResourceComplianceByPackRequest
//
// @return GetAggregateResourceComplianceByPackResponse
func (client *Client) GetAggregateResourceComplianceByPack(request *GetAggregateResourceComplianceByPackRequest) (_result *GetAggregateResourceComplianceByPackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateResourceComplianceByPackResponse{}
	_body, _err := client.GetAggregateResourceComplianceByPackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the evaluation results grouped by resource type for an account group rule.
//
// @param request - GetAggregateResourceComplianceGroupByRegionRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateResourceComplianceGroupByRegionResponse
func (client *Client) GetAggregateResourceComplianceGroupByRegionWithOptions(request *GetAggregateResourceComplianceGroupByRegionRequest, runtime *util.RuntimeOptions) (_result *GetAggregateResourceComplianceGroupByRegionResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateResourceComplianceGroupByRegion"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateResourceComplianceGroupByRegionResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateResourceComplianceGroupByRegionResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the evaluation results grouped by resource type for an account group rule.
//
// @param request - GetAggregateResourceComplianceGroupByRegionRequest
//
// @return GetAggregateResourceComplianceGroupByRegionResponse
func (client *Client) GetAggregateResourceComplianceGroupByRegion(request *GetAggregateResourceComplianceGroupByRegionRequest) (_result *GetAggregateResourceComplianceGroupByRegionResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateResourceComplianceGroupByRegionResponse{}
	_body, _err := client.GetAggregateResourceComplianceGroupByRegionWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the evaluation results grouped by resource type for an account group rule.
//
// @param request - GetAggregateResourceComplianceGroupByResourceTypeRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateResourceComplianceGroupByResourceTypeResponse
func (client *Client) GetAggregateResourceComplianceGroupByResourceTypeWithOptions(request *GetAggregateResourceComplianceGroupByResourceTypeRequest, runtime *util.RuntimeOptions) (_result *GetAggregateResourceComplianceGroupByResourceTypeResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateResourceComplianceGroupByResourceType"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateResourceComplianceGroupByResourceTypeResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateResourceComplianceGroupByResourceTypeResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the evaluation results grouped by resource type for an account group rule.
//
// @param request - GetAggregateResourceComplianceGroupByResourceTypeRequest
//
// @return GetAggregateResourceComplianceGroupByResourceTypeResponse
func (client *Client) GetAggregateResourceComplianceGroupByResourceType(request *GetAggregateResourceComplianceGroupByResourceTypeRequest) (_result *GetAggregateResourceComplianceGroupByResourceTypeResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateResourceComplianceGroupByResourceTypeResponse{}
	_body, _err := client.GetAggregateResourceComplianceGroupByResourceTypeWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance timeline of a resource in an account group.
//
// Description:
//
// The sample request in this topic shows you how to query the compliance timeline of the `new-bucket` resource that resides in the `cn-hangzhou` region within the `100931896542****` member account of the `ca-5885626622af0008****` account group. The new-bucket resource is an Object Storage Service (OSS) bucket. The return result shows the following two timestamps on the compliance timeline: `1625200295276` and `1625200228510`. The first timestamp indicates 12:31:35 on July 2, 2021 (UTC+8), and the second timestamp indicates 12:30:28 on July 2, 2021 (UTC+8).
//
// @param request - GetAggregateResourceComplianceTimelineRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateResourceComplianceTimelineResponse
func (client *Client) GetAggregateResourceComplianceTimelineWithOptions(request *GetAggregateResourceComplianceTimelineRequest, runtime *util.RuntimeOptions) (_result *GetAggregateResourceComplianceTimelineResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateResourceComplianceTimeline"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateResourceComplianceTimelineResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateResourceComplianceTimelineResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance timeline of a resource in an account group.
//
// Description:
//
// The sample request in this topic shows you how to query the compliance timeline of the `new-bucket` resource that resides in the `cn-hangzhou` region within the `100931896542****` member account of the `ca-5885626622af0008****` account group. The new-bucket resource is an Object Storage Service (OSS) bucket. The return result shows the following two timestamps on the compliance timeline: `1625200295276` and `1625200228510`. The first timestamp indicates 12:31:35 on July 2, 2021 (UTC+8), and the second timestamp indicates 12:30:28 on July 2, 2021 (UTC+8).
//
// @param request - GetAggregateResourceComplianceTimelineRequest
//
// @return GetAggregateResourceComplianceTimelineResponse
func (client *Client) GetAggregateResourceComplianceTimeline(request *GetAggregateResourceComplianceTimelineRequest) (_result *GetAggregateResourceComplianceTimelineResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateResourceComplianceTimelineResponse{}
	_body, _err := client.GetAggregateResourceComplianceTimelineWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the configuration timeline of a resource in an account group.
//
// Description:
//
// The sample request in this topic shows you how to query the configuration timeline of the `new-bucket` resource that resides in the `cn-hangzhou` region within the `100931896542****` member account of the `ca-5885626622af0008****` account group. The new-bucket resource is an Object Storage Service (OSS) bucket. The return result shows that the timestamp when the resource configuration changes is `1624961112000`. The timestamp indicates 18:05:12 on June 29, 2021 (UTC+8).
//
// @param request - GetAggregateResourceConfigurationTimelineRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateResourceConfigurationTimelineResponse
func (client *Client) GetAggregateResourceConfigurationTimelineWithOptions(request *GetAggregateResourceConfigurationTimelineRequest, runtime *util.RuntimeOptions) (_result *GetAggregateResourceConfigurationTimelineResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateResourceConfigurationTimeline"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateResourceConfigurationTimelineResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateResourceConfigurationTimelineResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the configuration timeline of a resource in an account group.
//
// Description:
//
// The sample request in this topic shows you how to query the configuration timeline of the `new-bucket` resource that resides in the `cn-hangzhou` region within the `100931896542****` member account of the `ca-5885626622af0008****` account group. The new-bucket resource is an Object Storage Service (OSS) bucket. The return result shows that the timestamp when the resource configuration changes is `1624961112000`. The timestamp indicates 18:05:12 on June 29, 2021 (UTC+8).
//
// @param request - GetAggregateResourceConfigurationTimelineRequest
//
// @return GetAggregateResourceConfigurationTimelineResponse
func (client *Client) GetAggregateResourceConfigurationTimeline(request *GetAggregateResourceConfigurationTimelineRequest) (_result *GetAggregateResourceConfigurationTimelineResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateResourceConfigurationTimelineResponse{}
	_body, _err := client.GetAggregateResourceConfigurationTimelineWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the statistics on the resources in an account group by region.
//
// Description:
//
// This topic provides an example on how to query the statistics on the resources in an account group named `ca-a260626622af0005****` by region. The returned result shows that a total of `10` resources exist in the `cn-hangzhou` region.
//
// @param request - GetAggregateResourceCountsGroupByRegionRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateResourceCountsGroupByRegionResponse
func (client *Client) GetAggregateResourceCountsGroupByRegionWithOptions(request *GetAggregateResourceCountsGroupByRegionRequest, runtime *util.RuntimeOptions) (_result *GetAggregateResourceCountsGroupByRegionResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.FolderId)) {
		query["FolderId"] = request.FolderId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceAccountId)) {
		query["ResourceAccountId"] = request.ResourceAccountId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceOwnerId)) {
		query["ResourceOwnerId"] = request.ResourceOwnerId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateResourceCountsGroupByRegion"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateResourceCountsGroupByRegionResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateResourceCountsGroupByRegionResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the statistics on the resources in an account group by region.
//
// Description:
//
// This topic provides an example on how to query the statistics on the resources in an account group named `ca-a260626622af0005****` by region. The returned result shows that a total of `10` resources exist in the `cn-hangzhou` region.
//
// @param request - GetAggregateResourceCountsGroupByRegionRequest
//
// @return GetAggregateResourceCountsGroupByRegionResponse
func (client *Client) GetAggregateResourceCountsGroupByRegion(request *GetAggregateResourceCountsGroupByRegionRequest) (_result *GetAggregateResourceCountsGroupByRegionResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateResourceCountsGroupByRegionResponse{}
	_body, _err := client.GetAggregateResourceCountsGroupByRegionWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the statistics on the resources in an account group by resource type.
//
// Description:
//
// This topic provides an example on how to query the statistics on the resources in an account group whose ID is `ca-a260626622af0005****` by resource type. The returned result shows that the account group has a total of `seven` resources of the `ACS::RAM::Role` resource type.
//
// @param request - GetAggregateResourceCountsGroupByResourceTypeRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateResourceCountsGroupByResourceTypeResponse
func (client *Client) GetAggregateResourceCountsGroupByResourceTypeWithOptions(request *GetAggregateResourceCountsGroupByResourceTypeRequest, runtime *util.RuntimeOptions) (_result *GetAggregateResourceCountsGroupByResourceTypeResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.FolderId)) {
		query["FolderId"] = request.FolderId
	}

	if !tea.BoolValue(util.IsUnset(request.Region)) {
		query["Region"] = request.Region
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceAccountId)) {
		query["ResourceAccountId"] = request.ResourceAccountId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceOwnerId)) {
		query["ResourceOwnerId"] = request.ResourceOwnerId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateResourceCountsGroupByResourceType"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateResourceCountsGroupByResourceTypeResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateResourceCountsGroupByResourceTypeResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the statistics on the resources in an account group by resource type.
//
// Description:
//
// This topic provides an example on how to query the statistics on the resources in an account group whose ID is `ca-a260626622af0005****` by resource type. The returned result shows that the account group has a total of `seven` resources of the `ACS::RAM::Role` resource type.
//
// @param request - GetAggregateResourceCountsGroupByResourceTypeRequest
//
// @return GetAggregateResourceCountsGroupByResourceTypeResponse
func (client *Client) GetAggregateResourceCountsGroupByResourceType(request *GetAggregateResourceCountsGroupByResourceTypeRequest) (_result *GetAggregateResourceCountsGroupByResourceTypeResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateResourceCountsGroupByResourceTypeResponse{}
	_body, _err := client.GetAggregateResourceCountsGroupByResourceTypeWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the last resource inventory that is generated on the Global Resources page within the current account group.
//
// Description:
//
// ### [](#)Prerequisites
//
// The [GenerateAggregateResourceInventory](https://help.aliyun.com/document_detail/2398353.html) operation is called to generate a resource inventory. Then, this operation is called to obtain the URL of the resource inventory.
//
// ### [](#)Description
//
// This topic provides an example on how to obtain the last resource inventory that is generated within the account group ca-a91d626622af0035\\*\\*\\*\\*.
//
// @param request - GetAggregateResourceInventoryRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregateResourceInventoryResponse
func (client *Client) GetAggregateResourceInventoryWithOptions(request *GetAggregateResourceInventoryRequest, runtime *util.RuntimeOptions) (_result *GetAggregateResourceInventoryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregateResourceInventory"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregateResourceInventoryResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregateResourceInventoryResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Obtains the last resource inventory that is generated on the Global Resources page within the current account group.
//
// Description:
//
// ### [](#)Prerequisites
//
// The [GenerateAggregateResourceInventory](https://help.aliyun.com/document_detail/2398353.html) operation is called to generate a resource inventory. Then, this operation is called to obtain the URL of the resource inventory.
//
// ### [](#)Description
//
// This topic provides an example on how to obtain the last resource inventory that is generated within the account group ca-a91d626622af0035\\*\\*\\*\\*.
//
// @param request - GetAggregateResourceInventoryRequest
//
// @return GetAggregateResourceInventoryResponse
func (client *Client) GetAggregateResourceInventory(request *GetAggregateResourceInventoryRequest) (_result *GetAggregateResourceInventoryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregateResourceInventoryResponse{}
	_body, _err := client.GetAggregateResourceInventoryWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the details of an account group. You can query the name, creation time, member, and type of an account group.
//
// Description:
//
// The sample request in this topic shows you how to query the details of the `ca-88ea626622af0055****` account group. The return result shows that the account group is named `Test_Group`, its description is `Test account group`, and it is of the `CUSTOM` type. The account group is in the `1` state, which indicates that it is created.
//
// @param tmpReq - GetAggregatorRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAggregatorResponse
func (client *Client) GetAggregatorWithOptions(tmpReq *GetAggregatorRequest, runtime *util.RuntimeOptions) (_result *GetAggregatorResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &GetAggregatorShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAggregator"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetAggregatorResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetAggregatorResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the details of an account group. You can query the name, creation time, member, and type of an account group.
//
// Description:
//
// The sample request in this topic shows you how to query the details of the `ca-88ea626622af0055****` account group. The return result shows that the account group is named `Test_Group`, its description is `Test account group`, and it is of the `CUSTOM` type. The account group is in the `1` state, which indicates that it is created.
//
// @param request - GetAggregatorRequest
//
// @return GetAggregatorResponse
func (client *Client) GetAggregator(request *GetAggregatorRequest) (_result *GetAggregatorResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAggregatorResponse{}
	_body, _err := client.GetAggregatorWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the details of a compliance package.
//
// Description:
//
// This topic provides an example on how to query the details of a compliance package whose ID is `cp-fdc8626622af00f9****`. The returned result shows that the name of the compliance package is `ClassifiedProtectionPreCheck`, the compliance package is in the `ACTIVE` state, and the risk level of the rules in the compliance package is `1`, which indicates high risk level.
//
// @param tmpReq - GetCompliancePackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetCompliancePackResponse
func (client *Client) GetCompliancePackWithOptions(tmpReq *GetCompliancePackRequest, runtime *util.RuntimeOptions) (_result *GetCompliancePackResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &GetCompliancePackShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetCompliancePack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetCompliancePackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetCompliancePackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the details of a compliance package.
//
// Description:
//
// This topic provides an example on how to query the details of a compliance package whose ID is `cp-fdc8626622af00f9****`. The returned result shows that the name of the compliance package is `ClassifiedProtectionPreCheck`, the compliance package is in the `ACTIVE` state, and the risk level of the rules in the compliance package is `1`, which indicates high risk level.
//
// @param request - GetCompliancePackRequest
//
// @return GetCompliancePackResponse
func (client *Client) GetCompliancePack(request *GetCompliancePackRequest) (_result *GetCompliancePackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetCompliancePackResponse{}
	_body, _err := client.GetCompliancePackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance evaluation report that is generated based on a compliance package.
//
// Description:
//
// > Before you call this operation, you must call the GenerateCompliancePackReport operation to generate the latest compliance evaluation report based on a compliance package. For more information, see [GenerateCompliancePackReport](https://help.aliyun.com/document_detail/263525.html).
//
// This topic provides an example on how to query the compliance evaluation report that is generated based on the `cp-fdc8626622af00f9****` compliance package.
//
// @param request - GetCompliancePackReportRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetCompliancePackReportResponse
func (client *Client) GetCompliancePackReportWithOptions(request *GetCompliancePackReportRequest, runtime *util.RuntimeOptions) (_result *GetCompliancePackReportResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetCompliancePackReport"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetCompliancePackReportResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetCompliancePackReportResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance evaluation report that is generated based on a compliance package.
//
// Description:
//
// > Before you call this operation, you must call the GenerateCompliancePackReport operation to generate the latest compliance evaluation report based on a compliance package. For more information, see [GenerateCompliancePackReport](https://help.aliyun.com/document_detail/263525.html).
//
// This topic provides an example on how to query the compliance evaluation report that is generated based on the `cp-fdc8626622af00f9****` compliance package.
//
// @param request - GetCompliancePackReportRequest
//
// @return GetCompliancePackReportResponse
func (client *Client) GetCompliancePackReport(request *GetCompliancePackReportRequest) (_result *GetCompliancePackReportResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetCompliancePackReportResponse{}
	_body, _err := client.GetCompliancePackReportWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the summary of compliance statistics within the current account.
//
// Description:
//
// This topic provides an example on how to query the compliance statistics of resources and rules in the current account group.
//
// @param request - GetComplianceSummaryRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetComplianceSummaryResponse
func (client *Client) GetComplianceSummaryWithOptions(runtime *util.RuntimeOptions) (_result *GetComplianceSummaryResponse, _err error) {
	req := &openapi.OpenApiRequest{}
	params := &openapi.Params{
		Action:      tea.String("GetComplianceSummary"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetComplianceSummaryResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetComplianceSummaryResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the summary of compliance statistics within the current account.
//
// Description:
//
// This topic provides an example on how to query the compliance statistics of resources and rules in the current account group.
//
// @return GetComplianceSummaryResponse
func (client *Client) GetComplianceSummary() (_result *GetComplianceSummaryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetComplianceSummaryResponse{}
	_body, _err := client.GetComplianceSummaryWithOptions(runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the information about a delivery channel.
//
// @param request - GetConfigDeliveryChannelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetConfigDeliveryChannelResponse
func (client *Client) GetConfigDeliveryChannelWithOptions(request *GetConfigDeliveryChannelRequest, runtime *util.RuntimeOptions) (_result *GetConfigDeliveryChannelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelId)) {
		query["DeliveryChannelId"] = request.DeliveryChannelId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetConfigDeliveryChannel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetConfigDeliveryChannelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetConfigDeliveryChannelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the information about a delivery channel.
//
// @param request - GetConfigDeliveryChannelRequest
//
// @return GetConfigDeliveryChannelResponse
func (client *Client) GetConfigDeliveryChannel(request *GetConfigDeliveryChannelRequest) (_result *GetConfigDeliveryChannelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetConfigDeliveryChannelResponse{}
	_body, _err := client.GetConfigDeliveryChannelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the details of a rule.
//
// Description:
//
// This topic provides an example on how to query the details of the `cr-7f7d626622af0041****` rule.
//
// @param tmpReq - GetConfigRuleRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetConfigRuleResponse
func (client *Client) GetConfigRuleWithOptions(tmpReq *GetConfigRuleRequest, runtime *util.RuntimeOptions) (_result *GetConfigRuleResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &GetConfigRuleShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		query["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetConfigRule"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetConfigRuleResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetConfigRuleResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the details of a rule.
//
// Description:
//
// This topic provides an example on how to query the details of the `cr-7f7d626622af0041****` rule.
//
// @param request - GetConfigRuleRequest
//
// @return GetConfigRuleResponse
func (client *Client) GetConfigRule(request *GetConfigRuleRequest) (_result *GetConfigRuleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetConfigRuleResponse{}
	_body, _err := client.GetConfigRuleWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries compliance evaluation results based on the rules in a compliance package.
//
// Description:
//
// In this topic, the `cp-541e626622af0087****` compliance package is used as an example. The return result shows a total of one rule against which specific resources are evaluated as compliant.
//
// @param request - GetConfigRuleComplianceByPackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetConfigRuleComplianceByPackResponse
func (client *Client) GetConfigRuleComplianceByPackWithOptions(request *GetConfigRuleComplianceByPackRequest, runtime *util.RuntimeOptions) (_result *GetConfigRuleComplianceByPackResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetConfigRuleComplianceByPack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetConfigRuleComplianceByPackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetConfigRuleComplianceByPackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries compliance evaluation results based on the rules in a compliance package.
//
// Description:
//
// In this topic, the `cp-541e626622af0087****` compliance package is used as an example. The return result shows a total of one rule against which specific resources are evaluated as compliant.
//
// @param request - GetConfigRuleComplianceByPackRequest
//
// @return GetConfigRuleComplianceByPackResponse
func (client *Client) GetConfigRuleComplianceByPack(request *GetConfigRuleComplianceByPackRequest) (_result *GetConfigRuleComplianceByPackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetConfigRuleComplianceByPackResponse{}
	_body, _err := client.GetConfigRuleComplianceByPackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance summary based on the risk level of a rule.
//
// Description:
//
// This topic provides an example of how to query the summary of compliance evaluation results by rule risk level. The return result shows four rules that are specified with the high risk level. One of them detects non-compliant resources, and the resources evaluated by the remaining three are all compliant.
//
// @param request - GetConfigRuleSummaryByRiskLevelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetConfigRuleSummaryByRiskLevelResponse
func (client *Client) GetConfigRuleSummaryByRiskLevelWithOptions(runtime *util.RuntimeOptions) (_result *GetConfigRuleSummaryByRiskLevelResponse, _err error) {
	req := &openapi.OpenApiRequest{}
	params := &openapi.Params{
		Action:      tea.String("GetConfigRuleSummaryByRiskLevel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetConfigRuleSummaryByRiskLevelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetConfigRuleSummaryByRiskLevelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance summary based on the risk level of a rule.
//
// Description:
//
// This topic provides an example of how to query the summary of compliance evaluation results by rule risk level. The return result shows four rules that are specified with the high risk level. One of them detects non-compliant resources, and the resources evaluated by the remaining three are all compliant.
//
// @return GetConfigRuleSummaryByRiskLevelResponse
func (client *Client) GetConfigRuleSummaryByRiskLevel() (_result *GetConfigRuleSummaryByRiskLevelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetConfigRuleSummaryByRiskLevelResponse{}
	_body, _err := client.GetConfigRuleSummaryByRiskLevelWithOptions(runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Downloads the compliance evaluation report in the Excel format to your on-premises machine. This allows you to assign tasks and modify incompliant resource configurations.
//
// Description:
//
// >  Before you call this operation, you must call the GenerateConfigRulesReport operation to generate the latest compliance evaluation report based on all existing rules. For more information, see [GenerateConfigRulesReport](https://help.aliyun.com/document_detail/263601.html).
//
// This topic provides an example of how to query the compliance evaluation report that is generated based on all existing rules.
//
// @param request - GetConfigRulesReportRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetConfigRulesReportResponse
func (client *Client) GetConfigRulesReportWithOptions(request *GetConfigRulesReportRequest, runtime *util.RuntimeOptions) (_result *GetConfigRulesReportResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ReportId)) {
		query["ReportId"] = request.ReportId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetConfigRulesReport"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetConfigRulesReportResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetConfigRulesReportResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Downloads the compliance evaluation report in the Excel format to your on-premises machine. This allows you to assign tasks and modify incompliant resource configurations.
//
// Description:
//
// >  Before you call this operation, you must call the GenerateConfigRulesReport operation to generate the latest compliance evaluation report based on all existing rules. For more information, see [GenerateConfigRulesReport](https://help.aliyun.com/document_detail/263601.html).
//
// This topic provides an example of how to query the compliance evaluation report that is generated based on all existing rules.
//
// @param request - GetConfigRulesReportRequest
//
// @return GetConfigRulesReportResponse
func (client *Client) GetConfigRulesReport(request *GetConfigRulesReportRequest) (_result *GetConfigRulesReportResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetConfigRulesReportResponse{}
	_body, _err := client.GetConfigRulesReportWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the activation status and resource monitoring scope of Cloud Config for the current account.
//
// Description:
//
// This topic provides an example on how to query the activation status and resource monitoring scope of Cloud Config for the current account.
//
// @param request - GetConfigurationRecorderRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetConfigurationRecorderResponse
func (client *Client) GetConfigurationRecorderWithOptions(runtime *util.RuntimeOptions) (_result *GetConfigurationRecorderResponse, _err error) {
	req := &openapi.OpenApiRequest{}
	params := &openapi.Params{
		Action:      tea.String("GetConfigurationRecorder"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetConfigurationRecorderResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetConfigurationRecorderResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the activation status and resource monitoring scope of Cloud Config for the current account.
//
// Description:
//
// This topic provides an example on how to query the activation status and resource monitoring scope of Cloud Config for the current account.
//
// @return GetConfigurationRecorderResponse
func (client *Client) GetConfigurationRecorder() (_result *GetConfigurationRecorderResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetConfigurationRecorderResponse{}
	_body, _err := client.GetConfigurationRecorderWithOptions(runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the details of a specific resource.
//
// Description:
//
// This topic provides an example on how to query the details of the Elastic Compute Service (ECS) instance `i-bp12g4xbl4i0brkn****` that resides in the China (Hangzhou) region.
//
// @param request - GetDiscoveredResourceRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDiscoveredResourceResponse
func (client *Client) GetDiscoveredResourceWithOptions(request *GetDiscoveredResourceRequest, runtime *util.RuntimeOptions) (_result *GetDiscoveredResourceResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ComplianceOption)) {
		query["ComplianceOption"] = request.ComplianceOption
	}

	if !tea.BoolValue(util.IsUnset(request.Region)) {
		query["Region"] = request.Region
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		query["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDiscoveredResource"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetDiscoveredResourceResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetDiscoveredResourceResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the details of a specific resource.
//
// Description:
//
// This topic provides an example on how to query the details of the Elastic Compute Service (ECS) instance `i-bp12g4xbl4i0brkn****` that resides in the China (Hangzhou) region.
//
// @param request - GetDiscoveredResourceRequest
//
// @return GetDiscoveredResourceResponse
func (client *Client) GetDiscoveredResource(request *GetDiscoveredResourceRequest) (_result *GetDiscoveredResourceResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDiscoveredResourceResponse{}
	_body, _err := client.GetDiscoveredResourceWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the statistics on resources by region.
//
// Description:
//
// This topic provides an example to demonstrate how to query the statistics on resources by region. The returned result shows that a total of 10 resources exist in the `cn-hangzhou` region.
//
// @param request - GetDiscoveredResourceCountsGroupByRegionRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDiscoveredResourceCountsGroupByRegionResponse
func (client *Client) GetDiscoveredResourceCountsGroupByRegionWithOptions(request *GetDiscoveredResourceCountsGroupByRegionRequest, runtime *util.RuntimeOptions) (_result *GetDiscoveredResourceCountsGroupByRegionResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDiscoveredResourceCountsGroupByRegion"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetDiscoveredResourceCountsGroupByRegionResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetDiscoveredResourceCountsGroupByRegionResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the statistics on resources by region.
//
// Description:
//
// This topic provides an example to demonstrate how to query the statistics on resources by region. The returned result shows that a total of 10 resources exist in the `cn-hangzhou` region.
//
// @param request - GetDiscoveredResourceCountsGroupByRegionRequest
//
// @return GetDiscoveredResourceCountsGroupByRegionResponse
func (client *Client) GetDiscoveredResourceCountsGroupByRegion(request *GetDiscoveredResourceCountsGroupByRegionRequest) (_result *GetDiscoveredResourceCountsGroupByRegionResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDiscoveredResourceCountsGroupByRegionResponse{}
	_body, _err := client.GetDiscoveredResourceCountsGroupByRegionWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the statistics on resources by resource type.
//
// Description:
//
// This topic describes how to query the statistics on resources by resource type. The returned result shows that a total of 10 resources of the `ACS::ECS::Instance` resource type exist.
//
// @param request - GetDiscoveredResourceCountsGroupByResourceTypeRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDiscoveredResourceCountsGroupByResourceTypeResponse
func (client *Client) GetDiscoveredResourceCountsGroupByResourceTypeWithOptions(request *GetDiscoveredResourceCountsGroupByResourceTypeRequest, runtime *util.RuntimeOptions) (_result *GetDiscoveredResourceCountsGroupByResourceTypeResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Region)) {
		query["Region"] = request.Region
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDiscoveredResourceCountsGroupByResourceType"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetDiscoveredResourceCountsGroupByResourceTypeResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetDiscoveredResourceCountsGroupByResourceTypeResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the statistics on resources by resource type.
//
// Description:
//
// This topic describes how to query the statistics on resources by resource type. The returned result shows that a total of 10 resources of the `ACS::ECS::Instance` resource type exist.
//
// @param request - GetDiscoveredResourceCountsGroupByResourceTypeRequest
//
// @return GetDiscoveredResourceCountsGroupByResourceTypeResponse
func (client *Client) GetDiscoveredResourceCountsGroupByResourceType(request *GetDiscoveredResourceCountsGroupByResourceTypeRequest) (_result *GetDiscoveredResourceCountsGroupByResourceTypeResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDiscoveredResourceCountsGroupByResourceTypeResponse{}
	_body, _err := client.GetDiscoveredResourceCountsGroupByResourceTypeWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the integration status of a specific cloud service.
//
// @param request - GetIntegratedServiceStatusRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetIntegratedServiceStatusResponse
func (client *Client) GetIntegratedServiceStatusWithOptions(request *GetIntegratedServiceStatusRequest, runtime *util.RuntimeOptions) (_result *GetIntegratedServiceStatusResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ServiceCode)) {
		body["ServiceCode"] = request.ServiceCode
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("GetIntegratedServiceStatus"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetIntegratedServiceStatusResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetIntegratedServiceStatusResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the integration status of a specific cloud service.
//
// @param request - GetIntegratedServiceStatusRequest
//
// @return GetIntegratedServiceStatusResponse
func (client *Client) GetIntegratedServiceStatus(request *GetIntegratedServiceStatusRequest) (_result *GetIntegratedServiceStatusResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetIntegratedServiceStatusResponse{}
	_body, _err := client.GetIntegratedServiceStatusWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the details of a specific managed rule.
//
// Description:
//
// This topic provides an example on how to query the details of the managed rule `cdn-domain-https-enabled`.
//
// @param request - GetManagedRuleRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetManagedRuleResponse
func (client *Client) GetManagedRuleWithOptions(request *GetManagedRuleRequest, runtime *util.RuntimeOptions) (_result *GetManagedRuleResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Identifier)) {
		query["Identifier"] = request.Identifier
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetManagedRule"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetManagedRuleResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetManagedRuleResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the details of a specific managed rule.
//
// Description:
//
// This topic provides an example on how to query the details of the managed rule `cdn-domain-https-enabled`.
//
// @param request - GetManagedRuleRequest
//
// @return GetManagedRuleResponse
func (client *Client) GetManagedRule(request *GetManagedRuleRequest) (_result *GetManagedRuleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetManagedRuleResponse{}
	_body, _err := client.GetManagedRuleWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the details of an automatic remediation template.
//
// Description:
//
// This topic provides an example on how to query the details of the automatic remediation template ACS-ALB-BulkyEnableDeletionProtection.
//
// @param request - GetRemediationTemplateRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetRemediationTemplateResponse
func (client *Client) GetRemediationTemplateWithOptions(request *GetRemediationTemplateRequest, runtime *util.RuntimeOptions) (_result *GetRemediationTemplateResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.TemplateIdentifier)) {
		query["TemplateIdentifier"] = request.TemplateIdentifier
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetRemediationTemplate"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetRemediationTemplateResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetRemediationTemplateResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the details of an automatic remediation template.
//
// Description:
//
// This topic provides an example on how to query the details of the automatic remediation template ACS-ALB-BulkyEnableDeletionProtection.
//
// @param request - GetRemediationTemplateRequest
//
// @return GetRemediationTemplateResponse
func (client *Client) GetRemediationTemplate(request *GetRemediationTemplateRequest) (_result *GetRemediationTemplateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetRemediationTemplateResponse{}
	_body, _err := client.GetRemediationTemplateWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance summary based on the compliance evaluation result of a rule.
//
// Description:
//
// In this topic, the `cr-d369626622af008e****` rule is used as an example. The return result shows that a total of 10 resources are evaluated by the rule and `five` of them are evaluated as compliant.
//
// @param request - GetResourceComplianceByConfigRuleRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetResourceComplianceByConfigRuleResponse
func (client *Client) GetResourceComplianceByConfigRuleWithOptions(request *GetResourceComplianceByConfigRuleRequest, runtime *util.RuntimeOptions) (_result *GetResourceComplianceByConfigRuleResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetResourceComplianceByConfigRule"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetResourceComplianceByConfigRuleResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetResourceComplianceByConfigRuleResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance summary based on the compliance evaluation result of a rule.
//
// Description:
//
// In this topic, the `cr-d369626622af008e****` rule is used as an example. The return result shows that a total of 10 resources are evaluated by the rule and `five` of them are evaluated as compliant.
//
// @param request - GetResourceComplianceByConfigRuleRequest
//
// @return GetResourceComplianceByConfigRuleResponse
func (client *Client) GetResourceComplianceByConfigRule(request *GetResourceComplianceByConfigRuleRequest) (_result *GetResourceComplianceByConfigRuleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetResourceComplianceByConfigRuleResponse{}
	_body, _err := client.GetResourceComplianceByConfigRuleWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance evaluation results of resources evaluated based on a compliance package.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation results of resources monitored by using the `cp-541e626622af0087****` compliance package. The returned result shows a total of 10 resources and seven of them are evaluated as non-compliant.
//
// @param request - GetResourceComplianceByPackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetResourceComplianceByPackResponse
func (client *Client) GetResourceComplianceByPackWithOptions(request *GetResourceComplianceByPackRequest, runtime *util.RuntimeOptions) (_result *GetResourceComplianceByPackResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetResourceComplianceByPack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetResourceComplianceByPackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetResourceComplianceByPackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance evaluation results of resources evaluated based on a compliance package.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation results of resources monitored by using the `cp-541e626622af0087****` compliance package. The returned result shows a total of 10 resources and seven of them are evaluated as non-compliant.
//
// @param request - GetResourceComplianceByPackRequest
//
// @return GetResourceComplianceByPackResponse
func (client *Client) GetResourceComplianceByPack(request *GetResourceComplianceByPackRequest) (_result *GetResourceComplianceByPackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetResourceComplianceByPackResponse{}
	_body, _err := client.GetResourceComplianceByPackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the evaluation results grouped by region for a rule.
//
// @param request - GetResourceComplianceGroupByRegionRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetResourceComplianceGroupByRegionResponse
func (client *Client) GetResourceComplianceGroupByRegionWithOptions(request *GetResourceComplianceGroupByRegionRequest, runtime *util.RuntimeOptions) (_result *GetResourceComplianceGroupByRegionResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetResourceComplianceGroupByRegion"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetResourceComplianceGroupByRegionResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetResourceComplianceGroupByRegionResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the evaluation results grouped by region for a rule.
//
// @param request - GetResourceComplianceGroupByRegionRequest
//
// @return GetResourceComplianceGroupByRegionResponse
func (client *Client) GetResourceComplianceGroupByRegion(request *GetResourceComplianceGroupByRegionRequest) (_result *GetResourceComplianceGroupByRegionResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetResourceComplianceGroupByRegionResponse{}
	_body, _err := client.GetResourceComplianceGroupByRegionWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the evaluation results grouped by resource type for a rule.
//
// @param request - GetResourceComplianceGroupByResourceTypeRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetResourceComplianceGroupByResourceTypeResponse
func (client *Client) GetResourceComplianceGroupByResourceTypeWithOptions(request *GetResourceComplianceGroupByResourceTypeRequest, runtime *util.RuntimeOptions) (_result *GetResourceComplianceGroupByResourceTypeResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetResourceComplianceGroupByResourceType"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetResourceComplianceGroupByResourceTypeResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetResourceComplianceGroupByResourceTypeResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the evaluation results grouped by resource type for a rule.
//
// @param request - GetResourceComplianceGroupByResourceTypeRequest
//
// @return GetResourceComplianceGroupByResourceTypeResponse
func (client *Client) GetResourceComplianceGroupByResourceType(request *GetResourceComplianceGroupByResourceTypeRequest) (_result *GetResourceComplianceGroupByResourceTypeResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetResourceComplianceGroupByResourceTypeResponse{}
	_body, _err := client.GetResourceComplianceGroupByResourceTypeWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance timeline of a resource. The compliance timeline of a resource indicates the compliance evaluation record of the resource. A compliance timeline includes points and the content on the compliance timeline.
//
// Description:
//
// In Cloud Config, each resource has a compliance timeline. Cloud Config generates a compliance evaluation record for a resource each time the resource is evaluated based on a rule. The compliance evaluation records of a resource are displayed in a compliance timeline. You can configure Cloud Config to execute a rule to evaluate a resource on a regular basis or each time you change the resource configuration. You can also manually execute a rule to evaluate a resource.
//
// This topic provides an example on how to query the compliance timeline of the `new-bucket` resource that resides in the `cn-hangzhou` region. The resource is an Object Storage Service (OSS) bucket. The returned result shows the following two timestamps on the compliance timeline: `1625200295276` and `1625200228510`. The first timestamp indicates 12:31:35 on July 2, 2021 (UTC+8) and the second timestamp indicates 12:30:28 on July 2, 2021 (UTC+8).
//
// @param request - GetResourceComplianceTimelineRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetResourceComplianceTimelineResponse
func (client *Client) GetResourceComplianceTimelineWithOptions(request *GetResourceComplianceTimelineRequest, runtime *util.RuntimeOptions) (_result *GetResourceComplianceTimelineResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetResourceComplianceTimeline"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetResourceComplianceTimelineResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetResourceComplianceTimelineResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance timeline of a resource. The compliance timeline of a resource indicates the compliance evaluation record of the resource. A compliance timeline includes points and the content on the compliance timeline.
//
// Description:
//
// In Cloud Config, each resource has a compliance timeline. Cloud Config generates a compliance evaluation record for a resource each time the resource is evaluated based on a rule. The compliance evaluation records of a resource are displayed in a compliance timeline. You can configure Cloud Config to execute a rule to evaluate a resource on a regular basis or each time you change the resource configuration. You can also manually execute a rule to evaluate a resource.
//
// This topic provides an example on how to query the compliance timeline of the `new-bucket` resource that resides in the `cn-hangzhou` region. The resource is an Object Storage Service (OSS) bucket. The returned result shows the following two timestamps on the compliance timeline: `1625200295276` and `1625200228510`. The first timestamp indicates 12:31:35 on July 2, 2021 (UTC+8) and the second timestamp indicates 12:30:28 on July 2, 2021 (UTC+8).
//
// @param request - GetResourceComplianceTimelineRequest
//
// @return GetResourceComplianceTimelineResponse
func (client *Client) GetResourceComplianceTimeline(request *GetResourceComplianceTimelineRequest) (_result *GetResourceComplianceTimelineResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetResourceComplianceTimelineResponse{}
	_body, _err := client.GetResourceComplianceTimelineWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the configuration timeline of a resource.
//
// Description:
//
// The sample request in this topic shows you how to query the configuration timeline of the `new-bucket` resource that resides in the `cn-hangzhou` region. The new-bucket resource is an Object Storage Service (OSS) bucket. The return result shows that the timestamp when the resource configuration changes is `1624961112000`. The timestamp indicates 18:05:12 on June 29, 2021 (UTC+8).
//
// @param request - GetResourceConfigurationTimelineRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetResourceConfigurationTimelineResponse
func (client *Client) GetResourceConfigurationTimelineWithOptions(request *GetResourceConfigurationTimelineRequest, runtime *util.RuntimeOptions) (_result *GetResourceConfigurationTimelineResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetResourceConfigurationTimeline"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetResourceConfigurationTimelineResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetResourceConfigurationTimelineResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the configuration timeline of a resource.
//
// Description:
//
// The sample request in this topic shows you how to query the configuration timeline of the `new-bucket` resource that resides in the `cn-hangzhou` region. The new-bucket resource is an Object Storage Service (OSS) bucket. The return result shows that the timestamp when the resource configuration changes is `1624961112000`. The timestamp indicates 18:05:12 on June 29, 2021 (UTC+8).
//
// @param request - GetResourceConfigurationTimelineRequest
//
// @return GetResourceConfigurationTimelineResponse
func (client *Client) GetResourceConfigurationTimeline(request *GetResourceConfigurationTimelineRequest) (_result *GetResourceConfigurationTimelineResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetResourceConfigurationTimelineResponse{}
	_body, _err := client.GetResourceConfigurationTimelineWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the last resource inventory that is generated within the current Alibaba Cloud account.
//
// Description:
//
// ### [](#)Prerequisites
//
// You can call the [GenerateResourceInventory](https://help.aliyun.com/document_detail/2398354.html) operation to generate a resource inventory. Then, you can call the GetResourceInventory operation to obtain the URL of the resource inventory.
//
// ### [](#)Description
//
// This topic provides an example on how to obtain the last resource inventory that is generated within the current Alibaba Cloud account.
//
// @param request - GetResourceInventoryRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetResourceInventoryResponse
func (client *Client) GetResourceInventoryWithOptions(runtime *util.RuntimeOptions) (_result *GetResourceInventoryResponse, _err error) {
	req := &openapi.OpenApiRequest{}
	params := &openapi.Params{
		Action:      tea.String("GetResourceInventory"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetResourceInventoryResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetResourceInventoryResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Obtains the last resource inventory that is generated within the current Alibaba Cloud account.
//
// Description:
//
// ### [](#)Prerequisites
//
// You can call the [GenerateResourceInventory](https://help.aliyun.com/document_detail/2398354.html) operation to generate a resource inventory. Then, you can call the GetResourceInventory operation to obtain the URL of the resource inventory.
//
// ### [](#)Description
//
// This topic provides an example on how to obtain the last resource inventory that is generated within the current Alibaba Cloud account.
//
// @return GetResourceInventoryResponse
func (client *Client) GetResourceInventory() (_result *GetResourceInventoryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetResourceInventoryResponse{}
	_body, _err := client.GetResourceInventoryWithOptions(runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the resource relationships supported by a resource type.
//
// Description:
//
// This topic provides an example to show how to query the resource relationships that are supported by the ACS::ECS::Instance resource type.
//
// @param request - GetSupportedResourceRelationConfigRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetSupportedResourceRelationConfigResponse
func (client *Client) GetSupportedResourceRelationConfigWithOptions(request *GetSupportedResourceRelationConfigRequest, runtime *util.RuntimeOptions) (_result *GetSupportedResourceRelationConfigResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetSupportedResourceRelationConfig"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &GetSupportedResourceRelationConfigResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &GetSupportedResourceRelationConfigResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the resource relationships supported by a resource type.
//
// Description:
//
// This topic provides an example to show how to query the resource relationships that are supported by the ACS::ECS::Instance resource type.
//
// @param request - GetSupportedResourceRelationConfigRequest
//
// @return GetSupportedResourceRelationConfigResponse
func (client *Client) GetSupportedResourceRelationConfig(request *GetSupportedResourceRelationConfigRequest) (_result *GetSupportedResourceRelationConfigResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetSupportedResourceRelationConfigResponse{}
	_body, _err := client.GetSupportedResourceRelationConfigWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Ignores the evaluation results of some resources in an account group based on a specific rule. You can also specify a time period for ignoring the evaluation results. After the period elapses, the evaluation results of the resources based on the rule are automatically displayed.
//
// Description:
//
// After you ignore a resource that is evaluated as incompliant by using a rule, the resource is still evaluated by using the rule, but the compliance result is Ignored.
//
// This example shows how to ignore the `lb-hp3a3b4ztyfm2plgm****` incompliant resource that is evaluated by using the `cr-7e72626622af0051***` rule in the `120886317861****` member account of the `ca-5b6c626622af008f****` account group. The ID of the region where the resource resides is `cn-beijing`, and the type of the resource is `ACS::SLB::LoadBalancer`.
//
// @param tmpReq - IgnoreAggregateEvaluationResultsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IgnoreAggregateEvaluationResultsResponse
func (client *Client) IgnoreAggregateEvaluationResultsWithOptions(tmpReq *IgnoreAggregateEvaluationResultsRequest, runtime *util.RuntimeOptions) (_result *IgnoreAggregateEvaluationResultsResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &IgnoreAggregateEvaluationResultsShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Resources)) {
		request.ResourcesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Resources, tea.String("Resources"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		body["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.IgnoreDate)) {
		body["IgnoreDate"] = request.IgnoreDate
	}

	if !tea.BoolValue(util.IsUnset(request.Reason)) {
		body["Reason"] = request.Reason
	}

	if !tea.BoolValue(util.IsUnset(request.ResourcesShrink)) {
		body["Resources"] = request.ResourcesShrink
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("IgnoreAggregateEvaluationResults"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &IgnoreAggregateEvaluationResultsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &IgnoreAggregateEvaluationResultsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Ignores the evaluation results of some resources in an account group based on a specific rule. You can also specify a time period for ignoring the evaluation results. After the period elapses, the evaluation results of the resources based on the rule are automatically displayed.
//
// Description:
//
// After you ignore a resource that is evaluated as incompliant by using a rule, the resource is still evaluated by using the rule, but the compliance result is Ignored.
//
// This example shows how to ignore the `lb-hp3a3b4ztyfm2plgm****` incompliant resource that is evaluated by using the `cr-7e72626622af0051***` rule in the `120886317861****` member account of the `ca-5b6c626622af008f****` account group. The ID of the region where the resource resides is `cn-beijing`, and the type of the resource is `ACS::SLB::LoadBalancer`.
//
// @param request - IgnoreAggregateEvaluationResultsRequest
//
// @return IgnoreAggregateEvaluationResultsResponse
func (client *Client) IgnoreAggregateEvaluationResults(request *IgnoreAggregateEvaluationResultsRequest) (_result *IgnoreAggregateEvaluationResultsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &IgnoreAggregateEvaluationResultsResponse{}
	_body, _err := client.IgnoreAggregateEvaluationResultsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Ignores the evaluation results of some resources based on a specific rule. You can also specify a time period for ignoring the evaluation results. After the period elapses, the evaluation results of the resources based on the rule are automatically displayed.
//
// Description:
//
// After you ignore a resource that is evaluated as incompliant by using a rule, the resource is still evaluated by using the rule, but the compliance result is Ignored.
//
// This example shows how to ignore the `lb-hp3a3b4ztyfm2plgm****` resource that is evaluated as incompliant by using the `cr-7e72626622af0051****` rule in the `100931896542****` account. The ID of the region in which the resource resides is `cn-beijing`, and the type of the resource is `ACS::SLB::LoadBalancer`.
//
// @param tmpReq - IgnoreEvaluationResultsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IgnoreEvaluationResultsResponse
func (client *Client) IgnoreEvaluationResultsWithOptions(tmpReq *IgnoreEvaluationResultsRequest, runtime *util.RuntimeOptions) (_result *IgnoreEvaluationResultsResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &IgnoreEvaluationResultsShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Resources)) {
		request.ResourcesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Resources, tea.String("Resources"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		body["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.IgnoreDate)) {
		body["IgnoreDate"] = request.IgnoreDate
	}

	if !tea.BoolValue(util.IsUnset(request.Reason)) {
		body["Reason"] = request.Reason
	}

	if !tea.BoolValue(util.IsUnset(request.ResourcesShrink)) {
		body["Resources"] = request.ResourcesShrink
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("IgnoreEvaluationResults"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &IgnoreEvaluationResultsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &IgnoreEvaluationResultsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Ignores the evaluation results of some resources based on a specific rule. You can also specify a time period for ignoring the evaluation results. After the period elapses, the evaluation results of the resources based on the rule are automatically displayed.
//
// Description:
//
// After you ignore a resource that is evaluated as incompliant by using a rule, the resource is still evaluated by using the rule, but the compliance result is Ignored.
//
// This example shows how to ignore the `lb-hp3a3b4ztyfm2plgm****` resource that is evaluated as incompliant by using the `cr-7e72626622af0051****` rule in the `100931896542****` account. The ID of the region in which the resource resides is `cn-beijing`, and the type of the resource is `ACS::SLB::LoadBalancer`.
//
// @param request - IgnoreEvaluationResultsRequest
//
// @return IgnoreEvaluationResultsResponse
func (client *Client) IgnoreEvaluationResults(request *IgnoreEvaluationResultsRequest) (_result *IgnoreEvaluationResultsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &IgnoreEvaluationResultsResponse{}
	_body, _err := client.IgnoreEvaluationResultsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of compliance packages in an account group.
//
// Description:
//
// In this topic, the `ca-f632626622af0079****` account group is used as an example. The return result shows one compliance package whose ID is `cp-fdc8626622af00f9****`.
//
// @param tmpReq - ListAggregateCompliancePacksRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateCompliancePacksResponse
func (client *Client) ListAggregateCompliancePacksWithOptions(tmpReq *ListAggregateCompliancePacksRequest, runtime *util.RuntimeOptions) (_result *ListAggregateCompliancePacksResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ListAggregateCompliancePacksShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.PageNumber)) {
		query["PageNumber"] = request.PageNumber
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["PageSize"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		query["Status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateCompliancePacks"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateCompliancePacksResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateCompliancePacksResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of compliance packages in an account group.
//
// Description:
//
// In this topic, the `ca-f632626622af0079****` account group is used as an example. The return result shows one compliance package whose ID is `cp-fdc8626622af00f9****`.
//
// @param request - ListAggregateCompliancePacksRequest
//
// @return ListAggregateCompliancePacksResponse
func (client *Client) ListAggregateCompliancePacks(request *ListAggregateCompliancePacksRequest) (_result *ListAggregateCompliancePacksResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateCompliancePacksResponse{}
	_body, _err := client.ListAggregateCompliancePacksWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the information about all delivery channels in an account group.
//
// @param request - ListAggregateConfigDeliveryChannelsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateConfigDeliveryChannelsResponse
func (client *Client) ListAggregateConfigDeliveryChannelsWithOptions(request *ListAggregateConfigDeliveryChannelsRequest, runtime *util.RuntimeOptions) (_result *ListAggregateConfigDeliveryChannelsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelIds)) {
		query["DeliveryChannelIds"] = request.DeliveryChannelIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateConfigDeliveryChannels"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateConfigDeliveryChannelsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateConfigDeliveryChannelsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the information about all delivery channels in an account group.
//
// @param request - ListAggregateConfigDeliveryChannelsRequest
//
// @return ListAggregateConfigDeliveryChannelsResponse
func (client *Client) ListAggregateConfigDeliveryChannels(request *ListAggregateConfigDeliveryChannelsRequest) (_result *ListAggregateConfigDeliveryChannelsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateConfigDeliveryChannelsResponse{}
	_body, _err := client.ListAggregateConfigDeliveryChannelsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance evaluation results of resources based on a rule in an account group.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation results of resources based on the `cr-888f626622af00ae****` rule in the `ca-d1e3326622af00cb****` account group. The returned result indicates that the `Bucket-test` resource is evaluated as `NON_COMPLIANT` by using the rule. The resource is an Object Storage Service (OSS) bucket.
//
// @param request - ListAggregateConfigRuleEvaluationResultsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateConfigRuleEvaluationResultsResponse
func (client *Client) ListAggregateConfigRuleEvaluationResultsWithOptions(request *ListAggregateConfigRuleEvaluationResultsRequest, runtime *util.RuntimeOptions) (_result *ListAggregateConfigRuleEvaluationResultsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ComplianceType)) {
		query["ComplianceType"] = request.ComplianceType
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		query["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.Regions)) {
		query["Regions"] = request.Regions
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceAccountId)) {
		query["ResourceAccountId"] = request.ResourceAccountId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupIds)) {
		query["ResourceGroupIds"] = request.ResourceGroupIds
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceOwnerId)) {
		query["ResourceOwnerId"] = request.ResourceOwnerId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypes)) {
		query["ResourceTypes"] = request.ResourceTypes
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateConfigRuleEvaluationResults"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateConfigRuleEvaluationResultsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateConfigRuleEvaluationResultsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance evaluation results of resources based on a rule in an account group.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation results of resources based on the `cr-888f626622af00ae****` rule in the `ca-d1e3326622af00cb****` account group. The returned result indicates that the `Bucket-test` resource is evaluated as `NON_COMPLIANT` by using the rule. The resource is an Object Storage Service (OSS) bucket.
//
// @param request - ListAggregateConfigRuleEvaluationResultsRequest
//
// @return ListAggregateConfigRuleEvaluationResultsResponse
func (client *Client) ListAggregateConfigRuleEvaluationResults(request *ListAggregateConfigRuleEvaluationResultsRequest) (_result *ListAggregateConfigRuleEvaluationResultsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateConfigRuleEvaluationResultsResponse{}
	_body, _err := client.ListAggregateConfigRuleEvaluationResultsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the statistics of compliance evaluation results of an account group.
//
// Description:
//
// This topic provides an example on how to query the statistics of compliance evaluation results of an account group whose ID is ca-edd3626622af00b3\\*\\*\\*\\*.
//
// @param request - ListAggregateConfigRuleEvaluationStatisticsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateConfigRuleEvaluationStatisticsResponse
func (client *Client) ListAggregateConfigRuleEvaluationStatisticsWithOptions(request *ListAggregateConfigRuleEvaluationStatisticsRequest, runtime *util.RuntimeOptions) (_result *ListAggregateConfigRuleEvaluationStatisticsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateConfigRuleEvaluationStatistics"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateConfigRuleEvaluationStatisticsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateConfigRuleEvaluationStatisticsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the statistics of compliance evaluation results of an account group.
//
// Description:
//
// This topic provides an example on how to query the statistics of compliance evaluation results of an account group whose ID is ca-edd3626622af00b3\\*\\*\\*\\*.
//
// @param request - ListAggregateConfigRuleEvaluationStatisticsRequest
//
// @return ListAggregateConfigRuleEvaluationStatisticsResponse
func (client *Client) ListAggregateConfigRuleEvaluationStatistics(request *ListAggregateConfigRuleEvaluationStatisticsRequest) (_result *ListAggregateConfigRuleEvaluationStatisticsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateConfigRuleEvaluationStatisticsResponse{}
	_body, _err := client.ListAggregateConfigRuleEvaluationStatisticsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of rules in an account group.
//
// Description:
//
// This topic provides an example on how to query the rules in an account group whose ID is `ca-f632626622af0079****`. The returned result shows a total of one rule and two evaluated resources. The resources are both evaluated as `COMPLIANT`.
//
// @param tmpReq - ListAggregateConfigRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateConfigRulesResponse
func (client *Client) ListAggregateConfigRulesWithOptions(tmpReq *ListAggregateConfigRulesRequest, runtime *util.RuntimeOptions) (_result *ListAggregateConfigRulesResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ListAggregateConfigRulesShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ComplianceType)) {
		query["ComplianceType"] = request.ComplianceType
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleName)) {
		query["ConfigRuleName"] = request.ConfigRuleName
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleState)) {
		query["ConfigRuleState"] = request.ConfigRuleState
	}

	if !tea.BoolValue(util.IsUnset(request.Keyword)) {
		query["Keyword"] = request.Keyword
	}

	if !tea.BoolValue(util.IsUnset(request.PageNumber)) {
		query["PageNumber"] = request.PageNumber
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["PageSize"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypes)) {
		query["ResourceTypes"] = request.ResourceTypes
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		query["RiskLevel"] = request.RiskLevel
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateConfigRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateConfigRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateConfigRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of rules in an account group.
//
// Description:
//
// This topic provides an example on how to query the rules in an account group whose ID is `ca-f632626622af0079****`. The returned result shows a total of one rule and two evaluated resources. The resources are both evaluated as `COMPLIANT`.
//
// @param request - ListAggregateConfigRulesRequest
//
// @return ListAggregateConfigRulesResponse
func (client *Client) ListAggregateConfigRules(request *ListAggregateConfigRulesRequest) (_result *ListAggregateConfigRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateConfigRulesResponse{}
	_body, _err := client.ListAggregateConfigRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains a list of resources aggregated across regions within all member accounts of a specific account group.
//
// Description:
//
// This topic provides an example on how to query the resources within the member account `100931896542****` of the account group `ca-c560626622af0005****`. The result indicates that eight resources are queried.
//
// @param request - ListAggregateDiscoveredResourcesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateDiscoveredResourcesResponse
func (client *Client) ListAggregateDiscoveredResourcesWithOptions(request *ListAggregateDiscoveredResourcesRequest, runtime *util.RuntimeOptions) (_result *ListAggregateDiscoveredResourcesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.EndUpdateTimestamp)) {
		query["EndUpdateTimestamp"] = request.EndUpdateTimestamp
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceTypes)) {
		query["ExcludeResourceTypes"] = request.ExcludeResourceTypes
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.Regions)) {
		query["Regions"] = request.Regions
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceAccountId)) {
		query["ResourceAccountId"] = request.ResourceAccountId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceDeleted)) {
		query["ResourceDeleted"] = request.ResourceDeleted
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		query["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceOwnerId)) {
		query["ResourceOwnerId"] = request.ResourceOwnerId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypes)) {
		query["ResourceTypes"] = request.ResourceTypes
	}

	if !tea.BoolValue(util.IsUnset(request.StartUpdateTimestamp)) {
		query["StartUpdateTimestamp"] = request.StartUpdateTimestamp
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateDiscoveredResources"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateDiscoveredResourcesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateDiscoveredResourcesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Obtains a list of resources aggregated across regions within all member accounts of a specific account group.
//
// Description:
//
// This topic provides an example on how to query the resources within the member account `100931896542****` of the account group `ca-c560626622af0005****`. The result indicates that eight resources are queried.
//
// @param request - ListAggregateDiscoveredResourcesRequest
//
// @return ListAggregateDiscoveredResourcesResponse
func (client *Client) ListAggregateDiscoveredResources(request *ListAggregateDiscoveredResourcesRequest) (_result *ListAggregateDiscoveredResourcesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateDiscoveredResourcesResponse{}
	_body, _err := client.ListAggregateDiscoveredResourcesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the remediation records of a rule in an account group.
//
// Description:
//
// This topic provides an example on how to query the remediation records of the `cr-d04a626622af00af****` rule in the `ca-edd3626622af00b3****` account group.
//
// @param request - ListAggregateRemediationExecutionsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateRemediationExecutionsResponse
func (client *Client) ListAggregateRemediationExecutionsWithOptions(request *ListAggregateRemediationExecutionsRequest, runtime *util.RuntimeOptions) (_result *ListAggregateRemediationExecutionsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		query["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.ExecutionStatus)) {
		query["ExecutionStatus"] = request.ExecutionStatus
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceAccountId)) {
		query["ResourceAccountId"] = request.ResourceAccountId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateRemediationExecutions"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateRemediationExecutionsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateRemediationExecutionsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the remediation records of a rule in an account group.
//
// Description:
//
// This topic provides an example on how to query the remediation records of the `cr-d04a626622af00af****` rule in the `ca-edd3626622af00b3****` account group.
//
// @param request - ListAggregateRemediationExecutionsRequest
//
// @return ListAggregateRemediationExecutionsResponse
func (client *Client) ListAggregateRemediationExecutions(request *ListAggregateRemediationExecutionsRequest) (_result *ListAggregateRemediationExecutionsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateRemediationExecutionsResponse{}
	_body, _err := client.ListAggregateRemediationExecutionsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of remediation templates for a rule in an account group.
//
// Description:
//
// This topic provides an example on how to query the remediation templates of the rule whose ID is `cr-6b7c626622af00b4****` in the account group whose ID is `ca-6b4a626622af0012****`.
//
// @param request - ListAggregateRemediationsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateRemediationsResponse
func (client *Client) ListAggregateRemediationsWithOptions(request *ListAggregateRemediationsRequest, runtime *util.RuntimeOptions) (_result *ListAggregateRemediationsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateRemediations"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateRemediationsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateRemediationsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of remediation templates for a rule in an account group.
//
// Description:
//
// This topic provides an example on how to query the remediation templates of the rule whose ID is `cr-6b7c626622af00b4****` in the account group whose ID is `ca-6b4a626622af0012****`.
//
// @param request - ListAggregateRemediationsRequest
//
// @return ListAggregateRemediationsResponse
func (client *Client) ListAggregateRemediations(request *ListAggregateRemediationsRequest) (_result *ListAggregateRemediationsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateRemediationsResponse{}
	_body, _err := client.ListAggregateRemediationsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance evaluation results of resources in an account group.
//
// Description:
//
// This example shows how to query the compliance evaluation result of the `23642660635396****` resource in the `ca-7f00626622af0041****` account group. The resource is a RAM user. The returned result indicates that the resource is evaluated as `NON_COMPLIANT` by using the `cr-7f7d626622af0041****` rule.
//
// @param request - ListAggregateResourceEvaluationResultsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateResourceEvaluationResultsResponse
func (client *Client) ListAggregateResourceEvaluationResultsWithOptions(request *ListAggregateResourceEvaluationResultsRequest, runtime *util.RuntimeOptions) (_result *ListAggregateResourceEvaluationResultsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ComplianceType)) {
		query["ComplianceType"] = request.ComplianceType
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.Region)) {
		query["Region"] = request.Region
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		query["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateResourceEvaluationResults"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateResourceEvaluationResultsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateResourceEvaluationResultsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance evaluation results of resources in an account group.
//
// Description:
//
// This example shows how to query the compliance evaluation result of the `23642660635396****` resource in the `ca-7f00626622af0041****` account group. The resource is a RAM user. The returned result indicates that the resource is evaluated as `NON_COMPLIANT` by using the `cr-7f7d626622af0041****` rule.
//
// @param request - ListAggregateResourceEvaluationResultsRequest
//
// @return ListAggregateResourceEvaluationResultsResponse
func (client *Client) ListAggregateResourceEvaluationResults(request *ListAggregateResourceEvaluationResultsRequest) (_result *ListAggregateResourceEvaluationResultsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateResourceEvaluationResultsResponse{}
	_body, _err := client.ListAggregateResourceEvaluationResultsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of the resources of a specific resource in an account group.
//
// Description:
//
// This topic provides an example on how to query the disks that are associated with an Elastic Compute Service (ECS) instance in an account group.
//
// @param request - ListAggregateResourceRelationsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateResourceRelationsResponse
func (client *Client) ListAggregateResourceRelationsWithOptions(request *ListAggregateResourceRelationsRequest, runtime *util.RuntimeOptions) (_result *ListAggregateResourceRelationsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.Region)) {
		query["Region"] = request.Region
	}

	if !tea.BoolValue(util.IsUnset(request.RelationType)) {
		query["RelationType"] = request.RelationType
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceAccountId)) {
		query["ResourceAccountId"] = request.ResourceAccountId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		query["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	if !tea.BoolValue(util.IsUnset(request.TargetResourceId)) {
		query["TargetResourceId"] = request.TargetResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.TargetResourceType)) {
		query["TargetResourceType"] = request.TargetResourceType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateResourceRelations"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateResourceRelationsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateResourceRelationsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of the resources of a specific resource in an account group.
//
// Description:
//
// This topic provides an example on how to query the disks that are associated with an Elastic Compute Service (ECS) instance in an account group.
//
// @param request - ListAggregateResourceRelationsRequest
//
// @return ListAggregateResourceRelationsResponse
func (client *Client) ListAggregateResourceRelations(request *ListAggregateResourceRelationsRequest) (_result *ListAggregateResourceRelationsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateResourceRelationsResponse{}
	_body, _err := client.ListAggregateResourceRelationsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains resources in a specific account group based on the fields in the resource properties by using a SELECT statement.
//
// Description:
//
// When you write a `SELECT` statement, you must obtain the fields and the data types of the fields from the property file of the resource type. For more information about property files, see[ Alibaba Cloud Config Resource Schema](https://github.com/aliyun/alibabacloud-config-resource-schema)
//
// >
//
//   - Each resource type supported by Cloud Config has a property file. Property files are named based on the related resource types. For example, the property file of the `ACS::ECS::Instance` resource type is named `ACS_ECS_Instance.properties.json`. Property files of different resource types are placed under the `config/properties/resource-types` path.
//
//   - For more information about the examples and limits on SQL query statements, see [Examples of SQL query statements](https://help.aliyun.com/document_detail/398718.html) and [Limits on SQL query statements](https://help.aliyun.com/document_detail/398750.html).
//
// This topic provides an example on how to obtain all resources whose tag key is `business` and whose tag value is `online` in the account group `ca-4b05626622af000c****` by using the advanced search feature.
//
// @param request - ListAggregateResourcesByAdvancedSearchRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregateResourcesByAdvancedSearchResponse
func (client *Client) ListAggregateResourcesByAdvancedSearchWithOptions(request *ListAggregateResourcesByAdvancedSearchRequest, runtime *util.RuntimeOptions) (_result *ListAggregateResourcesByAdvancedSearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.Sql)) {
		query["Sql"] = request.Sql
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregateResourcesByAdvancedSearch"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregateResourcesByAdvancedSearchResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregateResourcesByAdvancedSearchResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Obtains resources in a specific account group based on the fields in the resource properties by using a SELECT statement.
//
// Description:
//
// When you write a `SELECT` statement, you must obtain the fields and the data types of the fields from the property file of the resource type. For more information about property files, see[ Alibaba Cloud Config Resource Schema](https://github.com/aliyun/alibabacloud-config-resource-schema)
//
// >
//
//   - Each resource type supported by Cloud Config has a property file. Property files are named based on the related resource types. For example, the property file of the `ACS::ECS::Instance` resource type is named `ACS_ECS_Instance.properties.json`. Property files of different resource types are placed under the `config/properties/resource-types` path.
//
//   - For more information about the examples and limits on SQL query statements, see [Examples of SQL query statements](https://help.aliyun.com/document_detail/398718.html) and [Limits on SQL query statements](https://help.aliyun.com/document_detail/398750.html).
//
// This topic provides an example on how to obtain all resources whose tag key is `business` and whose tag value is `online` in the account group `ca-4b05626622af000c****` by using the advanced search feature.
//
// @param request - ListAggregateResourcesByAdvancedSearchRequest
//
// @return ListAggregateResourcesByAdvancedSearchResponse
func (client *Client) ListAggregateResourcesByAdvancedSearch(request *ListAggregateResourcesByAdvancedSearchRequest) (_result *ListAggregateResourcesByAdvancedSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregateResourcesByAdvancedSearchResponse{}
	_body, _err := client.ListAggregateResourcesByAdvancedSearchWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries all account groups within the current management account or delegated administrator account.
//
// Description:
//
// The sample request in this topic shows you how to query account groups. A maximum of 10 entries can be returned for the request. As shown in the responses, the account group returned is named as `Test_Group`, its description is `Test account group`, and it is of the `CUSTOM` type, which indicates a custom account group. The account group contains two member accounts.
//
// @param tmpReq - ListAggregatorsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAggregatorsResponse
func (client *Client) ListAggregatorsWithOptions(tmpReq *ListAggregatorsRequest, runtime *util.RuntimeOptions) (_result *ListAggregatorsResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ListAggregatorsShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAggregators"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListAggregatorsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListAggregatorsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries all account groups within the current management account or delegated administrator account.
//
// Description:
//
// The sample request in this topic shows you how to query account groups. A maximum of 10 entries can be returned for the request. As shown in the responses, the account group returned is named as `Test_Group`, its description is `Test account group`, and it is of the `CUSTOM` type, which indicates a custom account group. The account group contains two member accounts.
//
// @param request - ListAggregatorsRequest
//
// @return ListAggregatorsResponse
func (client *Client) ListAggregators(request *ListAggregatorsRequest) (_result *ListAggregatorsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAggregatorsResponse{}
	_body, _err := client.ListAggregatorsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries all compliance package templates provided by Cloud Config and the details of the compliance package templates.
//
// Description:
//
// A compliance package template is a collection of rules that Cloud Config can create based on compliance scenarios.
//
// @param request - ListCompliancePackTemplatesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListCompliancePackTemplatesResponse
func (client *Client) ListCompliancePackTemplatesWithOptions(request *ListCompliancePackTemplatesRequest, runtime *util.RuntimeOptions) (_result *ListCompliancePackTemplatesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CompliancePackTemplateId)) {
		query["CompliancePackTemplateId"] = request.CompliancePackTemplateId
	}

	if !tea.BoolValue(util.IsUnset(request.PageNumber)) {
		query["PageNumber"] = request.PageNumber
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["PageSize"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypes)) {
		query["ResourceTypes"] = request.ResourceTypes
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListCompliancePackTemplates"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListCompliancePackTemplatesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListCompliancePackTemplatesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries all compliance package templates provided by Cloud Config and the details of the compliance package templates.
//
// Description:
//
// A compliance package template is a collection of rules that Cloud Config can create based on compliance scenarios.
//
// @param request - ListCompliancePackTemplatesRequest
//
// @return ListCompliancePackTemplatesResponse
func (client *Client) ListCompliancePackTemplates(request *ListCompliancePackTemplatesRequest) (_result *ListCompliancePackTemplatesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListCompliancePackTemplatesResponse{}
	_body, _err := client.ListCompliancePackTemplatesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of compliance packages.
//
// Description:
//
// This topic provides an example of how to query compliance packages. The return result shows the details of the `cp-fdc8626622af00f9****` compliance package.
//
// @param tmpReq - ListCompliancePacksRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListCompliancePacksResponse
func (client *Client) ListCompliancePacksWithOptions(tmpReq *ListCompliancePacksRequest, runtime *util.RuntimeOptions) (_result *ListCompliancePacksResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ListCompliancePacksShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.PageNumber)) {
		query["PageNumber"] = request.PageNumber
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["PageSize"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		query["Status"] = request.Status
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListCompliancePacks"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListCompliancePacksResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListCompliancePacksResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of compliance packages.
//
// Description:
//
// This topic provides an example of how to query compliance packages. The return result shows the details of the `cp-fdc8626622af00f9****` compliance package.
//
// @param request - ListCompliancePacksRequest
//
// @return ListCompliancePacksResponse
func (client *Client) ListCompliancePacks(request *ListCompliancePacksRequest) (_result *ListCompliancePacksResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListCompliancePacksResponse{}
	_body, _err := client.ListCompliancePacksWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of delivery channels.
//
// @param request - ListConfigDeliveryChannelsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListConfigDeliveryChannelsResponse
func (client *Client) ListConfigDeliveryChannelsWithOptions(request *ListConfigDeliveryChannelsRequest, runtime *util.RuntimeOptions) (_result *ListConfigDeliveryChannelsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelIds)) {
		query["DeliveryChannelIds"] = request.DeliveryChannelIds
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListConfigDeliveryChannels"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListConfigDeliveryChannelsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListConfigDeliveryChannelsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of delivery channels.
//
// @param request - ListConfigDeliveryChannelsRequest
//
// @return ListConfigDeliveryChannelsResponse
func (client *Client) ListConfigDeliveryChannels(request *ListConfigDeliveryChannelsRequest) (_result *ListConfigDeliveryChannelsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListConfigDeliveryChannelsResponse{}
	_body, _err := client.ListConfigDeliveryChannelsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance evaluation results of resources based on a rule.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation result of resources based on a rule whose ID is `cr-cac56457e0d900d3****`. The returned result indicates that the `i-hp3e4kvhzqn2s11t****` resource is evaluated as `NON_COMPLIANT` by using the rule. The resource is an Elastic Compute Service (ECS) instance.
//
// @param request - ListConfigRuleEvaluationResultsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListConfigRuleEvaluationResultsResponse
func (client *Client) ListConfigRuleEvaluationResultsWithOptions(request *ListConfigRuleEvaluationResultsRequest, runtime *util.RuntimeOptions) (_result *ListConfigRuleEvaluationResultsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := openapiutil.Query(util.ToMap(request))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListConfigRuleEvaluationResults"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("GET"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListConfigRuleEvaluationResultsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListConfigRuleEvaluationResultsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance evaluation results of resources based on a rule.
//
// Description:
//
// This topic provides an example on how to query the compliance evaluation result of resources based on a rule whose ID is `cr-cac56457e0d900d3****`. The returned result indicates that the `i-hp3e4kvhzqn2s11t****` resource is evaluated as `NON_COMPLIANT` by using the rule. The resource is an Elastic Compute Service (ECS) instance.
//
// @param request - ListConfigRuleEvaluationResultsRequest
//
// @return ListConfigRuleEvaluationResultsResponse
func (client *Client) ListConfigRuleEvaluationResults(request *ListConfigRuleEvaluationResultsRequest) (_result *ListConfigRuleEvaluationResultsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListConfigRuleEvaluationResultsResponse{}
	_body, _err := client.ListConfigRuleEvaluationResultsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the statistics of compliance evaluation results of the current Alibaba Cloud account.
//
// @param request - ListConfigRuleEvaluationStatisticsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListConfigRuleEvaluationStatisticsResponse
func (client *Client) ListConfigRuleEvaluationStatisticsWithOptions(runtime *util.RuntimeOptions) (_result *ListConfigRuleEvaluationStatisticsResponse, _err error) {
	req := &openapi.OpenApiRequest{}
	params := &openapi.Params{
		Action:      tea.String("ListConfigRuleEvaluationStatistics"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListConfigRuleEvaluationStatisticsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListConfigRuleEvaluationStatisticsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the statistics of compliance evaluation results of the current Alibaba Cloud account.
//
// @return ListConfigRuleEvaluationStatisticsResponse
func (client *Client) ListConfigRuleEvaluationStatistics() (_result *ListConfigRuleEvaluationStatisticsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListConfigRuleEvaluationStatisticsResponse{}
	_body, _err := client.ListConfigRuleEvaluationStatisticsWithOptions(runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the rules of the current account.
//
// Description:
//
// This topic provides an example on how to query the rules of the current account. The response shows that the current account has a total of one rule and three evaluated resources. The resources are evaluated as compliant.
//
// @param tmpReq - ListConfigRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListConfigRulesResponse
func (client *Client) ListConfigRulesWithOptions(tmpReq *ListConfigRulesRequest, runtime *util.RuntimeOptions) (_result *ListConfigRulesResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ListConfigRulesShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ComplianceType)) {
		query["ComplianceType"] = request.ComplianceType
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleName)) {
		query["ConfigRuleName"] = request.ConfigRuleName
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleState)) {
		query["ConfigRuleState"] = request.ConfigRuleState
	}

	if !tea.BoolValue(util.IsUnset(request.Keyword)) {
		query["Keyword"] = request.Keyword
	}

	if !tea.BoolValue(util.IsUnset(request.PageNumber)) {
		query["PageNumber"] = request.PageNumber
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["PageSize"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypes)) {
		query["ResourceTypes"] = request.ResourceTypes
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		query["RiskLevel"] = request.RiskLevel
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListConfigRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListConfigRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListConfigRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the rules of the current account.
//
// Description:
//
// This topic provides an example on how to query the rules of the current account. The response shows that the current account has a total of one rule and three evaluated resources. The resources are evaluated as compliant.
//
// @param request - ListConfigRulesRequest
//
// @return ListConfigRulesResponse
func (client *Client) ListConfigRules(request *ListConfigRulesRequest) (_result *ListConfigRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListConfigRulesResponse{}
	_body, _err := client.ListConfigRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains a list of resources aggregated across regions within an Alibaba Cloud account.
//
// Description:
//
// This topic provides an example on how to call the ListDiscoveredResources operation to query the resources in the current Alibaba Cloud account. The returned result indicates that a total of eight resources exist in the account.
//
// @param request - ListDiscoveredResourcesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDiscoveredResourcesResponse
func (client *Client) ListDiscoveredResourcesWithOptions(request *ListDiscoveredResourcesRequest, runtime *util.RuntimeOptions) (_result *ListDiscoveredResourcesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.EndUpdateTimestamp)) {
		query["EndUpdateTimestamp"] = request.EndUpdateTimestamp
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceTypes)) {
		query["ExcludeResourceTypes"] = request.ExcludeResourceTypes
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.Regions)) {
		query["Regions"] = request.Regions
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceDeleted)) {
		query["ResourceDeleted"] = request.ResourceDeleted
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		query["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypes)) {
		query["ResourceTypes"] = request.ResourceTypes
	}

	if !tea.BoolValue(util.IsUnset(request.StartUpdateTimestamp)) {
		query["StartUpdateTimestamp"] = request.StartUpdateTimestamp
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDiscoveredResources"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListDiscoveredResourcesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListDiscoveredResourcesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Obtains a list of resources aggregated across regions within an Alibaba Cloud account.
//
// Description:
//
// This topic provides an example on how to call the ListDiscoveredResources operation to query the resources in the current Alibaba Cloud account. The returned result indicates that a total of eight resources exist in the account.
//
// @param request - ListDiscoveredResourcesRequest
//
// @return ListDiscoveredResourcesResponse
func (client *Client) ListDiscoveredResources(request *ListDiscoveredResourcesRequest) (_result *ListDiscoveredResourcesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDiscoveredResourcesResponse{}
	_body, _err := client.ListDiscoveredResourcesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of cloud services that are integrated with Cloud Config and the status of each cloud service.
//
// Description:
//
// This topic provides an example on how to query the cloud services that can be integrated by the current Alibaba Cloud account.
//
// @param request - ListIntegratedServiceRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListIntegratedServiceResponse
func (client *Client) ListIntegratedServiceWithOptions(runtime *util.RuntimeOptions) (_result *ListIntegratedServiceResponse, _err error) {
	req := &openapi.OpenApiRequest{}
	params := &openapi.Params{
		Action:      tea.String("ListIntegratedService"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListIntegratedServiceResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListIntegratedServiceResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of cloud services that are integrated with Cloud Config and the status of each cloud service.
//
// Description:
//
// This topic provides an example on how to query the cloud services that can be integrated by the current Alibaba Cloud account.
//
// @return ListIntegratedServiceResponse
func (client *Client) ListIntegratedService() (_result *ListIntegratedServiceResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListIntegratedServiceResponse{}
	_body, _err := client.ListIntegratedServiceWithOptions(runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of managed rules supported by Cloud Config.
//
// Description:
//
// ### [](#)Background information
//
// For more information about how to define, execute, and integrate a managed rule, see [Definition and execution of rules](https://help.aliyun.com/document_detail/128273.html).
//
// ### [](#)Description
//
// This topic provides an example on how to query all managed rules whose keyword is `CDN`. The response shows that 21 managed rules exist.
//
// @param request - ListManagedRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListManagedRulesResponse
func (client *Client) ListManagedRulesWithOptions(request *ListManagedRulesRequest, runtime *util.RuntimeOptions) (_result *ListManagedRulesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.FilterType)) {
		query["FilterType"] = request.FilterType
	}

	if !tea.BoolValue(util.IsUnset(request.Keyword)) {
		query["Keyword"] = request.Keyword
	}

	if !tea.BoolValue(util.IsUnset(request.PageNumber)) {
		query["PageNumber"] = request.PageNumber
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["PageSize"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypes)) {
		query["ResourceTypes"] = request.ResourceTypes
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		query["RiskLevel"] = request.RiskLevel
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListManagedRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListManagedRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListManagedRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of managed rules supported by Cloud Config.
//
// Description:
//
// ### [](#)Background information
//
// For more information about how to define, execute, and integrate a managed rule, see [Definition and execution of rules](https://help.aliyun.com/document_detail/128273.html).
//
// ### [](#)Description
//
// This topic provides an example on how to query all managed rules whose keyword is `CDN`. The response shows that 21 managed rules exist.
//
// @param request - ListManagedRulesRequest
//
// @return ListManagedRulesResponse
func (client *Client) ListManagedRules(request *ListManagedRulesRequest) (_result *ListManagedRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListManagedRulesResponse{}
	_body, _err := client.ListManagedRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of evaluation rules supported by Cloud Config.
//
// Description:
//
// For more information about how to define, execute, and integrate an evaluation rule, see [Definition and execution of evaluation rules](https://help.aliyun.com/document_detail/470802.html).
//
// After you create an evaluation rule, a managed rule that has the same settings as the evaluation rule is created. After you create a resource, the managed rule can be used to continuously check the compliance of the resource.
//
// @param tmpReq - ListPreManagedRulesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListPreManagedRulesResponse
func (client *Client) ListPreManagedRulesWithOptions(tmpReq *ListPreManagedRulesRequest, runtime *util.RuntimeOptions) (_result *ListPreManagedRulesResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ListPreManagedRulesShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ResourceTypes)) {
		request.ResourceTypesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ResourceTypes, tea.String("ResourceTypes"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.PageNumber)) {
		body["PageNumber"] = request.PageNumber
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		body["PageSize"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypesShrink)) {
		body["ResourceTypes"] = request.ResourceTypesShrink
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ListPreManagedRules"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListPreManagedRulesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListPreManagedRulesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of evaluation rules supported by Cloud Config.
//
// Description:
//
// For more information about how to define, execute, and integrate an evaluation rule, see [Definition and execution of evaluation rules](https://help.aliyun.com/document_detail/470802.html).
//
// After you create an evaluation rule, a managed rule that has the same settings as the evaluation rule is created. After you create a resource, the managed rule can be used to continuously check the compliance of the resource.
//
// @param request - ListPreManagedRulesRequest
//
// @return ListPreManagedRulesResponse
func (client *Client) ListPreManagedRules(request *ListPreManagedRulesRequest) (_result *ListPreManagedRulesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListPreManagedRulesResponse{}
	_body, _err := client.ListPreManagedRulesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the remediation records of a rule.
//
// Description:
//
// This topic provides an example on how to query the remediation records of the rule cr-5392626622af0000\\*\\*\\*\\*.
//
// @param request - ListRemediationExecutionsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListRemediationExecutionsResponse
func (client *Client) ListRemediationExecutionsWithOptions(request *ListRemediationExecutionsRequest, runtime *util.RuntimeOptions) (_result *ListRemediationExecutionsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		query["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.ExecutionStatus)) {
		query["ExecutionStatus"] = request.ExecutionStatus
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListRemediationExecutions"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListRemediationExecutionsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListRemediationExecutionsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the remediation records of a rule.
//
// Description:
//
// This topic provides an example on how to query the remediation records of the rule cr-5392626622af0000\\*\\*\\*\\*.
//
// @param request - ListRemediationExecutionsRequest
//
// @return ListRemediationExecutionsResponse
func (client *Client) ListRemediationExecutions(request *ListRemediationExecutionsRequest) (_result *ListRemediationExecutionsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListRemediationExecutionsResponse{}
	_body, _err := client.ListRemediationExecutionsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of remediation templates for a managed rule.
//
// Description:
//
// In this topic, the `oss-bucket-public-write-prohibited` managed rule is used as an example. The return result shows the details of the remediation template of the `OOS` type for the managed rule. OOS represents Operation Orchestration Service.
//
// @param request - ListRemediationTemplatesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListRemediationTemplatesResponse
func (client *Client) ListRemediationTemplatesWithOptions(request *ListRemediationTemplatesRequest, runtime *util.RuntimeOptions) (_result *ListRemediationTemplatesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ManagedRuleIdentifier)) {
		query["ManagedRuleIdentifier"] = request.ManagedRuleIdentifier
	}

	if !tea.BoolValue(util.IsUnset(request.PageNumber)) {
		query["PageNumber"] = request.PageNumber
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["PageSize"] = request.PageSize
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationType)) {
		query["RemediationType"] = request.RemediationType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListRemediationTemplates"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListRemediationTemplatesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListRemediationTemplatesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of remediation templates for a managed rule.
//
// Description:
//
// In this topic, the `oss-bucket-public-write-prohibited` managed rule is used as an example. The return result shows the details of the remediation template of the `OOS` type for the managed rule. OOS represents Operation Orchestration Service.
//
// @param request - ListRemediationTemplatesRequest
//
// @return ListRemediationTemplatesResponse
func (client *Client) ListRemediationTemplates(request *ListRemediationTemplatesRequest) (_result *ListRemediationTemplatesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListRemediationTemplatesResponse{}
	_body, _err := client.ListRemediationTemplatesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the information about the execution of remediation templates.
//
// Description:
//
// This topic provides an example on how to query the remediation templates for the rule whose ID is `cr-6b7c626622af00b4****`.
//
// @param request - ListRemediationsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListRemediationsResponse
func (client *Client) ListRemediationsWithOptions(request *ListRemediationsRequest, runtime *util.RuntimeOptions) (_result *ListRemediationsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ConfigRuleIds)) {
		query["ConfigRuleIds"] = request.ConfigRuleIds
	}

	if !tea.BoolValue(util.IsUnset(request.PageNumber)) {
		query["PageNumber"] = request.PageNumber
	}

	if !tea.BoolValue(util.IsUnset(request.PageSize)) {
		query["PageSize"] = request.PageSize
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListRemediations"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListRemediationsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListRemediationsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the information about the execution of remediation templates.
//
// Description:
//
// This topic provides an example on how to query the remediation templates for the rule whose ID is `cr-6b7c626622af00b4****`.
//
// @param request - ListRemediationsRequest
//
// @return ListRemediationsResponse
func (client *Client) ListRemediations(request *ListRemediationsRequest) (_result *ListRemediationsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListRemediationsResponse{}
	_body, _err := client.ListRemediationsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the compliance evaluation results of resources.
//
// Description:
//
// In this example, the compliance evaluation result of the `23642660635396****` resource is queried and the resource is a RAM user. The returned result indicates that the resource is evaluated as `NON_COMPLIANT` by using the `cr-7f7d626622af0041****` rule.
//
// @param request - ListResourceEvaluationResultsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListResourceEvaluationResultsResponse
func (client *Client) ListResourceEvaluationResultsWithOptions(request *ListResourceEvaluationResultsRequest, runtime *util.RuntimeOptions) (_result *ListResourceEvaluationResultsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ComplianceType)) {
		query["ComplianceType"] = request.ComplianceType
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.Region)) {
		query["Region"] = request.Region
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		query["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListResourceEvaluationResults"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListResourceEvaluationResultsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListResourceEvaluationResultsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the compliance evaluation results of resources.
//
// Description:
//
// In this example, the compliance evaluation result of the `23642660635396****` resource is queried and the resource is a RAM user. The returned result indicates that the resource is evaluated as `NON_COMPLIANT` by using the `cr-7f7d626622af0041****` rule.
//
// @param request - ListResourceEvaluationResultsRequest
//
// @return ListResourceEvaluationResultsResponse
func (client *Client) ListResourceEvaluationResults(request *ListResourceEvaluationResultsRequest) (_result *ListResourceEvaluationResultsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListResourceEvaluationResultsResponse{}
	_body, _err := client.ListResourceEvaluationResultsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries a list of resources that associate with a specific resource.
//
// Description:
//
// For information about the Alibaba Cloud services and resource types supported by Cloud Config, see [Alibaba Cloud services and resource types supported by Cloud Config](https://help.aliyun.com/document_detail/127411.html).
//
// This topic provides an example on how to query the information about the disks that are attached to an Elastic Compute Service (ECS) instance named `i-j6cajg9yrfoh4sas****` that is created by the current Alibaba Cloud account in the China (Shanghai) region.
//
// @param request - ListResourceRelationsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListResourceRelationsResponse
func (client *Client) ListResourceRelationsWithOptions(request *ListResourceRelationsRequest, runtime *util.RuntimeOptions) (_result *ListResourceRelationsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.Region)) {
		query["Region"] = request.Region
	}

	if !tea.BoolValue(util.IsUnset(request.RelationType)) {
		query["RelationType"] = request.RelationType
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		query["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	if !tea.BoolValue(util.IsUnset(request.TargetResourceId)) {
		query["TargetResourceId"] = request.TargetResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.TargetResourceType)) {
		query["TargetResourceType"] = request.TargetResourceType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListResourceRelations"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListResourceRelationsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListResourceRelationsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries a list of resources that associate with a specific resource.
//
// Description:
//
// For information about the Alibaba Cloud services and resource types supported by Cloud Config, see [Alibaba Cloud services and resource types supported by Cloud Config](https://help.aliyun.com/document_detail/127411.html).
//
// This topic provides an example on how to query the information about the disks that are attached to an Elastic Compute Service (ECS) instance named `i-j6cajg9yrfoh4sas****` that is created by the current Alibaba Cloud account in the China (Shanghai) region.
//
// @param request - ListResourceRelationsRequest
//
// @return ListResourceRelationsResponse
func (client *Client) ListResourceRelations(request *ListResourceRelationsRequest) (_result *ListResourceRelationsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListResourceRelationsResponse{}
	_body, _err := client.ListResourceRelationsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains resources based on the fields in the resource properties by using a SELECT statement.
//
// Description:
//
// When you write a `SELECT` statement, you must obtain the fields and the data types of the fields from the property file of the resource type. For more information about property files, see [Alibaba Cloud Config Resource Schema](https://github.com/aliyun/alibabacloud-config-resource-schema).
//
// >
//
//   - Each resource type supported by Cloud Config has a property file. Property files are named based on the related resource types. For example, the property file of the `ACS::ECS::Instance` resource type is named `ACS_ECS_Instance.properties.json`. Property files of different resource types are placed under the `config/properties/resource-types` path.
//
//   - For more information about the examples and limits on SQL query statements, see [Examples of SQL query statements](https://help.aliyun.com/document_detail/398718.html) and [Limits on SQL query statements](https://help.aliyun.com/document_detail/398750.html).
//
// This topic provides an example on how to obtain all resources whose tag key is `business` and whose tag value is `online` within the current account by using the advanced search feature.
//
// @param request - ListResourcesByAdvancedSearchRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListResourcesByAdvancedSearchResponse
func (client *Client) ListResourcesByAdvancedSearchWithOptions(request *ListResourcesByAdvancedSearchRequest, runtime *util.RuntimeOptions) (_result *ListResourcesByAdvancedSearchResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.Sql)) {
		query["Sql"] = request.Sql
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListResourcesByAdvancedSearch"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListResourcesByAdvancedSearchResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListResourcesByAdvancedSearchResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Obtains resources based on the fields in the resource properties by using a SELECT statement.
//
// Description:
//
// When you write a `SELECT` statement, you must obtain the fields and the data types of the fields from the property file of the resource type. For more information about property files, see [Alibaba Cloud Config Resource Schema](https://github.com/aliyun/alibabacloud-config-resource-schema).
//
// >
//
//   - Each resource type supported by Cloud Config has a property file. Property files are named based on the related resource types. For example, the property file of the `ACS::ECS::Instance` resource type is named `ACS_ECS_Instance.properties.json`. Property files of different resource types are placed under the `config/properties/resource-types` path.
//
//   - For more information about the examples and limits on SQL query statements, see [Examples of SQL query statements](https://help.aliyun.com/document_detail/398718.html) and [Limits on SQL query statements](https://help.aliyun.com/document_detail/398750.html).
//
// This topic provides an example on how to obtain all resources whose tag key is `business` and whose tag value is `online` within the current account by using the advanced search feature.
//
// @param request - ListResourcesByAdvancedSearchRequest
//
// @return ListResourcesByAdvancedSearchResponse
func (client *Client) ListResourcesByAdvancedSearch(request *ListResourcesByAdvancedSearchRequest) (_result *ListResourcesByAdvancedSearchResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListResourcesByAdvancedSearchResponse{}
	_body, _err := client.ListResourcesByAdvancedSearchWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the cloud services and resource types that are supported by Cloud Config.
//
// Description:
//
// This topic provides an example on how to query the Alibaba Cloud services and resource types supported by a Cloud Config.
//
// @param request - ListSupportedProductsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListSupportedProductsResponse
func (client *Client) ListSupportedProductsWithOptions(request *ListSupportedProductsRequest, runtime *util.RuntimeOptions) (_result *ListSupportedProductsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListSupportedProducts"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListSupportedProductsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListSupportedProductsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries the cloud services and resource types that are supported by Cloud Config.
//
// Description:
//
// This topic provides an example on how to query the Alibaba Cloud services and resource types supported by a Cloud Config.
//
// @param request - ListSupportedProductsRequest
//
// @return ListSupportedProductsResponse
func (client *Client) ListSupportedProducts(request *ListSupportedProductsRequest) (_result *ListSupportedProductsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListSupportedProductsResponse{}
	_body, _err := client.ListSupportedProductsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries tags that are added to specified resources.
//
// @param tmpReq - ListTagResourcesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListTagResourcesResponse
func (client *Client) ListTagResourcesWithOptions(tmpReq *ListTagResourcesRequest, runtime *util.RuntimeOptions) (_result *ListTagResourcesResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &ListTagResourcesShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		body["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		body["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		body["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		body["ResourceType"] = request.ResourceType
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		body["Tag"] = request.TagShrink
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("ListTagResources"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &ListTagResourcesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &ListTagResourcesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Queries tags that are added to specified resources.
//
// @param request - ListTagResourcesRequest
//
// @return ListTagResourcesResponse
func (client *Client) ListTagResources(request *ListTagResourcesRequest) (_result *ListTagResourcesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListTagResourcesResponse{}
	_body, _err := client.ListTagResourcesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Submits the evaluation results of a rule from Function Compute.
//
// Description:
//
// For more information about the definition, use scenarios, and execution of custom function rules, see [Definition and execution of custom function rules](https://help.aliyun.com/document_detail/127405.html).
//
// @param request - PutEvaluationsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return PutEvaluationsResponse
func (client *Client) PutEvaluationsWithOptions(request *PutEvaluationsRequest, runtime *util.RuntimeOptions) (_result *PutEvaluationsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.DeleteMode)) {
		body["DeleteMode"] = request.DeleteMode
	}

	if !tea.BoolValue(util.IsUnset(request.Evaluations)) {
		body["Evaluations"] = request.Evaluations
	}

	if !tea.BoolValue(util.IsUnset(request.ResultToken)) {
		body["ResultToken"] = request.ResultToken
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("PutEvaluations"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &PutEvaluationsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &PutEvaluationsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Submits the evaluation results of a rule from Function Compute.
//
// Description:
//
// For more information about the definition, use scenarios, and execution of custom function rules, see [Definition and execution of custom function rules](https://help.aliyun.com/document_detail/127405.html).
//
// @param request - PutEvaluationsRequest
//
// @return PutEvaluationsResponse
func (client *Client) PutEvaluations(request *PutEvaluationsRequest) (_result *PutEvaluationsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &PutEvaluationsResponse{}
	_body, _err := client.PutEvaluationsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Re-evaluates resources that are evaluated based on a rule after the evaluation results on some resources of an ignored rule in an account group are resumed.
//
// Description:
//
// ### [](#)Prerequisites
//
// One or more non-compliant resources that are evaluated by a rule are ignored. For more information, see [IgnoreAggregateEvaluationResults](https://help.aliyun.com/document_detail/607054.html).
//
// ### [](#)Description
//
// This topic provides an example on how to re-evaluate the non-compliant resource that is evaluated by the `cr-7e72626622af0051****` rule of the `120886317861****` member in the `ca-5b6c626622af008f****` group account. The ID of the region in which the resource resides is `cn-beijing`, the type of the resource is `ACS::SLB::LoadBalancer`, and the ID of the resource is `lb-hp3a3b4ztyfm2plgm****`.
//
// @param tmpReq - RevertAggregateEvaluationResultsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return RevertAggregateEvaluationResultsResponse
func (client *Client) RevertAggregateEvaluationResultsWithOptions(tmpReq *RevertAggregateEvaluationResultsRequest, runtime *util.RuntimeOptions) (_result *RevertAggregateEvaluationResultsResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &RevertAggregateEvaluationResultsShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Resources)) {
		request.ResourcesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Resources, tea.String("Resources"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		body["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourcesShrink)) {
		body["Resources"] = request.ResourcesShrink
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("RevertAggregateEvaluationResults"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &RevertAggregateEvaluationResultsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &RevertAggregateEvaluationResultsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Re-evaluates resources that are evaluated based on a rule after the evaluation results on some resources of an ignored rule in an account group are resumed.
//
// Description:
//
// ### [](#)Prerequisites
//
// One or more non-compliant resources that are evaluated by a rule are ignored. For more information, see [IgnoreAggregateEvaluationResults](https://help.aliyun.com/document_detail/607054.html).
//
// ### [](#)Description
//
// This topic provides an example on how to re-evaluate the non-compliant resource that is evaluated by the `cr-7e72626622af0051****` rule of the `120886317861****` member in the `ca-5b6c626622af008f****` group account. The ID of the region in which the resource resides is `cn-beijing`, the type of the resource is `ACS::SLB::LoadBalancer`, and the ID of the resource is `lb-hp3a3b4ztyfm2plgm****`.
//
// @param request - RevertAggregateEvaluationResultsRequest
//
// @return RevertAggregateEvaluationResultsResponse
func (client *Client) RevertAggregateEvaluationResults(request *RevertAggregateEvaluationResultsRequest) (_result *RevertAggregateEvaluationResultsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &RevertAggregateEvaluationResultsResponse{}
	_body, _err := client.RevertAggregateEvaluationResultsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Re-evaluates resources that are evaluated based on a rule after the evaluation results on some resources of an ignored rule are resumed.
//
// Description:
//
// ### [](#)Prerequisites
//
// One or more non-compliant resources that are evaluated by a rule are ignored. For more information, see [IgnoreEvaluationResults](https://help.aliyun.com/document_detail/606990.html).
//
// ### [](#)Description
//
// This topic provides an example on how to re-evaluate the `lb-hp3a3b4ztyfm2plgm****` non-compliant resource that is evaluated by the `cr-7e72626622af0051****` rule. The ID of the region in which the resource resides is`cn-beijing`, the type of the resource is `ACS::SLB::LoadBalancer`, and the ID of the resource is `lb-hp3a3b4ztyfm2plgm****`.
//
// @param tmpReq - RevertEvaluationResultsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return RevertEvaluationResultsResponse
func (client *Client) RevertEvaluationResultsWithOptions(tmpReq *RevertEvaluationResultsRequest, runtime *util.RuntimeOptions) (_result *RevertEvaluationResultsResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &RevertEvaluationResultsShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Resources)) {
		request.ResourcesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Resources, tea.String("Resources"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		body["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourcesShrink)) {
		body["Resources"] = request.ResourcesShrink
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("RevertEvaluationResults"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &RevertEvaluationResultsResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &RevertEvaluationResultsResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Re-evaluates resources that are evaluated based on a rule after the evaluation results on some resources of an ignored rule are resumed.
//
// Description:
//
// ### [](#)Prerequisites
//
// One or more non-compliant resources that are evaluated by a rule are ignored. For more information, see [IgnoreEvaluationResults](https://help.aliyun.com/document_detail/606990.html).
//
// ### [](#)Description
//
// This topic provides an example on how to re-evaluate the `lb-hp3a3b4ztyfm2plgm****` non-compliant resource that is evaluated by the `cr-7e72626622af0051****` rule. The ID of the region in which the resource resides is`cn-beijing`, the type of the resource is `ACS::SLB::LoadBalancer`, and the ID of the resource is `lb-hp3a3b4ztyfm2plgm****`.
//
// @param request - RevertEvaluationResultsRequest
//
// @return RevertEvaluationResultsResponse
func (client *Client) RevertEvaluationResults(request *RevertEvaluationResultsRequest) (_result *RevertEvaluationResultsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &RevertEvaluationResultsResponse{}
	_body, _err := client.RevertEvaluationResultsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Re-evaluates the compliance of resources based on a rule or based on all rules in a compliance package in a specific account group.
//
// Description:
//
// > After you call this operation, the compliance evaluation is performed only once. To query the compliance evaluation results returned by the rule, call the ListAggregateConfigRuleEvaluationResults operation. For more information, see [ListAggregateConfigRuleEvaluationResults](https://help.aliyun.com/document_detail/265979.html).
//
// The sample request in this topic shows how to use the `cr-c169626622af009f****` rule in the `ca-3a58626622af0005****` account group to evaluate resources.
//
// @param request - StartAggregateConfigRuleEvaluationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return StartAggregateConfigRuleEvaluationResponse
func (client *Client) StartAggregateConfigRuleEvaluationWithOptions(request *StartAggregateConfigRuleEvaluationRequest, runtime *util.RuntimeOptions) (_result *StartAggregateConfigRuleEvaluationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		query["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.RevertEvaluation)) {
		query["RevertEvaluation"] = request.RevertEvaluation
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("StartAggregateConfigRuleEvaluation"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &StartAggregateConfigRuleEvaluationResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &StartAggregateConfigRuleEvaluationResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Re-evaluates the compliance of resources based on a rule or based on all rules in a compliance package in a specific account group.
//
// Description:
//
// > After you call this operation, the compliance evaluation is performed only once. To query the compliance evaluation results returned by the rule, call the ListAggregateConfigRuleEvaluationResults operation. For more information, see [ListAggregateConfigRuleEvaluationResults](https://help.aliyun.com/document_detail/265979.html).
//
// The sample request in this topic shows how to use the `cr-c169626622af009f****` rule in the `ca-3a58626622af0005****` account group to evaluate resources.
//
// @param request - StartAggregateConfigRuleEvaluationRequest
//
// @return StartAggregateConfigRuleEvaluationResponse
func (client *Client) StartAggregateConfigRuleEvaluation(request *StartAggregateConfigRuleEvaluationRequest) (_result *StartAggregateConfigRuleEvaluationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &StartAggregateConfigRuleEvaluationResponse{}
	_body, _err := client.StartAggregateConfigRuleEvaluationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Performs a remediation operation by using a rule in an account group.
//
// Description:
//
// This topic provides an example on how to manually perform a remediation operation by using the rule whose ID is `cr-6b7c626622af00b4****` in the account group whose ID is `ca-6b4a626622af0012****`. The return result shows that the manual execution is successful.
//
// @param request - StartAggregateRemediationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return StartAggregateRemediationResponse
func (client *Client) StartAggregateRemediationWithOptions(request *StartAggregateRemediationRequest, runtime *util.RuntimeOptions) (_result *StartAggregateRemediationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		query["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceAccountId)) {
		query["ResourceAccountId"] = request.ResourceAccountId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("StartAggregateRemediation"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &StartAggregateRemediationResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &StartAggregateRemediationResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Performs a remediation operation by using a rule in an account group.
//
// Description:
//
// This topic provides an example on how to manually perform a remediation operation by using the rule whose ID is `cr-6b7c626622af00b4****` in the account group whose ID is `ca-6b4a626622af0012****`. The return result shows that the manual execution is successful.
//
// @param request - StartAggregateRemediationRequest
//
// @return StartAggregateRemediationResponse
func (client *Client) StartAggregateRemediation(request *StartAggregateRemediationRequest) (_result *StartAggregateRemediationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &StartAggregateRemediationResponse{}
	_body, _err := client.StartAggregateRemediationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Re-evaluates the compliance of resources based on a rule or based on all rules in a compliance package.
//
// Description:
//
// In this example, the cr-9920626622af0035\\*\\*\\*\\	- rule is used to re-evaluate the compliance of resources.
//
// @param request - StartConfigRuleEvaluationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return StartConfigRuleEvaluationResponse
func (client *Client) StartConfigRuleEvaluationWithOptions(request *StartConfigRuleEvaluationRequest, runtime *util.RuntimeOptions) (_result *StartConfigRuleEvaluationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		query["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		query["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.RevertEvaluation)) {
		query["RevertEvaluation"] = request.RevertEvaluation
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("StartConfigRuleEvaluation"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &StartConfigRuleEvaluationResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &StartConfigRuleEvaluationResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Re-evaluates the compliance of resources based on a rule or based on all rules in a compliance package.
//
// Description:
//
// In this example, the cr-9920626622af0035\\*\\*\\*\\	- rule is used to re-evaluate the compliance of resources.
//
// @param request - StartConfigRuleEvaluationRequest
//
// @return StartConfigRuleEvaluationResponse
func (client *Client) StartConfigRuleEvaluation(request *StartConfigRuleEvaluationRequest) (_result *StartConfigRuleEvaluationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &StartConfigRuleEvaluationResponse{}
	_body, _err := client.StartConfigRuleEvaluationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Enables Cloud Config to monitor the resources of your Alibaba Cloud account.
//
// Description:
//
// This topic provides an example on how to enable Cloud Config to monitor the resources of your Alibaba Cloud account.
//
// @param request - StartConfigurationRecorderRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return StartConfigurationRecorderResponse
func (client *Client) StartConfigurationRecorderWithOptions(runtime *util.RuntimeOptions) (_result *StartConfigurationRecorderResponse, _err error) {
	req := &openapi.OpenApiRequest{}
	params := &openapi.Params{
		Action:      tea.String("StartConfigurationRecorder"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &StartConfigurationRecorderResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &StartConfigurationRecorderResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Enables Cloud Config to monitor the resources of your Alibaba Cloud account.
//
// Description:
//
// This topic provides an example on how to enable Cloud Config to monitor the resources of your Alibaba Cloud account.
//
// @return StartConfigurationRecorderResponse
func (client *Client) StartConfigurationRecorder() (_result *StartConfigurationRecorderResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &StartConfigurationRecorderResponse{}
	_body, _err := client.StartConfigurationRecorderWithOptions(runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Performs a remediation operation by using a rule.
//
// Description:
//
// This topic provides an example on how to perform a remediation operation by using the rule whose ID is `cr-8a973ac2e2be00a2****`. The returned result shows that the manual execution is successful.
//
// @param request - StartRemediationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return StartRemediationResponse
func (client *Client) StartRemediationWithOptions(request *StartRemediationRequest, runtime *util.RuntimeOptions) (_result *StartRemediationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		query["ConfigRuleId"] = request.ConfigRuleId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("StartRemediation"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &StartRemediationResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &StartRemediationResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Performs a remediation operation by using a rule.
//
// Description:
//
// This topic provides an example on how to perform a remediation operation by using the rule whose ID is `cr-8a973ac2e2be00a2****`. The returned result shows that the manual execution is successful.
//
// @param request - StartRemediationRequest
//
// @return StartRemediationResponse
func (client *Client) StartRemediation(request *StartRemediationRequest) (_result *StartRemediationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &StartRemediationResponse{}
	_body, _err := client.StartRemediationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Deactivates Cloud Config.
//
// Description:
//
// >  After you deactivate Cloud Config, the resource configurations, created rules, and compliance evaluation results that are stored in Cloud Config are automatically cleared and cannot be restored. Proceed with caution.
//
// @param request - StopConfigurationRecorderRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return StopConfigurationRecorderResponse
func (client *Client) StopConfigurationRecorderWithOptions(runtime *util.RuntimeOptions) (_result *StopConfigurationRecorderResponse, _err error) {
	req := &openapi.OpenApiRequest{}
	params := &openapi.Params{
		Action:      tea.String("StopConfigurationRecorder"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &StopConfigurationRecorderResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &StopConfigurationRecorderResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Deactivates Cloud Config.
//
// Description:
//
// >  After you deactivate Cloud Config, the resource configurations, created rules, and compliance evaluation results that are stored in Cloud Config are automatically cleared and cannot be restored. Proceed with caution.
//
// @return StopConfigurationRecorderResponse
func (client *Client) StopConfigurationRecorder() (_result *StopConfigurationRecorderResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &StopConfigurationRecorderResponse{}
	_body, _err := client.StopConfigurationRecorderWithOptions(runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Adds tags to resources.
//
// @param tmpReq - TagResourcesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TagResourcesResponse
func (client *Client) TagResourcesWithOptions(tmpReq *TagResourcesRequest, runtime *util.RuntimeOptions) (_result *TagResourcesResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &TagResourcesShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		body["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		body["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		body["ResourceType"] = request.ResourceType
	}

	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		body["Tag"] = request.TagShrink
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("TagResources"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &TagResourcesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &TagResourcesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Adds tags to resources.
//
// @param request - TagResourcesRequest
//
// @return TagResourcesResponse
func (client *Client) TagResources(request *TagResourcesRequest) (_result *TagResourcesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &TagResourcesResponse{}
	_body, _err := client.TagResourcesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Removes tags from specified resources.
//
// @param request - UntagResourcesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UntagResourcesResponse
func (client *Client) UntagResourcesWithOptions(request *UntagResourcesRequest, runtime *util.RuntimeOptions) (_result *UntagResourcesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.All)) {
		body["All"] = request.All
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		body["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		body["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		body["ResourceType"] = request.ResourceType
	}

	if !tea.BoolValue(util.IsUnset(request.TagKey)) {
		body["TagKey"] = request.TagKey
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UntagResources"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UntagResourcesResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UntagResourcesResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Removes tags from specified resources.
//
// @param request - UntagResourcesRequest
//
// @return UntagResourcesResponse
func (client *Client) UntagResources(request *UntagResourcesRequest) (_result *UntagResourcesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UntagResourcesResponse{}
	_body, _err := client.UntagResourcesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Modifies the configurations of a compliance package in an account group.
//
// Description:
//
// This topic provides an example on how to change the value of the `eip-bandwidth-limit` parameter in the rule template of the compliance package `cp-fdc8626622af00f9****` in the account group `ca-f632626622af0079****` to `20`.
//
// @param tmpReq - UpdateAggregateCompliancePackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateAggregateCompliancePackResponse
func (client *Client) UpdateAggregateCompliancePackWithOptions(tmpReq *UpdateAggregateCompliancePackRequest, runtime *util.RuntimeOptions) (_result *UpdateAggregateCompliancePackResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &UpdateAggregateCompliancePackShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ConfigRules)) {
		request.ConfigRulesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ConfigRules, tea.String("ConfigRules"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		body["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackName)) {
		body["CompliancePackName"] = request.CompliancePackName
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRulesShrink)) {
		body["ConfigRules"] = request.ConfigRulesShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeRegionIdsScope)) {
		body["ExcludeRegionIdsScope"] = request.ExcludeRegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceGroupIdsScope)) {
		body["ExcludeResourceGroupIdsScope"] = request.ExcludeResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceIdsScope)) {
		body["ExcludeResourceIdsScope"] = request.ExcludeResourceIdsScope
	}

	bodyFlat := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ExcludeTagsScope)) {
		bodyFlat["ExcludeTagsScope"] = request.ExcludeTagsScope
	}

	if !tea.BoolValue(util.IsUnset(request.RegionIdsScope)) {
		body["RegionIdsScope"] = request.RegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupIdsScope)) {
		body["ResourceGroupIdsScope"] = request.ResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIdsScope)) {
		body["ResourceIdsScope"] = request.ResourceIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		body["RiskLevel"] = request.RiskLevel
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyScope)) {
		body["TagKeyScope"] = request.TagKeyScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagValueScope)) {
		body["TagValueScope"] = request.TagValueScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagsScope)) {
		bodyFlat["TagsScope"] = request.TagsScope
	}

	body = tea.ToMap(body,
		openapiutil.Query(bodyFlat))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
		Body:  openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateAggregateCompliancePack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateAggregateCompliancePackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateAggregateCompliancePackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Modifies the configurations of a compliance package in an account group.
//
// Description:
//
// This topic provides an example on how to change the value of the `eip-bandwidth-limit` parameter in the rule template of the compliance package `cp-fdc8626622af00f9****` in the account group `ca-f632626622af0079****` to `20`.
//
// @param request - UpdateAggregateCompliancePackRequest
//
// @return UpdateAggregateCompliancePackResponse
func (client *Client) UpdateAggregateCompliancePack(request *UpdateAggregateCompliancePackRequest) (_result *UpdateAggregateCompliancePackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateAggregateCompliancePackResponse{}
	_body, _err := client.UpdateAggregateCompliancePackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Modifies a delivery channel in an account group.
//
// Description:
//
// This topic provides an example on how to disable a delivery channel in an account group. The ID of the account group is `ca-a4e5626622af0079****`, and the ID of the delivery channel is `cdc-8e45ff4e06a3a8****`. The Status parameter is set to `0`. After the delivery channel is disabled, Cloud Config retains the most recent delivery configuration and stops resource data delivery.
//
// @param request - UpdateAggregateConfigDeliveryChannelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateAggregateConfigDeliveryChannelResponse
func (client *Client) UpdateAggregateConfigDeliveryChannelWithOptions(request *UpdateAggregateConfigDeliveryChannelRequest, runtime *util.RuntimeOptions) (_result *UpdateAggregateConfigDeliveryChannelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		query["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		query["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliantSnapshot)) {
		query["CompliantSnapshot"] = request.CompliantSnapshot
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationItemChangeNotification)) {
		query["ConfigurationItemChangeNotification"] = request.ConfigurationItemChangeNotification
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationSnapshot)) {
		query["ConfigurationSnapshot"] = request.ConfigurationSnapshot
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelCondition)) {
		query["DeliveryChannelCondition"] = request.DeliveryChannelCondition
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelId)) {
		query["DeliveryChannelId"] = request.DeliveryChannelId
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelName)) {
		query["DeliveryChannelName"] = request.DeliveryChannelName
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelTargetArn)) {
		query["DeliveryChannelTargetArn"] = request.DeliveryChannelTargetArn
	}

	if !tea.BoolValue(util.IsUnset(request.DeliverySnapshotTime)) {
		query["DeliverySnapshotTime"] = request.DeliverySnapshotTime
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		query["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.NonCompliantNotification)) {
		query["NonCompliantNotification"] = request.NonCompliantNotification
	}

	if !tea.BoolValue(util.IsUnset(request.OversizedDataOSSTargetArn)) {
		query["OversizedDataOSSTargetArn"] = request.OversizedDataOSSTargetArn
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		query["Status"] = request.Status
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateAggregateConfigDeliveryChannel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateAggregateConfigDeliveryChannelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateAggregateConfigDeliveryChannelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Modifies a delivery channel in an account group.
//
// Description:
//
// This topic provides an example on how to disable a delivery channel in an account group. The ID of the account group is `ca-a4e5626622af0079****`, and the ID of the delivery channel is `cdc-8e45ff4e06a3a8****`. The Status parameter is set to `0`. After the delivery channel is disabled, Cloud Config retains the most recent delivery configuration and stops resource data delivery.
//
// @param request - UpdateAggregateConfigDeliveryChannelRequest
//
// @return UpdateAggregateConfigDeliveryChannelResponse
func (client *Client) UpdateAggregateConfigDeliveryChannel(request *UpdateAggregateConfigDeliveryChannelRequest) (_result *UpdateAggregateConfigDeliveryChannelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateAggregateConfigDeliveryChannelResponse{}
	_body, _err := client.UpdateAggregateConfigDeliveryChannelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Modifies the description, input parameters, and risk level of a rule in a specific account group.
//
// Description:
//
// This topic provides an example on how to change the risk level of the rule `cr-4e3d626622af0080****` in an account group `ca-a4e5626622af0079****` to `3`, which indicates low risk level.
//
// @param tmpReq - UpdateAggregateConfigRuleRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateAggregateConfigRuleResponse
func (client *Client) UpdateAggregateConfigRuleWithOptions(tmpReq *UpdateAggregateConfigRuleRequest, runtime *util.RuntimeOptions) (_result *UpdateAggregateConfigRuleResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &UpdateAggregateConfigRuleShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.InputParameters)) {
		request.InputParametersShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.InputParameters, tea.String("InputParameters"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ResourceTypesScope)) {
		request.ResourceTypesScopeShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ResourceTypesScope, tea.String("ResourceTypesScope"), tea.String("simple"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AccountIdsScope)) {
		body["AccountIdsScope"] = request.AccountIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		body["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleName)) {
		body["ConfigRuleName"] = request.ConfigRuleName
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleTriggerTypes)) {
		body["ConfigRuleTriggerTypes"] = request.ConfigRuleTriggerTypes
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeAccountIdsScope)) {
		body["ExcludeAccountIdsScope"] = request.ExcludeAccountIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeFolderIdsScope)) {
		body["ExcludeFolderIdsScope"] = request.ExcludeFolderIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeRegionIdsScope)) {
		body["ExcludeRegionIdsScope"] = request.ExcludeRegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceGroupIdsScope)) {
		body["ExcludeResourceGroupIdsScope"] = request.ExcludeResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceIdsScope)) {
		body["ExcludeResourceIdsScope"] = request.ExcludeResourceIdsScope
	}

	bodyFlat := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ExcludeTagsScope)) {
		bodyFlat["ExcludeTagsScope"] = request.ExcludeTagsScope
	}

	if !tea.BoolValue(util.IsUnset(request.FolderIdsScope)) {
		body["FolderIdsScope"] = request.FolderIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.InputParametersShrink)) {
		body["InputParameters"] = request.InputParametersShrink
	}

	if !tea.BoolValue(util.IsUnset(request.MaximumExecutionFrequency)) {
		body["MaximumExecutionFrequency"] = request.MaximumExecutionFrequency
	}

	if !tea.BoolValue(util.IsUnset(request.RegionIdsScope)) {
		body["RegionIdsScope"] = request.RegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupIdsScope)) {
		body["ResourceGroupIdsScope"] = request.ResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIdsScope)) {
		body["ResourceIdsScope"] = request.ResourceIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceNameScope)) {
		body["ResourceNameScope"] = request.ResourceNameScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypesScopeShrink)) {
		body["ResourceTypesScope"] = request.ResourceTypesScopeShrink
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		body["RiskLevel"] = request.RiskLevel
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyLogicScope)) {
		body["TagKeyLogicScope"] = request.TagKeyLogicScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyScope)) {
		body["TagKeyScope"] = request.TagKeyScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagValueScope)) {
		body["TagValueScope"] = request.TagValueScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagsScope)) {
		bodyFlat["TagsScope"] = request.TagsScope
	}

	body = tea.ToMap(body,
		openapiutil.Query(bodyFlat))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
		Body:  openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateAggregateConfigRule"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateAggregateConfigRuleResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateAggregateConfigRuleResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Modifies the description, input parameters, and risk level of a rule in a specific account group.
//
// Description:
//
// This topic provides an example on how to change the risk level of the rule `cr-4e3d626622af0080****` in an account group `ca-a4e5626622af0079****` to `3`, which indicates low risk level.
//
// @param request - UpdateAggregateConfigRuleRequest
//
// @return UpdateAggregateConfigRuleResponse
func (client *Client) UpdateAggregateConfigRule(request *UpdateAggregateConfigRuleRequest) (_result *UpdateAggregateConfigRuleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateAggregateConfigRuleResponse{}
	_body, _err := client.UpdateAggregateConfigRuleWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Modifies a remediation template for a rule in an account group.
//
// Description:
//
// This topic describes how to change the execution mode of the `crr-909ba2d4716700eb****` remediation setting for a rule in the `ca-6b4a626622af0012****` account group to `AUTO_EXECUTION`, which specifies automatic remediation. This topic also provides a sample request.
//
// @param request - UpdateAggregateRemediationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateAggregateRemediationResponse
func (client *Client) UpdateAggregateRemediationWithOptions(request *UpdateAggregateRemediationRequest, runtime *util.RuntimeOptions) (_result *UpdateAggregateRemediationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.InvokeType)) {
		body["InvokeType"] = request.InvokeType
	}

	if !tea.BoolValue(util.IsUnset(request.Params)) {
		body["Params"] = request.Params
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationId)) {
		body["RemediationId"] = request.RemediationId
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationTemplateId)) {
		body["RemediationTemplateId"] = request.RemediationTemplateId
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationType)) {
		body["RemediationType"] = request.RemediationType
	}

	if !tea.BoolValue(util.IsUnset(request.SourceType)) {
		body["SourceType"] = request.SourceType
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateAggregateRemediation"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateAggregateRemediationResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateAggregateRemediationResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Modifies a remediation template for a rule in an account group.
//
// Description:
//
// This topic describes how to change the execution mode of the `crr-909ba2d4716700eb****` remediation setting for a rule in the `ca-6b4a626622af0012****` account group to `AUTO_EXECUTION`, which specifies automatic remediation. This topic also provides a sample request.
//
// @param request - UpdateAggregateRemediationRequest
//
// @return UpdateAggregateRemediationResponse
func (client *Client) UpdateAggregateRemediation(request *UpdateAggregateRemediationRequest) (_result *UpdateAggregateRemediationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateAggregateRemediationResponse{}
	_body, _err := client.UpdateAggregateRemediationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// The management account or delegated administrator account of a resource directory can be used to modify the name and description of an account group. The management account or delegated administrator account can also be used to add or remove members from the account group.
//
// Description:
//
// This topic provides an example on how to add a member to the account group `ca-dacf86d8314e00eb****`. The member ID is `173808452267****`, the member name is `Tony`, and the member belongs to the resource directory `ResourceDirectory`.
//
// @param tmpReq - UpdateAggregatorRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateAggregatorResponse
func (client *Client) UpdateAggregatorWithOptions(tmpReq *UpdateAggregatorRequest, runtime *util.RuntimeOptions) (_result *UpdateAggregatorResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &UpdateAggregatorShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.AggregatorAccounts)) {
		request.AggregatorAccountsShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.AggregatorAccounts, tea.String("AggregatorAccounts"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorAccountsShrink)) {
		body["AggregatorAccounts"] = request.AggregatorAccountsShrink
	}

	if !tea.BoolValue(util.IsUnset(request.AggregatorId)) {
		body["AggregatorId"] = request.AggregatorId
	}

	if !tea.BoolValue(util.IsUnset(request.AggregatorName)) {
		body["AggregatorName"] = request.AggregatorName
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.FolderId)) {
		body["FolderId"] = request.FolderId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
		Body:  openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateAggregator"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateAggregatorResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateAggregatorResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// The management account or delegated administrator account of a resource directory can be used to modify the name and description of an account group. The management account or delegated administrator account can also be used to add or remove members from the account group.
//
// Description:
//
// This topic provides an example on how to add a member to the account group `ca-dacf86d8314e00eb****`. The member ID is `173808452267****`, the member name is `Tony`, and the member belongs to the resource directory `ResourceDirectory`.
//
// @param request - UpdateAggregatorRequest
//
// @return UpdateAggregatorResponse
func (client *Client) UpdateAggregator(request *UpdateAggregatorRequest) (_result *UpdateAggregatorResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateAggregatorResponse{}
	_body, _err := client.UpdateAggregatorWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Modifies the configurations of a specific compliance package in the current account.
//
// Description:
//
// This topic provides an example on how to change the value of the `eip-bandwidth-limit` parameter of a rule in the compliance package `cp-a8a8626622af0082****` to `20`.
//
// @param tmpReq - UpdateCompliancePackRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateCompliancePackResponse
func (client *Client) UpdateCompliancePackWithOptions(tmpReq *UpdateCompliancePackRequest, runtime *util.RuntimeOptions) (_result *UpdateCompliancePackResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &UpdateCompliancePackShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.ConfigRules)) {
		request.ConfigRulesShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ConfigRules, tea.String("ConfigRules"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackId)) {
		body["CompliancePackId"] = request.CompliancePackId
	}

	if !tea.BoolValue(util.IsUnset(request.CompliancePackName)) {
		body["CompliancePackName"] = request.CompliancePackName
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRulesShrink)) {
		body["ConfigRules"] = request.ConfigRulesShrink
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeRegionIdsScope)) {
		body["ExcludeRegionIdsScope"] = request.ExcludeRegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceGroupIdsScope)) {
		body["ExcludeResourceGroupIdsScope"] = request.ExcludeResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceIdsScope)) {
		body["ExcludeResourceIdsScope"] = request.ExcludeResourceIdsScope
	}

	bodyFlat := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ExcludeTagsScope)) {
		bodyFlat["ExcludeTagsScope"] = request.ExcludeTagsScope
	}

	if !tea.BoolValue(util.IsUnset(request.RegionIdsScope)) {
		body["RegionIdsScope"] = request.RegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupIdsScope)) {
		body["ResourceGroupIdsScope"] = request.ResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIdsScope)) {
		body["ResourceIdsScope"] = request.ResourceIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		body["RiskLevel"] = request.RiskLevel
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyScope)) {
		body["TagKeyScope"] = request.TagKeyScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagValueScope)) {
		body["TagValueScope"] = request.TagValueScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagsScope)) {
		bodyFlat["TagsScope"] = request.TagsScope
	}

	body = tea.ToMap(body,
		openapiutil.Query(bodyFlat))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
		Body:  openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateCompliancePack"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateCompliancePackResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateCompliancePackResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Modifies the configurations of a specific compliance package in the current account.
//
// Description:
//
// This topic provides an example on how to change the value of the `eip-bandwidth-limit` parameter of a rule in the compliance package `cp-a8a8626622af0082****` to `20`.
//
// @param request - UpdateCompliancePackRequest
//
// @return UpdateCompliancePackResponse
func (client *Client) UpdateCompliancePack(request *UpdateCompliancePackRequest) (_result *UpdateCompliancePackResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateCompliancePackResponse{}
	_body, _err := client.UpdateCompliancePackWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Modifies a delivery channel by using the current account.
//
// Description:
//
// In this example, a delivery channel is disabled. The ID of the delivery channel is `cdc-8e45ff4e06a3a8****```. The Status parameter is set to 0. After the delivery channel is disabled, Cloud Config retains the most recent delivery configuration and stops the delivery of resource data.
//
// @param request - UpdateConfigDeliveryChannelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateConfigDeliveryChannelResponse
func (client *Client) UpdateConfigDeliveryChannelWithOptions(request *UpdateConfigDeliveryChannelRequest, runtime *util.RuntimeOptions) (_result *UpdateConfigDeliveryChannelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		query["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.CompliantSnapshot)) {
		query["CompliantSnapshot"] = request.CompliantSnapshot
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationItemChangeNotification)) {
		query["ConfigurationItemChangeNotification"] = request.ConfigurationItemChangeNotification
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationSnapshot)) {
		query["ConfigurationSnapshot"] = request.ConfigurationSnapshot
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelCondition)) {
		query["DeliveryChannelCondition"] = request.DeliveryChannelCondition
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelId)) {
		query["DeliveryChannelId"] = request.DeliveryChannelId
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelName)) {
		query["DeliveryChannelName"] = request.DeliveryChannelName
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelTargetArn)) {
		query["DeliveryChannelTargetArn"] = request.DeliveryChannelTargetArn
	}

	if !tea.BoolValue(util.IsUnset(request.DeliverySnapshotTime)) {
		query["DeliverySnapshotTime"] = request.DeliverySnapshotTime
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		query["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.NonCompliantNotification)) {
		query["NonCompliantNotification"] = request.NonCompliantNotification
	}

	if !tea.BoolValue(util.IsUnset(request.OversizedDataOSSTargetArn)) {
		query["OversizedDataOSSTargetArn"] = request.OversizedDataOSSTargetArn
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		query["Status"] = request.Status
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateConfigDeliveryChannel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateConfigDeliveryChannelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateConfigDeliveryChannelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Modifies a delivery channel by using the current account.
//
// Description:
//
// In this example, a delivery channel is disabled. The ID of the delivery channel is `cdc-8e45ff4e06a3a8****```. The Status parameter is set to 0. After the delivery channel is disabled, Cloud Config retains the most recent delivery configuration and stops the delivery of resource data.
//
// @param request - UpdateConfigDeliveryChannelRequest
//
// @return UpdateConfigDeliveryChannelResponse
func (client *Client) UpdateConfigDeliveryChannel(request *UpdateConfigDeliveryChannelRequest) (_result *UpdateConfigDeliveryChannelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateConfigDeliveryChannelResponse{}
	_body, _err := client.UpdateConfigDeliveryChannelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Modifies the description, input parameters, and risk level of a rule.
//
// Description:
//
// This topic provides an example on how to change the risk level of the rule `cr-a260626622af0005****` to `3`, which indicates low risk level.
//
// @param tmpReq - UpdateConfigRuleRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateConfigRuleResponse
func (client *Client) UpdateConfigRuleWithOptions(tmpReq *UpdateConfigRuleRequest, runtime *util.RuntimeOptions) (_result *UpdateConfigRuleResponse, _err error) {
	_err = util.ValidateModel(tmpReq)
	if _err != nil {
		return _result, _err
	}
	request := &UpdateConfigRuleShrinkRequest{}
	openapiutil.Convert(tmpReq, request)
	if !tea.BoolValue(util.IsUnset(tmpReq.InputParameters)) {
		request.InputParametersShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.InputParameters, tea.String("InputParameters"), tea.String("json"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.ResourceTypesScope)) {
		request.ResourceTypesScopeShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.ResourceTypesScope, tea.String("ResourceTypesScope"), tea.String("simple"))
	}

	if !tea.BoolValue(util.IsUnset(tmpReq.Tag)) {
		request.TagShrink = openapiutil.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, tea.String("Tag"), tea.String("json"))
	}

	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.TagShrink)) {
		query["Tag"] = request.TagShrink
	}

	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleId)) {
		body["ConfigRuleId"] = request.ConfigRuleId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleName)) {
		body["ConfigRuleName"] = request.ConfigRuleName
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigRuleTriggerTypes)) {
		body["ConfigRuleTriggerTypes"] = request.ConfigRuleTriggerTypes
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeRegionIdsScope)) {
		body["ExcludeRegionIdsScope"] = request.ExcludeRegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceGroupIdsScope)) {
		body["ExcludeResourceGroupIdsScope"] = request.ExcludeResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExcludeResourceIdsScope)) {
		body["ExcludeResourceIdsScope"] = request.ExcludeResourceIdsScope
	}

	bodyFlat := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ExcludeTagsScope)) {
		bodyFlat["ExcludeTagsScope"] = request.ExcludeTagsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ExtendContent)) {
		body["ExtendContent"] = request.ExtendContent
	}

	if !tea.BoolValue(util.IsUnset(request.InputParametersShrink)) {
		body["InputParameters"] = request.InputParametersShrink
	}

	if !tea.BoolValue(util.IsUnset(request.MaximumExecutionFrequency)) {
		body["MaximumExecutionFrequency"] = request.MaximumExecutionFrequency
	}

	if !tea.BoolValue(util.IsUnset(request.RegionIdsScope)) {
		body["RegionIdsScope"] = request.RegionIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupIdsScope)) {
		body["ResourceGroupIdsScope"] = request.ResourceGroupIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIdsScope)) {
		body["ResourceIdsScope"] = request.ResourceIdsScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceNameScope)) {
		body["ResourceNameScope"] = request.ResourceNameScope
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceTypesScopeShrink)) {
		body["ResourceTypesScope"] = request.ResourceTypesScopeShrink
	}

	if !tea.BoolValue(util.IsUnset(request.RiskLevel)) {
		body["RiskLevel"] = request.RiskLevel
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyLogicScope)) {
		body["TagKeyLogicScope"] = request.TagKeyLogicScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeyScope)) {
		body["TagKeyScope"] = request.TagKeyScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagValueScope)) {
		body["TagValueScope"] = request.TagValueScope
	}

	if !tea.BoolValue(util.IsUnset(request.TagsScope)) {
		bodyFlat["TagsScope"] = request.TagsScope
	}

	body = tea.ToMap(body,
		openapiutil.Query(bodyFlat))
	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
		Body:  openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateConfigRule"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateConfigRuleResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateConfigRuleResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Modifies the description, input parameters, and risk level of a rule.
//
// Description:
//
// This topic provides an example on how to change the risk level of the rule `cr-a260626622af0005****` to `3`, which indicates low risk level.
//
// @param request - UpdateConfigRuleRequest
//
// @return UpdateConfigRuleResponse
func (client *Client) UpdateConfigRule(request *UpdateConfigRuleRequest) (_result *UpdateConfigRuleResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateConfigRuleResponse{}
	_body, _err := client.UpdateConfigRuleWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Modifies the resource monitoring scope of the current account.
//
// Description:
//
// This topic provides an example on how to change the resource monitoring scope of the current account to ACS::ECS::Instance.
//
// @param request - UpdateConfigurationRecorderRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateConfigurationRecorderResponse
func (client *Client) UpdateConfigurationRecorderWithOptions(request *UpdateConfigurationRecorderRequest, runtime *util.RuntimeOptions) (_result *UpdateConfigurationRecorderResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ResourceTypes)) {
		body["ResourceTypes"] = request.ResourceTypes
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateConfigurationRecorder"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateConfigurationRecorderResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateConfigurationRecorderResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Modifies the resource monitoring scope of the current account.
//
// Description:
//
// This topic provides an example on how to change the resource monitoring scope of the current account to ACS::ECS::Instance.
//
// @param request - UpdateConfigurationRecorderRequest
//
// @return UpdateConfigurationRecorderResponse
func (client *Client) UpdateConfigurationRecorder(request *UpdateConfigurationRecorderRequest) (_result *UpdateConfigurationRecorderResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateConfigurationRecorderResponse{}
	_body, _err := client.UpdateConfigurationRecorderWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Deprecated: OpenAPI UpdateDeliveryChannel is deprecated, please use Config::2020-09-07::UpdateConfigDeliveryChannel,Config::2020-09-07::UpdateAggregateConfigDeliveryChannel instead.
//
// Summary:
//
// Modifies a delivery channel.
//
// Description:
//
// This topic provides an example on how to change the status of the delivery channel whose ID is `cdc-8e45ff4e06a3a8****` to 0, which indicates that the delivery channel is disabled. After the delivery channel is disabled, Cloud Config retains the last delivery configuration and stops resource data delivery.
//
// @param request - UpdateDeliveryChannelRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateDeliveryChannelResponse
// Deprecated
func (client *Client) UpdateDeliveryChannelWithOptions(request *UpdateDeliveryChannelRequest, runtime *util.RuntimeOptions) (_result *UpdateDeliveryChannelResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationItemChangeNotification)) {
		body["ConfigurationItemChangeNotification"] = request.ConfigurationItemChangeNotification
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigurationSnapshot)) {
		body["ConfigurationSnapshot"] = request.ConfigurationSnapshot
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelAssumeRoleArn)) {
		body["DeliveryChannelAssumeRoleArn"] = request.DeliveryChannelAssumeRoleArn
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelCondition)) {
		body["DeliveryChannelCondition"] = request.DeliveryChannelCondition
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelId)) {
		body["DeliveryChannelId"] = request.DeliveryChannelId
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelName)) {
		body["DeliveryChannelName"] = request.DeliveryChannelName
	}

	if !tea.BoolValue(util.IsUnset(request.DeliveryChannelTargetArn)) {
		body["DeliveryChannelTargetArn"] = request.DeliveryChannelTargetArn
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		body["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.NonCompliantNotification)) {
		body["NonCompliantNotification"] = request.NonCompliantNotification
	}

	if !tea.BoolValue(util.IsUnset(request.OversizedDataOSSTargetArn)) {
		body["OversizedDataOSSTargetArn"] = request.OversizedDataOSSTargetArn
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		body["Status"] = request.Status
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateDeliveryChannel"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateDeliveryChannelResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateDeliveryChannelResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Deprecated: OpenAPI UpdateDeliveryChannel is deprecated, please use Config::2020-09-07::UpdateConfigDeliveryChannel,Config::2020-09-07::UpdateAggregateConfigDeliveryChannel instead.
//
// Summary:
//
// Modifies a delivery channel.
//
// Description:
//
// This topic provides an example on how to change the status of the delivery channel whose ID is `cdc-8e45ff4e06a3a8****` to 0, which indicates that the delivery channel is disabled. After the delivery channel is disabled, Cloud Config retains the last delivery configuration and stops resource data delivery.
//
// @param request - UpdateDeliveryChannelRequest
//
// @return UpdateDeliveryChannelResponse
// Deprecated
func (client *Client) UpdateDeliveryChannel(request *UpdateDeliveryChannelRequest) (_result *UpdateDeliveryChannelResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateDeliveryChannelResponse{}
	_body, _err := client.UpdateDeliveryChannelWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Enables or disables the integration of a cloud service.
//
// @param request - UpdateIntegratedServiceStatusRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateIntegratedServiceStatusResponse
func (client *Client) UpdateIntegratedServiceStatusWithOptions(request *UpdateIntegratedServiceStatusRequest, runtime *util.RuntimeOptions) (_result *UpdateIntegratedServiceStatusResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AggregatorDeliveryDataType)) {
		body["AggregatorDeliveryDataType"] = request.AggregatorDeliveryDataType
	}

	if !tea.BoolValue(util.IsUnset(request.IntegratedTypes)) {
		body["IntegratedTypes"] = request.IntegratedTypes
	}

	if !tea.BoolValue(util.IsUnset(request.ServiceCode)) {
		body["ServiceCode"] = request.ServiceCode
	}

	if !tea.BoolValue(util.IsUnset(request.Status)) {
		body["Status"] = request.Status
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateIntegratedServiceStatus"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateIntegratedServiceStatusResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateIntegratedServiceStatusResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Enables or disables the integration of a cloud service.
//
// @param request - UpdateIntegratedServiceStatusRequest
//
// @return UpdateIntegratedServiceStatusResponse
func (client *Client) UpdateIntegratedServiceStatus(request *UpdateIntegratedServiceStatusRequest) (_result *UpdateIntegratedServiceStatusResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateIntegratedServiceStatusResponse{}
	_body, _err := client.UpdateIntegratedServiceStatusWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Updates a remediation template for a rule.
//
// Description:
//
// This topic describes how to change the execution mode of the `crr-909ba2d4716700eb****` remediation setting to `AUTO_EXECUTION`, which specifies automatic remediation. This topic also provides a sample request.
//
// @param request - UpdateRemediationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateRemediationResponse
func (client *Client) UpdateRemediationWithOptions(request *UpdateRemediationRequest, runtime *util.RuntimeOptions) (_result *UpdateRemediationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	body := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		body["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.InvokeType)) {
		body["InvokeType"] = request.InvokeType
	}

	if !tea.BoolValue(util.IsUnset(request.Params)) {
		body["Params"] = request.Params
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationId)) {
		body["RemediationId"] = request.RemediationId
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationTemplateId)) {
		body["RemediationTemplateId"] = request.RemediationTemplateId
	}

	if !tea.BoolValue(util.IsUnset(request.RemediationType)) {
		body["RemediationType"] = request.RemediationType
	}

	if !tea.BoolValue(util.IsUnset(request.SourceType)) {
		body["SourceType"] = request.SourceType
	}

	req := &openapi.OpenApiRequest{
		Body: openapiutil.ParseToMap(body),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateRemediation"),
		Version:     tea.String("2020-09-07"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	if tea.BoolValue(util.IsUnset(client.SignatureVersion)) || !tea.BoolValue(util.EqualString(client.SignatureVersion, tea.String("v4"))) {
		_result = &UpdateRemediationResponse{}
		_body, _err := client.CallApi(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	} else {
		_result = &UpdateRemediationResponse{}
		_body, _err := client.Execute(params, req, runtime)
		if _err != nil {
			return _result, _err
		}
		_err = tea.Convert(_body, &_result)
		return _result, _err
	}

}

// Summary:
//
// Updates a remediation template for a rule.
//
// Description:
//
// This topic describes how to change the execution mode of the `crr-909ba2d4716700eb****` remediation setting to `AUTO_EXECUTION`, which specifies automatic remediation. This topic also provides a sample request.
//
// @param request - UpdateRemediationRequest
//
// @return UpdateRemediationResponse
func (client *Client) UpdateRemediation(request *UpdateRemediationRequest) (_result *UpdateRemediationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateRemediationResponse{}
	_body, _err := client.UpdateRemediationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}
