// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iDescribeColumnsV2ResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetCurrentPage(v int32) *DescribeColumnsV2ResponseBody
	GetCurrentPage() *int32
	SetItems(v []*DescribeColumnsV2ResponseBodyItems) *DescribeColumnsV2ResponseBody
	GetItems() []*DescribeColumnsV2ResponseBodyItems
	SetPageSize(v int32) *DescribeColumnsV2ResponseBody
	GetPageSize() *int32
	SetRequestId(v string) *DescribeColumnsV2ResponseBody
	GetRequestId() *string
	SetTotalCount(v int32) *DescribeColumnsV2ResponseBody
	GetTotalCount() *int32
}

type DescribeColumnsV2ResponseBody struct {
	// When performing a paginated query, sets the current page number. Default value: **1**.
	//
	// example:
	//
	// 1
	CurrentPage *int32 `json:"CurrentPage,omitempty" xml:"CurrentPage,omitempty"`
	// List of recognition results for the columns in the data table.
	Items []*DescribeColumnsV2ResponseBodyItems `json:"Items,omitempty" xml:"Items,omitempty" type:"Repeated"`
	// When performing a paginated query, sets the maximum number of data asset instances displayed per page. Default value: **10**.
	//
	// example:
	//
	// 10
	PageSize *int32 `json:"PageSize,omitempty" xml:"PageSize,omitempty"`
	// The unique identifier generated by Alibaba Cloud for this request.
	//
	// example:
	//
	// B1F2BB1F-04EC-5D36-B136-B4DE17FD8DE0
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Total number of data entries in the result.
	//
	// example:
	//
	// 12
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s DescribeColumnsV2ResponseBody) String() string {
	return dara.Prettify(s)
}

func (s DescribeColumnsV2ResponseBody) GoString() string {
	return s.String()
}

func (s *DescribeColumnsV2ResponseBody) GetCurrentPage() *int32 {
	return s.CurrentPage
}

func (s *DescribeColumnsV2ResponseBody) GetItems() []*DescribeColumnsV2ResponseBodyItems {
	return s.Items
}

func (s *DescribeColumnsV2ResponseBody) GetPageSize() *int32 {
	return s.PageSize
}

func (s *DescribeColumnsV2ResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *DescribeColumnsV2ResponseBody) GetTotalCount() *int32 {
	return s.TotalCount
}

func (s *DescribeColumnsV2ResponseBody) SetCurrentPage(v int32) *DescribeColumnsV2ResponseBody {
	s.CurrentPage = &v
	return s
}

func (s *DescribeColumnsV2ResponseBody) SetItems(v []*DescribeColumnsV2ResponseBodyItems) *DescribeColumnsV2ResponseBody {
	s.Items = v
	return s
}

func (s *DescribeColumnsV2ResponseBody) SetPageSize(v int32) *DescribeColumnsV2ResponseBody {
	s.PageSize = &v
	return s
}

func (s *DescribeColumnsV2ResponseBody) SetRequestId(v string) *DescribeColumnsV2ResponseBody {
	s.RequestId = &v
	return s
}

func (s *DescribeColumnsV2ResponseBody) SetTotalCount(v int32) *DescribeColumnsV2ResponseBody {
	s.TotalCount = &v
	return s
}

func (s *DescribeColumnsV2ResponseBody) Validate() error {
	return dara.Validate(s)
}

type DescribeColumnsV2ResponseBodyItems struct {
	// The creation time of the column data in the data asset table, in milliseconds.
	//
	// example:
	//
	// 1536751124000
	CreationTime *int64 `json:"CreationTime,omitempty" xml:"CreationTime,omitempty"`
	// The data type of the column data in the data asset table.
	//
	// example:
	//
	// varchar
	DataType *string `json:"DataType,omitempty" xml:"DataType,omitempty"`
	// Engine type. Values:
	//
	// - **MySQL**
	//
	// - **MariaDB**
	//
	// - **Oracle**
	//
	// - **PostgreSQL**
	//
	// - **SQLServer**
	//
	// example:
	//
	// MySQL
	EngineType *string `json:"EngineType,omitempty" xml:"EngineType,omitempty"`
	// The unique identifier ID of the column in the data asset table.
	//
	// example:
	//
	// 111111
	Id *string `json:"Id,omitempty" xml:"Id,omitempty"`
	// The ID of the asset instance to which the column data in the data asset table belongs.
	//
	// example:
	//
	// 1232122
	InstanceId *int64 `json:"InstanceId,omitempty" xml:"InstanceId,omitempty"`
	// The name of the asset instance to which the column data in the data asset table belongs.
	//
	// example:
	//
	// rm-1234
	InstanceName *string `json:"InstanceName,omitempty" xml:"InstanceName,omitempty"`
	// Column encryption status. Values:
	//
	// - **-1**: Not encrypted
	//
	// - **1**: Encryption successful
	//
	// - **2**: Encryption failed
	//
	// example:
	//
	// -1
	MaskingStatus *int32 `json:"MaskingStatus,omitempty" xml:"MaskingStatus,omitempty"`
	// Data tag list.
	ModelTags []*DescribeColumnsV2ResponseBodyItemsModelTags `json:"ModelTags,omitempty" xml:"ModelTags,omitempty" type:"Repeated"`
	// The name of the column in the data asset table.
	//
	// example:
	//
	// obj_id
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The risk level name of the asset. Values:
	//
	// - **N/A**: No sensitive data detected.
	//
	// - **S1**: Level 1 sensitive data.
	//
	// - **S2**: Level 2 sensitive data.
	//
	// - **S3**: Level 3 sensitive data.
	//
	// - **S4**: Level 4 sensitive data.
	//
	// example:
	//
	// S4
	OdpsRiskLevelName *string `json:"OdpsRiskLevelName,omitempty" xml:"OdpsRiskLevelName,omitempty"`
	// The risk level code of the asset. Values:
	//
	// - **1**: N/A.
	//
	// - **2**: S1.
	//
	// - **3**: S2.
	//
	// - **4**: S3.
	//
	// - **5**: S4.
	//
	// > A return value <= 1 represents N/A.
	//
	// example:
	//
	// 3
	OdpsRiskLevelValue *int32 `json:"OdpsRiskLevelValue,omitempty" xml:"OdpsRiskLevelValue,omitempty"`
	// The product name to which the column data in the data asset table belongs. Values: **MaxCompute, OSS, ADS, OTS, RDS**, etc.
	//
	// example:
	//
	// RDS
	ProductCode *string `json:"ProductCode,omitempty" xml:"ProductCode,omitempty"`
	// The ID corresponding to the product name of the data asset. Values:
	//
	// - **1**: MaxCompute
	//
	// - **2**: OSS
	//
	// - **3**: ADS
	//
	// - **4**: OTS
	//
	// - **5**: RDS
	//
	// - **6**: SELF_DB
	//
	// example:
	//
	// 5
	ProductId *int64 `json:"ProductId,omitempty" xml:"ProductId,omitempty"`
	// The region where the asset is located.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// Correction record ID.
	//
	// example:
	//
	// 12
	RevisionId *int64 `json:"RevisionId,omitempty" xml:"RevisionId,omitempty"`
	// Correction status. Values:
	//
	// - 1: Corrected.
	//
	// - 0: Not corrected.
	//
	// example:
	//
	// 1
	RevisionStatus *int64 `json:"RevisionStatus,omitempty" xml:"RevisionStatus,omitempty"`
	// The risk level ID of the column data in the data asset table. Values:
	//
	// - **1**: N/A.
	//
	// - **2**: S1.
	//
	// - **3**: S2.
	//
	// - **4**: S3.
	//
	// - **5**: S4.
	//
	// > A return value <= 1 represents N/A.
	//
	// example:
	//
	// 4
	RiskLevelId *int64 `json:"RiskLevelId,omitempty" xml:"RiskLevelId,omitempty"`
	// The risk level name of the column data in the data asset table. Values:
	//
	// - **N/A**: No sensitive data detected.
	//
	// - **S1**: Level 1 sensitive data.
	//
	// - **S2**: Level 2 sensitive data.
	//
	// - **S3**: Level 3 sensitive data.
	//
	// - **S4**: Level 4 sensitive data.
	//
	// example:
	//
	// S1
	RiskLevelName *string `json:"RiskLevelName,omitempty" xml:"RiskLevelName,omitempty"`
	// The ID of the sensitive data recognition rule that the column data in the data asset table hits.
	//
	// example:
	//
	// 1004
	RuleId *int64 `json:"RuleId,omitempty" xml:"RuleId,omitempty"`
	// The name of the sensitive data recognition rule that the column data in the data asset table hits.
	//
	// example:
	//
	// name
	RuleName *string `json:"RuleName,omitempty" xml:"RuleName,omitempty"`
	// The sensitivity level name. Values:
	//
	// - **N/A**: No sensitive data detected.
	//
	// - **S1**: Level 1 sensitive data.
	//
	// - **S2**: Level 2 sensitive data.
	//
	// - **S3**: Level 3 sensitive data.
	//
	// - **S4**: Level 4 sensitive data.
	//
	// example:
	//
	// S2
	SensLevelName *string `json:"SensLevelName,omitempty" xml:"SensLevelName,omitempty"`
	// Whether the column data in the data asset table contains sensitive data. Values:
	//
	// - true: The column data in the data asset table contains sensitive data.
	//
	// - false: The column data in the data asset table does not contain sensitive data.
	//
	// example:
	//
	// true
	Sensitive *bool `json:"Sensitive,omitempty" xml:"Sensitive,omitempty"`
	// The ID of the asset table to which the column data in the data asset table belongs.
	//
	// example:
	//
	// 123
	TableId *int64 `json:"TableId,omitempty" xml:"TableId,omitempty"`
	// The name of the table to which the target column for correction belongs.
	//
	// example:
	//
	// it_table
	TableName *string `json:"TableName,omitempty" xml:"TableName,omitempty"`
}

func (s DescribeColumnsV2ResponseBodyItems) String() string {
	return dara.Prettify(s)
}

func (s DescribeColumnsV2ResponseBodyItems) GoString() string {
	return s.String()
}

func (s *DescribeColumnsV2ResponseBodyItems) GetCreationTime() *int64 {
	return s.CreationTime
}

func (s *DescribeColumnsV2ResponseBodyItems) GetDataType() *string {
	return s.DataType
}

func (s *DescribeColumnsV2ResponseBodyItems) GetEngineType() *string {
	return s.EngineType
}

func (s *DescribeColumnsV2ResponseBodyItems) GetId() *string {
	return s.Id
}

func (s *DescribeColumnsV2ResponseBodyItems) GetInstanceId() *int64 {
	return s.InstanceId
}

func (s *DescribeColumnsV2ResponseBodyItems) GetInstanceName() *string {
	return s.InstanceName
}

func (s *DescribeColumnsV2ResponseBodyItems) GetMaskingStatus() *int32 {
	return s.MaskingStatus
}

func (s *DescribeColumnsV2ResponseBodyItems) GetModelTags() []*DescribeColumnsV2ResponseBodyItemsModelTags {
	return s.ModelTags
}

func (s *DescribeColumnsV2ResponseBodyItems) GetName() *string {
	return s.Name
}

func (s *DescribeColumnsV2ResponseBodyItems) GetOdpsRiskLevelName() *string {
	return s.OdpsRiskLevelName
}

func (s *DescribeColumnsV2ResponseBodyItems) GetOdpsRiskLevelValue() *int32 {
	return s.OdpsRiskLevelValue
}

func (s *DescribeColumnsV2ResponseBodyItems) GetProductCode() *string {
	return s.ProductCode
}

func (s *DescribeColumnsV2ResponseBodyItems) GetProductId() *int64 {
	return s.ProductId
}

func (s *DescribeColumnsV2ResponseBodyItems) GetRegionId() *string {
	return s.RegionId
}

func (s *DescribeColumnsV2ResponseBodyItems) GetRevisionId() *int64 {
	return s.RevisionId
}

func (s *DescribeColumnsV2ResponseBodyItems) GetRevisionStatus() *int64 {
	return s.RevisionStatus
}

func (s *DescribeColumnsV2ResponseBodyItems) GetRiskLevelId() *int64 {
	return s.RiskLevelId
}

func (s *DescribeColumnsV2ResponseBodyItems) GetRiskLevelName() *string {
	return s.RiskLevelName
}

func (s *DescribeColumnsV2ResponseBodyItems) GetRuleId() *int64 {
	return s.RuleId
}

func (s *DescribeColumnsV2ResponseBodyItems) GetRuleName() *string {
	return s.RuleName
}

func (s *DescribeColumnsV2ResponseBodyItems) GetSensLevelName() *string {
	return s.SensLevelName
}

func (s *DescribeColumnsV2ResponseBodyItems) GetSensitive() *bool {
	return s.Sensitive
}

func (s *DescribeColumnsV2ResponseBodyItems) GetTableId() *int64 {
	return s.TableId
}

func (s *DescribeColumnsV2ResponseBodyItems) GetTableName() *string {
	return s.TableName
}

func (s *DescribeColumnsV2ResponseBodyItems) SetCreationTime(v int64) *DescribeColumnsV2ResponseBodyItems {
	s.CreationTime = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetDataType(v string) *DescribeColumnsV2ResponseBodyItems {
	s.DataType = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetEngineType(v string) *DescribeColumnsV2ResponseBodyItems {
	s.EngineType = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetId(v string) *DescribeColumnsV2ResponseBodyItems {
	s.Id = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetInstanceId(v int64) *DescribeColumnsV2ResponseBodyItems {
	s.InstanceId = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetInstanceName(v string) *DescribeColumnsV2ResponseBodyItems {
	s.InstanceName = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetMaskingStatus(v int32) *DescribeColumnsV2ResponseBodyItems {
	s.MaskingStatus = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetModelTags(v []*DescribeColumnsV2ResponseBodyItemsModelTags) *DescribeColumnsV2ResponseBodyItems {
	s.ModelTags = v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetName(v string) *DescribeColumnsV2ResponseBodyItems {
	s.Name = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetOdpsRiskLevelName(v string) *DescribeColumnsV2ResponseBodyItems {
	s.OdpsRiskLevelName = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetOdpsRiskLevelValue(v int32) *DescribeColumnsV2ResponseBodyItems {
	s.OdpsRiskLevelValue = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetProductCode(v string) *DescribeColumnsV2ResponseBodyItems {
	s.ProductCode = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetProductId(v int64) *DescribeColumnsV2ResponseBodyItems {
	s.ProductId = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetRegionId(v string) *DescribeColumnsV2ResponseBodyItems {
	s.RegionId = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetRevisionId(v int64) *DescribeColumnsV2ResponseBodyItems {
	s.RevisionId = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetRevisionStatus(v int64) *DescribeColumnsV2ResponseBodyItems {
	s.RevisionStatus = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetRiskLevelId(v int64) *DescribeColumnsV2ResponseBodyItems {
	s.RiskLevelId = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetRiskLevelName(v string) *DescribeColumnsV2ResponseBodyItems {
	s.RiskLevelName = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetRuleId(v int64) *DescribeColumnsV2ResponseBodyItems {
	s.RuleId = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetRuleName(v string) *DescribeColumnsV2ResponseBodyItems {
	s.RuleName = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetSensLevelName(v string) *DescribeColumnsV2ResponseBodyItems {
	s.SensLevelName = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetSensitive(v bool) *DescribeColumnsV2ResponseBodyItems {
	s.Sensitive = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetTableId(v int64) *DescribeColumnsV2ResponseBodyItems {
	s.TableId = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) SetTableName(v string) *DescribeColumnsV2ResponseBodyItems {
	s.TableName = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItems) Validate() error {
	return dara.Validate(s)
}

type DescribeColumnsV2ResponseBodyItemsModelTags struct {
	// Data tag ID. Values:
	//
	// - **101**: Personal sensitive information
	//
	// - **102**: Personal information
	//
	// - **107**: General information
	//
	// example:
	//
	// 101
	Id *int64 `json:"Id,omitempty" xml:"Id,omitempty"`
	// Data tag name. Values:
	//
	// - Personal sensitive information
	//
	// - Personal information
	//
	// - General information
	//
	// example:
	//
	// personal sensitive information
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
}

func (s DescribeColumnsV2ResponseBodyItemsModelTags) String() string {
	return dara.Prettify(s)
}

func (s DescribeColumnsV2ResponseBodyItemsModelTags) GoString() string {
	return s.String()
}

func (s *DescribeColumnsV2ResponseBodyItemsModelTags) GetId() *int64 {
	return s.Id
}

func (s *DescribeColumnsV2ResponseBodyItemsModelTags) GetName() *string {
	return s.Name
}

func (s *DescribeColumnsV2ResponseBodyItemsModelTags) SetId(v int64) *DescribeColumnsV2ResponseBodyItemsModelTags {
	s.Id = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItemsModelTags) SetName(v string) *DescribeColumnsV2ResponseBodyItemsModelTags {
	s.Name = &v
	return s
}

func (s *DescribeColumnsV2ResponseBodyItemsModelTags) Validate() error {
	return dara.Validate(s)
}
