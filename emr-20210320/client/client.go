// This file is auto-generated, don't edit it. Thanks.
package client

import (
	openapi "github.com/alibabacloud-go/darabonba-openapi/v2/client"
	endpointutil "github.com/alibabacloud-go/endpoint-util/service"
	openapiutil "github.com/alibabacloud-go/openapi-util/service"
	util "github.com/alibabacloud-go/tea-utils/v2/service"
	"github.com/alibabacloud-go/tea/tea"
)

type AckConfig struct {
	// ack集群id
	AckInstanceId        *string `json:"AckInstanceId,omitempty" xml:"AckInstanceId,omitempty"`
	CustomAnnotations    []*Tag  `json:"CustomAnnotations,omitempty" xml:"CustomAnnotations,omitempty" type:"Repeated"`
	CustomLabels         []*Tag  `json:"CustomLabels,omitempty" xml:"CustomLabels,omitempty" type:"Repeated"`
	DataDiskSize         *int32  `json:"DataDiskSize,omitempty" xml:"DataDiskSize,omitempty"`
	DataDiskStorageClass *string `json:"DataDiskStorageClass,omitempty" xml:"DataDiskStorageClass,omitempty"`
	// Pod的CPU限制值。
	LimitCpu *float32 `json:"LimitCpu,omitempty" xml:"LimitCpu,omitempty"`
	// Pod的内存限制值。
	LimitMemory     *float32 `json:"LimitMemory,omitempty" xml:"LimitMemory,omitempty"`
	MountHostCgroup *bool    `json:"MountHostCgroup,omitempty" xml:"MountHostCgroup,omitempty"`
	// ack 命名空间
	Namespace *string `json:"Namespace,omitempty" xml:"Namespace,omitempty"`
	// ack的节点标签限制
	NodeSelectors []*Tag `json:"NodeSelectors,omitempty" xml:"NodeSelectors,omitempty" type:"Repeated"`
	// Pod的CPU请求值
	RequestCpu *float32 `json:"RequestCpu,omitempty" xml:"RequestCpu,omitempty"`
	// Pod的内存请求值。
	RequestMemory *float32 `json:"RequestMemory,omitempty" xml:"RequestMemory,omitempty"`
	// ack的节点污点容忍
	Tolerations []*Toleration `json:"Tolerations,omitempty" xml:"Tolerations,omitempty" type:"Repeated"`
}

func (s AckConfig) String() string {
	return tea.Prettify(s)
}

func (s AckConfig) GoString() string {
	return s.String()
}

func (s *AckConfig) SetAckInstanceId(v string) *AckConfig {
	s.AckInstanceId = &v
	return s
}

func (s *AckConfig) SetCustomAnnotations(v []*Tag) *AckConfig {
	s.CustomAnnotations = v
	return s
}

func (s *AckConfig) SetCustomLabels(v []*Tag) *AckConfig {
	s.CustomLabels = v
	return s
}

func (s *AckConfig) SetDataDiskSize(v int32) *AckConfig {
	s.DataDiskSize = &v
	return s
}

func (s *AckConfig) SetDataDiskStorageClass(v string) *AckConfig {
	s.DataDiskStorageClass = &v
	return s
}

func (s *AckConfig) SetLimitCpu(v float32) *AckConfig {
	s.LimitCpu = &v
	return s
}

func (s *AckConfig) SetLimitMemory(v float32) *AckConfig {
	s.LimitMemory = &v
	return s
}

func (s *AckConfig) SetMountHostCgroup(v bool) *AckConfig {
	s.MountHostCgroup = &v
	return s
}

func (s *AckConfig) SetNamespace(v string) *AckConfig {
	s.Namespace = &v
	return s
}

func (s *AckConfig) SetNodeSelectors(v []*Tag) *AckConfig {
	s.NodeSelectors = v
	return s
}

func (s *AckConfig) SetRequestCpu(v float32) *AckConfig {
	s.RequestCpu = &v
	return s
}

func (s *AckConfig) SetRequestMemory(v float32) *AckConfig {
	s.RequestMemory = &v
	return s
}

func (s *AckConfig) SetTolerations(v []*Toleration) *AckConfig {
	s.Tolerations = v
	return s
}

type AckNode struct {
	// 节点ID。
	//
	// example:
	//
	// i-bp1cudc25w2bfwl5****
	NodeId *string `json:"NodeId,omitempty" xml:"NodeId,omitempty"`
	// ACK节点选择器。
	NodeSelector *AckNodeSelector `json:"NodeSelector,omitempty" xml:"NodeSelector,omitempty"`
}

func (s AckNode) String() string {
	return tea.Prettify(s)
}

func (s AckNode) GoString() string {
	return s.String()
}

func (s *AckNode) SetNodeId(v string) *AckNode {
	s.NodeId = &v
	return s
}

func (s *AckNode) SetNodeSelector(v *AckNodeSelector) *AckNode {
	s.NodeSelector = v
	return s
}

type AckNodePool struct {
	// 节点池ID。
	//
	// example:
	//
	// npe76629caa1b14a73bf3e47c6d481****
	NodePoolId *string `json:"NodePoolId,omitempty" xml:"NodePoolId,omitempty"`
	// ACK节点选择器。
	NodeSelector *AckNodeSelector `json:"NodeSelector,omitempty" xml:"NodeSelector,omitempty"`
}

func (s AckNodePool) String() string {
	return tea.Prettify(s)
}

func (s AckNodePool) GoString() string {
	return s.String()
}

func (s *AckNodePool) SetNodePoolId(v string) *AckNodePool {
	s.NodePoolId = &v
	return s
}

func (s *AckNodePool) SetNodeSelector(v *AckNodeSelector) *AckNodePool {
	s.NodeSelector = v
	return s
}

type AckNodeSelector struct {
	// 污点列表。
	Labels []*AckNodeSelectorLabels `json:"Labels,omitempty" xml:"Labels,omitempty" type:"Repeated"`
	// 污点列表。
	Taints []*AckNodeSelectorTaints `json:"Taints,omitempty" xml:"Taints,omitempty" type:"Repeated"`
}

func (s AckNodeSelector) String() string {
	return tea.Prettify(s)
}

func (s AckNodeSelector) GoString() string {
	return s.String()
}

func (s *AckNodeSelector) SetLabels(v []*AckNodeSelectorLabels) *AckNodeSelector {
	s.Labels = v
	return s
}

func (s *AckNodeSelector) SetTaints(v []*AckNodeSelectorTaints) *AckNodeSelector {
	s.Taints = v
	return s
}

type AckNodeSelectorLabels struct {
	// 标签键。
	//
	// example:
	//
	// emr
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// 标签值。
	//
	// example:
	//
	// true
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s AckNodeSelectorLabels) String() string {
	return tea.Prettify(s)
}

func (s AckNodeSelectorLabels) GoString() string {
	return s.String()
}

func (s *AckNodeSelectorLabels) SetKey(v string) *AckNodeSelectorLabels {
	s.Key = &v
	return s
}

func (s *AckNodeSelectorLabels) SetValue(v string) *AckNodeSelectorLabels {
	s.Value = &v
	return s
}

type AckNodeSelectorTaints struct {
	// 污点效果。
	Effect *string `json:"Effect,omitempty" xml:"Effect,omitempty"`
	// 污点键。
	//
	// example:
	//
	// emr
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// 污点值。
	//
	// example:
	//
	// true
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s AckNodeSelectorTaints) String() string {
	return tea.Prettify(s)
}

func (s AckNodeSelectorTaints) GoString() string {
	return s.String()
}

func (s *AckNodeSelectorTaints) SetEffect(v string) *AckNodeSelectorTaints {
	s.Effect = &v
	return s
}

func (s *AckNodeSelectorTaints) SetKey(v string) *AckNodeSelectorTaints {
	s.Key = &v
	return s
}

func (s *AckNodeSelectorTaints) SetValue(v string) *AckNodeSelectorTaints {
	s.Value = &v
	return s
}

type ApiTemplate struct {
	// 接口名。
	//
	// example:
	//
	// CreateCluster
	ApiName *string `json:"ApiName,omitempty" xml:"ApiName,omitempty"`
	// 模版接口参数。
	Content *string `json:"Content,omitempty" xml:"Content,omitempty"`
	// 区域ID。
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// 资源组ID。
	//
	// example:
	//
	// rg-acfmzabjyop****
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	// 模板状态。
	//
	// example:
	//
	// READY
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// 模板ID。
	//
	// example:
	//
	// AT-Af***
	TemplateId *string `json:"TemplateId,omitempty" xml:"TemplateId,omitempty"`
	// 模板ID。
	//
	// example:
	//
	// AT-Af***
	TemplateName *string `json:"TemplateName,omitempty" xml:"TemplateName,omitempty"`
}

func (s ApiTemplate) String() string {
	return tea.Prettify(s)
}

func (s ApiTemplate) GoString() string {
	return s.String()
}

func (s *ApiTemplate) SetApiName(v string) *ApiTemplate {
	s.ApiName = &v
	return s
}

func (s *ApiTemplate) SetContent(v string) *ApiTemplate {
	s.Content = &v
	return s
}

func (s *ApiTemplate) SetRegionId(v string) *ApiTemplate {
	s.RegionId = &v
	return s
}

func (s *ApiTemplate) SetResourceGroupId(v string) *ApiTemplate {
	s.ResourceGroupId = &v
	return s
}

func (s *ApiTemplate) SetStatus(v string) *ApiTemplate {
	s.Status = &v
	return s
}

func (s *ApiTemplate) SetTemplateId(v string) *ApiTemplate {
	s.TemplateId = &v
	return s
}

func (s *ApiTemplate) SetTemplateName(v string) *ApiTemplate {
	s.TemplateName = &v
	return s
}

type Application struct {
	// 应用名称。从EMR控制台集群创建页面可查看到指定发行版的应用名称列表。
	//
	// This parameter is required.
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
}

func (s Application) String() string {
	return tea.Prettify(s)
}

func (s Application) GoString() string {
	return s.String()
}

func (s *Application) SetApplicationName(v string) *Application {
	s.ApplicationName = &v
	return s
}

type ApplicationConfig struct {
	// 应用名称。从EMR控制台集群创建页面可查看到指定发行版的应用名称列表。
	//
	// This parameter is required.
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// 应用配置文件名。
	//
	// This parameter is required.
	//
	// example:
	//
	// hdfs-site.xml
	ConfigFileName *string `json:"ConfigFileName,omitempty" xml:"ConfigFileName,omitempty"`
	// 配置项键。
	//
	// This parameter is required.
	//
	// example:
	//
	// dfs.namenode.checkpoint.period
	ConfigItemKey *string `json:"ConfigItemKey,omitempty" xml:"ConfigItemKey,omitempty"`
	// 配置项值。
	//
	// example:
	//
	// 3600s
	ConfigItemValue *string `json:"ConfigItemValue,omitempty" xml:"ConfigItemValue,omitempty"`
	// 配置范围。取值范围：
	//
	// - CLUSTER：集群级别。
	//
	// - NODE_GROUP：节点组级别。
	//
	// 默认值：CLUSTER。
	//
	// example:
	//
	// NODE_GROUP
	ConfigScope *string `json:"ConfigScope,omitempty" xml:"ConfigScope,omitempty"`
	// 节点组ID。ConfigScope取值NODE_GROUP时，该参数生效。NodeGroupId参数优先级高于NodeGroupName。
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// 节点组名称。ConfigScope取值NODE_GROUP时，且参数NodeGroupId为空时生效，该参数生效。
	//
	// example:
	//
	// core-1
	NodeGroupName *string `json:"NodeGroupName,omitempty" xml:"NodeGroupName,omitempty"`
}

func (s ApplicationConfig) String() string {
	return tea.Prettify(s)
}

func (s ApplicationConfig) GoString() string {
	return s.String()
}

func (s *ApplicationConfig) SetApplicationName(v string) *ApplicationConfig {
	s.ApplicationName = &v
	return s
}

func (s *ApplicationConfig) SetConfigFileName(v string) *ApplicationConfig {
	s.ConfigFileName = &v
	return s
}

func (s *ApplicationConfig) SetConfigItemKey(v string) *ApplicationConfig {
	s.ConfigItemKey = &v
	return s
}

func (s *ApplicationConfig) SetConfigItemValue(v string) *ApplicationConfig {
	s.ConfigItemValue = &v
	return s
}

func (s *ApplicationConfig) SetConfigScope(v string) *ApplicationConfig {
	s.ConfigScope = &v
	return s
}

func (s *ApplicationConfig) SetNodeGroupId(v string) *ApplicationConfig {
	s.NodeGroupId = &v
	return s
}

func (s *ApplicationConfig) SetNodeGroupName(v string) *ApplicationConfig {
	s.NodeGroupName = &v
	return s
}

type ApplicationConfigFile struct {
	// 应用名称。
	//
	// This parameter is required.
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// 配置文件名称。
	//
	// This parameter is required.
	//
	// example:
	//
	// core-site.xml
	ConfigFileName *string `json:"ConfigFileName,omitempty" xml:"ConfigFileName,omitempty"`
}

func (s ApplicationConfigFile) String() string {
	return tea.Prettify(s)
}

func (s ApplicationConfigFile) GoString() string {
	return s.String()
}

func (s *ApplicationConfigFile) SetApplicationName(v string) *ApplicationConfigFile {
	s.ApplicationName = &v
	return s
}

func (s *ApplicationConfigFile) SetConfigFileName(v string) *ApplicationConfigFile {
	s.ConfigFileName = &v
	return s
}

type ApplicationConfigParam struct {
	// example:
	//
	// DELETE
	ConfigAction *string `json:"ConfigAction,omitempty" xml:"ConfigAction,omitempty"`
	// example:
	//
	// hdfs-site.xml
	ConfigFileName *string `json:"ConfigFileName,omitempty" xml:"ConfigFileName,omitempty"`
	// example:
	//
	// namenode checkpoint period
	ConfigItemDescription *string `json:"ConfigItemDescription,omitempty" xml:"ConfigItemDescription,omitempty"`
	// example:
	//
	// dfs.namenode.checkpoint.period
	ConfigItemKey *string `json:"ConfigItemKey,omitempty" xml:"ConfigItemKey,omitempty"`
	// example:
	//
	// 3600s
	ConfigItemValue *string `json:"ConfigItemValue,omitempty" xml:"ConfigItemValue,omitempty"`
	ConfigScope     *string `json:"ConfigScope,omitempty" xml:"ConfigScope,omitempty"`
	// example:
	//
	// RESTART
	EffectiveActions *string `json:"EffectiveActions,omitempty" xml:"EffectiveActions,omitempty"`
	// example:
	//
	// MANUAL
	EffectiveType *string `json:"EffectiveType,omitempty" xml:"EffectiveType,omitempty"`
	// example:
	//
	// G-DE1CF4661E09****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// example:
	//
	// i-bp10h9rezawz1i4o****
	NodeId *string `json:"NodeId,omitempty" xml:"NodeId,omitempty"`
}

func (s ApplicationConfigParam) String() string {
	return tea.Prettify(s)
}

func (s ApplicationConfigParam) GoString() string {
	return s.String()
}

func (s *ApplicationConfigParam) SetConfigAction(v string) *ApplicationConfigParam {
	s.ConfigAction = &v
	return s
}

func (s *ApplicationConfigParam) SetConfigFileName(v string) *ApplicationConfigParam {
	s.ConfigFileName = &v
	return s
}

func (s *ApplicationConfigParam) SetConfigItemDescription(v string) *ApplicationConfigParam {
	s.ConfigItemDescription = &v
	return s
}

func (s *ApplicationConfigParam) SetConfigItemKey(v string) *ApplicationConfigParam {
	s.ConfigItemKey = &v
	return s
}

func (s *ApplicationConfigParam) SetConfigItemValue(v string) *ApplicationConfigParam {
	s.ConfigItemValue = &v
	return s
}

func (s *ApplicationConfigParam) SetConfigScope(v string) *ApplicationConfigParam {
	s.ConfigScope = &v
	return s
}

func (s *ApplicationConfigParam) SetEffectiveActions(v string) *ApplicationConfigParam {
	s.EffectiveActions = &v
	return s
}

func (s *ApplicationConfigParam) SetEffectiveType(v string) *ApplicationConfigParam {
	s.EffectiveType = &v
	return s
}

func (s *ApplicationConfigParam) SetNodeGroupId(v string) *ApplicationConfigParam {
	s.NodeGroupId = &v
	return s
}

func (s *ApplicationConfigParam) SetNodeId(v string) *ApplicationConfigParam {
	s.NodeId = &v
	return s
}

type Attribute struct {
	// 键。
	//
	// example:
	//
	// currentYarnRangerPluginState
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// 值。
	//
	// example:
	//
	// true
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s Attribute) String() string {
	return tea.Prettify(s)
}

func (s Attribute) GoString() string {
	return s.String()
}

func (s *Attribute) SetKey(v string) *Attribute {
	s.Key = &v
	return s
}

func (s *Attribute) SetValue(v string) *Attribute {
	s.Value = &v
	return s
}

type AutoRenewInstance struct {
	// 自动续费。
	//
	// example:
	//
	// true
	AutoRenew *bool `json:"AutoRenew,omitempty" xml:"AutoRenew,omitempty"`
	// 自动续费时长。
	//
	// example:
	//
	// 12
	AutoRenewDuration *int32 `json:"AutoRenewDuration,omitempty" xml:"AutoRenewDuration,omitempty"`
	// 自动付费时长单位。
	//
	// example:
	//
	// Month
	AutoRenewDurationUnit *string `json:"AutoRenewDurationUnit,omitempty" xml:"AutoRenewDurationUnit,omitempty"`
	// emr实例自动续费时长。
	//
	// example:
	//
	// 12
	EmrAutoRenewDuration *int32 `json:"EmrAutoRenewDuration,omitempty" xml:"EmrAutoRenewDuration,omitempty"`
	// emr实例自动续费时长单位。
	//
	// example:
	//
	// Month
	EmrAutoRenewDurationUnit *string `json:"EmrAutoRenewDurationUnit,omitempty" xml:"EmrAutoRenewDurationUnit,omitempty"`
	// 节点ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// i-bp1cudc25w2bfwl5****
	InstanceId *string `json:"InstanceId,omitempty" xml:"InstanceId,omitempty"`
}

func (s AutoRenewInstance) String() string {
	return tea.Prettify(s)
}

func (s AutoRenewInstance) GoString() string {
	return s.String()
}

func (s *AutoRenewInstance) SetAutoRenew(v bool) *AutoRenewInstance {
	s.AutoRenew = &v
	return s
}

func (s *AutoRenewInstance) SetAutoRenewDuration(v int32) *AutoRenewInstance {
	s.AutoRenewDuration = &v
	return s
}

func (s *AutoRenewInstance) SetAutoRenewDurationUnit(v string) *AutoRenewInstance {
	s.AutoRenewDurationUnit = &v
	return s
}

func (s *AutoRenewInstance) SetEmrAutoRenewDuration(v int32) *AutoRenewInstance {
	s.EmrAutoRenewDuration = &v
	return s
}

func (s *AutoRenewInstance) SetEmrAutoRenewDurationUnit(v string) *AutoRenewInstance {
	s.EmrAutoRenewDurationUnit = &v
	return s
}

func (s *AutoRenewInstance) SetInstanceId(v string) *AutoRenewInstance {
	s.InstanceId = &v
	return s
}

type AutoRenewInstanceParam struct {
	AutoRenew             *string `json:"AutoRenew,omitempty" xml:"AutoRenew,omitempty"`
	AutoRenewDuration     *string `json:"AutoRenewDuration,omitempty" xml:"AutoRenewDuration,omitempty"`
	AutoRenewDurationUnit *string `json:"AutoRenewDurationUnit,omitempty" xml:"AutoRenewDurationUnit,omitempty"`
	InstanceId            *string `json:"InstanceId,omitempty" xml:"InstanceId,omitempty"`
}

func (s AutoRenewInstanceParam) String() string {
	return tea.Prettify(s)
}

func (s AutoRenewInstanceParam) GoString() string {
	return s.String()
}

func (s *AutoRenewInstanceParam) SetAutoRenew(v string) *AutoRenewInstanceParam {
	s.AutoRenew = &v
	return s
}

func (s *AutoRenewInstanceParam) SetAutoRenewDuration(v string) *AutoRenewInstanceParam {
	s.AutoRenewDuration = &v
	return s
}

func (s *AutoRenewInstanceParam) SetAutoRenewDurationUnit(v string) *AutoRenewInstanceParam {
	s.AutoRenewDurationUnit = &v
	return s
}

func (s *AutoRenewInstanceParam) SetInstanceId(v string) *AutoRenewInstanceParam {
	s.InstanceId = &v
	return s
}

type AutoScalingConstraints struct {
	// 按负载伸缩指标单位描述。
	AutoScalingMetricUnits []*MetricUnitValue `json:"AutoScalingMetricUnits,omitempty" xml:"AutoScalingMetricUnits,omitempty" type:"Repeated"`
	// 默认按负载弹性伸缩规则列表
	DefaultMetricTriggeredRules []*ScalingRule `json:"DefaultMetricTriggeredRules,omitempty" xml:"DefaultMetricTriggeredRules,omitempty" type:"Repeated"`
	// 单次伸缩活动最大扩缩容节点数量。
	//
	// example:
	//
	// 1000
	MaxAdjustmentValue *int32 `json:"MaxAdjustmentValue,omitempty" xml:"MaxAdjustmentValue,omitempty"`
	// 按负载规则数量最大值。
	//
	// example:
	//
	// 10
	MaxByLoadRuleCount *int32 `json:"MaxByLoadRuleCount,omitempty" xml:"MaxByLoadRuleCount,omitempty"`
	// 按时间规则数量最大值。
	//
	// example:
	//
	// 10
	MaxByTimeRuleCount *int32 `json:"MaxByTimeRuleCount,omitempty" xml:"MaxByTimeRuleCount,omitempty"`
	// 支持的按负载弹性伸缩指标Tag列表。
	SupportMetricTags []*AutoScalingConstraintsSupportMetricTags `json:"SupportMetricTags,omitempty" xml:"SupportMetricTags,omitempty" type:"Repeated"`
	// 支持的按负载弹性伸缩指标列表。
	//
	// example:
	//
	// ["YarnRootAvailableMemoryUsage","YarnRootAvailableVcores"]
	SupportMetrics []*string `json:"SupportMetrics,omitempty" xml:"SupportMetrics,omitempty" type:"Repeated"`
	// 支持的弹性伸缩规则类型。
	//
	// example:
	//
	// ["TIME_TRIGGER","METRICS_TRIGGER"]
	SupportRuleTypes []*string `json:"SupportRuleTypes,omitempty" xml:"SupportRuleTypes,omitempty" type:"Repeated"`
}

func (s AutoScalingConstraints) String() string {
	return tea.Prettify(s)
}

func (s AutoScalingConstraints) GoString() string {
	return s.String()
}

func (s *AutoScalingConstraints) SetAutoScalingMetricUnits(v []*MetricUnitValue) *AutoScalingConstraints {
	s.AutoScalingMetricUnits = v
	return s
}

func (s *AutoScalingConstraints) SetDefaultMetricTriggeredRules(v []*ScalingRule) *AutoScalingConstraints {
	s.DefaultMetricTriggeredRules = v
	return s
}

func (s *AutoScalingConstraints) SetMaxAdjustmentValue(v int32) *AutoScalingConstraints {
	s.MaxAdjustmentValue = &v
	return s
}

func (s *AutoScalingConstraints) SetMaxByLoadRuleCount(v int32) *AutoScalingConstraints {
	s.MaxByLoadRuleCount = &v
	return s
}

func (s *AutoScalingConstraints) SetMaxByTimeRuleCount(v int32) *AutoScalingConstraints {
	s.MaxByTimeRuleCount = &v
	return s
}

func (s *AutoScalingConstraints) SetSupportMetricTags(v []*AutoScalingConstraintsSupportMetricTags) *AutoScalingConstraints {
	s.SupportMetricTags = v
	return s
}

func (s *AutoScalingConstraints) SetSupportMetrics(v []*string) *AutoScalingConstraints {
	s.SupportMetrics = v
	return s
}

func (s *AutoScalingConstraints) SetSupportRuleTypes(v []*string) *AutoScalingConstraints {
	s.SupportRuleTypes = v
	return s
}

type AutoScalingConstraintsSupportMetricTags struct {
	// 指标名称。
	MetricName *string `json:"MetricName,omitempty" xml:"MetricName,omitempty"`
	// 指标Tag。
	Tags []*Tag `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s AutoScalingConstraintsSupportMetricTags) String() string {
	return tea.Prettify(s)
}

func (s AutoScalingConstraintsSupportMetricTags) GoString() string {
	return s.String()
}

func (s *AutoScalingConstraintsSupportMetricTags) SetMetricName(v string) *AutoScalingConstraintsSupportMetricTags {
	s.MetricName = &v
	return s
}

func (s *AutoScalingConstraintsSupportMetricTags) SetTags(v []*Tag) *AutoScalingConstraintsSupportMetricTags {
	s.Tags = v
	return s
}

type AutoScalingPolicy struct {
	Constraints  *AutoScalingPolicyConstraints `json:"constraints,omitempty" xml:"constraints,omitempty" type:"Struct"`
	ScalingRules []*ScalingRule                `json:"scalingRules,omitempty" xml:"scalingRules,omitempty" type:"Repeated"`
}

func (s AutoScalingPolicy) String() string {
	return tea.Prettify(s)
}

func (s AutoScalingPolicy) GoString() string {
	return s.String()
}

func (s *AutoScalingPolicy) SetConstraints(v *AutoScalingPolicyConstraints) *AutoScalingPolicy {
	s.Constraints = v
	return s
}

func (s *AutoScalingPolicy) SetScalingRules(v []*ScalingRule) *AutoScalingPolicy {
	s.ScalingRules = v
	return s
}

type AutoScalingPolicyConstraints struct {
	MaxCapacity *int32 `json:"maxCapacity,omitempty" xml:"maxCapacity,omitempty"`
	MinCapacity *int32 `json:"minCapacity,omitempty" xml:"minCapacity,omitempty"`
}

func (s AutoScalingPolicyConstraints) String() string {
	return tea.Prettify(s)
}

func (s AutoScalingPolicyConstraints) GoString() string {
	return s.String()
}

func (s *AutoScalingPolicyConstraints) SetMaxCapacity(v int32) *AutoScalingPolicyConstraints {
	s.MaxCapacity = &v
	return s
}

func (s *AutoScalingPolicyConstraints) SetMinCapacity(v int32) *AutoScalingPolicyConstraints {
	s.MinCapacity = &v
	return s
}

type ByLoadScalingRule struct {
	// 比较符。
	//
	// This parameter is required.
	//
	// example:
	//
	// LT
	ComparisonOperator *string `json:"ComparisonOperator,omitempty" xml:"ComparisonOperator,omitempty"`
	CoolDownInterval   *int32  `json:"CoolDownInterval,omitempty" xml:"CoolDownInterval,omitempty"`
	// 统计次数。
	//
	// This parameter is required.
	//
	// example:
	//
	// 2
	EvaluationCount *int32 `json:"EvaluationCount,omitempty" xml:"EvaluationCount,omitempty"`
	// 指标名称。指标名称需要在 ListAutoScalingMetrics 接口返回的指标名称列表中。
	//
	// This parameter is required.
	//
	// example:
	//
	// yarn_resourcemanager_root_availablememoryusage
	MetricName *string `json:"MetricName,omitempty" xml:"MetricName,omitempty"`
	// 统计量名称。
	//
	// This parameter is required.
	//
	// example:
	//
	// AVG
	Statistics *string `json:"Statistics,omitempty" xml:"Statistics,omitempty"`
	// 阈值。
	//
	// This parameter is required.
	//
	// example:
	//
	// 12.5
	Threshold *float64 `json:"Threshold,omitempty" xml:"Threshold,omitempty"`
	// 统计窗口。单位为秒。
	//
	// This parameter is required.
	//
	// example:
	//
	// 30
	TimeWindow *int32 `json:"TimeWindow,omitempty" xml:"TimeWindow,omitempty"`
}

func (s ByLoadScalingRule) String() string {
	return tea.Prettify(s)
}

func (s ByLoadScalingRule) GoString() string {
	return s.String()
}

func (s *ByLoadScalingRule) SetComparisonOperator(v string) *ByLoadScalingRule {
	s.ComparisonOperator = &v
	return s
}

func (s *ByLoadScalingRule) SetCoolDownInterval(v int32) *ByLoadScalingRule {
	s.CoolDownInterval = &v
	return s
}

func (s *ByLoadScalingRule) SetEvaluationCount(v int32) *ByLoadScalingRule {
	s.EvaluationCount = &v
	return s
}

func (s *ByLoadScalingRule) SetMetricName(v string) *ByLoadScalingRule {
	s.MetricName = &v
	return s
}

func (s *ByLoadScalingRule) SetStatistics(v string) *ByLoadScalingRule {
	s.Statistics = &v
	return s
}

func (s *ByLoadScalingRule) SetThreshold(v float64) *ByLoadScalingRule {
	s.Threshold = &v
	return s
}

func (s *ByLoadScalingRule) SetTimeWindow(v int32) *ByLoadScalingRule {
	s.TimeWindow = &v
	return s
}

type ByLoadScalingRuleSpec struct {
	// 比较符。
	//
	// This parameter is required.
	//
	// example:
	//
	// LT
	ComparisonOperator *string `json:"ComparisonOperator,omitempty" xml:"ComparisonOperator,omitempty"`
	// 统计次数。
	//
	// This parameter is required.
	//
	// example:
	//
	// 2
	EvaluationCount *int32 `json:"EvaluationCount,omitempty" xml:"EvaluationCount,omitempty"`
	// 指标名称。指标名称需要在 ListAutoScalingMetrics 接口返回的指标名称列表中。
	//
	// This parameter is required.
	//
	// example:
	//
	// yarn_resourcemanager_root_availablememoryusage
	MetricName *string `json:"MetricName,omitempty" xml:"MetricName,omitempty"`
	// 统计量名称。
	//
	// This parameter is required.
	//
	// example:
	//
	// AVG
	Statistics *string `json:"Statistics,omitempty" xml:"Statistics,omitempty"`
	// 阈值。
	//
	// This parameter is required.
	//
	// example:
	//
	// 12.5
	Threshold *float64 `json:"Threshold,omitempty" xml:"Threshold,omitempty"`
	// 统计窗口。单位为秒。
	//
	// This parameter is required.
	//
	// example:
	//
	// 30
	TimeWindow *int32 `json:"TimeWindow,omitempty" xml:"TimeWindow,omitempty"`
}

func (s ByLoadScalingRuleSpec) String() string {
	return tea.Prettify(s)
}

func (s ByLoadScalingRuleSpec) GoString() string {
	return s.String()
}

func (s *ByLoadScalingRuleSpec) SetComparisonOperator(v string) *ByLoadScalingRuleSpec {
	s.ComparisonOperator = &v
	return s
}

func (s *ByLoadScalingRuleSpec) SetEvaluationCount(v int32) *ByLoadScalingRuleSpec {
	s.EvaluationCount = &v
	return s
}

func (s *ByLoadScalingRuleSpec) SetMetricName(v string) *ByLoadScalingRuleSpec {
	s.MetricName = &v
	return s
}

func (s *ByLoadScalingRuleSpec) SetStatistics(v string) *ByLoadScalingRuleSpec {
	s.Statistics = &v
	return s
}

func (s *ByLoadScalingRuleSpec) SetThreshold(v float64) *ByLoadScalingRuleSpec {
	s.Threshold = &v
	return s
}

func (s *ByLoadScalingRuleSpec) SetTimeWindow(v int32) *ByLoadScalingRuleSpec {
	s.TimeWindow = &v
	return s
}

type ByTimeScalingRule struct {
	// 重复执行定时任务的结束时间戳。单位为毫秒。
	//
	// example:
	//
	// 1639714800000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 定时任务触发操作失败后，在此时间内重试。单位为秒，取值范围：0~3600。
	//
	// example:
	//
	// 600
	LaunchExpirationTime *int32 `json:"LaunchExpirationTime,omitempty" xml:"LaunchExpirationTime,omitempty"`
	// 启动时间戳。单位为毫秒。
	//
	// This parameter is required.
	//
	// example:
	//
	// 1639714634819
	LaunchTime *int64 `json:"LaunchTime,omitempty" xml:"LaunchTime,omitempty"`
	// 指定时间规则的执行类型。
	//
	// example:
	//
	// WEEKLY
	RecurrenceType *string `json:"RecurrenceType,omitempty" xml:"RecurrenceType,omitempty"`
	// 重复执行定时任务的数值。具体取值取决于 recurrenceType 设置。
	//
	// - recurrenceType 取 MINUTELY 时，只能填一个数值，取值范围：1~1440。
	//
	// - recurrenceType 取 HOURLY 时，只能填一个数值，取值范围：1~24。
	//
	// - recurrenceType 取 DAILY 时，只能填一个数值，取值范围：1~31。
	//
	// - recurrenceType 取 WEEKLY 时，可以填入多个值，填多个值时使用英文逗号（,）分隔。周一到周天分别用MON，TUE，WED，THU，FRI，SAT，SUN代替。 比如 MON,FRI,SUN 代表周一、周五、周天。
	//
	// - recurrenceType 取 MONTHLY 时，格式为A-B或者A,B。A、B的取值范围为1~31，如果使用A-B时B必须大于A。
	//
	// example:
	//
	// MON,FRI,SUN
	RecurrenceValue *string `json:"RecurrenceValue,omitempty" xml:"RecurrenceValue,omitempty"`
}

func (s ByTimeScalingRule) String() string {
	return tea.Prettify(s)
}

func (s ByTimeScalingRule) GoString() string {
	return s.String()
}

func (s *ByTimeScalingRule) SetEndTime(v int64) *ByTimeScalingRule {
	s.EndTime = &v
	return s
}

func (s *ByTimeScalingRule) SetLaunchExpirationTime(v int32) *ByTimeScalingRule {
	s.LaunchExpirationTime = &v
	return s
}

func (s *ByTimeScalingRule) SetLaunchTime(v int64) *ByTimeScalingRule {
	s.LaunchTime = &v
	return s
}

func (s *ByTimeScalingRule) SetRecurrenceType(v string) *ByTimeScalingRule {
	s.RecurrenceType = &v
	return s
}

func (s *ByTimeScalingRule) SetRecurrenceValue(v string) *ByTimeScalingRule {
	s.RecurrenceValue = &v
	return s
}

type ByTimeScalingRuleSpec struct {
	// 重复执行定时任务的结束时间戳。单位为毫秒。
	//
	// example:
	//
	// 1639714800000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 启动时间戳。单位为毫秒。
	//
	// This parameter is required.
	//
	// example:
	//
	// 1639714634819
	LaunchTime *int64 `json:"LaunchTime,omitempty" xml:"LaunchTime,omitempty"`
	// 指定时间规则的执行类型。
	//
	// example:
	//
	// WEEKLY
	RecurrenceType *string `json:"RecurrenceType,omitempty" xml:"RecurrenceType,omitempty"`
	// 重复执行定时任务的数值。具体取值取决于 recurrenceType 设置。
	//
	// example:
	//
	// MON,FRI,SUN
	RecurrenceValue *string `json:"RecurrenceValue,omitempty" xml:"RecurrenceValue,omitempty"`
}

func (s ByTimeScalingRuleSpec) String() string {
	return tea.Prettify(s)
}

func (s ByTimeScalingRuleSpec) GoString() string {
	return s.String()
}

func (s *ByTimeScalingRuleSpec) SetEndTime(v int64) *ByTimeScalingRuleSpec {
	s.EndTime = &v
	return s
}

func (s *ByTimeScalingRuleSpec) SetLaunchTime(v int64) *ByTimeScalingRuleSpec {
	s.LaunchTime = &v
	return s
}

func (s *ByTimeScalingRuleSpec) SetRecurrenceType(v string) *ByTimeScalingRuleSpec {
	s.RecurrenceType = &v
	return s
}

func (s *ByTimeScalingRuleSpec) SetRecurrenceValue(v string) *ByTimeScalingRuleSpec {
	s.RecurrenceValue = &v
	return s
}

type ClickhouseConf struct {
	InitialReplica *int32  `json:"InitialReplica,omitempty" xml:"InitialReplica,omitempty"`
	InitialShard   *int32  `json:"InitialShard,omitempty" xml:"InitialShard,omitempty"`
	NewNodeCount   *int32  `json:"NewNodeCount,omitempty" xml:"NewNodeCount,omitempty"`
	ResizeType     *string `json:"ResizeType,omitempty" xml:"ResizeType,omitempty"`
}

func (s ClickhouseConf) String() string {
	return tea.Prettify(s)
}

func (s ClickhouseConf) GoString() string {
	return s.String()
}

func (s *ClickhouseConf) SetInitialReplica(v int32) *ClickhouseConf {
	s.InitialReplica = &v
	return s
}

func (s *ClickhouseConf) SetInitialShard(v int32) *ClickhouseConf {
	s.InitialShard = &v
	return s
}

func (s *ClickhouseConf) SetNewNodeCount(v int32) *ClickhouseConf {
	s.NewNodeCount = &v
	return s
}

func (s *ClickhouseConf) SetResizeType(v string) *ClickhouseConf {
	s.ResizeType = &v
	return s
}

type Cluster struct {
	// 集群ID。
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// 集群名称。
	//
	// example:
	//
	// emrtest
	ClusterName *string `json:"ClusterName,omitempty" xml:"ClusterName,omitempty"`
	// 集群状态。
	//
	// example:
	//
	// RUNNING
	ClusterState *string `json:"ClusterState,omitempty" xml:"ClusterState,omitempty"`
	// 集群类型。
	//
	// example:
	//
	// DATALAKE
	ClusterType *string `json:"ClusterType,omitempty" xml:"ClusterType,omitempty"`
	// 创建时间。
	//
	// example:
	//
	// 1592837465784
	CreateTime *int64 `json:"CreateTime,omitempty" xml:"CreateTime,omitempty"`
	// 部署模式。
	//
	// example:
	//
	// HA
	DeployMode *string `json:"DeployMode,omitempty" xml:"DeployMode,omitempty"`
	// EMR默认角色。
	//
	// example:
	//
	// AliyunEMRDefaultRole
	EmrDefaultRole *string `json:"EmrDefaultRole,omitempty" xml:"EmrDefaultRole,omitempty"`
	// 删除时间。
	//
	// example:
	//
	// 1592837465784
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 过期时间。
	//
	// example:
	//
	// 1592837465784
	ExpireTime *int64 `json:"ExpireTime,omitempty" xml:"ExpireTime,omitempty"`
	// 节点属性。
	NodeAttributes *NodeAttributes `json:"NodeAttributes,omitempty" xml:"NodeAttributes,omitempty"`
	// 付费类型。
	//
	// example:
	//
	// PayAsYouGo
	PaymentType *string `json:"PaymentType,omitempty" xml:"PaymentType,omitempty"`
	// 可用时间。
	//
	// example:
	//
	// 1592837465784
	ReadyTime *int64 `json:"ReadyTime,omitempty" xml:"ReadyTime,omitempty"`
	// 地域ID。
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// EMR发行版。
	//
	// example:
	//
	// EMR-5.3.0
	ReleaseVersion *string `json:"ReleaseVersion,omitempty" xml:"ReleaseVersion,omitempty"`
	// 资源组ID。
	//
	// example:
	//
	// rg-acfmzabjyop****
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	// Kerberos安全模式。
	//
	// example:
	//
	// NORMAL
	SecurityMode      *string                   `json:"SecurityMode,omitempty" xml:"SecurityMode,omitempty"`
	StateChangeReason *ClusterStateChangeReason `json:"StateChangeReason,omitempty" xml:"StateChangeReason,omitempty"`
	// 预付费配置。
	SubscriptionConfig *SubscriptionConfig `json:"SubscriptionConfig,omitempty" xml:"SubscriptionConfig,omitempty"`
	// 集群标签。
	Tags []*Tag `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s Cluster) String() string {
	return tea.Prettify(s)
}

func (s Cluster) GoString() string {
	return s.String()
}

func (s *Cluster) SetClusterId(v string) *Cluster {
	s.ClusterId = &v
	return s
}

func (s *Cluster) SetClusterName(v string) *Cluster {
	s.ClusterName = &v
	return s
}

func (s *Cluster) SetClusterState(v string) *Cluster {
	s.ClusterState = &v
	return s
}

func (s *Cluster) SetClusterType(v string) *Cluster {
	s.ClusterType = &v
	return s
}

func (s *Cluster) SetCreateTime(v int64) *Cluster {
	s.CreateTime = &v
	return s
}

func (s *Cluster) SetDeployMode(v string) *Cluster {
	s.DeployMode = &v
	return s
}

func (s *Cluster) SetEmrDefaultRole(v string) *Cluster {
	s.EmrDefaultRole = &v
	return s
}

func (s *Cluster) SetEndTime(v int64) *Cluster {
	s.EndTime = &v
	return s
}

func (s *Cluster) SetExpireTime(v int64) *Cluster {
	s.ExpireTime = &v
	return s
}

func (s *Cluster) SetNodeAttributes(v *NodeAttributes) *Cluster {
	s.NodeAttributes = v
	return s
}

func (s *Cluster) SetPaymentType(v string) *Cluster {
	s.PaymentType = &v
	return s
}

func (s *Cluster) SetReadyTime(v int64) *Cluster {
	s.ReadyTime = &v
	return s
}

func (s *Cluster) SetRegionId(v string) *Cluster {
	s.RegionId = &v
	return s
}

func (s *Cluster) SetReleaseVersion(v string) *Cluster {
	s.ReleaseVersion = &v
	return s
}

func (s *Cluster) SetResourceGroupId(v string) *Cluster {
	s.ResourceGroupId = &v
	return s
}

func (s *Cluster) SetSecurityMode(v string) *Cluster {
	s.SecurityMode = &v
	return s
}

func (s *Cluster) SetStateChangeReason(v *ClusterStateChangeReason) *Cluster {
	s.StateChangeReason = v
	return s
}

func (s *Cluster) SetSubscriptionConfig(v *SubscriptionConfig) *Cluster {
	s.SubscriptionConfig = v
	return s
}

func (s *Cluster) SetTags(v []*Tag) *Cluster {
	s.Tags = v
	return s
}

type ClusterScript struct {
	// example:
	//
	// 取值:FAILED_CONTINUE, FAILED_BLOCKED
	ExecutionFailStrategy *string `json:"ExecutionFailStrategy,omitempty" xml:"ExecutionFailStrategy,omitempty"`
	// example:
	//
	// 取值:BEFORE_INSTALL, AFTER_STARTED
	ExecutionMoment *string       `json:"ExecutionMoment,omitempty" xml:"ExecutionMoment,omitempty"`
	NodeSelect      *NodeSelector `json:"NodeSelect,omitempty" xml:"NodeSelect,omitempty"`
	Priority        *int32        `json:"Priority,omitempty" xml:"Priority,omitempty"`
	ScriptArgs      *string       `json:"ScriptArgs,omitempty" xml:"ScriptArgs,omitempty"`
	ScriptName      *string       `json:"ScriptName,omitempty" xml:"ScriptName,omitempty"`
	ScriptPath      *string       `json:"ScriptPath,omitempty" xml:"ScriptPath,omitempty"`
}

func (s ClusterScript) String() string {
	return tea.Prettify(s)
}

func (s ClusterScript) GoString() string {
	return s.String()
}

func (s *ClusterScript) SetExecutionFailStrategy(v string) *ClusterScript {
	s.ExecutionFailStrategy = &v
	return s
}

func (s *ClusterScript) SetExecutionMoment(v string) *ClusterScript {
	s.ExecutionMoment = &v
	return s
}

func (s *ClusterScript) SetNodeSelect(v *NodeSelector) *ClusterScript {
	s.NodeSelect = v
	return s
}

func (s *ClusterScript) SetPriority(v int32) *ClusterScript {
	s.Priority = &v
	return s
}

func (s *ClusterScript) SetScriptArgs(v string) *ClusterScript {
	s.ScriptArgs = &v
	return s
}

func (s *ClusterScript) SetScriptName(v string) *ClusterScript {
	s.ScriptName = &v
	return s
}

func (s *ClusterScript) SetScriptPath(v string) *ClusterScript {
	s.ScriptPath = &v
	return s
}

type ClusterStateChangeReason struct {
	// 状态码。取值范围：
	//
	// - UserRequest：用户请求。
	//
	// - OutOfStock：请求的ECS实例类型无库存。
	//
	// - NotAuthorized：无权限。
	//
	// - QuotaExceeded：Quota超出。
	//
	// - OperationDenied：操作被拒绝。
	//
	// - AccountException：账号异常。
	//
	// - NodeFailure：ECS节点异常。
	//
	// - BootstrapFailure：引导失败。
	//
	// - ValidationFail：业务逻辑校验失败。
	//
	// - ServiceFailure：依赖的其他服务失败。
	//
	// - InternalError：内部错误。
	//
	// example:
	//
	// OutOfStock
	Code *string `json:"Code,omitempty" xml:"Code,omitempty"`
	// 状态变化信息。
	//
	// example:
	//
	// The requested resource is sold out in the specified zone, try other types of resources or other regions and zones.
	Message *string `json:"Message,omitempty" xml:"Message,omitempty"`
}

func (s ClusterStateChangeReason) String() string {
	return tea.Prettify(s)
}

func (s ClusterStateChangeReason) GoString() string {
	return s.String()
}

func (s *ClusterStateChangeReason) SetCode(v string) *ClusterStateChangeReason {
	s.Code = &v
	return s
}

func (s *ClusterStateChangeReason) SetMessage(v string) *ClusterStateChangeReason {
	s.Message = &v
	return s
}

type ClusterSummary struct {
	// 集群ID。
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// 集群名称。
	//
	// example:
	//
	// emrtest
	ClusterName *string `json:"ClusterName,omitempty" xml:"ClusterName,omitempty"`
	// 集群状态。取值范围：
	//
	// - STARTING：启动中。
	//
	// - START_FAILED：启动失败。
	//
	// - BOOTSTRAPPING：引导操作初始化。
	//
	// - RUNNING：运行中。
	//
	// - TERMINATING：终止中。
	//
	// - TERMINATED：已终止。
	//
	// - TERMINATED_WITH_ERRORS：发生异常导致终止。
	//
	// - TERMINATE_FAILED：终止失败。
	//
	// example:
	//
	// RUNNING
	ClusterState *string `json:"ClusterState,omitempty" xml:"ClusterState,omitempty"`
	// 集群类型。取值范围：
	//
	// - DATALAKE：新版数据湖。
	//
	// - OLAP：数据分析。
	//
	// - DATAFLOW：实时数据流。
	//
	// - DATASERVING：数据服务。
	//
	// example:
	//
	// DATALAKE
	ClusterType *string `json:"ClusterType,omitempty" xml:"ClusterType,omitempty"`
	// 创建时间。
	//
	// example:
	//
	// 1592837465784
	CreateTime *int64 `json:"CreateTime,omitempty" xml:"CreateTime,omitempty"`
	// EMR服务角色。
	EmrDefaultRole *string `json:"EmrDefaultRole,omitempty" xml:"EmrDefaultRole,omitempty"`
	// 删除时间。
	//
	// example:
	//
	// 1592837465784
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 过期时间。
	//
	// example:
	//
	// 1592837465784
	ExpireTime *int64 `json:"ExpireTime,omitempty" xml:"ExpireTime,omitempty"`
	// 付费类型。取值范围：
	//
	// - PayAsYouGo：后付费。
	//
	// - Subscription：预付费。
	//
	// example:
	//
	// PayAsYouGo
	PaymentType *string `json:"PaymentType,omitempty" xml:"PaymentType,omitempty"`
	// 可用时间。
	//
	// example:
	//
	// 1592837465784
	ReadyTime *int64 `json:"ReadyTime,omitempty" xml:"ReadyTime,omitempty"`
	// EMR发行版。
	//
	// example:
	//
	// EMR-5.8.0
	ReleaseVersion *string `json:"ReleaseVersion,omitempty" xml:"ReleaseVersion,omitempty"`
	// 资源组ID。
	//
	// example:
	//
	// rg-acfmzabjyop****
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	// 失败原因。
	StateChangeReason *ClusterStateChangeReason `json:"StateChangeReason,omitempty" xml:"StateChangeReason,omitempty"`
	// 标签列表。
	Tags []*Tag `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s ClusterSummary) String() string {
	return tea.Prettify(s)
}

func (s ClusterSummary) GoString() string {
	return s.String()
}

func (s *ClusterSummary) SetClusterId(v string) *ClusterSummary {
	s.ClusterId = &v
	return s
}

func (s *ClusterSummary) SetClusterName(v string) *ClusterSummary {
	s.ClusterName = &v
	return s
}

func (s *ClusterSummary) SetClusterState(v string) *ClusterSummary {
	s.ClusterState = &v
	return s
}

func (s *ClusterSummary) SetClusterType(v string) *ClusterSummary {
	s.ClusterType = &v
	return s
}

func (s *ClusterSummary) SetCreateTime(v int64) *ClusterSummary {
	s.CreateTime = &v
	return s
}

func (s *ClusterSummary) SetEmrDefaultRole(v string) *ClusterSummary {
	s.EmrDefaultRole = &v
	return s
}

func (s *ClusterSummary) SetEndTime(v int64) *ClusterSummary {
	s.EndTime = &v
	return s
}

func (s *ClusterSummary) SetExpireTime(v int64) *ClusterSummary {
	s.ExpireTime = &v
	return s
}

func (s *ClusterSummary) SetPaymentType(v string) *ClusterSummary {
	s.PaymentType = &v
	return s
}

func (s *ClusterSummary) SetReadyTime(v int64) *ClusterSummary {
	s.ReadyTime = &v
	return s
}

func (s *ClusterSummary) SetReleaseVersion(v string) *ClusterSummary {
	s.ReleaseVersion = &v
	return s
}

func (s *ClusterSummary) SetResourceGroupId(v string) *ClusterSummary {
	s.ResourceGroupId = &v
	return s
}

func (s *ClusterSummary) SetStateChangeReason(v *ClusterStateChangeReason) *ClusterSummary {
	s.StateChangeReason = v
	return s
}

func (s *ClusterSummary) SetTags(v []*Tag) *ClusterSummary {
	s.Tags = v
	return s
}

type ComponentInstanceSelector struct {
	// Deprecated
	ActionScope *string `json:"ActionScope,omitempty" xml:"ActionScope,omitempty"`
	// 应用名称。
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// 组件实例列表。actionScope为COPONENT_INSTANCE时使用。
	ComponentInstances []*ComponentInstanceSelectorComponentInstances `json:"ComponentInstances,omitempty" xml:"ComponentInstances,omitempty" type:"Repeated"`
	// 组件列表。
	//
	// actionScope为COPONENT时使用。
	Components []*ComponentInstanceSelectorComponents `json:"Components,omitempty" xml:"Components,omitempty" type:"Repeated"`
	// 动作执行范围。取值范围：
	//
	// - APPLICATION：应用级别。
	//
	// - COMPONENT：组件级别。
	//
	// - COMPONENT_INSTANCE：组件实例级别。
	//
	// This parameter is required.
	//
	// example:
	//
	// APPLICATION
	RunActionScope *string `json:"RunActionScope,omitempty" xml:"RunActionScope,omitempty"`
}

func (s ComponentInstanceSelector) String() string {
	return tea.Prettify(s)
}

func (s ComponentInstanceSelector) GoString() string {
	return s.String()
}

func (s *ComponentInstanceSelector) SetActionScope(v string) *ComponentInstanceSelector {
	s.ActionScope = &v
	return s
}

func (s *ComponentInstanceSelector) SetApplicationName(v string) *ComponentInstanceSelector {
	s.ApplicationName = &v
	return s
}

func (s *ComponentInstanceSelector) SetComponentInstances(v []*ComponentInstanceSelectorComponentInstances) *ComponentInstanceSelector {
	s.ComponentInstances = v
	return s
}

func (s *ComponentInstanceSelector) SetComponents(v []*ComponentInstanceSelectorComponents) *ComponentInstanceSelector {
	s.Components = v
	return s
}

func (s *ComponentInstanceSelector) SetRunActionScope(v string) *ComponentInstanceSelector {
	s.RunActionScope = &v
	return s
}

type ComponentInstanceSelectorComponentInstances struct {
	// 应用名称。
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// 组件名称。
	//
	// example:
	//
	// DataNode
	ComponentName *string `json:"ComponentName,omitempty" xml:"ComponentName,omitempty"`
	// 节点ID。
	//
	// example:
	//
	// i-bp1cudc25w2bfwl5****
	NodeId *string `json:"NodeId,omitempty" xml:"NodeId,omitempty"`
}

func (s ComponentInstanceSelectorComponentInstances) String() string {
	return tea.Prettify(s)
}

func (s ComponentInstanceSelectorComponentInstances) GoString() string {
	return s.String()
}

func (s *ComponentInstanceSelectorComponentInstances) SetApplicationName(v string) *ComponentInstanceSelectorComponentInstances {
	s.ApplicationName = &v
	return s
}

func (s *ComponentInstanceSelectorComponentInstances) SetComponentName(v string) *ComponentInstanceSelectorComponentInstances {
	s.ComponentName = &v
	return s
}

func (s *ComponentInstanceSelectorComponentInstances) SetNodeId(v string) *ComponentInstanceSelectorComponentInstances {
	s.NodeId = &v
	return s
}

type ComponentInstanceSelectorComponents struct {
	// 应用名称。
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// 组件名称。
	//
	// example:
	//
	// DataNode
	ComponentName *string `json:"ComponentName,omitempty" xml:"ComponentName,omitempty"`
}

func (s ComponentInstanceSelectorComponents) String() string {
	return tea.Prettify(s)
}

func (s ComponentInstanceSelectorComponents) GoString() string {
	return s.String()
}

func (s *ComponentInstanceSelectorComponents) SetApplicationName(v string) *ComponentInstanceSelectorComponents {
	s.ApplicationName = &v
	return s
}

func (s *ComponentInstanceSelectorComponents) SetComponentName(v string) *ComponentInstanceSelectorComponents {
	s.ComponentName = &v
	return s
}

type ComponentLayout struct {
	// 应用名称。
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// 组件名称。
	//
	// example:
	//
	// DataNode
	ComponentName *string `json:"ComponentName,omitempty" xml:"ComponentName,omitempty"`
	// 节点选择器。
	NodeSelector *ComponentLayoutNodeSelector `json:"NodeSelector,omitempty" xml:"NodeSelector,omitempty" type:"Struct"`
}

func (s ComponentLayout) String() string {
	return tea.Prettify(s)
}

func (s ComponentLayout) GoString() string {
	return s.String()
}

func (s *ComponentLayout) SetApplicationName(v string) *ComponentLayout {
	s.ApplicationName = &v
	return s
}

func (s *ComponentLayout) SetComponentName(v string) *ComponentLayout {
	s.ComponentName = &v
	return s
}

func (s *ComponentLayout) SetNodeSelector(v *ComponentLayoutNodeSelector) *ComponentLayout {
	s.NodeSelector = v
	return s
}

type ComponentLayoutNodeSelector struct {
	// 节点结束编号，包含结束编号。
	//
	// example:
	//
	// 3
	NodeEndIndex *int32 `json:"NodeEndIndex,omitempty" xml:"NodeEndIndex,omitempty"`
	// 节点组ID。
	//
	// example:
	//
	// G-F609686D45D4ABCD
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// 机器组下标编号。
	//
	// example:
	//
	// 1
	NodeGroupIndex *int32 `json:"NodeGroupIndex,omitempty" xml:"NodeGroupIndex,omitempty"`
	// 机器组名。
	//
	// example:
	//
	// master-1
	NodeGroupName *string `json:"NodeGroupName,omitempty" xml:"NodeGroupName,omitempty"`
	// SelectType = NODE_GROUP 且 nodeGroupId 不存在时使用
	//
	// example:
	//
	// [null]
	NodeGroupTypes []*string `json:"NodeGroupTypes,omitempty" xml:"NodeGroupTypes,omitempty" type:"Repeated"`
	// 节点名称列表。
	//
	// example:
	//
	// [null]
	NodeNames []*string `json:"NodeNames,omitempty" xml:"NodeNames,omitempty" type:"Repeated"`
	// 节点选择类型。
	//
	// This parameter is required.
	//
	// example:
	//
	// CLUSTER
	NodeSelectType *string `json:"NodeSelectType,omitempty" xml:"NodeSelectType,omitempty"`
	// 节点开始编号，包含开始编号。
	//
	// example:
	//
	// 1
	NodeStartIndex *int32 `json:"NodeStartIndex,omitempty" xml:"NodeStartIndex,omitempty"`
}

func (s ComponentLayoutNodeSelector) String() string {
	return tea.Prettify(s)
}

func (s ComponentLayoutNodeSelector) GoString() string {
	return s.String()
}

func (s *ComponentLayoutNodeSelector) SetNodeEndIndex(v int32) *ComponentLayoutNodeSelector {
	s.NodeEndIndex = &v
	return s
}

func (s *ComponentLayoutNodeSelector) SetNodeGroupId(v string) *ComponentLayoutNodeSelector {
	s.NodeGroupId = &v
	return s
}

func (s *ComponentLayoutNodeSelector) SetNodeGroupIndex(v int32) *ComponentLayoutNodeSelector {
	s.NodeGroupIndex = &v
	return s
}

func (s *ComponentLayoutNodeSelector) SetNodeGroupName(v string) *ComponentLayoutNodeSelector {
	s.NodeGroupName = &v
	return s
}

func (s *ComponentLayoutNodeSelector) SetNodeGroupTypes(v []*string) *ComponentLayoutNodeSelector {
	s.NodeGroupTypes = v
	return s
}

func (s *ComponentLayoutNodeSelector) SetNodeNames(v []*string) *ComponentLayoutNodeSelector {
	s.NodeNames = v
	return s
}

func (s *ComponentLayoutNodeSelector) SetNodeSelectType(v string) *ComponentLayoutNodeSelector {
	s.NodeSelectType = &v
	return s
}

func (s *ComponentLayoutNodeSelector) SetNodeStartIndex(v int32) *ComponentLayoutNodeSelector {
	s.NodeStartIndex = &v
	return s
}

type ConfigEffectActions struct {
	// 配置生效动作。
	//
	// example:
	//
	// restart
	ConfigEffectAction *string `json:"ConfigEffectAction,omitempty" xml:"ConfigEffectAction,omitempty"`
	// 配置生效配置文件。
	//
	// example:
	//
	// null
	ConfigFiles []*string `json:"ConfigFiles,omitempty" xml:"ConfigFiles,omitempty" type:"Repeated"`
}

func (s ConfigEffectActions) String() string {
	return tea.Prettify(s)
}

func (s ConfigEffectActions) GoString() string {
	return s.String()
}

func (s *ConfigEffectActions) SetConfigEffectAction(v string) *ConfigEffectActions {
	s.ConfigEffectAction = &v
	return s
}

func (s *ConfigEffectActions) SetConfigFiles(v []*string) *ConfigEffectActions {
	s.ConfigFiles = v
	return s
}

type ConvertNodeGroup struct {
	// 节点组ID。
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// 付费时长。
	//
	// example:
	//
	// 12
	PaymentDuration *int32 `json:"PaymentDuration,omitempty" xml:"PaymentDuration,omitempty"`
	// 付费时长单位。
	//
	// example:
	//
	// Month
	PaymentDurationUnit *string `json:"PaymentDurationUnit,omitempty" xml:"PaymentDurationUnit,omitempty"`
	// 付费类型。
	//
	// example:
	//
	// PayAsYouGo
	PaymentType *string `json:"PaymentType,omitempty" xml:"PaymentType,omitempty"`
}

func (s ConvertNodeGroup) String() string {
	return tea.Prettify(s)
}

func (s ConvertNodeGroup) GoString() string {
	return s.String()
}

func (s *ConvertNodeGroup) SetNodeGroupId(v string) *ConvertNodeGroup {
	s.NodeGroupId = &v
	return s
}

func (s *ConvertNodeGroup) SetPaymentDuration(v int32) *ConvertNodeGroup {
	s.PaymentDuration = &v
	return s
}

func (s *ConvertNodeGroup) SetPaymentDurationUnit(v string) *ConvertNodeGroup {
	s.PaymentDurationUnit = &v
	return s
}

func (s *ConvertNodeGroup) SetPaymentType(v string) *ConvertNodeGroup {
	s.PaymentType = &v
	return s
}

type ConvertNodeGroupParam struct {
	// This parameter is required.
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// This parameter is required.
	PaymentDuration     *int64  `json:"PaymentDuration,omitempty" xml:"PaymentDuration,omitempty"`
	PaymentDurationUnit *string `json:"PaymentDurationUnit,omitempty" xml:"PaymentDurationUnit,omitempty"`
	// This parameter is required.
	PaymentType *string `json:"PaymentType,omitempty" xml:"PaymentType,omitempty"`
}

func (s ConvertNodeGroupParam) String() string {
	return tea.Prettify(s)
}

func (s ConvertNodeGroupParam) GoString() string {
	return s.String()
}

func (s *ConvertNodeGroupParam) SetNodeGroupId(v string) *ConvertNodeGroupParam {
	s.NodeGroupId = &v
	return s
}

func (s *ConvertNodeGroupParam) SetPaymentDuration(v int64) *ConvertNodeGroupParam {
	s.PaymentDuration = &v
	return s
}

func (s *ConvertNodeGroupParam) SetPaymentDurationUnit(v string) *ConvertNodeGroupParam {
	s.PaymentDurationUnit = &v
	return s
}

func (s *ConvertNodeGroupParam) SetPaymentType(v string) *ConvertNodeGroupParam {
	s.PaymentType = &v
	return s
}

type CostOptimizedConfig struct {
	// 按量实例个数的最小值。节点组所需要按量实例个数的最小值，取值范围：0~1000。当按量实例个数少于该值时，将优先创建按量实例。
	//
	// This parameter is required.
	//
	// example:
	//
	// 80
	OnDemandBaseCapacity *int32 `json:"OnDemandBaseCapacity,omitempty" xml:"OnDemandBaseCapacity,omitempty"`
	// 节点组满足最小按量实例OnDemandBaseCapacity要求后，超出的实例中按量实例应占的比例，取值范围：0～100。
	//
	// This parameter is required.
	//
	// example:
	//
	// 80
	OnDemandPercentageAboveBaseCapacity *int32 `json:"OnDemandPercentageAboveBaseCapacity,omitempty" xml:"OnDemandPercentageAboveBaseCapacity,omitempty"`
	// 指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：0~10。
	//
	// This parameter is required.
	//
	// example:
	//
	// 2
	SpotInstancePools *int32 `json:"SpotInstancePools,omitempty" xml:"SpotInstancePools,omitempty"`
}

func (s CostOptimizedConfig) String() string {
	return tea.Prettify(s)
}

func (s CostOptimizedConfig) GoString() string {
	return s.String()
}

func (s *CostOptimizedConfig) SetOnDemandBaseCapacity(v int32) *CostOptimizedConfig {
	s.OnDemandBaseCapacity = &v
	return s
}

func (s *CostOptimizedConfig) SetOnDemandPercentageAboveBaseCapacity(v int32) *CostOptimizedConfig {
	s.OnDemandPercentageAboveBaseCapacity = &v
	return s
}

func (s *CostOptimizedConfig) SetSpotInstancePools(v int32) *CostOptimizedConfig {
	s.SpotInstancePools = &v
	return s
}

type CreateNodeGroupParam struct {
	// example:
	//
	// false
	AutoRenew *bool `json:"AutoRenew,omitempty" xml:"AutoRenew,omitempty"`
	// example:
	//
	// 1
	AutoRenewDuration *int32 `json:"AutoRenewDuration,omitempty" xml:"AutoRenewDuration,omitempty"`
	// example:
	//
	// Monthly
	AutoRenewDurationUnit *string     `json:"AutoRenewDurationUnit,omitempty" xml:"AutoRenewDurationUnit,omitempty"`
	DataDisks             []*DiskInfo `json:"DataDisks,omitempty" xml:"DataDisks,omitempty" type:"Repeated"`
	InstanceTypes         []*string   `json:"InstanceTypes,omitempty" xml:"InstanceTypes,omitempty" type:"Repeated"`
	// example:
	//
	// 2
	NodeCount *int32 `json:"NodeCount,omitempty" xml:"NodeCount,omitempty"`
	// example:
	//
	// core-1
	NodeGroupName *string `json:"NodeGroupName,omitempty" xml:"NodeGroupName,omitempty"`
	// example:
	//
	// CORE
	NodeGroupType *string `json:"NodeGroupType,omitempty" xml:"NodeGroupType,omitempty"`
	// example:
	//
	// sshkey
	NodeKeyPairName *string `json:"NodeKeyPairName,omitempty" xml:"NodeKeyPairName,omitempty"`
	// example:
	//
	// AliyunEmrEcsDefaultRole
	NodeRamRole *string `json:"NodeRamRole,omitempty" xml:"NodeRamRole,omitempty"`
	// example:
	//
	// *******
	NodeRootPassword *string `json:"NodeRootPassword,omitempty" xml:"NodeRootPassword,omitempty"`
	// example:
	//
	// 1
	PaymentDuration *int32 `json:"PaymentDuration,omitempty" xml:"PaymentDuration,omitempty"`
	// example:
	//
	// Monthly
	PaymentDurationUnit *string `json:"PaymentDurationUnit,omitempty" xml:"PaymentDurationUnit,omitempty"`
	// example:
	//
	// Subscription
	PaymentType *string `json:"PaymentType,omitempty" xml:"PaymentType,omitempty"`
	// example:
	//
	// sg-hp3abbae8lb6lmb1****
	SecurityGroupId *string `json:"SecurityGroupId,omitempty" xml:"SecurityGroupId,omitempty"`
	// example:
	//
	// NoSpot
	SpotStrategy *string          `json:"SpotStrategy,omitempty" xml:"SpotStrategy,omitempty"`
	SystemDisk   *SystemDiskParam `json:"SystemDisk,omitempty" xml:"SystemDisk,omitempty"`
	VSwitchIds   []*string        `json:"VSwitchIds,omitempty" xml:"VSwitchIds,omitempty" type:"Repeated"`
	// example:
	//
	// true
	WithPublicIp *bool `json:"WithPublicIp,omitempty" xml:"WithPublicIp,omitempty"`
	// example:
	//
	// cn-hangzhou-e
	ZoneId *string `json:"ZoneId,omitempty" xml:"ZoneId,omitempty"`
}

func (s CreateNodeGroupParam) String() string {
	return tea.Prettify(s)
}

func (s CreateNodeGroupParam) GoString() string {
	return s.String()
}

func (s *CreateNodeGroupParam) SetAutoRenew(v bool) *CreateNodeGroupParam {
	s.AutoRenew = &v
	return s
}

func (s *CreateNodeGroupParam) SetAutoRenewDuration(v int32) *CreateNodeGroupParam {
	s.AutoRenewDuration = &v
	return s
}

func (s *CreateNodeGroupParam) SetAutoRenewDurationUnit(v string) *CreateNodeGroupParam {
	s.AutoRenewDurationUnit = &v
	return s
}

func (s *CreateNodeGroupParam) SetDataDisks(v []*DiskInfo) *CreateNodeGroupParam {
	s.DataDisks = v
	return s
}

func (s *CreateNodeGroupParam) SetInstanceTypes(v []*string) *CreateNodeGroupParam {
	s.InstanceTypes = v
	return s
}

func (s *CreateNodeGroupParam) SetNodeCount(v int32) *CreateNodeGroupParam {
	s.NodeCount = &v
	return s
}

func (s *CreateNodeGroupParam) SetNodeGroupName(v string) *CreateNodeGroupParam {
	s.NodeGroupName = &v
	return s
}

func (s *CreateNodeGroupParam) SetNodeGroupType(v string) *CreateNodeGroupParam {
	s.NodeGroupType = &v
	return s
}

func (s *CreateNodeGroupParam) SetNodeKeyPairName(v string) *CreateNodeGroupParam {
	s.NodeKeyPairName = &v
	return s
}

func (s *CreateNodeGroupParam) SetNodeRamRole(v string) *CreateNodeGroupParam {
	s.NodeRamRole = &v
	return s
}

func (s *CreateNodeGroupParam) SetNodeRootPassword(v string) *CreateNodeGroupParam {
	s.NodeRootPassword = &v
	return s
}

func (s *CreateNodeGroupParam) SetPaymentDuration(v int32) *CreateNodeGroupParam {
	s.PaymentDuration = &v
	return s
}

func (s *CreateNodeGroupParam) SetPaymentDurationUnit(v string) *CreateNodeGroupParam {
	s.PaymentDurationUnit = &v
	return s
}

func (s *CreateNodeGroupParam) SetPaymentType(v string) *CreateNodeGroupParam {
	s.PaymentType = &v
	return s
}

func (s *CreateNodeGroupParam) SetSecurityGroupId(v string) *CreateNodeGroupParam {
	s.SecurityGroupId = &v
	return s
}

func (s *CreateNodeGroupParam) SetSpotStrategy(v string) *CreateNodeGroupParam {
	s.SpotStrategy = &v
	return s
}

func (s *CreateNodeGroupParam) SetSystemDisk(v *SystemDiskParam) *CreateNodeGroupParam {
	s.SystemDisk = v
	return s
}

func (s *CreateNodeGroupParam) SetVSwitchIds(v []*string) *CreateNodeGroupParam {
	s.VSwitchIds = v
	return s
}

func (s *CreateNodeGroupParam) SetWithPublicIp(v bool) *CreateNodeGroupParam {
	s.WithPublicIp = &v
	return s
}

func (s *CreateNodeGroupParam) SetZoneId(v string) *CreateNodeGroupParam {
	s.ZoneId = &v
	return s
}

type DataDisk struct {
	// 磁盘类型。
	//
	// This parameter is required.
	//
	// example:
	//
	// cloud_essd
	Category *string `json:"Category,omitempty" xml:"Category,omitempty"`
	// 每个节点磁盘数量。
	//
	// example:
	//
	// 5
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
	// 创建ESSD云盘作为数据盘使用时，设置云盘的性能等级。取值范围：
	//
	// - PL0：单盘最高随机读写IOPS 1万。
	//
	// - PL1（默认）：单盘最高随机读写IOPS 5万。
	//
	// - PL2：单盘最高随机读写IOPS 10万。
	//
	// - PL3：单盘最高随机读写IOPS 100万。
	//
	// 默认值：PL1。
	//
	// example:
	//
	// PL1
	PerformanceLevel *string `json:"PerformanceLevel,omitempty" xml:"PerformanceLevel,omitempty"`
	// 单位GB。
	//
	// This parameter is required.
	//
	// example:
	//
	// 80
	Size *int32 `json:"Size,omitempty" xml:"Size,omitempty"`
}

func (s DataDisk) String() string {
	return tea.Prettify(s)
}

func (s DataDisk) GoString() string {
	return s.String()
}

func (s *DataDisk) SetCategory(v string) *DataDisk {
	s.Category = &v
	return s
}

func (s *DataDisk) SetCount(v int32) *DataDisk {
	s.Count = &v
	return s
}

func (s *DataDisk) SetPerformanceLevel(v string) *DataDisk {
	s.PerformanceLevel = &v
	return s
}

func (s *DataDisk) SetSize(v int32) *DataDisk {
	s.Size = &v
	return s
}

type DecreaseNodeGroupParam struct {
	// This parameter is required.
	//
	// example:
	//
	// G-21E39B11837E****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// This parameter is required.
	ReleaseInstanceIds []*string `json:"ReleaseInstanceIds,omitempty" xml:"ReleaseInstanceIds,omitempty" type:"Repeated"`
}

func (s DecreaseNodeGroupParam) String() string {
	return tea.Prettify(s)
}

func (s DecreaseNodeGroupParam) GoString() string {
	return s.String()
}

func (s *DecreaseNodeGroupParam) SetNodeGroupId(v string) *DecreaseNodeGroupParam {
	s.NodeGroupId = &v
	return s
}

func (s *DecreaseNodeGroupParam) SetReleaseInstanceIds(v []*string) *DecreaseNodeGroupParam {
	s.ReleaseInstanceIds = v
	return s
}

type DeploymentLayout struct {
	ApplicationName *string       `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	ComponentName   *string       `json:"ComponentName,omitempty" xml:"ComponentName,omitempty"`
	NodeSelector    *NodeSelector `json:"NodeSelector,omitempty" xml:"NodeSelector,omitempty"`
}

func (s DeploymentLayout) String() string {
	return tea.Prettify(s)
}

func (s DeploymentLayout) GoString() string {
	return s.String()
}

func (s *DeploymentLayout) SetApplicationName(v string) *DeploymentLayout {
	s.ApplicationName = &v
	return s
}

func (s *DeploymentLayout) SetComponentName(v string) *DeploymentLayout {
	s.ComponentName = &v
	return s
}

func (s *DeploymentLayout) SetNodeSelector(v *NodeSelector) *DeploymentLayout {
	s.NodeSelector = v
	return s
}

type DeploymentSetConstraints struct {
	// 默认值。
	//
	// example:
	//
	// CLUSTER
	DefaultValue *string `json:"DefaultValue,omitempty" xml:"DefaultValue,omitempty"`
	// example:
	//
	// 是否启用部署集限制策略
	EnableState *string `json:"EnableState,omitempty" xml:"EnableState,omitempty"`
	// 替换策略。
	ReplacementStrategy *ReplacementStrategy `json:"ReplacementStrategy,omitempty" xml:"ReplacementStrategy,omitempty"`
	// 枚举值。
	//
	// example:
	//
	// ["CLUSTER","NODE_GROUP","NONE"]
	Values []*string `json:"Values,omitempty" xml:"Values,omitempty" type:"Repeated"`
}

func (s DeploymentSetConstraints) String() string {
	return tea.Prettify(s)
}

func (s DeploymentSetConstraints) GoString() string {
	return s.String()
}

func (s *DeploymentSetConstraints) SetDefaultValue(v string) *DeploymentSetConstraints {
	s.DefaultValue = &v
	return s
}

func (s *DeploymentSetConstraints) SetEnableState(v string) *DeploymentSetConstraints {
	s.EnableState = &v
	return s
}

func (s *DeploymentSetConstraints) SetReplacementStrategy(v *ReplacementStrategy) *DeploymentSetConstraints {
	s.ReplacementStrategy = v
	return s
}

func (s *DeploymentSetConstraints) SetValues(v []*string) *DeploymentSetConstraints {
	s.Values = v
	return s
}

type Disk struct {
	// 磁盘类型。
	//
	// example:
	//
	// cloud_essd
	Category *string `json:"Category,omitempty" xml:"Category,omitempty"`
	// 每个节点磁盘数量。
	//
	// example:
	//
	// 5
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
	// 性能级别。
	//
	// example:
	//
	// S0
	PerformanceLevel *string `json:"PerformanceLevel,omitempty" xml:"PerformanceLevel,omitempty"`
	// 单位GB。
	//
	// example:
	//
	// 80
	Size *int32 `json:"Size,omitempty" xml:"Size,omitempty"`
}

func (s Disk) String() string {
	return tea.Prettify(s)
}

func (s Disk) GoString() string {
	return s.String()
}

func (s *Disk) SetCategory(v string) *Disk {
	s.Category = &v
	return s
}

func (s *Disk) SetCount(v int32) *Disk {
	s.Count = &v
	return s
}

func (s *Disk) SetPerformanceLevel(v string) *Disk {
	s.PerformanceLevel = &v
	return s
}

func (s *Disk) SetSize(v int32) *Disk {
	s.Size = &v
	return s
}

type DiskConstraints struct {
	// 支持的磁盘类型。
	//
	// example:
	//
	// ["cloud_efficiency","cloud_ssd","cloud_essd","local_disk"]
	Categories []*string `json:"Categories,omitempty" xml:"Categories,omitempty" type:"Repeated"`
	// 磁盘数量最小值。
	CountConstraint *ValueConstraints `json:"CountConstraint,omitempty" xml:"CountConstraint,omitempty"`
	// 磁盘容量限制。
	SizeConstraint *ValueConstraints `json:"SizeConstraint,omitempty" xml:"SizeConstraint,omitempty"`
}

func (s DiskConstraints) String() string {
	return tea.Prettify(s)
}

func (s DiskConstraints) GoString() string {
	return s.String()
}

func (s *DiskConstraints) SetCategories(v []*string) *DiskConstraints {
	s.Categories = v
	return s
}

func (s *DiskConstraints) SetCountConstraint(v *ValueConstraints) *DiskConstraints {
	s.CountConstraint = v
	return s
}

func (s *DiskConstraints) SetSizeConstraint(v *ValueConstraints) *DiskConstraints {
	s.SizeConstraint = v
	return s
}

type DiskInfo struct {
	Category         *string `json:"Category,omitempty" xml:"Category,omitempty"`
	Count            *int32  `json:"Count,omitempty" xml:"Count,omitempty"`
	PerformanceLevel *string `json:"PerformanceLevel,omitempty" xml:"PerformanceLevel,omitempty"`
	Size             *int32  `json:"Size,omitempty" xml:"Size,omitempty"`
}

func (s DiskInfo) String() string {
	return tea.Prettify(s)
}

func (s DiskInfo) GoString() string {
	return s.String()
}

func (s *DiskInfo) SetCategory(v string) *DiskInfo {
	s.Category = &v
	return s
}

func (s *DiskInfo) SetCount(v int32) *DiskInfo {
	s.Count = &v
	return s
}

func (s *DiskInfo) SetPerformanceLevel(v string) *DiskInfo {
	s.PerformanceLevel = &v
	return s
}

func (s *DiskInfo) SetSize(v int32) *DiskInfo {
	s.Size = &v
	return s
}

type DiskSize struct {
	// 磁盘类型。
	//
	// This parameter is required.
	//
	// example:
	//
	// cloud_essd
	Category *string `json:"Category,omitempty" xml:"Category,omitempty"`
	// 单位GB。
	//
	// example:
	//
	// 80
	Size *int32 `json:"Size,omitempty" xml:"Size,omitempty"`
}

func (s DiskSize) String() string {
	return tea.Prettify(s)
}

func (s DiskSize) GoString() string {
	return s.String()
}

func (s *DiskSize) SetCategory(v string) *DiskSize {
	s.Category = &v
	return s
}

func (s *DiskSize) SetSize(v int32) *DiskSize {
	s.Size = &v
	return s
}

type FailedReason struct {
	// 错误码。
	//
	// example:
	//
	// MissingParameter.InstanceType
	ErrorCode *string `json:"ErrorCode,omitempty" xml:"ErrorCode,omitempty"`
	// 错误信息。
	//
	// example:
	//
	// The instance type is required.
	ErrorMessage *string `json:"ErrorMessage,omitempty" xml:"ErrorMessage,omitempty"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944abcd
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s FailedReason) String() string {
	return tea.Prettify(s)
}

func (s FailedReason) GoString() string {
	return s.String()
}

func (s *FailedReason) SetErrorCode(v string) *FailedReason {
	s.ErrorCode = &v
	return s
}

func (s *FailedReason) SetErrorMessage(v string) *FailedReason {
	s.ErrorMessage = &v
	return s
}

func (s *FailedReason) SetRequestId(v string) *FailedReason {
	s.RequestId = &v
	return s
}

type HealthSummary struct {
	// example:
	//
	// 2
	BadCount *int64 `json:"BadCount,omitempty" xml:"BadCount,omitempty"`
	// example:
	//
	// 2
	GoodCount *int64 `json:"GoodCount,omitempty" xml:"GoodCount,omitempty"`
	// example:
	//
	// 0
	NoneCount *int64 `json:"NoneCount,omitempty" xml:"NoneCount,omitempty"`
	// example:
	//
	// 2
	StoppedCount *int64 `json:"StoppedCount,omitempty" xml:"StoppedCount,omitempty"`
	// example:
	//
	// 8
	TotalCount *int64 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
	// example:
	//
	// 0
	UnknownCount *int64 `json:"UnknownCount,omitempty" xml:"UnknownCount,omitempty"`
	// example:
	//
	// 2
	WarningCount *int64 `json:"WarningCount,omitempty" xml:"WarningCount,omitempty"`
}

func (s HealthSummary) String() string {
	return tea.Prettify(s)
}

func (s HealthSummary) GoString() string {
	return s.String()
}

func (s *HealthSummary) SetBadCount(v int64) *HealthSummary {
	s.BadCount = &v
	return s
}

func (s *HealthSummary) SetGoodCount(v int64) *HealthSummary {
	s.GoodCount = &v
	return s
}

func (s *HealthSummary) SetNoneCount(v int64) *HealthSummary {
	s.NoneCount = &v
	return s
}

func (s *HealthSummary) SetStoppedCount(v int64) *HealthSummary {
	s.StoppedCount = &v
	return s
}

func (s *HealthSummary) SetTotalCount(v int64) *HealthSummary {
	s.TotalCount = &v
	return s
}

func (s *HealthSummary) SetUnknownCount(v int64) *HealthSummary {
	s.UnknownCount = &v
	return s
}

func (s *HealthSummary) SetWarningCount(v int64) *HealthSummary {
	s.WarningCount = &v
	return s
}

type IncreaseNodeGroup struct {
	// 描述。
	//
	// example:
	//
	// 描述
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// 节点数量。
	//
	// This parameter is required.
	//
	// example:
	//
	// 3
	NodeCount *int32 `json:"NodeCount,omitempty" xml:"NodeCount,omitempty"`
	// 节点组ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// 付费时长。
	//
	// example:
	//
	// 12
	PaymentDuration *int32 `json:"PaymentDuration,omitempty" xml:"PaymentDuration,omitempty"`
	// 付费时长单位。
	//
	// example:
	//
	// Month
	PaymentDurationUnit *string `json:"PaymentDurationUnit,omitempty" xml:"PaymentDurationUnit,omitempty"`
	// 虚拟机交换机ID。
	//
	// example:
	//
	// vsw-hp35g7ya5ymw68mmg****
	VSwitchId *string `json:"VSwitchId,omitempty" xml:"VSwitchId,omitempty"`
}

func (s IncreaseNodeGroup) String() string {
	return tea.Prettify(s)
}

func (s IncreaseNodeGroup) GoString() string {
	return s.String()
}

func (s *IncreaseNodeGroup) SetDescription(v string) *IncreaseNodeGroup {
	s.Description = &v
	return s
}

func (s *IncreaseNodeGroup) SetNodeCount(v int32) *IncreaseNodeGroup {
	s.NodeCount = &v
	return s
}

func (s *IncreaseNodeGroup) SetNodeGroupId(v string) *IncreaseNodeGroup {
	s.NodeGroupId = &v
	return s
}

func (s *IncreaseNodeGroup) SetPaymentDuration(v int32) *IncreaseNodeGroup {
	s.PaymentDuration = &v
	return s
}

func (s *IncreaseNodeGroup) SetPaymentDurationUnit(v string) *IncreaseNodeGroup {
	s.PaymentDurationUnit = &v
	return s
}

func (s *IncreaseNodeGroup) SetVSwitchId(v string) *IncreaseNodeGroup {
	s.VSwitchId = &v
	return s
}

type IncreaseNodeGroupParam struct {
	NodeCount           *int64  `json:"NodeCount,omitempty" xml:"NodeCount,omitempty"`
	NodeGroupId         *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	PaymentDuration     *int32  `json:"PaymentDuration,omitempty" xml:"PaymentDuration,omitempty"`
	PaymentDurationUnit *string `json:"PaymentDurationUnit,omitempty" xml:"PaymentDurationUnit,omitempty"`
	VSwitchId           *string `json:"VSwitchId,omitempty" xml:"VSwitchId,omitempty"`
}

func (s IncreaseNodeGroupParam) String() string {
	return tea.Prettify(s)
}

func (s IncreaseNodeGroupParam) GoString() string {
	return s.String()
}

func (s *IncreaseNodeGroupParam) SetNodeCount(v int64) *IncreaseNodeGroupParam {
	s.NodeCount = &v
	return s
}

func (s *IncreaseNodeGroupParam) SetNodeGroupId(v string) *IncreaseNodeGroupParam {
	s.NodeGroupId = &v
	return s
}

func (s *IncreaseNodeGroupParam) SetPaymentDuration(v int32) *IncreaseNodeGroupParam {
	s.PaymentDuration = &v
	return s
}

func (s *IncreaseNodeGroupParam) SetPaymentDurationUnit(v string) *IncreaseNodeGroupParam {
	s.PaymentDurationUnit = &v
	return s
}

func (s *IncreaseNodeGroupParam) SetVSwitchId(v string) *IncreaseNodeGroupParam {
	s.VSwitchId = &v
	return s
}

type InstanceCategory struct {
	// 默认值。
	//
	// example:
	//
	// CLUSTER
	DefaultValue *string `json:"DefaultValue,omitempty" xml:"DefaultValue,omitempty"`
	// example:
	//
	// null
	Keys []*string `json:"Keys,omitempty" xml:"Keys,omitempty" type:"Repeated"`
	// example:
	//
	// null
	Values []*string `json:"Values,omitempty" xml:"Values,omitempty" type:"Repeated"`
}

func (s InstanceCategory) String() string {
	return tea.Prettify(s)
}

func (s InstanceCategory) GoString() string {
	return s.String()
}

func (s *InstanceCategory) SetDefaultValue(v string) *InstanceCategory {
	s.DefaultValue = &v
	return s
}

func (s *InstanceCategory) SetKeys(v []*string) *InstanceCategory {
	s.Keys = v
	return s
}

func (s *InstanceCategory) SetValues(v []*string) *InstanceCategory {
	s.Values = v
	return s
}

type InstanceType struct {
	// cpu架构。
	//
	// example:
	//
	// X86
	CpuArchitecture *string `json:"CpuArchitecture,omitempty" xml:"CpuArchitecture,omitempty"`
	// vCPU内核数目。
	//
	// example:
	//
	// 4
	CpuCore *int32 `json:"CpuCore,omitempty" xml:"CpuCore,omitempty"`
	// 实例规格分类。取值范围：
	//
	// - General-purpose： 通用型。
	//
	// - Compute-optimized：计算型。
	//
	// - Memory-optimized：内存型。
	//
	// - Big data：大数据型。
	//
	// - Local SSDs ：本地SSD型。
	//
	// - High Clock Speed ：高主频型。
	//
	// - Enhanced ：增强型。
	//
	// - Shared：共享型。
	//
	// - Compute-optimized with GPU ：GPU计算型。
	//
	// - Visual Compute-optimized ：视觉计算型。
	//
	// - Heterogeneous Service ：异构服务型。
	//
	// - Compute-optimized with FPGA ：FPGA计算型。
	//
	// - Compute-optimized with NPU ：NPU计算型。
	//
	// - ECS Bare Metal ：弹性裸金属服务器。
	//
	// - Super Computing Cluster：超级计算集群。
	//
	// example:
	//
	// Compute-optimized
	InstanceCategory *string `json:"InstanceCategory,omitempty" xml:"InstanceCategory,omitempty"`
	// 实例规格。
	//
	// example:
	//
	// ecs.g6.large
	InstanceType *string `json:"InstanceType,omitempty" xml:"InstanceType,omitempty"`
	// 实例规格所属的实例规格族。取值请参见DescribeInstanceTypeFamilies。
	//
	// example:
	//
	// ecs.g6
	InstanceTypeFamily *string `json:"InstanceTypeFamily,omitempty" xml:"InstanceTypeFamily,omitempty"`
	// 实例挂载的本地盘的数量。
	//
	// example:
	//
	// 8
	LocalStorageAmount *int32 `json:"LocalStorageAmount,omitempty" xml:"LocalStorageAmount,omitempty"`
	// 实例挂载的本地盘的单盘容量。单位：GiB
	//
	// example:
	//
	// 40
	LocalStorageCapacity *int64 `json:"LocalStorageCapacity,omitempty" xml:"LocalStorageCapacity,omitempty"`
	// 是否IO优化类型。
	//
	// example:
	//
	// true
	Optimized *bool `json:"Optimized,omitempty" xml:"Optimized,omitempty"`
}

func (s InstanceType) String() string {
	return tea.Prettify(s)
}

func (s InstanceType) GoString() string {
	return s.String()
}

func (s *InstanceType) SetCpuArchitecture(v string) *InstanceType {
	s.CpuArchitecture = &v
	return s
}

func (s *InstanceType) SetCpuCore(v int32) *InstanceType {
	s.CpuCore = &v
	return s
}

func (s *InstanceType) SetInstanceCategory(v string) *InstanceType {
	s.InstanceCategory = &v
	return s
}

func (s *InstanceType) SetInstanceType(v string) *InstanceType {
	s.InstanceType = &v
	return s
}

func (s *InstanceType) SetInstanceTypeFamily(v string) *InstanceType {
	s.InstanceTypeFamily = &v
	return s
}

func (s *InstanceType) SetLocalStorageAmount(v int32) *InstanceType {
	s.LocalStorageAmount = &v
	return s
}

func (s *InstanceType) SetLocalStorageCapacity(v int64) *InstanceType {
	s.LocalStorageCapacity = &v
	return s
}

func (s *InstanceType) SetOptimized(v bool) *InstanceType {
	s.Optimized = &v
	return s
}

type KeyValue struct {
	// 键。
	//
	// example:
	//
	// key
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// 值。
	//
	// example:
	//
	// value
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s KeyValue) String() string {
	return tea.Prettify(s)
}

func (s KeyValue) GoString() string {
	return s.String()
}

func (s *KeyValue) SetKey(v string) *KeyValue {
	s.Key = &v
	return s
}

func (s *KeyValue) SetValue(v string) *KeyValue {
	s.Value = &v
	return s
}

type ListApiTemplatesDTO struct {
	ApiName         *string `json:"ApiName,omitempty" xml:"ApiName,omitempty"`
	Content         *string `json:"Content,omitempty" xml:"Content,omitempty"`
	GmtCreate       *int64  `json:"GmtCreate,omitempty" xml:"GmtCreate,omitempty"`
	GmtModified     *int64  `json:"GmtModified,omitempty" xml:"GmtModified,omitempty"`
	Id              *int64  `json:"Id,omitempty" xml:"Id,omitempty"`
	OperatorId      *string `json:"OperatorId,omitempty" xml:"OperatorId,omitempty"`
	RegionId        *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	Status          *string `json:"Status,omitempty" xml:"Status,omitempty"`
	TemplateId      *string `json:"TemplateId,omitempty" xml:"TemplateId,omitempty"`
	TemplateName    *string `json:"TemplateName,omitempty" xml:"TemplateName,omitempty"`
	UserId          *string `json:"UserId,omitempty" xml:"UserId,omitempty"`
}

func (s ListApiTemplatesDTO) String() string {
	return tea.Prettify(s)
}

func (s ListApiTemplatesDTO) GoString() string {
	return s.String()
}

func (s *ListApiTemplatesDTO) SetApiName(v string) *ListApiTemplatesDTO {
	s.ApiName = &v
	return s
}

func (s *ListApiTemplatesDTO) SetContent(v string) *ListApiTemplatesDTO {
	s.Content = &v
	return s
}

func (s *ListApiTemplatesDTO) SetGmtCreate(v int64) *ListApiTemplatesDTO {
	s.GmtCreate = &v
	return s
}

func (s *ListApiTemplatesDTO) SetGmtModified(v int64) *ListApiTemplatesDTO {
	s.GmtModified = &v
	return s
}

func (s *ListApiTemplatesDTO) SetId(v int64) *ListApiTemplatesDTO {
	s.Id = &v
	return s
}

func (s *ListApiTemplatesDTO) SetOperatorId(v string) *ListApiTemplatesDTO {
	s.OperatorId = &v
	return s
}

func (s *ListApiTemplatesDTO) SetRegionId(v string) *ListApiTemplatesDTO {
	s.RegionId = &v
	return s
}

func (s *ListApiTemplatesDTO) SetResourceGroupId(v string) *ListApiTemplatesDTO {
	s.ResourceGroupId = &v
	return s
}

func (s *ListApiTemplatesDTO) SetStatus(v string) *ListApiTemplatesDTO {
	s.Status = &v
	return s
}

func (s *ListApiTemplatesDTO) SetTemplateId(v string) *ListApiTemplatesDTO {
	s.TemplateId = &v
	return s
}

func (s *ListApiTemplatesDTO) SetTemplateName(v string) *ListApiTemplatesDTO {
	s.TemplateName = &v
	return s
}

func (s *ListApiTemplatesDTO) SetUserId(v string) *ListApiTemplatesDTO {
	s.UserId = &v
	return s
}

type MetaStoreConf struct {
	DbPassword *string `json:"DbPassword,omitempty" xml:"DbPassword,omitempty"`
	DbUrl      *string `json:"DbUrl,omitempty" xml:"DbUrl,omitempty"`
	DbUserName *string `json:"DbUserName,omitempty" xml:"DbUserName,omitempty"`
}

func (s MetaStoreConf) String() string {
	return tea.Prettify(s)
}

func (s MetaStoreConf) GoString() string {
	return s.String()
}

func (s *MetaStoreConf) SetDbPassword(v string) *MetaStoreConf {
	s.DbPassword = &v
	return s
}

func (s *MetaStoreConf) SetDbUrl(v string) *MetaStoreConf {
	s.DbUrl = &v
	return s
}

func (s *MetaStoreConf) SetDbUserName(v string) *MetaStoreConf {
	s.DbUserName = &v
	return s
}

type MetricUnitValue struct {
	// 指标名称。
	MetricName *string `json:"MetricName,omitempty" xml:"MetricName,omitempty"`
	// 指标单位。
	MetricUnit *string `json:"MetricUnit,omitempty" xml:"MetricUnit,omitempty"`
}

func (s MetricUnitValue) String() string {
	return tea.Prettify(s)
}

func (s MetricUnitValue) GoString() string {
	return s.String()
}

func (s *MetricUnitValue) SetMetricName(v string) *MetricUnitValue {
	s.MetricName = &v
	return s
}

func (s *MetricUnitValue) SetMetricUnit(v string) *MetricUnitValue {
	s.MetricUnit = &v
	return s
}

type MetricsTrigger struct {
	// 多指标逻辑关系。默认：Or。取值范围：
	//
	// - And:与
	//
	// - Or：或
	//
	// example:
	//
	// Or
	ConditionLogicOperator *string `json:"ConditionLogicOperator,omitempty" xml:"ConditionLogicOperator,omitempty"`
	// 指标触发条件列表。
	Conditions []*TriggerCondition `json:"Conditions,omitempty" xml:"Conditions,omitempty" type:"Repeated"`
	// 冷却时间。 单位为秒
	//
	// example:
	//
	// 300
	CoolDownInterval *int32 `json:"CoolDownInterval,omitempty" xml:"CoolDownInterval,omitempty"`
	// 统计次数。
	//
	// This parameter is required.
	//
	// example:
	//
	// 2
	EvaluationCount *int32 `json:"EvaluationCount,omitempty" xml:"EvaluationCount,omitempty"`
	// 时间限制。
	TimeConstraints []*TimeConstraint `json:"TimeConstraints,omitempty" xml:"TimeConstraints,omitempty" type:"Repeated"`
	// 统计窗口。单位为秒。
	//
	// This parameter is required.
	//
	// example:
	//
	// 30
	TimeWindow *int32 `json:"TimeWindow,omitempty" xml:"TimeWindow,omitempty"`
}

func (s MetricsTrigger) String() string {
	return tea.Prettify(s)
}

func (s MetricsTrigger) GoString() string {
	return s.String()
}

func (s *MetricsTrigger) SetConditionLogicOperator(v string) *MetricsTrigger {
	s.ConditionLogicOperator = &v
	return s
}

func (s *MetricsTrigger) SetConditions(v []*TriggerCondition) *MetricsTrigger {
	s.Conditions = v
	return s
}

func (s *MetricsTrigger) SetCoolDownInterval(v int32) *MetricsTrigger {
	s.CoolDownInterval = &v
	return s
}

func (s *MetricsTrigger) SetEvaluationCount(v int32) *MetricsTrigger {
	s.EvaluationCount = &v
	return s
}

func (s *MetricsTrigger) SetTimeConstraints(v []*TimeConstraint) *MetricsTrigger {
	s.TimeConstraints = v
	return s
}

func (s *MetricsTrigger) SetTimeWindow(v int32) *MetricsTrigger {
	s.TimeWindow = &v
	return s
}

type Node struct {
	// 节点是否自动续费。
	//
	// example:
	//
	// false
	AutoRenew *bool `json:"AutoRenew,omitempty" xml:"AutoRenew,omitempty"`
	// 节点自动续费时长。
	//
	// example:
	//
	// 1
	AutoRenewDuration *int32 `json:"AutoRenewDuration,omitempty" xml:"AutoRenewDuration,omitempty"`
	// 节点自动续费时长单位。
	//
	// example:
	//
	// Month
	AutoRenewDurationUnit *string `json:"AutoRenewDurationUnit,omitempty" xml:"AutoRenewDurationUnit,omitempty"`
	CreateTime            *int64  `json:"CreateTime,omitempty" xml:"CreateTime,omitempty"`
	// 节点过期时间。
	//
	// example:
	//
	// 1603728394857
	ExpireTime *int64 `json:"ExpireTime,omitempty" xml:"ExpireTime,omitempty"`
	// 实例类型。
	//
	// example:
	//
	// ecs.g6e.xlarge
	InstanceType *string `json:"InstanceType,omitempty" xml:"InstanceType,omitempty"`
	// 运维模式状态。取值范围：
	//
	// - ON：处于运维模式。
	//
	// - OFF：处于非运维模式。
	//
	// 为空表示处于非运维模式。
	MaintenanceStatus *string `json:"MaintenanceStatus,omitempty" xml:"MaintenanceStatus,omitempty"`
	// 节点组ID。
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// 节点组类型。
	//
	// example:
	//
	// CORE
	NodeGroupType *string `json:"NodeGroupType,omitempty" xml:"NodeGroupType,omitempty"`
	// 节点ID。
	//
	// example:
	//
	// i-bp1cudc25w2bfwl5****
	NodeId *string `json:"NodeId,omitempty" xml:"NodeId,omitempty"`
	// 节点名称。
	//
	// example:
	//
	// core1-1
	NodeName *string `json:"NodeName,omitempty" xml:"NodeName,omitempty"`
	// 节点状态。取值范围：
	//
	// - Pending：创建中。
	//
	// - Starting：启动中。
	//
	// - Running：运行中。
	//
	// - Stopping：停止中。
	//
	// - Stopped：已停止。
	//
	// - Terminated：已终止。
	//
	// example:
	//
	// Running
	NodeState *string `json:"NodeState,omitempty" xml:"NodeState,omitempty"`
	// 私网IP。
	//
	// example:
	//
	// 10.10.10.1
	PrivateIp *string `json:"PrivateIp,omitempty" xml:"PrivateIp,omitempty"`
	// 公网IP。
	//
	// example:
	//
	// 42.120.75.***
	PublicIp *string `json:"PublicIp,omitempty" xml:"PublicIp,omitempty"`
	// 可用区ID。
	//
	// example:
	//
	// cn-beijing-h
	ZoneId *string `json:"ZoneId,omitempty" xml:"ZoneId,omitempty"`
}

func (s Node) String() string {
	return tea.Prettify(s)
}

func (s Node) GoString() string {
	return s.String()
}

func (s *Node) SetAutoRenew(v bool) *Node {
	s.AutoRenew = &v
	return s
}

func (s *Node) SetAutoRenewDuration(v int32) *Node {
	s.AutoRenewDuration = &v
	return s
}

func (s *Node) SetAutoRenewDurationUnit(v string) *Node {
	s.AutoRenewDurationUnit = &v
	return s
}

func (s *Node) SetCreateTime(v int64) *Node {
	s.CreateTime = &v
	return s
}

func (s *Node) SetExpireTime(v int64) *Node {
	s.ExpireTime = &v
	return s
}

func (s *Node) SetInstanceType(v string) *Node {
	s.InstanceType = &v
	return s
}

func (s *Node) SetMaintenanceStatus(v string) *Node {
	s.MaintenanceStatus = &v
	return s
}

func (s *Node) SetNodeGroupId(v string) *Node {
	s.NodeGroupId = &v
	return s
}

func (s *Node) SetNodeGroupType(v string) *Node {
	s.NodeGroupType = &v
	return s
}

func (s *Node) SetNodeId(v string) *Node {
	s.NodeId = &v
	return s
}

func (s *Node) SetNodeName(v string) *Node {
	s.NodeName = &v
	return s
}

func (s *Node) SetNodeState(v string) *Node {
	s.NodeState = &v
	return s
}

func (s *Node) SetPrivateIp(v string) *Node {
	s.PrivateIp = &v
	return s
}

func (s *Node) SetPublicIp(v string) *Node {
	s.PublicIp = &v
	return s
}

func (s *Node) SetZoneId(v string) *Node {
	s.ZoneId = &v
	return s
}

type NodeAttributes struct {
	// ECS ssh登录秘钥。
	//
	// example:
	//
	// emr_login
	KeyPairName *string `json:"KeyPairName,omitempty" xml:"KeyPairName,omitempty"`
	// MASTER节点root密码。
	//
	// example:
	//
	// Adxefswfd****
	MasterRootPassword *string `json:"MasterRootPassword,omitempty" xml:"MasterRootPassword,omitempty"`
	// ECS访问资源绑定的角色。
	//
	// example:
	//
	// AliyunECSInstanceForEMRRole
	RamRole *string `json:"RamRole,omitempty" xml:"RamRole,omitempty"`
	// 安全组ID。EMR只支持普通安全组，不支持企业安全组。
	//
	// This parameter is required.
	//
	// example:
	//
	// sg-hp3abbae8lb6lmb1****
	SecurityGroupId *string `json:"SecurityGroupId,omitempty" xml:"SecurityGroupId,omitempty"`
	// 专有网络ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// vpc-bp1tgey2p0ytxmdo5****
	VpcId *string `json:"VpcId,omitempty" xml:"VpcId,omitempty"`
	// 可用区ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-beijing-h
	ZoneId *string `json:"ZoneId,omitempty" xml:"ZoneId,omitempty"`
}

func (s NodeAttributes) String() string {
	return tea.Prettify(s)
}

func (s NodeAttributes) GoString() string {
	return s.String()
}

func (s *NodeAttributes) SetKeyPairName(v string) *NodeAttributes {
	s.KeyPairName = &v
	return s
}

func (s *NodeAttributes) SetMasterRootPassword(v string) *NodeAttributes {
	s.MasterRootPassword = &v
	return s
}

func (s *NodeAttributes) SetRamRole(v string) *NodeAttributes {
	s.RamRole = &v
	return s
}

func (s *NodeAttributes) SetSecurityGroupId(v string) *NodeAttributes {
	s.SecurityGroupId = &v
	return s
}

func (s *NodeAttributes) SetVpcId(v string) *NodeAttributes {
	s.VpcId = &v
	return s
}

func (s *NodeAttributes) SetZoneId(v string) *NodeAttributes {
	s.ZoneId = &v
	return s
}

type NodeCountConstraint struct {
	// example:
	//
	// 100
	Max *int32 `json:"Max,omitempty" xml:"Max,omitempty"`
	// example:
	//
	// 1
	Min *int32 `json:"Min,omitempty" xml:"Min,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// range
	Type   *string  `json:"Type,omitempty" xml:"Type,omitempty"`
	Values []*int32 `json:"Values,omitempty" xml:"Values,omitempty" type:"Repeated"`
}

func (s NodeCountConstraint) String() string {
	return tea.Prettify(s)
}

func (s NodeCountConstraint) GoString() string {
	return s.String()
}

func (s *NodeCountConstraint) SetMax(v int32) *NodeCountConstraint {
	s.Max = &v
	return s
}

func (s *NodeCountConstraint) SetMin(v int32) *NodeCountConstraint {
	s.Min = &v
	return s
}

func (s *NodeCountConstraint) SetType(v string) *NodeCountConstraint {
	s.Type = &v
	return s
}

func (s *NodeCountConstraint) SetValues(v []*int32) *NodeCountConstraint {
	s.Values = v
	return s
}

type NodeGroup struct {
	// 安全组ID。
	//
	// example:
	//
	// ["sg-hp3abbae8lb6lmb1****"]
	AdditionalSecurityGroupIds []*string `json:"AdditionalSecurityGroupIds,omitempty" xml:"AdditionalSecurityGroupIds,omitempty" type:"Repeated"`
	// 成本优化模式配置。
	CostOptimizedConfig *CostOptimizedConfig `json:"CostOptimizedConfig,omitempty" xml:"CostOptimizedConfig,omitempty"`
	// 数据盘列表。
	DataDisks []*DataDisk `json:"DataDisks,omitempty" xml:"DataDisks,omitempty" type:"Repeated"`
	// 部署集策略。取值范围：
	//
	// - NONE：不适用部署集。
	//
	// - CLUSTER：使用集群级别部署集。
	//
	// - NODE_GROUP：使用节点组级别部署集。
	//
	// 默认值：NONE。
	//
	// example:
	//
	// NONE
	DeploymentSetStrategy *string `json:"DeploymentSetStrategy,omitempty" xml:"DeploymentSetStrategy,omitempty"`
	// 节点组上部署的组件是否开启优雅下线。取值范围：
	//
	// - true：开启优雅下线。
	//
	// - false：不开启优雅下线。
	//
	// example:
	//
	// false
	GracefulShutdown *bool `json:"GracefulShutdown,omitempty" xml:"GracefulShutdown,omitempty"`
	// 实例类型列表。
	//
	// example:
	//
	// ["ecs.g6.4xlarge"]
	InstanceTypes []*string `json:"InstanceTypes,omitempty" xml:"InstanceTypes,omitempty" type:"Repeated"`
	// 节点组ID。
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// 节点组名称。最大长度128个字符。
	//
	// example:
	//
	// core-1
	NodeGroupName *string `json:"NodeGroupName,omitempty" xml:"NodeGroupName,omitempty"`
	// 节点组状态。
	//
	// example:
	//
	// CREATED
	NodeGroupState *string `json:"NodeGroupState,omitempty" xml:"NodeGroupState,omitempty"`
	// 节点组类型。取值范围：
	//
	// - MASTER：管理类型节点组。
	//
	// - CORE：存储类型节点组。
	//
	// - TASK：计算类型节点组。
	//
	// example:
	//
	// CORE
	NodeGroupType *string `json:"NodeGroupType,omitempty" xml:"NodeGroupType,omitempty"`
	// - COST_OPTIMIZED：成本优化策略。
	//
	// - PRIORITY：优先级策略。
	//
	// example:
	//
	// PRIORITY
	NodeResizeStrategy *string `json:"NodeResizeStrategy,omitempty" xml:"NodeResizeStrategy,omitempty"`
	// 节点组付费类型。取值范围：
	//
	// - PayAsYouGo：后付费，按量付费。
	//
	// - Subscription：预付费，包年包月。
	//
	// example:
	//
	// PayAsYouGo
	PaymentType *string `json:"PaymentType,omitempty" xml:"PaymentType,omitempty"`
	// 存活节点数量。
	//
	// example:
	//
	// 3
	RunningNodeCount *int32          `json:"RunningNodeCount,omitempty" xml:"RunningNodeCount,omitempty"`
	SpotBidPrices    []*SpotBidPrice `json:"SpotBidPrices,omitempty" xml:"SpotBidPrices,omitempty" type:"Repeated"`
	// 开启补齐抢占式实例后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。取值范围：
	//
	// - true：开启补齐抢占式实例。
	//
	// - false：不开启补齐抢占式实例。
	//
	// 默认值：false。
	//
	// example:
	//
	// true
	SpotInstanceRemedy *bool `json:"SpotInstanceRemedy,omitempty" xml:"SpotInstanceRemedy,omitempty"`
	// 是否支持竞价实例。
	//
	// example:
	//
	// NoSpot
	SpotStrategy *string `json:"SpotStrategy,omitempty" xml:"SpotStrategy,omitempty"`
	// 状态变化原因。
	StateChangeReason *NodeGroupStateChangeReason `json:"StateChangeReason,omitempty" xml:"StateChangeReason,omitempty"`
	// 节点组状态，NodeGroupState别名。
	//
	// example:
	//
	// CREATED
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// 系统盘信息。
	SystemDisk *SystemDisk `json:"SystemDisk,omitempty" xml:"SystemDisk,omitempty"`
	// 虚拟机交换机ID列表。
	//
	// example:
	//
	// ["vsw-hp35g7ya5ymw68mmg****"]
	VSwitchIds []*string `json:"VSwitchIds,omitempty" xml:"VSwitchIds,omitempty" type:"Repeated"`
	// 是否开公网IP。取值范围：
	//
	// - true：开公网。
	//
	// - false：不开公网。
	//
	// example:
	//
	// false
	WithPublicIp *bool `json:"WithPublicIp,omitempty" xml:"WithPublicIp,omitempty"`
	// 可用区ID。
	//
	// example:
	//
	// cn-beijing-h
	ZoneId *string `json:"ZoneId,omitempty" xml:"ZoneId,omitempty"`
}

func (s NodeGroup) String() string {
	return tea.Prettify(s)
}

func (s NodeGroup) GoString() string {
	return s.String()
}

func (s *NodeGroup) SetAdditionalSecurityGroupIds(v []*string) *NodeGroup {
	s.AdditionalSecurityGroupIds = v
	return s
}

func (s *NodeGroup) SetCostOptimizedConfig(v *CostOptimizedConfig) *NodeGroup {
	s.CostOptimizedConfig = v
	return s
}

func (s *NodeGroup) SetDataDisks(v []*DataDisk) *NodeGroup {
	s.DataDisks = v
	return s
}

func (s *NodeGroup) SetDeploymentSetStrategy(v string) *NodeGroup {
	s.DeploymentSetStrategy = &v
	return s
}

func (s *NodeGroup) SetGracefulShutdown(v bool) *NodeGroup {
	s.GracefulShutdown = &v
	return s
}

func (s *NodeGroup) SetInstanceTypes(v []*string) *NodeGroup {
	s.InstanceTypes = v
	return s
}

func (s *NodeGroup) SetNodeGroupId(v string) *NodeGroup {
	s.NodeGroupId = &v
	return s
}

func (s *NodeGroup) SetNodeGroupName(v string) *NodeGroup {
	s.NodeGroupName = &v
	return s
}

func (s *NodeGroup) SetNodeGroupState(v string) *NodeGroup {
	s.NodeGroupState = &v
	return s
}

func (s *NodeGroup) SetNodeGroupType(v string) *NodeGroup {
	s.NodeGroupType = &v
	return s
}

func (s *NodeGroup) SetNodeResizeStrategy(v string) *NodeGroup {
	s.NodeResizeStrategy = &v
	return s
}

func (s *NodeGroup) SetPaymentType(v string) *NodeGroup {
	s.PaymentType = &v
	return s
}

func (s *NodeGroup) SetRunningNodeCount(v int32) *NodeGroup {
	s.RunningNodeCount = &v
	return s
}

func (s *NodeGroup) SetSpotBidPrices(v []*SpotBidPrice) *NodeGroup {
	s.SpotBidPrices = v
	return s
}

func (s *NodeGroup) SetSpotInstanceRemedy(v bool) *NodeGroup {
	s.SpotInstanceRemedy = &v
	return s
}

func (s *NodeGroup) SetSpotStrategy(v string) *NodeGroup {
	s.SpotStrategy = &v
	return s
}

func (s *NodeGroup) SetStateChangeReason(v *NodeGroupStateChangeReason) *NodeGroup {
	s.StateChangeReason = v
	return s
}

func (s *NodeGroup) SetStatus(v string) *NodeGroup {
	s.Status = &v
	return s
}

func (s *NodeGroup) SetSystemDisk(v *SystemDisk) *NodeGroup {
	s.SystemDisk = v
	return s
}

func (s *NodeGroup) SetVSwitchIds(v []*string) *NodeGroup {
	s.VSwitchIds = v
	return s
}

func (s *NodeGroup) SetWithPublicIp(v bool) *NodeGroup {
	s.WithPublicIp = &v
	return s
}

func (s *NodeGroup) SetZoneId(v string) *NodeGroup {
	s.ZoneId = &v
	return s
}

type NodeGroupConfig struct {
	// 附加安全组。除集群设置的安全组外，为节点组单独设置的附加安全组。数组元数个数N的取值范围：0~2。
	//
	// example:
	//
	// ["sg-hp3abbae8lb6lmb1****"]
	AdditionalSecurityGroupIds []*string `json:"AdditionalSecurityGroupIds,omitempty" xml:"AdditionalSecurityGroupIds,omitempty" type:"Repeated"`
	ComponentTags              []*string `json:"ComponentTags,omitempty" xml:"ComponentTags,omitempty" type:"Repeated"`
	// 成本优化模式配置。
	CostOptimizedConfig *CostOptimizedConfig `json:"CostOptimizedConfig,omitempty" xml:"CostOptimizedConfig,omitempty"`
	// 数据盘。当前数据盘只支持一种磁盘类型，即数组元数个数N的取值范围：1~1。
	DataDisks []*DataDisk `json:"DataDisks,omitempty" xml:"DataDisks,omitempty" type:"Repeated"`
	// 部署集策略。取值范围：
	//
	// - NONE：不适用部署集。
	//
	// - CLUSTER：使用集群级别部署集。
	//
	// - NODE_GROUP：使用节点组级别部署集。
	//
	// 默认值：NONE。
	//
	// example:
	//
	// NONE
	DeploymentSetStrategy *string `json:"DeploymentSetStrategy,omitempty" xml:"DeploymentSetStrategy,omitempty"`
	// 节点组上部署的组件是否开启优雅下线。取值范围：
	//
	// - true：开启优雅下线。
	//
	// - false：不开启优雅下线。
	//
	// 默认值：false。
	//
	// example:
	//
	// false
	GracefulShutdown *bool `json:"GracefulShutdown,omitempty" xml:"GracefulShutdown,omitempty"`
	// 节点实例类型列表。数组元数个数N的取值范围：1~100。
	//
	// example:
	//
	// ["ecs.g6.xlarge"]
	InstanceTypes []*string `json:"InstanceTypes,omitempty" xml:"InstanceTypes,omitempty" type:"Repeated"`
	// 节点数量。取值范围：1~1000。
	//
	// example:
	//
	// 3
	NodeCount *int32 `json:"NodeCount,omitempty" xml:"NodeCount,omitempty"`
	// 节点组名称。最大长度128个字符。集群内要求节点组名称唯一。
	//
	// example:
	//
	// core-1
	NodeGroupName *string `json:"NodeGroupName,omitempty" xml:"NodeGroupName,omitempty"`
	// 节点组类型。取值范围：
	//
	// - MASTER：管理类型节点组。
	//
	// - CORE：存储类型节点组。
	//
	// - TASK：计算类型节点组。
	//
	// This parameter is required.
	//
	// example:
	//
	// CORE
	NodeGroupType *string `json:"NodeGroupType,omitempty" xml:"NodeGroupType,omitempty"`
	// 节点扩容策略。取值范围：
	//
	// - COST_OPTIMIZED：成本优化策略。
	//
	// - PRIORITY：优先级策略。
	//
	// 默认值：PRIORITY。
	//
	// example:
	//
	// PRIORITY
	NodeResizeStrategy *string `json:"NodeResizeStrategy,omitempty" xml:"NodeResizeStrategy,omitempty"`
	// 节点组付费类型。不传入时默认和集群付费类型一致。取值范围：
	//
	// - PayAsYouGo：后付费，按量付费。
	//
	// - Subscription：预付费，包年包月。
	//
	// 默认值：PayAsYouGo。
	//
	// example:
	//
	// PayAsYouGo
	PaymentType *string `json:"PaymentType,omitempty" xml:"PaymentType,omitempty"`
	// 抢占式Spot实例出价价格。参数SpotStrategy取值为SpotWithPriceLimit时生效。数组元数个数N的取值范围：0~100。
	SpotBidPrices []*SpotBidPrice `json:"SpotBidPrices,omitempty" xml:"SpotBidPrices,omitempty" type:"Repeated"`
	// 开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。取值范围：
	//
	// - true：开启补齐抢占式实例。
	//
	// - false：不开启补齐抢占式实例。
	//
	// 默认值：false。
	//
	// example:
	//
	// true
	SpotInstanceRemedy *bool `json:"SpotInstanceRemedy,omitempty" xml:"SpotInstanceRemedy,omitempty"`
	// 抢占式Spot实例策略。取值范围：
	//
	// - NoSpot：正常按量付费实例。
	//
	// - SpotWithPriceLimit：设置最高出价的抢占式实例。
	//
	// - SpotAsPriceGo：系统自动出价，最高按量付费价格的抢占式实例。
	//
	// 默认值：NoSpot。
	//
	// example:
	//
	// NoSpot
	SpotStrategy *string `json:"SpotStrategy,omitempty" xml:"SpotStrategy,omitempty"`
	// 节点组预付费配置。不传入时默认和集群预付费配置一致。
	SubscriptionConfig *SubscriptionConfig `json:"SubscriptionConfig,omitempty" xml:"SubscriptionConfig,omitempty"`
	// 系统盘。
	SystemDisk *SystemDisk `json:"SystemDisk,omitempty" xml:"SystemDisk,omitempty"`
	// 虚拟机交换机ID列表。数组元数个数N的取值范围：1~20。
	//
	// example:
	//
	// ["vsw-hp35g7ya5ymw68mmg****"]
	VSwitchIds []*string `json:"VSwitchIds,omitempty" xml:"VSwitchIds,omitempty" type:"Repeated"`
	// 是否开公网IP。取值范围：
	//
	// - true：开公网。
	//
	// - false：不开公网。
	//
	// 默认值：false。
	//
	// example:
	//
	// false
	WithPublicIp *bool `json:"WithPublicIp,omitempty" xml:"WithPublicIp,omitempty"`
}

func (s NodeGroupConfig) String() string {
	return tea.Prettify(s)
}

func (s NodeGroupConfig) GoString() string {
	return s.String()
}

func (s *NodeGroupConfig) SetAdditionalSecurityGroupIds(v []*string) *NodeGroupConfig {
	s.AdditionalSecurityGroupIds = v
	return s
}

func (s *NodeGroupConfig) SetComponentTags(v []*string) *NodeGroupConfig {
	s.ComponentTags = v
	return s
}

func (s *NodeGroupConfig) SetCostOptimizedConfig(v *CostOptimizedConfig) *NodeGroupConfig {
	s.CostOptimizedConfig = v
	return s
}

func (s *NodeGroupConfig) SetDataDisks(v []*DataDisk) *NodeGroupConfig {
	s.DataDisks = v
	return s
}

func (s *NodeGroupConfig) SetDeploymentSetStrategy(v string) *NodeGroupConfig {
	s.DeploymentSetStrategy = &v
	return s
}

func (s *NodeGroupConfig) SetGracefulShutdown(v bool) *NodeGroupConfig {
	s.GracefulShutdown = &v
	return s
}

func (s *NodeGroupConfig) SetInstanceTypes(v []*string) *NodeGroupConfig {
	s.InstanceTypes = v
	return s
}

func (s *NodeGroupConfig) SetNodeCount(v int32) *NodeGroupConfig {
	s.NodeCount = &v
	return s
}

func (s *NodeGroupConfig) SetNodeGroupName(v string) *NodeGroupConfig {
	s.NodeGroupName = &v
	return s
}

func (s *NodeGroupConfig) SetNodeGroupType(v string) *NodeGroupConfig {
	s.NodeGroupType = &v
	return s
}

func (s *NodeGroupConfig) SetNodeResizeStrategy(v string) *NodeGroupConfig {
	s.NodeResizeStrategy = &v
	return s
}

func (s *NodeGroupConfig) SetPaymentType(v string) *NodeGroupConfig {
	s.PaymentType = &v
	return s
}

func (s *NodeGroupConfig) SetSpotBidPrices(v []*SpotBidPrice) *NodeGroupConfig {
	s.SpotBidPrices = v
	return s
}

func (s *NodeGroupConfig) SetSpotInstanceRemedy(v bool) *NodeGroupConfig {
	s.SpotInstanceRemedy = &v
	return s
}

func (s *NodeGroupConfig) SetSpotStrategy(v string) *NodeGroupConfig {
	s.SpotStrategy = &v
	return s
}

func (s *NodeGroupConfig) SetSubscriptionConfig(v *SubscriptionConfig) *NodeGroupConfig {
	s.SubscriptionConfig = v
	return s
}

func (s *NodeGroupConfig) SetSystemDisk(v *SystemDisk) *NodeGroupConfig {
	s.SystemDisk = v
	return s
}

func (s *NodeGroupConfig) SetVSwitchIds(v []*string) *NodeGroupConfig {
	s.VSwitchIds = v
	return s
}

func (s *NodeGroupConfig) SetWithPublicIp(v bool) *NodeGroupConfig {
	s.WithPublicIp = &v
	return s
}

type NodeGroupParam struct {
	AutoPayOrder          *bool            `json:"AutoPayOrder,omitempty" xml:"AutoPayOrder,omitempty"`
	AutoRenew             *bool            `json:"AutoRenew,omitempty" xml:"AutoRenew,omitempty"`
	AutoRenewDuration     *int32           `json:"AutoRenewDuration,omitempty" xml:"AutoRenewDuration,omitempty"`
	AutoRenewDurationUnit *string          `json:"AutoRenewDurationUnit,omitempty" xml:"AutoRenewDurationUnit,omitempty"`
	DataDisks             []*DiskInfo      `json:"DataDisks,omitempty" xml:"DataDisks,omitempty" type:"Repeated"`
	Description           *string          `json:"Description,omitempty" xml:"Description,omitempty"`
	InstanceTypes         []*string        `json:"InstanceTypes,omitempty" xml:"InstanceTypes,omitempty" type:"Repeated"`
	NodeCount             *int32           `json:"NodeCount,omitempty" xml:"NodeCount,omitempty"`
	NodeGroupIndex        *int32           `json:"NodeGroupIndex,omitempty" xml:"NodeGroupIndex,omitempty"`
	NodeGroupName         *string          `json:"NodeGroupName,omitempty" xml:"NodeGroupName,omitempty"`
	NodeGroupType         *string          `json:"NodeGroupType,omitempty" xml:"NodeGroupType,omitempty"`
	PaymentDuration       *int32           `json:"PaymentDuration,omitempty" xml:"PaymentDuration,omitempty"`
	PaymentDurationUnit   *string          `json:"PaymentDurationUnit,omitempty" xml:"PaymentDurationUnit,omitempty"`
	PaymentType           *string          `json:"PaymentType,omitempty" xml:"PaymentType,omitempty"`
	SystemDisk            *SystemDiskParam `json:"SystemDisk,omitempty" xml:"SystemDisk,omitempty"`
	VSwitchIds            []*string        `json:"VSwitchIds,omitempty" xml:"VSwitchIds,omitempty" type:"Repeated"`
	ZoneId                *string          `json:"ZoneId,omitempty" xml:"ZoneId,omitempty"`
}

func (s NodeGroupParam) String() string {
	return tea.Prettify(s)
}

func (s NodeGroupParam) GoString() string {
	return s.String()
}

func (s *NodeGroupParam) SetAutoPayOrder(v bool) *NodeGroupParam {
	s.AutoPayOrder = &v
	return s
}

func (s *NodeGroupParam) SetAutoRenew(v bool) *NodeGroupParam {
	s.AutoRenew = &v
	return s
}

func (s *NodeGroupParam) SetAutoRenewDuration(v int32) *NodeGroupParam {
	s.AutoRenewDuration = &v
	return s
}

func (s *NodeGroupParam) SetAutoRenewDurationUnit(v string) *NodeGroupParam {
	s.AutoRenewDurationUnit = &v
	return s
}

func (s *NodeGroupParam) SetDataDisks(v []*DiskInfo) *NodeGroupParam {
	s.DataDisks = v
	return s
}

func (s *NodeGroupParam) SetDescription(v string) *NodeGroupParam {
	s.Description = &v
	return s
}

func (s *NodeGroupParam) SetInstanceTypes(v []*string) *NodeGroupParam {
	s.InstanceTypes = v
	return s
}

func (s *NodeGroupParam) SetNodeCount(v int32) *NodeGroupParam {
	s.NodeCount = &v
	return s
}

func (s *NodeGroupParam) SetNodeGroupIndex(v int32) *NodeGroupParam {
	s.NodeGroupIndex = &v
	return s
}

func (s *NodeGroupParam) SetNodeGroupName(v string) *NodeGroupParam {
	s.NodeGroupName = &v
	return s
}

func (s *NodeGroupParam) SetNodeGroupType(v string) *NodeGroupParam {
	s.NodeGroupType = &v
	return s
}

func (s *NodeGroupParam) SetPaymentDuration(v int32) *NodeGroupParam {
	s.PaymentDuration = &v
	return s
}

func (s *NodeGroupParam) SetPaymentDurationUnit(v string) *NodeGroupParam {
	s.PaymentDurationUnit = &v
	return s
}

func (s *NodeGroupParam) SetPaymentType(v string) *NodeGroupParam {
	s.PaymentType = &v
	return s
}

func (s *NodeGroupParam) SetSystemDisk(v *SystemDiskParam) *NodeGroupParam {
	s.SystemDisk = v
	return s
}

func (s *NodeGroupParam) SetVSwitchIds(v []*string) *NodeGroupParam {
	s.VSwitchIds = v
	return s
}

func (s *NodeGroupParam) SetZoneId(v string) *NodeGroupParam {
	s.ZoneId = &v
	return s
}

type NodeGroupStateChangeReason struct {
	// 状态码。
	//
	// example:
	//
	// MissingParameter
	Code *string `json:"Code,omitempty" xml:"Code,omitempty"`
	// 描述信息。
	//
	// example:
	//
	// The instance type is required.
	Message *string `json:"Message,omitempty" xml:"Message,omitempty"`
}

func (s NodeGroupStateChangeReason) String() string {
	return tea.Prettify(s)
}

func (s NodeGroupStateChangeReason) GoString() string {
	return s.String()
}

func (s *NodeGroupStateChangeReason) SetCode(v string) *NodeGroupStateChangeReason {
	s.Code = &v
	return s
}

func (s *NodeGroupStateChangeReason) SetMessage(v string) *NodeGroupStateChangeReason {
	s.Message = &v
	return s
}

type NodeSelector struct {
	// Deprecated
	//
	// 节点组ID。当NodeSelectType取值NodeGroup时，该参数生效。
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId  *string   `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	NodeGroupIds []*string `json:"NodeGroupIds,omitempty" xml:"NodeGroupIds,omitempty" type:"Repeated"`
	// Deprecated
	//
	// 节点组名称。当NodeSelectType取值NodeGroup，且参数NodeGroupId为空时生效，该参数生效。
	//
	// example:
	//
	// master-1
	NodeGroupName  *string   `json:"NodeGroupName,omitempty" xml:"NodeGroupName,omitempty"`
	NodeGroupNames []*string `json:"NodeGroupNames,omitempty" xml:"NodeGroupNames,omitempty" type:"Repeated"`
	// 节点组类型。当NodeSelectType取值NodeGroup，且参数NodeGroupId为空时生效。数组元数个数N取值范围：0~10。
	//
	// example:
	//
	// ["CORE","TASK"]
	NodeGroupTypes []*string `json:"NodeGroupTypes,omitempty" xml:"NodeGroupTypes,omitempty" type:"Repeated"`
	// 节点名称列表。当NodeSelectType取值Node时，该参数生效。
	//
	// example:
	//
	// ["core1-1"]
	NodeNames []*string `json:"NodeNames,omitempty" xml:"NodeNames,omitempty" type:"Repeated"`
	// 节点选择类型。取值范围：
	//
	// - CLUSTER：集群。
	//
	// - NODE_GROUP：节点组。
	//
	// - NODE：节点。
	//
	// This parameter is required.
	//
	// example:
	//
	// CLUSTER
	NodeSelectType *string `json:"NodeSelectType,omitempty" xml:"NodeSelectType,omitempty"`
}

func (s NodeSelector) String() string {
	return tea.Prettify(s)
}

func (s NodeSelector) GoString() string {
	return s.String()
}

func (s *NodeSelector) SetNodeGroupId(v string) *NodeSelector {
	s.NodeGroupId = &v
	return s
}

func (s *NodeSelector) SetNodeGroupIds(v []*string) *NodeSelector {
	s.NodeGroupIds = v
	return s
}

func (s *NodeSelector) SetNodeGroupName(v string) *NodeSelector {
	s.NodeGroupName = &v
	return s
}

func (s *NodeSelector) SetNodeGroupNames(v []*string) *NodeSelector {
	s.NodeGroupNames = v
	return s
}

func (s *NodeSelector) SetNodeGroupTypes(v []*string) *NodeSelector {
	s.NodeGroupTypes = v
	return s
}

func (s *NodeSelector) SetNodeNames(v []*string) *NodeSelector {
	s.NodeNames = v
	return s
}

func (s *NodeSelector) SetNodeSelectType(v string) *NodeSelector {
	s.NodeSelectType = &v
	return s
}

type OSUser struct {
	// 用户组。
	//
	// example:
	//
	// hadoop
	Group *string `json:"Group,omitempty" xml:"Group,omitempty"`
	// 用户密码。
	//
	// example:
	//
	// 12345****
	Password *string `json:"Password,omitempty" xml:"Password,omitempty"`
	// 用户名称。
	//
	// example:
	//
	// 王五
	User *string `json:"User,omitempty" xml:"User,omitempty"`
}

func (s OSUser) String() string {
	return tea.Prettify(s)
}

func (s OSUser) GoString() string {
	return s.String()
}

func (s *OSUser) SetGroup(v string) *OSUser {
	s.Group = &v
	return s
}

func (s *OSUser) SetPassword(v string) *OSUser {
	s.Password = &v
	return s
}

func (s *OSUser) SetUser(v string) *OSUser {
	s.User = &v
	return s
}

type OnKubeClusterResource struct {
	Cpu    *string `json:"Cpu,omitempty" xml:"Cpu,omitempty"`
	Memory *string `json:"Memory,omitempty" xml:"Memory,omitempty"`
}

func (s OnKubeClusterResource) String() string {
	return tea.Prettify(s)
}

func (s OnKubeClusterResource) GoString() string {
	return s.String()
}

func (s *OnKubeClusterResource) SetCpu(v string) *OnKubeClusterResource {
	s.Cpu = &v
	return s
}

func (s *OnKubeClusterResource) SetMemory(v string) *OnKubeClusterResource {
	s.Memory = &v
	return s
}

type Operation struct {
	// 集群ID。
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// 创建时间。
	//
	// example:
	//
	// 1628589439114
	CreateTime *int64 `json:"CreateTime,omitempty" xml:"CreateTime,omitempty"`
	// 描述。
	//
	// example:
	//
	// start
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// 结束时间。
	//
	// example:
	//
	// 1628589439114
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 操作ID。
	//
	// example:
	//
	// op-13c37a77c505****
	OperationId *string `json:"OperationId,omitempty" xml:"OperationId,omitempty"`
	// 操作状态。
	//
	// example:
	//
	// COMPLETED
	OperationState *string `json:"OperationState,omitempty" xml:"OperationState,omitempty"`
	// 操作类型。
	//
	// example:
	//
	// CLUSTER
	OperationType *string `json:"OperationType,omitempty" xml:"OperationType,omitempty"`
	// 开始时间。
	//
	// example:
	//
	// 1628589439114
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
	// 状态转换原因。
	StateChangeReason *OperationStateChangeReason `json:"StateChangeReason,omitempty" xml:"StateChangeReason,omitempty"`
}

func (s Operation) String() string {
	return tea.Prettify(s)
}

func (s Operation) GoString() string {
	return s.String()
}

func (s *Operation) SetClusterId(v string) *Operation {
	s.ClusterId = &v
	return s
}

func (s *Operation) SetCreateTime(v int64) *Operation {
	s.CreateTime = &v
	return s
}

func (s *Operation) SetDescription(v string) *Operation {
	s.Description = &v
	return s
}

func (s *Operation) SetEndTime(v int64) *Operation {
	s.EndTime = &v
	return s
}

func (s *Operation) SetOperationId(v string) *Operation {
	s.OperationId = &v
	return s
}

func (s *Operation) SetOperationState(v string) *Operation {
	s.OperationState = &v
	return s
}

func (s *Operation) SetOperationType(v string) *Operation {
	s.OperationType = &v
	return s
}

func (s *Operation) SetStartTime(v int64) *Operation {
	s.StartTime = &v
	return s
}

func (s *Operation) SetStateChangeReason(v *OperationStateChangeReason) *Operation {
	s.StateChangeReason = v
	return s
}

type OperationData struct {
	ActualDeliveredAmounts *int32 `json:"actualDeliveredAmounts,omitempty" xml:"actualDeliveredAmounts,omitempty"`
	ToBeDeliveredAmounts   *int32 `json:"toBeDeliveredAmounts,omitempty" xml:"toBeDeliveredAmounts,omitempty"`
}

func (s OperationData) String() string {
	return tea.Prettify(s)
}

func (s OperationData) GoString() string {
	return s.String()
}

func (s *OperationData) SetActualDeliveredAmounts(v int32) *OperationData {
	s.ActualDeliveredAmounts = &v
	return s
}

func (s *OperationData) SetToBeDeliveredAmounts(v int32) *OperationData {
	s.ToBeDeliveredAmounts = &v
	return s
}

type OperationStateChangeReason struct {
	// 状态码。
	//
	// example:
	//
	// OutOfStock
	Code *string `json:"Code,omitempty" xml:"Code,omitempty"`
	// 状态变化信息。
	//
	// example:
	//
	// The requested resource is sold out in the specified zone, try other types of resources or other regions and zones.
	Message *string `json:"Message,omitempty" xml:"Message,omitempty"`
}

func (s OperationStateChangeReason) String() string {
	return tea.Prettify(s)
}

func (s OperationStateChangeReason) GoString() string {
	return s.String()
}

func (s *OperationStateChangeReason) SetCode(v string) *OperationStateChangeReason {
	s.Code = &v
	return s
}

func (s *OperationStateChangeReason) SetMessage(v string) *OperationStateChangeReason {
	s.Message = &v
	return s
}

type Order struct {
	CreateTime *string `json:"CreateTime,omitempty" xml:"CreateTime,omitempty"`
	OrderId    *string `json:"OrderId,omitempty" xml:"OrderId,omitempty"`
}

func (s Order) String() string {
	return tea.Prettify(s)
}

func (s Order) GoString() string {
	return s.String()
}

func (s *Order) SetCreateTime(v string) *Order {
	s.CreateTime = &v
	return s
}

func (s *Order) SetOrderId(v string) *Order {
	s.OrderId = &v
	return s
}

type Page struct {
	Items      []*string `json:"Items,omitempty" xml:"Items,omitempty" type:"Repeated"`
	MaxResults *int64    `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	NextToken  *string   `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	TotalCount *int64    `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s Page) String() string {
	return tea.Prettify(s)
}

func (s Page) GoString() string {
	return s.String()
}

func (s *Page) SetItems(v []*string) *Page {
	s.Items = v
	return s
}

func (s *Page) SetMaxResults(v int64) *Page {
	s.MaxResults = &v
	return s
}

func (s *Page) SetNextToken(v string) *Page {
	s.NextToken = &v
	return s
}

func (s *Page) SetTotalCount(v int64) *Page {
	s.TotalCount = &v
	return s
}

type Pod struct {
	Message   *string `json:"Message,omitempty" xml:"Message,omitempty"`
	PodName   *string `json:"PodName,omitempty" xml:"PodName,omitempty"`
	PodStatus *string `json:"PodStatus,omitempty" xml:"PodStatus,omitempty"`
	Reason    *string `json:"Reason,omitempty" xml:"Reason,omitempty"`
}

func (s Pod) String() string {
	return tea.Prettify(s)
}

func (s Pod) GoString() string {
	return s.String()
}

func (s *Pod) SetMessage(v string) *Pod {
	s.Message = &v
	return s
}

func (s *Pod) SetPodName(v string) *Pod {
	s.PodName = &v
	return s
}

func (s *Pod) SetPodStatus(v string) *Pod {
	s.PodStatus = &v
	return s
}

func (s *Pod) SetReason(v string) *Pod {
	s.Reason = &v
	return s
}

type PriceInfo struct {
	Currency                      *string          `json:"Currency,omitempty" xml:"Currency,omitempty"`
	DiscountPrice                 *string          `json:"DiscountPrice,omitempty" xml:"DiscountPrice,omitempty"`
	OriginalPrice                 *string          `json:"OriginalPrice,omitempty" xml:"OriginalPrice,omitempty"`
	PayType                       *string          `json:"PayType,omitempty" xml:"PayType,omitempty"`
	PromotionResults              []*PromotionInfo `json:"PromotionResults,omitempty" xml:"PromotionResults,omitempty" type:"Repeated"`
	ResourceType                  *string          `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	SpotInstanceTypeOriginalPrice *string          `json:"SpotInstanceTypeOriginalPrice,omitempty" xml:"SpotInstanceTypeOriginalPrice,omitempty"`
	SpotInstanceTypePrice         *string          `json:"SpotInstanceTypePrice,omitempty" xml:"SpotInstanceTypePrice,omitempty"`
	SpotOriginalPrice             *string          `json:"SpotOriginalPrice,omitempty" xml:"SpotOriginalPrice,omitempty"`
	SpotPrice                     *string          `json:"SpotPrice,omitempty" xml:"SpotPrice,omitempty"`
	TaxPrice                      *string          `json:"TaxPrice,omitempty" xml:"TaxPrice,omitempty"`
	TradePrice                    *string          `json:"TradePrice,omitempty" xml:"TradePrice,omitempty"`
}

func (s PriceInfo) String() string {
	return tea.Prettify(s)
}

func (s PriceInfo) GoString() string {
	return s.String()
}

func (s *PriceInfo) SetCurrency(v string) *PriceInfo {
	s.Currency = &v
	return s
}

func (s *PriceInfo) SetDiscountPrice(v string) *PriceInfo {
	s.DiscountPrice = &v
	return s
}

func (s *PriceInfo) SetOriginalPrice(v string) *PriceInfo {
	s.OriginalPrice = &v
	return s
}

func (s *PriceInfo) SetPayType(v string) *PriceInfo {
	s.PayType = &v
	return s
}

func (s *PriceInfo) SetPromotionResults(v []*PromotionInfo) *PriceInfo {
	s.PromotionResults = v
	return s
}

func (s *PriceInfo) SetResourceType(v string) *PriceInfo {
	s.ResourceType = &v
	return s
}

func (s *PriceInfo) SetSpotInstanceTypeOriginalPrice(v string) *PriceInfo {
	s.SpotInstanceTypeOriginalPrice = &v
	return s
}

func (s *PriceInfo) SetSpotInstanceTypePrice(v string) *PriceInfo {
	s.SpotInstanceTypePrice = &v
	return s
}

func (s *PriceInfo) SetSpotOriginalPrice(v string) *PriceInfo {
	s.SpotOriginalPrice = &v
	return s
}

func (s *PriceInfo) SetSpotPrice(v string) *PriceInfo {
	s.SpotPrice = &v
	return s
}

func (s *PriceInfo) SetTaxPrice(v string) *PriceInfo {
	s.TaxPrice = &v
	return s
}

func (s *PriceInfo) SetTradePrice(v string) *PriceInfo {
	s.TradePrice = &v
	return s
}

type Promotion struct {
	// 产品码。
	//
	// example:
	//
	// ecs
	ProductCode *string `json:"ProductCode,omitempty" xml:"ProductCode,omitempty"`
	// 优惠券描述。
	//
	// example:
	//
	// 5元优惠券（有效期至23年8月11日）
	PromotionDesc *string `json:"PromotionDesc,omitempty" xml:"PromotionDesc,omitempty"`
	// 优惠券名称。
	//
	// example:
	//
	// 5元优惠券
	PromotionName *string `json:"PromotionName,omitempty" xml:"PromotionName,omitempty"`
	// 优惠券码。
	//
	// example:
	//
	// youhui_quan
	PromotionOptionCode *string `json:"PromotionOptionCode,omitempty" xml:"PromotionOptionCode,omitempty"`
	// 优惠券号。
	//
	// This parameter is required.
	//
	// example:
	//
	// ABC123
	PromotionOptionNo *string `json:"PromotionOptionNo,omitempty" xml:"PromotionOptionNo,omitempty"`
}

func (s Promotion) String() string {
	return tea.Prettify(s)
}

func (s Promotion) GoString() string {
	return s.String()
}

func (s *Promotion) SetProductCode(v string) *Promotion {
	s.ProductCode = &v
	return s
}

func (s *Promotion) SetPromotionDesc(v string) *Promotion {
	s.PromotionDesc = &v
	return s
}

func (s *Promotion) SetPromotionName(v string) *Promotion {
	s.PromotionName = &v
	return s
}

func (s *Promotion) SetPromotionOptionCode(v string) *Promotion {
	s.PromotionOptionCode = &v
	return s
}

func (s *Promotion) SetPromotionOptionNo(v string) *Promotion {
	s.PromotionOptionNo = &v
	return s
}

type PromotionInfo struct {
	CanPromFee          *string `json:"CanPromFee,omitempty" xml:"CanPromFee,omitempty"`
	IsSelected          *string `json:"IsSelected,omitempty" xml:"IsSelected,omitempty"`
	PromotionDesc       *string `json:"PromotionDesc,omitempty" xml:"PromotionDesc,omitempty"`
	PromotionName       *string `json:"PromotionName,omitempty" xml:"PromotionName,omitempty"`
	PromotionOptionCode *string `json:"PromotionOptionCode,omitempty" xml:"PromotionOptionCode,omitempty"`
	PromotionOptionNo   *string `json:"PromotionOptionNo,omitempty" xml:"PromotionOptionNo,omitempty"`
}

func (s PromotionInfo) String() string {
	return tea.Prettify(s)
}

func (s PromotionInfo) GoString() string {
	return s.String()
}

func (s *PromotionInfo) SetCanPromFee(v string) *PromotionInfo {
	s.CanPromFee = &v
	return s
}

func (s *PromotionInfo) SetIsSelected(v string) *PromotionInfo {
	s.IsSelected = &v
	return s
}

func (s *PromotionInfo) SetPromotionDesc(v string) *PromotionInfo {
	s.PromotionDesc = &v
	return s
}

func (s *PromotionInfo) SetPromotionName(v string) *PromotionInfo {
	s.PromotionName = &v
	return s
}

func (s *PromotionInfo) SetPromotionOptionCode(v string) *PromotionInfo {
	s.PromotionOptionCode = &v
	return s
}

func (s *PromotionInfo) SetPromotionOptionNo(v string) *PromotionInfo {
	s.PromotionOptionNo = &v
	return s
}

type PromotionParam struct {
	ProductCode         *string `json:"ProductCode,omitempty" xml:"ProductCode,omitempty"`
	PromotionOptionCode *string `json:"PromotionOptionCode,omitempty" xml:"PromotionOptionCode,omitempty"`
	PromotionOptionNo   *string `json:"PromotionOptionNo,omitempty" xml:"PromotionOptionNo,omitempty"`
}

func (s PromotionParam) String() string {
	return tea.Prettify(s)
}

func (s PromotionParam) GoString() string {
	return s.String()
}

func (s *PromotionParam) SetProductCode(v string) *PromotionParam {
	s.ProductCode = &v
	return s
}

func (s *PromotionParam) SetPromotionOptionCode(v string) *PromotionParam {
	s.PromotionOptionCode = &v
	return s
}

func (s *PromotionParam) SetPromotionOptionNo(v string) *PromotionParam {
	s.PromotionOptionNo = &v
	return s
}

type RecommendScalingRule struct {
	// 伸缩活动类型。取值范围：
	//
	// - SCALE_OUT：扩容。
	//
	// - SCALE_IN：缩容。
	//
	// This parameter is required.
	//
	// example:
	//
	// SCALE_IN
	ActivityType *string `json:"ActivityType,omitempty" xml:"ActivityType,omitempty"`
	// 调整值。需要为正数，代表需要扩容或者缩容的实例数量。
	//
	// This parameter is required.
	//
	// example:
	//
	// 100
	AdjustmentValue *int32 `json:"AdjustmentValue,omitempty" xml:"AdjustmentValue,omitempty"`
	// 推荐的规格类型。
	InstanceType *string `json:"InstanceType,omitempty" xml:"InstanceType,omitempty"`
	// 最大节约成本。
	//
	// example:
	//
	// 0.12
	MaxSave *float32 `json:"MaxSave,omitempty" xml:"MaxSave,omitempty"`
	// 按照负载伸缩描述。
	//
	// <p>
	MetricsTrigger *MetricsTrigger `json:"MetricsTrigger,omitempty" xml:"MetricsTrigger,omitempty"`
	// 规则名称。
	//
	// This parameter is required.
	//
	// example:
	//
	// scale-out-memory
	RuleName *string `json:"RuleName,omitempty" xml:"RuleName,omitempty"`
	// 按照时间伸缩描述。
	//
	// <p>
	TimeTrigger *TimeTrigger `json:"TimeTrigger,omitempty" xml:"TimeTrigger,omitempty"`
	// 伸缩规则类型。 取值范围：
	//
	// - TIME_TRIGGER: 按时间伸缩。
	//
	// - METRICS_TRIGGER: 按负载伸缩。
	//
	// This parameter is required.
	//
	// example:
	//
	// TIME_TRIGGER
	TriggerType *string `json:"TriggerType,omitempty" xml:"TriggerType,omitempty"`
}

func (s RecommendScalingRule) String() string {
	return tea.Prettify(s)
}

func (s RecommendScalingRule) GoString() string {
	return s.String()
}

func (s *RecommendScalingRule) SetActivityType(v string) *RecommendScalingRule {
	s.ActivityType = &v
	return s
}

func (s *RecommendScalingRule) SetAdjustmentValue(v int32) *RecommendScalingRule {
	s.AdjustmentValue = &v
	return s
}

func (s *RecommendScalingRule) SetInstanceType(v string) *RecommendScalingRule {
	s.InstanceType = &v
	return s
}

func (s *RecommendScalingRule) SetMaxSave(v float32) *RecommendScalingRule {
	s.MaxSave = &v
	return s
}

func (s *RecommendScalingRule) SetMetricsTrigger(v *MetricsTrigger) *RecommendScalingRule {
	s.MetricsTrigger = v
	return s
}

func (s *RecommendScalingRule) SetRuleName(v string) *RecommendScalingRule {
	s.RuleName = &v
	return s
}

func (s *RecommendScalingRule) SetTimeTrigger(v *TimeTrigger) *RecommendScalingRule {
	s.TimeTrigger = v
	return s
}

func (s *RecommendScalingRule) SetTriggerType(v string) *RecommendScalingRule {
	s.TriggerType = &v
	return s
}

type RenewInstance struct {
	// emr实例续费时长。
	//
	// example:
	//
	// 12
	EmrRenewDuration *int32 `json:"EmrRenewDuration,omitempty" xml:"EmrRenewDuration,omitempty"`
	// emr实例续费时长单位。
	//
	// example:
	//
	// Month
	EmrRenewDurationUnit *string `json:"EmrRenewDurationUnit,omitempty" xml:"EmrRenewDurationUnit,omitempty"`
	// 节点ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// i-bp1cudc25w2bfwl5****
	InstanceId *string `json:"InstanceId,omitempty" xml:"InstanceId,omitempty"`
	// 续费时长。
	//
	// example:
	//
	// 12
	RenewDuration *int32 `json:"RenewDuration,omitempty" xml:"RenewDuration,omitempty"`
	// 付费时长单位。
	//
	// example:
	//
	// Month
	RenewDurationUnit *string `json:"RenewDurationUnit,omitempty" xml:"RenewDurationUnit,omitempty"`
}

func (s RenewInstance) String() string {
	return tea.Prettify(s)
}

func (s RenewInstance) GoString() string {
	return s.String()
}

func (s *RenewInstance) SetEmrRenewDuration(v int32) *RenewInstance {
	s.EmrRenewDuration = &v
	return s
}

func (s *RenewInstance) SetEmrRenewDurationUnit(v string) *RenewInstance {
	s.EmrRenewDurationUnit = &v
	return s
}

func (s *RenewInstance) SetInstanceId(v string) *RenewInstance {
	s.InstanceId = &v
	return s
}

func (s *RenewInstance) SetRenewDuration(v int32) *RenewInstance {
	s.RenewDuration = &v
	return s
}

func (s *RenewInstance) SetRenewDurationUnit(v string) *RenewInstance {
	s.RenewDurationUnit = &v
	return s
}

type RenewInstanceParam struct {
	InstanceId        *string `json:"InstanceId,omitempty" xml:"InstanceId,omitempty"`
	RenewDuration     *int64  `json:"RenewDuration,omitempty" xml:"RenewDuration,omitempty"`
	RenewDurationUnit *string `json:"RenewDurationUnit,omitempty" xml:"RenewDurationUnit,omitempty"`
}

func (s RenewInstanceParam) String() string {
	return tea.Prettify(s)
}

func (s RenewInstanceParam) GoString() string {
	return s.String()
}

func (s *RenewInstanceParam) SetInstanceId(v string) *RenewInstanceParam {
	s.InstanceId = &v
	return s
}

func (s *RenewInstanceParam) SetRenewDuration(v int64) *RenewInstanceParam {
	s.RenewDuration = &v
	return s
}

func (s *RenewInstanceParam) SetRenewDurationUnit(v string) *RenewInstanceParam {
	s.RenewDurationUnit = &v
	return s
}

type ReplacementStrategy struct {
	InstanceCategories []*InstanceCategory `json:"InstanceCategories,omitempty" xml:"InstanceCategories,omitempty" type:"Repeated"`
}

func (s ReplacementStrategy) String() string {
	return tea.Prettify(s)
}

func (s ReplacementStrategy) GoString() string {
	return s.String()
}

func (s *ReplacementStrategy) SetInstanceCategories(v []*InstanceCategory) *ReplacementStrategy {
	s.InstanceCategories = v
	return s
}

type RequestTag struct {
	Key   *string `json:"Key,omitempty" xml:"Key,omitempty"`
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s RequestTag) String() string {
	return tea.Prettify(s)
}

func (s RequestTag) GoString() string {
	return s.String()
}

func (s *RequestTag) SetKey(v string) *RequestTag {
	s.Key = &v
	return s
}

func (s *RequestTag) SetValue(v string) *RequestTag {
	s.Value = &v
	return s
}

type ResizeDiskNodeGroupParam struct {
	DataDiskCapacity *int64  `json:"DataDiskCapacity,omitempty" xml:"DataDiskCapacity,omitempty"`
	NodeGroupId      *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	RollingRestart   *bool   `json:"RollingRestart,omitempty" xml:"RollingRestart,omitempty"`
}

func (s ResizeDiskNodeGroupParam) String() string {
	return tea.Prettify(s)
}

func (s ResizeDiskNodeGroupParam) GoString() string {
	return s.String()
}

func (s *ResizeDiskNodeGroupParam) SetDataDiskCapacity(v int64) *ResizeDiskNodeGroupParam {
	s.DataDiskCapacity = &v
	return s
}

func (s *ResizeDiskNodeGroupParam) SetNodeGroupId(v string) *ResizeDiskNodeGroupParam {
	s.NodeGroupId = &v
	return s
}

func (s *ResizeDiskNodeGroupParam) SetRollingRestart(v bool) *ResizeDiskNodeGroupParam {
	s.RollingRestart = &v
	return s
}

type ScalingActivity struct {
	Cause            *string `json:"Cause,omitempty" xml:"Cause,omitempty"`
	Description      *string `json:"Description,omitempty" xml:"Description,omitempty"`
	EndTime          *int64  `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	EssScalingRuleId *string `json:"EssScalingRuleId,omitempty" xml:"EssScalingRuleId,omitempty"`
	ExpectNum        *int32  `json:"ExpectNum,omitempty" xml:"ExpectNum,omitempty"`
	HostGroupName    *string `json:"HostGroupName,omitempty" xml:"HostGroupName,omitempty"`
	Id               *string `json:"Id,omitempty" xml:"Id,omitempty"`
	InstanceIds      *string `json:"InstanceIds,omitempty" xml:"InstanceIds,omitempty"`
	ScalingGroupId   *string `json:"ScalingGroupId,omitempty" xml:"ScalingGroupId,omitempty"`
	ScalingRuleName  *string `json:"ScalingRuleName,omitempty" xml:"ScalingRuleName,omitempty"`
	StartTime        *int64  `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
	Status           *string `json:"Status,omitempty" xml:"Status,omitempty"`
	TotalCapacity    *int32  `json:"TotalCapacity,omitempty" xml:"TotalCapacity,omitempty"`
	Transition       *string `json:"Transition,omitempty" xml:"Transition,omitempty"`
}

func (s ScalingActivity) String() string {
	return tea.Prettify(s)
}

func (s ScalingActivity) GoString() string {
	return s.String()
}

func (s *ScalingActivity) SetCause(v string) *ScalingActivity {
	s.Cause = &v
	return s
}

func (s *ScalingActivity) SetDescription(v string) *ScalingActivity {
	s.Description = &v
	return s
}

func (s *ScalingActivity) SetEndTime(v int64) *ScalingActivity {
	s.EndTime = &v
	return s
}

func (s *ScalingActivity) SetEssScalingRuleId(v string) *ScalingActivity {
	s.EssScalingRuleId = &v
	return s
}

func (s *ScalingActivity) SetExpectNum(v int32) *ScalingActivity {
	s.ExpectNum = &v
	return s
}

func (s *ScalingActivity) SetHostGroupName(v string) *ScalingActivity {
	s.HostGroupName = &v
	return s
}

func (s *ScalingActivity) SetId(v string) *ScalingActivity {
	s.Id = &v
	return s
}

func (s *ScalingActivity) SetInstanceIds(v string) *ScalingActivity {
	s.InstanceIds = &v
	return s
}

func (s *ScalingActivity) SetScalingGroupId(v string) *ScalingActivity {
	s.ScalingGroupId = &v
	return s
}

func (s *ScalingActivity) SetScalingRuleName(v string) *ScalingActivity {
	s.ScalingRuleName = &v
	return s
}

func (s *ScalingActivity) SetStartTime(v int64) *ScalingActivity {
	s.StartTime = &v
	return s
}

func (s *ScalingActivity) SetStatus(v string) *ScalingActivity {
	s.Status = &v
	return s
}

func (s *ScalingActivity) SetTotalCapacity(v int32) *ScalingActivity {
	s.TotalCapacity = &v
	return s
}

func (s *ScalingActivity) SetTransition(v string) *ScalingActivity {
	s.Transition = &v
	return s
}

type ScalingActivityResult struct {
	// 实例ID。
	//
	// example:
	//
	// i-bp1cudc25w2bfwl5****
	InstanceId *string `json:"InstanceId,omitempty" xml:"InstanceId,omitempty"`
}

func (s ScalingActivityResult) String() string {
	return tea.Prettify(s)
}

func (s ScalingActivityResult) GoString() string {
	return s.String()
}

func (s *ScalingActivityResult) SetInstanceId(v string) *ScalingActivityResult {
	s.InstanceId = &v
	return s
}

type ScalingActivityResultDTO struct {
	// 实例ID。
	//
	// example:
	//
	// i-bp1cudc25w2bfwl5****
	InstanceId *string `json:"InstanceId,omitempty" xml:"InstanceId,omitempty"`
}

func (s ScalingActivityResultDTO) String() string {
	return tea.Prettify(s)
}

func (s ScalingActivityResultDTO) GoString() string {
	return s.String()
}

func (s *ScalingActivityResultDTO) SetInstanceId(v string) *ScalingActivityResultDTO {
	s.InstanceId = &v
	return s
}

type ScalingAnalyzeResult struct {
	// 实际资源利用率。
	//
	// example:
	//
	// 0.12
	ActualUsage *float32 `json:"ActualUsage,omitempty" xml:"ActualUsage,omitempty"`
	// 理想资源用量。
	//
	// example:
	//
	// 0.12
	IdealUsage *float32 `json:"IdealUsage,omitempty" xml:"IdealUsage,omitempty"`
	// 固定资源释放核数（非master）core。
	//
	// example:
	//
	// 1
	ReleaseCores *int32 `json:"ReleaseCores,omitempty" xml:"ReleaseCores,omitempty"`
	// 固定资源保留核数（非master）core。
	//
	// example:
	//
	// 1
	ReservedCores *int32 `json:"ReservedCores,omitempty" xml:"ReservedCores,omitempty"`
}

func (s ScalingAnalyzeResult) String() string {
	return tea.Prettify(s)
}

func (s ScalingAnalyzeResult) GoString() string {
	return s.String()
}

func (s *ScalingAnalyzeResult) SetActualUsage(v float32) *ScalingAnalyzeResult {
	s.ActualUsage = &v
	return s
}

func (s *ScalingAnalyzeResult) SetIdealUsage(v float32) *ScalingAnalyzeResult {
	s.IdealUsage = &v
	return s
}

func (s *ScalingAnalyzeResult) SetReleaseCores(v int32) *ScalingAnalyzeResult {
	s.ReleaseCores = &v
	return s
}

func (s *ScalingAnalyzeResult) SetReservedCores(v int32) *ScalingAnalyzeResult {
	s.ReservedCores = &v
	return s
}

type ScalingAnalyzeTimeRange struct {
	// 结束时间。
	//
	// example:
	//
	// 1676441972000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 起始时间。
	//
	// example:
	//
	// 1676441971000
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
	// 峰谷类型。 peak/valley
	//
	// example:
	//
	// peak
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
}

func (s ScalingAnalyzeTimeRange) String() string {
	return tea.Prettify(s)
}

func (s ScalingAnalyzeTimeRange) GoString() string {
	return s.String()
}

func (s *ScalingAnalyzeTimeRange) SetEndTime(v int64) *ScalingAnalyzeTimeRange {
	s.EndTime = &v
	return s
}

func (s *ScalingAnalyzeTimeRange) SetStartTime(v int64) *ScalingAnalyzeTimeRange {
	s.StartTime = &v
	return s
}

func (s *ScalingAnalyzeTimeRange) SetType(v string) *ScalingAnalyzeTimeRange {
	s.Type = &v
	return s
}

type ScalingConstraints struct {
	// 最大值。
	//
	// example:
	//
	// 2000
	MaxCapacity *int32 `json:"MaxCapacity,omitempty" xml:"MaxCapacity,omitempty"`
	// 最小值。
	//
	// example:
	//
	// 0
	MinCapacity *int32 `json:"MinCapacity,omitempty" xml:"MinCapacity,omitempty"`
}

func (s ScalingConstraints) String() string {
	return tea.Prettify(s)
}

func (s ScalingConstraints) GoString() string {
	return s.String()
}

func (s *ScalingConstraints) SetMaxCapacity(v int32) *ScalingConstraints {
	s.MaxCapacity = &v
	return s
}

func (s *ScalingConstraints) SetMinCapacity(v int32) *ScalingConstraints {
	s.MinCapacity = &v
	return s
}

type ScalingGroupConfig struct {
	// 数据盘类型。
	//
	// example:
	//
	// cloud_essd
	DataDiskCategory *string `json:"DataDiskCategory,omitempty" xml:"DataDiskCategory,omitempty"`
	// 数据盘个数。
	//
	// example:
	//
	// 4
	DataDiskCount *int32 `json:"DataDiskCount,omitempty" xml:"DataDiskCount,omitempty"`
	// 数据盘大小,单位GB。
	//
	// example:
	//
	// 40
	DataDiskSize *int64 `json:"DataDiskSize,omitempty" xml:"DataDiskSize,omitempty"`
	// 默认冷却时间。
	//
	// example:
	//
	// 0
	DefaultCoolDownTime *int64 `json:"DefaultCoolDownTime,omitempty" xml:"DefaultCoolDownTime,omitempty"`
	// 抢占实例列表。
	InstanceTypeList []*ScalingGroupConfigInstanceTypeList `json:"InstanceTypeList,omitempty" xml:"InstanceTypeList,omitempty" type:"Repeated"`
	// 资源可用性策略(成本优化参数)。
	MultiAvailablePolicy *ScalingGroupConfigMultiAvailablePolicy `json:"MultiAvailablePolicy,omitempty" xml:"MultiAvailablePolicy,omitempty" type:"Struct"`
	// 节点下线策略。
	NodeOfflinePolicy *ScalingGroupConfigNodeOfflinePolicy `json:"NodeOfflinePolicy,omitempty" xml:"NodeOfflinePolicy,omitempty" type:"Struct"`
	// 私有池选项	。
	PrivatePoolOptions *ScalingGroupConfigPrivatePoolOptions `json:"PrivatePoolOptions,omitempty" xml:"PrivatePoolOptions,omitempty" type:"Struct"`
	// 伸缩组节点最大个数。
	//
	// example:
	//
	// 10
	ScalingMaxSize *int32 `json:"ScalingMaxSize,omitempty" xml:"ScalingMaxSize,omitempty"`
	// 伸缩组节点最小个数。
	//
	// example:
	//
	// 1
	ScalingMinSize *int32 `json:"ScalingMinSize,omitempty" xml:"ScalingMinSize,omitempty"`
	// 抢占式Spot实例策略。
	//
	// example:
	//
	// NoSpot
	SpotStrategy *string `json:"SpotStrategy,omitempty" xml:"SpotStrategy,omitempty"`
	// 系统盘类型。
	//
	// example:
	//
	// cloud_essd
	SysDiskCategory *string `json:"SysDiskCategory,omitempty" xml:"SysDiskCategory,omitempty"`
	// 系统盘大小,单位GB。
	//
	// example:
	//
	// 80
	SysDiskSize *int64 `json:"SysDiskSize,omitempty" xml:"SysDiskSize,omitempty"`
	// 伸缩活动触发模式。
	//
	// example:
	//
	// ByLoad
	TriggerMode *string `json:"TriggerMode,omitempty" xml:"TriggerMode,omitempty"`
}

func (s ScalingGroupConfig) String() string {
	return tea.Prettify(s)
}

func (s ScalingGroupConfig) GoString() string {
	return s.String()
}

func (s *ScalingGroupConfig) SetDataDiskCategory(v string) *ScalingGroupConfig {
	s.DataDiskCategory = &v
	return s
}

func (s *ScalingGroupConfig) SetDataDiskCount(v int32) *ScalingGroupConfig {
	s.DataDiskCount = &v
	return s
}

func (s *ScalingGroupConfig) SetDataDiskSize(v int64) *ScalingGroupConfig {
	s.DataDiskSize = &v
	return s
}

func (s *ScalingGroupConfig) SetDefaultCoolDownTime(v int64) *ScalingGroupConfig {
	s.DefaultCoolDownTime = &v
	return s
}

func (s *ScalingGroupConfig) SetInstanceTypeList(v []*ScalingGroupConfigInstanceTypeList) *ScalingGroupConfig {
	s.InstanceTypeList = v
	return s
}

func (s *ScalingGroupConfig) SetMultiAvailablePolicy(v *ScalingGroupConfigMultiAvailablePolicy) *ScalingGroupConfig {
	s.MultiAvailablePolicy = v
	return s
}

func (s *ScalingGroupConfig) SetNodeOfflinePolicy(v *ScalingGroupConfigNodeOfflinePolicy) *ScalingGroupConfig {
	s.NodeOfflinePolicy = v
	return s
}

func (s *ScalingGroupConfig) SetPrivatePoolOptions(v *ScalingGroupConfigPrivatePoolOptions) *ScalingGroupConfig {
	s.PrivatePoolOptions = v
	return s
}

func (s *ScalingGroupConfig) SetScalingMaxSize(v int32) *ScalingGroupConfig {
	s.ScalingMaxSize = &v
	return s
}

func (s *ScalingGroupConfig) SetScalingMinSize(v int32) *ScalingGroupConfig {
	s.ScalingMinSize = &v
	return s
}

func (s *ScalingGroupConfig) SetSpotStrategy(v string) *ScalingGroupConfig {
	s.SpotStrategy = &v
	return s
}

func (s *ScalingGroupConfig) SetSysDiskCategory(v string) *ScalingGroupConfig {
	s.SysDiskCategory = &v
	return s
}

func (s *ScalingGroupConfig) SetSysDiskSize(v int64) *ScalingGroupConfig {
	s.SysDiskSize = &v
	return s
}

func (s *ScalingGroupConfig) SetTriggerMode(v string) *ScalingGroupConfig {
	s.TriggerMode = &v
	return s
}

type ScalingGroupConfigInstanceTypeList struct {
	// Ecs类型。
	//
	// example:
	//
	// ecs.c5.xlarge
	InstanceType *string `json:"InstanceType,omitempty" xml:"InstanceType,omitempty"`
	// 抢占价格上限,可空。
	//
	// example:
	//
	// 0.79
	SpotPriceLimit *float32 `json:"SpotPriceLimit,omitempty" xml:"SpotPriceLimit,omitempty"`
}

func (s ScalingGroupConfigInstanceTypeList) String() string {
	return tea.Prettify(s)
}

func (s ScalingGroupConfigInstanceTypeList) GoString() string {
	return s.String()
}

func (s *ScalingGroupConfigInstanceTypeList) SetInstanceType(v string) *ScalingGroupConfigInstanceTypeList {
	s.InstanceType = &v
	return s
}

func (s *ScalingGroupConfigInstanceTypeList) SetSpotPriceLimit(v float32) *ScalingGroupConfigInstanceTypeList {
	s.SpotPriceLimit = &v
	return s
}

type ScalingGroupConfigMultiAvailablePolicy struct {
	// 资源可用性策略(成本优化参数)。
	PolicyParam *ScalingGroupConfigMultiAvailablePolicyPolicyParam `json:"PolicyParam,omitempty" xml:"PolicyParam,omitempty" type:"Struct"`
	// 策略类型。
	//
	// example:
	//
	// PRIORITY
	PolicyType *string `json:"PolicyType,omitempty" xml:"PolicyType,omitempty"`
}

func (s ScalingGroupConfigMultiAvailablePolicy) String() string {
	return tea.Prettify(s)
}

func (s ScalingGroupConfigMultiAvailablePolicy) GoString() string {
	return s.String()
}

func (s *ScalingGroupConfigMultiAvailablePolicy) SetPolicyParam(v *ScalingGroupConfigMultiAvailablePolicyPolicyParam) *ScalingGroupConfigMultiAvailablePolicy {
	s.PolicyParam = v
	return s
}

func (s *ScalingGroupConfigMultiAvailablePolicy) SetPolicyType(v string) *ScalingGroupConfigMultiAvailablePolicy {
	s.PolicyType = &v
	return s
}

type ScalingGroupConfigMultiAvailablePolicyPolicyParam struct {
	// 按需实例最小个数。
	//
	// example:
	//
	// 1
	OnDemandBaseCapacity *int32 `json:"OnDemandBaseCapacity,omitempty" xml:"OnDemandBaseCapacity,omitempty"`
	// 按需实例百分比。
	//
	// example:
	//
	// 10
	OnDemandPercentageAboveBaseCapacity *int32 `json:"OnDemandPercentageAboveBaseCapacity,omitempty" xml:"OnDemandPercentageAboveBaseCapacity,omitempty"`
	// 抢占实例类型池规模。
	//
	// example:
	//
	// 10
	SpotInstancePools *int32 `json:"SpotInstancePools,omitempty" xml:"SpotInstancePools,omitempty"`
	// 是否使用按量补偿。
	//
	// example:
	//
	// false
	SpotInstanceRemedy *bool `json:"SpotInstanceRemedy,omitempty" xml:"SpotInstanceRemedy,omitempty"`
}

func (s ScalingGroupConfigMultiAvailablePolicyPolicyParam) String() string {
	return tea.Prettify(s)
}

func (s ScalingGroupConfigMultiAvailablePolicyPolicyParam) GoString() string {
	return s.String()
}

func (s *ScalingGroupConfigMultiAvailablePolicyPolicyParam) SetOnDemandBaseCapacity(v int32) *ScalingGroupConfigMultiAvailablePolicyPolicyParam {
	s.OnDemandBaseCapacity = &v
	return s
}

func (s *ScalingGroupConfigMultiAvailablePolicyPolicyParam) SetOnDemandPercentageAboveBaseCapacity(v int32) *ScalingGroupConfigMultiAvailablePolicyPolicyParam {
	s.OnDemandPercentageAboveBaseCapacity = &v
	return s
}

func (s *ScalingGroupConfigMultiAvailablePolicyPolicyParam) SetSpotInstancePools(v int32) *ScalingGroupConfigMultiAvailablePolicyPolicyParam {
	s.SpotInstancePools = &v
	return s
}

func (s *ScalingGroupConfigMultiAvailablePolicyPolicyParam) SetSpotInstanceRemedy(v bool) *ScalingGroupConfigMultiAvailablePolicyPolicyParam {
	s.SpotInstanceRemedy = &v
	return s
}

type ScalingGroupConfigNodeOfflinePolicy struct {
	// 下线模式,是否为优雅下线。
	//
	// example:
	//
	// DEFAULT
	Mode *string `json:"Mode,omitempty" xml:"Mode,omitempty"`
	// 下线超时时间,单位毫秒。
	//
	// example:
	//
	// 1000
	TimeoutMs *int64 `json:"TimeoutMs,omitempty" xml:"TimeoutMs,omitempty"`
}

func (s ScalingGroupConfigNodeOfflinePolicy) String() string {
	return tea.Prettify(s)
}

func (s ScalingGroupConfigNodeOfflinePolicy) GoString() string {
	return s.String()
}

func (s *ScalingGroupConfigNodeOfflinePolicy) SetMode(v string) *ScalingGroupConfigNodeOfflinePolicy {
	s.Mode = &v
	return s
}

func (s *ScalingGroupConfigNodeOfflinePolicy) SetTimeoutMs(v int64) *ScalingGroupConfigNodeOfflinePolicy {
	s.TimeoutMs = &v
	return s
}

type ScalingGroupConfigPrivatePoolOptions struct {
	// 私有池id。
	//
	// example:
	//
	// eap-bp67acfmxazb4****
	Id *string `json:"Id,omitempty" xml:"Id,omitempty"`
	// 实例启动的私有池容量选项。。
	//
	// example:
	//
	// Open
	MatchCriteria *string `json:"MatchCriteria,omitempty" xml:"MatchCriteria,omitempty"`
}

func (s ScalingGroupConfigPrivatePoolOptions) String() string {
	return tea.Prettify(s)
}

func (s ScalingGroupConfigPrivatePoolOptions) GoString() string {
	return s.String()
}

func (s *ScalingGroupConfigPrivatePoolOptions) SetId(v string) *ScalingGroupConfigPrivatePoolOptions {
	s.Id = &v
	return s
}

func (s *ScalingGroupConfigPrivatePoolOptions) SetMatchCriteria(v string) *ScalingGroupConfigPrivatePoolOptions {
	s.MatchCriteria = &v
	return s
}

type ScalingRule struct {
	// 伸缩活动类型。取值范围：
	//
	// - SCALE_OUT：扩容。
	//
	// - SCALE_IN：缩容。
	//
	// This parameter is required.
	//
	// example:
	//
	// SCALE_IN
	ActivityType *string `json:"ActivityType,omitempty" xml:"ActivityType,omitempty"`
	// 调整值。需要为正数，代表需要扩容或者缩容的实例数量。
	//
	// This parameter is required.
	//
	// example:
	//
	// 100
	AdjustmentValue *int32 `json:"AdjustmentValue,omitempty" xml:"AdjustmentValue,omitempty"`
	// 按照负载伸缩描述。
	//
	// <p>
	MetricsTrigger *MetricsTrigger `json:"MetricsTrigger,omitempty" xml:"MetricsTrigger,omitempty"`
	// 规则名称。
	//
	// This parameter is required.
	//
	// example:
	//
	// scale-out-memory
	RuleName *string `json:"RuleName,omitempty" xml:"RuleName,omitempty"`
	// 按照时间伸缩描述。
	//
	// <p>
	TimeTrigger *TimeTrigger `json:"TimeTrigger,omitempty" xml:"TimeTrigger,omitempty"`
	// 伸缩规则类型。 取值范围：
	//
	// - TIME_TRIGGER: 按时间伸缩。
	//
	// - METRICS_TRIGGER: 按负载伸缩。
	//
	// This parameter is required.
	//
	// example:
	//
	// TIME_TRIGGER
	TriggerType *string `json:"TriggerType,omitempty" xml:"TriggerType,omitempty"`
}

func (s ScalingRule) String() string {
	return tea.Prettify(s)
}

func (s ScalingRule) GoString() string {
	return s.String()
}

func (s *ScalingRule) SetActivityType(v string) *ScalingRule {
	s.ActivityType = &v
	return s
}

func (s *ScalingRule) SetAdjustmentValue(v int32) *ScalingRule {
	s.AdjustmentValue = &v
	return s
}

func (s *ScalingRule) SetMetricsTrigger(v *MetricsTrigger) *ScalingRule {
	s.MetricsTrigger = v
	return s
}

func (s *ScalingRule) SetRuleName(v string) *ScalingRule {
	s.RuleName = &v
	return s
}

func (s *ScalingRule) SetTimeTrigger(v *TimeTrigger) *ScalingRule {
	s.TimeTrigger = v
	return s
}

func (s *ScalingRule) SetTriggerType(v string) *ScalingRule {
	s.TriggerType = &v
	return s
}

type ScalingRuleSpec struct {
	// 调整值。需要为正数，代表需要扩容或者缩容的实例数量。
	//
	// This parameter is required.
	//
	// example:
	//
	// 100
	AdjustmentValue *int32 `json:"AdjustmentValue,omitempty" xml:"AdjustmentValue,omitempty"`
	// 按照负载伸缩描述。
	ByLoadScalingRuleSpec *ScalingRuleSpecByLoadScalingRuleSpec `json:"ByLoadScalingRuleSpec,omitempty" xml:"ByLoadScalingRuleSpec,omitempty" type:"Struct"`
	// 按照时间伸缩描述。
	ByTimeScalingRuleSpec *ScalingRuleSpecByTimeScalingRuleSpec `json:"ByTimeScalingRuleSpec,omitempty" xml:"ByTimeScalingRuleSpec,omitempty" type:"Struct"`
	// 冷却时间。单位为秒，取值范围在30~10800秒之间。
	//
	// This parameter is required.
	//
	// example:
	//
	// 60
	CoolDownInterval *int32 `json:"CoolDownInterval,omitempty" xml:"CoolDownInterval,omitempty"`
	// 伸缩活动类型。
	//
	// This parameter is required.
	//
	// example:
	//
	// SCALE_IN
	ScalingActivityType *string `json:"ScalingActivityType,omitempty" xml:"ScalingActivityType,omitempty"`
	// 规则名称。
	//
	// This parameter is required.
	//
	// example:
	//
	// scale-out-memory
	ScalingRuleName *string `json:"ScalingRuleName,omitempty" xml:"ScalingRuleName,omitempty"`
	// 伸缩规则类型。
	//
	// This parameter is required.
	//
	// example:
	//
	// BY_TIME
	ScalingRuleType *string `json:"ScalingRuleType,omitempty" xml:"ScalingRuleType,omitempty"`
}

func (s ScalingRuleSpec) String() string {
	return tea.Prettify(s)
}

func (s ScalingRuleSpec) GoString() string {
	return s.String()
}

func (s *ScalingRuleSpec) SetAdjustmentValue(v int32) *ScalingRuleSpec {
	s.AdjustmentValue = &v
	return s
}

func (s *ScalingRuleSpec) SetByLoadScalingRuleSpec(v *ScalingRuleSpecByLoadScalingRuleSpec) *ScalingRuleSpec {
	s.ByLoadScalingRuleSpec = v
	return s
}

func (s *ScalingRuleSpec) SetByTimeScalingRuleSpec(v *ScalingRuleSpecByTimeScalingRuleSpec) *ScalingRuleSpec {
	s.ByTimeScalingRuleSpec = v
	return s
}

func (s *ScalingRuleSpec) SetCoolDownInterval(v int32) *ScalingRuleSpec {
	s.CoolDownInterval = &v
	return s
}

func (s *ScalingRuleSpec) SetScalingActivityType(v string) *ScalingRuleSpec {
	s.ScalingActivityType = &v
	return s
}

func (s *ScalingRuleSpec) SetScalingRuleName(v string) *ScalingRuleSpec {
	s.ScalingRuleName = &v
	return s
}

func (s *ScalingRuleSpec) SetScalingRuleType(v string) *ScalingRuleSpec {
	s.ScalingRuleType = &v
	return s
}

type ScalingRuleSpecByLoadScalingRuleSpec struct {
	// 比较符。
	//
	// This parameter is required.
	//
	// example:
	//
	// LT
	ComparisonOperator *string `json:"ComparisonOperator,omitempty" xml:"ComparisonOperator,omitempty"`
	// 统计次数。
	//
	// This parameter is required.
	//
	// example:
	//
	// 2
	EvaluationCount *int32 `json:"EvaluationCount,omitempty" xml:"EvaluationCount,omitempty"`
	// 指标名称。指标名称需要在 ListAutoScalingMetrics 接口返回的指标名称列表中。
	//
	// This parameter is required.
	//
	// example:
	//
	// yarn_resourcemanager_root_availablememoryusage
	MetricName *string `json:"MetricName,omitempty" xml:"MetricName,omitempty"`
	// 统计量名称。
	//
	// This parameter is required.
	//
	// example:
	//
	// AVG
	Statistics *string `json:"Statistics,omitempty" xml:"Statistics,omitempty"`
	// 阈值。
	//
	// This parameter is required.
	//
	// example:
	//
	// 12.5
	Threshold *float64 `json:"Threshold,omitempty" xml:"Threshold,omitempty"`
	// 统计窗口。单位为秒。
	//
	// This parameter is required.
	//
	// example:
	//
	// 30
	TimeWindow *int32 `json:"TimeWindow,omitempty" xml:"TimeWindow,omitempty"`
}

func (s ScalingRuleSpecByLoadScalingRuleSpec) String() string {
	return tea.Prettify(s)
}

func (s ScalingRuleSpecByLoadScalingRuleSpec) GoString() string {
	return s.String()
}

func (s *ScalingRuleSpecByLoadScalingRuleSpec) SetComparisonOperator(v string) *ScalingRuleSpecByLoadScalingRuleSpec {
	s.ComparisonOperator = &v
	return s
}

func (s *ScalingRuleSpecByLoadScalingRuleSpec) SetEvaluationCount(v int32) *ScalingRuleSpecByLoadScalingRuleSpec {
	s.EvaluationCount = &v
	return s
}

func (s *ScalingRuleSpecByLoadScalingRuleSpec) SetMetricName(v string) *ScalingRuleSpecByLoadScalingRuleSpec {
	s.MetricName = &v
	return s
}

func (s *ScalingRuleSpecByLoadScalingRuleSpec) SetStatistics(v string) *ScalingRuleSpecByLoadScalingRuleSpec {
	s.Statistics = &v
	return s
}

func (s *ScalingRuleSpecByLoadScalingRuleSpec) SetThreshold(v float64) *ScalingRuleSpecByLoadScalingRuleSpec {
	s.Threshold = &v
	return s
}

func (s *ScalingRuleSpecByLoadScalingRuleSpec) SetTimeWindow(v int32) *ScalingRuleSpecByLoadScalingRuleSpec {
	s.TimeWindow = &v
	return s
}

type ScalingRuleSpecByTimeScalingRuleSpec struct {
	// 重复执行定时任务的结束时间戳。单位为毫秒。
	//
	// example:
	//
	// 1639714800000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 启动时间戳。单位为毫秒。
	//
	// This parameter is required.
	//
	// example:
	//
	// 1639714634819
	LaunchTime *int64 `json:"LaunchTime,omitempty" xml:"LaunchTime,omitempty"`
	// 指定时间规则的执行类型。
	//
	// example:
	//
	// WEEKLY
	RecurrenceType *string `json:"RecurrenceType,omitempty" xml:"RecurrenceType,omitempty"`
	// 重复执行定时任务的数值。具体取值取决于 recurrenceType 设置。
	//
	// example:
	//
	// MON,FRI,SUN
	RecurrenceValue *string `json:"RecurrenceValue,omitempty" xml:"RecurrenceValue,omitempty"`
}

func (s ScalingRuleSpecByTimeScalingRuleSpec) String() string {
	return tea.Prettify(s)
}

func (s ScalingRuleSpecByTimeScalingRuleSpec) GoString() string {
	return s.String()
}

func (s *ScalingRuleSpecByTimeScalingRuleSpec) SetEndTime(v int64) *ScalingRuleSpecByTimeScalingRuleSpec {
	s.EndTime = &v
	return s
}

func (s *ScalingRuleSpecByTimeScalingRuleSpec) SetLaunchTime(v int64) *ScalingRuleSpecByTimeScalingRuleSpec {
	s.LaunchTime = &v
	return s
}

func (s *ScalingRuleSpecByTimeScalingRuleSpec) SetRecurrenceType(v string) *ScalingRuleSpecByTimeScalingRuleSpec {
	s.RecurrenceType = &v
	return s
}

func (s *ScalingRuleSpecByTimeScalingRuleSpec) SetRecurrenceValue(v string) *ScalingRuleSpecByTimeScalingRuleSpec {
	s.RecurrenceValue = &v
	return s
}

type ScalingRuleV1 struct {
	// 调整类型。
	//
	// example:
	//
	// QUANTITY_CHANGE_IN_CAPACITY
	AdjustmentType *string `json:"AdjustmentType,omitempty" xml:"AdjustmentType,omitempty"`
	// 调整值,正数为扩容,负数为缩容。
	//
	// example:
	//
	// 1
	AdjustmentValue *int32 `json:"AdjustmentValue,omitempty" xml:"AdjustmentValue,omitempty"`
	// 冷却时间,单位秒。
	//
	// example:
	//
	// 4
	CoolDownTime *int32 `json:"CoolDownTime,omitempty" xml:"CoolDownTime,omitempty"`
	// 规则名称。
	//
	// example:
	//
	// tule1
	RuleName *string `json:"RuleName,omitempty" xml:"RuleName,omitempty"`
	// 规则参数。
	RuleParam *ScalingRuleV1RuleParam `json:"RuleParam,omitempty" xml:"RuleParam,omitempty" type:"Struct"`
	// 规则类型。
	//
	// example:
	//
	// BY_LOAD
	RuleType *string `json:"RuleType,omitempty" xml:"RuleType,omitempty"`
	// 弹性规则配置ID。
	//
	// example:
	//
	// SCB-DCD96BCCFED1****
	ScalingConfigBizId *string `json:"ScalingConfigBizId,omitempty" xml:"ScalingConfigBizId,omitempty"`
}

func (s ScalingRuleV1) String() string {
	return tea.Prettify(s)
}

func (s ScalingRuleV1) GoString() string {
	return s.String()
}

func (s *ScalingRuleV1) SetAdjustmentType(v string) *ScalingRuleV1 {
	s.AdjustmentType = &v
	return s
}

func (s *ScalingRuleV1) SetAdjustmentValue(v int32) *ScalingRuleV1 {
	s.AdjustmentValue = &v
	return s
}

func (s *ScalingRuleV1) SetCoolDownTime(v int32) *ScalingRuleV1 {
	s.CoolDownTime = &v
	return s
}

func (s *ScalingRuleV1) SetRuleName(v string) *ScalingRuleV1 {
	s.RuleName = &v
	return s
}

func (s *ScalingRuleV1) SetRuleParam(v *ScalingRuleV1RuleParam) *ScalingRuleV1 {
	s.RuleParam = v
	return s
}

func (s *ScalingRuleV1) SetRuleType(v string) *ScalingRuleV1 {
	s.RuleType = &v
	return s
}

func (s *ScalingRuleV1) SetScalingConfigBizId(v string) *ScalingRuleV1 {
	s.ScalingConfigBizId = &v
	return s
}

type ScalingRuleV1RuleParam struct {
	// [负载触发参数] 比较符。
	//
	// example:
	//
	// >
	ComparisonOperator *string `json:"ComparisonOperator,omitempty" xml:"ComparisonOperator,omitempty"`
	// [负载触发参数] 统计次数。
	//
	// example:
	//
	// 1
	EvaluationCount *int32 `json:"EvaluationCount,omitempty" xml:"EvaluationCount,omitempty"`
	// [时间调度参数] 周期类型周期过期时间。
	//
	// example:
	//
	// 0
	LaunchExpirationTime *int32 `json:"LaunchExpirationTime,omitempty" xml:"LaunchExpirationTime,omitempty"`
	// [时间调度参数] 周期类型周期开始时间。
	//
	// example:
	//
	// 2021-09-15T04:02Z
	LaunchTime *string `json:"LaunchTime,omitempty" xml:"LaunchTime,omitempty"`
	// [负载触发参数] 度量名称。
	//
	// example:
	//
	// YarnRootAvailableVCores
	MetricName *string `json:"MetricName,omitempty" xml:"MetricName,omitempty"`
	// [负载触发参数] 统计时长,单位分钟。
	//
	// example:
	//
	// 5
	Period *int32 `json:"Period,omitempty" xml:"Period,omitempty"`
	// [时间调度参数] 周期类型周期结束时间。
	//
	// example:
	//
	// 2021-09-16T05:02Z
	RecurrenceEndTime *string `json:"RecurrenceEndTime,omitempty" xml:"RecurrenceEndTime,omitempty"`
	// [时间调度参数] 周期类型。
	//
	// example:
	//
	// Daily
	RecurrenceType *string `json:"RecurrenceType,omitempty" xml:"RecurrenceType,omitempty"`
	// [时间调度参数] 周期类型周期值。
	//
	// example:
	//
	// 1
	RecurrenceValue *string `json:"RecurrenceValue,omitempty" xml:"RecurrenceValue,omitempty"`
	// [负载触发参数] 统计方式。
	//
	// example:
	//
	// Average
	Statistics *string `json:"Statistics,omitempty" xml:"Statistics,omitempty"`
	// [负载触发参数] 阈值。
	//
	// example:
	//
	// 1
	Threshold *int32 `json:"Threshold,omitempty" xml:"Threshold,omitempty"`
}

func (s ScalingRuleV1RuleParam) String() string {
	return tea.Prettify(s)
}

func (s ScalingRuleV1RuleParam) GoString() string {
	return s.String()
}

func (s *ScalingRuleV1RuleParam) SetComparisonOperator(v string) *ScalingRuleV1RuleParam {
	s.ComparisonOperator = &v
	return s
}

func (s *ScalingRuleV1RuleParam) SetEvaluationCount(v int32) *ScalingRuleV1RuleParam {
	s.EvaluationCount = &v
	return s
}

func (s *ScalingRuleV1RuleParam) SetLaunchExpirationTime(v int32) *ScalingRuleV1RuleParam {
	s.LaunchExpirationTime = &v
	return s
}

func (s *ScalingRuleV1RuleParam) SetLaunchTime(v string) *ScalingRuleV1RuleParam {
	s.LaunchTime = &v
	return s
}

func (s *ScalingRuleV1RuleParam) SetMetricName(v string) *ScalingRuleV1RuleParam {
	s.MetricName = &v
	return s
}

func (s *ScalingRuleV1RuleParam) SetPeriod(v int32) *ScalingRuleV1RuleParam {
	s.Period = &v
	return s
}

func (s *ScalingRuleV1RuleParam) SetRecurrenceEndTime(v string) *ScalingRuleV1RuleParam {
	s.RecurrenceEndTime = &v
	return s
}

func (s *ScalingRuleV1RuleParam) SetRecurrenceType(v string) *ScalingRuleV1RuleParam {
	s.RecurrenceType = &v
	return s
}

func (s *ScalingRuleV1RuleParam) SetRecurrenceValue(v string) *ScalingRuleV1RuleParam {
	s.RecurrenceValue = &v
	return s
}

func (s *ScalingRuleV1RuleParam) SetStatistics(v string) *ScalingRuleV1RuleParam {
	s.Statistics = &v
	return s
}

func (s *ScalingRuleV1RuleParam) SetThreshold(v int32) *ScalingRuleV1RuleParam {
	s.Threshold = &v
	return s
}

type Script struct {
	// 执行失败策略。
	//
	// example:
	//
	// FAILED_CONTINUE
	ExecutionFailStrategy *string `json:"ExecutionFailStrategy,omitempty" xml:"ExecutionFailStrategy,omitempty"`
	// 脚本的执行时机。
	//
	// example:
	//
	// BEFORE_INSTALL
	ExecutionMoment *string `json:"ExecutionMoment,omitempty" xml:"ExecutionMoment,omitempty"`
	// 节点选择器。
	//
	// This parameter is required.
	NodeSelector *NodeSelector `json:"NodeSelector,omitempty" xml:"NodeSelector,omitempty"`
	// Deprecated
	//
	// 脚本执行优先级。取值范围：1~100。
	//
	// example:
	//
	// 1
	Priority *int32 `json:"Priority,omitempty" xml:"Priority,omitempty"`
	// 脚本执行参数。
	//
	// example:
	//
	// -host 10.0.10.5 -m 30
	ScriptArgs *string `json:"ScriptArgs,omitempty" xml:"ScriptArgs,omitempty"`
	// 脚本名称。长度为1~64个字符，必须以大小字母或中文开头，不能以http://和https://开头。可以包含中文、英文、数字、下划线（_）、或者短划线（-）
	//
	// This parameter is required.
	//
	// example:
	//
	// 脚本名-1
	ScriptName *string `json:"ScriptName,omitempty" xml:"ScriptName,omitempty"`
	// 脚本所在OSS路径。
	//
	// This parameter is required.
	//
	// example:
	//
	// oss://bucket1/update_hosts.sh
	ScriptPath *string `json:"ScriptPath,omitempty" xml:"ScriptPath,omitempty"`
}

func (s Script) String() string {
	return tea.Prettify(s)
}

func (s Script) GoString() string {
	return s.String()
}

func (s *Script) SetExecutionFailStrategy(v string) *Script {
	s.ExecutionFailStrategy = &v
	return s
}

func (s *Script) SetExecutionMoment(v string) *Script {
	s.ExecutionMoment = &v
	return s
}

func (s *Script) SetNodeSelector(v *NodeSelector) *Script {
	s.NodeSelector = v
	return s
}

func (s *Script) SetPriority(v int32) *Script {
	s.Priority = &v
	return s
}

func (s *Script) SetScriptArgs(v string) *Script {
	s.ScriptArgs = &v
	return s
}

func (s *Script) SetScriptName(v string) *Script {
	s.ScriptName = &v
	return s
}

func (s *Script) SetScriptPath(v string) *Script {
	s.ScriptPath = &v
	return s
}

type SpotBidPrice struct {
	// 实例的每小时最高出价。支持最大3位小数，参数SpotStrategy=SpotWithPriceLimit时，该参数生效。
	//
	// example:
	//
	// 1000.0
	BidPrice *float64 `json:"BidPrice,omitempty" xml:"BidPrice,omitempty"`
	// 实例类型。
	//
	// example:
	//
	// ecs.g7.2xlarge
	InstanceType *string `json:"InstanceType,omitempty" xml:"InstanceType,omitempty"`
}

func (s SpotBidPrice) String() string {
	return tea.Prettify(s)
}

func (s SpotBidPrice) GoString() string {
	return s.String()
}

func (s *SpotBidPrice) SetBidPrice(v float64) *SpotBidPrice {
	s.BidPrice = &v
	return s
}

func (s *SpotBidPrice) SetInstanceType(v string) *SpotBidPrice {
	s.InstanceType = &v
	return s
}

type SpotPriceLimit struct {
	InstanceType *string  `json:"InstanceType,omitempty" xml:"InstanceType,omitempty"`
	PriceLimit   *float64 `json:"PriceLimit,omitempty" xml:"PriceLimit,omitempty"`
}

func (s SpotPriceLimit) String() string {
	return tea.Prettify(s)
}

func (s SpotPriceLimit) GoString() string {
	return s.String()
}

func (s *SpotPriceLimit) SetInstanceType(v string) *SpotPriceLimit {
	s.InstanceType = &v
	return s
}

func (s *SpotPriceLimit) SetPriceLimit(v float64) *SpotPriceLimit {
	s.PriceLimit = &v
	return s
}

type StateChangeReason struct {
	// 状态码。
	//
	// example:
	//
	// MissingParameter
	Code *string `json:"Code,omitempty" xml:"Code,omitempty"`
	// 描述信息。
	//
	// example:
	//
	// The instance type is required.
	Message *string `json:"Message,omitempty" xml:"Message,omitempty"`
}

func (s StateChangeReason) String() string {
	return tea.Prettify(s)
}

func (s StateChangeReason) GoString() string {
	return s.String()
}

func (s *StateChangeReason) SetCode(v string) *StateChangeReason {
	s.Code = &v
	return s
}

func (s *StateChangeReason) SetMessage(v string) *StateChangeReason {
	s.Message = &v
	return s
}

type SubscriptionConfig struct {
	// 自动续费。取值范围：
	//
	// - true：开启启动续费。
	//
	// - false：不开启自动续费。
	//
	// 默认值：false。
	//
	// example:
	//
	// true
	AutoRenew *bool `json:"AutoRenew,omitempty" xml:"AutoRenew,omitempty"`
	// 自动续费时长。当AutoRenew取值为true时生效。当AutoRenewDurationUnit取值为Month时，取值：1、2、3、4、5、6、7、8、9、12、24、36、48、60。
	//
	// example:
	//
	// 12
	AutoRenewDuration *int32 `json:"AutoRenewDuration,omitempty" xml:"AutoRenewDuration,omitempty"`
	// - Month：月。
	//
	// example:
	//
	// Month
	AutoRenewDurationUnit *string `json:"AutoRenewDurationUnit,omitempty" xml:"AutoRenewDurationUnit,omitempty"`
	// 付费时长。PaymentDurationUnit取值为Month时，取值：1、2、3、4、5、6、7、8、9、12、24、36、48、60。
	//
	// This parameter is required.
	//
	// example:
	//
	// 12
	PaymentDuration *int32 `json:"PaymentDuration,omitempty" xml:"PaymentDuration,omitempty"`
	// 付费时长单位。取值范围：
	//
	// - Month：月。
	//
	// This parameter is required.
	//
	// example:
	//
	// Month
	PaymentDurationUnit *string `json:"PaymentDurationUnit,omitempty" xml:"PaymentDurationUnit,omitempty"`
}

func (s SubscriptionConfig) String() string {
	return tea.Prettify(s)
}

func (s SubscriptionConfig) GoString() string {
	return s.String()
}

func (s *SubscriptionConfig) SetAutoRenew(v bool) *SubscriptionConfig {
	s.AutoRenew = &v
	return s
}

func (s *SubscriptionConfig) SetAutoRenewDuration(v int32) *SubscriptionConfig {
	s.AutoRenewDuration = &v
	return s
}

func (s *SubscriptionConfig) SetAutoRenewDurationUnit(v string) *SubscriptionConfig {
	s.AutoRenewDurationUnit = &v
	return s
}

func (s *SubscriptionConfig) SetPaymentDuration(v int32) *SubscriptionConfig {
	s.PaymentDuration = &v
	return s
}

func (s *SubscriptionConfig) SetPaymentDurationUnit(v string) *SubscriptionConfig {
	s.PaymentDurationUnit = &v
	return s
}

type SystemDisk struct {
	// 磁盘类型。
	//
	// This parameter is required.
	//
	// example:
	//
	// cloud_essd
	Category *string `json:"Category,omitempty" xml:"Category,omitempty"`
	// 每个节点系统盘数量，默认值为1。
	//
	// example:
	//
	// 1
	Count *int32 `json:"Count,omitempty" xml:"Count,omitempty"`
	// 创建ESSD云盘作为系统盘使用时，设置云盘的性能等级。取值范围：
	//
	// - PL0：单盘最高随机读写IOPS 1万。
	//
	// - PL1（默认）：单盘最高随机读写IOPS 5万。
	//
	// - PL2：单盘最高随机读写IOPS 10万。
	//
	// - PL3：单盘最高随机读写IOPS 100万。
	//
	// 默认值：PL1。
	//
	// example:
	//
	// PL1
	PerformanceLevel *string `json:"PerformanceLevel,omitempty" xml:"PerformanceLevel,omitempty"`
	// 单位GB。
	//
	// This parameter is required.
	//
	// example:
	//
	// 60
	Size *int32 `json:"Size,omitempty" xml:"Size,omitempty"`
}

func (s SystemDisk) String() string {
	return tea.Prettify(s)
}

func (s SystemDisk) GoString() string {
	return s.String()
}

func (s *SystemDisk) SetCategory(v string) *SystemDisk {
	s.Category = &v
	return s
}

func (s *SystemDisk) SetCount(v int32) *SystemDisk {
	s.Count = &v
	return s
}

func (s *SystemDisk) SetPerformanceLevel(v string) *SystemDisk {
	s.PerformanceLevel = &v
	return s
}

func (s *SystemDisk) SetSize(v int32) *SystemDisk {
	s.Size = &v
	return s
}

type SystemDiskParam struct {
	Category         *string `json:"Category,omitempty" xml:"Category,omitempty"`
	PerformanceLevel *string `json:"PerformanceLevel,omitempty" xml:"PerformanceLevel,omitempty"`
	Size             *int32  `json:"Size,omitempty" xml:"Size,omitempty"`
}

func (s SystemDiskParam) String() string {
	return tea.Prettify(s)
}

func (s SystemDiskParam) GoString() string {
	return s.String()
}

func (s *SystemDiskParam) SetCategory(v string) *SystemDiskParam {
	s.Category = &v
	return s
}

func (s *SystemDiskParam) SetPerformanceLevel(v string) *SystemDiskParam {
	s.PerformanceLevel = &v
	return s
}

func (s *SystemDiskParam) SetSize(v int32) *SystemDiskParam {
	s.Size = &v
	return s
}

type Tag struct {
	// 标签键。必填参数，不允许为空字符串。最多支持128个字符，不能以aliyun和acs:开头，不能包含http://或https://。
	//
	// This parameter is required.
	//
	// example:
	//
	// department
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// 标签值。非必填，可以为空字符串。最多支持128个字符，不能以acs:开头，不能包含http://或者https://。
	//
	// example:
	//
	// IT
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s Tag) String() string {
	return tea.Prettify(s)
}

func (s Tag) GoString() string {
	return s.String()
}

func (s *Tag) SetKey(v string) *Tag {
	s.Key = &v
	return s
}

func (s *Tag) SetValue(v string) *Tag {
	s.Value = &v
	return s
}

type TagResource struct {
	ResourceId   *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	TagKey       *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	TagValue     *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s TagResource) String() string {
	return tea.Prettify(s)
}

func (s TagResource) GoString() string {
	return s.String()
}

func (s *TagResource) SetResourceId(v string) *TagResource {
	s.ResourceId = &v
	return s
}

func (s *TagResource) SetResourceType(v string) *TagResource {
	s.ResourceType = &v
	return s
}

func (s *TagResource) SetTagKey(v string) *TagResource {
	s.TagKey = &v
	return s
}

func (s *TagResource) SetTagValue(v string) *TagResource {
	s.TagValue = &v
	return s
}

type TimeConstraint struct {
	// 结束时间。取值范围：00:00:00至23:59:59
	//
	// example:
	//
	// 23:59:59
	EndTime *string `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 开始时间。取值范围：00:00:00至23:59:59
	//
	// example:
	//
	// 06:00:00
	StartTime *string `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s TimeConstraint) String() string {
	return tea.Prettify(s)
}

func (s TimeConstraint) GoString() string {
	return s.String()
}

func (s *TimeConstraint) SetEndTime(v string) *TimeConstraint {
	s.EndTime = &v
	return s
}

func (s *TimeConstraint) SetStartTime(v string) *TimeConstraint {
	s.StartTime = &v
	return s
}

type TimeRange struct {
	// 结束时间。
	//
	// example:
	//
	// 1676441972000
	EndTime *string `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 起始时间。
	//
	// example:
	//
	// 1676441971000
	StartTime *string `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s TimeRange) String() string {
	return tea.Prettify(s)
}

func (s TimeRange) GoString() string {
	return s.String()
}

func (s *TimeRange) SetEndTime(v string) *TimeRange {
	s.EndTime = &v
	return s
}

func (s *TimeRange) SetStartTime(v string) *TimeRange {
	s.StartTime = &v
	return s
}

type TimeTrigger struct {
	// 结束时间戳。单位为毫秒。
	//
	// example:
	//
	// 1639714800000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 定时任务触发操作失败后，在此时间内重试。单位为秒，取值范围：0~3600。
	//
	// example:
	//
	// 600
	LaunchExpirationTime *int32 `json:"LaunchExpirationTime,omitempty" xml:"LaunchExpirationTime,omitempty"`
	// 启动时间。
	//
	// This parameter is required.
	LaunchTime *string `json:"LaunchTime,omitempty" xml:"LaunchTime,omitempty"`
	// 指定时间规则的执行类型。
	//
	// example:
	//
	// WEEKLY
	RecurrenceType *string `json:"RecurrenceType,omitempty" xml:"RecurrenceType,omitempty"`
	// 重复执行定时任务的数值。具体取值取决于 recurrenceType 设置。
	//
	// - recurrenceType 取 MINUTELY 时，只能填一个数值，取值范围：1~1440。
	//
	// - recurrenceType 取 HOURLY 时，只能填一个数值，取值范围：1~24。
	//
	// - recurrenceType 取 DAILY 时，只能填一个数值，取值范围：1~31。
	//
	// - recurrenceType 取 WEEKLY 时，可以填入多个值，填多个值时使用英文逗号（,）分隔。周一到周天分别用MON，TUE，WED，THU，FRI，SAT，SUN代替。 比如 MON,FRI,SUN 代表周一、周五、周天。
	//
	// - recurrenceType 取 MONTHLY 时，格式为A-B或者A,B。A、B的取值范围为1~31，如果使用A-B时B必须大于A。
	//
	// example:
	//
	// MON,FRI,SUN
	RecurrenceValue *string `json:"RecurrenceValue,omitempty" xml:"RecurrenceValue,omitempty"`
	// 开始时间戳。单位为毫秒。
	//
	// example:
	//
	// 1639714800000
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s TimeTrigger) String() string {
	return tea.Prettify(s)
}

func (s TimeTrigger) GoString() string {
	return s.String()
}

func (s *TimeTrigger) SetEndTime(v int64) *TimeTrigger {
	s.EndTime = &v
	return s
}

func (s *TimeTrigger) SetLaunchExpirationTime(v int32) *TimeTrigger {
	s.LaunchExpirationTime = &v
	return s
}

func (s *TimeTrigger) SetLaunchTime(v string) *TimeTrigger {
	s.LaunchTime = &v
	return s
}

func (s *TimeTrigger) SetRecurrenceType(v string) *TimeTrigger {
	s.RecurrenceType = &v
	return s
}

func (s *TimeTrigger) SetRecurrenceValue(v string) *TimeTrigger {
	s.RecurrenceValue = &v
	return s
}

func (s *TimeTrigger) SetStartTime(v int64) *TimeTrigger {
	s.StartTime = &v
	return s
}

type Toleration struct {
	Effect   *string `json:"Effect,omitempty" xml:"Effect,omitempty"`
	Key      *string `json:"Key,omitempty" xml:"Key,omitempty"`
	Operator *string `json:"Operator,omitempty" xml:"Operator,omitempty"`
	Value    *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s Toleration) String() string {
	return tea.Prettify(s)
}

func (s Toleration) GoString() string {
	return s.String()
}

func (s *Toleration) SetEffect(v string) *Toleration {
	s.Effect = &v
	return s
}

func (s *Toleration) SetKey(v string) *Toleration {
	s.Key = &v
	return s
}

func (s *Toleration) SetOperator(v string) *Toleration {
	s.Operator = &v
	return s
}

func (s *Toleration) SetValue(v string) *Toleration {
	s.Value = &v
	return s
}

type TriggerCondition struct {
	// 比较符。取值范围：
	//
	// - EQ:等于。
	//
	// - NE:不等于。
	//
	// - GT:大于。
	//
	// - LT:小于。
	//
	// - GE:大于等于。
	//
	// - LE:小于等于。
	//
	// This parameter is required.
	//
	// example:
	//
	// LT
	ComparisonOperator *string `json:"ComparisonOperator,omitempty" xml:"ComparisonOperator,omitempty"`
	// 指标名称。指标名称需要在 ListAutoScalingMetrics 接口返回的指标名称列表中。
	//
	// This parameter is required.
	//
	// example:
	//
	// yarn_resourcemanager_root_availablememoryusage
	MetricName *string `json:"MetricName,omitempty" xml:"MetricName,omitempty"`
	// 统计量名称。取值范围：
	//
	// - MAX：最大值。
	//
	// - MIN：最小值。
	//
	// - AVG：平均值。
	//
	// This parameter is required.
	//
	// example:
	//
	// AVG
	Statistics *string `json:"Statistics,omitempty" xml:"Statistics,omitempty"`
	// 指标Tag。
	Tags []*Tag `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
	// 阈值。
	//
	// This parameter is required.
	//
	// example:
	//
	// 12.5
	Threshold *float64 `json:"Threshold,omitempty" xml:"Threshold,omitempty"`
}

func (s TriggerCondition) String() string {
	return tea.Prettify(s)
}

func (s TriggerCondition) GoString() string {
	return s.String()
}

func (s *TriggerCondition) SetComparisonOperator(v string) *TriggerCondition {
	s.ComparisonOperator = &v
	return s
}

func (s *TriggerCondition) SetMetricName(v string) *TriggerCondition {
	s.MetricName = &v
	return s
}

func (s *TriggerCondition) SetStatistics(v string) *TriggerCondition {
	s.Statistics = &v
	return s
}

func (s *TriggerCondition) SetTags(v []*Tag) *TriggerCondition {
	s.Tags = v
	return s
}

func (s *TriggerCondition) SetThreshold(v float64) *TriggerCondition {
	s.Threshold = &v
	return s
}

type UpdateApplicationConfig struct {
	// 修改描述。
	//
	// example:
	//
	// dfs.namenode.checkpoint.period
	ConfigDescription *string `json:"ConfigDescription,omitempty" xml:"ConfigDescription,omitempty"`
	// 应用配置文件名。
	//
	// example:
	//
	// hdfs-site.xml
	ConfigFileName *string `json:"ConfigFileName,omitempty" xml:"ConfigFileName,omitempty"`
	// 配置项键。
	//
	// example:
	//
	// dfs.namenode.checkpoint.period
	ConfigItemKey *string `json:"ConfigItemKey,omitempty" xml:"ConfigItemKey,omitempty"`
	// 配置项值。
	//
	// example:
	//
	// 3600s
	ConfigItemValue *string `json:"ConfigItemValue,omitempty" xml:"ConfigItemValue,omitempty"`
}

func (s UpdateApplicationConfig) String() string {
	return tea.Prettify(s)
}

func (s UpdateApplicationConfig) GoString() string {
	return s.String()
}

func (s *UpdateApplicationConfig) SetConfigDescription(v string) *UpdateApplicationConfig {
	s.ConfigDescription = &v
	return s
}

func (s *UpdateApplicationConfig) SetConfigFileName(v string) *UpdateApplicationConfig {
	s.ConfigFileName = &v
	return s
}

func (s *UpdateApplicationConfig) SetConfigItemKey(v string) *UpdateApplicationConfig {
	s.ConfigItemKey = &v
	return s
}

func (s *UpdateApplicationConfig) SetConfigItemValue(v string) *UpdateApplicationConfig {
	s.ConfigItemValue = &v
	return s
}

type UpdateSpecNodeGroup struct {
	// 新实例类型。
	//
	// This parameter is required.
	//
	// example:
	//
	// ecs.g7.xlarge
	NewInstanceType *string `json:"NewInstanceType,omitempty" xml:"NewInstanceType,omitempty"`
	// 节点组ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
}

func (s UpdateSpecNodeGroup) String() string {
	return tea.Prettify(s)
}

func (s UpdateSpecNodeGroup) GoString() string {
	return s.String()
}

func (s *UpdateSpecNodeGroup) SetNewInstanceType(v string) *UpdateSpecNodeGroup {
	s.NewInstanceType = &v
	return s
}

func (s *UpdateSpecNodeGroup) SetNodeGroupId(v string) *UpdateSpecNodeGroup {
	s.NodeGroupId = &v
	return s
}

type UpdateSpecNodeGroupParam struct {
	NewInstanceType *string `json:"NewInstanceType,omitempty" xml:"NewInstanceType,omitempty"`
	NodeGroupId     *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
}

func (s UpdateSpecNodeGroupParam) String() string {
	return tea.Prettify(s)
}

func (s UpdateSpecNodeGroupParam) GoString() string {
	return s.String()
}

func (s *UpdateSpecNodeGroupParam) SetNewInstanceType(v string) *UpdateSpecNodeGroupParam {
	s.NewInstanceType = &v
	return s
}

func (s *UpdateSpecNodeGroupParam) SetNodeGroupId(v string) *UpdateSpecNodeGroupParam {
	s.NodeGroupId = &v
	return s
}

type User struct {
	// 用户组。
	//
	// example:
	//
	// hadoop
	Group *string `json:"Group,omitempty" xml:"Group,omitempty"`
	// 用户密码。
	//
	// This parameter is required.
	//
	// example:
	//
	// 12345****
	Password *string `json:"Password,omitempty" xml:"Password,omitempty"`
	// 用户ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// 1238539****
	UserId *string `json:"UserId,omitempty" xml:"UserId,omitempty"`
	// 用户名称。
	//
	// This parameter is required.
	//
	// example:
	//
	// 王五
	UserName *string `json:"UserName,omitempty" xml:"UserName,omitempty"`
	// 用户类型。
	//
	// example:
	//
	// LDAP
	UserType *string `json:"UserType,omitempty" xml:"UserType,omitempty"`
}

func (s User) String() string {
	return tea.Prettify(s)
}

func (s User) GoString() string {
	return s.String()
}

func (s *User) SetGroup(v string) *User {
	s.Group = &v
	return s
}

func (s *User) SetPassword(v string) *User {
	s.Password = &v
	return s
}

func (s *User) SetUserId(v string) *User {
	s.UserId = &v
	return s
}

func (s *User) SetUserName(v string) *User {
	s.UserName = &v
	return s
}

func (s *User) SetUserType(v string) *User {
	s.UserType = &v
	return s
}

type UserParam struct {
	Password *string `json:"Password,omitempty" xml:"Password,omitempty"`
	UserId   *string `json:"UserId,omitempty" xml:"UserId,omitempty"`
	UserName *string `json:"UserName,omitempty" xml:"UserName,omitempty"`
}

func (s UserParam) String() string {
	return tea.Prettify(s)
}

func (s UserParam) GoString() string {
	return s.String()
}

func (s *UserParam) SetPassword(v string) *UserParam {
	s.Password = &v
	return s
}

func (s *UserParam) SetUserId(v string) *UserParam {
	s.UserId = &v
	return s
}

func (s *UserParam) SetUserName(v string) *UserParam {
	s.UserName = &v
	return s
}

type ValueConstraints struct {
	// 默认值。
	DefaultValue *int32 `json:"DefaultValue,omitempty" xml:"DefaultValue,omitempty"`
	// 结束值。
	End *int32 `json:"End,omitempty" xml:"End,omitempty"`
	// 起始值。
	Start *int32 `json:"Start,omitempty" xml:"Start,omitempty"`
	// 步长。
	Step *int32 `json:"Step,omitempty" xml:"Step,omitempty"`
	// 值限制类型。
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
	// 枚举值。
	//
	// example:
	//
	// null
	Values []*int32 `json:"Values,omitempty" xml:"Values,omitempty" type:"Repeated"`
}

func (s ValueConstraints) String() string {
	return tea.Prettify(s)
}

func (s ValueConstraints) GoString() string {
	return s.String()
}

func (s *ValueConstraints) SetDefaultValue(v int32) *ValueConstraints {
	s.DefaultValue = &v
	return s
}

func (s *ValueConstraints) SetEnd(v int32) *ValueConstraints {
	s.End = &v
	return s
}

func (s *ValueConstraints) SetStart(v int32) *ValueConstraints {
	s.Start = &v
	return s
}

func (s *ValueConstraints) SetStep(v int32) *ValueConstraints {
	s.Step = &v
	return s
}

func (s *ValueConstraints) SetType(v string) *ValueConstraints {
	s.Type = &v
	return s
}

func (s *ValueConstraints) SetValues(v []*int32) *ValueConstraints {
	s.Values = v
	return s
}

type CreateApiTemplateRequest struct {
	// 接口名。
	//
	// This parameter is required.
	//
	// example:
	//
	// CreateCluster
	ApiName *string `json:"ApiName,omitempty" xml:"ApiName,omitempty"`
	// 接口request内容。
	//
	// This parameter is required.
	//
	// example:
	//
	// content
	Content *string `json:"Content,omitempty" xml:"Content,omitempty"`
	// 地域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// 资源组ID。
	//
	// example:
	//
	// rg-acfmzabjyop****
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	// 集群模板名字。
	//
	// This parameter is required.
	//
	// example:
	//
	// DATALAKE模板
	TemplateName *string `json:"TemplateName,omitempty" xml:"TemplateName,omitempty"`
}

func (s CreateApiTemplateRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateApiTemplateRequest) GoString() string {
	return s.String()
}

func (s *CreateApiTemplateRequest) SetApiName(v string) *CreateApiTemplateRequest {
	s.ApiName = &v
	return s
}

func (s *CreateApiTemplateRequest) SetContent(v string) *CreateApiTemplateRequest {
	s.Content = &v
	return s
}

func (s *CreateApiTemplateRequest) SetRegionId(v string) *CreateApiTemplateRequest {
	s.RegionId = &v
	return s
}

func (s *CreateApiTemplateRequest) SetResourceGroupId(v string) *CreateApiTemplateRequest {
	s.ResourceGroupId = &v
	return s
}

func (s *CreateApiTemplateRequest) SetTemplateName(v string) *CreateApiTemplateRequest {
	s.TemplateName = &v
	return s
}

type CreateApiTemplateResponseBody struct {
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// example:
	//
	// at-41b4c6a0fc63****
	Success *string `json:"Success,omitempty" xml:"Success,omitempty"`
	// example:
	//
	// at-41b4c6a0fc63****
	TemplateId *string `json:"TemplateId,omitempty" xml:"TemplateId,omitempty"`
}

func (s CreateApiTemplateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateApiTemplateResponseBody) GoString() string {
	return s.String()
}

func (s *CreateApiTemplateResponseBody) SetRequestId(v string) *CreateApiTemplateResponseBody {
	s.RequestId = &v
	return s
}

func (s *CreateApiTemplateResponseBody) SetSuccess(v string) *CreateApiTemplateResponseBody {
	s.Success = &v
	return s
}

func (s *CreateApiTemplateResponseBody) SetTemplateId(v string) *CreateApiTemplateResponseBody {
	s.TemplateId = &v
	return s
}

type CreateApiTemplateResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateApiTemplateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateApiTemplateResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateApiTemplateResponse) GoString() string {
	return s.String()
}

func (s *CreateApiTemplateResponse) SetHeaders(v map[string]*string) *CreateApiTemplateResponse {
	s.Headers = v
	return s
}

func (s *CreateApiTemplateResponse) SetStatusCode(v int32) *CreateApiTemplateResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateApiTemplateResponse) SetBody(v *CreateApiTemplateResponseBody) *CreateApiTemplateResponse {
	s.Body = v
	return s
}

type CreateClusterRequest struct {
	// The application configurations. You can specify a maximum of 1,000 items.
	ApplicationConfigs []*ApplicationConfig `json:"ApplicationConfigs,omitempty" xml:"ApplicationConfigs,omitempty" type:"Repeated"`
	// The applications. You can specify a maximum of 100 items.
	//
	// This parameter is required.
	Applications []*Application `json:"Applications,omitempty" xml:"Applications,omitempty" type:"Repeated"`
	// The bootstrap actions. You can specify a maximum of 10 items.
	BootstrapScripts []*Script `json:"BootstrapScripts,omitempty" xml:"BootstrapScripts,omitempty" type:"Repeated"`
	// The idempotent client token. If you call the same ClientToken multiple times, the returned results are the same. Only one cluster can be created with the same ClientToken.
	//
	// example:
	//
	// A7D960FA-6DBA-5E07-8746-A63E3E4D****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// The name of the cluster. The name must be 1 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
	//
	// This parameter is required.
	//
	// example:
	//
	// emrtest
	ClusterName *string `json:"ClusterName,omitempty" xml:"ClusterName,omitempty"`
	// The type of the cluster. Valid values:
	//
	// 	- DATALAKE: data lake
	//
	// 	- OLAP: online analytical processing (OLAP)
	//
	// 	- DATAFLOW: Dataflow
	//
	// 	- DATASERVING: DataServing
	//
	// 	- CUSTOM: a custom hybrid cluster.
	//
	// 	- HADOOP: the old data lake. We recommend that you use the new data lake.
	//
	// If you create an EMR cluster for the first time after 17:00 (UTC +8) on December 19, 2022, you cannot select the HADOOP, DATA_SCIENCE, PRESTO, or ZOOKEEPER cluster type.
	//
	// This parameter is required.
	//
	// example:
	//
	// DATALAKE
	ClusterType *string `json:"ClusterType,omitempty" xml:"ClusterType,omitempty"`
	// The deployment mode of master nodes in the cluster. Valid values:
	//
	// 	- NORMAL: regular mode. This is the default value. A cluster that contains only one master node is created.
	//
	// 	- HA: high availability (HA) mode. A cluster that contains three master nodes is created.
	//
	// example:
	//
	// HA
	DeployMode *string `json:"DeployMode,omitempty" xml:"DeployMode,omitempty"`
	// The attributes of all ECS instances.
	//
	// This parameter is required.
	NodeAttributes *NodeAttributes `json:"NodeAttributes,omitempty" xml:"NodeAttributes,omitempty"`
	// The node groups. You can specify a maximum of 100 items.
	//
	// This parameter is required.
	//
	// example:
	//
	// NORMAL
	NodeGroups []*NodeGroupConfig `json:"NodeGroups,omitempty" xml:"NodeGroups,omitempty" type:"Repeated"`
	// The billing cycle of the instance. Valid values:
	//
	// 	- PayAsYouGo: pay-as-you-go
	//
	// 	- Subscription: subscription
	//
	// Default value: PayAsYouGo.
	//
	// example:
	//
	// PayAsYouGo
	PaymentType *string `json:"PaymentType,omitempty" xml:"PaymentType,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The version of EMR. You can view the EMR release version on the EMR cluster purchase page.
	//
	// This parameter is required.
	//
	// example:
	//
	// EMR-5.8.0
	ReleaseVersion *string `json:"ReleaseVersion,omitempty" xml:"ReleaseVersion,omitempty"`
	// The ID of the resource group to which to assign the ENI.
	//
	// example:
	//
	// rg-acfmzabjyop****
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	// The security mode of the cluster. Valid values:
	//
	// 	- NORMAL: disables Kerberos authentication for the cluster. This is the default value.
	//
	// 	- KERBEROS: enables Kerberos authentication for the cluster.
	//
	// example:
	//
	// NORMAL
	SecurityMode *string `json:"SecurityMode,omitempty" xml:"SecurityMode,omitempty"`
	// The subscription configurations. This parameter is required only if you set the PaymentType parameter to Subscription.
	SubscriptionConfig *SubscriptionConfig `json:"SubscriptionConfig,omitempty" xml:"SubscriptionConfig,omitempty"`
	// The tags. You can specify a maximum of 20 items.
	//
	// example:
	//
	// A7D960FA-6DBA-5E07-8746-A63E3E4D****
	Tags []*Tag `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s CreateClusterRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateClusterRequest) GoString() string {
	return s.String()
}

func (s *CreateClusterRequest) SetApplicationConfigs(v []*ApplicationConfig) *CreateClusterRequest {
	s.ApplicationConfigs = v
	return s
}

func (s *CreateClusterRequest) SetApplications(v []*Application) *CreateClusterRequest {
	s.Applications = v
	return s
}

func (s *CreateClusterRequest) SetBootstrapScripts(v []*Script) *CreateClusterRequest {
	s.BootstrapScripts = v
	return s
}

func (s *CreateClusterRequest) SetClientToken(v string) *CreateClusterRequest {
	s.ClientToken = &v
	return s
}

func (s *CreateClusterRequest) SetClusterName(v string) *CreateClusterRequest {
	s.ClusterName = &v
	return s
}

func (s *CreateClusterRequest) SetClusterType(v string) *CreateClusterRequest {
	s.ClusterType = &v
	return s
}

func (s *CreateClusterRequest) SetDeployMode(v string) *CreateClusterRequest {
	s.DeployMode = &v
	return s
}

func (s *CreateClusterRequest) SetNodeAttributes(v *NodeAttributes) *CreateClusterRequest {
	s.NodeAttributes = v
	return s
}

func (s *CreateClusterRequest) SetNodeGroups(v []*NodeGroupConfig) *CreateClusterRequest {
	s.NodeGroups = v
	return s
}

func (s *CreateClusterRequest) SetPaymentType(v string) *CreateClusterRequest {
	s.PaymentType = &v
	return s
}

func (s *CreateClusterRequest) SetRegionId(v string) *CreateClusterRequest {
	s.RegionId = &v
	return s
}

func (s *CreateClusterRequest) SetReleaseVersion(v string) *CreateClusterRequest {
	s.ReleaseVersion = &v
	return s
}

func (s *CreateClusterRequest) SetResourceGroupId(v string) *CreateClusterRequest {
	s.ResourceGroupId = &v
	return s
}

func (s *CreateClusterRequest) SetSecurityMode(v string) *CreateClusterRequest {
	s.SecurityMode = &v
	return s
}

func (s *CreateClusterRequest) SetSubscriptionConfig(v *SubscriptionConfig) *CreateClusterRequest {
	s.SubscriptionConfig = v
	return s
}

func (s *CreateClusterRequest) SetTags(v []*Tag) *CreateClusterRequest {
	s.Tags = v
	return s
}

type CreateClusterResponseBody struct {
	// The ID of cluster.
	//
	// example:
	//
	// c-b933c5aac7f7***
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The ID of the operation.
	//
	// example:
	//
	// op-13c37a77c505****
	OperationId *string `json:"OperationId,omitempty" xml:"OperationId,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateClusterResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateClusterResponseBody) GoString() string {
	return s.String()
}

func (s *CreateClusterResponseBody) SetClusterId(v string) *CreateClusterResponseBody {
	s.ClusterId = &v
	return s
}

func (s *CreateClusterResponseBody) SetOperationId(v string) *CreateClusterResponseBody {
	s.OperationId = &v
	return s
}

func (s *CreateClusterResponseBody) SetRequestId(v string) *CreateClusterResponseBody {
	s.RequestId = &v
	return s
}

type CreateClusterResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateClusterResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateClusterResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateClusterResponse) GoString() string {
	return s.String()
}

func (s *CreateClusterResponse) SetHeaders(v map[string]*string) *CreateClusterResponse {
	s.Headers = v
	return s
}

func (s *CreateClusterResponse) SetStatusCode(v int32) *CreateClusterResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateClusterResponse) SetBody(v *CreateClusterResponseBody) *CreateClusterResponse {
	s.Body = v
	return s
}

type CreateNodeGroupRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// C-E525E04F3914****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The information about a machine group.
	//
	// This parameter is required.
	NodeGroup *NodeGroupConfig `json:"NodeGroup,omitempty" xml:"NodeGroup,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s CreateNodeGroupRequest) String() string {
	return tea.Prettify(s)
}

func (s CreateNodeGroupRequest) GoString() string {
	return s.String()
}

func (s *CreateNodeGroupRequest) SetClusterId(v string) *CreateNodeGroupRequest {
	s.ClusterId = &v
	return s
}

func (s *CreateNodeGroupRequest) SetNodeGroup(v *NodeGroupConfig) *CreateNodeGroupRequest {
	s.NodeGroup = v
	return s
}

func (s *CreateNodeGroupRequest) SetRegionId(v string) *CreateNodeGroupRequest {
	s.RegionId = &v
	return s
}

type CreateNodeGroupResponseBody struct {
	// The ID of the machine group.
	//
	// example:
	//
	// G-21E39B11837E****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 9E3A7161-EB7B-172B-8D18-FFB06BA3****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s CreateNodeGroupResponseBody) String() string {
	return tea.Prettify(s)
}

func (s CreateNodeGroupResponseBody) GoString() string {
	return s.String()
}

func (s *CreateNodeGroupResponseBody) SetNodeGroupId(v string) *CreateNodeGroupResponseBody {
	s.NodeGroupId = &v
	return s
}

func (s *CreateNodeGroupResponseBody) SetRequestId(v string) *CreateNodeGroupResponseBody {
	s.RequestId = &v
	return s
}

type CreateNodeGroupResponse struct {
	Headers    map[string]*string           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *CreateNodeGroupResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s CreateNodeGroupResponse) String() string {
	return tea.Prettify(s)
}

func (s CreateNodeGroupResponse) GoString() string {
	return s.String()
}

func (s *CreateNodeGroupResponse) SetHeaders(v map[string]*string) *CreateNodeGroupResponse {
	s.Headers = v
	return s
}

func (s *CreateNodeGroupResponse) SetStatusCode(v int32) *CreateNodeGroupResponse {
	s.StatusCode = &v
	return s
}

func (s *CreateNodeGroupResponse) SetBody(v *CreateNodeGroupResponseBody) *CreateNodeGroupResponse {
	s.Body = v
	return s
}

type DecreaseNodesRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The number of nodes to scale in. The number of nodes to be scaled in. The value should be less than the number of surviving nodes in the current node group.
	//
	// example:
	//
	// 3
	DecreaseNodeCount *int32 `json:"DecreaseNodeCount,omitempty" xml:"DecreaseNodeCount,omitempty"`
	// The ID of the node group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The array of node IDs. Valid values of array element N: 1 to 500.
	//
	// example:
	//
	// ["i-bp1cudc25w2bfwl5****"]
	NodeIds []*string `json:"NodeIds,omitempty" xml:"NodeIds,omitempty" type:"Repeated"`
	// The ID of the region in which you want to create the instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s DecreaseNodesRequest) String() string {
	return tea.Prettify(s)
}

func (s DecreaseNodesRequest) GoString() string {
	return s.String()
}

func (s *DecreaseNodesRequest) SetClusterId(v string) *DecreaseNodesRequest {
	s.ClusterId = &v
	return s
}

func (s *DecreaseNodesRequest) SetDecreaseNodeCount(v int32) *DecreaseNodesRequest {
	s.DecreaseNodeCount = &v
	return s
}

func (s *DecreaseNodesRequest) SetNodeGroupId(v string) *DecreaseNodesRequest {
	s.NodeGroupId = &v
	return s
}

func (s *DecreaseNodesRequest) SetNodeIds(v []*string) *DecreaseNodesRequest {
	s.NodeIds = v
	return s
}

func (s *DecreaseNodesRequest) SetRegionId(v string) *DecreaseNodesRequest {
	s.RegionId = &v
	return s
}

type DecreaseNodesResponseBody struct {
	// Operation ID.
	//
	// example:
	//
	// op-13c37a77c505****
	OperationId *string `json:"OperationId,omitempty" xml:"OperationId,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// 44430037-E59A-3E66-A2B0-97D155346F22
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DecreaseNodesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DecreaseNodesResponseBody) GoString() string {
	return s.String()
}

func (s *DecreaseNodesResponseBody) SetOperationId(v string) *DecreaseNodesResponseBody {
	s.OperationId = &v
	return s
}

func (s *DecreaseNodesResponseBody) SetRequestId(v string) *DecreaseNodesResponseBody {
	s.RequestId = &v
	return s
}

type DecreaseNodesResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DecreaseNodesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DecreaseNodesResponse) String() string {
	return tea.Prettify(s)
}

func (s DecreaseNodesResponse) GoString() string {
	return s.String()
}

func (s *DecreaseNodesResponse) SetHeaders(v map[string]*string) *DecreaseNodesResponse {
	s.Headers = v
	return s
}

func (s *DecreaseNodesResponse) SetStatusCode(v int32) *DecreaseNodesResponse {
	s.StatusCode = &v
	return s
}

func (s *DecreaseNodesResponse) SetBody(v *DecreaseNodesResponseBody) *DecreaseNodesResponse {
	s.Body = v
	return s
}

type DeleteApiTemplateRequest struct {
	// 接口名。
	//
	// This parameter is required.
	//
	// example:
	//
	// CreateCluster
	ApiName *string `json:"ApiName,omitempty" xml:"ApiName,omitempty"`
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// 资源组ID。
	//
	// example:
	//
	// rg-acfmzabjyop****
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	// 集群模板id。
	//
	// This parameter is required.
	//
	// example:
	//
	// at-****
	TemplateId *string `json:"TemplateId,omitempty" xml:"TemplateId,omitempty"`
}

func (s DeleteApiTemplateRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteApiTemplateRequest) GoString() string {
	return s.String()
}

func (s *DeleteApiTemplateRequest) SetApiName(v string) *DeleteApiTemplateRequest {
	s.ApiName = &v
	return s
}

func (s *DeleteApiTemplateRequest) SetRegionId(v string) *DeleteApiTemplateRequest {
	s.RegionId = &v
	return s
}

func (s *DeleteApiTemplateRequest) SetResourceGroupId(v string) *DeleteApiTemplateRequest {
	s.ResourceGroupId = &v
	return s
}

func (s *DeleteApiTemplateRequest) SetTemplateId(v string) *DeleteApiTemplateRequest {
	s.TemplateId = &v
	return s
}

type DeleteApiTemplateResponseBody struct {
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Deprecated
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeleteApiTemplateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteApiTemplateResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteApiTemplateResponseBody) SetRequestId(v string) *DeleteApiTemplateResponseBody {
	s.RequestId = &v
	return s
}

func (s *DeleteApiTemplateResponseBody) SetSuccess(v bool) *DeleteApiTemplateResponseBody {
	s.Success = &v
	return s
}

type DeleteApiTemplateResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteApiTemplateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteApiTemplateResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteApiTemplateResponse) GoString() string {
	return s.String()
}

func (s *DeleteApiTemplateResponse) SetHeaders(v map[string]*string) *DeleteApiTemplateResponse {
	s.Headers = v
	return s
}

func (s *DeleteApiTemplateResponse) SetStatusCode(v int32) *DeleteApiTemplateResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteApiTemplateResponse) SetBody(v *DeleteApiTemplateResponseBody) *DeleteApiTemplateResponse {
	s.Body = v
	return s
}

type DeleteClusterRequest struct {
	// The ID of the cluster.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The ID of the region in which you want to create the instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s DeleteClusterRequest) String() string {
	return tea.Prettify(s)
}

func (s DeleteClusterRequest) GoString() string {
	return s.String()
}

func (s *DeleteClusterRequest) SetClusterId(v string) *DeleteClusterRequest {
	s.ClusterId = &v
	return s
}

func (s *DeleteClusterRequest) SetRegionId(v string) *DeleteClusterRequest {
	s.RegionId = &v
	return s
}

type DeleteClusterResponseBody struct {
	// The ID of the operation.
	//
	// example:
	//
	// op-13c37a77c505****
	OperationId *string `json:"OperationId,omitempty" xml:"OperationId,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s DeleteClusterResponseBody) String() string {
	return tea.Prettify(s)
}

func (s DeleteClusterResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteClusterResponseBody) SetOperationId(v string) *DeleteClusterResponseBody {
	s.OperationId = &v
	return s
}

func (s *DeleteClusterResponseBody) SetRequestId(v string) *DeleteClusterResponseBody {
	s.RequestId = &v
	return s
}

type DeleteClusterResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *DeleteClusterResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s DeleteClusterResponse) String() string {
	return tea.Prettify(s)
}

func (s DeleteClusterResponse) GoString() string {
	return s.String()
}

func (s *DeleteClusterResponse) SetHeaders(v map[string]*string) *DeleteClusterResponse {
	s.Headers = v
	return s
}

func (s *DeleteClusterResponse) SetStatusCode(v int32) *DeleteClusterResponse {
	s.StatusCode = &v
	return s
}

func (s *DeleteClusterResponse) SetBody(v *DeleteClusterResponseBody) *DeleteClusterResponse {
	s.Body = v
	return s
}

type GetApiTemplateRequest struct {
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// 集群模板id。
	//
	// This parameter is required.
	//
	// example:
	//
	// at-41b4c6a0fc63****
	TemplateId *string `json:"TemplateId,omitempty" xml:"TemplateId,omitempty"`
}

func (s GetApiTemplateRequest) String() string {
	return tea.Prettify(s)
}

func (s GetApiTemplateRequest) GoString() string {
	return s.String()
}

func (s *GetApiTemplateRequest) SetRegionId(v string) *GetApiTemplateRequest {
	s.RegionId = &v
	return s
}

func (s *GetApiTemplateRequest) SetTemplateId(v string) *GetApiTemplateRequest {
	s.TemplateId = &v
	return s
}

type GetApiTemplateResponseBody struct {
	// Deprecated
	Data *ApiTemplate `json:"Data,omitempty" xml:"Data,omitempty"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetApiTemplateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetApiTemplateResponseBody) GoString() string {
	return s.String()
}

func (s *GetApiTemplateResponseBody) SetData(v *ApiTemplate) *GetApiTemplateResponseBody {
	s.Data = v
	return s
}

func (s *GetApiTemplateResponseBody) SetRequestId(v string) *GetApiTemplateResponseBody {
	s.RequestId = &v
	return s
}

type GetApiTemplateResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetApiTemplateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetApiTemplateResponse) String() string {
	return tea.Prettify(s)
}

func (s GetApiTemplateResponse) GoString() string {
	return s.String()
}

func (s *GetApiTemplateResponse) SetHeaders(v map[string]*string) *GetApiTemplateResponse {
	s.Headers = v
	return s
}

func (s *GetApiTemplateResponse) SetStatusCode(v int32) *GetApiTemplateResponse {
	s.StatusCode = &v
	return s
}

func (s *GetApiTemplateResponse) SetBody(v *GetApiTemplateResponseBody) *GetApiTemplateResponse {
	s.Body = v
	return s
}

type GetApplicationRequest struct {
	// 应用名称。
	//
	// This parameter is required.
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// 集群ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// 地域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetApplicationRequest) String() string {
	return tea.Prettify(s)
}

func (s GetApplicationRequest) GoString() string {
	return s.String()
}

func (s *GetApplicationRequest) SetApplicationName(v string) *GetApplicationRequest {
	s.ApplicationName = &v
	return s
}

func (s *GetApplicationRequest) SetClusterId(v string) *GetApplicationRequest {
	s.ClusterId = &v
	return s
}

func (s *GetApplicationRequest) SetRegionId(v string) *GetApplicationRequest {
	s.RegionId = &v
	return s
}

type GetApplicationResponseBody struct {
	Application *GetApplicationResponseBodyApplication `json:"Application,omitempty" xml:"Application,omitempty" type:"Struct"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetApplicationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetApplicationResponseBody) GoString() string {
	return s.String()
}

func (s *GetApplicationResponseBody) SetApplication(v *GetApplicationResponseBodyApplication) *GetApplicationResponseBody {
	s.Application = v
	return s
}

func (s *GetApplicationResponseBody) SetRequestId(v string) *GetApplicationResponseBody {
	s.RequestId = &v
	return s
}

type GetApplicationResponseBodyApplication struct {
	// 操作列表。
	Actions []*GetApplicationResponseBodyApplicationActions `json:"Actions,omitempty" xml:"Actions,omitempty" type:"Repeated"`
	// 应用名称。
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// 应用操作状态。
	ApplicationState *string `json:"ApplicationState,omitempty" xml:"ApplicationState,omitempty"`
	// 应用版本。
	//
	// example:
	//
	// 2.8.5
	ApplicationVersion *string `json:"ApplicationVersion,omitempty" xml:"ApplicationVersion,omitempty"`
	// 社区版本。
	//
	// example:
	//
	// 2.8.5
	CommunityVersion *string `json:"CommunityVersion,omitempty" xml:"CommunityVersion,omitempty"`
}

func (s GetApplicationResponseBodyApplication) String() string {
	return tea.Prettify(s)
}

func (s GetApplicationResponseBodyApplication) GoString() string {
	return s.String()
}

func (s *GetApplicationResponseBodyApplication) SetActions(v []*GetApplicationResponseBodyApplicationActions) *GetApplicationResponseBodyApplication {
	s.Actions = v
	return s
}

func (s *GetApplicationResponseBodyApplication) SetApplicationName(v string) *GetApplicationResponseBodyApplication {
	s.ApplicationName = &v
	return s
}

func (s *GetApplicationResponseBodyApplication) SetApplicationState(v string) *GetApplicationResponseBodyApplication {
	s.ApplicationState = &v
	return s
}

func (s *GetApplicationResponseBodyApplication) SetApplicationVersion(v string) *GetApplicationResponseBodyApplication {
	s.ApplicationVersion = &v
	return s
}

func (s *GetApplicationResponseBodyApplication) SetCommunityVersion(v string) *GetApplicationResponseBodyApplication {
	s.CommunityVersion = &v
	return s
}

type GetApplicationResponseBodyApplicationActions struct {
	// 操作名称。
	//
	// example:
	//
	// START
	ActionName *string `json:"ActionName,omitempty" xml:"ActionName,omitempty"`
	// 操作参数。
	ActionParams []*GetApplicationResponseBodyApplicationActionsActionParams `json:"ActionParams,omitempty" xml:"ActionParams,omitempty" type:"Repeated"`
	// 命令。
	//
	// example:
	//
	// START
	Command *string `json:"Command,omitempty" xml:"Command,omitempty"`
	// 组件名称。
	//
	// example:
	//
	// DataNode
	ComponentName *string `json:"ComponentName,omitempty" xml:"ComponentName,omitempty"`
	// 操作描述。
	//
	// example:
	//
	// 描述
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// 执行范围。
	//
	// example:
	//
	// CLUSTER
	RunActionScope *string `json:"RunActionScope,omitempty" xml:"RunActionScope,omitempty"`
}

func (s GetApplicationResponseBodyApplicationActions) String() string {
	return tea.Prettify(s)
}

func (s GetApplicationResponseBodyApplicationActions) GoString() string {
	return s.String()
}

func (s *GetApplicationResponseBodyApplicationActions) SetActionName(v string) *GetApplicationResponseBodyApplicationActions {
	s.ActionName = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActions) SetActionParams(v []*GetApplicationResponseBodyApplicationActionsActionParams) *GetApplicationResponseBodyApplicationActions {
	s.ActionParams = v
	return s
}

func (s *GetApplicationResponseBodyApplicationActions) SetCommand(v string) *GetApplicationResponseBodyApplicationActions {
	s.Command = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActions) SetComponentName(v string) *GetApplicationResponseBodyApplicationActions {
	s.ComponentName = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActions) SetDescription(v string) *GetApplicationResponseBodyApplicationActions {
	s.Description = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActions) SetRunActionScope(v string) *GetApplicationResponseBodyApplicationActions {
	s.RunActionScope = &v
	return s
}

type GetApplicationResponseBodyApplicationActionsActionParams struct {
	// 动作参数描述。
	//
	// example:
	//
	// start
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// 动作参数KEY。
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// 动作参数属性。
	ValueAttribute *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute `json:"ValueAttribute,omitempty" xml:"ValueAttribute,omitempty" type:"Struct"`
}

func (s GetApplicationResponseBodyApplicationActionsActionParams) String() string {
	return tea.Prettify(s)
}

func (s GetApplicationResponseBodyApplicationActionsActionParams) GoString() string {
	return s.String()
}

func (s *GetApplicationResponseBodyApplicationActionsActionParams) SetDescription(v string) *GetApplicationResponseBodyApplicationActionsActionParams {
	s.Description = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActionsActionParams) SetKey(v string) *GetApplicationResponseBodyApplicationActionsActionParams {
	s.Key = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActionsActionParams) SetValueAttribute(v *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute) *GetApplicationResponseBodyApplicationActionsActionParams {
	s.ValueAttribute = v
	return s
}

type GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute struct {
	// 值表述。
	//
	// example:
	//
	// 描述
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// 值步长。
	//
	// example:
	//
	// 2
	ValueIncrementStep *string `json:"ValueIncrementStep,omitempty" xml:"ValueIncrementStep,omitempty"`
	// 最大值。
	//
	// example:
	//
	// 20
	ValueMaximum *string `json:"ValueMaximum,omitempty" xml:"ValueMaximum,omitempty"`
	// 最小值。
	//
	// example:
	//
	// 1
	ValueMinimum *string `json:"ValueMinimum,omitempty" xml:"ValueMinimum,omitempty"`
	// 属性值类型。
	//
	// example:
	//
	// STRING
	ValueType *string `json:"ValueType,omitempty" xml:"ValueType,omitempty"`
	// 值单位。
	//
	// example:
	//
	// number
	ValueUnit *string `json:"ValueUnit,omitempty" xml:"ValueUnit,omitempty"`
}

func (s GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute) String() string {
	return tea.Prettify(s)
}

func (s GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute) GoString() string {
	return s.String()
}

func (s *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute) SetDescription(v string) *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute {
	s.Description = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute) SetValueIncrementStep(v string) *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute {
	s.ValueIncrementStep = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute) SetValueMaximum(v string) *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute {
	s.ValueMaximum = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute) SetValueMinimum(v string) *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute {
	s.ValueMinimum = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute) SetValueType(v string) *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute {
	s.ValueType = &v
	return s
}

func (s *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute) SetValueUnit(v string) *GetApplicationResponseBodyApplicationActionsActionParamsValueAttribute {
	s.ValueUnit = &v
	return s
}

type GetApplicationResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetApplicationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetApplicationResponse) String() string {
	return tea.Prettify(s)
}

func (s GetApplicationResponse) GoString() string {
	return s.String()
}

func (s *GetApplicationResponse) SetHeaders(v map[string]*string) *GetApplicationResponse {
	s.Headers = v
	return s
}

func (s *GetApplicationResponse) SetStatusCode(v int32) *GetApplicationResponse {
	s.StatusCode = &v
	return s
}

func (s *GetApplicationResponse) SetBody(v *GetApplicationResponseBody) *GetApplicationResponse {
	s.Body = v
	return s
}

type GetAutoScalingActivityRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The ID of the scaling activity.
	//
	// This parameter is required.
	//
	// example:
	//
	// asa-36373b084d6b4b13aa50f4129a9e****
	ScalingActivityId *string `json:"ScalingActivityId,omitempty" xml:"ScalingActivityId,omitempty"`
}

func (s GetAutoScalingActivityRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAutoScalingActivityRequest) GoString() string {
	return s.String()
}

func (s *GetAutoScalingActivityRequest) SetClusterId(v string) *GetAutoScalingActivityRequest {
	s.ClusterId = &v
	return s
}

func (s *GetAutoScalingActivityRequest) SetRegionId(v string) *GetAutoScalingActivityRequest {
	s.RegionId = &v
	return s
}

func (s *GetAutoScalingActivityRequest) SetScalingActivityId(v string) *GetAutoScalingActivityRequest {
	s.ScalingActivityId = &v
	return s
}

type GetAutoScalingActivityResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The information about the scaling activity.
	ScalingActivity *GetAutoScalingActivityResponseBodyScalingActivity `json:"ScalingActivity,omitempty" xml:"ScalingActivity,omitempty" type:"Struct"`
}

func (s GetAutoScalingActivityResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAutoScalingActivityResponseBody) GoString() string {
	return s.String()
}

func (s *GetAutoScalingActivityResponseBody) SetRequestId(v string) *GetAutoScalingActivityResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetAutoScalingActivityResponseBody) SetScalingActivity(v *GetAutoScalingActivityResponseBodyScalingActivity) *GetAutoScalingActivityResponseBody {
	s.ScalingActivity = v
	return s
}

type GetAutoScalingActivityResponseBodyScalingActivity struct {
	// The ID of the scaling activity.
	//
	// example:
	//
	// asa-36373b084d6b4b13aa50f4129a9e****
	ActivityId *string `json:"ActivityId,omitempty" xml:"ActivityId,omitempty"`
	// The instances that correspond to the scaling activity.
	ActivityResults []*ScalingActivityResult `json:"ActivityResults,omitempty" xml:"ActivityResults,omitempty" type:"Repeated"`
	// The status of the scaling activity. Valid values:
	//
	// 	- REJECTED
	//
	// 	- SUCCESSFUL
	//
	// 	- FAILED
	//
	// 	- IN_PROGRESS
	//
	// example:
	//
	// IN_PROGRESS
	ActivityState *string `json:"ActivityState,omitempty" xml:"ActivityState,omitempty"`
	// The type of the scaling activity. Valid value:
	//
	// 	- SCALE_OUT
	//
	// 	- SCALE_IN
	//
	// example:
	//
	// SCALE_OUT
	ActivityType *string `json:"ActivityType,omitempty" xml:"ActivityType,omitempty"`
	// The cluster ID.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The description of the scaling activity.
	//
	// example:
	//
	// clusterId not exist
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The time when scaling ended.
	//
	// example:
	//
	// 1639715634819
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The number of added or removed instances.
	//
	// example:
	//
	// 10
	ExpectNum *int32 `json:"ExpectNum,omitempty" xml:"ExpectNum,omitempty"`
	// The ID of the node group.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The name of the node group.
	//
	// example:
	//
	// task-01
	NodeGroupName *string `json:"NodeGroupName,omitempty" xml:"NodeGroupName,omitempty"`
	// The operation ID.
	//
	// example:
	//
	// op-13c37a77c505****
	OperationId *string `json:"OperationId,omitempty" xml:"OperationId,omitempty"`
	// The description of the scaling rule.
	RuleDetail *ScalingRule `json:"RuleDetail,omitempty" xml:"RuleDetail,omitempty"`
	// The name of the scaling rule.
	//
	// example:
	//
	// scaling-out-memory
	RuleName *string `json:"RuleName,omitempty" xml:"RuleName,omitempty"`
	// The time when scaling started.
	//
	// example:
	//
	// 1639714634819
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s GetAutoScalingActivityResponseBodyScalingActivity) String() string {
	return tea.Prettify(s)
}

func (s GetAutoScalingActivityResponseBodyScalingActivity) GoString() string {
	return s.String()
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetActivityId(v string) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.ActivityId = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetActivityResults(v []*ScalingActivityResult) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.ActivityResults = v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetActivityState(v string) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.ActivityState = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetActivityType(v string) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.ActivityType = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetClusterId(v string) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.ClusterId = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetDescription(v string) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.Description = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetEndTime(v int64) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.EndTime = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetExpectNum(v int32) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.ExpectNum = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetNodeGroupId(v string) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.NodeGroupId = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetNodeGroupName(v string) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.NodeGroupName = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetOperationId(v string) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.OperationId = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetRuleDetail(v *ScalingRule) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.RuleDetail = v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetRuleName(v string) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.RuleName = &v
	return s
}

func (s *GetAutoScalingActivityResponseBodyScalingActivity) SetStartTime(v int64) *GetAutoScalingActivityResponseBodyScalingActivity {
	s.StartTime = &v
	return s
}

type GetAutoScalingActivityResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAutoScalingActivityResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAutoScalingActivityResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAutoScalingActivityResponse) GoString() string {
	return s.String()
}

func (s *GetAutoScalingActivityResponse) SetHeaders(v map[string]*string) *GetAutoScalingActivityResponse {
	s.Headers = v
	return s
}

func (s *GetAutoScalingActivityResponse) SetStatusCode(v int32) *GetAutoScalingActivityResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAutoScalingActivityResponse) SetBody(v *GetAutoScalingActivityResponseBody) *GetAutoScalingActivityResponse {
	s.Body = v
	return s
}

type GetAutoScalingPolicyRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The ID of the node group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetAutoScalingPolicyRequest) String() string {
	return tea.Prettify(s)
}

func (s GetAutoScalingPolicyRequest) GoString() string {
	return s.String()
}

func (s *GetAutoScalingPolicyRequest) SetClusterId(v string) *GetAutoScalingPolicyRequest {
	s.ClusterId = &v
	return s
}

func (s *GetAutoScalingPolicyRequest) SetNodeGroupId(v string) *GetAutoScalingPolicyRequest {
	s.NodeGroupId = &v
	return s
}

func (s *GetAutoScalingPolicyRequest) SetRegionId(v string) *GetAutoScalingPolicyRequest {
	s.RegionId = &v
	return s
}

type GetAutoScalingPolicyResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The information about the auto scaling policy.
	ScalingPolicy *GetAutoScalingPolicyResponseBodyScalingPolicy `json:"ScalingPolicy,omitempty" xml:"ScalingPolicy,omitempty" type:"Struct"`
}

func (s GetAutoScalingPolicyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetAutoScalingPolicyResponseBody) GoString() string {
	return s.String()
}

func (s *GetAutoScalingPolicyResponseBody) SetRequestId(v string) *GetAutoScalingPolicyResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetAutoScalingPolicyResponseBody) SetScalingPolicy(v *GetAutoScalingPolicyResponseBodyScalingPolicy) *GetAutoScalingPolicyResponseBody {
	s.ScalingPolicy = v
	return s
}

type GetAutoScalingPolicyResponseBodyScalingPolicy struct {
	// The cluster ID.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The maximum and minimum numbers of node groups.
	Constraints *GetAutoScalingPolicyResponseBodyScalingPolicyConstraints `json:"Constraints,omitempty" xml:"Constraints,omitempty" type:"Struct"`
	// The ID of the node group.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The ID of the scaling policy.
	//
	// example:
	//
	// asp-asduwe23znl***
	ScalingPolicyId *string `json:"ScalingPolicyId,omitempty" xml:"ScalingPolicyId,omitempty"`
	// The scaling rules.
	ScalingRules []*GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules `json:"ScalingRules,omitempty" xml:"ScalingRules,omitempty" type:"Repeated"`
}

func (s GetAutoScalingPolicyResponseBodyScalingPolicy) String() string {
	return tea.Prettify(s)
}

func (s GetAutoScalingPolicyResponseBodyScalingPolicy) GoString() string {
	return s.String()
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicy) SetClusterId(v string) *GetAutoScalingPolicyResponseBodyScalingPolicy {
	s.ClusterId = &v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicy) SetConstraints(v *GetAutoScalingPolicyResponseBodyScalingPolicyConstraints) *GetAutoScalingPolicyResponseBodyScalingPolicy {
	s.Constraints = v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicy) SetNodeGroupId(v string) *GetAutoScalingPolicyResponseBodyScalingPolicy {
	s.NodeGroupId = &v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicy) SetScalingPolicyId(v string) *GetAutoScalingPolicyResponseBodyScalingPolicy {
	s.ScalingPolicyId = &v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicy) SetScalingRules(v []*GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) *GetAutoScalingPolicyResponseBodyScalingPolicy {
	s.ScalingRules = v
	return s
}

type GetAutoScalingPolicyResponseBodyScalingPolicyConstraints struct {
	// The maximum number of nodes in the node group. Default value: 2000.
	//
	// example:
	//
	// 2000
	MaxCapacity *int32 `json:"MaxCapacity,omitempty" xml:"MaxCapacity,omitempty"`
	// The minimum number of nodes in the node group. Default value: 0.
	//
	// example:
	//
	// 0
	MinCapacity *int32 `json:"MinCapacity,omitempty" xml:"MinCapacity,omitempty"`
}

func (s GetAutoScalingPolicyResponseBodyScalingPolicyConstraints) String() string {
	return tea.Prettify(s)
}

func (s GetAutoScalingPolicyResponseBodyScalingPolicyConstraints) GoString() string {
	return s.String()
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicyConstraints) SetMaxCapacity(v int32) *GetAutoScalingPolicyResponseBodyScalingPolicyConstraints {
	s.MaxCapacity = &v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicyConstraints) SetMinCapacity(v int32) *GetAutoScalingPolicyResponseBodyScalingPolicyConstraints {
	s.MinCapacity = &v
	return s
}

type GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules struct {
	// The type of the scaling activity. Valid values:
	//
	// 	- SCALE_OUT: scale-out rules
	//
	// 	- SCALE_IN: scale-in rules
	//
	// example:
	//
	// SCALE_OUT
	ActivityType *string `json:"ActivityType,omitempty" xml:"ActivityType,omitempty"`
	// The adjustment type.
	//
	// example:
	//
	// CHANGE_IN_CAPACITY
	AdjustmentType *string `json:"AdjustmentType,omitempty" xml:"AdjustmentType,omitempty"`
	// The adjustment value. The value must be a positive number, which indicates the number of instances to be scaled out or in.
	//
	// example:
	//
	// 100
	AdjustmentValue *int32 `json:"AdjustmentValue,omitempty" xml:"AdjustmentValue,omitempty"`
	// The description of scaling by load.
	MetricsTrigger     *MetricsTrigger `json:"MetricsTrigger,omitempty" xml:"MetricsTrigger,omitempty"`
	MinAdjustmentValue *int32          `json:"MinAdjustmentValue,omitempty" xml:"MinAdjustmentValue,omitempty"`
	// The name of the auto scaling rule.
	//
	// example:
	//
	// scaling-out-memory
	RuleName *string `json:"RuleName,omitempty" xml:"RuleName,omitempty"`
	// The description of scaling by time.
	TimeTrigger *TimeTrigger `json:"TimeTrigger,omitempty" xml:"TimeTrigger,omitempty"`
	// The type of the scaling rule. Valid values:
	//
	// 	- TIME_TRIGGER: scaling by time.
	//
	// 	- METRICS_TRIGGER: scaling by load.
	//
	// example:
	//
	// TIME_TRIGGER
	TriggerType *string `json:"TriggerType,omitempty" xml:"TriggerType,omitempty"`
}

func (s GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) String() string {
	return tea.Prettify(s)
}

func (s GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) GoString() string {
	return s.String()
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) SetActivityType(v string) *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules {
	s.ActivityType = &v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) SetAdjustmentType(v string) *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules {
	s.AdjustmentType = &v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) SetAdjustmentValue(v int32) *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules {
	s.AdjustmentValue = &v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) SetMetricsTrigger(v *MetricsTrigger) *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules {
	s.MetricsTrigger = v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) SetMinAdjustmentValue(v int32) *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules {
	s.MinAdjustmentValue = &v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) SetRuleName(v string) *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules {
	s.RuleName = &v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) SetTimeTrigger(v *TimeTrigger) *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules {
	s.TimeTrigger = v
	return s
}

func (s *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules) SetTriggerType(v string) *GetAutoScalingPolicyResponseBodyScalingPolicyScalingRules {
	s.TriggerType = &v
	return s
}

type GetAutoScalingPolicyResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetAutoScalingPolicyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetAutoScalingPolicyResponse) String() string {
	return tea.Prettify(s)
}

func (s GetAutoScalingPolicyResponse) GoString() string {
	return s.String()
}

func (s *GetAutoScalingPolicyResponse) SetHeaders(v map[string]*string) *GetAutoScalingPolicyResponse {
	s.Headers = v
	return s
}

func (s *GetAutoScalingPolicyResponse) SetStatusCode(v int32) *GetAutoScalingPolicyResponse {
	s.StatusCode = &v
	return s
}

func (s *GetAutoScalingPolicyResponse) SetBody(v *GetAutoScalingPolicyResponseBody) *GetAutoScalingPolicyResponse {
	s.Body = v
	return s
}

type GetClusterRequest struct {
	// The ID of the cluster.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The ID of the region in which you want to create the instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetClusterRequest) String() string {
	return tea.Prettify(s)
}

func (s GetClusterRequest) GoString() string {
	return s.String()
}

func (s *GetClusterRequest) SetClusterId(v string) *GetClusterRequest {
	s.ClusterId = &v
	return s
}

func (s *GetClusterRequest) SetRegionId(v string) *GetClusterRequest {
	s.RegionId = &v
	return s
}

type GetClusterResponseBody struct {
	// The details of the master instance.
	Cluster *Cluster `json:"Cluster,omitempty" xml:"Cluster,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetClusterResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetClusterResponseBody) GoString() string {
	return s.String()
}

func (s *GetClusterResponseBody) SetCluster(v *Cluster) *GetClusterResponseBody {
	s.Cluster = v
	return s
}

func (s *GetClusterResponseBody) SetRequestId(v string) *GetClusterResponseBody {
	s.RequestId = &v
	return s
}

type GetClusterResponse struct {
	Headers    map[string]*string      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetClusterResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetClusterResponse) String() string {
	return tea.Prettify(s)
}

func (s GetClusterResponse) GoString() string {
	return s.String()
}

func (s *GetClusterResponse) SetHeaders(v map[string]*string) *GetClusterResponse {
	s.Headers = v
	return s
}

func (s *GetClusterResponse) SetStatusCode(v int32) *GetClusterResponse {
	s.StatusCode = &v
	return s
}

func (s *GetClusterResponse) SetBody(v *GetClusterResponseBody) *GetClusterResponse {
	s.Body = v
	return s
}

type GetDoctorApplicationRequest struct {
	// The ID of the job that is submitted to YARN.
	//
	// This parameter is required.
	//
	// example:
	//
	// application_1542620905989_****
	AppId *string `json:"AppId,omitempty" xml:"AppId,omitempty"`
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetDoctorApplicationRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorApplicationRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorApplicationRequest) SetAppId(v string) *GetDoctorApplicationRequest {
	s.AppId = &v
	return s
}

func (s *GetDoctorApplicationRequest) SetClusterId(v string) *GetDoctorApplicationRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorApplicationRequest) SetDateTime(v string) *GetDoctorApplicationRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorApplicationRequest) SetRegionId(v string) *GetDoctorApplicationRequest {
	s.RegionId = &v
	return s
}

type GetDoctorApplicationResponseBody struct {
	// The details of the job.
	Data *GetDoctorApplicationResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorApplicationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorApplicationResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorApplicationResponseBody) SetData(v *GetDoctorApplicationResponseBodyData) *GetDoctorApplicationResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorApplicationResponseBody) SetRequestId(v string) *GetDoctorApplicationResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorApplicationResponseBodyData struct {
	// The job analysis result.
	Analysis *GetDoctorApplicationResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The name of the job.
	//
	// example:
	//
	// CREATE TABLE test...ranks=1 (Stage-1)
	AppName *string `json:"AppName,omitempty" xml:"AppName,omitempty"`
	// The end time of the job. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1666213200000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The job IDs. Multiple job IDs are separated with commas (,).
	//
	// example:
	//
	// null
	Ids []*string `json:"Ids,omitempty" xml:"Ids,omitempty" type:"Repeated"`
	// The metric information.
	Metrics *GetDoctorApplicationResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// The SQL statement of the job. This parameter is left empty for non-SQL jobs.
	//
	// example:
	//
	// SELECT id, count(1) FROM test group by id;
	QuerySql *string `json:"QuerySql,omitempty" xml:"QuerySql,omitempty"`
	// The YARN queue to which the job was submitted.
	//
	// example:
	//
	// DW
	Queue *string `json:"Queue,omitempty" xml:"Queue,omitempty"`
	// The time when the job was submitted. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1677465658275
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
	// The type of the compute engine.
	//
	// example:
	//
	// SPARK
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
	// The username that is used to submit the job.
	//
	// example:
	//
	// DW
	User *string `json:"User,omitempty" xml:"User,omitempty"`
}

func (s GetDoctorApplicationResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorApplicationResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorApplicationResponseBodyData) SetAnalysis(v *GetDoctorApplicationResponseBodyDataAnalysis) *GetDoctorApplicationResponseBodyData {
	s.Analysis = v
	return s
}

func (s *GetDoctorApplicationResponseBodyData) SetAppName(v string) *GetDoctorApplicationResponseBodyData {
	s.AppName = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyData) SetEndTime(v int64) *GetDoctorApplicationResponseBodyData {
	s.EndTime = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyData) SetIds(v []*string) *GetDoctorApplicationResponseBodyData {
	s.Ids = v
	return s
}

func (s *GetDoctorApplicationResponseBodyData) SetMetrics(v *GetDoctorApplicationResponseBodyDataMetrics) *GetDoctorApplicationResponseBodyData {
	s.Metrics = v
	return s
}

func (s *GetDoctorApplicationResponseBodyData) SetQuerySql(v string) *GetDoctorApplicationResponseBodyData {
	s.QuerySql = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyData) SetQueue(v string) *GetDoctorApplicationResponseBodyData {
	s.Queue = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyData) SetStartTime(v int64) *GetDoctorApplicationResponseBodyData {
	s.StartTime = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyData) SetType(v string) *GetDoctorApplicationResponseBodyData {
	s.Type = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyData) SetUser(v string) *GetDoctorApplicationResponseBodyData {
	s.User = &v
	return s
}

type GetDoctorApplicationResponseBodyDataAnalysis struct {
	// The score of the job.
	//
	// example:
	//
	// 67
	Score *int32 `json:"Score,omitempty" xml:"Score,omitempty"`
	// The suggestion for running the job.
	Suggestion *string `json:"Suggestion,omitempty" xml:"Suggestion,omitempty"`
}

func (s GetDoctorApplicationResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorApplicationResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *GetDoctorApplicationResponseBodyDataAnalysis) SetScore(v int32) *GetDoctorApplicationResponseBodyDataAnalysis {
	s.Score = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataAnalysis) SetSuggestion(v string) *GetDoctorApplicationResponseBodyDataAnalysis {
	s.Suggestion = &v
	return s
}

type GetDoctorApplicationResponseBodyDataMetrics struct {
	// The aggregated amount of memory that is allocated to the job multiplied by the number of seconds the job has been running.
	MemSeconds *GetDoctorApplicationResponseBodyDataMetricsMemSeconds `json:"MemSeconds,omitempty" xml:"MemSeconds,omitempty" type:"Struct"`
	// The memory usage.
	MemUtilization *GetDoctorApplicationResponseBodyDataMetricsMemUtilization `json:"MemUtilization,omitempty" xml:"MemUtilization,omitempty" type:"Struct"`
	// The aggregated number of vCPUs that are allocated to the job multiplied by the number of seconds the job has been running.
	VcoreSeconds *GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds `json:"VcoreSeconds,omitempty" xml:"VcoreSeconds,omitempty" type:"Struct"`
	// The CPU utilization. The meaning is the same as that of the %CPU command in the output of the Linux top command.
	VcoreUtilization *GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization `json:"VcoreUtilization,omitempty" xml:"VcoreUtilization,omitempty" type:"Struct"`
}

func (s GetDoctorApplicationResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorApplicationResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorApplicationResponseBodyDataMetrics) SetMemSeconds(v *GetDoctorApplicationResponseBodyDataMetricsMemSeconds) *GetDoctorApplicationResponseBodyDataMetrics {
	s.MemSeconds = v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetrics) SetMemUtilization(v *GetDoctorApplicationResponseBodyDataMetricsMemUtilization) *GetDoctorApplicationResponseBodyDataMetrics {
	s.MemUtilization = v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetrics) SetVcoreSeconds(v *GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds) *GetDoctorApplicationResponseBodyDataMetrics {
	s.VcoreSeconds = v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetrics) SetVcoreUtilization(v *GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization) *GetDoctorApplicationResponseBodyDataMetrics {
	s.VcoreUtilization = v
	return s
}

type GetDoctorApplicationResponseBodyDataMetricsMemSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total memory usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12312312
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorApplicationResponseBodyDataMetricsMemSeconds) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorApplicationResponseBodyDataMetricsMemSeconds) GoString() string {
	return s.String()
}

func (s *GetDoctorApplicationResponseBodyDataMetricsMemSeconds) SetDescription(v string) *GetDoctorApplicationResponseBodyDataMetricsMemSeconds {
	s.Description = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsMemSeconds) SetName(v string) *GetDoctorApplicationResponseBodyDataMetricsMemSeconds {
	s.Name = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsMemSeconds) SetUnit(v string) *GetDoctorApplicationResponseBodyDataMetricsMemSeconds {
	s.Unit = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsMemSeconds) SetValue(v int64) *GetDoctorApplicationResponseBodyDataMetricsMemSeconds {
	s.Value = &v
	return s
}

type GetDoctorApplicationResponseBodyDataMetricsMemUtilization struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of used memory to total available memory
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memUtilization
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.82
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorApplicationResponseBodyDataMetricsMemUtilization) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorApplicationResponseBodyDataMetricsMemUtilization) GoString() string {
	return s.String()
}

func (s *GetDoctorApplicationResponseBodyDataMetricsMemUtilization) SetDescription(v string) *GetDoctorApplicationResponseBodyDataMetricsMemUtilization {
	s.Description = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsMemUtilization) SetName(v string) *GetDoctorApplicationResponseBodyDataMetricsMemUtilization {
	s.Name = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsMemUtilization) SetUnit(v string) *GetDoctorApplicationResponseBodyDataMetricsMemUtilization {
	s.Unit = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsMemUtilization) SetValue(v float32) *GetDoctorApplicationResponseBodyDataMetricsMemUtilization {
	s.Value = &v
	return s
}

type GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total vcore usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// VCores 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 11123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds) GoString() string {
	return s.String()
}

func (s *GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds) SetDescription(v string) *GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds {
	s.Description = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds) SetName(v string) *GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds {
	s.Name = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds) SetUnit(v string) *GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds {
	s.Unit = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds) SetValue(v int64) *GetDoctorApplicationResponseBodyDataMetricsVcoreSeconds {
	s.Value = &v
	return s
}

type GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of used vcore to total available cores
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreUtilization
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 32.1
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization) GoString() string {
	return s.String()
}

func (s *GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization) SetDescription(v string) *GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization {
	s.Description = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization) SetName(v string) *GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization {
	s.Name = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization) SetUnit(v string) *GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization {
	s.Unit = &v
	return s
}

func (s *GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization) SetValue(v float32) *GetDoctorApplicationResponseBodyDataMetricsVcoreUtilization {
	s.Value = &v
	return s
}

type GetDoctorApplicationResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorApplicationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorApplicationResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorApplicationResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorApplicationResponse) SetHeaders(v map[string]*string) *GetDoctorApplicationResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorApplicationResponse) SetStatusCode(v int32) *GetDoctorApplicationResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorApplicationResponse) SetBody(v *GetDoctorApplicationResponseBody) *GetDoctorApplicationResponse {
	s.Body = v
	return s
}

type GetDoctorComputeSummaryRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The resource information, which is used to filter the results.
	ComponentInfo *GetDoctorComputeSummaryRequestComponentInfo `json:"ComponentInfo,omitempty" xml:"ComponentInfo,omitempty" type:"Struct"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetDoctorComputeSummaryRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryRequest) SetClusterId(v string) *GetDoctorComputeSummaryRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorComputeSummaryRequest) SetComponentInfo(v *GetDoctorComputeSummaryRequestComponentInfo) *GetDoctorComputeSummaryRequest {
	s.ComponentInfo = v
	return s
}

func (s *GetDoctorComputeSummaryRequest) SetDateTime(v string) *GetDoctorComputeSummaryRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorComputeSummaryRequest) SetRegionId(v string) *GetDoctorComputeSummaryRequest {
	s.RegionId = &v
	return s
}

type GetDoctorComputeSummaryRequestComponentInfo struct {
	// Set the filter condition name based on the value of ComponentType. For example, if you set ComponentType to queue, you can specify a specific queue name to obtain the resource usage of a specific queue.
	//
	// example:
	//
	// MAPREDUCE
	ComponentName *string `json:"ComponentName,omitempty" xml:"ComponentName,omitempty"`
	// The resource type for filtering. Valid values:
	//
	// 	- engine: filters results by engine.
	//
	// 	- queue: filters results by queue.
	//
	// 	- cluster: displays the results at the cluster level.
	//
	// If you do not specify this parameter, the information at the cluster level is displayed by default.
	//
	// example:
	//
	// engine
	ComponentType *string `json:"ComponentType,omitempty" xml:"ComponentType,omitempty"`
}

func (s GetDoctorComputeSummaryRequestComponentInfo) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryRequestComponentInfo) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryRequestComponentInfo) SetComponentName(v string) *GetDoctorComputeSummaryRequestComponentInfo {
	s.ComponentName = &v
	return s
}

func (s *GetDoctorComputeSummaryRequestComponentInfo) SetComponentType(v string) *GetDoctorComputeSummaryRequestComponentInfo {
	s.ComponentType = &v
	return s
}

type GetDoctorComputeSummaryResponseBody struct {
	// The details of resource usage.
	Data *GetDoctorComputeSummaryResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorComputeSummaryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBody) SetData(v *GetDoctorComputeSummaryResponseBodyData) *GetDoctorComputeSummaryResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorComputeSummaryResponseBody) SetRequestId(v string) *GetDoctorComputeSummaryResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorComputeSummaryResponseBodyData struct {
	// The resource analysis information.
	Analysis *GetDoctorComputeSummaryResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The metrics.
	Metrics *GetDoctorComputeSummaryResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
}

func (s GetDoctorComputeSummaryResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyData) SetAnalysis(v *GetDoctorComputeSummaryResponseBodyDataAnalysis) *GetDoctorComputeSummaryResponseBodyData {
	s.Analysis = v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyData) SetMetrics(v *GetDoctorComputeSummaryResponseBodyDataMetrics) *GetDoctorComputeSummaryResponseBodyData {
	s.Metrics = v
	return s
}

type GetDoctorComputeSummaryResponseBodyDataAnalysis struct {
	// The total number of healthy jobs.
	//
	// example:
	//
	// 3
	HealthyJobCount *int64 `json:"HealthyJobCount,omitempty" xml:"HealthyJobCount,omitempty"`
	// The total number of jobs that require attention.
	//
	// example:
	//
	// 234
	NeedAttentionJobCount *int64 `json:"NeedAttentionJobCount,omitempty" xml:"NeedAttentionJobCount,omitempty"`
	// The score for jobs.
	//
	// example:
	//
	// 73
	Score *int32 `json:"Score,omitempty" xml:"Score,omitempty"`
	// The day-to-day growth rate of the score for jobs.
	//
	// example:
	//
	// 0.02
	ScoreDayGrowthRatio *float32 `json:"ScoreDayGrowthRatio,omitempty" xml:"ScoreDayGrowthRatio,omitempty"`
	// The total number of sub-healthy jobs.
	//
	// example:
	//
	// 1123
	SubHealthyJobCount *int64 `json:"SubHealthyJobCount,omitempty" xml:"SubHealthyJobCount,omitempty"`
	// The total number of unhealthy jobs.
	//
	// example:
	//
	// 23
	UnhealthyJobCount *int64 `json:"UnhealthyJobCount,omitempty" xml:"UnhealthyJobCount,omitempty"`
}

func (s GetDoctorComputeSummaryResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyDataAnalysis) SetHealthyJobCount(v int64) *GetDoctorComputeSummaryResponseBodyDataAnalysis {
	s.HealthyJobCount = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataAnalysis) SetNeedAttentionJobCount(v int64) *GetDoctorComputeSummaryResponseBodyDataAnalysis {
	s.NeedAttentionJobCount = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataAnalysis) SetScore(v int32) *GetDoctorComputeSummaryResponseBodyDataAnalysis {
	s.Score = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataAnalysis) SetScoreDayGrowthRatio(v float32) *GetDoctorComputeSummaryResponseBodyDataAnalysis {
	s.ScoreDayGrowthRatio = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataAnalysis) SetSubHealthyJobCount(v int64) *GetDoctorComputeSummaryResponseBodyDataAnalysis {
	s.SubHealthyJobCount = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataAnalysis) SetUnhealthyJobCount(v int64) *GetDoctorComputeSummaryResponseBodyDataAnalysis {
	s.UnhealthyJobCount = &v
	return s
}

type GetDoctorComputeSummaryResponseBodyDataMetrics struct {
	// The total memory consumption over time in seconds.
	MemSeconds *GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds `json:"MemSeconds,omitempty" xml:"MemSeconds,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total memory consumption over time in seconds.
	MemSecondsDayGrowthRatio *GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio `json:"MemSecondsDayGrowthRatio,omitempty" xml:"MemSecondsDayGrowthRatio,omitempty" type:"Struct"`
	// The average memory usage.
	MemUtilization *GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization `json:"MemUtilization,omitempty" xml:"MemUtilization,omitempty" type:"Struct"`
	// The total amount of data read from the file system.
	ReadSize *GetDoctorComputeSummaryResponseBodyDataMetricsReadSize `json:"ReadSize,omitempty" xml:"ReadSize,omitempty" type:"Struct"`
	// The total CPU consumption over time in seconds.
	VcoreSeconds *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds `json:"VcoreSeconds,omitempty" xml:"VcoreSeconds,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total CPU consumption over time in seconds.
	VcoreSecondsDayGrowthRatio *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio `json:"VcoreSecondsDayGrowthRatio,omitempty" xml:"VcoreSecondsDayGrowthRatio,omitempty" type:"Struct"`
	// The average CPU utilization. The meaning is the same as the %CPU parameter in the output of the top command in Linux.
	VcoreUtilization *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization `json:"VcoreUtilization,omitempty" xml:"VcoreUtilization,omitempty" type:"Struct"`
	// The total amount of data written to the file system.
	WriteSize *GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize `json:"WriteSize,omitempty" xml:"WriteSize,omitempty" type:"Struct"`
}

func (s GetDoctorComputeSummaryResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetrics) SetMemSeconds(v *GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) *GetDoctorComputeSummaryResponseBodyDataMetrics {
	s.MemSeconds = v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetrics) SetMemSecondsDayGrowthRatio(v *GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) *GetDoctorComputeSummaryResponseBodyDataMetrics {
	s.MemSecondsDayGrowthRatio = v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetrics) SetMemUtilization(v *GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) *GetDoctorComputeSummaryResponseBodyDataMetrics {
	s.MemUtilization = v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetrics) SetReadSize(v *GetDoctorComputeSummaryResponseBodyDataMetricsReadSize) *GetDoctorComputeSummaryResponseBodyDataMetrics {
	s.ReadSize = v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetrics) SetVcoreSeconds(v *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) *GetDoctorComputeSummaryResponseBodyDataMetrics {
	s.VcoreSeconds = v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetrics) SetVcoreSecondsDayGrowthRatio(v *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) *GetDoctorComputeSummaryResponseBodyDataMetrics {
	s.VcoreSecondsDayGrowthRatio = v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetrics) SetVcoreUtilization(v *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) *GetDoctorComputeSummaryResponseBodyDataMetrics {
	s.VcoreUtilization = v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetrics) SetWriteSize(v *GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize) *GetDoctorComputeSummaryResponseBodyDataMetrics {
	s.WriteSize = v
	return s
}

type GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total memory usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12312312
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) SetDescription(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds {
	s.Description = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) SetName(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds {
	s.Name = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) SetUnit(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds {
	s.Unit = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) SetValue(v int64) *GetDoctorComputeSummaryResponseBodyDataMetricsMemSeconds {
	s.Value = &v
	return s
}

type GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Growth ratio of memory usage in seconds per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memSecondsDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.36
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) SetDescription(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) SetName(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) SetUnit(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) SetValue(v float32) *GetDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of used memory to total available memory
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memUtilization
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.82
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) SetDescription(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization {
	s.Description = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) SetName(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization {
	s.Name = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) SetUnit(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization {
	s.Unit = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) SetValue(v float32) *GetDoctorComputeSummaryResponseBodyDataMetricsMemUtilization {
	s.Value = &v
	return s
}

type GetDoctorComputeSummaryResponseBodyDataMetricsReadSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total cumulative size of data read in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// readSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 504888659968
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsReadSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsReadSize) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsReadSize) SetDescription(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsReadSize {
	s.Description = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsReadSize) SetName(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsReadSize {
	s.Name = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsReadSize) SetUnit(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsReadSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsReadSize) SetValue(v int64) *GetDoctorComputeSummaryResponseBodyDataMetricsReadSize {
	s.Value = &v
	return s
}

type GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total vcore usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// VCores 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1231412
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) SetDescription(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds {
	s.Description = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) SetName(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds {
	s.Name = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) SetUnit(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds {
	s.Unit = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) SetValue(v int64) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds {
	s.Value = &v
	return s
}

type GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Growth ratio of virtual core usage in seconds per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreSecondsDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.22
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) SetDescription(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) SetName(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) SetUnit(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) SetValue(v float32) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of used vcore to total available cores
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreUtilization
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 32.1
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) SetDescription(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization {
	s.Description = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) SetName(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization {
	s.Name = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) SetUnit(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization {
	s.Unit = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) SetValue(v float32) *GetDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization {
	s.Value = &v
	return s
}

type GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total cumulative size of data written in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// writeSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 6294093393920
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize) SetDescription(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize {
	s.Description = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize) SetName(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize {
	s.Name = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize) SetUnit(v string) *GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize) SetValue(v int64) *GetDoctorComputeSummaryResponseBodyDataMetricsWriteSize {
	s.Value = &v
	return s
}

type GetDoctorComputeSummaryResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorComputeSummaryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorComputeSummaryResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorComputeSummaryResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorComputeSummaryResponse) SetHeaders(v map[string]*string) *GetDoctorComputeSummaryResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorComputeSummaryResponse) SetStatusCode(v int32) *GetDoctorComputeSummaryResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorComputeSummaryResponse) SetBody(v *GetDoctorComputeSummaryResponseBody) *GetDoctorComputeSummaryResponse {
	s.Body = v
	return s
}

type GetDoctorHBaseClusterRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The date.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetDoctorHBaseClusterRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterRequest) SetClusterId(v string) *GetDoctorHBaseClusterRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorHBaseClusterRequest) SetDateTime(v string) *GetDoctorHBaseClusterRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorHBaseClusterRequest) SetRegionId(v string) *GetDoctorHBaseClusterRequest {
	s.RegionId = &v
	return s
}

type GetDoctorHBaseClusterResponseBody struct {
	// The returned data.
	Data *GetDoctorHBaseClusterResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBody) SetData(v *GetDoctorHBaseClusterResponseBodyData) *GetDoctorHBaseClusterResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBody) SetRequestId(v string) *GetDoctorHBaseClusterResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyData struct {
	// The analysis result.
	Analysis *GetDoctorHBaseClusterResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The metric information.
	Metrics *GetDoctorHBaseClusterResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
}

func (s GetDoctorHBaseClusterResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyData) SetAnalysis(v *GetDoctorHBaseClusterResponseBodyDataAnalysis) *GetDoctorHBaseClusterResponseBodyData {
	s.Analysis = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyData) SetMetrics(v *GetDoctorHBaseClusterResponseBodyDataMetrics) *GetDoctorHBaseClusterResponseBodyData {
	s.Metrics = v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataAnalysis struct {
	// The overall score of the HBase cluster.
	//
	// example:
	//
	// 85
	HbaseScore *int32 `json:"HbaseScore,omitempty" xml:"HbaseScore,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataAnalysis) SetHbaseScore(v int32) *GetDoctorHBaseClusterResponseBodyDataAnalysis {
	s.HbaseScore = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetrics struct {
	// The average load.
	AvgLoad *GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad `json:"AvgLoad,omitempty" xml:"AvgLoad,omitempty" type:"Struct"`
	// The number of read requests in a day.
	DailyReadRequest *GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest `json:"DailyReadRequest,omitempty" xml:"DailyReadRequest,omitempty" type:"Struct"`
	// The number of write requests in a day.
	DailyWriteRequest *GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest `json:"DailyWriteRequest,omitempty" xml:"DailyWriteRequest,omitempty" type:"Struct"`
	// The memory size.
	MemHeap *GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap `json:"MemHeap,omitempty" xml:"MemHeap,omitempty" type:"Struct"`
	// The normal average load.
	NormalAvgLoad *GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad `json:"NormalAvgLoad,omitempty" xml:"NormalAvgLoad,omitempty" type:"Struct"`
	// The region balance degree.
	RegionBalance *GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance `json:"RegionBalance,omitempty" xml:"RegionBalance,omitempty" type:"Struct"`
	// The number of regions.
	RegionCount *GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount `json:"RegionCount,omitempty" xml:"RegionCount,omitempty" type:"Struct"`
	// The number of region servers.
	RegionServerCount *GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount `json:"RegionServerCount,omitempty" xml:"RegionServerCount,omitempty" type:"Struct"`
	// The number of StoreFiles.
	StoreFileCount *GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount `json:"StoreFileCount,omitempty" xml:"StoreFileCount,omitempty" type:"Struct"`
	// The number of tables.
	TableCount *GetDoctorHBaseClusterResponseBodyDataMetricsTableCount `json:"TableCount,omitempty" xml:"TableCount,omitempty" type:"Struct"`
	// The size of the cluster.
	TotalDataSize *GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	// The total number of read requests.
	TotalReadRequest *GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest `json:"TotalReadRequest,omitempty" xml:"TotalReadRequest,omitempty" type:"Struct"`
	// The total number of requests in the cluster.
	TotalRequest *GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest `json:"TotalRequest,omitempty" xml:"TotalRequest,omitempty" type:"Struct"`
	// The total number of write requests.
	TotalWriteRequest *GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest `json:"TotalWriteRequest,omitempty" xml:"TotalWriteRequest,omitempty" type:"Struct"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetAvgLoad(v *GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.AvgLoad = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetDailyReadRequest(v *GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.DailyReadRequest = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetDailyWriteRequest(v *GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.DailyWriteRequest = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetMemHeap(v *GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.MemHeap = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetNormalAvgLoad(v *GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.NormalAvgLoad = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetRegionBalance(v *GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.RegionBalance = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetRegionCount(v *GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.RegionCount = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetRegionServerCount(v *GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.RegionServerCount = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetStoreFileCount(v *GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.StoreFileCount = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetTableCount(v *GetDoctorHBaseClusterResponseBodyDataMetricsTableCount) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.TableCount = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetTotalDataSize(v *GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetTotalReadRequest(v *GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.TotalReadRequest = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetTotalRequest(v *GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.TotalRequest = v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetrics) SetTotalWriteRequest(v *GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest) *GetDoctorHBaseClusterResponseBodyDataMetrics {
	s.TotalWriteRequest = v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad struct {
	// The description of the metric.
	//
	// example:
	//
	// The average load under normal working conditions
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// avgLoad
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 36.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad) SetValue(v float32) *GetDoctorHBaseClusterResponseBodyDataMetricsAvgLoad {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of read requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyReadRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 430
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsDailyReadRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of write requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyWriteRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 128
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsDailyWriteRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap struct {
	// The description of the metric.
	//
	// example:
	//
	// Memory heap usage in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memHeap
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 240
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsMemHeap {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad struct {
	// The description of the metric.
	//
	// example:
	//
	// The average load under normal working conditions
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// normalAvgLoad
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 526.4
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad) SetValue(v float32) *GetDoctorHBaseClusterResponseBodyDataMetricsNormalAvgLoad {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance struct {
	// The description of the metric.
	//
	// example:
	//
	// The ability to evenly distribute Regions on different RegionServer nodes
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// regionBalance
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance) SetValue(v float32) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionBalance {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of regions count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// regionCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 161
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionCount {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of region servers count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// regionServerCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 6
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsRegionServerCount {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of store files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// storeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 298
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsStoreFileCount {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsTableCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tables
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tableCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 10
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsTableCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsTableCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTableCount) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTableCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTableCount) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTableCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTableCount) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTableCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTableCount) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsTableCount {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 256
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Total number of read requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalReadRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 430
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalReadRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Total number of requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 576
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Total number of write requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalWriteRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 520
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest) SetDescription(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest) SetName(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest) SetUnit(v string) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest) SetValue(v int64) *GetDoctorHBaseClusterResponseBodyDataMetricsTotalWriteRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseClusterResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorHBaseClusterResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorHBaseClusterResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseClusterResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseClusterResponse) SetHeaders(v map[string]*string) *GetDoctorHBaseClusterResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorHBaseClusterResponse) SetStatusCode(v int32) *GetDoctorHBaseClusterResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorHBaseClusterResponse) SetBody(v *GetDoctorHBaseClusterResponseBody) *GetDoctorHBaseClusterResponse {
	s.Body = v
	return s
}

type GetDoctorHBaseRegionRequest struct {
	// 集群ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// Region ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// 67f6808f60a8c357103a3a95fe00610e
	HbaseRegionId *string `json:"HbaseRegionId,omitempty" xml:"HbaseRegionId,omitempty"`
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetDoctorHBaseRegionRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionRequest) SetClusterId(v string) *GetDoctorHBaseRegionRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorHBaseRegionRequest) SetDateTime(v string) *GetDoctorHBaseRegionRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorHBaseRegionRequest) SetHbaseRegionId(v string) *GetDoctorHBaseRegionRequest {
	s.HbaseRegionId = &v
	return s
}

func (s *GetDoctorHBaseRegionRequest) SetRegionId(v string) *GetDoctorHBaseRegionRequest {
	s.RegionId = &v
	return s
}

type GetDoctorHBaseRegionResponseBody struct {
	// The returned data.
	Data *GetDoctorHBaseRegionResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorHBaseRegionResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionResponseBody) SetData(v *GetDoctorHBaseRegionResponseBodyData) *GetDoctorHBaseRegionResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorHBaseRegionResponseBody) SetRequestId(v string) *GetDoctorHBaseRegionResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorHBaseRegionResponseBodyData struct {
	// The metric information.
	Metrics *GetDoctorHBaseRegionResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// example:
	//
	// emr-worker-2.cluster-20****
	RegionServerHost *string `json:"RegionServerHost,omitempty" xml:"RegionServerHost,omitempty"`
	// example:
	//
	// tb_item
	TableName *string `json:"TableName,omitempty" xml:"TableName,omitempty"`
}

func (s GetDoctorHBaseRegionResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionResponseBodyData) SetMetrics(v *GetDoctorHBaseRegionResponseBodyDataMetrics) *GetDoctorHBaseRegionResponseBodyData {
	s.Metrics = v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyData) SetRegionServerHost(v string) *GetDoctorHBaseRegionResponseBodyData {
	s.RegionServerHost = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyData) SetTableName(v string) *GetDoctorHBaseRegionResponseBodyData {
	s.TableName = &v
	return s
}

type GetDoctorHBaseRegionResponseBodyDataMetrics struct {
	DailyReadRequest  *GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest  `json:"DailyReadRequest,omitempty" xml:"DailyReadRequest,omitempty" type:"Struct"`
	DailyWriteRequest *GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest `json:"DailyWriteRequest,omitempty" xml:"DailyWriteRequest,omitempty" type:"Struct"`
	// The number of StoreFiles.
	StoreFileCount    *GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount    `json:"StoreFileCount,omitempty" xml:"StoreFileCount,omitempty" type:"Struct"`
	TotalReadRequest  *GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest  `json:"TotalReadRequest,omitempty" xml:"TotalReadRequest,omitempty" type:"Struct"`
	TotalWriteRequest *GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest `json:"TotalWriteRequest,omitempty" xml:"TotalWriteRequest,omitempty" type:"Struct"`
}

func (s GetDoctorHBaseRegionResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetrics) SetDailyReadRequest(v *GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest) *GetDoctorHBaseRegionResponseBodyDataMetrics {
	s.DailyReadRequest = v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetrics) SetDailyWriteRequest(v *GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest) *GetDoctorHBaseRegionResponseBodyDataMetrics {
	s.DailyWriteRequest = v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetrics) SetStoreFileCount(v *GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount) *GetDoctorHBaseRegionResponseBodyDataMetrics {
	s.StoreFileCount = v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetrics) SetTotalReadRequest(v *GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest) *GetDoctorHBaseRegionResponseBodyDataMetrics {
	s.TotalReadRequest = v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetrics) SetTotalWriteRequest(v *GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest) *GetDoctorHBaseRegionResponseBodyDataMetrics {
	s.TotalWriteRequest = v
	return s
}

type GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest struct {
	// example:
	//
	// Number of read requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// dailyReadRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest) SetDescription(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest) SetName(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest) SetUnit(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest) SetValue(v int64) *GetDoctorHBaseRegionResponseBodyDataMetricsDailyReadRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest struct {
	// example:
	//
	// Number of write requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// dailyWriteRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest) SetDescription(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest) SetName(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest) SetUnit(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest) SetValue(v int64) *GetDoctorHBaseRegionResponseBodyDataMetricsDailyWriteRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount struct {
	// example:
	//
	// Number of store file
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// storeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 100
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount) SetDescription(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount) SetName(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount) SetUnit(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount) SetValue(v int64) *GetDoctorHBaseRegionResponseBodyDataMetricsStoreFileCount {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest struct {
	// example:
	//
	// Total read request
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// totalReadRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest) SetDescription(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest) SetName(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest) SetUnit(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest) SetValue(v int64) *GetDoctorHBaseRegionResponseBodyDataMetricsTotalReadRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest struct {
	// example:
	//
	// Total Write Request
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// totalWriteRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest) SetDescription(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest) SetName(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest) SetUnit(v string) *GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest) SetValue(v int64) *GetDoctorHBaseRegionResponseBodyDataMetricsTotalWriteRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorHBaseRegionResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorHBaseRegionResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionResponse) SetHeaders(v map[string]*string) *GetDoctorHBaseRegionResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorHBaseRegionResponse) SetStatusCode(v int32) *GetDoctorHBaseRegionResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorHBaseRegionResponse) SetBody(v *GetDoctorHBaseRegionResponseBody) *GetDoctorHBaseRegionResponse {
	s.Body = v
	return s
}

type GetDoctorHBaseRegionServerRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The date.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The host of the region server.
	//
	// This parameter is required.
	//
	// example:
	//
	// emr-worker-4.cluster-20****
	RegionServerHost *string `json:"RegionServerHost,omitempty" xml:"RegionServerHost,omitempty"`
}

func (s GetDoctorHBaseRegionServerRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerRequest) SetClusterId(v string) *GetDoctorHBaseRegionServerRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorHBaseRegionServerRequest) SetDateTime(v string) *GetDoctorHBaseRegionServerRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorHBaseRegionServerRequest) SetRegionId(v string) *GetDoctorHBaseRegionServerRequest {
	s.RegionId = &v
	return s
}

func (s *GetDoctorHBaseRegionServerRequest) SetRegionServerHost(v string) *GetDoctorHBaseRegionServerRequest {
	s.RegionServerHost = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBody struct {
	// The returned data.
	Data *GetDoctorHBaseRegionServerResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBody) SetData(v *GetDoctorHBaseRegionServerResponseBodyData) *GetDoctorHBaseRegionServerResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBody) SetRequestId(v string) *GetDoctorHBaseRegionServerResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyData struct {
	// The metric information.
	Metrics *GetDoctorHBaseRegionServerResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
}

func (s GetDoctorHBaseRegionServerResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyData) SetMetrics(v *GetDoctorHBaseRegionServerResponseBodyDataMetrics) *GetDoctorHBaseRegionServerResponseBodyData {
	s.Metrics = v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetrics struct {
	// The average garbage collection (GC) duration.
	AvgGc *GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc `json:"AvgGc,omitempty" xml:"AvgGc,omitempty" type:"Struct"`
	// The cache hit ratio.
	CacheRatio *GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio `json:"CacheRatio,omitempty" xml:"CacheRatio,omitempty" type:"Struct"`
	// The number of daily read requests.
	DailyReadRequest *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest `json:"DailyReadRequest,omitempty" xml:"DailyReadRequest,omitempty" type:"Struct"`
	// The day-to-day increment rate of the number of daily read requests.
	DailyReadRequestDayGrowthRatio *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio `json:"DailyReadRequestDayGrowthRatio,omitempty" xml:"DailyReadRequestDayGrowthRatio,omitempty" type:"Struct"`
	// The number of daily write requests.
	DailyWriteRequest *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest `json:"DailyWriteRequest,omitempty" xml:"DailyWriteRequest,omitempty" type:"Struct"`
	// The day-to-day increment rate of the number of daily write requests.
	DailyWriteRequestDayGrowthRatio *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio `json:"DailyWriteRequestDayGrowthRatio,omitempty" xml:"DailyWriteRequestDayGrowthRatio,omitempty" type:"Struct"`
	// The number of regions.
	RegionCount *GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount `json:"RegionCount,omitempty" xml:"RegionCount,omitempty" type:"Struct"`
	// The cumulative number of read requests.
	TotalReadRequest *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest `json:"TotalReadRequest,omitempty" xml:"TotalReadRequest,omitempty" type:"Struct"`
	// The cumulative number of total requests.
	TotalRequest *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest `json:"TotalRequest,omitempty" xml:"TotalRequest,omitempty" type:"Struct"`
	// The cumulative number of write requests.
	TotalWriteRequest *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest `json:"TotalWriteRequest,omitempty" xml:"TotalWriteRequest,omitempty" type:"Struct"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetrics) SetAvgGc(v *GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc) *GetDoctorHBaseRegionServerResponseBodyDataMetrics {
	s.AvgGc = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetrics) SetCacheRatio(v *GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio) *GetDoctorHBaseRegionServerResponseBodyDataMetrics {
	s.CacheRatio = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetrics) SetDailyReadRequest(v *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest) *GetDoctorHBaseRegionServerResponseBodyDataMetrics {
	s.DailyReadRequest = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetrics) SetDailyReadRequestDayGrowthRatio(v *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) *GetDoctorHBaseRegionServerResponseBodyDataMetrics {
	s.DailyReadRequestDayGrowthRatio = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetrics) SetDailyWriteRequest(v *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest) *GetDoctorHBaseRegionServerResponseBodyDataMetrics {
	s.DailyWriteRequest = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetrics) SetDailyWriteRequestDayGrowthRatio(v *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) *GetDoctorHBaseRegionServerResponseBodyDataMetrics {
	s.DailyWriteRequestDayGrowthRatio = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetrics) SetRegionCount(v *GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount) *GetDoctorHBaseRegionServerResponseBodyDataMetrics {
	s.RegionCount = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetrics) SetTotalReadRequest(v *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest) *GetDoctorHBaseRegionServerResponseBodyDataMetrics {
	s.TotalReadRequest = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetrics) SetTotalRequest(v *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest) *GetDoctorHBaseRegionServerResponseBodyDataMetrics {
	s.TotalRequest = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetrics) SetTotalWriteRequest(v *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest) *GetDoctorHBaseRegionServerResponseBodyDataMetrics {
	s.TotalWriteRequest = v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc struct {
	// The description of the metric.
	//
	// example:
	//
	// The efficiency of garbage collection in the system
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// avgGc
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 42.3
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc) SetDescription(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc) SetName(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc) SetUnit(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc) SetValue(v float32) *GetDoctorHBaseRegionServerResponseBodyDataMetricsAvgGc {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of the BlockCache memory size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// cacheRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 95.3
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio) SetDescription(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio) SetName(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio) SetUnit(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio) SetValue(v float32) *GetDoctorHBaseRegionServerResponseBodyDataMetricsCacheRatio {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of read requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyReadRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest) SetDescription(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest) SetName(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest) SetUnit(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest) SetValue(v int64) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// The growth rate of daily read request quantity.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyReadRequestDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetDescription(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetName(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetUnit(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetValue(v float32) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of write requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyWriteRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest) SetDescription(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest) SetName(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest) SetUnit(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest) SetValue(v int64) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// The growth rate of daily write request quantity.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyWriteRequestDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetDescription(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetName(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetUnit(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetValue(v float32) *GetDoctorHBaseRegionServerResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of regions count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// regionCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 15
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount) SetDescription(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount) SetName(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount) SetUnit(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount) SetValue(v int64) *GetDoctorHBaseRegionServerResponseBodyDataMetricsRegionCount {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Total number of read requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalReadRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest) SetDescription(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest) SetName(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest) SetUnit(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest) SetValue(v int64) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalReadRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Total number of requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest) SetDescription(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest) SetName(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest) SetUnit(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest) SetValue(v int64) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Total number of write requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalWriteRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest) SetDescription(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest) SetName(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest) SetUnit(v string) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest) SetValue(v int64) *GetDoctorHBaseRegionServerResponseBodyDataMetricsTotalWriteRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseRegionServerResponse struct {
	Headers    map[string]*string                      `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                  `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorHBaseRegionServerResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorHBaseRegionServerResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseRegionServerResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseRegionServerResponse) SetHeaders(v map[string]*string) *GetDoctorHBaseRegionServerResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorHBaseRegionServerResponse) SetStatusCode(v int32) *GetDoctorHBaseRegionServerResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorHBaseRegionServerResponse) SetBody(v *GetDoctorHBaseRegionServerResponseBody) *GetDoctorHBaseRegionServerResponse {
	s.Body = v
	return s
}

type GetDoctorHBaseTableRequest struct {
	// 集群ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// namespace1:tb_item
	TableName *string `json:"TableName,omitempty" xml:"TableName,omitempty"`
}

func (s GetDoctorHBaseTableRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableRequest) SetClusterId(v string) *GetDoctorHBaseTableRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorHBaseTableRequest) SetDateTime(v string) *GetDoctorHBaseTableRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorHBaseTableRequest) SetRegionId(v string) *GetDoctorHBaseTableRequest {
	s.RegionId = &v
	return s
}

func (s *GetDoctorHBaseTableRequest) SetTableName(v string) *GetDoctorHBaseTableRequest {
	s.TableName = &v
	return s
}

type GetDoctorHBaseTableResponseBody struct {
	// The returned data.
	Data *GetDoctorHBaseTableResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorHBaseTableResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBody) SetData(v *GetDoctorHBaseTableResponseBodyData) *GetDoctorHBaseTableResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorHBaseTableResponseBody) SetRequestId(v string) *GetDoctorHBaseTableResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorHBaseTableResponseBodyData struct {
	// The diagnosis result.
	Analysis *GetDoctorHBaseTableResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	Metrics  *GetDoctorHBaseTableResponseBodyDataMetrics  `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
}

func (s GetDoctorHBaseTableResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyData) SetAnalysis(v *GetDoctorHBaseTableResponseBodyDataAnalysis) *GetDoctorHBaseTableResponseBodyData {
	s.Analysis = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyData) SetMetrics(v *GetDoctorHBaseTableResponseBodyDataMetrics) *GetDoctorHBaseTableResponseBodyData {
	s.Metrics = v
	return s
}

type GetDoctorHBaseTableResponseBodyDataAnalysis struct {
	// example:
	//
	// null
	ReadRequestHotspotRegionList []*string `json:"ReadRequestHotspotRegionList,omitempty" xml:"ReadRequestHotspotRegionList,omitempty" type:"Repeated"`
	// The description of read imbalance.
	ReadRequestUnbalanceSuggestion *string `json:"ReadRequestUnbalanceSuggestion,omitempty" xml:"ReadRequestUnbalanceSuggestion,omitempty"`
	// example:
	//
	// null
	RequestHotspotRegionList []*string `json:"RequestHotspotRegionList,omitempty" xml:"RequestHotspotRegionList,omitempty" type:"Repeated"`
	// The description of read/write imbalance.
	RequestUnbalanceSuggestion *string `json:"RequestUnbalanceSuggestion,omitempty" xml:"RequestUnbalanceSuggestion,omitempty"`
	// example:
	//
	// 85
	TableScore *int32 `json:"TableScore,omitempty" xml:"TableScore,omitempty"`
	// example:
	//
	// null
	WriteRequestHotspotRegionList []*string `json:"WriteRequestHotspotRegionList,omitempty" xml:"WriteRequestHotspotRegionList,omitempty" type:"Repeated"`
	// The description of write imbalance.
	WriteRequestUnbalanceSuggestion *string `json:"WriteRequestUnbalanceSuggestion,omitempty" xml:"WriteRequestUnbalanceSuggestion,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataAnalysis) SetReadRequestHotspotRegionList(v []*string) *GetDoctorHBaseTableResponseBodyDataAnalysis {
	s.ReadRequestHotspotRegionList = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataAnalysis) SetReadRequestUnbalanceSuggestion(v string) *GetDoctorHBaseTableResponseBodyDataAnalysis {
	s.ReadRequestUnbalanceSuggestion = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataAnalysis) SetRequestHotspotRegionList(v []*string) *GetDoctorHBaseTableResponseBodyDataAnalysis {
	s.RequestHotspotRegionList = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataAnalysis) SetRequestUnbalanceSuggestion(v string) *GetDoctorHBaseTableResponseBodyDataAnalysis {
	s.RequestUnbalanceSuggestion = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataAnalysis) SetTableScore(v int32) *GetDoctorHBaseTableResponseBodyDataAnalysis {
	s.TableScore = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataAnalysis) SetWriteRequestHotspotRegionList(v []*string) *GetDoctorHBaseTableResponseBodyDataAnalysis {
	s.WriteRequestHotspotRegionList = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataAnalysis) SetWriteRequestUnbalanceSuggestion(v string) *GetDoctorHBaseTableResponseBodyDataAnalysis {
	s.WriteRequestUnbalanceSuggestion = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetrics struct {
	ColdAccessDay                   *GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay                   `json:"ColdAccessDay,omitempty" xml:"ColdAccessDay,omitempty" type:"Struct"`
	ColdConfigDay                   *GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay                   `json:"ColdConfigDay,omitempty" xml:"ColdConfigDay,omitempty" type:"Struct"`
	ColdDataSize                    *GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize                    `json:"ColdDataSize,omitempty" xml:"ColdDataSize,omitempty" type:"Struct"`
	DailyReadRequest                *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest                `json:"DailyReadRequest,omitempty" xml:"DailyReadRequest,omitempty" type:"Struct"`
	DailyReadRequestDayGrowthRatio  *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio  `json:"DailyReadRequestDayGrowthRatio,omitempty" xml:"DailyReadRequestDayGrowthRatio,omitempty" type:"Struct"`
	DailyWriteRequest               *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest               `json:"DailyWriteRequest,omitempty" xml:"DailyWriteRequest,omitempty" type:"Struct"`
	DailyWriteRequestDayGrowthRatio *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio `json:"DailyWriteRequestDayGrowthRatio,omitempty" xml:"DailyWriteRequestDayGrowthRatio,omitempty" type:"Struct"`
	FreezeConfigDay                 *GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay                 `json:"FreezeConfigDay,omitempty" xml:"FreezeConfigDay,omitempty" type:"Struct"`
	FreezeDataSize                  *GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize                  `json:"FreezeDataSize,omitempty" xml:"FreezeDataSize,omitempty" type:"Struct"`
	HotDataSize                     *GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize                     `json:"HotDataSize,omitempty" xml:"HotDataSize,omitempty" type:"Struct"`
	Locality                        *GetDoctorHBaseTableResponseBodyDataMetricsLocality                        `json:"Locality,omitempty" xml:"Locality,omitempty" type:"Struct"`
	ReadRequestBalance              *GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance              `json:"ReadRequestBalance,omitempty" xml:"ReadRequestBalance,omitempty" type:"Struct"`
	RegionBalance                   *GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance                   `json:"RegionBalance,omitempty" xml:"RegionBalance,omitempty" type:"Struct"`
	RegionCount                     *GetDoctorHBaseTableResponseBodyDataMetricsRegionCount                     `json:"RegionCount,omitempty" xml:"RegionCount,omitempty" type:"Struct"`
	RegionCountDayGrowthRatio       *GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio       `json:"RegionCountDayGrowthRatio,omitempty" xml:"RegionCountDayGrowthRatio,omitempty" type:"Struct"`
	RegionServerCount               *GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount               `json:"RegionServerCount,omitempty" xml:"RegionServerCount,omitempty" type:"Struct"`
	RequestBalance                  *GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance                  `json:"RequestBalance,omitempty" xml:"RequestBalance,omitempty" type:"Struct"`
	StoreFileCount                  *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount                  `json:"StoreFileCount,omitempty" xml:"StoreFileCount,omitempty" type:"Struct"`
	StoreFileCountDayGrowthRatio    *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio    `json:"StoreFileCountDayGrowthRatio,omitempty" xml:"StoreFileCountDayGrowthRatio,omitempty" type:"Struct"`
	TableSize                       *GetDoctorHBaseTableResponseBodyDataMetricsTableSize                       `json:"TableSize,omitempty" xml:"TableSize,omitempty" type:"Struct"`
	TableSizeDayGrowthRatio         *GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio         `json:"TableSizeDayGrowthRatio,omitempty" xml:"TableSizeDayGrowthRatio,omitempty" type:"Struct"`
	WarmConfigDay                   *GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay                   `json:"WarmConfigDay,omitempty" xml:"WarmConfigDay,omitempty" type:"Struct"`
	WarmDataSize                    *GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize                    `json:"WarmDataSize,omitempty" xml:"WarmDataSize,omitempty" type:"Struct"`
	WriteRequestBalance             *GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance             `json:"WriteRequestBalance,omitempty" xml:"WriteRequestBalance,omitempty" type:"Struct"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetColdAccessDay(v *GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.ColdAccessDay = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetColdConfigDay(v *GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.ColdConfigDay = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetColdDataSize(v *GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.ColdDataSize = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetDailyReadRequest(v *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.DailyReadRequest = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetDailyReadRequestDayGrowthRatio(v *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.DailyReadRequestDayGrowthRatio = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetDailyWriteRequest(v *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.DailyWriteRequest = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetDailyWriteRequestDayGrowthRatio(v *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.DailyWriteRequestDayGrowthRatio = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetFreezeConfigDay(v *GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.FreezeConfigDay = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetFreezeDataSize(v *GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.FreezeDataSize = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetHotDataSize(v *GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.HotDataSize = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetLocality(v *GetDoctorHBaseTableResponseBodyDataMetricsLocality) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.Locality = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetReadRequestBalance(v *GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.ReadRequestBalance = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetRegionBalance(v *GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.RegionBalance = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetRegionCount(v *GetDoctorHBaseTableResponseBodyDataMetricsRegionCount) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.RegionCount = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetRegionCountDayGrowthRatio(v *GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.RegionCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetRegionServerCount(v *GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.RegionServerCount = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetRequestBalance(v *GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.RequestBalance = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetStoreFileCount(v *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.StoreFileCount = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetStoreFileCountDayGrowthRatio(v *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.StoreFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetTableSize(v *GetDoctorHBaseTableResponseBodyDataMetricsTableSize) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.TableSize = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetTableSizeDayGrowthRatio(v *GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.TableSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetWarmConfigDay(v *GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.WarmConfigDay = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetWarmDataSize(v *GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.WarmDataSize = v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetrics) SetWriteRequestBalance(v *GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance) *GetDoctorHBaseTableResponseBodyDataMetrics {
	s.WriteRequestBalance = v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay struct {
	// example:
	//
	// Cold access day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// coldAccessDay
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// day
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 3
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsColdAccessDay {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay struct {
	// example:
	//
	// Cold config day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// coldConfigDay
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// day
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 10
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsColdConfigDay {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize struct {
	// example:
	//
	// Size of the cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// coldDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsColdDataSize {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest struct {
	// example:
	//
	// test-update
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// dailyReadRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of table size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// dailyReadRequestDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetValue(v float32) *GetDoctorHBaseTableResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest struct {
	// example:
	//
	// Number of write requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// dailyWriteRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequest {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio struct {
	// example:
	//
	// The balance of distributing requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// dailyWriteRequestDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetValue(v float32) *GetDoctorHBaseTableResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay struct {
	// example:
	//
	// Freeze config day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// freezeConfigDay
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// day
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 10
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsFreezeConfigDay {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize struct {
	// example:
	//
	// Size of the freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// freezeDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsFreezeDataSize {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize struct {
	// example:
	//
	// Size of the hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// hotDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsHotDataSize {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsLocality struct {
	// example:
	//
	// The locality of data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// locality
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsLocality) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsLocality) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsLocality) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsLocality {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsLocality) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsLocality {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsLocality) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsLocality {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsLocality) SetValue(v float32) *GetDoctorHBaseTableResponseBodyDataMetricsLocality {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance struct {
	// example:
	//
	// The balance of distributing read requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// readRequestBalance
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance) SetValue(v float32) *GetDoctorHBaseTableResponseBodyDataMetricsReadRequestBalance {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance struct {
	// example:
	//
	// The ability to evenly distribute Regions on different RegionServer nodes
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// regionBalance
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance) SetValue(v float32) *GetDoctorHBaseTableResponseBodyDataMetricsRegionBalance {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsRegionCount struct {
	// example:
	//
	// Number of regions count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// regionCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 10
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsRegionCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsRegionCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionCount) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionCount) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionCount) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionCount) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsRegionCount {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of region count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// regionCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.8
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio) SetValue(v float32) *GetDoctorHBaseTableResponseBodyDataMetricsRegionCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount struct {
	// example:
	//
	// Number of region servers count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// regionServerCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 10
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsRegionServerCount {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance struct {
	// example:
	//
	// The balance of distributing requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// requestBalance
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance) SetValue(v float32) *GetDoctorHBaseTableResponseBodyDataMetricsRequestBalance {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount struct {
	// example:
	//
	// Number of store files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// storeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCount {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of store file count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// storeFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHBaseTableResponseBodyDataMetricsStoreFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsTableSize struct {
	// example:
	//
	// Size of the table
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// tableSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// tb_item
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsTableSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsTableSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsTableSize) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsTableSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsTableSize) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsTableSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsTableSize) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsTableSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsTableSize) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsTableSize {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of table size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// tableSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHBaseTableResponseBodyDataMetricsTableSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay struct {
	// example:
	//
	// Size of the warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// warmConfigDay
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsWarmConfigDay {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize struct {
	// example:
	//
	// Size of the warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// warmDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize) SetValue(v int64) *GetDoctorHBaseTableResponseBodyDataMetricsWarmDataSize {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance struct {
	// example:
	//
	// The balance of distributing write requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// writeRequestBalance
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance) SetDescription(v string) *GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance {
	s.Description = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance) SetName(v string) *GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance {
	s.Name = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance) SetUnit(v string) *GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance {
	s.Unit = &v
	return s
}

func (s *GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance) SetValue(v float32) *GetDoctorHBaseTableResponseBodyDataMetricsWriteRequestBalance {
	s.Value = &v
	return s
}

type GetDoctorHBaseTableResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorHBaseTableResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorHBaseTableResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHBaseTableResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorHBaseTableResponse) SetHeaders(v map[string]*string) *GetDoctorHBaseTableResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorHBaseTableResponse) SetStatusCode(v int32) *GetDoctorHBaseTableResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorHBaseTableResponse) SetBody(v *GetDoctorHBaseTableResponseBody) *GetDoctorHBaseTableResponse {
	s.Body = v
	return s
}

type GetDoctorHDFSClusterRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetDoctorHDFSClusterRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterRequest) SetClusterId(v string) *GetDoctorHDFSClusterRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorHDFSClusterRequest) SetDateTime(v string) *GetDoctorHDFSClusterRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorHDFSClusterRequest) SetRegionId(v string) *GetDoctorHDFSClusterRequest {
	s.RegionId = &v
	return s
}

type GetDoctorHDFSClusterResponseBody struct {
	// The HDFS analysis results.
	Data *GetDoctorHDFSClusterResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBody) SetData(v *GetDoctorHDFSClusterResponseBodyData) *GetDoctorHDFSClusterResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBody) SetRequestId(v string) *GetDoctorHDFSClusterResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyData struct {
	// The analysis results.
	Analysis *GetDoctorHDFSClusterResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The metric information.
	Metrics *GetDoctorHDFSClusterResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
}

func (s GetDoctorHDFSClusterResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyData) SetAnalysis(v *GetDoctorHDFSClusterResponseBodyDataAnalysis) *GetDoctorHDFSClusterResponseBodyData {
	s.Analysis = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyData) SetMetrics(v *GetDoctorHDFSClusterResponseBodyDataMetrics) *GetDoctorHDFSClusterResponseBodyData {
	s.Metrics = v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataAnalysis struct {
	// The overall score of HDFS storage resources.
	//
	// example:
	//
	// 55
	HdfsScore *int32 `json:"HdfsScore,omitempty" xml:"HdfsScore,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataAnalysis) SetHdfsScore(v int32) *GetDoctorHDFSClusterResponseBodyDataAnalysis {
	s.HdfsScore = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetrics struct {
	// The daily increment of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataDayGrowthSize *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize `json:"ColdDataDayGrowthSize,omitempty" xml:"ColdDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataRatio *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio `json:"ColdDataRatio,omitempty" xml:"ColdDataRatio,omitempty" type:"Struct"`
	// The amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataSize *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize `json:"ColdDataSize,omitempty" xml:"ColdDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataSizeDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio `json:"ColdDataSizeDayGrowthRatio,omitempty" xml:"ColdDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCount *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount `json:"EmptyFileCount,omitempty" xml:"EmptyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCountDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio `json:"EmptyFileCountDayGrowthRatio,omitempty" xml:"EmptyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileDayGrowthCount *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount `json:"EmptyFileDayGrowthCount,omitempty" xml:"EmptyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of empty files. Empty files are those with a size of 0 MB.
	EmptyFileRatio *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio `json:"EmptyFileRatio,omitempty" xml:"EmptyFileRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataDayGrowthSize *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize `json:"FreezeDataDayGrowthSize,omitempty" xml:"FreezeDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataRatio *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio `json:"FreezeDataRatio,omitempty" xml:"FreezeDataRatio,omitempty" type:"Struct"`
	// The amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSize *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize `json:"FreezeDataSize,omitempty" xml:"FreezeDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSizeDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio `json:"FreezeDataSizeDayGrowthRatio,omitempty" xml:"FreezeDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataDayGrowthSize *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize `json:"HotDataDayGrowthSize,omitempty" xml:"HotDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataRatio *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio `json:"HotDataRatio,omitempty" xml:"HotDataRatio,omitempty" type:"Struct"`
	// The amount of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataSize *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize `json:"HotDataSize,omitempty" xml:"HotDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataSizeDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio `json:"HotDataSizeDayGrowthRatio,omitempty" xml:"HotDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCount *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount `json:"LargeFileCount,omitempty" xml:"LargeFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCountDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio `json:"LargeFileCountDayGrowthRatio,omitempty" xml:"LargeFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileDayGrowthCount *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount `json:"LargeFileDayGrowthCount,omitempty" xml:"LargeFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of large files. Large files are those with a size greater than 1 GB.
	LargeFileRatio *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio `json:"LargeFileRatio,omitempty" xml:"LargeFileRatio,omitempty" type:"Struct"`
	// The number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCount *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount `json:"MediumFileCount,omitempty" xml:"MediumFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCountDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio `json:"MediumFileCountDayGrowthRatio,omitempty" xml:"MediumFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileDayGrowthCount *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount `json:"MediumFileDayGrowthCount,omitempty" xml:"MediumFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileRatio *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio `json:"MediumFileRatio,omitempty" xml:"MediumFileRatio,omitempty" type:"Struct"`
	// The number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCount *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount `json:"SmallFileCount,omitempty" xml:"SmallFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCountDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio `json:"SmallFileCountDayGrowthRatio,omitempty" xml:"SmallFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileDayGrowthCount *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount `json:"SmallFileDayGrowthCount,omitempty" xml:"SmallFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileRatio *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio `json:"SmallFileRatio,omitempty" xml:"SmallFileRatio,omitempty" type:"Struct"`
	// The number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCount *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount `json:"TinyFileCount,omitempty" xml:"TinyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCountDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio `json:"TinyFileCountDayGrowthRatio,omitempty" xml:"TinyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileDayGrowthCount *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount `json:"TinyFileDayGrowthCount,omitempty" xml:"TinyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileRatio *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio `json:"TinyFileRatio,omitempty" xml:"TinyFileRatio,omitempty" type:"Struct"`
	// The daily incremental of the total data volume.
	TotalDataDayGrowthSize *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize `json:"TotalDataDayGrowthSize,omitempty" xml:"TotalDataDayGrowthSize,omitempty" type:"Struct"`
	// The total amount of data.
	TotalDataSize *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total data volume.
	TotalDataSizeDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio `json:"TotalDataSizeDayGrowthRatio,omitempty" xml:"TotalDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The total number of files.
	TotalFileCount *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount `json:"TotalFileCount,omitempty" xml:"TotalFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total number of files.
	TotalFileCountDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio `json:"TotalFileCountDayGrowthRatio,omitempty" xml:"TotalFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the total number of files.
	TotalFileDayGrowthCount *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount `json:"TotalFileDayGrowthCount,omitempty" xml:"TotalFileDayGrowthCount,omitempty" type:"Struct"`
	// The daily increment of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataDayGrowthSize *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize `json:"WarmDataDayGrowthSize,omitempty" xml:"WarmDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataRatio *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio `json:"WarmDataRatio,omitempty" xml:"WarmDataRatio,omitempty" type:"Struct"`
	// The amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataSize *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize `json:"WarmDataSize,omitempty" xml:"WarmDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataSizeDayGrowthRatio *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio `json:"WarmDataSizeDayGrowthRatio,omitempty" xml:"WarmDataSizeDayGrowthRatio,omitempty" type:"Struct"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetColdDataDayGrowthSize(v *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.ColdDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetColdDataRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.ColdDataRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetColdDataSize(v *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.ColdDataSize = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetColdDataSizeDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.ColdDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetEmptyFileCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.EmptyFileCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetEmptyFileCountDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.EmptyFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetEmptyFileDayGrowthCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.EmptyFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetEmptyFileRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.EmptyFileRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetFreezeDataDayGrowthSize(v *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.FreezeDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetFreezeDataRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.FreezeDataRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetFreezeDataSize(v *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.FreezeDataSize = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetFreezeDataSizeDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.FreezeDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetHotDataDayGrowthSize(v *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.HotDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetHotDataRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.HotDataRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetHotDataSize(v *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.HotDataSize = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetHotDataSizeDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.HotDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetLargeFileCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.LargeFileCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetLargeFileCountDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.LargeFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetLargeFileDayGrowthCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.LargeFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetLargeFileRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.LargeFileRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetMediumFileCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.MediumFileCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetMediumFileCountDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.MediumFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetMediumFileDayGrowthCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.MediumFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetMediumFileRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.MediumFileRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetSmallFileCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.SmallFileCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetSmallFileCountDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.SmallFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetSmallFileDayGrowthCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.SmallFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetSmallFileRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.SmallFileRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetTinyFileCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.TinyFileCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetTinyFileCountDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.TinyFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetTinyFileDayGrowthCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.TinyFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetTinyFileRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.TinyFileRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetTotalDataDayGrowthSize(v *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.TotalDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetTotalDataSize(v *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetTotalDataSizeDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.TotalDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetTotalFileCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.TotalFileCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetTotalFileCountDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.TotalFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetTotalFileDayGrowthCount(v *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.TotalFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetWarmDataDayGrowthSize(v *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.WarmDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetWarmDataRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.WarmDataRatio = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetWarmDataSize(v *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.WarmDataSize = v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetrics) SetWarmDataSizeDayGrowthRatio(v *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) *GetDoctorHDFSClusterResponseBodyDataMetrics {
	s.WarmDataSizeDayGrowthRatio = v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of cold data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -182636577752
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Cold data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 5570958082267
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -0.03
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 15595897
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.005
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 114
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.3
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsEmptyFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -167683929450
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.12
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1231312431
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -0.09
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of hot data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 123154
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Hot data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.22
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 6701531944206
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.1114
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.39
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 2
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.22
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsLargeFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 234
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.19
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 176
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.21
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsMediumFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12345
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.02
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12321
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.19
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsSmallFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 232131
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.003
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.19
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsTinyFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of total data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 256482228248
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 62086342083623
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.14
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 51683279
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.02
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 27809
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -64806998319
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.12
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 4062349775577
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize) SetValue(v int64) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -0.015
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSClusterResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorHDFSClusterResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorHDFSClusterResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSClusterResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSClusterResponse) SetHeaders(v map[string]*string) *GetDoctorHDFSClusterResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorHDFSClusterResponse) SetStatusCode(v int32) *GetDoctorHDFSClusterResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorHDFSClusterResponse) SetBody(v *GetDoctorHDFSClusterResponseBody) *GetDoctorHDFSClusterResponse {
	s.Body = v
	return s
}

type GetDoctorHDFSDirectoryRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The directory name. The depth of the directory is not greater than five.
	//
	// This parameter is required.
	//
	// example:
	//
	// /tmp/test
	DirPath *string `json:"DirPath,omitempty" xml:"DirPath,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetDoctorHDFSDirectoryRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryRequest) SetClusterId(v string) *GetDoctorHDFSDirectoryRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorHDFSDirectoryRequest) SetDateTime(v string) *GetDoctorHDFSDirectoryRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorHDFSDirectoryRequest) SetDirPath(v string) *GetDoctorHDFSDirectoryRequest {
	s.DirPath = &v
	return s
}

func (s *GetDoctorHDFSDirectoryRequest) SetRegionId(v string) *GetDoctorHDFSDirectoryRequest {
	s.RegionId = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBody struct {
	// The analysis results of the HDFS directory.
	Data *GetDoctorHDFSDirectoryResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBody) SetData(v *GetDoctorHDFSDirectoryResponseBodyData) *GetDoctorHDFSDirectoryResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBody) SetRequestId(v string) *GetDoctorHDFSDirectoryResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyData struct {
	// The directory level.
	//
	// example:
	//
	// 2
	Depth *int32 `json:"Depth,omitempty" xml:"Depth,omitempty"`
	// The group to which the directory belongs.
	//
	// example:
	//
	// DW
	Group *string `json:"Group,omitempty" xml:"Group,omitempty"`
	// The metric information.
	Metrics *GetDoctorHDFSDirectoryResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// The directory owner.
	//
	// example:
	//
	// DW
	User *string `json:"User,omitempty" xml:"User,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyData) SetDepth(v int32) *GetDoctorHDFSDirectoryResponseBodyData {
	s.Depth = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyData) SetGroup(v string) *GetDoctorHDFSDirectoryResponseBodyData {
	s.Group = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyData) SetMetrics(v *GetDoctorHDFSDirectoryResponseBodyDataMetrics) *GetDoctorHDFSDirectoryResponseBodyData {
	s.Metrics = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyData) SetUser(v string) *GetDoctorHDFSDirectoryResponseBodyData {
	s.User = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetrics struct {
	// The daily increment of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataDayGrowthSize *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize `json:"ColdDataDayGrowthSize,omitempty" xml:"ColdDataDayGrowthSize,omitempty" type:"Struct"`
	// The amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataSize *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize `json:"ColdDataSize,omitempty" xml:"ColdDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataSizeDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio `json:"ColdDataSizeDayGrowthRatio,omitempty" xml:"ColdDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount `json:"EmptyFileCount,omitempty" xml:"EmptyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCountDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio `json:"EmptyFileCountDayGrowthRatio,omitempty" xml:"EmptyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileDayGrowthCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount `json:"EmptyFileDayGrowthCount,omitempty" xml:"EmptyFileDayGrowthCount,omitempty" type:"Struct"`
	// The daily increment of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataDayGrowthSize *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize `json:"FreezeDataDayGrowthSize,omitempty" xml:"FreezeDataDayGrowthSize,omitempty" type:"Struct"`
	// The amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSize *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize `json:"FreezeDataSize,omitempty" xml:"FreezeDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSizeDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio `json:"FreezeDataSizeDayGrowthRatio,omitempty" xml:"FreezeDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataDayGrowthSize *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize `json:"HotDataDayGrowthSize,omitempty" xml:"HotDataDayGrowthSize,omitempty" type:"Struct"`
	// The amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataSize *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize `json:"HotDataSize,omitempty" xml:"HotDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataSizeDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio `json:"HotDataSizeDayGrowthRatio,omitempty" xml:"HotDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount `json:"LargeFileCount,omitempty" xml:"LargeFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCountDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio `json:"LargeFileCountDayGrowthRatio,omitempty" xml:"LargeFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileDayGrowthCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount `json:"LargeFileDayGrowthCount,omitempty" xml:"LargeFileDayGrowthCount,omitempty" type:"Struct"`
	// The number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount `json:"MediumFileCount,omitempty" xml:"MediumFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCountDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio `json:"MediumFileCountDayGrowthRatio,omitempty" xml:"MediumFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileDayGrowthCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount `json:"MediumFileDayGrowthCount,omitempty" xml:"MediumFileDayGrowthCount,omitempty" type:"Struct"`
	// The number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount `json:"SmallFileCount,omitempty" xml:"SmallFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCountDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio `json:"SmallFileCountDayGrowthRatio,omitempty" xml:"SmallFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileDayGrowthCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount `json:"SmallFileDayGrowthCount,omitempty" xml:"SmallFileDayGrowthCount,omitempty" type:"Struct"`
	// The number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount `json:"TinyFileCount,omitempty" xml:"TinyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCountDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio `json:"TinyFileCountDayGrowthRatio,omitempty" xml:"TinyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileDayGrowthCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount `json:"TinyFileDayGrowthCount,omitempty" xml:"TinyFileDayGrowthCount,omitempty" type:"Struct"`
	// The daily incremental of the total amount of data.
	TotalDataDayGrowthSize *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize `json:"TotalDataDayGrowthSize,omitempty" xml:"TotalDataDayGrowthSize,omitempty" type:"Struct"`
	// The total amount of data.
	TotalDataSize *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total data volume.
	TotalDataSizeDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio `json:"TotalDataSizeDayGrowthRatio,omitempty" xml:"TotalDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The total number of files.
	TotalFileCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount `json:"TotalFileCount,omitempty" xml:"TotalFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total number of files.
	TotalFileCountDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio `json:"TotalFileCountDayGrowthRatio,omitempty" xml:"TotalFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the total number of files.
	TotalFileDayGrowthCount *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount `json:"TotalFileDayGrowthCount,omitempty" xml:"TotalFileDayGrowthCount,omitempty" type:"Struct"`
	// The daily increment of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataDayGrowthSize *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize `json:"WarmDataDayGrowthSize,omitempty" xml:"WarmDataDayGrowthSize,omitempty" type:"Struct"`
	// The amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataSize *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize `json:"WarmDataSize,omitempty" xml:"WarmDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataSizeDayGrowthRatio *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio `json:"WarmDataSizeDayGrowthRatio,omitempty" xml:"WarmDataSizeDayGrowthRatio,omitempty" type:"Struct"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetColdDataDayGrowthSize(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.ColdDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetColdDataSize(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.ColdDataSize = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetColdDataSizeDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.ColdDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetEmptyFileCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.EmptyFileCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetEmptyFileCountDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.EmptyFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetEmptyFileDayGrowthCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.EmptyFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetFreezeDataDayGrowthSize(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.FreezeDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetFreezeDataSize(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.FreezeDataSize = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetFreezeDataSizeDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.FreezeDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetHotDataDayGrowthSize(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.HotDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetHotDataSize(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.HotDataSize = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetHotDataSizeDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.HotDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetLargeFileCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.LargeFileCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetLargeFileCountDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.LargeFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetLargeFileDayGrowthCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.LargeFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetMediumFileCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.MediumFileCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetMediumFileCountDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.MediumFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetMediumFileDayGrowthCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.MediumFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetSmallFileCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.SmallFileCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetSmallFileCountDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.SmallFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetSmallFileDayGrowthCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.SmallFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetTinyFileCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.TinyFileCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetTinyFileCountDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.TinyFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetTinyFileDayGrowthCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.TinyFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetTotalDataDayGrowthSize(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.TotalDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetTotalDataSize(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetTotalDataSizeDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.TotalDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetTotalFileCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.TotalFileCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetTotalFileCountDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.TotalFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetTotalFileDayGrowthCount(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.TotalFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetWarmDataDayGrowthSize(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.WarmDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetWarmDataSize(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.WarmDataSize = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetrics) SetWarmDataSizeDayGrowthRatio(v *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) *GetDoctorHDFSDirectoryResponseBodyDataMetrics {
	s.WarmDataSizeDayGrowthRatio = v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of cold data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -182636577752
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 5570958082267
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -0.03
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 15595897
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.005
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 114
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -167683929450
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1231312431
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -0.09
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of hot data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 123154
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 6701531944206
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.1114
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.39
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 2
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 234
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.19
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 176
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12345
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.02
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12345
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 232131
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.003
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of total data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 256482228248
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 62086342083623
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.14
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 51683279
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.02
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 27809
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -64806998319
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 4062349775577
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize) SetValue(v int64) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -0.015
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHDFSDirectoryResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHDFSDirectoryResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorHDFSDirectoryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorHDFSDirectoryResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSDirectoryResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSDirectoryResponse) SetHeaders(v map[string]*string) *GetDoctorHDFSDirectoryResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorHDFSDirectoryResponse) SetStatusCode(v int32) *GetDoctorHDFSDirectoryResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorHDFSDirectoryResponse) SetBody(v *GetDoctorHDFSDirectoryResponseBody) *GetDoctorHDFSDirectoryResponse {
	s.Body = v
	return s
}

type GetDoctorHDFSUGIRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// Set this parameter based on the value of Type.
	//
	// This parameter is required.
	//
	// example:
	//
	// DW
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The filter condition. Valid values:
	//
	// 	- user
	//
	// 	- group
	//
	// This parameter is required.
	//
	// example:
	//
	// user
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
}

func (s GetDoctorHDFSUGIRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSUGIRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSUGIRequest) SetClusterId(v string) *GetDoctorHDFSUGIRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorHDFSUGIRequest) SetDateTime(v string) *GetDoctorHDFSUGIRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorHDFSUGIRequest) SetName(v string) *GetDoctorHDFSUGIRequest {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSUGIRequest) SetRegionId(v string) *GetDoctorHDFSUGIRequest {
	s.RegionId = &v
	return s
}

func (s *GetDoctorHDFSUGIRequest) SetType(v string) *GetDoctorHDFSUGIRequest {
	s.Type = &v
	return s
}

type GetDoctorHDFSUGIResponseBody struct {
	// The results of HDFS analysis.
	Data *GetDoctorHDFSUGIResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorHDFSUGIResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSUGIResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSUGIResponseBody) SetData(v *GetDoctorHDFSUGIResponseBodyData) *GetDoctorHDFSUGIResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorHDFSUGIResponseBody) SetRequestId(v string) *GetDoctorHDFSUGIResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorHDFSUGIResponseBodyData struct {
	// The metric information.
	Metrics *GetDoctorHDFSUGIResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
}

func (s GetDoctorHDFSUGIResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSUGIResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSUGIResponseBodyData) SetMetrics(v *GetDoctorHDFSUGIResponseBodyDataMetrics) *GetDoctorHDFSUGIResponseBodyData {
	s.Metrics = v
	return s
}

type GetDoctorHDFSUGIResponseBodyDataMetrics struct {
	// The total data size.
	TotalDataSize *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	// The total number of directories.
	TotalDirCount *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount `json:"TotalDirCount,omitempty" xml:"TotalDirCount,omitempty" type:"Struct"`
	// The total number of files.
	TotalFileCount *GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount `json:"TotalFileCount,omitempty" xml:"TotalFileCount,omitempty" type:"Struct"`
}

func (s GetDoctorHDFSUGIResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSUGIResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetrics) SetTotalDataSize(v *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) *GetDoctorHDFSUGIResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetrics) SetTotalDirCount(v *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) *GetDoctorHDFSUGIResponseBodyDataMetrics {
	s.TotalDirCount = v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetrics) SetTotalFileCount(v *GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) *GetDoctorHDFSUGIResponseBodyDataMetrics {
	s.TotalFileCount = v
	return s
}

type GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 40440503
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) SetName(v string) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of total dirs
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDirCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) SetDescription(v string) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) SetName(v string) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) SetUnit(v string) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) SetValue(v int64) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 34
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) SetDescription(v string) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) SetName(v string) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) SetUnit(v string) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) SetValue(v int64) *GetDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount {
	s.Value = &v
	return s
}

type GetDoctorHDFSUGIResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorHDFSUGIResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorHDFSUGIResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHDFSUGIResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorHDFSUGIResponse) SetHeaders(v map[string]*string) *GetDoctorHDFSUGIResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorHDFSUGIResponse) SetStatusCode(v int32) *GetDoctorHDFSUGIResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorHDFSUGIResponse) SetBody(v *GetDoctorHDFSUGIResponseBody) *GetDoctorHDFSUGIResponse {
	s.Body = v
	return s
}

type GetDoctorHiveClusterRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetDoctorHiveClusterRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterRequest) SetClusterId(v string) *GetDoctorHiveClusterRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorHiveClusterRequest) SetDateTime(v string) *GetDoctorHiveClusterRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorHiveClusterRequest) SetRegionId(v string) *GetDoctorHiveClusterRequest {
	s.RegionId = &v
	return s
}

type GetDoctorHiveClusterResponseBody struct {
	// The analysis results of the Hive cluster.
	Data *GetDoctorHiveClusterResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorHiveClusterResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBody) SetData(v *GetDoctorHiveClusterResponseBodyData) *GetDoctorHiveClusterResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorHiveClusterResponseBody) SetRequestId(v string) *GetDoctorHiveClusterResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorHiveClusterResponseBodyData struct {
	// The analysis results.
	Analysis *GetDoctorHiveClusterResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The information from the perspective of storage formats.
	Formats []*GetDoctorHiveClusterResponseBodyDataFormats `json:"Formats,omitempty" xml:"Formats,omitempty" type:"Repeated"`
	// The metric information.
	Metrics *GetDoctorHiveClusterResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
}

func (s GetDoctorHiveClusterResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyData) SetAnalysis(v *GetDoctorHiveClusterResponseBodyDataAnalysis) *GetDoctorHiveClusterResponseBodyData {
	s.Analysis = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyData) SetFormats(v []*GetDoctorHiveClusterResponseBodyDataFormats) *GetDoctorHiveClusterResponseBodyData {
	s.Formats = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyData) SetMetrics(v *GetDoctorHiveClusterResponseBodyDataMetrics) *GetDoctorHiveClusterResponseBodyData {
	s.Metrics = v
	return s
}

type GetDoctorHiveClusterResponseBodyDataAnalysis struct {
	// The score for the distribution of files of different sizes stored in the Hive cluster.
	//
	// example:
	//
	// 80
	HiveDistributionScore *int32 `json:"HiveDistributionScore,omitempty" xml:"HiveDistributionScore,omitempty"`
	// The score for the distribution of files stored in different formats in the Hive cluster.
	//
	// example:
	//
	// 80
	HiveFormatScore *int32 `json:"HiveFormatScore,omitempty" xml:"HiveFormatScore,omitempty"`
	// The score for the access frequency of the Hive cluster.
	//
	// example:
	//
	// 80
	HiveFrequencyScore *int32 `json:"HiveFrequencyScore,omitempty" xml:"HiveFrequencyScore,omitempty"`
	// The overall score of the Hive cluster.
	//
	// example:
	//
	// 80
	HiveScore *int32 `json:"HiveScore,omitempty" xml:"HiveScore,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataAnalysis) SetHiveDistributionScore(v int32) *GetDoctorHiveClusterResponseBodyDataAnalysis {
	s.HiveDistributionScore = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataAnalysis) SetHiveFormatScore(v int32) *GetDoctorHiveClusterResponseBodyDataAnalysis {
	s.HiveFormatScore = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataAnalysis) SetHiveFrequencyScore(v int32) *GetDoctorHiveClusterResponseBodyDataAnalysis {
	s.HiveFrequencyScore = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataAnalysis) SetHiveScore(v int32) *GetDoctorHiveClusterResponseBodyDataAnalysis {
	s.HiveScore = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataFormats struct {
	// The name of the storage format.
	//
	// example:
	//
	// TextInputFormat
	FormatName *string `json:"FormatName,omitempty" xml:"FormatName,omitempty"`
	// The proportion of the data in the format.
	//
	// example:
	//
	// 0.5
	FormatRatio *float32 `json:"FormatRatio,omitempty" xml:"FormatRatio,omitempty"`
	// The amount of data in the format.
	//
	// example:
	//
	// 100
	FormatSize *int64 `json:"FormatSize,omitempty" xml:"FormatSize,omitempty"`
	// The unit of the amount of data in the format.
	//
	// example:
	//
	// MB
	FormatSizeUnit *string `json:"FormatSizeUnit,omitempty" xml:"FormatSizeUnit,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataFormats) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataFormats) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataFormats) SetFormatName(v string) *GetDoctorHiveClusterResponseBodyDataFormats {
	s.FormatName = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataFormats) SetFormatRatio(v float32) *GetDoctorHiveClusterResponseBodyDataFormats {
	s.FormatRatio = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataFormats) SetFormatSize(v int64) *GetDoctorHiveClusterResponseBodyDataFormats {
	s.FormatSize = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataFormats) SetFormatSizeUnit(v string) *GetDoctorHiveClusterResponseBodyDataFormats {
	s.FormatSizeUnit = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetrics struct {
	// The daily increment of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataDayGrowthSize *GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize `json:"ColdDataDayGrowthSize,omitempty" xml:"ColdDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataRatio *GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio `json:"ColdDataRatio,omitempty" xml:"ColdDataRatio,omitempty" type:"Struct"`
	// The amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataSize *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize `json:"ColdDataSize,omitempty" xml:"ColdDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataSizeDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio `json:"ColdDataSizeDayGrowthRatio,omitempty" xml:"ColdDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of databases.
	DatabaseCount *GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount `json:"DatabaseCount,omitempty" xml:"DatabaseCount,omitempty" type:"Struct"`
	// The number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCount *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount `json:"EmptyFileCount,omitempty" xml:"EmptyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCountDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio `json:"EmptyFileCountDayGrowthRatio,omitempty" xml:"EmptyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileDayGrowthCount *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount `json:"EmptyFileDayGrowthCount,omitempty" xml:"EmptyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of empty files. Empty files are those with a size of 0 MB.
	EmptyFileRatio *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio `json:"EmptyFileRatio,omitempty" xml:"EmptyFileRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataDayGrowthSize *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize `json:"FreezeDataDayGrowthSize,omitempty" xml:"FreezeDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataRatio *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio `json:"FreezeDataRatio,omitempty" xml:"FreezeDataRatio,omitempty" type:"Struct"`
	// The amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSize *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize `json:"FreezeDataSize,omitempty" xml:"FreezeDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSizeDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio `json:"FreezeDataSizeDayGrowthRatio,omitempty" xml:"FreezeDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataDayGrowthSize *GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize `json:"HotDataDayGrowthSize,omitempty" xml:"HotDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataRatio *GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio `json:"HotDataRatio,omitempty" xml:"HotDataRatio,omitempty" type:"Struct"`
	// The amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataSize *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize `json:"HotDataSize,omitempty" xml:"HotDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataSizeDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio `json:"HotDataSizeDayGrowthRatio,omitempty" xml:"HotDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCount *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount `json:"LargeFileCount,omitempty" xml:"LargeFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCountDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio `json:"LargeFileCountDayGrowthRatio,omitempty" xml:"LargeFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileDayGrowthCount *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount `json:"LargeFileDayGrowthCount,omitempty" xml:"LargeFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of large files. Large files are those with a size greater than 1 GB.
	LargeFileRatio *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio `json:"LargeFileRatio,omitempty" xml:"LargeFileRatio,omitempty" type:"Struct"`
	// The number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCount *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount `json:"MediumFileCount,omitempty" xml:"MediumFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCountDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio `json:"MediumFileCountDayGrowthRatio,omitempty" xml:"MediumFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileDayGrowthCount *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount `json:"MediumFileDayGrowthCount,omitempty" xml:"MediumFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileRatio *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio `json:"MediumFileRatio,omitempty" xml:"MediumFileRatio,omitempty" type:"Struct"`
	// The number of partitions.
	PartitionNum *GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum `json:"PartitionNum,omitempty" xml:"PartitionNum,omitempty" type:"Struct"`
	// The number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCount *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount `json:"SmallFileCount,omitempty" xml:"SmallFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCountDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio `json:"SmallFileCountDayGrowthRatio,omitempty" xml:"SmallFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileDayGrowthCount *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount `json:"SmallFileDayGrowthCount,omitempty" xml:"SmallFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileRatio *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio `json:"SmallFileRatio,omitempty" xml:"SmallFileRatio,omitempty" type:"Struct"`
	// The number of tables.
	TableCount *GetDoctorHiveClusterResponseBodyDataMetricsTableCount `json:"TableCount,omitempty" xml:"TableCount,omitempty" type:"Struct"`
	// The number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCount *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount `json:"TinyFileCount,omitempty" xml:"TinyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCountDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio `json:"TinyFileCountDayGrowthRatio,omitempty" xml:"TinyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileDayGrowthCount *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount `json:"TinyFileDayGrowthCount,omitempty" xml:"TinyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileRatio *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio `json:"TinyFileRatio,omitempty" xml:"TinyFileRatio,omitempty" type:"Struct"`
	// The daily incremental of the amount of total data.
	TotalDataDayGrowthSize *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize `json:"TotalDataDayGrowthSize,omitempty" xml:"TotalDataDayGrowthSize,omitempty" type:"Struct"`
	// The total amount of data.
	TotalDataSize *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total data volume.
	TotalDataSizeDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio `json:"TotalDataSizeDayGrowthRatio,omitempty" xml:"TotalDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The total number of files.
	TotalFileCount *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount `json:"TotalFileCount,omitempty" xml:"TotalFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total number of files.
	TotalFileCountDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio `json:"TotalFileCountDayGrowthRatio,omitempty" xml:"TotalFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the total number of files.
	TotalFileDayGrowthCount *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount `json:"TotalFileDayGrowthCount,omitempty" xml:"TotalFileDayGrowthCount,omitempty" type:"Struct"`
	// The daily increment of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataDayGrowthSize *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize `json:"WarmDataDayGrowthSize,omitempty" xml:"WarmDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataRatio *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio `json:"WarmDataRatio,omitempty" xml:"WarmDataRatio,omitempty" type:"Struct"`
	// The amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataSize *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize `json:"WarmDataSize,omitempty" xml:"WarmDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataSizeDayGrowthRatio *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio `json:"WarmDataSizeDayGrowthRatio,omitempty" xml:"WarmDataSizeDayGrowthRatio,omitempty" type:"Struct"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetColdDataDayGrowthSize(v *GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.ColdDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetColdDataRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.ColdDataRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetColdDataSize(v *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.ColdDataSize = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetColdDataSizeDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.ColdDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetDatabaseCount(v *GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.DatabaseCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetEmptyFileCount(v *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.EmptyFileCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetEmptyFileCountDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.EmptyFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetEmptyFileDayGrowthCount(v *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.EmptyFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetEmptyFileRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.EmptyFileRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetFreezeDataDayGrowthSize(v *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.FreezeDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetFreezeDataRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.FreezeDataRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetFreezeDataSize(v *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.FreezeDataSize = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetFreezeDataSizeDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.FreezeDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetHotDataDayGrowthSize(v *GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.HotDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetHotDataRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.HotDataRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetHotDataSize(v *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.HotDataSize = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetHotDataSizeDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.HotDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetLargeFileCount(v *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.LargeFileCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetLargeFileCountDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.LargeFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetLargeFileDayGrowthCount(v *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.LargeFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetLargeFileRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.LargeFileRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetMediumFileCount(v *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.MediumFileCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetMediumFileCountDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.MediumFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetMediumFileDayGrowthCount(v *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.MediumFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetMediumFileRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.MediumFileRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetPartitionNum(v *GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.PartitionNum = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetSmallFileCount(v *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.SmallFileCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetSmallFileCountDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.SmallFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetSmallFileDayGrowthCount(v *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.SmallFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetSmallFileRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.SmallFileRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTableCount(v *GetDoctorHiveClusterResponseBodyDataMetricsTableCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TableCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTinyFileCount(v *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TinyFileCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTinyFileCountDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TinyFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTinyFileDayGrowthCount(v *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TinyFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTinyFileRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TinyFileRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTotalDataDayGrowthSize(v *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TotalDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTotalDataSize(v *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTotalDataSizeDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TotalDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTotalFileCount(v *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TotalFileCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTotalFileCountDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TotalFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetTotalFileDayGrowthCount(v *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.TotalFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetWarmDataDayGrowthSize(v *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.WarmDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetWarmDataRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.WarmDataRatio = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetWarmDataSize(v *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.WarmDataSize = v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetrics) SetWarmDataSizeDayGrowthRatio(v *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) *GetDoctorHiveClusterResponseBodyDataMetrics {
	s.WarmDataSizeDayGrowthRatio = v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of cold data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Cold data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of cold files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of databases
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// databaseCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsDatabaseCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsEmptyFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.12
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of freeze files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of hot data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Hot data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of hot files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsLargeFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 178
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsMediumFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of partitions
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// partitionNum
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsPartitionNum {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsSmallFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTableCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tables
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tableCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTableCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTableCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTableCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTableCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTableCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTableCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTableCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTableCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTableCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsTableCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// day growth count of tiny files
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsTinyFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of total data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 27800
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -100
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of warm files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize) SetValue(v int64) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveClusterResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveClusterResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorHiveClusterResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorHiveClusterResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveClusterResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveClusterResponse) SetHeaders(v map[string]*string) *GetDoctorHiveClusterResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorHiveClusterResponse) SetStatusCode(v int32) *GetDoctorHiveClusterResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorHiveClusterResponse) SetBody(v *GetDoctorHiveClusterResponseBody) *GetDoctorHiveClusterResponse {
	s.Body = v
	return s
}

type GetDoctorHiveDatabaseRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The database name.
	//
	// This parameter is required.
	//
	// example:
	//
	// db1
	DatabaseName *string `json:"DatabaseName,omitempty" xml:"DatabaseName,omitempty"`
	// The query date.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetDoctorHiveDatabaseRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseRequest) SetClusterId(v string) *GetDoctorHiveDatabaseRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorHiveDatabaseRequest) SetDatabaseName(v string) *GetDoctorHiveDatabaseRequest {
	s.DatabaseName = &v
	return s
}

func (s *GetDoctorHiveDatabaseRequest) SetDateTime(v string) *GetDoctorHiveDatabaseRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorHiveDatabaseRequest) SetRegionId(v string) *GetDoctorHiveDatabaseRequest {
	s.RegionId = &v
	return s
}

type GetDoctorHiveDatabaseResponseBody struct {
	// The analysis results of the Hive database.
	Data *GetDoctorHiveDatabaseResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBody) SetData(v *GetDoctorHiveDatabaseResponseBodyData) *GetDoctorHiveDatabaseResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBody) SetRequestId(v string) *GetDoctorHiveDatabaseResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyData struct {
	// The analysis results.
	Analysis *GetDoctorHiveDatabaseResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The information from the perspective of storage formats.
	Formats []*GetDoctorHiveDatabaseResponseBodyDataFormats `json:"Formats,omitempty" xml:"Formats,omitempty" type:"Repeated"`
	// The metric information.
	Metrics *GetDoctorHiveDatabaseResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
}

func (s GetDoctorHiveDatabaseResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyData) SetAnalysis(v *GetDoctorHiveDatabaseResponseBodyDataAnalysis) *GetDoctorHiveDatabaseResponseBodyData {
	s.Analysis = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyData) SetFormats(v []*GetDoctorHiveDatabaseResponseBodyDataFormats) *GetDoctorHiveDatabaseResponseBodyData {
	s.Formats = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyData) SetMetrics(v *GetDoctorHiveDatabaseResponseBodyDataMetrics) *GetDoctorHiveDatabaseResponseBodyData {
	s.Metrics = v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataAnalysis struct {
	// The score for the file sizes of the Hive database.
	//
	// example:
	//
	// 85
	HiveDistributionScore *int32 `json:"HiveDistributionScore,omitempty" xml:"HiveDistributionScore,omitempty"`
	// The score for the data formats of the Hive database.
	//
	// example:
	//
	// 85
	HiveFormatScore *int32 `json:"HiveFormatScore,omitempty" xml:"HiveFormatScore,omitempty"`
	// The score for the access frequency of the Hive database.
	//
	// example:
	//
	// 85
	HiveFrequencyScore *int32 `json:"HiveFrequencyScore,omitempty" xml:"HiveFrequencyScore,omitempty"`
	// The overall score of the Hive database.
	//
	// example:
	//
	// 85
	HiveScore *int32 `json:"HiveScore,omitempty" xml:"HiveScore,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataAnalysis) SetHiveDistributionScore(v int32) *GetDoctorHiveDatabaseResponseBodyDataAnalysis {
	s.HiveDistributionScore = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataAnalysis) SetHiveFormatScore(v int32) *GetDoctorHiveDatabaseResponseBodyDataAnalysis {
	s.HiveFormatScore = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataAnalysis) SetHiveFrequencyScore(v int32) *GetDoctorHiveDatabaseResponseBodyDataAnalysis {
	s.HiveFrequencyScore = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataAnalysis) SetHiveScore(v int32) *GetDoctorHiveDatabaseResponseBodyDataAnalysis {
	s.HiveScore = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataFormats struct {
	// The daily increment of data in the format.
	//
	// example:
	//
	// 1000
	FormatDayGrowthSize *int64 `json:"FormatDayGrowthSize,omitempty" xml:"FormatDayGrowthSize,omitempty"`
	// The name of the storage format.
	//
	// example:
	//
	// TextInputFormat
	FormatName *string `json:"FormatName,omitempty" xml:"FormatName,omitempty"`
	// The proportion of the data in the format.
	//
	// example:
	//
	// 0.5
	FormatRatio *float32 `json:"FormatRatio,omitempty" xml:"FormatRatio,omitempty"`
	// The amount of data in the format.
	//
	// example:
	//
	// 1000
	FormatSize *int64 `json:"FormatSize,omitempty" xml:"FormatSize,omitempty"`
	// The day-to-day growth rate of data in the format.
	//
	// example:
	//
	// 0.5
	FormatSizeDayGrowthRatio *float32 `json:"FormatSizeDayGrowthRatio,omitempty" xml:"FormatSizeDayGrowthRatio,omitempty"`
	// The unit of the amount of data in the format.
	//
	// example:
	//
	// MB
	FormatSizeUnit *string `json:"FormatSizeUnit,omitempty" xml:"FormatSizeUnit,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataFormats) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataFormats) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataFormats) SetFormatDayGrowthSize(v int64) *GetDoctorHiveDatabaseResponseBodyDataFormats {
	s.FormatDayGrowthSize = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataFormats) SetFormatName(v string) *GetDoctorHiveDatabaseResponseBodyDataFormats {
	s.FormatName = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataFormats) SetFormatRatio(v float32) *GetDoctorHiveDatabaseResponseBodyDataFormats {
	s.FormatRatio = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataFormats) SetFormatSize(v int64) *GetDoctorHiveDatabaseResponseBodyDataFormats {
	s.FormatSize = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataFormats) SetFormatSizeDayGrowthRatio(v float32) *GetDoctorHiveDatabaseResponseBodyDataFormats {
	s.FormatSizeDayGrowthRatio = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataFormats) SetFormatSizeUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataFormats {
	s.FormatSizeUnit = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetrics struct {
	// The daily increment of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataDayGrowthSize *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize `json:"ColdDataDayGrowthSize,omitempty" xml:"ColdDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio `json:"ColdDataRatio,omitempty" xml:"ColdDataRatio,omitempty" type:"Struct"`
	// The amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataSize *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize `json:"ColdDataSize,omitempty" xml:"ColdDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataSizeDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio `json:"ColdDataSizeDayGrowthRatio,omitempty" xml:"ColdDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCount *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount `json:"EmptyFileCount,omitempty" xml:"EmptyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCountDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio `json:"EmptyFileCountDayGrowthRatio,omitempty" xml:"EmptyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileDayGrowthCount *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount `json:"EmptyFileDayGrowthCount,omitempty" xml:"EmptyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of empty files. Empty files are those with a size of 0 MB.
	EmptyFileRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio `json:"EmptyFileRatio,omitempty" xml:"EmptyFileRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataDayGrowthSize *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize `json:"FreezeDataDayGrowthSize,omitempty" xml:"FreezeDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio `json:"FreezeDataRatio,omitempty" xml:"FreezeDataRatio,omitempty" type:"Struct"`
	// The amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSize *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize `json:"FreezeDataSize,omitempty" xml:"FreezeDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSizeDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio `json:"FreezeDataSizeDayGrowthRatio,omitempty" xml:"FreezeDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataDayGrowthSize *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize `json:"HotDataDayGrowthSize,omitempty" xml:"HotDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio `json:"HotDataRatio,omitempty" xml:"HotDataRatio,omitempty" type:"Struct"`
	// The amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataSize *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize `json:"HotDataSize,omitempty" xml:"HotDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataSizeDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio `json:"HotDataSizeDayGrowthRatio,omitempty" xml:"HotDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCount *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount `json:"LargeFileCount,omitempty" xml:"LargeFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCountDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio `json:"LargeFileCountDayGrowthRatio,omitempty" xml:"LargeFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileDayGrowthCount *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount `json:"LargeFileDayGrowthCount,omitempty" xml:"LargeFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of large files. Large files are those with a size greater than 1 GB.
	LargeFileRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio `json:"LargeFileRatio,omitempty" xml:"LargeFileRatio,omitempty" type:"Struct"`
	// The number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCount *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount `json:"MediumFileCount,omitempty" xml:"MediumFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCountDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio `json:"MediumFileCountDayGrowthRatio,omitempty" xml:"MediumFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileDayGrowthCount *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount `json:"MediumFileDayGrowthCount,omitempty" xml:"MediumFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio `json:"MediumFileRatio,omitempty" xml:"MediumFileRatio,omitempty" type:"Struct"`
	// The number of partitions.
	PartitionNum *GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum `json:"PartitionNum,omitempty" xml:"PartitionNum,omitempty" type:"Struct"`
	// The number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCount *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount `json:"SmallFileCount,omitempty" xml:"SmallFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCountDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio `json:"SmallFileCountDayGrowthRatio,omitempty" xml:"SmallFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileDayGrowthCount *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount `json:"SmallFileDayGrowthCount,omitempty" xml:"SmallFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio `json:"SmallFileRatio,omitempty" xml:"SmallFileRatio,omitempty" type:"Struct"`
	// The number of tables.
	TableCount *GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount `json:"TableCount,omitempty" xml:"TableCount,omitempty" type:"Struct"`
	// The number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCount *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount `json:"TinyFileCount,omitempty" xml:"TinyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCountDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio `json:"TinyFileCountDayGrowthRatio,omitempty" xml:"TinyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileDayGrowthCount *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount `json:"TinyFileDayGrowthCount,omitempty" xml:"TinyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio `json:"TinyFileRatio,omitempty" xml:"TinyFileRatio,omitempty" type:"Struct"`
	// The daily incremental of the total amount of data.
	TotalDataDayGrowthSize *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize `json:"TotalDataDayGrowthSize,omitempty" xml:"TotalDataDayGrowthSize,omitempty" type:"Struct"`
	// The total amount of data.
	TotalDataSize *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total data volume.
	TotalDataSizeDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio `json:"TotalDataSizeDayGrowthRatio,omitempty" xml:"TotalDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The total number of files.
	TotalFileCount *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount `json:"TotalFileCount,omitempty" xml:"TotalFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total number of files.
	TotalFileCountDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio `json:"TotalFileCountDayGrowthRatio,omitempty" xml:"TotalFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the total number of files.
	TotalFileDayGrowthCount *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount `json:"TotalFileDayGrowthCount,omitempty" xml:"TotalFileDayGrowthCount,omitempty" type:"Struct"`
	// The daily increment of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataDayGrowthSize *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize `json:"WarmDataDayGrowthSize,omitempty" xml:"WarmDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio `json:"WarmDataRatio,omitempty" xml:"WarmDataRatio,omitempty" type:"Struct"`
	// The amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataSize *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize `json:"WarmDataSize,omitempty" xml:"WarmDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataSizeDayGrowthRatio *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio `json:"WarmDataSizeDayGrowthRatio,omitempty" xml:"WarmDataSizeDayGrowthRatio,omitempty" type:"Struct"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetColdDataDayGrowthSize(v *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.ColdDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetColdDataRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.ColdDataRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetColdDataSize(v *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.ColdDataSize = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetColdDataSizeDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.ColdDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetEmptyFileCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.EmptyFileCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetEmptyFileCountDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.EmptyFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetEmptyFileDayGrowthCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.EmptyFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetEmptyFileRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.EmptyFileRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetFreezeDataDayGrowthSize(v *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.FreezeDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetFreezeDataRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.FreezeDataRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetFreezeDataSize(v *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.FreezeDataSize = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetFreezeDataSizeDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.FreezeDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetHotDataDayGrowthSize(v *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.HotDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetHotDataRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.HotDataRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetHotDataSize(v *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.HotDataSize = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetHotDataSizeDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.HotDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetLargeFileCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.LargeFileCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetLargeFileCountDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.LargeFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetLargeFileDayGrowthCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.LargeFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetLargeFileRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.LargeFileRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetMediumFileCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.MediumFileCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetMediumFileCountDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.MediumFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetMediumFileDayGrowthCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.MediumFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetMediumFileRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.MediumFileRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetPartitionNum(v *GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.PartitionNum = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetSmallFileCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.SmallFileCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetSmallFileCountDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.SmallFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetSmallFileDayGrowthCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.SmallFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetSmallFileRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.SmallFileRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTableCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TableCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTinyFileCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TinyFileCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTinyFileCountDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TinyFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTinyFileDayGrowthCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TinyFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTinyFileRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TinyFileRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTotalDataDayGrowthSize(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TotalDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTotalDataSize(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTotalDataSizeDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TotalDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTotalFileCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TotalFileCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTotalFileCountDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TotalFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetTotalFileDayGrowthCount(v *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.TotalFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetWarmDataDayGrowthSize(v *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.WarmDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetWarmDataRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.WarmDataRatio = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetWarmDataSize(v *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.WarmDataSize = v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetrics) SetWarmDataSizeDayGrowthRatio(v *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) *GetDoctorHiveDatabaseResponseBodyDataMetrics {
	s.WarmDataSizeDayGrowthRatio = v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of cold data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Cold data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of cold files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsEmptyFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of freeze files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of hot data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Hot data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of hot files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsLargeFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsMediumFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of partitions
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// partitionNum
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsPartitionNum {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsSmallFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tables
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tableCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsTableCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsTinyFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of total data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of warm files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize) SetValue(v int64) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveDatabaseResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveDatabaseResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorHiveDatabaseResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorHiveDatabaseResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveDatabaseResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveDatabaseResponse) SetHeaders(v map[string]*string) *GetDoctorHiveDatabaseResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorHiveDatabaseResponse) SetStatusCode(v int32) *GetDoctorHiveDatabaseResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorHiveDatabaseResponse) SetBody(v *GetDoctorHiveDatabaseResponseBody) *GetDoctorHiveDatabaseResponse {
	s.Body = v
	return s
}

type GetDoctorHiveTableRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The table name. The table name must follow the rule in Hive. A name in the {database name.table identifier} format uniquely identifies a table.
	//
	// This parameter is required.
	//
	// example:
	//
	// dw.dwd_creta_service_order_long_renew_long_da
	TableName *string `json:"TableName,omitempty" xml:"TableName,omitempty"`
}

func (s GetDoctorHiveTableRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableRequest) SetClusterId(v string) *GetDoctorHiveTableRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorHiveTableRequest) SetDateTime(v string) *GetDoctorHiveTableRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorHiveTableRequest) SetRegionId(v string) *GetDoctorHiveTableRequest {
	s.RegionId = &v
	return s
}

func (s *GetDoctorHiveTableRequest) SetTableName(v string) *GetDoctorHiveTableRequest {
	s.TableName = &v
	return s
}

type GetDoctorHiveTableResponseBody struct {
	// The analysis results of the Hive table.
	Data *GetDoctorHiveTableResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorHiveTableResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBody) SetData(v *GetDoctorHiveTableResponseBodyData) *GetDoctorHiveTableResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorHiveTableResponseBody) SetRequestId(v string) *GetDoctorHiveTableResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorHiveTableResponseBodyData struct {
	// The analysis results.
	Analysis *GetDoctorHiveTableResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The information from the perspective of formats.
	Formats []*GetDoctorHiveTableResponseBodyDataFormats `json:"Formats,omitempty" xml:"Formats,omitempty" type:"Repeated"`
	// The metric information.
	Metrics *GetDoctorHiveTableResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// The owner.
	//
	// example:
	//
	// DW
	Owner *string `json:"Owner,omitempty" xml:"Owner,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyData) SetAnalysis(v *GetDoctorHiveTableResponseBodyDataAnalysis) *GetDoctorHiveTableResponseBodyData {
	s.Analysis = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyData) SetFormats(v []*GetDoctorHiveTableResponseBodyDataFormats) *GetDoctorHiveTableResponseBodyData {
	s.Formats = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyData) SetMetrics(v *GetDoctorHiveTableResponseBodyDataMetrics) *GetDoctorHiveTableResponseBodyData {
	s.Metrics = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyData) SetOwner(v string) *GetDoctorHiveTableResponseBodyData {
	s.Owner = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataAnalysis struct {
	// The score for the distribution of files of different sizes stored in the Hive table.
	//
	// example:
	//
	// 80
	HiveDistributionScore *int32 `json:"HiveDistributionScore,omitempty" xml:"HiveDistributionScore,omitempty"`
	// The score for the distribution of files stored in different formats in the Hive table.
	//
	// example:
	//
	// 60
	HiveFormatScore *int32 `json:"HiveFormatScore,omitempty" xml:"HiveFormatScore,omitempty"`
	// The score for the access frequency of the Hive table.
	//
	// example:
	//
	// 70
	HiveFrequencyScore *int32 `json:"HiveFrequencyScore,omitempty" xml:"HiveFrequencyScore,omitempty"`
	// The overall score of the Hive table.
	//
	// example:
	//
	// 80
	HiveScore *int32 `json:"HiveScore,omitempty" xml:"HiveScore,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataAnalysis) SetHiveDistributionScore(v int32) *GetDoctorHiveTableResponseBodyDataAnalysis {
	s.HiveDistributionScore = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataAnalysis) SetHiveFormatScore(v int32) *GetDoctorHiveTableResponseBodyDataAnalysis {
	s.HiveFormatScore = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataAnalysis) SetHiveFrequencyScore(v int32) *GetDoctorHiveTableResponseBodyDataAnalysis {
	s.HiveFrequencyScore = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataAnalysis) SetHiveScore(v int32) *GetDoctorHiveTableResponseBodyDataAnalysis {
	s.HiveScore = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataFormats struct {
	// The daily amount increment of the data in a specific storage format.
	//
	// example:
	//
	// 1232124
	FormatDayGrowthSize *int64 `json:"FormatDayGrowthSize,omitempty" xml:"FormatDayGrowthSize,omitempty"`
	// The name of the storage format.
	//
	// example:
	//
	// TextInputFormat
	FormatName *string `json:"FormatName,omitempty" xml:"FormatName,omitempty"`
	// The ratio of the data in a specific storage format.
	//
	// example:
	//
	// 0.23
	FormatRatio *float32 `json:"FormatRatio,omitempty" xml:"FormatRatio,omitempty"`
	// The size of storage format-specific data.
	//
	// example:
	//
	// 506930200
	FormatSize *int64 `json:"FormatSize,omitempty" xml:"FormatSize,omitempty"`
	// The day-to-day growth rate of the amount of the data in a specific storage format.
	//
	// example:
	//
	// 0.04
	FormatSizeDayGrowthRatio *float32 `json:"FormatSizeDayGrowthRatio,omitempty" xml:"FormatSizeDayGrowthRatio,omitempty"`
	// The unit of the data size.
	//
	// example:
	//
	// MB
	FormatSizeUnit *string `json:"FormatSizeUnit,omitempty" xml:"FormatSizeUnit,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataFormats) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataFormats) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataFormats) SetFormatDayGrowthSize(v int64) *GetDoctorHiveTableResponseBodyDataFormats {
	s.FormatDayGrowthSize = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataFormats) SetFormatName(v string) *GetDoctorHiveTableResponseBodyDataFormats {
	s.FormatName = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataFormats) SetFormatRatio(v float32) *GetDoctorHiveTableResponseBodyDataFormats {
	s.FormatRatio = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataFormats) SetFormatSize(v int64) *GetDoctorHiveTableResponseBodyDataFormats {
	s.FormatSize = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataFormats) SetFormatSizeDayGrowthRatio(v float32) *GetDoctorHiveTableResponseBodyDataFormats {
	s.FormatSizeDayGrowthRatio = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataFormats) SetFormatSizeUnit(v string) *GetDoctorHiveTableResponseBodyDataFormats {
	s.FormatSizeUnit = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetrics struct {
	// The daily increment of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataDayGrowthSize *GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize `json:"ColdDataDayGrowthSize,omitempty" xml:"ColdDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataRatio *GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio `json:"ColdDataRatio,omitempty" xml:"ColdDataRatio,omitempty" type:"Struct"`
	// The amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataSize *GetDoctorHiveTableResponseBodyDataMetricsColdDataSize `json:"ColdDataSize,omitempty" xml:"ColdDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataSizeDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio `json:"ColdDataSizeDayGrowthRatio,omitempty" xml:"ColdDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCount *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount `json:"EmptyFileCount,omitempty" xml:"EmptyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCountDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio `json:"EmptyFileCountDayGrowthRatio,omitempty" xml:"EmptyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileDayGrowthCount *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount `json:"EmptyFileDayGrowthCount,omitempty" xml:"EmptyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of empty files. Empty files are those with a size of 0 MB.
	EmptyFileRatio *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio `json:"EmptyFileRatio,omitempty" xml:"EmptyFileRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataDayGrowthSize *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize `json:"FreezeDataDayGrowthSize,omitempty" xml:"FreezeDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataRatio *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio `json:"FreezeDataRatio,omitempty" xml:"FreezeDataRatio,omitempty" type:"Struct"`
	// The amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSize *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize `json:"FreezeDataSize,omitempty" xml:"FreezeDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSizeDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio `json:"FreezeDataSizeDayGrowthRatio,omitempty" xml:"FreezeDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataDayGrowthSize *GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize `json:"HotDataDayGrowthSize,omitempty" xml:"HotDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataRatio *GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio `json:"HotDataRatio,omitempty" xml:"HotDataRatio,omitempty" type:"Struct"`
	// The amount of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataSize *GetDoctorHiveTableResponseBodyDataMetricsHotDataSize `json:"HotDataSize,omitempty" xml:"HotDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataSizeDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio `json:"HotDataSizeDayGrowthRatio,omitempty" xml:"HotDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCount *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount `json:"LargeFileCount,omitempty" xml:"LargeFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCountDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio `json:"LargeFileCountDayGrowthRatio,omitempty" xml:"LargeFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileDayGrowthCount *GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount `json:"LargeFileDayGrowthCount,omitempty" xml:"LargeFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of large files. Large files are those with a size greater than 1 GB.
	LargeFileRatio *GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio `json:"LargeFileRatio,omitempty" xml:"LargeFileRatio,omitempty" type:"Struct"`
	// The number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCount *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount `json:"MediumFileCount,omitempty" xml:"MediumFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCountDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio `json:"MediumFileCountDayGrowthRatio,omitempty" xml:"MediumFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileDayGrowthCount *GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount `json:"MediumFileDayGrowthCount,omitempty" xml:"MediumFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileRatio *GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio `json:"MediumFileRatio,omitempty" xml:"MediumFileRatio,omitempty" type:"Struct"`
	// The number of partitions.
	PartitionNum *GetDoctorHiveTableResponseBodyDataMetricsPartitionNum `json:"PartitionNum,omitempty" xml:"PartitionNum,omitempty" type:"Struct"`
	// The number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCount *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount `json:"SmallFileCount,omitempty" xml:"SmallFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCountDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio `json:"SmallFileCountDayGrowthRatio,omitempty" xml:"SmallFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileDayGrowthCount *GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount `json:"SmallFileDayGrowthCount,omitempty" xml:"SmallFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileRatio *GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio `json:"SmallFileRatio,omitempty" xml:"SmallFileRatio,omitempty" type:"Struct"`
	// The number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCount *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount `json:"TinyFileCount,omitempty" xml:"TinyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCountDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio `json:"TinyFileCountDayGrowthRatio,omitempty" xml:"TinyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileDayGrowthCount *GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount `json:"TinyFileDayGrowthCount,omitempty" xml:"TinyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileRatio *GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio `json:"TinyFileRatio,omitempty" xml:"TinyFileRatio,omitempty" type:"Struct"`
	// The daily incremental of the total data volume.
	TotalDataDayGrowthSize *GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize `json:"TotalDataDayGrowthSize,omitempty" xml:"TotalDataDayGrowthSize,omitempty" type:"Struct"`
	// The total amount of data.
	TotalDataSize *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total data volume.
	TotalDataSizeDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio `json:"TotalDataSizeDayGrowthRatio,omitempty" xml:"TotalDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The total number of files.
	TotalFileCount *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount `json:"TotalFileCount,omitempty" xml:"TotalFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total number of files.
	TotalFileCountDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio `json:"TotalFileCountDayGrowthRatio,omitempty" xml:"TotalFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the total number of files.
	TotalFileDayGrowthCount *GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount `json:"TotalFileDayGrowthCount,omitempty" xml:"TotalFileDayGrowthCount,omitempty" type:"Struct"`
	// The daily increment of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataDayGrowthSize *GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize `json:"WarmDataDayGrowthSize,omitempty" xml:"WarmDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataRatio *GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio `json:"WarmDataRatio,omitempty" xml:"WarmDataRatio,omitempty" type:"Struct"`
	// The amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataSize *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize `json:"WarmDataSize,omitempty" xml:"WarmDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataSizeDayGrowthRatio *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio `json:"WarmDataSizeDayGrowthRatio,omitempty" xml:"WarmDataSizeDayGrowthRatio,omitempty" type:"Struct"`
}

func (s GetDoctorHiveTableResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetColdDataDayGrowthSize(v *GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.ColdDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetColdDataRatio(v *GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.ColdDataRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetColdDataSize(v *GetDoctorHiveTableResponseBodyDataMetricsColdDataSize) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.ColdDataSize = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetColdDataSizeDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.ColdDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetEmptyFileCount(v *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.EmptyFileCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetEmptyFileCountDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.EmptyFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetEmptyFileDayGrowthCount(v *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.EmptyFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetEmptyFileRatio(v *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.EmptyFileRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetFreezeDataDayGrowthSize(v *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.FreezeDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetFreezeDataRatio(v *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.FreezeDataRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetFreezeDataSize(v *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.FreezeDataSize = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetFreezeDataSizeDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.FreezeDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetHotDataDayGrowthSize(v *GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.HotDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetHotDataRatio(v *GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.HotDataRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetHotDataSize(v *GetDoctorHiveTableResponseBodyDataMetricsHotDataSize) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.HotDataSize = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetHotDataSizeDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.HotDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetLargeFileCount(v *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.LargeFileCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetLargeFileCountDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.LargeFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetLargeFileDayGrowthCount(v *GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.LargeFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetLargeFileRatio(v *GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.LargeFileRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetMediumFileCount(v *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.MediumFileCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetMediumFileCountDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.MediumFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetMediumFileDayGrowthCount(v *GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.MediumFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetMediumFileRatio(v *GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.MediumFileRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetPartitionNum(v *GetDoctorHiveTableResponseBodyDataMetricsPartitionNum) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.PartitionNum = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetSmallFileCount(v *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.SmallFileCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetSmallFileCountDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.SmallFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetSmallFileDayGrowthCount(v *GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.SmallFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetSmallFileRatio(v *GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.SmallFileRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetTinyFileCount(v *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.TinyFileCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetTinyFileCountDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.TinyFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetTinyFileDayGrowthCount(v *GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.TinyFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetTinyFileRatio(v *GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.TinyFileRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetTotalDataDayGrowthSize(v *GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.TotalDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetTotalDataSize(v *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetTotalDataSizeDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.TotalDataSizeDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetTotalFileCount(v *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.TotalFileCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetTotalFileCountDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.TotalFileCountDayGrowthRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetTotalFileDayGrowthCount(v *GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.TotalFileDayGrowthCount = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetWarmDataDayGrowthSize(v *GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.WarmDataDayGrowthSize = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetWarmDataRatio(v *GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.WarmDataRatio = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetWarmDataSize(v *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.WarmDataSize = v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetrics) SetWarmDataSizeDayGrowthRatio(v *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) *GetDoctorHiveTableResponseBodyDataMetrics {
	s.WarmDataSizeDayGrowthRatio = v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of cold data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 217715
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Cold data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsColdDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsColdDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 217715
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsColdDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsColdDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataSize) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataSize) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataSize) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataSize) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsColdDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 3123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -20
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsEmptyFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 33229309
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.98
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 33229309
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of hot data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 203431
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Hot data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsHotDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsHotDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 203431
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsHotDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsHotDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataSize) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataSize) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataSize) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataSize) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsHotDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 40
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.02
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsLargeFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 5
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 20
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.80
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsMediumFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsPartitionNum struct {
	// The description of the metric.
	//
	// example:
	//
	// number of partitions
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// partitionNum
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 441
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsPartitionNum) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsPartitionNum) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsPartitionNum) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsPartitionNum {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsPartitionNum) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsPartitionNum {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsPartitionNum) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsPartitionNum {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsPartitionNum) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsPartitionNum {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// "“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 18
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 18
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.04
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsSmallFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 451
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.04
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 482
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.96
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsTinyFileRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of total data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 33800296
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 33800296
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 100
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 149841
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.1
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 14981
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize) SetValue(v int64) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSize {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetDescription(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetName(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetUnit(v string) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetValue(v float32) *GetDoctorHiveTableResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type GetDoctorHiveTableResponse struct {
	Headers    map[string]*string              `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                          `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorHiveTableResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorHiveTableResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorHiveTableResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorHiveTableResponse) SetHeaders(v map[string]*string) *GetDoctorHiveTableResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorHiveTableResponse) SetStatusCode(v int32) *GetDoctorHiveTableResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorHiveTableResponse) SetBody(v *GetDoctorHiveTableResponseBody) *GetDoctorHiveTableResponse {
	s.Body = v
	return s
}

type GetDoctorJobRequest struct {
	// The ID of the job that is submitted to YARN.
	//
	// This parameter is required.
	//
	// example:
	//
	// application_1542620905989_****
	AppId *string `json:"AppId,omitempty" xml:"AppId,omitempty"`
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetDoctorJobRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorJobRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorJobRequest) SetAppId(v string) *GetDoctorJobRequest {
	s.AppId = &v
	return s
}

func (s *GetDoctorJobRequest) SetClusterId(v string) *GetDoctorJobRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorJobRequest) SetRegionId(v string) *GetDoctorJobRequest {
	s.RegionId = &v
	return s
}

type GetDoctorJobResponseBody struct {
	// The information about the job.
	Data *GetDoctorJobResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorJobResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorJobResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorJobResponseBody) SetData(v *GetDoctorJobResponseBodyData) *GetDoctorJobResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorJobResponseBody) SetRequestId(v string) *GetDoctorJobResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorJobResponseBodyData struct {
	// The ID of the job that was submitted to YARN.
	//
	// example:
	//
	// application_1542620905989_****
	AppId *string `json:"AppId,omitempty" xml:"AppId,omitempty"`
	// The name of the job.
	//
	// example:
	//
	// CREATE TABLE test...ranks=1 (Stage-1)
	AppName *string `json:"AppName,omitempty" xml:"AppName,omitempty"`
	// The total running time of the job. Unit: milliseconds.
	//
	// example:
	//
	// 278
	ElapsedTime *int64 `json:"ElapsedTime,omitempty" xml:"ElapsedTime,omitempty"`
	// The final state of the job. Valid values:
	//
	// 	- SUCCEEDED
	//
	// 	- FAILED
	//
	// 	- KILLED
	//
	// 	- ENDED
	//
	// 	- UNDEFINED
	//
	// example:
	//
	// KILLED
	FinalStatus *string `json:"FinalStatus,omitempty" xml:"FinalStatus,omitempty"`
	// The time when the job ended. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1658388322000
	FinishTime *int64 `json:"FinishTime,omitempty" xml:"FinishTime,omitempty"`
	// The time when the job was started. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1665014400000
	LaunchTime *int64 `json:"LaunchTime,omitempty" xml:"LaunchTime,omitempty"`
	// The data about metrics.
	Metrics *GetDoctorJobResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// The YARN queue to which the job was submitted.
	//
	// example:
	//
	// DW
	Queue *string `json:"Queue,omitempty" xml:"Queue,omitempty"`
	// The time when the job was submitted. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1673946000000
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
	// The running state of the job. Valid values:
	//
	// 	- FINISHED
	//
	// 	- FAILED
	//
	// 	- KILLED
	//
	// example:
	//
	// FINISHED
	State *string `json:"State,omitempty" xml:"State,omitempty"`
	// The type of the compute engine.
	//
	// example:
	//
	// SPARK
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
	// The username that was used to submit the job.
	//
	// example:
	//
	// DW
	User *string `json:"User,omitempty" xml:"User,omitempty"`
}

func (s GetDoctorJobResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorJobResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorJobResponseBodyData) SetAppId(v string) *GetDoctorJobResponseBodyData {
	s.AppId = &v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetAppName(v string) *GetDoctorJobResponseBodyData {
	s.AppName = &v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetElapsedTime(v int64) *GetDoctorJobResponseBodyData {
	s.ElapsedTime = &v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetFinalStatus(v string) *GetDoctorJobResponseBodyData {
	s.FinalStatus = &v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetFinishTime(v int64) *GetDoctorJobResponseBodyData {
	s.FinishTime = &v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetLaunchTime(v int64) *GetDoctorJobResponseBodyData {
	s.LaunchTime = &v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetMetrics(v *GetDoctorJobResponseBodyDataMetrics) *GetDoctorJobResponseBodyData {
	s.Metrics = v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetQueue(v string) *GetDoctorJobResponseBodyData {
	s.Queue = &v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetStartTime(v int64) *GetDoctorJobResponseBodyData {
	s.StartTime = &v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetState(v string) *GetDoctorJobResponseBodyData {
	s.State = &v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetType(v string) *GetDoctorJobResponseBodyData {
	s.Type = &v
	return s
}

func (s *GetDoctorJobResponseBodyData) SetUser(v string) *GetDoctorJobResponseBodyData {
	s.User = &v
	return s
}

type GetDoctorJobResponseBodyDataMetrics struct {
	// The amount of memory consumed.
	MemSeconds *GetDoctorJobResponseBodyDataMetricsMemSeconds `json:"MemSeconds,omitempty" xml:"MemSeconds,omitempty" type:"Struct"`
	// The CPU usage.
	VcoreSeconds *GetDoctorJobResponseBodyDataMetricsVcoreSeconds `json:"VcoreSeconds,omitempty" xml:"VcoreSeconds,omitempty" type:"Struct"`
}

func (s GetDoctorJobResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorJobResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *GetDoctorJobResponseBodyDataMetrics) SetMemSeconds(v *GetDoctorJobResponseBodyDataMetricsMemSeconds) *GetDoctorJobResponseBodyDataMetrics {
	s.MemSeconds = v
	return s
}

func (s *GetDoctorJobResponseBodyDataMetrics) SetVcoreSeconds(v *GetDoctorJobResponseBodyDataMetricsVcoreSeconds) *GetDoctorJobResponseBodyDataMetrics {
	s.VcoreSeconds = v
	return s
}

type GetDoctorJobResponseBodyDataMetricsMemSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total memory usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12312312
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorJobResponseBodyDataMetricsMemSeconds) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorJobResponseBodyDataMetricsMemSeconds) GoString() string {
	return s.String()
}

func (s *GetDoctorJobResponseBodyDataMetricsMemSeconds) SetDescription(v string) *GetDoctorJobResponseBodyDataMetricsMemSeconds {
	s.Description = &v
	return s
}

func (s *GetDoctorJobResponseBodyDataMetricsMemSeconds) SetName(v string) *GetDoctorJobResponseBodyDataMetricsMemSeconds {
	s.Name = &v
	return s
}

func (s *GetDoctorJobResponseBodyDataMetricsMemSeconds) SetUnit(v string) *GetDoctorJobResponseBodyDataMetricsMemSeconds {
	s.Unit = &v
	return s
}

func (s *GetDoctorJobResponseBodyDataMetricsMemSeconds) SetValue(v int64) *GetDoctorJobResponseBodyDataMetricsMemSeconds {
	s.Value = &v
	return s
}

type GetDoctorJobResponseBodyDataMetricsVcoreSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total vcore usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// VCores 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 11123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetDoctorJobResponseBodyDataMetricsVcoreSeconds) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorJobResponseBodyDataMetricsVcoreSeconds) GoString() string {
	return s.String()
}

func (s *GetDoctorJobResponseBodyDataMetricsVcoreSeconds) SetDescription(v string) *GetDoctorJobResponseBodyDataMetricsVcoreSeconds {
	s.Description = &v
	return s
}

func (s *GetDoctorJobResponseBodyDataMetricsVcoreSeconds) SetName(v string) *GetDoctorJobResponseBodyDataMetricsVcoreSeconds {
	s.Name = &v
	return s
}

func (s *GetDoctorJobResponseBodyDataMetricsVcoreSeconds) SetUnit(v string) *GetDoctorJobResponseBodyDataMetricsVcoreSeconds {
	s.Unit = &v
	return s
}

func (s *GetDoctorJobResponseBodyDataMetricsVcoreSeconds) SetValue(v int64) *GetDoctorJobResponseBodyDataMetricsVcoreSeconds {
	s.Value = &v
	return s
}

type GetDoctorJobResponse struct {
	Headers    map[string]*string        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorJobResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorJobResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorJobResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorJobResponse) SetHeaders(v map[string]*string) *GetDoctorJobResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorJobResponse) SetStatusCode(v int32) *GetDoctorJobResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorJobResponse) SetBody(v *GetDoctorJobResponseBody) *GetDoctorJobResponse {
	s.Body = v
	return s
}

type GetDoctorReportComponentSummaryRequest struct {
	// 集群ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// component type
	//
	// This parameter is required.
	//
	// example:
	//
	// compute
	ComponentType *string `json:"ComponentType,omitempty" xml:"ComponentType,omitempty"`
	// dateTime for specify report
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetDoctorReportComponentSummaryRequest) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorReportComponentSummaryRequest) GoString() string {
	return s.String()
}

func (s *GetDoctorReportComponentSummaryRequest) SetClusterId(v string) *GetDoctorReportComponentSummaryRequest {
	s.ClusterId = &v
	return s
}

func (s *GetDoctorReportComponentSummaryRequest) SetComponentType(v string) *GetDoctorReportComponentSummaryRequest {
	s.ComponentType = &v
	return s
}

func (s *GetDoctorReportComponentSummaryRequest) SetDateTime(v string) *GetDoctorReportComponentSummaryRequest {
	s.DateTime = &v
	return s
}

func (s *GetDoctorReportComponentSummaryRequest) SetRegionId(v string) *GetDoctorReportComponentSummaryRequest {
	s.RegionId = &v
	return s
}

type GetDoctorReportComponentSummaryResponseBody struct {
	// The content of the report.
	Data *GetDoctorReportComponentSummaryResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetDoctorReportComponentSummaryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorReportComponentSummaryResponseBody) GoString() string {
	return s.String()
}

func (s *GetDoctorReportComponentSummaryResponseBody) SetData(v *GetDoctorReportComponentSummaryResponseBodyData) *GetDoctorReportComponentSummaryResponseBody {
	s.Data = v
	return s
}

func (s *GetDoctorReportComponentSummaryResponseBody) SetRequestId(v string) *GetDoctorReportComponentSummaryResponseBody {
	s.RequestId = &v
	return s
}

type GetDoctorReportComponentSummaryResponseBodyData struct {
	// example:
	//
	// 88
	Score      *int32  `json:"Score,omitempty" xml:"Score,omitempty"`
	Suggestion *string `json:"Suggestion,omitempty" xml:"Suggestion,omitempty"`
	// The summary of the report.
	Summary *string `json:"Summary,omitempty" xml:"Summary,omitempty"`
}

func (s GetDoctorReportComponentSummaryResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorReportComponentSummaryResponseBodyData) GoString() string {
	return s.String()
}

func (s *GetDoctorReportComponentSummaryResponseBodyData) SetScore(v int32) *GetDoctorReportComponentSummaryResponseBodyData {
	s.Score = &v
	return s
}

func (s *GetDoctorReportComponentSummaryResponseBodyData) SetSuggestion(v string) *GetDoctorReportComponentSummaryResponseBodyData {
	s.Suggestion = &v
	return s
}

func (s *GetDoctorReportComponentSummaryResponseBodyData) SetSummary(v string) *GetDoctorReportComponentSummaryResponseBodyData {
	s.Summary = &v
	return s
}

type GetDoctorReportComponentSummaryResponse struct {
	Headers    map[string]*string                           `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                       `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetDoctorReportComponentSummaryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetDoctorReportComponentSummaryResponse) String() string {
	return tea.Prettify(s)
}

func (s GetDoctorReportComponentSummaryResponse) GoString() string {
	return s.String()
}

func (s *GetDoctorReportComponentSummaryResponse) SetHeaders(v map[string]*string) *GetDoctorReportComponentSummaryResponse {
	s.Headers = v
	return s
}

func (s *GetDoctorReportComponentSummaryResponse) SetStatusCode(v int32) *GetDoctorReportComponentSummaryResponse {
	s.StatusCode = &v
	return s
}

func (s *GetDoctorReportComponentSummaryResponse) SetBody(v *GetDoctorReportComponentSummaryResponseBody) *GetDoctorReportComponentSummaryResponse {
	s.Body = v
	return s
}

type GetNodeGroupRequest struct {
	// The ID of the cluster.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The ID of the node group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The ID of the region in which you want to create the instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetNodeGroupRequest) String() string {
	return tea.Prettify(s)
}

func (s GetNodeGroupRequest) GoString() string {
	return s.String()
}

func (s *GetNodeGroupRequest) SetClusterId(v string) *GetNodeGroupRequest {
	s.ClusterId = &v
	return s
}

func (s *GetNodeGroupRequest) SetNodeGroupId(v string) *GetNodeGroupRequest {
	s.NodeGroupId = &v
	return s
}

func (s *GetNodeGroupRequest) SetRegionId(v string) *GetNodeGroupRequest {
	s.RegionId = &v
	return s
}

type GetNodeGroupResponseBody struct {
	// The node group.
	NodeGroup *NodeGroup `json:"NodeGroup,omitempty" xml:"NodeGroup,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetNodeGroupResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetNodeGroupResponseBody) GoString() string {
	return s.String()
}

func (s *GetNodeGroupResponseBody) SetNodeGroup(v *NodeGroup) *GetNodeGroupResponseBody {
	s.NodeGroup = v
	return s
}

func (s *GetNodeGroupResponseBody) SetRequestId(v string) *GetNodeGroupResponseBody {
	s.RequestId = &v
	return s
}

type GetNodeGroupResponse struct {
	Headers    map[string]*string        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetNodeGroupResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetNodeGroupResponse) String() string {
	return tea.Prettify(s)
}

func (s GetNodeGroupResponse) GoString() string {
	return s.String()
}

func (s *GetNodeGroupResponse) SetHeaders(v map[string]*string) *GetNodeGroupResponse {
	s.Headers = v
	return s
}

func (s *GetNodeGroupResponse) SetStatusCode(v int32) *GetNodeGroupResponse {
	s.StatusCode = &v
	return s
}

func (s *GetNodeGroupResponse) SetBody(v *GetNodeGroupResponseBody) *GetNodeGroupResponse {
	s.Body = v
	return s
}

type GetOperationRequest struct {
	// The ID of the cluster that you want to query.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The ID of the operation.
	//
	// This parameter is required.
	//
	// example:
	//
	// op-13c37a77c505****
	OperationId *string `json:"OperationId,omitempty" xml:"OperationId,omitempty"`
	// The district ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s GetOperationRequest) String() string {
	return tea.Prettify(s)
}

func (s GetOperationRequest) GoString() string {
	return s.String()
}

func (s *GetOperationRequest) SetClusterId(v string) *GetOperationRequest {
	s.ClusterId = &v
	return s
}

func (s *GetOperationRequest) SetOperationId(v string) *GetOperationRequest {
	s.OperationId = &v
	return s
}

func (s *GetOperationRequest) SetRegionId(v string) *GetOperationRequest {
	s.RegionId = &v
	return s
}

type GetOperationResponseBody struct {
	// The operation that is performed.
	Operation *Operation `json:"Operation,omitempty" xml:"Operation,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// 9E3A7161-EB7B-172B-8D18-FFB06BA3896A
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s GetOperationResponseBody) String() string {
	return tea.Prettify(s)
}

func (s GetOperationResponseBody) GoString() string {
	return s.String()
}

func (s *GetOperationResponseBody) SetOperation(v *Operation) *GetOperationResponseBody {
	s.Operation = v
	return s
}

func (s *GetOperationResponseBody) SetRequestId(v string) *GetOperationResponseBody {
	s.RequestId = &v
	return s
}

type GetOperationResponse struct {
	Headers    map[string]*string        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *GetOperationResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s GetOperationResponse) String() string {
	return tea.Prettify(s)
}

func (s GetOperationResponse) GoString() string {
	return s.String()
}

func (s *GetOperationResponse) SetHeaders(v map[string]*string) *GetOperationResponse {
	s.Headers = v
	return s
}

func (s *GetOperationResponse) SetStatusCode(v int32) *GetOperationResponse {
	s.StatusCode = &v
	return s
}

func (s *GetOperationResponse) SetBody(v *GetOperationResponseBody) *GetOperationResponse {
	s.Body = v
	return s
}

type IncreaseNodesRequest struct {
	// The configurations of the applications. Valid values of N: 1 to 1000.
	ApplicationConfigs []*ApplicationConfig `json:"ApplicationConfigs,omitempty" xml:"ApplicationConfigs,omitempty" type:"Repeated"`
	// Indicates whether to automatically pay for the orders involved in the scale-out operation. This parameter takes effect only when the PaymentType parameter is set to Subscription. Valid values:
	//
	// 	- true: automatically pays for the order involved in this operation.
	//
	// 	- false: does not automatically pay for the orders involved in this operation.
	//
	// Default value: false
	//
	// example:
	//
	// false
	AutoPayOrder *bool `json:"AutoPayOrder,omitempty" xml:"AutoPayOrder,omitempty"`
	// The ID of the cluster.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The number of nodes. The number of incremental nodes for this scale-out. Valid values: 1 to 500.
	//
	// This parameter is required.
	//
	// example:
	//
	// 3
	IncreaseNodeCount    *int32 `json:"IncreaseNodeCount,omitempty" xml:"IncreaseNodeCount,omitempty"`
	MinIncreaseNodeCount *int32 `json:"MinIncreaseNodeCount,omitempty" xml:"MinIncreaseNodeCount,omitempty"`
	// The ID of the node group. The target node group to which you want to scale out the cluster.
	//
	// This parameter is required.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The subscription duration. Valid values when the PaymentDurationUnit value is Month: 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, and 60.
	//
	// example:
	//
	// 12
	PaymentDuration *int32 `json:"PaymentDuration,omitempty" xml:"PaymentDuration,omitempty"`
	// The unit of the subscription duration. Valid values:
	//
	// 	- Month
	//
	// example:
	//
	// Month
	PaymentDurationUnit *string `json:"PaymentDurationUnit,omitempty" xml:"PaymentDurationUnit,omitempty"`
	// The ID of the region in which you want to create the instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s IncreaseNodesRequest) String() string {
	return tea.Prettify(s)
}

func (s IncreaseNodesRequest) GoString() string {
	return s.String()
}

func (s *IncreaseNodesRequest) SetApplicationConfigs(v []*ApplicationConfig) *IncreaseNodesRequest {
	s.ApplicationConfigs = v
	return s
}

func (s *IncreaseNodesRequest) SetAutoPayOrder(v bool) *IncreaseNodesRequest {
	s.AutoPayOrder = &v
	return s
}

func (s *IncreaseNodesRequest) SetClusterId(v string) *IncreaseNodesRequest {
	s.ClusterId = &v
	return s
}

func (s *IncreaseNodesRequest) SetIncreaseNodeCount(v int32) *IncreaseNodesRequest {
	s.IncreaseNodeCount = &v
	return s
}

func (s *IncreaseNodesRequest) SetMinIncreaseNodeCount(v int32) *IncreaseNodesRequest {
	s.MinIncreaseNodeCount = &v
	return s
}

func (s *IncreaseNodesRequest) SetNodeGroupId(v string) *IncreaseNodesRequest {
	s.NodeGroupId = &v
	return s
}

func (s *IncreaseNodesRequest) SetPaymentDuration(v int32) *IncreaseNodesRequest {
	s.PaymentDuration = &v
	return s
}

func (s *IncreaseNodesRequest) SetPaymentDurationUnit(v string) *IncreaseNodesRequest {
	s.PaymentDurationUnit = &v
	return s
}

func (s *IncreaseNodesRequest) SetRegionId(v string) *IncreaseNodesRequest {
	s.RegionId = &v
	return s
}

type IncreaseNodesResponseBody struct {
	// The ID of the operation.
	//
	// example:
	//
	// op-13c37a77c505****
	OperationId *string `json:"OperationId,omitempty" xml:"OperationId,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s IncreaseNodesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s IncreaseNodesResponseBody) GoString() string {
	return s.String()
}

func (s *IncreaseNodesResponseBody) SetOperationId(v string) *IncreaseNodesResponseBody {
	s.OperationId = &v
	return s
}

func (s *IncreaseNodesResponseBody) SetRequestId(v string) *IncreaseNodesResponseBody {
	s.RequestId = &v
	return s
}

type IncreaseNodesResponse struct {
	Headers    map[string]*string         `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                     `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *IncreaseNodesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s IncreaseNodesResponse) String() string {
	return tea.Prettify(s)
}

func (s IncreaseNodesResponse) GoString() string {
	return s.String()
}

func (s *IncreaseNodesResponse) SetHeaders(v map[string]*string) *IncreaseNodesResponse {
	s.Headers = v
	return s
}

func (s *IncreaseNodesResponse) SetStatusCode(v int32) *IncreaseNodesResponse {
	s.StatusCode = &v
	return s
}

func (s *IncreaseNodesResponse) SetBody(v *IncreaseNodesResponseBody) *IncreaseNodesResponse {
	s.Body = v
	return s
}

type JoinResourceGroupRequest struct {
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The ID of the resource group.
	//
	// This parameter is required.
	//
	// example:
	//
	// rg-acfmzabjyop****
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	// The ID of the resource.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-c95f0a39d8ff****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The type of the resource. Valid values:
	//
	// 	- cluster: cluster
	//
	// This parameter is required.
	//
	// example:
	//
	// cluster
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
}

func (s JoinResourceGroupRequest) String() string {
	return tea.Prettify(s)
}

func (s JoinResourceGroupRequest) GoString() string {
	return s.String()
}

func (s *JoinResourceGroupRequest) SetRegionId(v string) *JoinResourceGroupRequest {
	s.RegionId = &v
	return s
}

func (s *JoinResourceGroupRequest) SetResourceGroupId(v string) *JoinResourceGroupRequest {
	s.ResourceGroupId = &v
	return s
}

func (s *JoinResourceGroupRequest) SetResourceId(v string) *JoinResourceGroupRequest {
	s.ResourceId = &v
	return s
}

func (s *JoinResourceGroupRequest) SetResourceType(v string) *JoinResourceGroupRequest {
	s.ResourceType = &v
	return s
}

type JoinResourceGroupResponseBody struct {
	// The ID of the request.
	//
	// example:
	//
	// 9E3A7161-EB7B-172B-8D18-FFB06BA3****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s JoinResourceGroupResponseBody) String() string {
	return tea.Prettify(s)
}

func (s JoinResourceGroupResponseBody) GoString() string {
	return s.String()
}

func (s *JoinResourceGroupResponseBody) SetRequestId(v string) *JoinResourceGroupResponseBody {
	s.RequestId = &v
	return s
}

type JoinResourceGroupResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *JoinResourceGroupResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s JoinResourceGroupResponse) String() string {
	return tea.Prettify(s)
}

func (s JoinResourceGroupResponse) GoString() string {
	return s.String()
}

func (s *JoinResourceGroupResponse) SetHeaders(v map[string]*string) *JoinResourceGroupResponse {
	s.Headers = v
	return s
}

func (s *JoinResourceGroupResponse) SetStatusCode(v int32) *JoinResourceGroupResponse {
	s.StatusCode = &v
	return s
}

func (s *JoinResourceGroupResponse) SetBody(v *JoinResourceGroupResponseBody) *JoinResourceGroupResponse {
	s.Body = v
	return s
}

type ListApiTemplatesRequest struct {
	// 接口名。
	//
	// This parameter is required.
	//
	// example:
	//
	// CreateCluster
	ApiName *string `json:"ApiName,omitempty" xml:"ApiName,omitempty"`
	// 一次获取的最大记录数。
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 标记当前开始读取的位置，置空表示从头开始。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// 资源组ID。
	//
	// example:
	//
	// rg-acfmzabjyop****
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	// 集群模板id。
	//
	// example:
	//
	// at-41b4c6a0fc63****
	TemplateId *string `json:"TemplateId,omitempty" xml:"TemplateId,omitempty"`
	// 集群模板id列表。
	//
	// example:
	//
	// ["AT-****"]
	TemplateIds []*string `json:"TemplateIds,omitempty" xml:"TemplateIds,omitempty" type:"Repeated"`
	// 集群模板名字。
	//
	// example:
	//
	// DATALAKE模板
	TemplateName *string `json:"TemplateName,omitempty" xml:"TemplateName,omitempty"`
}

func (s ListApiTemplatesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListApiTemplatesRequest) GoString() string {
	return s.String()
}

func (s *ListApiTemplatesRequest) SetApiName(v string) *ListApiTemplatesRequest {
	s.ApiName = &v
	return s
}

func (s *ListApiTemplatesRequest) SetMaxResults(v int32) *ListApiTemplatesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListApiTemplatesRequest) SetNextToken(v string) *ListApiTemplatesRequest {
	s.NextToken = &v
	return s
}

func (s *ListApiTemplatesRequest) SetRegionId(v string) *ListApiTemplatesRequest {
	s.RegionId = &v
	return s
}

func (s *ListApiTemplatesRequest) SetResourceGroupId(v string) *ListApiTemplatesRequest {
	s.ResourceGroupId = &v
	return s
}

func (s *ListApiTemplatesRequest) SetTemplateId(v string) *ListApiTemplatesRequest {
	s.TemplateId = &v
	return s
}

func (s *ListApiTemplatesRequest) SetTemplateIds(v []*string) *ListApiTemplatesRequest {
	s.TemplateIds = v
	return s
}

func (s *ListApiTemplatesRequest) SetTemplateName(v string) *ListApiTemplatesRequest {
	s.TemplateName = &v
	return s
}

type ListApiTemplatesResponseBody struct {
	// Deprecated
	ApiTemplates []*ApiTemplate `json:"ApiTemplates,omitempty" xml:"ApiTemplates,omitempty" type:"Repeated"`
	// 本次请求所返回的最大记录条数。
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 返回读取到的数据位置，空代表数据已经读取完毕。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// 本次请求条件下的数据总量。
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListApiTemplatesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListApiTemplatesResponseBody) GoString() string {
	return s.String()
}

func (s *ListApiTemplatesResponseBody) SetApiTemplates(v []*ApiTemplate) *ListApiTemplatesResponseBody {
	s.ApiTemplates = v
	return s
}

func (s *ListApiTemplatesResponseBody) SetMaxResults(v int32) *ListApiTemplatesResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListApiTemplatesResponseBody) SetNextToken(v string) *ListApiTemplatesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListApiTemplatesResponseBody) SetRequestId(v string) *ListApiTemplatesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListApiTemplatesResponseBody) SetTotalCount(v int32) *ListApiTemplatesResponseBody {
	s.TotalCount = &v
	return s
}

type ListApiTemplatesResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListApiTemplatesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListApiTemplatesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListApiTemplatesResponse) GoString() string {
	return s.String()
}

func (s *ListApiTemplatesResponse) SetHeaders(v map[string]*string) *ListApiTemplatesResponse {
	s.Headers = v
	return s
}

func (s *ListApiTemplatesResponse) SetStatusCode(v int32) *ListApiTemplatesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListApiTemplatesResponse) SetBody(v *ListApiTemplatesResponseBody) *ListApiTemplatesResponse {
	s.Body = v
	return s
}

type ListApplicationConfigsRequest struct {
	// The name of the application.
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-e6a9d46e9267****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The name of the configuration file.
	//
	// example:
	//
	// hdfs-site.xml
	ConfigFileName *string `json:"ConfigFileName,omitempty" xml:"ConfigFileName,omitempty"`
	// The name of the configuration item.
	//
	// example:
	//
	// dfs.replication
	ConfigItemKey *string `json:"ConfigItemKey,omitempty" xml:"ConfigItemKey,omitempty"`
	// The value of the configuration item.
	//
	// example:
	//
	// 2
	ConfigItemValue *string `json:"ConfigItemValue,omitempty" xml:"ConfigItemValue,omitempty"`
	// The number of entries per page.
	//
	// example:
	//
	// 100
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The page number of the next page returned.
	//
	// example:
	//
	// 1
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the node group.
	//
	// example:
	//
	// ng-d555335ced5c****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The node ID.
	//
	// example:
	//
	// i-bp10h9rezawz1i4o****
	NodeId *string `json:"NodeId,omitempty" xml:"NodeId,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s ListApplicationConfigsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListApplicationConfigsRequest) GoString() string {
	return s.String()
}

func (s *ListApplicationConfigsRequest) SetApplicationName(v string) *ListApplicationConfigsRequest {
	s.ApplicationName = &v
	return s
}

func (s *ListApplicationConfigsRequest) SetClusterId(v string) *ListApplicationConfigsRequest {
	s.ClusterId = &v
	return s
}

func (s *ListApplicationConfigsRequest) SetConfigFileName(v string) *ListApplicationConfigsRequest {
	s.ConfigFileName = &v
	return s
}

func (s *ListApplicationConfigsRequest) SetConfigItemKey(v string) *ListApplicationConfigsRequest {
	s.ConfigItemKey = &v
	return s
}

func (s *ListApplicationConfigsRequest) SetConfigItemValue(v string) *ListApplicationConfigsRequest {
	s.ConfigItemValue = &v
	return s
}

func (s *ListApplicationConfigsRequest) SetMaxResults(v int32) *ListApplicationConfigsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListApplicationConfigsRequest) SetNextToken(v string) *ListApplicationConfigsRequest {
	s.NextToken = &v
	return s
}

func (s *ListApplicationConfigsRequest) SetNodeGroupId(v string) *ListApplicationConfigsRequest {
	s.NodeGroupId = &v
	return s
}

func (s *ListApplicationConfigsRequest) SetNodeId(v string) *ListApplicationConfigsRequest {
	s.NodeId = &v
	return s
}

func (s *ListApplicationConfigsRequest) SetRegionId(v string) *ListApplicationConfigsRequest {
	s.RegionId = &v
	return s
}

type ListApplicationConfigsResponseBody struct {
	// The application configurations.
	ApplicationConfigs []*ListApplicationConfigsResponseBodyApplicationConfigs `json:"ApplicationConfigs,omitempty" xml:"ApplicationConfigs,omitempty" type:"Repeated"`
	// The number of entries per page.
	//
	// example:
	//
	// 100
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The page number of the next page returned.
	//
	// example:
	//
	// 1
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 9E3A7161-EB7B-172B-8D18-FFB06BA3****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of pages returned.
	//
	// example:
	//
	// 100
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListApplicationConfigsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListApplicationConfigsResponseBody) GoString() string {
	return s.String()
}

func (s *ListApplicationConfigsResponseBody) SetApplicationConfigs(v []*ListApplicationConfigsResponseBodyApplicationConfigs) *ListApplicationConfigsResponseBody {
	s.ApplicationConfigs = v
	return s
}

func (s *ListApplicationConfigsResponseBody) SetMaxResults(v int32) *ListApplicationConfigsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListApplicationConfigsResponseBody) SetNextToken(v string) *ListApplicationConfigsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListApplicationConfigsResponseBody) SetRequestId(v string) *ListApplicationConfigsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListApplicationConfigsResponseBody) SetTotalCount(v int32) *ListApplicationConfigsResponseBody {
	s.TotalCount = &v
	return s
}

type ListApplicationConfigsResponseBodyApplicationConfigs struct {
	// The name of the application.
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// The status of the configuration value.
	//
	// example:
	//
	// EFFECT
	ConfigEffectState *string `json:"ConfigEffectState,omitempty" xml:"ConfigEffectState,omitempty"`
	// The name of the configuration file.
	//
	// example:
	//
	// hdfs-site.xml
	ConfigFileName *string `json:"ConfigFileName,omitempty" xml:"ConfigFileName,omitempty"`
	// The key of the configuration item.
	//
	// example:
	//
	// dfs.replication
	ConfigItemKey *string `json:"ConfigItemKey,omitempty" xml:"ConfigItemKey,omitempty"`
	// The value of the configuration item.
	//
	// example:
	//
	// 2
	ConfigItemValue *string `json:"ConfigItemValue,omitempty" xml:"ConfigItemValue,omitempty"`
	// The creation time.
	//
	// example:
	//
	// 1628589439114
	CreateTime *int64 `json:"CreateTime,omitempty" xml:"CreateTime,omitempty"`
	// Indicates whether the configurations are custom.
	//
	// example:
	//
	// false
	Custom *bool `json:"Custom,omitempty" xml:"Custom,omitempty"`
	// The description.
	//
	// example:
	//
	// dfs.replication description
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The initial value.
	//
	// example:
	//
	// 2
	InitValue *string `json:"InitValue,omitempty" xml:"InitValue,omitempty"`
	// The person who modified the configurations.
	//
	// example:
	//
	// 170906468757****
	Modifier *string `json:"Modifier,omitempty" xml:"Modifier,omitempty"`
	// The node group ID.
	//
	// example:
	//
	// ng-d555335ced5****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The node ID.
	//
	// example:
	//
	// i-bp18y0ng3qqxog4mw****
	NodeId *string `json:"NodeId,omitempty" xml:"NodeId,omitempty"`
	// The update time.
	//
	// example:
	//
	// 1628589439114
	UpdateTime *int64 `json:"UpdateTime,omitempty" xml:"UpdateTime,omitempty"`
}

func (s ListApplicationConfigsResponseBodyApplicationConfigs) String() string {
	return tea.Prettify(s)
}

func (s ListApplicationConfigsResponseBodyApplicationConfigs) GoString() string {
	return s.String()
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetApplicationName(v string) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.ApplicationName = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetConfigEffectState(v string) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.ConfigEffectState = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetConfigFileName(v string) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.ConfigFileName = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetConfigItemKey(v string) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.ConfigItemKey = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetConfigItemValue(v string) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.ConfigItemValue = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetCreateTime(v int64) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.CreateTime = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetCustom(v bool) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.Custom = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetDescription(v string) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.Description = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetInitValue(v string) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.InitValue = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetModifier(v string) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.Modifier = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetNodeGroupId(v string) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.NodeGroupId = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetNodeId(v string) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.NodeId = &v
	return s
}

func (s *ListApplicationConfigsResponseBodyApplicationConfigs) SetUpdateTime(v int64) *ListApplicationConfigsResponseBodyApplicationConfigs {
	s.UpdateTime = &v
	return s
}

type ListApplicationConfigsResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListApplicationConfigsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListApplicationConfigsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListApplicationConfigsResponse) GoString() string {
	return s.String()
}

func (s *ListApplicationConfigsResponse) SetHeaders(v map[string]*string) *ListApplicationConfigsResponse {
	s.Headers = v
	return s
}

func (s *ListApplicationConfigsResponse) SetStatusCode(v int32) *ListApplicationConfigsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListApplicationConfigsResponse) SetBody(v *ListApplicationConfigsResponseBody) *ListApplicationConfigsResponse {
	s.Body = v
	return s
}

type ListApplicationsRequest struct {
	// The application names.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ApplicationNames []*string `json:"ApplicationNames,omitempty" xml:"ApplicationNames,omitempty" type:"Repeated"`
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-e6a9d46e92675****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The total number of pages.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The page number of the next page returned.
	//
	// example:
	//
	// 0
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s ListApplicationsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListApplicationsRequest) GoString() string {
	return s.String()
}

func (s *ListApplicationsRequest) SetApplicationNames(v []*string) *ListApplicationsRequest {
	s.ApplicationNames = v
	return s
}

func (s *ListApplicationsRequest) SetClusterId(v string) *ListApplicationsRequest {
	s.ClusterId = &v
	return s
}

func (s *ListApplicationsRequest) SetMaxResults(v int32) *ListApplicationsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListApplicationsRequest) SetNextToken(v string) *ListApplicationsRequest {
	s.NextToken = &v
	return s
}

func (s *ListApplicationsRequest) SetRegionId(v string) *ListApplicationsRequest {
	s.RegionId = &v
	return s
}

type ListApplicationsResponseBody struct {
	// The information about applications.
	Applications []*ListApplicationsResponseBodyApplications `json:"Applications,omitempty" xml:"Applications,omitempty" type:"Repeated"`
	// The number of entries per page.
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The page number of the next page returned.
	//
	// example:
	//
	// 2
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 9E3A7161-EB7B-172B-8D18-FFB06BA3****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of pages.
	//
	// example:
	//
	// 20
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListApplicationsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListApplicationsResponseBody) GoString() string {
	return s.String()
}

func (s *ListApplicationsResponseBody) SetApplications(v []*ListApplicationsResponseBodyApplications) *ListApplicationsResponseBody {
	s.Applications = v
	return s
}

func (s *ListApplicationsResponseBody) SetMaxResults(v int32) *ListApplicationsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListApplicationsResponseBody) SetNextToken(v string) *ListApplicationsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListApplicationsResponseBody) SetRequestId(v string) *ListApplicationsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListApplicationsResponseBody) SetTotalCount(v int32) *ListApplicationsResponseBody {
	s.TotalCount = &v
	return s
}

type ListApplicationsResponseBodyApplications struct {
	// The application name.
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// The status of the application operation.
	//
	// example:
	//
	// RUNNING
	ApplicationState *string `json:"ApplicationState,omitempty" xml:"ApplicationState,omitempty"`
	// Deprecated
	//
	// The version of the application.
	//
	// example:
	//
	// 2.8.1
	ApplicationVersion *string `json:"ApplicationVersion,omitempty" xml:"ApplicationVersion,omitempty"`
	// The community edition.
	//
	// example:
	//
	// 2.8.5
	CommunityVersion *string `json:"CommunityVersion,omitempty" xml:"CommunityVersion,omitempty"`
}

func (s ListApplicationsResponseBodyApplications) String() string {
	return tea.Prettify(s)
}

func (s ListApplicationsResponseBodyApplications) GoString() string {
	return s.String()
}

func (s *ListApplicationsResponseBodyApplications) SetApplicationName(v string) *ListApplicationsResponseBodyApplications {
	s.ApplicationName = &v
	return s
}

func (s *ListApplicationsResponseBodyApplications) SetApplicationState(v string) *ListApplicationsResponseBodyApplications {
	s.ApplicationState = &v
	return s
}

func (s *ListApplicationsResponseBodyApplications) SetApplicationVersion(v string) *ListApplicationsResponseBodyApplications {
	s.ApplicationVersion = &v
	return s
}

func (s *ListApplicationsResponseBodyApplications) SetCommunityVersion(v string) *ListApplicationsResponseBodyApplications {
	s.CommunityVersion = &v
	return s
}

type ListApplicationsResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListApplicationsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListApplicationsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListApplicationsResponse) GoString() string {
	return s.String()
}

func (s *ListApplicationsResponse) SetHeaders(v map[string]*string) *ListApplicationsResponse {
	s.Headers = v
	return s
}

func (s *ListApplicationsResponse) SetStatusCode(v int32) *ListApplicationsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListApplicationsResponse) SetBody(v *ListApplicationsResponseBody) *ListApplicationsResponse {
	s.Body = v
	return s
}

type ListAutoScalingActivitiesRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The end of the time range to query. Unit: milliseconds.
	//
	// example:
	//
	// 1639718634819
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The number of entries to return on each page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the request to retrieve a new page of results.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the node group.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The status of the scaling activity. Number of elements in the array: 1-20.
	//
	// example:
	//
	// ["REJECTED","SUCCESSFUL"]
	ScalingActivityStates []*string `json:"ScalingActivityStates,omitempty" xml:"ScalingActivityStates,omitempty" type:"Repeated"`
	// The type of the scaling activity. Valid values:
	//
	// 	- SCALE_OUT
	//
	// 	- SCALE_IN
	//
	// example:
	//
	// SCALE_IN
	ScalingActivityType *string `json:"ScalingActivityType,omitempty" xml:"ScalingActivityType,omitempty"`
	// The name of the scaling rule.
	//
	// example:
	//
	// scale-out-by-memroy
	ScalingRuleName *string `json:"ScalingRuleName,omitempty" xml:"ScalingRuleName,omitempty"`
	// The beginning of the time range to query. Unit: milliseconds.
	//
	// example:
	//
	// 1639714634819
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s ListAutoScalingActivitiesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListAutoScalingActivitiesRequest) GoString() string {
	return s.String()
}

func (s *ListAutoScalingActivitiesRequest) SetClusterId(v string) *ListAutoScalingActivitiesRequest {
	s.ClusterId = &v
	return s
}

func (s *ListAutoScalingActivitiesRequest) SetEndTime(v int64) *ListAutoScalingActivitiesRequest {
	s.EndTime = &v
	return s
}

func (s *ListAutoScalingActivitiesRequest) SetMaxResults(v int32) *ListAutoScalingActivitiesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListAutoScalingActivitiesRequest) SetNextToken(v string) *ListAutoScalingActivitiesRequest {
	s.NextToken = &v
	return s
}

func (s *ListAutoScalingActivitiesRequest) SetNodeGroupId(v string) *ListAutoScalingActivitiesRequest {
	s.NodeGroupId = &v
	return s
}

func (s *ListAutoScalingActivitiesRequest) SetRegionId(v string) *ListAutoScalingActivitiesRequest {
	s.RegionId = &v
	return s
}

func (s *ListAutoScalingActivitiesRequest) SetScalingActivityStates(v []*string) *ListAutoScalingActivitiesRequest {
	s.ScalingActivityStates = v
	return s
}

func (s *ListAutoScalingActivitiesRequest) SetScalingActivityType(v string) *ListAutoScalingActivitiesRequest {
	s.ScalingActivityType = &v
	return s
}

func (s *ListAutoScalingActivitiesRequest) SetScalingRuleName(v string) *ListAutoScalingActivitiesRequest {
	s.ScalingRuleName = &v
	return s
}

func (s *ListAutoScalingActivitiesRequest) SetStartTime(v int64) *ListAutoScalingActivitiesRequest {
	s.StartTime = &v
	return s
}

type ListAutoScalingActivitiesResponseBody struct {
	// The maximum number of entries returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The scaling activities.
	ScalingActivities []*ListAutoScalingActivitiesResponseBodyScalingActivities `json:"ScalingActivities,omitempty" xml:"ScalingActivities,omitempty" type:"Repeated"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListAutoScalingActivitiesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListAutoScalingActivitiesResponseBody) GoString() string {
	return s.String()
}

func (s *ListAutoScalingActivitiesResponseBody) SetMaxResults(v int32) *ListAutoScalingActivitiesResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBody) SetNextToken(v string) *ListAutoScalingActivitiesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBody) SetRequestId(v string) *ListAutoScalingActivitiesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBody) SetScalingActivities(v []*ListAutoScalingActivitiesResponseBodyScalingActivities) *ListAutoScalingActivitiesResponseBody {
	s.ScalingActivities = v
	return s
}

func (s *ListAutoScalingActivitiesResponseBody) SetTotalCount(v int32) *ListAutoScalingActivitiesResponseBody {
	s.TotalCount = &v
	return s
}

type ListAutoScalingActivitiesResponseBodyScalingActivities struct {
	// The ID of the scaling activity.
	//
	// example:
	//
	// asa-36373b084d6b4b13aa50f4129a9e****
	ActivityId *string `json:"ActivityId,omitempty" xml:"ActivityId,omitempty"`
	// The status of the scaling activity. Valid values:
	//
	// 	- REJECTED
	//
	// 	- SUCCESSFUL
	//
	// 	- FAILED
	//
	// 	- IN_PROGRESS
	//
	// example:
	//
	// IN_PROGRESS
	ActivityState *string `json:"ActivityState,omitempty" xml:"ActivityState,omitempty"`
	// The type of the scaling activity. Valid values:
	//
	// 	- SCALE_OUT
	//
	// 	- SCALE_IN
	//
	// example:
	//
	// SCALE_OUT
	ActivityType *string `json:"ActivityType,omitempty" xml:"ActivityType,omitempty"`
	// The cluster ID.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The description of the scaling activity.
	//
	// example:
	//
	// clusterId not exist
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The end time of the scaling. Unit: milliseconds.
	//
	// example:
	//
	// 1639715634819
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The number of added or removed instances.
	//
	// example:
	//
	// 10
	ExpectNum *int32 `json:"ExpectNum,omitempty" xml:"ExpectNum,omitempty"`
	// The ID of the node group.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The name of the node group.
	//
	// example:
	//
	// task-01
	NodeGroupName *string `json:"NodeGroupName,omitempty" xml:"NodeGroupName,omitempty"`
	// The operation ID.
	//
	// example:
	//
	// op-13c37a77c505****
	OperationId *string `json:"OperationId,omitempty" xml:"OperationId,omitempty"`
	// The name of the scaling rule.
	//
	// example:
	//
	// scaling-out-memory
	RuleName *string `json:"RuleName,omitempty" xml:"RuleName,omitempty"`
	// The start time of the scaling. Unit: milliseconds.
	//
	// example:
	//
	// 1639714634819
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s ListAutoScalingActivitiesResponseBodyScalingActivities) String() string {
	return tea.Prettify(s)
}

func (s ListAutoScalingActivitiesResponseBodyScalingActivities) GoString() string {
	return s.String()
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetActivityId(v string) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.ActivityId = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetActivityState(v string) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.ActivityState = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetActivityType(v string) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.ActivityType = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetClusterId(v string) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.ClusterId = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetDescription(v string) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.Description = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetEndTime(v int64) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.EndTime = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetExpectNum(v int32) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.ExpectNum = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetNodeGroupId(v string) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.NodeGroupId = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetNodeGroupName(v string) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.NodeGroupName = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetOperationId(v string) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.OperationId = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetRuleName(v string) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.RuleName = &v
	return s
}

func (s *ListAutoScalingActivitiesResponseBodyScalingActivities) SetStartTime(v int64) *ListAutoScalingActivitiesResponseBodyScalingActivities {
	s.StartTime = &v
	return s
}

type ListAutoScalingActivitiesResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListAutoScalingActivitiesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListAutoScalingActivitiesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListAutoScalingActivitiesResponse) GoString() string {
	return s.String()
}

func (s *ListAutoScalingActivitiesResponse) SetHeaders(v map[string]*string) *ListAutoScalingActivitiesResponse {
	s.Headers = v
	return s
}

func (s *ListAutoScalingActivitiesResponse) SetStatusCode(v int32) *ListAutoScalingActivitiesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListAutoScalingActivitiesResponse) SetBody(v *ListAutoScalingActivitiesResponseBody) *ListAutoScalingActivitiesResponse {
	s.Body = v
	return s
}

type ListClustersRequest struct {
	// The IDs of the clusters. You can specify a maximum of 100 items.
	//
	// example:
	//
	// rg-acfmzabjyop****
	ClusterIds []*string `json:"ClusterIds,omitempty" xml:"ClusterIds,omitempty" type:"Repeated"`
	// The name of the cluster.
	//
	// example:
	//
	// emrtest
	ClusterName *string `json:"ClusterName,omitempty" xml:"ClusterName,omitempty"`
	// The states of clusters. You can specify a maximum of 100 items.
	//
	// example:
	//
	// ["HADOOP"]
	ClusterStates []*string `json:"ClusterStates,omitempty" xml:"ClusterStates,omitempty" type:"Repeated"`
	// The types of the clusters. You can specify a maximum of 100 items.
	//
	// example:
	//
	// ["c-b933c5aac8fe****"]
	ClusterTypes []*string `json:"ClusterTypes,omitempty" xml:"ClusterTypes,omitempty" type:"Repeated"`
	// The number of entries to return on each page. Valid values: 1 to 100.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The starting point of the current query. If you do not configure this parameter, the query starts from the beginning.
	//
	// example:
	//
	// eyJlY21OZXh0VG9rZW4iOiIxIiwidGFpaGFvTmV4dFRva2VuIjoiNTYiLCJ0YWloYW9OZXh0VG9rZW5JbnQiOjU2LCJlY21OZXh0VG9rZW5JbnQiOjF9
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The billing methods. You can specify a maximum of 2 items.
	//
	// example:
	//
	// ["ECS"]
	PaymentTypes []*string `json:"PaymentTypes,omitempty" xml:"PaymentTypes,omitempty" type:"Repeated"`
	// The region ID.
	//
	// Valid values:
	//
	// 	- cn-qingdao
	//
	// 	- cn-beijing
	//
	// 	- cn-zhangjiakou
	//
	// 	- cn-huhehaote
	//
	// 	- cn-hangzhou
	//
	// 	- cn-shanghai
	//
	// 	- cn-shenzhen
	//
	// 	- cn-chengdu
	//
	// 	- cn-hongkong
	//
	// 	- cn-wulanchabu
	//
	// 	- cn-heyuan-acdr-1
	//
	// 	- cn-qingdao-acdr-ut-1
	//
	// 	- ap-northeast-1
	//
	// 	- ap-southeast-1
	//
	// 	- ap-southeast-2
	//
	// 	- ap-southeast-3
	//
	// 	- ap-southeast-5
	//
	// 	- ap-south-1
	//
	// 	- us-east-1
	//
	// 	- us-west-1
	//
	// 	- me-east-1
	//
	// 	- me-central-1
	//
	// 	- eu-central-1
	//
	// 	- eu-west-1
	//
	// 	- cn-north-2-gov-1
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The ID of the resource group.
	//
	// example:
	//
	// rg-acfmzabjyop****
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	// The tags. You can specify a maximum of 20 items.
	//
	// example:
	//
	// ["PayAsYouGo"]
	Tags []*Tag `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s ListClustersRequest) String() string {
	return tea.Prettify(s)
}

func (s ListClustersRequest) GoString() string {
	return s.String()
}

func (s *ListClustersRequest) SetClusterIds(v []*string) *ListClustersRequest {
	s.ClusterIds = v
	return s
}

func (s *ListClustersRequest) SetClusterName(v string) *ListClustersRequest {
	s.ClusterName = &v
	return s
}

func (s *ListClustersRequest) SetClusterStates(v []*string) *ListClustersRequest {
	s.ClusterStates = v
	return s
}

func (s *ListClustersRequest) SetClusterTypes(v []*string) *ListClustersRequest {
	s.ClusterTypes = v
	return s
}

func (s *ListClustersRequest) SetMaxResults(v int32) *ListClustersRequest {
	s.MaxResults = &v
	return s
}

func (s *ListClustersRequest) SetNextToken(v string) *ListClustersRequest {
	s.NextToken = &v
	return s
}

func (s *ListClustersRequest) SetPaymentTypes(v []*string) *ListClustersRequest {
	s.PaymentTypes = v
	return s
}

func (s *ListClustersRequest) SetRegionId(v string) *ListClustersRequest {
	s.RegionId = &v
	return s
}

func (s *ListClustersRequest) SetResourceGroupId(v string) *ListClustersRequest {
	s.ResourceGroupId = &v
	return s
}

func (s *ListClustersRequest) SetTags(v []*Tag) *ListClustersRequest {
	s.Tags = v
	return s
}

type ListClustersResponseBody struct {
	// The list of clusters.
	Clusters []*ClusterSummary `json:"Clusters,omitempty" xml:"Clusters,omitempty" type:"Repeated"`
	// The number of entries returned per page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The page number of the next page returned.
	//
	// example:
	//
	// eyJlY21OZXh0VG9rZW4iOiIxIiwidGFpaGFvTmV4dFRva2VuIjoiNTYiLCJ0YWloYW9OZXh0VG9rZW5JbnQiOjU2LCJlY21OZXh0VG9rZW5JbnQiOjF9
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// 9E3A7161-EB7B-172B-8D18-FFB06BA3896A
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of pages.
	//
	// example:
	//
	// 1000
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListClustersResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListClustersResponseBody) GoString() string {
	return s.String()
}

func (s *ListClustersResponseBody) SetClusters(v []*ClusterSummary) *ListClustersResponseBody {
	s.Clusters = v
	return s
}

func (s *ListClustersResponseBody) SetMaxResults(v int32) *ListClustersResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListClustersResponseBody) SetNextToken(v string) *ListClustersResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListClustersResponseBody) SetRequestId(v string) *ListClustersResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListClustersResponseBody) SetTotalCount(v int32) *ListClustersResponseBody {
	s.TotalCount = &v
	return s
}

type ListClustersResponse struct {
	Headers    map[string]*string        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListClustersResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListClustersResponse) String() string {
	return tea.Prettify(s)
}

func (s ListClustersResponse) GoString() string {
	return s.String()
}

func (s *ListClustersResponse) SetHeaders(v map[string]*string) *ListClustersResponse {
	s.Headers = v
	return s
}

func (s *ListClustersResponse) SetStatusCode(v int32) *ListClustersResponse {
	s.StatusCode = &v
	return s
}

func (s *ListClustersResponse) SetBody(v *ListClustersResponseBody) *ListClustersResponse {
	s.Body = v
	return s
}

type ListComponentInstancesRequest struct {
	// 应用名称列表。
	//
	// example:
	//
	// ["HDFS"]
	ApplicationNames []*string `json:"ApplicationNames,omitempty" xml:"ApplicationNames,omitempty" type:"Repeated"`
	// 集群ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// 组件名称列表。
	//
	// example:
	//
	// ["DataNode"]
	ComponentNames []*string `json:"ComponentNames,omitempty" xml:"ComponentNames,omitempty" type:"Repeated"`
	// example:
	//
	// null
	ComponentStates []*string `json:"ComponentStates,omitempty" xml:"ComponentStates,omitempty" type:"Repeated"`
	// 一次获取的最大记录数。取值范围：1~100。
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 标记当前开始读取的位置，置空表示从头开始。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// 节点ID列表。
	//
	// example:
	//
	// ["i-bp1cudc25w2bfwl5****"]
	NodeIds []*string `json:"NodeIds,omitempty" xml:"NodeIds,omitempty" type:"Repeated"`
	// 节点名称列表。
	//
	// example:
	//
	// ["core1-1"]
	NodeNames []*string `json:"NodeNames,omitempty" xml:"NodeNames,omitempty" type:"Repeated"`
	// 地域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s ListComponentInstancesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListComponentInstancesRequest) GoString() string {
	return s.String()
}

func (s *ListComponentInstancesRequest) SetApplicationNames(v []*string) *ListComponentInstancesRequest {
	s.ApplicationNames = v
	return s
}

func (s *ListComponentInstancesRequest) SetClusterId(v string) *ListComponentInstancesRequest {
	s.ClusterId = &v
	return s
}

func (s *ListComponentInstancesRequest) SetComponentNames(v []*string) *ListComponentInstancesRequest {
	s.ComponentNames = v
	return s
}

func (s *ListComponentInstancesRequest) SetComponentStates(v []*string) *ListComponentInstancesRequest {
	s.ComponentStates = v
	return s
}

func (s *ListComponentInstancesRequest) SetMaxResults(v int32) *ListComponentInstancesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListComponentInstancesRequest) SetNextToken(v string) *ListComponentInstancesRequest {
	s.NextToken = &v
	return s
}

func (s *ListComponentInstancesRequest) SetNodeIds(v []*string) *ListComponentInstancesRequest {
	s.NodeIds = v
	return s
}

func (s *ListComponentInstancesRequest) SetNodeNames(v []*string) *ListComponentInstancesRequest {
	s.NodeNames = v
	return s
}

func (s *ListComponentInstancesRequest) SetRegionId(v string) *ListComponentInstancesRequest {
	s.RegionId = &v
	return s
}

type ListComponentInstancesResponseBody struct {
	ComponentInstances []*ListComponentInstancesResponseBodyComponentInstances `json:"ComponentInstances,omitempty" xml:"ComponentInstances,omitempty" type:"Repeated"`
	// 本次请求所返回的最大记录条数。
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 返回读取到的数据位置，空代表数据已经读取完毕。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// 本次请求条件下的数据总量。
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListComponentInstancesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListComponentInstancesResponseBody) GoString() string {
	return s.String()
}

func (s *ListComponentInstancesResponseBody) SetComponentInstances(v []*ListComponentInstancesResponseBodyComponentInstances) *ListComponentInstancesResponseBody {
	s.ComponentInstances = v
	return s
}

func (s *ListComponentInstancesResponseBody) SetMaxResults(v int32) *ListComponentInstancesResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListComponentInstancesResponseBody) SetNextToken(v string) *ListComponentInstancesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListComponentInstancesResponseBody) SetRequestId(v string) *ListComponentInstancesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListComponentInstancesResponseBody) SetTotalCount(v int32) *ListComponentInstancesResponseBody {
	s.TotalCount = &v
	return s
}

type ListComponentInstancesResponseBodyComponentInstances struct {
	// 应用名称。
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// 组件服务状态，取值如下：
	//
	// - active：主服务
	//
	// - standby：备用服务。
	//
	// example:
	//
	// active
	BizState *string `json:"BizState,omitempty" xml:"BizState,omitempty"`
	// Commission状态，取值如下：
	//
	// - COMMISSIONED：已上线
	//
	// - COMMISSIONING：上线中
	//
	// - DECOMMISSIONED：已下线
	//
	// - DECOMMISSIONINPROGRESS：下线进程中
	//
	// - DECOMMISSIONFAILED：下线失败
	//
	// - INSERVICE：服务中
	//
	// - UNKNOWN：未知状态。
	//
	// <p>
	//
	// example:
	//
	// INSERVICE
	CommissionState *string `json:"CommissionState,omitempty" xml:"CommissionState,omitempty"`
	// 组件实例操作状态，取值如下：
	//
	// - WAITING：等待中
	//
	// - INSTALLING：安装中
	//
	// - INSTALLED：已安装
	//
	// - INSTALL_FAILED：安装失败
	//
	// - STARTING：启动中
	//
	// - STARTED：已启动
	//
	// - START_FAILED：启动失败
	//
	// - STOPPING：停止中
	//
	// - STOPPED：已停止
	//
	// - STOP_FAILED：停止失败
	ComponentInstanceState *string `json:"ComponentInstanceState,omitempty" xml:"ComponentInstanceState,omitempty"`
	// 组件名称。
	//
	// example:
	//
	// DataNode
	ComponentName *string `json:"ComponentName,omitempty" xml:"ComponentName,omitempty"`
	// 安装时间戳。
	//
	// example:
	//
	// 1628248947000
	CreateTime *int64 `json:"CreateTime,omitempty" xml:"CreateTime,omitempty"`
	// 期望状态，取值如下：
	//
	// - WAITING：等待中
	//
	// - INSTALLING：安装中
	//
	// - INSTALLED：已安装
	//
	// - INSTALL_FAILED：安装失败
	//
	// - STARTING：启动中
	//
	// - STARTED：已启动
	//
	// - START_FAILED：启动失败
	//
	// - STOPPING：停止中
	//
	// - STOPPED：已停止
	//
	// - STOP_FAILED：停止失败。
	//
	// example:
	//
	// STARTED
	DesiredState *string `json:"DesiredState,omitempty" xml:"DesiredState,omitempty"`
	// 节点ID。
	//
	// example:
	//
	// i-bp1cudc25w2bfwl5****
	NodeId *string `json:"NodeId,omitempty" xml:"NodeId,omitempty"`
	// 节点名称。
	//
	// example:
	//
	// core1-1
	NodeName *string `json:"NodeName,omitempty" xml:"NodeName,omitempty"`
}

func (s ListComponentInstancesResponseBodyComponentInstances) String() string {
	return tea.Prettify(s)
}

func (s ListComponentInstancesResponseBodyComponentInstances) GoString() string {
	return s.String()
}

func (s *ListComponentInstancesResponseBodyComponentInstances) SetApplicationName(v string) *ListComponentInstancesResponseBodyComponentInstances {
	s.ApplicationName = &v
	return s
}

func (s *ListComponentInstancesResponseBodyComponentInstances) SetBizState(v string) *ListComponentInstancesResponseBodyComponentInstances {
	s.BizState = &v
	return s
}

func (s *ListComponentInstancesResponseBodyComponentInstances) SetCommissionState(v string) *ListComponentInstancesResponseBodyComponentInstances {
	s.CommissionState = &v
	return s
}

func (s *ListComponentInstancesResponseBodyComponentInstances) SetComponentInstanceState(v string) *ListComponentInstancesResponseBodyComponentInstances {
	s.ComponentInstanceState = &v
	return s
}

func (s *ListComponentInstancesResponseBodyComponentInstances) SetComponentName(v string) *ListComponentInstancesResponseBodyComponentInstances {
	s.ComponentName = &v
	return s
}

func (s *ListComponentInstancesResponseBodyComponentInstances) SetCreateTime(v int64) *ListComponentInstancesResponseBodyComponentInstances {
	s.CreateTime = &v
	return s
}

func (s *ListComponentInstancesResponseBodyComponentInstances) SetDesiredState(v string) *ListComponentInstancesResponseBodyComponentInstances {
	s.DesiredState = &v
	return s
}

func (s *ListComponentInstancesResponseBodyComponentInstances) SetNodeId(v string) *ListComponentInstancesResponseBodyComponentInstances {
	s.NodeId = &v
	return s
}

func (s *ListComponentInstancesResponseBodyComponentInstances) SetNodeName(v string) *ListComponentInstancesResponseBodyComponentInstances {
	s.NodeName = &v
	return s
}

type ListComponentInstancesResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListComponentInstancesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListComponentInstancesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListComponentInstancesResponse) GoString() string {
	return s.String()
}

func (s *ListComponentInstancesResponse) SetHeaders(v map[string]*string) *ListComponentInstancesResponse {
	s.Headers = v
	return s
}

func (s *ListComponentInstancesResponse) SetStatusCode(v int32) *ListComponentInstancesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListComponentInstancesResponse) SetBody(v *ListComponentInstancesResponseBody) *ListComponentInstancesResponse {
	s.Body = v
	return s
}

type ListComponentsRequest struct {
	// 应用名称列表。
	//
	// example:
	//
	// ["HDFS"]
	ApplicationNames []*string `json:"ApplicationNames,omitempty" xml:"ApplicationNames,omitempty" type:"Repeated"`
	// 集群ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// 组件名称列表。
	//
	// example:
	//
	// ["DataNode"]
	ComponentNames []*string `json:"ComponentNames,omitempty" xml:"ComponentNames,omitempty" type:"Repeated"`
	// example:
	//
	// null
	ComponentStates []*string `json:"ComponentStates,omitempty" xml:"ComponentStates,omitempty" type:"Repeated"`
	// 是否包含过期配置。
	//
	// example:
	//
	// true
	IncludeExpiredConfig *bool `json:"IncludeExpiredConfig,omitempty" xml:"IncludeExpiredConfig,omitempty"`
	// 一次获取的最大记录数。取值范围：1~100。
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 标记当前开始读取的位置，置空表示从头开始。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// 地域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s ListComponentsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListComponentsRequest) GoString() string {
	return s.String()
}

func (s *ListComponentsRequest) SetApplicationNames(v []*string) *ListComponentsRequest {
	s.ApplicationNames = v
	return s
}

func (s *ListComponentsRequest) SetClusterId(v string) *ListComponentsRequest {
	s.ClusterId = &v
	return s
}

func (s *ListComponentsRequest) SetComponentNames(v []*string) *ListComponentsRequest {
	s.ComponentNames = v
	return s
}

func (s *ListComponentsRequest) SetComponentStates(v []*string) *ListComponentsRequest {
	s.ComponentStates = v
	return s
}

func (s *ListComponentsRequest) SetIncludeExpiredConfig(v bool) *ListComponentsRequest {
	s.IncludeExpiredConfig = &v
	return s
}

func (s *ListComponentsRequest) SetMaxResults(v int32) *ListComponentsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListComponentsRequest) SetNextToken(v string) *ListComponentsRequest {
	s.NextToken = &v
	return s
}

func (s *ListComponentsRequest) SetRegionId(v string) *ListComponentsRequest {
	s.RegionId = &v
	return s
}

type ListComponentsResponseBody struct {
	Components []*ListComponentsResponseBodyComponents `json:"Components,omitempty" xml:"Components,omitempty" type:"Repeated"`
	// 本次请求所返回的最大记录条数。
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 返回读取到的数据位置，空代表数据已经读取完毕。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// 本次请求条件下的数据总量。
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListComponentsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListComponentsResponseBody) GoString() string {
	return s.String()
}

func (s *ListComponentsResponseBody) SetComponents(v []*ListComponentsResponseBodyComponents) *ListComponentsResponseBody {
	s.Components = v
	return s
}

func (s *ListComponentsResponseBody) SetMaxResults(v int32) *ListComponentsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListComponentsResponseBody) SetNextToken(v string) *ListComponentsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListComponentsResponseBody) SetRequestId(v string) *ListComponentsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListComponentsResponseBody) SetTotalCount(v int32) *ListComponentsResponseBody {
	s.TotalCount = &v
	return s
}

type ListComponentsResponseBodyComponents struct {
	// 应用名称。
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// 属性列表。
	Attributes []*Attribute `json:"Attributes,omitempty" xml:"Attributes,omitempty" type:"Repeated"`
	// 组件名称。
	//
	// example:
	//
	// DataNode
	ComponentName *string `json:"ComponentName,omitempty" xml:"ComponentName,omitempty"`
	// 命名空间。
	Namespace *string `json:"Namespace,omitempty" xml:"Namespace,omitempty"`
	// 安装该组件的机器总数。
	//
	// example:
	//
	// 1
	Replica *int32 `json:"Replica,omitempty" xml:"Replica,omitempty"`
}

func (s ListComponentsResponseBodyComponents) String() string {
	return tea.Prettify(s)
}

func (s ListComponentsResponseBodyComponents) GoString() string {
	return s.String()
}

func (s *ListComponentsResponseBodyComponents) SetApplicationName(v string) *ListComponentsResponseBodyComponents {
	s.ApplicationName = &v
	return s
}

func (s *ListComponentsResponseBodyComponents) SetAttributes(v []*Attribute) *ListComponentsResponseBodyComponents {
	s.Attributes = v
	return s
}

func (s *ListComponentsResponseBodyComponents) SetComponentName(v string) *ListComponentsResponseBodyComponents {
	s.ComponentName = &v
	return s
}

func (s *ListComponentsResponseBodyComponents) SetNamespace(v string) *ListComponentsResponseBodyComponents {
	s.Namespace = &v
	return s
}

func (s *ListComponentsResponseBodyComponents) SetReplica(v int32) *ListComponentsResponseBodyComponents {
	s.Replica = &v
	return s
}

type ListComponentsResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListComponentsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListComponentsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListComponentsResponse) GoString() string {
	return s.String()
}

func (s *ListComponentsResponse) SetHeaders(v map[string]*string) *ListComponentsResponse {
	s.Headers = v
	return s
}

func (s *ListComponentsResponse) SetStatusCode(v int32) *ListComponentsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListComponentsResponse) SetBody(v *ListComponentsResponseBody) *ListComponentsResponse {
	s.Body = v
	return s
}

type ListDoctorApplicationsRequest struct {
	// The IDs of jobs that are submitted to YARN.
	//
	// example:
	//
	// null
	AppIds []*string `json:"AppIds,omitempty" xml:"AppIds,omitempty" type:"Repeated"`
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The maximum number of entries to return on each page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the request to retrieve a new page of results.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The field that you use to sort the query results. Valid values:
	//
	// 1.  startTime: the time when the job starts
	//
	// 2.  endTime: the time when the job ends
	//
	// 3.  vcoreUtilization: the vCPU utilization of the job
	//
	// 4.  memUtilization: the memory usage of the job
	//
	// 5.  vcoreSeconds: the aggregated number of vCPUs that are allocated to the job multiplied by the number of seconds the job has been running
	//
	// 6.  memSeconds: the aggregated amount of memory that is allocated to the job multiplied by the number of seconds the job has been running
	//
	// 7.  score: the score of the job
	//
	// example:
	//
	// score
	OrderBy *string `json:"OrderBy,omitempty" xml:"OrderBy,omitempty"`
	// The order in which you want to sort the query results. Valid values:
	//
	// 	- ASC: the ascending order
	//
	// 	- DESC: the descending order
	//
	// example:
	//
	// ASC
	OrderType *string `json:"OrderType,omitempty" xml:"OrderType,omitempty"`
	// The YARN queues to which the jobs are submitted.
	//
	// example:
	//
	// null
	Queues []*string `json:"Queues,omitempty" xml:"Queues,omitempty" type:"Repeated"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The YARN engines to which the jobs are submitted.
	//
	// example:
	//
	// null
	Types []*string `json:"Types,omitempty" xml:"Types,omitempty" type:"Repeated"`
	// The users who submit the jobs.
	//
	// example:
	//
	// null
	Users []*string `json:"Users,omitempty" xml:"Users,omitempty" type:"Repeated"`
}

func (s ListDoctorApplicationsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorApplicationsRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorApplicationsRequest) SetAppIds(v []*string) *ListDoctorApplicationsRequest {
	s.AppIds = v
	return s
}

func (s *ListDoctorApplicationsRequest) SetClusterId(v string) *ListDoctorApplicationsRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorApplicationsRequest) SetDateTime(v string) *ListDoctorApplicationsRequest {
	s.DateTime = &v
	return s
}

func (s *ListDoctorApplicationsRequest) SetMaxResults(v int32) *ListDoctorApplicationsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorApplicationsRequest) SetNextToken(v string) *ListDoctorApplicationsRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorApplicationsRequest) SetOrderBy(v string) *ListDoctorApplicationsRequest {
	s.OrderBy = &v
	return s
}

func (s *ListDoctorApplicationsRequest) SetOrderType(v string) *ListDoctorApplicationsRequest {
	s.OrderType = &v
	return s
}

func (s *ListDoctorApplicationsRequest) SetQueues(v []*string) *ListDoctorApplicationsRequest {
	s.Queues = v
	return s
}

func (s *ListDoctorApplicationsRequest) SetRegionId(v string) *ListDoctorApplicationsRequest {
	s.RegionId = &v
	return s
}

func (s *ListDoctorApplicationsRequest) SetTypes(v []*string) *ListDoctorApplicationsRequest {
	s.Types = v
	return s
}

func (s *ListDoctorApplicationsRequest) SetUsers(v []*string) *ListDoctorApplicationsRequest {
	s.Users = v
	return s
}

type ListDoctorApplicationsResponseBody struct {
	// The details of jobs.
	Data []*ListDoctorApplicationsResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The maximum number of entries returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorApplicationsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorApplicationsResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorApplicationsResponseBody) SetData(v []*ListDoctorApplicationsResponseBodyData) *ListDoctorApplicationsResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorApplicationsResponseBody) SetMaxResults(v int32) *ListDoctorApplicationsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorApplicationsResponseBody) SetNextToken(v string) *ListDoctorApplicationsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorApplicationsResponseBody) SetRequestId(v string) *ListDoctorApplicationsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorApplicationsResponseBody) SetTotalCount(v int32) *ListDoctorApplicationsResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorApplicationsResponseBodyData struct {
	// The analysis results of the jobs.
	Analysis *ListDoctorApplicationsResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The job ID in YARN. The value of QueryID or SessionID is returned for a Hive job.
	//
	// example:
	//
	// application_1665056147236_*****
	AppId *string `json:"AppId,omitempty" xml:"AppId,omitempty"`
	// The name of the job.
	//
	// example:
	//
	// data-upload
	AppName *string `json:"AppName,omitempty" xml:"AppName,omitempty"`
	// The time when the job ended. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1682049088086
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The job IDs. Multiple job IDs are separated with commas (,).
	//
	// example:
	//
	// null
	Ids []*string `json:"Ids,omitempty" xml:"Ids,omitempty" type:"Repeated"`
	// The data about metrics.
	Metrics *ListDoctorApplicationsResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// The query statement. This parameter is left empty for non-SQL jobs.
	//
	// example:
	//
	// SELECT id, count(1) FROM test group by id;
	QuerySql *string `json:"QuerySql,omitempty" xml:"QuerySql,omitempty"`
	// The YARN queue to which the job was submitted.
	//
	// example:
	//
	// DW
	Queue *string `json:"Queue,omitempty" xml:"Queue,omitempty"`
	// The time when the job was submitted. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1677465658275
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
	// The type of the compute engine.
	//
	// example:
	//
	// TEZ
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
	// The username that was used to submit the job.
	//
	// example:
	//
	// DW
	User *string `json:"User,omitempty" xml:"User,omitempty"`
}

func (s ListDoctorApplicationsResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorApplicationsResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorApplicationsResponseBodyData) SetAnalysis(v *ListDoctorApplicationsResponseBodyDataAnalysis) *ListDoctorApplicationsResponseBodyData {
	s.Analysis = v
	return s
}

func (s *ListDoctorApplicationsResponseBodyData) SetAppId(v string) *ListDoctorApplicationsResponseBodyData {
	s.AppId = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyData) SetAppName(v string) *ListDoctorApplicationsResponseBodyData {
	s.AppName = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyData) SetEndTime(v int64) *ListDoctorApplicationsResponseBodyData {
	s.EndTime = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyData) SetIds(v []*string) *ListDoctorApplicationsResponseBodyData {
	s.Ids = v
	return s
}

func (s *ListDoctorApplicationsResponseBodyData) SetMetrics(v *ListDoctorApplicationsResponseBodyDataMetrics) *ListDoctorApplicationsResponseBodyData {
	s.Metrics = v
	return s
}

func (s *ListDoctorApplicationsResponseBodyData) SetQuerySql(v string) *ListDoctorApplicationsResponseBodyData {
	s.QuerySql = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyData) SetQueue(v string) *ListDoctorApplicationsResponseBodyData {
	s.Queue = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyData) SetStartTime(v int64) *ListDoctorApplicationsResponseBodyData {
	s.StartTime = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyData) SetType(v string) *ListDoctorApplicationsResponseBodyData {
	s.Type = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyData) SetUser(v string) *ListDoctorApplicationsResponseBodyData {
	s.User = &v
	return s
}

type ListDoctorApplicationsResponseBodyDataAnalysis struct {
	// The score of the job.
	//
	// example:
	//
	// 23
	Score *int32 `json:"Score,omitempty" xml:"Score,omitempty"`
	// The suggestion on executing the job.
	Suggestion *string `json:"Suggestion,omitempty" xml:"Suggestion,omitempty"`
}

func (s ListDoctorApplicationsResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorApplicationsResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *ListDoctorApplicationsResponseBodyDataAnalysis) SetScore(v int32) *ListDoctorApplicationsResponseBodyDataAnalysis {
	s.Score = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataAnalysis) SetSuggestion(v string) *ListDoctorApplicationsResponseBodyDataAnalysis {
	s.Suggestion = &v
	return s
}

type ListDoctorApplicationsResponseBodyDataMetrics struct {
	// The amount of memory consumed.
	MemSeconds *ListDoctorApplicationsResponseBodyDataMetricsMemSeconds `json:"MemSeconds,omitempty" xml:"MemSeconds,omitempty" type:"Struct"`
	// The memory usage
	MemUtilization *ListDoctorApplicationsResponseBodyDataMetricsMemUtilization `json:"MemUtilization,omitempty" xml:"MemUtilization,omitempty" type:"Struct"`
	// The CPU usage.
	VcoreSeconds *ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds `json:"VcoreSeconds,omitempty" xml:"VcoreSeconds,omitempty" type:"Struct"`
	// The CPU utilization. This parameter has the same meaning as %CPU in the Linux top command.
	VcoreUtilization *ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization `json:"VcoreUtilization,omitempty" xml:"VcoreUtilization,omitempty" type:"Struct"`
}

func (s ListDoctorApplicationsResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorApplicationsResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *ListDoctorApplicationsResponseBodyDataMetrics) SetMemSeconds(v *ListDoctorApplicationsResponseBodyDataMetricsMemSeconds) *ListDoctorApplicationsResponseBodyDataMetrics {
	s.MemSeconds = v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetrics) SetMemUtilization(v *ListDoctorApplicationsResponseBodyDataMetricsMemUtilization) *ListDoctorApplicationsResponseBodyDataMetrics {
	s.MemUtilization = v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetrics) SetVcoreSeconds(v *ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds) *ListDoctorApplicationsResponseBodyDataMetrics {
	s.VcoreSeconds = v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetrics) SetVcoreUtilization(v *ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization) *ListDoctorApplicationsResponseBodyDataMetrics {
	s.VcoreUtilization = v
	return s
}

type ListDoctorApplicationsResponseBodyDataMetricsMemSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total memory usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12312312
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorApplicationsResponseBodyDataMetricsMemSeconds) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorApplicationsResponseBodyDataMetricsMemSeconds) GoString() string {
	return s.String()
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsMemSeconds) SetDescription(v string) *ListDoctorApplicationsResponseBodyDataMetricsMemSeconds {
	s.Description = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsMemSeconds) SetName(v string) *ListDoctorApplicationsResponseBodyDataMetricsMemSeconds {
	s.Name = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsMemSeconds) SetUnit(v string) *ListDoctorApplicationsResponseBodyDataMetricsMemSeconds {
	s.Unit = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsMemSeconds) SetValue(v int64) *ListDoctorApplicationsResponseBodyDataMetricsMemSeconds {
	s.Value = &v
	return s
}

type ListDoctorApplicationsResponseBodyDataMetricsMemUtilization struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of used memory to total available memory
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memUtilization
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.23
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorApplicationsResponseBodyDataMetricsMemUtilization) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorApplicationsResponseBodyDataMetricsMemUtilization) GoString() string {
	return s.String()
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsMemUtilization) SetDescription(v string) *ListDoctorApplicationsResponseBodyDataMetricsMemUtilization {
	s.Description = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsMemUtilization) SetName(v string) *ListDoctorApplicationsResponseBodyDataMetricsMemUtilization {
	s.Name = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsMemUtilization) SetUnit(v string) *ListDoctorApplicationsResponseBodyDataMetricsMemUtilization {
	s.Unit = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsMemUtilization) SetValue(v float32) *ListDoctorApplicationsResponseBodyDataMetricsMemUtilization {
	s.Value = &v
	return s
}

type ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total vcore usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// VCores 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 11123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds) GoString() string {
	return s.String()
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds) SetDescription(v string) *ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds {
	s.Description = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds) SetName(v string) *ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds {
	s.Name = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds) SetUnit(v string) *ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds {
	s.Unit = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds) SetValue(v int64) *ListDoctorApplicationsResponseBodyDataMetricsVcoreSeconds {
	s.Value = &v
	return s
}

type ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of used vcore to total available cores
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreUtilization
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 23.1
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization) GoString() string {
	return s.String()
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization) SetDescription(v string) *ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization {
	s.Description = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization) SetName(v string) *ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization {
	s.Name = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization) SetUnit(v string) *ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization {
	s.Unit = &v
	return s
}

func (s *ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization) SetValue(v float32) *ListDoctorApplicationsResponseBodyDataMetricsVcoreUtilization {
	s.Value = &v
	return s
}

type ListDoctorApplicationsResponse struct {
	Headers    map[string]*string                  `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                              `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorApplicationsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorApplicationsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorApplicationsResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorApplicationsResponse) SetHeaders(v map[string]*string) *ListDoctorApplicationsResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorApplicationsResponse) SetStatusCode(v int32) *ListDoctorApplicationsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorApplicationsResponse) SetBody(v *ListDoctorApplicationsResponseBody) *ListDoctorApplicationsResponse {
	s.Body = v
	return s
}

type ListDoctorComputeSummaryRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The resource types, which are used to filter query results. Valid values:
	//
	// 	- engine: filters results by engine.
	//
	// 	- queue: filters results by queue.
	//
	// 	- cluster: displays the results at the cluster level.
	//
	// If you do not specify this parameter, the information at the cluster level is displayed by default. Currently, only one resource type is supported. If you specify multiple resource types, the first resource type is used by default.
	//
	// example:
	//
	// null
	ComponentTypes []*string `json:"ComponentTypes,omitempty" xml:"ComponentTypes,omitempty" type:"Repeated"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The maximum number of entries to return on each page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the request to retrieve a new page of results.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The basis on which you want to sort the query results. Valid values:
	//
	// 1.  vcoreSeconds: the total CPU consumption over time in seconds.
	//
	// 2.  memSeconds: the total memory consumption over time in seconds.
	//
	// 3.  vcoreUtilization: the average CPU utilization. The meaning is the same as the %CPU parameter in the output of the top command in Linux.
	//
	// 4.  memUtilization: the average memory usage.
	//
	// 5.  vcoreSecondsDayGrowthRatio: the day-to-day growth rate of the total CPU consumption over time in seconds.
	//
	// 6.  memSecondsDayGrowthRatio: the day-to-day growth rate of the total memory consumption over time in seconds.
	//
	// 7.  readSize: the total amount of data read from the file system.
	//
	// 8.  writeSize: the total amount of data written to the file system.
	//
	// 9.  healthyJobCount: the total number of healthy jobs.
	//
	// 10. subHealthyJobCount: the total number of sub-healthy jobs.
	//
	// 11. unhealthyJobCount: the total number of unhealthy jobs.
	//
	// 12. needAttentionJobCount: the total number of jobs that require attention.
	//
	// 13. score: the score for jobs.
	//
	// 14. scoreDayGrowthRatio: the day-to-day growth rate of the score for jobs.
	//
	// example:
	//
	// score
	OrderBy *string `json:"OrderBy,omitempty" xml:"OrderBy,omitempty"`
	// The order in which you want to sort the query results. Valid values:
	//
	// 	- ASC: in ascending order.
	//
	// 	- DESC: in descending order.
	//
	// example:
	//
	// ASC
	OrderType *string `json:"OrderType,omitempty" xml:"OrderType,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s ListDoctorComputeSummaryRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryRequest) SetClusterId(v string) *ListDoctorComputeSummaryRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorComputeSummaryRequest) SetComponentTypes(v []*string) *ListDoctorComputeSummaryRequest {
	s.ComponentTypes = v
	return s
}

func (s *ListDoctorComputeSummaryRequest) SetDateTime(v string) *ListDoctorComputeSummaryRequest {
	s.DateTime = &v
	return s
}

func (s *ListDoctorComputeSummaryRequest) SetMaxResults(v int32) *ListDoctorComputeSummaryRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorComputeSummaryRequest) SetNextToken(v string) *ListDoctorComputeSummaryRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorComputeSummaryRequest) SetOrderBy(v string) *ListDoctorComputeSummaryRequest {
	s.OrderBy = &v
	return s
}

func (s *ListDoctorComputeSummaryRequest) SetOrderType(v string) *ListDoctorComputeSummaryRequest {
	s.OrderType = &v
	return s
}

func (s *ListDoctorComputeSummaryRequest) SetRegionId(v string) *ListDoctorComputeSummaryRequest {
	s.RegionId = &v
	return s
}

type ListDoctorComputeSummaryResponseBody struct {
	// The details of resource usage.
	Data []*ListDoctorComputeSummaryResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The maximum number of entries that are returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorComputeSummaryResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBody) SetData(v []*ListDoctorComputeSummaryResponseBodyData) *ListDoctorComputeSummaryResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorComputeSummaryResponseBody) SetMaxResults(v int32) *ListDoctorComputeSummaryResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBody) SetNextToken(v string) *ListDoctorComputeSummaryResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBody) SetRequestId(v string) *ListDoctorComputeSummaryResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBody) SetTotalCount(v int32) *ListDoctorComputeSummaryResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorComputeSummaryResponseBodyData struct {
	// The resource analysis results.
	Analysis *ListDoctorComputeSummaryResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The name of the resource whose details are obtained based on the value of ComponentTypes. For example, if the value of ComponentTypes is Queue, the value of this parameter is a queue, such as DW.
	//
	// example:
	//
	// DW
	ComponentName *string `json:"ComponentName,omitempty" xml:"ComponentName,omitempty"`
	// The metric information.
	Metrics *ListDoctorComputeSummaryResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
}

func (s ListDoctorComputeSummaryResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyData) SetAnalysis(v *ListDoctorComputeSummaryResponseBodyDataAnalysis) *ListDoctorComputeSummaryResponseBodyData {
	s.Analysis = v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyData) SetComponentName(v string) *ListDoctorComputeSummaryResponseBodyData {
	s.ComponentName = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyData) SetMetrics(v *ListDoctorComputeSummaryResponseBodyDataMetrics) *ListDoctorComputeSummaryResponseBodyData {
	s.Metrics = v
	return s
}

type ListDoctorComputeSummaryResponseBodyDataAnalysis struct {
	// The total number of healthy jobs.
	//
	// example:
	//
	// 3
	HealthyJobCount *int64 `json:"HealthyJobCount,omitempty" xml:"HealthyJobCount,omitempty"`
	// The total number of jobs that require attention.
	//
	// example:
	//
	// 23
	NeedAttentionJobCount *int64 `json:"NeedAttentionJobCount,omitempty" xml:"NeedAttentionJobCount,omitempty"`
	// The score for jobs.
	//
	// example:
	//
	// 56
	Score *int32 `json:"Score,omitempty" xml:"Score,omitempty"`
	// The day-to-day growth rate of the score for jobs.
	//
	// example:
	//
	// 0.03
	ScoreDayGrowthRatio *float32 `json:"ScoreDayGrowthRatio,omitempty" xml:"ScoreDayGrowthRatio,omitempty"`
	// The total number of sub-healthy jobs.
	//
	// example:
	//
	// 13
	SubHealthyJobCount *int64 `json:"SubHealthyJobCount,omitempty" xml:"SubHealthyJobCount,omitempty"`
	// The total number of unhealthy jobs.
	//
	// example:
	//
	// 123
	UnhealthyJobCount *int64 `json:"UnhealthyJobCount,omitempty" xml:"UnhealthyJobCount,omitempty"`
}

func (s ListDoctorComputeSummaryResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyDataAnalysis) SetHealthyJobCount(v int64) *ListDoctorComputeSummaryResponseBodyDataAnalysis {
	s.HealthyJobCount = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataAnalysis) SetNeedAttentionJobCount(v int64) *ListDoctorComputeSummaryResponseBodyDataAnalysis {
	s.NeedAttentionJobCount = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataAnalysis) SetScore(v int32) *ListDoctorComputeSummaryResponseBodyDataAnalysis {
	s.Score = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataAnalysis) SetScoreDayGrowthRatio(v float32) *ListDoctorComputeSummaryResponseBodyDataAnalysis {
	s.ScoreDayGrowthRatio = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataAnalysis) SetSubHealthyJobCount(v int64) *ListDoctorComputeSummaryResponseBodyDataAnalysis {
	s.SubHealthyJobCount = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataAnalysis) SetUnhealthyJobCount(v int64) *ListDoctorComputeSummaryResponseBodyDataAnalysis {
	s.UnhealthyJobCount = &v
	return s
}

type ListDoctorComputeSummaryResponseBodyDataMetrics struct {
	// The total memory consumption over time in seconds.
	MemSeconds *ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds `json:"MemSeconds,omitempty" xml:"MemSeconds,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total memory consumption over time in seconds.
	MemSecondsDayGrowthRatio *ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio `json:"MemSecondsDayGrowthRatio,omitempty" xml:"MemSecondsDayGrowthRatio,omitempty" type:"Struct"`
	// The average memory usage.
	MemUtilization *ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization `json:"MemUtilization,omitempty" xml:"MemUtilization,omitempty" type:"Struct"`
	// The total amount of data read from the file system.
	ReadSize *ListDoctorComputeSummaryResponseBodyDataMetricsReadSize `json:"ReadSize,omitempty" xml:"ReadSize,omitempty" type:"Struct"`
	// The total CPU consumption over time in seconds.
	VcoreSeconds *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds `json:"VcoreSeconds,omitempty" xml:"VcoreSeconds,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total CPU consumption over time in seconds.
	VcoreSecondsDayGrowthRatio *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio `json:"VcoreSecondsDayGrowthRatio,omitempty" xml:"VcoreSecondsDayGrowthRatio,omitempty" type:"Struct"`
	// The average CPU utilization. The meaning is the same as the %CPU parameter in the output of the top command in Linux.
	VcoreUtilization *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization `json:"VcoreUtilization,omitempty" xml:"VcoreUtilization,omitempty" type:"Struct"`
	// The total amount of data written to the file system.
	WriteSize *ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize `json:"WriteSize,omitempty" xml:"WriteSize,omitempty" type:"Struct"`
}

func (s ListDoctorComputeSummaryResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetrics) SetMemSeconds(v *ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) *ListDoctorComputeSummaryResponseBodyDataMetrics {
	s.MemSeconds = v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetrics) SetMemSecondsDayGrowthRatio(v *ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) *ListDoctorComputeSummaryResponseBodyDataMetrics {
	s.MemSecondsDayGrowthRatio = v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetrics) SetMemUtilization(v *ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) *ListDoctorComputeSummaryResponseBodyDataMetrics {
	s.MemUtilization = v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetrics) SetReadSize(v *ListDoctorComputeSummaryResponseBodyDataMetricsReadSize) *ListDoctorComputeSummaryResponseBodyDataMetrics {
	s.ReadSize = v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetrics) SetVcoreSeconds(v *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) *ListDoctorComputeSummaryResponseBodyDataMetrics {
	s.VcoreSeconds = v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetrics) SetVcoreSecondsDayGrowthRatio(v *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) *ListDoctorComputeSummaryResponseBodyDataMetrics {
	s.VcoreSecondsDayGrowthRatio = v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetrics) SetVcoreUtilization(v *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) *ListDoctorComputeSummaryResponseBodyDataMetrics {
	s.VcoreUtilization = v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetrics) SetWriteSize(v *ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize) *ListDoctorComputeSummaryResponseBodyDataMetrics {
	s.WriteSize = v
	return s
}

type ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total memory usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12312312
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) SetDescription(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds {
	s.Description = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) SetName(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds {
	s.Name = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) SetUnit(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds {
	s.Unit = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds) SetValue(v int64) *ListDoctorComputeSummaryResponseBodyDataMetricsMemSeconds {
	s.Value = &v
	return s
}

type ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Growth ratio of memory usage in seconds per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memSecondsDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.36
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) SetDescription(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) SetName(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) SetUnit(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio) SetValue(v float32) *ListDoctorComputeSummaryResponseBodyDataMetricsMemSecondsDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of used memory to total available memory
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memUtilization
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.82
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) SetDescription(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization {
	s.Description = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) SetName(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization {
	s.Name = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) SetUnit(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization {
	s.Unit = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization) SetValue(v float32) *ListDoctorComputeSummaryResponseBodyDataMetricsMemUtilization {
	s.Value = &v
	return s
}

type ListDoctorComputeSummaryResponseBodyDataMetricsReadSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total cumulative size of data read in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// readSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 504888659968
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsReadSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsReadSize) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsReadSize) SetDescription(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsReadSize {
	s.Description = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsReadSize) SetName(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsReadSize {
	s.Name = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsReadSize) SetUnit(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsReadSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsReadSize) SetValue(v int64) *ListDoctorComputeSummaryResponseBodyDataMetricsReadSize {
	s.Value = &v
	return s
}

type ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total vcore usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// VCores 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1231412
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) SetDescription(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds {
	s.Description = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) SetName(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds {
	s.Name = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) SetUnit(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds {
	s.Unit = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds) SetValue(v int64) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSeconds {
	s.Value = &v
	return s
}

type ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Growth ratio of virtual core usage in seconds per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreSecondsDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.22
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) SetDescription(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) SetName(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) SetUnit(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio) SetValue(v float32) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreSecondsDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of used vcore to total available cores
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreUtilization
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 32.1
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) SetDescription(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization {
	s.Description = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) SetName(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization {
	s.Name = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) SetUnit(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization {
	s.Unit = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization) SetValue(v float32) *ListDoctorComputeSummaryResponseBodyDataMetricsVcoreUtilization {
	s.Value = &v
	return s
}

type ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total cumulative size of data written in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// writeSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 6294093393920
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize) SetDescription(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize {
	s.Description = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize) SetName(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize {
	s.Name = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize) SetUnit(v string) *ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize) SetValue(v int64) *ListDoctorComputeSummaryResponseBodyDataMetricsWriteSize {
	s.Value = &v
	return s
}

type ListDoctorComputeSummaryResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorComputeSummaryResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorComputeSummaryResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorComputeSummaryResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorComputeSummaryResponse) SetHeaders(v map[string]*string) *ListDoctorComputeSummaryResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorComputeSummaryResponse) SetStatusCode(v int32) *ListDoctorComputeSummaryResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorComputeSummaryResponse) SetBody(v *ListDoctorComputeSummaryResponseBody) *ListDoctorComputeSummaryResponse {
	s.Body = v
	return s
}

type ListDoctorHBaseRegionServersRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The query date.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The maximum number of entries to return on each page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the request to retrieve a new page of results.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The field that you use to sort the query results. Valid value:
	//
	// 	- regionCount: the number of regions.
	//
	// example:
	//
	// regionCount
	OrderBy *string `json:"OrderBy,omitempty" xml:"OrderBy,omitempty"`
	// The order in which you want to sort the query results. Valid value:
	//
	// 	- ASC: in ascending order
	//
	// 	- DESC: in descending order
	//
	// example:
	//
	// ASC
	OrderType *string `json:"OrderType,omitempty" xml:"OrderType,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The RegionServer hosts.
	//
	// example:
	//
	// null
	RegionServerHosts []*string `json:"RegionServerHosts,omitempty" xml:"RegionServerHosts,omitempty" type:"Repeated"`
}

func (s ListDoctorHBaseRegionServersRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersRequest) SetClusterId(v string) *ListDoctorHBaseRegionServersRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorHBaseRegionServersRequest) SetDateTime(v string) *ListDoctorHBaseRegionServersRequest {
	s.DateTime = &v
	return s
}

func (s *ListDoctorHBaseRegionServersRequest) SetMaxResults(v int32) *ListDoctorHBaseRegionServersRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHBaseRegionServersRequest) SetNextToken(v string) *ListDoctorHBaseRegionServersRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHBaseRegionServersRequest) SetOrderBy(v string) *ListDoctorHBaseRegionServersRequest {
	s.OrderBy = &v
	return s
}

func (s *ListDoctorHBaseRegionServersRequest) SetOrderType(v string) *ListDoctorHBaseRegionServersRequest {
	s.OrderType = &v
	return s
}

func (s *ListDoctorHBaseRegionServersRequest) SetRegionId(v string) *ListDoctorHBaseRegionServersRequest {
	s.RegionId = &v
	return s
}

func (s *ListDoctorHBaseRegionServersRequest) SetRegionServerHosts(v []*string) *ListDoctorHBaseRegionServersRequest {
	s.RegionServerHosts = v
	return s
}

type ListDoctorHBaseRegionServersResponseBody struct {
	// The returned data.
	Data []*ListDoctorHBaseRegionServersResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The maximum number of entries that are returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBody) SetData(v []*ListDoctorHBaseRegionServersResponseBodyData) *ListDoctorHBaseRegionServersResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBody) SetMaxResults(v int32) *ListDoctorHBaseRegionServersResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBody) SetNextToken(v string) *ListDoctorHBaseRegionServersResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBody) SetRequestId(v string) *ListDoctorHBaseRegionServersResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBody) SetTotalCount(v int32) *ListDoctorHBaseRegionServersResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyData struct {
	// The metric information.
	Metrics *ListDoctorHBaseRegionServersResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// The RegionServer host.
	//
	// example:
	//
	// emr-worker-4.cluster-20****
	RegionServerHost *string `json:"RegionServerHost,omitempty" xml:"RegionServerHost,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyData) SetMetrics(v *ListDoctorHBaseRegionServersResponseBodyDataMetrics) *ListDoctorHBaseRegionServersResponseBodyData {
	s.Metrics = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyData) SetRegionServerHost(v string) *ListDoctorHBaseRegionServersResponseBodyData {
	s.RegionServerHost = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetrics struct {
	// The average garbage collection (GC) duration.
	AvgGc *ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc `json:"AvgGc,omitempty" xml:"AvgGc,omitempty" type:"Struct"`
	// The cache hit ratio.
	CacheRatio *ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio `json:"CacheRatio,omitempty" xml:"CacheRatio,omitempty" type:"Struct"`
	// The number of daily read requests.
	DailyReadRequest *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest `json:"DailyReadRequest,omitempty" xml:"DailyReadRequest,omitempty" type:"Struct"`
	// The growth rate of the number of daily read requests.
	DailyReadRequestDayGrowthRatio *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio `json:"DailyReadRequestDayGrowthRatio,omitempty" xml:"DailyReadRequestDayGrowthRatio,omitempty" type:"Struct"`
	// The number of daily write requests.
	DailyWriteRequest *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest `json:"DailyWriteRequest,omitempty" xml:"DailyWriteRequest,omitempty" type:"Struct"`
	// The growth rate of the number of daily write requests.
	DailyWriteRequestDayGrowthRatio *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio `json:"DailyWriteRequestDayGrowthRatio,omitempty" xml:"DailyWriteRequestDayGrowthRatio,omitempty" type:"Struct"`
	// The number of regions.
	RegionCount *ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount `json:"RegionCount,omitempty" xml:"RegionCount,omitempty" type:"Struct"`
	// The cumulative number of read requests.
	TotalReadRequest *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest `json:"TotalReadRequest,omitempty" xml:"TotalReadRequest,omitempty" type:"Struct"`
	// The cumulative number of all requests.
	TotalRequest *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest `json:"TotalRequest,omitempty" xml:"TotalRequest,omitempty" type:"Struct"`
	// The cumulative number of write requests.
	TotalWriteRequest *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest `json:"TotalWriteRequest,omitempty" xml:"TotalWriteRequest,omitempty" type:"Struct"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetrics) SetAvgGc(v *ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc) *ListDoctorHBaseRegionServersResponseBodyDataMetrics {
	s.AvgGc = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetrics) SetCacheRatio(v *ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio) *ListDoctorHBaseRegionServersResponseBodyDataMetrics {
	s.CacheRatio = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetrics) SetDailyReadRequest(v *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest) *ListDoctorHBaseRegionServersResponseBodyDataMetrics {
	s.DailyReadRequest = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetrics) SetDailyReadRequestDayGrowthRatio(v *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) *ListDoctorHBaseRegionServersResponseBodyDataMetrics {
	s.DailyReadRequestDayGrowthRatio = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetrics) SetDailyWriteRequest(v *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest) *ListDoctorHBaseRegionServersResponseBodyDataMetrics {
	s.DailyWriteRequest = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetrics) SetDailyWriteRequestDayGrowthRatio(v *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) *ListDoctorHBaseRegionServersResponseBodyDataMetrics {
	s.DailyWriteRequestDayGrowthRatio = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetrics) SetRegionCount(v *ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount) *ListDoctorHBaseRegionServersResponseBodyDataMetrics {
	s.RegionCount = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetrics) SetTotalReadRequest(v *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest) *ListDoctorHBaseRegionServersResponseBodyDataMetrics {
	s.TotalReadRequest = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetrics) SetTotalRequest(v *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest) *ListDoctorHBaseRegionServersResponseBodyDataMetrics {
	s.TotalRequest = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetrics) SetTotalWriteRequest(v *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest) *ListDoctorHBaseRegionServersResponseBodyDataMetrics {
	s.TotalWriteRequest = v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc struct {
	// The description of the metric.
	//
	// example:
	//
	// The efficiency of garbage collection in the system
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// avgGc
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 37.9
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc) SetDescription(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc) SetName(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc) SetUnit(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc) SetValue(v float32) *ListDoctorHBaseRegionServersResponseBodyDataMetricsAvgGc {
	s.Value = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of the BlockCache memory size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// cacheRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 96.7
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio) SetDescription(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio) SetName(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio) SetUnit(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio) SetValue(v float32) *ListDoctorHBaseRegionServersResponseBodyDataMetricsCacheRatio {
	s.Value = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of read requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyReadRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 42571
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest) SetDescription(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest) SetName(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest) SetUnit(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest) SetValue(v int64) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequest {
	s.Value = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// The growth rate of daily read request quantity.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyReadRequestDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetDescription(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetName(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetUnit(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetValue(v float32) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of write requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyWriteRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 23124
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest) SetDescription(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest) SetName(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest) SetUnit(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest) SetValue(v int64) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequest {
	s.Value = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// The growth rate of daily write request quantity.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyWriteRequestDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetDescription(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetName(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetUnit(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetValue(v float32) *ListDoctorHBaseRegionServersResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of regions count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// regionCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 81
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount) SetDescription(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount) SetName(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount) SetUnit(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount) SetValue(v int64) *ListDoctorHBaseRegionServersResponseBodyDataMetricsRegionCount {
	s.Value = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Total number of read requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalReadRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 170500567
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest) SetDescription(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest) SetName(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest) SetUnit(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest) SetValue(v int64) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalReadRequest {
	s.Value = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Total number of requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 89499511
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest) SetDescription(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest) SetName(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest) SetUnit(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest) SetValue(v int64) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalRequest {
	s.Value = &v
	return s
}

type ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Total number of write requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalWriteRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 30109837
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest) SetDescription(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest) SetName(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest) SetUnit(v string) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest) SetValue(v int64) *ListDoctorHBaseRegionServersResponseBodyDataMetricsTotalWriteRequest {
	s.Value = &v
	return s
}

type ListDoctorHBaseRegionServersResponse struct {
	Headers    map[string]*string                        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorHBaseRegionServersResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorHBaseRegionServersResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseRegionServersResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseRegionServersResponse) SetHeaders(v map[string]*string) *ListDoctorHBaseRegionServersResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorHBaseRegionServersResponse) SetStatusCode(v int32) *ListDoctorHBaseRegionServersResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorHBaseRegionServersResponse) SetBody(v *ListDoctorHBaseRegionServersResponseBody) *ListDoctorHBaseRegionServersResponse {
	s.Body = v
	return s
}

type ListDoctorHBaseTablesRequest struct {
	// The ID of the cluster.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The query date.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The maximum number of entries that are returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// Marks the current position to start reading. If this field is empty, the data is read from the beginning.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The field that you use to sort the query results.
	//
	// Valid values:
	//
	// 	- tableSize
	//
	// example:
	//
	// tableSize
	OrderBy *string `json:"OrderBy,omitempty" xml:"OrderBy,omitempty"`
	// The order in which you want to sort the query results. Valid value:
	//
	// 	- ASC: in ascending order
	//
	// 	- DESC: in descending order
	//
	// example:
	//
	// ASC
	OrderType *string `json:"OrderType,omitempty" xml:"OrderType,omitempty"`
	// The ID of the region.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The table names, which are used to filter the query results.
	//
	// example:
	//
	// null
	TableNames []*string `json:"TableNames,omitempty" xml:"TableNames,omitempty" type:"Repeated"`
}

func (s ListDoctorHBaseTablesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesRequest) SetClusterId(v string) *ListDoctorHBaseTablesRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorHBaseTablesRequest) SetDateTime(v string) *ListDoctorHBaseTablesRequest {
	s.DateTime = &v
	return s
}

func (s *ListDoctorHBaseTablesRequest) SetMaxResults(v int32) *ListDoctorHBaseTablesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHBaseTablesRequest) SetNextToken(v string) *ListDoctorHBaseTablesRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHBaseTablesRequest) SetOrderBy(v string) *ListDoctorHBaseTablesRequest {
	s.OrderBy = &v
	return s
}

func (s *ListDoctorHBaseTablesRequest) SetOrderType(v string) *ListDoctorHBaseTablesRequest {
	s.OrderType = &v
	return s
}

func (s *ListDoctorHBaseTablesRequest) SetRegionId(v string) *ListDoctorHBaseTablesRequest {
	s.RegionId = &v
	return s
}

func (s *ListDoctorHBaseTablesRequest) SetTableNames(v []*string) *ListDoctorHBaseTablesRequest {
	s.TableNames = v
	return s
}

type ListDoctorHBaseTablesResponseBody struct {
	// The response parameters.
	Data []*ListDoctorHBaseTablesResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The maximum number of entries returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The page number of the next page returned.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBody) SetData(v []*ListDoctorHBaseTablesResponseBodyData) *ListDoctorHBaseTablesResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBody) SetMaxResults(v int32) *ListDoctorHBaseTablesResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBody) SetNextToken(v string) *ListDoctorHBaseTablesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBody) SetRequestId(v string) *ListDoctorHBaseTablesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBody) SetTotalCount(v int32) *ListDoctorHBaseTablesResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyData struct {
	// The diagnosis result.
	Analysis *ListDoctorHBaseTablesResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The metric information.
	Metrics *ListDoctorHBaseTablesResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// The name of the table.
	//
	// example:
	//
	// tb_item
	TableName *string `json:"TableName,omitempty" xml:"TableName,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyData) SetAnalysis(v *ListDoctorHBaseTablesResponseBodyDataAnalysis) *ListDoctorHBaseTablesResponseBodyData {
	s.Analysis = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyData) SetMetrics(v *ListDoctorHBaseTablesResponseBodyDataMetrics) *ListDoctorHBaseTablesResponseBodyData {
	s.Metrics = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyData) SetTableName(v string) *ListDoctorHBaseTablesResponseBodyData {
	s.TableName = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataAnalysis struct {
	// The regions that have read hotspot issues.
	//
	// example:
	//
	// null
	ReadRequestHotspotRegionList []*string `json:"ReadRequestHotspotRegionList,omitempty" xml:"ReadRequestHotspotRegionList,omitempty" type:"Repeated"`
	// The description of read imbalance.
	//
	// example:
	//
	// read request unbalance is <p class=\\"report-detail-topic\\">
	ReadRequestUnbalanceSuggestion *string `json:"ReadRequestUnbalanceSuggestion,omitempty" xml:"ReadRequestUnbalanceSuggestion,omitempty"`
	// The regions that have read/write hotspot issues.
	//
	// example:
	//
	// null
	RequestHotspotRegionList []*string `json:"RequestHotspotRegionList,omitempty" xml:"RequestHotspotRegionList,omitempty" type:"Repeated"`
	// The description of read/write imbalance.
	//
	// example:
	//
	// read request unbalance is <p class=\\"report-detail-topic\\">
	RequestUnbalanceSuggestion *string `json:"RequestUnbalanceSuggestion,omitempty" xml:"RequestUnbalanceSuggestion,omitempty"`
	// The score of the table.
	//
	// example:
	//
	// 67
	TableScore *int32 `json:"TableScore,omitempty" xml:"TableScore,omitempty"`
	// The regions that have write hotspot issues.
	//
	// example:
	//
	// null
	WriteRequestHotspotRegionList []*string `json:"WriteRequestHotspotRegionList,omitempty" xml:"WriteRequestHotspotRegionList,omitempty" type:"Repeated"`
	// The description of write imbalance.
	//
	// example:
	//
	// write request unbalance is <p class=\\"report-detail-topic\\">
	WriteRequestUnbalanceSuggestion *string `json:"WriteRequestUnbalanceSuggestion,omitempty" xml:"WriteRequestUnbalanceSuggestion,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataAnalysis) SetReadRequestHotspotRegionList(v []*string) *ListDoctorHBaseTablesResponseBodyDataAnalysis {
	s.ReadRequestHotspotRegionList = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataAnalysis) SetReadRequestUnbalanceSuggestion(v string) *ListDoctorHBaseTablesResponseBodyDataAnalysis {
	s.ReadRequestUnbalanceSuggestion = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataAnalysis) SetRequestHotspotRegionList(v []*string) *ListDoctorHBaseTablesResponseBodyDataAnalysis {
	s.RequestHotspotRegionList = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataAnalysis) SetRequestUnbalanceSuggestion(v string) *ListDoctorHBaseTablesResponseBodyDataAnalysis {
	s.RequestUnbalanceSuggestion = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataAnalysis) SetTableScore(v int32) *ListDoctorHBaseTablesResponseBodyDataAnalysis {
	s.TableScore = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataAnalysis) SetWriteRequestHotspotRegionList(v []*string) *ListDoctorHBaseTablesResponseBodyDataAnalysis {
	s.WriteRequestHotspotRegionList = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataAnalysis) SetWriteRequestUnbalanceSuggestion(v string) *ListDoctorHBaseTablesResponseBodyDataAnalysis {
	s.WriteRequestUnbalanceSuggestion = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetrics struct {
	// The number of days during which the table was not accessed.
	ColdAccessDay *ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay `json:"ColdAccessDay,omitempty" xml:"ColdAccessDay,omitempty" type:"Struct"`
	// The number of consecutive days without access to data before the data is considered as very cold data.
	ColdConfigDay *ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay `json:"ColdConfigDay,omitempty" xml:"ColdConfigDay,omitempty" type:"Struct"`
	// The size of cold data.
	ColdDataSize *ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize `json:"ColdDataSize,omitempty" xml:"ColdDataSize,omitempty" type:"Struct"`
	// The total number of read requests for the table in a day.
	DailyReadRequest *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest `json:"DailyReadRequest,omitempty" xml:"DailyReadRequest,omitempty" type:"Struct"`
	// The daily increment ratio of the number of read requests in a day.
	DailyReadRequestDayGrowthRatio *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio `json:"DailyReadRequestDayGrowthRatio,omitempty" xml:"DailyReadRequestDayGrowthRatio,omitempty" type:"Struct"`
	// The total number of write requests for the table in a day.
	DailyWriteRequest *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest `json:"DailyWriteRequest,omitempty" xml:"DailyWriteRequest,omitempty" type:"Struct"`
	// The daily increment ratio of the number of write requests in a day.
	DailyWriteRequestDayGrowthRatio *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio `json:"DailyWriteRequestDayGrowthRatio,omitempty" xml:"DailyWriteRequestDayGrowthRatio,omitempty" type:"Struct"`
	// The number of consecutive days without access to data before the data was considered as very cold data.
	FreezeConfigDay *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay `json:"FreezeConfigDay,omitempty" xml:"FreezeConfigDay,omitempty" type:"Struct"`
	// The size of very cold data.
	FreezeDataSize *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize `json:"FreezeDataSize,omitempty" xml:"FreezeDataSize,omitempty" type:"Struct"`
	// The size of hot data.
	HotDataSize *ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize `json:"HotDataSize,omitempty" xml:"HotDataSize,omitempty" type:"Struct"`
	// The localization rate.
	Locality *ListDoctorHBaseTablesResponseBodyDataMetricsLocality `json:"Locality,omitempty" xml:"Locality,omitempty" type:"Struct"`
	// The read balancing degree.
	ReadRequestBalance *ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance `json:"ReadRequestBalance,omitempty" xml:"ReadRequestBalance,omitempty" type:"Struct"`
	// The balancing degree.
	RegionBalance *ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance `json:"RegionBalance,omitempty" xml:"RegionBalance,omitempty" type:"Struct"`
	// The number of regions that host the table.
	RegionCount *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount `json:"RegionCount,omitempty" xml:"RegionCount,omitempty" type:"Struct"`
	// The daily increment ratio of the number of regions.
	RegionCountDayGrowthRatio *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio `json:"RegionCountDayGrowthRatio,omitempty" xml:"RegionCountDayGrowthRatio,omitempty" type:"Struct"`
	// The number of region servers that host the table.
	RegionServerCount *ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount `json:"RegionServerCount,omitempty" xml:"RegionServerCount,omitempty" type:"Struct"`
	// The request balancing degree.
	RequestBalance *ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance `json:"RequestBalance,omitempty" xml:"RequestBalance,omitempty" type:"Struct"`
	// The number of StoreFiles.
	StoreFileCount *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount `json:"StoreFileCount,omitempty" xml:"StoreFileCount,omitempty" type:"Struct"`
	// The daily increment ratio of the number of StoreFiles.
	StoreFileCountDayGrowthRatio *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio `json:"StoreFileCountDayGrowthRatio,omitempty" xml:"StoreFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The size of the table.
	TableSize *ListDoctorHBaseTablesResponseBodyDataMetricsTableSize `json:"TableSize,omitempty" xml:"TableSize,omitempty" type:"Struct"`
	// The daily increment ratio of the table size.
	TableSizeDayGrowthRatio *ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio `json:"TableSizeDayGrowthRatio,omitempty" xml:"TableSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of consecutive days without access to data before the data is considered as cold data.
	WarmConfigDay *ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay `json:"WarmConfigDay,omitempty" xml:"WarmConfigDay,omitempty" type:"Struct"`
	// The size of warm data.
	WarmDataSize *ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize `json:"WarmDataSize,omitempty" xml:"WarmDataSize,omitempty" type:"Struct"`
	// The write balancing degree.
	WriteRequestBalance *ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance `json:"WriteRequestBalance,omitempty" xml:"WriteRequestBalance,omitempty" type:"Struct"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetColdAccessDay(v *ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.ColdAccessDay = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetColdConfigDay(v *ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.ColdConfigDay = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetColdDataSize(v *ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.ColdDataSize = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetDailyReadRequest(v *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.DailyReadRequest = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetDailyReadRequestDayGrowthRatio(v *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.DailyReadRequestDayGrowthRatio = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetDailyWriteRequest(v *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.DailyWriteRequest = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetDailyWriteRequestDayGrowthRatio(v *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.DailyWriteRequestDayGrowthRatio = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetFreezeConfigDay(v *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.FreezeConfigDay = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetFreezeDataSize(v *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.FreezeDataSize = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetHotDataSize(v *ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.HotDataSize = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetLocality(v *ListDoctorHBaseTablesResponseBodyDataMetricsLocality) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.Locality = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetReadRequestBalance(v *ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.ReadRequestBalance = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetRegionBalance(v *ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.RegionBalance = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetRegionCount(v *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.RegionCount = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetRegionCountDayGrowthRatio(v *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.RegionCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetRegionServerCount(v *ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.RegionServerCount = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetRequestBalance(v *ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.RequestBalance = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetStoreFileCount(v *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.StoreFileCount = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetStoreFileCountDayGrowthRatio(v *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.StoreFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetTableSize(v *ListDoctorHBaseTablesResponseBodyDataMetricsTableSize) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.TableSize = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetTableSizeDayGrowthRatio(v *ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.TableSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetWarmConfigDay(v *ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.WarmConfigDay = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetWarmDataSize(v *ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.WarmDataSize = v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetrics) SetWriteRequestBalance(v *ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance) *ListDoctorHBaseTablesResponseBodyDataMetrics {
	s.WriteRequestBalance = v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay struct {
	// The description of the metric.
	//
	// example:
	//
	// Cold access day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldAccessDay
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// day
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsColdAccessDay {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay struct {
	// The description of the metric.
	//
	// example:
	//
	// Cold config day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldConfigDay
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// dat
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsColdConfigDay {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 100
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsColdDataSize {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of read requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyReadRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequest {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of read requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyReadRequestDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.8
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio) SetValue(v float32) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyReadRequestDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of write requests per day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyWriteRequest
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequest {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// The balance of distributing requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// dailyWriteRequestDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.8
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio) SetValue(v float32) *ListDoctorHBaseTablesResponseBodyDataMetricsDailyWriteRequestDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay struct {
	// The description of the metric.
	//
	// example:
	//
	// Freeze config day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeConfigDay
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// day
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeConfigDay {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 100
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsFreezeDataSize {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 100
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsHotDataSize {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsLocality struct {
	// The description of the metric.
	//
	// example:
	//
	// The locality of data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// locality
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsLocality) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsLocality) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsLocality) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsLocality {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsLocality) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsLocality {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsLocality) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsLocality {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsLocality) SetValue(v float32) *ListDoctorHBaseTablesResponseBodyDataMetricsLocality {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance struct {
	// The description of the metric.
	//
	// example:
	//
	// The balance of distributing read requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// readRequestBalance
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance) SetValue(v float32) *ListDoctorHBaseTablesResponseBodyDataMetricsReadRequestBalance {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance struct {
	// The description of the metric.
	//
	// example:
	//
	// The ability to evenly distribute Regions on different RegionServer nodes
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// regionBalance
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance) SetValue(v float32) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionBalance {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of regions count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// regionCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 3
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCount {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of region count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// regionCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio) SetValue(v float32) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of region servers count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// regionServerCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 2
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsRegionServerCount {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance struct {
	// The description of the metric.
	//
	// example:
	//
	// The balance of distributing requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// requestBalance
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.9
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance) SetValue(v float32) *ListDoctorHBaseTablesResponseBodyDataMetricsRequestBalance {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of store files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// storeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 36
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCount {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of store file count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// storeFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.7
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHBaseTablesResponseBodyDataMetricsStoreFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsTableSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the table
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tableSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 678
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsTableSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsTableSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsTableSize) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsTableSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsTableSize) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsTableSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsTableSize) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsTableSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsTableSize) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsTableSize {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of table size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tableSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// \\""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHBaseTablesResponseBodyDataMetricsTableSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay struct {
	// The description of the metric.
	//
	// example:
	//
	// Warm config day
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmConfigDay
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// day
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsWarmConfigDay {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 100
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize) SetValue(v int64) *ListDoctorHBaseTablesResponseBodyDataMetricsWarmDataSize {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance struct {
	// The description of the metric.
	//
	// example:
	//
	// The balance of distributing write requests
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// writeRequestBalance
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1.0
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance) SetDescription(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance {
	s.Description = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance) SetName(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance {
	s.Name = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance) SetUnit(v string) *ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance {
	s.Unit = &v
	return s
}

func (s *ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance) SetValue(v float32) *ListDoctorHBaseTablesResponseBodyDataMetricsWriteRequestBalance {
	s.Value = &v
	return s
}

type ListDoctorHBaseTablesResponse struct {
	Headers    map[string]*string                 `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                             `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorHBaseTablesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorHBaseTablesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHBaseTablesResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorHBaseTablesResponse) SetHeaders(v map[string]*string) *ListDoctorHBaseTablesResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorHBaseTablesResponse) SetStatusCode(v int32) *ListDoctorHBaseTablesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorHBaseTablesResponse) SetBody(v *ListDoctorHBaseTablesResponseBody) *ListDoctorHBaseTablesResponse {
	s.Body = v
	return s
}

type ListDoctorHDFSDirectoriesRequest struct {
	// 集群ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// example:
	//
	// /tmp/test
	DirPath *string `json:"DirPath,omitempty" xml:"DirPath,omitempty"`
	// 一次获取的最大记录数。取值范围：1~100。
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 标记当前开始读取的位置，置空表示从头开始。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// example:
	//
	// smallFileCount
	OrderBy *string `json:"OrderBy,omitempty" xml:"OrderBy,omitempty"`
	// example:
	//
	// ASC
	OrderType *string `json:"OrderType,omitempty" xml:"OrderType,omitempty"`
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s ListDoctorHDFSDirectoriesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesRequest) SetClusterId(v string) *ListDoctorHDFSDirectoriesRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesRequest) SetDateTime(v string) *ListDoctorHDFSDirectoriesRequest {
	s.DateTime = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesRequest) SetDirPath(v string) *ListDoctorHDFSDirectoriesRequest {
	s.DirPath = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesRequest) SetMaxResults(v int32) *ListDoctorHDFSDirectoriesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesRequest) SetNextToken(v string) *ListDoctorHDFSDirectoriesRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesRequest) SetOrderBy(v string) *ListDoctorHDFSDirectoriesRequest {
	s.OrderBy = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesRequest) SetOrderType(v string) *ListDoctorHDFSDirectoriesRequest {
	s.OrderType = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesRequest) SetRegionId(v string) *ListDoctorHDFSDirectoriesRequest {
	s.RegionId = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBody struct {
	Data []*ListDoctorHDFSDirectoriesResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// 本次请求所返回的最大记录条数。
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 返回读取到的数据位置，空代表数据已经读取完毕。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// 本次请求条件下的数据总量。
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBody) SetData(v []*ListDoctorHDFSDirectoriesResponseBodyData) *ListDoctorHDFSDirectoriesResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBody) SetMaxResults(v int32) *ListDoctorHDFSDirectoriesResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBody) SetNextToken(v string) *ListDoctorHDFSDirectoriesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBody) SetRequestId(v string) *ListDoctorHDFSDirectoriesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBody) SetTotalCount(v int32) *ListDoctorHDFSDirectoriesResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyData struct {
	// example:
	//
	// 2
	Depth *int32 `json:"Depth,omitempty" xml:"Depth,omitempty"`
	// example:
	//
	// /tmp/test
	DirPath *string `json:"DirPath,omitempty" xml:"DirPath,omitempty"`
	// example:
	//
	// DW
	Group   *string                                           `json:"Group,omitempty" xml:"Group,omitempty"`
	Metrics *ListDoctorHDFSDirectoriesResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// example:
	//
	// DW
	User *string `json:"User,omitempty" xml:"User,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyData) SetDepth(v int32) *ListDoctorHDFSDirectoriesResponseBodyData {
	s.Depth = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyData) SetDirPath(v string) *ListDoctorHDFSDirectoriesResponseBodyData {
	s.DirPath = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyData) SetGroup(v string) *ListDoctorHDFSDirectoriesResponseBodyData {
	s.Group = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyData) SetMetrics(v *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) *ListDoctorHDFSDirectoriesResponseBodyData {
	s.Metrics = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyData) SetUser(v string) *ListDoctorHDFSDirectoriesResponseBodyData {
	s.User = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetrics struct {
	ColdDataDayGrowthSize         *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize         `json:"ColdDataDayGrowthSize,omitempty" xml:"ColdDataDayGrowthSize,omitempty" type:"Struct"`
	ColdDataSize                  *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize                  `json:"ColdDataSize,omitempty" xml:"ColdDataSize,omitempty" type:"Struct"`
	ColdDataSizeDayGrowthRatio    *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio    `json:"ColdDataSizeDayGrowthRatio,omitempty" xml:"ColdDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	EmptyFileCount                *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount                `json:"EmptyFileCount,omitempty" xml:"EmptyFileCount,omitempty" type:"Struct"`
	EmptyFileCountDayGrowthRatio  *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio  `json:"EmptyFileCountDayGrowthRatio,omitempty" xml:"EmptyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	EmptyFileDayGrowthCount       *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount       `json:"EmptyFileDayGrowthCount,omitempty" xml:"EmptyFileDayGrowthCount,omitempty" type:"Struct"`
	FreezeDataDayGrowthSize       *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize       `json:"FreezeDataDayGrowthSize,omitempty" xml:"FreezeDataDayGrowthSize,omitempty" type:"Struct"`
	FreezeDataSize                *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize                `json:"FreezeDataSize,omitempty" xml:"FreezeDataSize,omitempty" type:"Struct"`
	FreezeDataSizeDayGrowthRatio  *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio  `json:"FreezeDataSizeDayGrowthRatio,omitempty" xml:"FreezeDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	HotDataDayGrowthSize          *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize          `json:"HotDataDayGrowthSize,omitempty" xml:"HotDataDayGrowthSize,omitempty" type:"Struct"`
	HotDataSize                   *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize                   `json:"HotDataSize,omitempty" xml:"HotDataSize,omitempty" type:"Struct"`
	HotDataSizeDayGrowthRatio     *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio     `json:"HotDataSizeDayGrowthRatio,omitempty" xml:"HotDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	LargeFileCount                *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount                `json:"LargeFileCount,omitempty" xml:"LargeFileCount,omitempty" type:"Struct"`
	LargeFileCountDayGrowthRatio  *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio  `json:"LargeFileCountDayGrowthRatio,omitempty" xml:"LargeFileCountDayGrowthRatio,omitempty" type:"Struct"`
	LargeFileDayGrowthCount       *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount       `json:"LargeFileDayGrowthCount,omitempty" xml:"LargeFileDayGrowthCount,omitempty" type:"Struct"`
	MediumFileCount               *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount               `json:"MediumFileCount,omitempty" xml:"MediumFileCount,omitempty" type:"Struct"`
	MediumFileCountDayGrowthRatio *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio `json:"MediumFileCountDayGrowthRatio,omitempty" xml:"MediumFileCountDayGrowthRatio,omitempty" type:"Struct"`
	MediumFileDayGrowthCount      *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount      `json:"MediumFileDayGrowthCount,omitempty" xml:"MediumFileDayGrowthCount,omitempty" type:"Struct"`
	SmallFileCount                *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount                `json:"SmallFileCount,omitempty" xml:"SmallFileCount,omitempty" type:"Struct"`
	SmallFileCountDayGrowthRatio  *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio  `json:"SmallFileCountDayGrowthRatio,omitempty" xml:"SmallFileCountDayGrowthRatio,omitempty" type:"Struct"`
	SmallFileDayGrowthCount       *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount       `json:"SmallFileDayGrowthCount,omitempty" xml:"SmallFileDayGrowthCount,omitempty" type:"Struct"`
	TinyFileCount                 *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount                 `json:"TinyFileCount,omitempty" xml:"TinyFileCount,omitempty" type:"Struct"`
	TinyFileCountDayGrowthRatio   *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio   `json:"TinyFileCountDayGrowthRatio,omitempty" xml:"TinyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	TinyFileDayGrowthCount        *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount        `json:"TinyFileDayGrowthCount,omitempty" xml:"TinyFileDayGrowthCount,omitempty" type:"Struct"`
	TotalDataDayGrowthSize        *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize        `json:"TotalDataDayGrowthSize,omitempty" xml:"TotalDataDayGrowthSize,omitempty" type:"Struct"`
	TotalDataSize                 *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize                 `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	TotalDataSizeDayGrowthRatio   *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio   `json:"TotalDataSizeDayGrowthRatio,omitempty" xml:"TotalDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	TotalFileCount                *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount                `json:"TotalFileCount,omitempty" xml:"TotalFileCount,omitempty" type:"Struct"`
	TotalFileCountDayGrowthRatio  *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio  `json:"TotalFileCountDayGrowthRatio,omitempty" xml:"TotalFileCountDayGrowthRatio,omitempty" type:"Struct"`
	TotalFileDayGrowthCount       *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount       `json:"TotalFileDayGrowthCount,omitempty" xml:"TotalFileDayGrowthCount,omitempty" type:"Struct"`
	WarmDataDayGrowthSize         *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize         `json:"WarmDataDayGrowthSize,omitempty" xml:"WarmDataDayGrowthSize,omitempty" type:"Struct"`
	WarmDataSize                  *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize                  `json:"WarmDataSize,omitempty" xml:"WarmDataSize,omitempty" type:"Struct"`
	WarmDataSizeDayGrowthRatio    *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio    `json:"WarmDataSizeDayGrowthRatio,omitempty" xml:"WarmDataSizeDayGrowthRatio,omitempty" type:"Struct"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetColdDataDayGrowthSize(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.ColdDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetColdDataSize(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.ColdDataSize = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetColdDataSizeDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.ColdDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetEmptyFileCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.EmptyFileCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetEmptyFileCountDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.EmptyFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetEmptyFileDayGrowthCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.EmptyFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetFreezeDataDayGrowthSize(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.FreezeDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetFreezeDataSize(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.FreezeDataSize = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetFreezeDataSizeDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.FreezeDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetHotDataDayGrowthSize(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.HotDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetHotDataSize(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.HotDataSize = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetHotDataSizeDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.HotDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetLargeFileCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.LargeFileCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetLargeFileCountDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.LargeFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetLargeFileDayGrowthCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.LargeFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetMediumFileCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.MediumFileCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetMediumFileCountDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.MediumFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetMediumFileDayGrowthCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.MediumFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetSmallFileCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.SmallFileCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetSmallFileCountDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.SmallFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetSmallFileDayGrowthCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.SmallFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetTinyFileCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.TinyFileCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetTinyFileCountDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.TinyFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetTinyFileDayGrowthCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.TinyFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetTotalDataDayGrowthSize(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.TotalDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetTotalDataSize(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetTotalDataSizeDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.TotalDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetTotalFileCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.TotalFileCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetTotalFileCountDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.TotalFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetTotalFileDayGrowthCount(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.TotalFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetWarmDataDayGrowthSize(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.WarmDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetWarmDataSize(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.WarmDataSize = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetrics) SetWarmDataSizeDayGrowthRatio(v *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) *ListDoctorHDFSDirectoriesResponseBodyDataMetrics {
	s.WarmDataSizeDayGrowthRatio = v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize struct {
	// example:
	//
	// Day growth size of cold data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// coldDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// -182636577752
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize struct {
	// example:
	//
	// Size of the cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// coldDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 5570958082267
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// coldDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// -0.03
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount struct {
	// example:
	//
	// Number of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// emptyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 15595897
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// emptyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.005
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount struct {
	// example:
	//
	// Day growth count of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// emptyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 114
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize struct {
	// example:
	//
	// Day growth size of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// freezeDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// -167683929450
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize struct {
	// example:
	//
	// Size of the freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// freezeDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 1231312431
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// freezeDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// -0.09
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize struct {
	// example:
	//
	// Day growth size of hot data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// hotDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 123154
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize struct {
	// example:
	//
	// Size of the hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// hotDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 6701531944206
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// hotDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.1114
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount struct {
	// example:
	//
	// Number of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// largeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// largeFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.39
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount struct {
	// example:
	//
	// Day growth count of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// largeFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 2
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount struct {
	// example:
	//
	// Number of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// mediumFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 323
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// mediumFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.19
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount struct {
	// example:
	//
	// Day growth count of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// mediumFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 176
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount struct {
	// example:
	//
	// Number of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// smallFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 12345
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// smallFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.02
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount struct {
	// example:
	//
	// Day growth count of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// smallFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 12345
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount struct {
	// example:
	//
	// Number of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// tinyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 232131
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// tinyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.003
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount struct {
	// example:
	//
	// Day growth count of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// tinyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// -123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize struct {
	// example:
	//
	// Day growth size of total data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// totalDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 256482228248
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize struct {
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 62086342083623
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of total data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// totalDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.14
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount struct {
	// example:
	//
	// Number of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// totalFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 51683279
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// totalFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 0.02
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount struct {
	// example:
	//
	// Day growth count of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// totalFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 27809
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize struct {
	// example:
	//
	// Day growth size of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// warmDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// -64806998319
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize struct {
	// example:
	//
	// Size of the warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// warmDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// 4062349775577
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize) SetValue(v int64) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio struct {
	// example:
	//
	// Day growth ratio of warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// example:
	//
	// warmDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// example:
	//
	// -0.015
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHDFSDirectoriesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHDFSDirectoriesResponse struct {
	Headers    map[string]*string                     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorHDFSDirectoriesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorHDFSDirectoriesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSDirectoriesResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSDirectoriesResponse) SetHeaders(v map[string]*string) *ListDoctorHDFSDirectoriesResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponse) SetStatusCode(v int32) *ListDoctorHDFSDirectoriesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorHDFSDirectoriesResponse) SetBody(v *ListDoctorHDFSDirectoriesResponseBody) *ListDoctorHDFSDirectoriesResponse {
	s.Body = v
	return s
}

type ListDoctorHDFSUGIRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The maximum number of entries to return on each page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the request to retrieve a new page of results.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The basis on which you want to sort the query results. Valid values:
	//
	// 	- totalFileCount: the total number of files
	//
	// 	- totalDataSize: the total data size
	//
	// 	- totalDirCount: the total number of directories
	//
	// example:
	//
	// totalFileCount
	OrderBy *string `json:"OrderBy,omitempty" xml:"OrderBy,omitempty"`
	// The order in which you want to sort the query results. Valid values:
	//
	// 	- ASC: in ascending order
	//
	// 	- DESC: in descending order
	//
	// example:
	//
	// ASC
	OrderType *string `json:"OrderType,omitempty" xml:"OrderType,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The filter condition. Valid values:
	//
	// 	- user
	//
	// 	- group
	//
	// This parameter is required.
	//
	// example:
	//
	// group
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
}

func (s ListDoctorHDFSUGIRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSUGIRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSUGIRequest) SetClusterId(v string) *ListDoctorHDFSUGIRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorHDFSUGIRequest) SetDateTime(v string) *ListDoctorHDFSUGIRequest {
	s.DateTime = &v
	return s
}

func (s *ListDoctorHDFSUGIRequest) SetMaxResults(v int32) *ListDoctorHDFSUGIRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHDFSUGIRequest) SetNextToken(v string) *ListDoctorHDFSUGIRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHDFSUGIRequest) SetOrderBy(v string) *ListDoctorHDFSUGIRequest {
	s.OrderBy = &v
	return s
}

func (s *ListDoctorHDFSUGIRequest) SetOrderType(v string) *ListDoctorHDFSUGIRequest {
	s.OrderType = &v
	return s
}

func (s *ListDoctorHDFSUGIRequest) SetRegionId(v string) *ListDoctorHDFSUGIRequest {
	s.RegionId = &v
	return s
}

func (s *ListDoctorHDFSUGIRequest) SetType(v string) *ListDoctorHDFSUGIRequest {
	s.Type = &v
	return s
}

type ListDoctorHDFSUGIResponseBody struct {
	// The results of batch HDFS analysis.
	Data []*ListDoctorHDFSUGIResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The maximum number of entries that are returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorHDFSUGIResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSUGIResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSUGIResponseBody) SetData(v []*ListDoctorHDFSUGIResponseBodyData) *ListDoctorHDFSUGIResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorHDFSUGIResponseBody) SetMaxResults(v int32) *ListDoctorHDFSUGIResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBody) SetNextToken(v string) *ListDoctorHDFSUGIResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBody) SetRequestId(v string) *ListDoctorHDFSUGIResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBody) SetTotalCount(v int32) *ListDoctorHDFSUGIResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorHDFSUGIResponseBodyData struct {
	// The metric information.
	Metrics *ListDoctorHDFSUGIResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// The actual name of the owner or group returned based on the value of Type.
	//
	// example:
	//
	// DW
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
}

func (s ListDoctorHDFSUGIResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSUGIResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSUGIResponseBodyData) SetMetrics(v *ListDoctorHDFSUGIResponseBodyDataMetrics) *ListDoctorHDFSUGIResponseBodyData {
	s.Metrics = v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyData) SetName(v string) *ListDoctorHDFSUGIResponseBodyData {
	s.Name = &v
	return s
}

type ListDoctorHDFSUGIResponseBodyDataMetrics struct {
	// The total data size.
	TotalDataSize *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	// The total number of directories.
	TotalDirCount *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount `json:"TotalDirCount,omitempty" xml:"TotalDirCount,omitempty" type:"Struct"`
	// The total number of files.
	TotalFileCount *ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount `json:"TotalFileCount,omitempty" xml:"TotalFileCount,omitempty" type:"Struct"`
}

func (s ListDoctorHDFSUGIResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSUGIResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetrics) SetTotalDataSize(v *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) *ListDoctorHDFSUGIResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetrics) SetTotalDirCount(v *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) *ListDoctorHDFSUGIResponseBodyDataMetrics {
	s.TotalDirCount = v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetrics) SetTotalFileCount(v *ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) *ListDoctorHDFSUGIResponseBodyDataMetrics {
	s.TotalFileCount = v
	return s
}

type ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 40440503
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) SetName(v string) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of total dirs
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDirCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) SetDescription(v string) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) SetName(v string) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) SetUnit(v string) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount) SetValue(v int64) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalDirCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 34
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) SetDescription(v string) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) SetName(v string) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) SetUnit(v string) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount) SetValue(v int64) *ListDoctorHDFSUGIResponseBodyDataMetricsTotalFileCount {
	s.Value = &v
	return s
}

type ListDoctorHDFSUGIResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorHDFSUGIResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorHDFSUGIResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHDFSUGIResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorHDFSUGIResponse) SetHeaders(v map[string]*string) *ListDoctorHDFSUGIResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorHDFSUGIResponse) SetStatusCode(v int32) *ListDoctorHDFSUGIResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorHDFSUGIResponse) SetBody(v *ListDoctorHDFSUGIResponseBody) *ListDoctorHDFSUGIResponse {
	s.Body = v
	return s
}

type ListDoctorHiveDatabasesRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The database names.
	//
	// example:
	//
	// null
	DatabaseNames []*string `json:"DatabaseNames,omitempty" xml:"DatabaseNames,omitempty" type:"Repeated"`
	// The query date.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The maximum number of entries to return on each page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the request to retrieve a new page of results.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The basis on which you want to sort the query results. Valid values:
	//
	// 	- tableCount: the number of tables
	//
	// example:
	//
	// tableCount
	OrderBy *string `json:"OrderBy,omitempty" xml:"OrderBy,omitempty"`
	// The order in which you want to sort the query results. Valid values:
	//
	// 	- ASC: in ascending order
	//
	// 	- DESC: in descending order
	//
	// example:
	//
	// ASC
	OrderType *string `json:"OrderType,omitempty" xml:"OrderType,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s ListDoctorHiveDatabasesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesRequest) SetClusterId(v string) *ListDoctorHiveDatabasesRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorHiveDatabasesRequest) SetDatabaseNames(v []*string) *ListDoctorHiveDatabasesRequest {
	s.DatabaseNames = v
	return s
}

func (s *ListDoctorHiveDatabasesRequest) SetDateTime(v string) *ListDoctorHiveDatabasesRequest {
	s.DateTime = &v
	return s
}

func (s *ListDoctorHiveDatabasesRequest) SetMaxResults(v int32) *ListDoctorHiveDatabasesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHiveDatabasesRequest) SetNextToken(v string) *ListDoctorHiveDatabasesRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHiveDatabasesRequest) SetOrderBy(v string) *ListDoctorHiveDatabasesRequest {
	s.OrderBy = &v
	return s
}

func (s *ListDoctorHiveDatabasesRequest) SetOrderType(v string) *ListDoctorHiveDatabasesRequest {
	s.OrderType = &v
	return s
}

func (s *ListDoctorHiveDatabasesRequest) SetRegionId(v string) *ListDoctorHiveDatabasesRequest {
	s.RegionId = &v
	return s
}

type ListDoctorHiveDatabasesResponseBody struct {
	// The analysis results of Hive databases.
	Data []*ListDoctorHiveDatabasesResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The maximum number of entries that are returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBody) SetData(v []*ListDoctorHiveDatabasesResponseBodyData) *ListDoctorHiveDatabasesResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBody) SetMaxResults(v int32) *ListDoctorHiveDatabasesResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBody) SetNextToken(v string) *ListDoctorHiveDatabasesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBody) SetRequestId(v string) *ListDoctorHiveDatabasesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBody) SetTotalCount(v int32) *ListDoctorHiveDatabasesResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyData struct {
	// The analysis results.
	Analysis *ListDoctorHiveDatabasesResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The database name.
	//
	// example:
	//
	// db1
	DatabaseName *string `json:"DatabaseName,omitempty" xml:"DatabaseName,omitempty"`
	// The information from the perspective of storage formats.
	Formats []*ListDoctorHiveDatabasesResponseBodyDataFormats `json:"Formats,omitempty" xml:"Formats,omitempty" type:"Repeated"`
	// The metric information.
	Metrics *ListDoctorHiveDatabasesResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
}

func (s ListDoctorHiveDatabasesResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyData) SetAnalysis(v *ListDoctorHiveDatabasesResponseBodyDataAnalysis) *ListDoctorHiveDatabasesResponseBodyData {
	s.Analysis = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyData) SetDatabaseName(v string) *ListDoctorHiveDatabasesResponseBodyData {
	s.DatabaseName = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyData) SetFormats(v []*ListDoctorHiveDatabasesResponseBodyDataFormats) *ListDoctorHiveDatabasesResponseBodyData {
	s.Formats = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyData) SetMetrics(v *ListDoctorHiveDatabasesResponseBodyDataMetrics) *ListDoctorHiveDatabasesResponseBodyData {
	s.Metrics = v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataAnalysis struct {
	// The score for the distribution of files of different sizes stored in the Hive database.
	//
	// example:
	//
	// 85
	HiveDistributionScore *int32 `json:"HiveDistributionScore,omitempty" xml:"HiveDistributionScore,omitempty"`
	// The score for the distribution of files stored in different formats in the Hive database.
	//
	// example:
	//
	// 85
	HiveFormatScore *int32 `json:"HiveFormatScore,omitempty" xml:"HiveFormatScore,omitempty"`
	// The score for the access frequency of the Hive database.
	//
	// example:
	//
	// 85
	HiveFrequencyScore *int32 `json:"HiveFrequencyScore,omitempty" xml:"HiveFrequencyScore,omitempty"`
	// The overall score of the Hive database.
	//
	// example:
	//
	// 85
	HiveScore *int32 `json:"HiveScore,omitempty" xml:"HiveScore,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataAnalysis) SetHiveDistributionScore(v int32) *ListDoctorHiveDatabasesResponseBodyDataAnalysis {
	s.HiveDistributionScore = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataAnalysis) SetHiveFormatScore(v int32) *ListDoctorHiveDatabasesResponseBodyDataAnalysis {
	s.HiveFormatScore = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataAnalysis) SetHiveFrequencyScore(v int32) *ListDoctorHiveDatabasesResponseBodyDataAnalysis {
	s.HiveFrequencyScore = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataAnalysis) SetHiveScore(v int32) *ListDoctorHiveDatabasesResponseBodyDataAnalysis {
	s.HiveScore = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataFormats struct {
	// The daily increment of storage format-specific data.
	//
	// example:
	//
	// 1000
	FormatDayGrowthSize *int64 `json:"FormatDayGrowthSize,omitempty" xml:"FormatDayGrowthSize,omitempty"`
	// The name of the storage format.
	//
	// example:
	//
	// TextInputFormat
	FormatName *string `json:"FormatName,omitempty" xml:"FormatName,omitempty"`
	// The proportion of data in a specific storage format.
	//
	// example:
	//
	// 0.5
	FormatRatio *float32 `json:"FormatRatio,omitempty" xml:"FormatRatio,omitempty"`
	// The amount of storage format-specific data.
	//
	// example:
	//
	// 1000
	FormatSize *int64 `json:"FormatSize,omitempty" xml:"FormatSize,omitempty"`
	// The day-to-day growth rate of storage format-specific data.
	//
	// example:
	//
	// 0.5
	FormatSizeDayGrowthRatio *float32 `json:"FormatSizeDayGrowthRatio,omitempty" xml:"FormatSizeDayGrowthRatio,omitempty"`
	// The unit of the amount of storage format-specific data.
	//
	// example:
	//
	// MB
	FormatSizeUnit *string `json:"FormatSizeUnit,omitempty" xml:"FormatSizeUnit,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataFormats) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataFormats) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataFormats) SetFormatDayGrowthSize(v int64) *ListDoctorHiveDatabasesResponseBodyDataFormats {
	s.FormatDayGrowthSize = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataFormats) SetFormatName(v string) *ListDoctorHiveDatabasesResponseBodyDataFormats {
	s.FormatName = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataFormats) SetFormatRatio(v float32) *ListDoctorHiveDatabasesResponseBodyDataFormats {
	s.FormatRatio = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataFormats) SetFormatSize(v int64) *ListDoctorHiveDatabasesResponseBodyDataFormats {
	s.FormatSize = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataFormats) SetFormatSizeDayGrowthRatio(v float32) *ListDoctorHiveDatabasesResponseBodyDataFormats {
	s.FormatSizeDayGrowthRatio = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataFormats) SetFormatSizeUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataFormats {
	s.FormatSizeUnit = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetrics struct {
	// The daily increment of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataDayGrowthSize *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize `json:"ColdDataDayGrowthSize,omitempty" xml:"ColdDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio `json:"ColdDataRatio,omitempty" xml:"ColdDataRatio,omitempty" type:"Struct"`
	// The amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataSize *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize `json:"ColdDataSize,omitempty" xml:"ColdDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in 90 days.
	ColdDataSizeDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio `json:"ColdDataSizeDayGrowthRatio,omitempty" xml:"ColdDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCount *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount `json:"EmptyFileCount,omitempty" xml:"EmptyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCountDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio `json:"EmptyFileCountDayGrowthRatio,omitempty" xml:"EmptyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileDayGrowthCount *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount `json:"EmptyFileDayGrowthCount,omitempty" xml:"EmptyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of empty files. Empty files are those with a size of 0 MB.
	EmptyFileRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio `json:"EmptyFileRatio,omitempty" xml:"EmptyFileRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataDayGrowthSize *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize `json:"FreezeDataDayGrowthSize,omitempty" xml:"FreezeDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio `json:"FreezeDataRatio,omitempty" xml:"FreezeDataRatio,omitempty" type:"Struct"`
	// The amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSize *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize `json:"FreezeDataSize,omitempty" xml:"FreezeDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSizeDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio `json:"FreezeDataSizeDayGrowthRatio,omitempty" xml:"FreezeDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataDayGrowthSize *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize `json:"HotDataDayGrowthSize,omitempty" xml:"HotDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio `json:"HotDataRatio,omitempty" xml:"HotDataRatio,omitempty" type:"Struct"`
	// The amount of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataSize *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize `json:"HotDataSize,omitempty" xml:"HotDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of hot data. Hot data refers to data that is accessed in recent seven days.
	HotDataSizeDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio `json:"HotDataSizeDayGrowthRatio,omitempty" xml:"HotDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCount *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount `json:"LargeFileCount,omitempty" xml:"LargeFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCountDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio `json:"LargeFileCountDayGrowthRatio,omitempty" xml:"LargeFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileDayGrowthCount *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount `json:"LargeFileDayGrowthCount,omitempty" xml:"LargeFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of large files. Large files are those with a size greater than 1 GB.
	LargeFileRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio `json:"LargeFileRatio,omitempty" xml:"LargeFileRatio,omitempty" type:"Struct"`
	// The number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCount *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount `json:"MediumFileCount,omitempty" xml:"MediumFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCountDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio `json:"MediumFileCountDayGrowthRatio,omitempty" xml:"MediumFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileDayGrowthCount *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount `json:"MediumFileDayGrowthCount,omitempty" xml:"MediumFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio `json:"MediumFileRatio,omitempty" xml:"MediumFileRatio,omitempty" type:"Struct"`
	// The number of partitions.
	PartitionNum *ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum `json:"PartitionNum,omitempty" xml:"PartitionNum,omitempty" type:"Struct"`
	// The number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCount *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount `json:"SmallFileCount,omitempty" xml:"SmallFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCountDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio `json:"SmallFileCountDayGrowthRatio,omitempty" xml:"SmallFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileDayGrowthCount *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount `json:"SmallFileDayGrowthCount,omitempty" xml:"SmallFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio `json:"SmallFileRatio,omitempty" xml:"SmallFileRatio,omitempty" type:"Struct"`
	// The number of tables.
	TableCount *ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount `json:"TableCount,omitempty" xml:"TableCount,omitempty" type:"Struct"`
	// The number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCount *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount `json:"TinyFileCount,omitempty" xml:"TinyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCountDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio `json:"TinyFileCountDayGrowthRatio,omitempty" xml:"TinyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileDayGrowthCount *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount `json:"TinyFileDayGrowthCount,omitempty" xml:"TinyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio `json:"TinyFileRatio,omitempty" xml:"TinyFileRatio,omitempty" type:"Struct"`
	// The daily incremental of the total data volume.
	TotalDataDayGrowthSize *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize `json:"TotalDataDayGrowthSize,omitempty" xml:"TotalDataDayGrowthSize,omitempty" type:"Struct"`
	// The total amount of data.
	TotalDataSize *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total data volume.
	TotalDataSizeDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio `json:"TotalDataSizeDayGrowthRatio,omitempty" xml:"TotalDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The total number of files.
	TotalFileCount *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount `json:"TotalFileCount,omitempty" xml:"TotalFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total number of files.
	TotalFileCountDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio `json:"TotalFileCountDayGrowthRatio,omitempty" xml:"TotalFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the total number of files.
	TotalFileDayGrowthCount *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount `json:"TotalFileDayGrowthCount,omitempty" xml:"TotalFileDayGrowthCount,omitempty" type:"Struct"`
	// The daily increment of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataDayGrowthSize *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize `json:"WarmDataDayGrowthSize,omitempty" xml:"WarmDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio `json:"WarmDataRatio,omitempty" xml:"WarmDataRatio,omitempty" type:"Struct"`
	// The amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataSize *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize `json:"WarmDataSize,omitempty" xml:"WarmDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in 30 days.
	WarmDataSizeDayGrowthRatio *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio `json:"WarmDataSizeDayGrowthRatio,omitempty" xml:"WarmDataSizeDayGrowthRatio,omitempty" type:"Struct"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetColdDataDayGrowthSize(v *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.ColdDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetColdDataRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.ColdDataRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetColdDataSize(v *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.ColdDataSize = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetColdDataSizeDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.ColdDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetEmptyFileCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.EmptyFileCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetEmptyFileCountDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.EmptyFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetEmptyFileDayGrowthCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.EmptyFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetEmptyFileRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.EmptyFileRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetFreezeDataDayGrowthSize(v *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.FreezeDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetFreezeDataRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.FreezeDataRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetFreezeDataSize(v *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.FreezeDataSize = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetFreezeDataSizeDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.FreezeDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetHotDataDayGrowthSize(v *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.HotDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetHotDataRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.HotDataRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetHotDataSize(v *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.HotDataSize = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetHotDataSizeDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.HotDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetLargeFileCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.LargeFileCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetLargeFileCountDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.LargeFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetLargeFileDayGrowthCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.LargeFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetLargeFileRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.LargeFileRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetMediumFileCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.MediumFileCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetMediumFileCountDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.MediumFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetMediumFileDayGrowthCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.MediumFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetMediumFileRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.MediumFileRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetPartitionNum(v *ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.PartitionNum = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetSmallFileCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.SmallFileCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetSmallFileCountDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.SmallFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetSmallFileDayGrowthCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.SmallFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetSmallFileRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.SmallFileRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTableCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TableCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTinyFileCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TinyFileCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTinyFileCountDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TinyFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTinyFileDayGrowthCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TinyFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTinyFileRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TinyFileRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTotalDataDayGrowthSize(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TotalDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTotalDataSize(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTotalDataSizeDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TotalDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTotalFileCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TotalFileCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTotalFileCountDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TotalFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetTotalFileDayGrowthCount(v *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.TotalFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetWarmDataDayGrowthSize(v *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.WarmDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetWarmDataRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.WarmDataRatio = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetWarmDataSize(v *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.WarmDataSize = v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetrics) SetWarmDataSizeDayGrowthRatio(v *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) *ListDoctorHiveDatabasesResponseBodyDataMetrics {
	s.WarmDataSizeDayGrowthRatio = v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of cold data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Cold data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of cold files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSize {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsEmptyFileRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of freeze files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSize {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of hot data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Hot data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of hot files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSize {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsLargeFileRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsMediumFileRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of partitions
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// ppartitionNum
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsPartitionNum {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsSmallFileRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tables
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// TableCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsTableCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsTinyFileRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of total data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of warm files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 1000
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize) SetValue(v int64) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSize {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// WarmDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.5
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHiveDatabasesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveDatabasesResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorHiveDatabasesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorHiveDatabasesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveDatabasesResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveDatabasesResponse) SetHeaders(v map[string]*string) *ListDoctorHiveDatabasesResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorHiveDatabasesResponse) SetStatusCode(v int32) *ListDoctorHiveDatabasesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorHiveDatabasesResponse) SetBody(v *ListDoctorHiveDatabasesResponseBody) *ListDoctorHiveDatabasesResponse {
	s.Body = v
	return s
}

type ListDoctorHiveTablesRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// Specify the date in the ISO 8601 standard. For example, 2023-01-01 represents January 1, 2023.
	//
	// This parameter is required.
	//
	// example:
	//
	// 2023-01-01
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The maximum number of entries to return on each page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the request to retrieve a new page of results.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The basis on which you want to sort the query results. Valid values:
	//
	// 	- partitionNum: the number of partitions.
	//
	// 	- totalFileCount: the total number of files.
	//
	// 	- largeFileCount: the number of large files. Large files are those with a size greater than 1 GB.
	//
	// 	- mediumFileCount: the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	//
	// 	- smallFileCount: the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	//
	// 	- tinyFileCount: the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	//
	// 	- emptyFileCount: the number of empty files. Empty files are those with a size of 0 MB.
	//
	// 	- largeFileRatio: the proportion of large files. Large files are those with a size greater than 1 GB.
	//
	// 	- mediumFileRatio: the proportion of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	//
	// 	- smallFileRatio: the proportion of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	//
	// 	- tinyFileRatio: the proportion of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	//
	// 	- emptyFileRatio: the proportion of empty files. Empty files are those with a size of 0 MB.
	//
	// 	- hotDataSize: the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	//
	// 	- WarmDataSize: the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	//
	// 	- coldDataSize: the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	//
	// 	- freezeDataSize: the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	//
	// 	- totalDataSize: the total amount of data.
	//
	// 	- hotDataRatio: the proportion of hot data. Hot data refers to data that is accessed in previous seven days.
	//
	// 	- WarmDataRatio: the proportion of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	//
	// 	- coldDataRatio: the proportion of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	//
	// 	- freezeDataRatio: the proportion of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	//
	// 	- totalFileDayGrowthCount: the daily increment of the total number of files.
	//
	// 	- largeFileDayGrowthCount: the daily increment of the number of large files. Large files are those with a size greater than 1 GB.
	//
	// 	- mediumFileDayGrowthCount: the daily increment of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	//
	// 	- smallFileDayGrowthCount: the daily increment of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	//
	// 	- tinyFileDayGrowthCount: the daily increment of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	//
	// 	- emptyFileDayGrowthCount: the daily increment of the number of empty files. Empty files are those with a size of 0 MB.
	//
	// 	- hotDataDayGrowthSize: the daily increment of the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	//
	// 	- warmDataDayGrowthSize: the daily increment of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	//
	// 	- coldDataDayGrowthSize: the daily increment of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	//
	// 	- freezeDataDayGrowthSize: the daily increment of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	//
	// 	- totalDataDayGrowthSize: the daily increment of the amount of total data.
	//
	// 	- totalFileCountDayGrowthRatio: the day-to-day growth rate of the total number of files.
	//
	// 	- largeFileCountDayGrowthRatio: the day-to-day growth rate of the number of large files. Large files are those with a size greater than 1 GB.
	//
	// 	- mediumFileCountDayGrowthRatio: the day-to-day growth rate of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	//
	// 	- smallFileCountDayGrowthRatio: the day-to-day growth rate of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	//
	// 	- tinyFileCountDayGrowthRatio: the day-to-day growth rate of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	//
	// 	- emptyFileCountDayGrowthRatio: the day-to-day growth rate of the number of empty files. Empty files are those with a size of 0 MB.
	//
	// 	- hotDataSizeDayGrowthRatio: the day-to-day growth rate of the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	//
	// 	- warmDataSizeDayGrowthRatio: the day-to-day growth rate of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	//
	// 	- coldDataSizeDayGrowthRatio: the day-to-day growth rate of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	//
	// 	- freezeDataSizeDayGrowthRatio: the day-to-day growth rate of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	//
	// 	- totalDataSizeDayGrowthRatio: the day-to-day growth rate of the total amount of data.
	//
	// example:
	//
	// totalFileCount
	OrderBy *string `json:"OrderBy,omitempty" xml:"OrderBy,omitempty"`
	// The order in which you want to sort the query results. Valid value:
	//
	// 	- ASC: in ascending order
	//
	// 	- DESC: in descending order
	//
	// example:
	//
	// ASC
	OrderType *string `json:"OrderType,omitempty" xml:"OrderType,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The table names, which are used to filter the query results.
	//
	// example:
	//
	// null
	TableNames []*string `json:"TableNames,omitempty" xml:"TableNames,omitempty" type:"Repeated"`
}

func (s ListDoctorHiveTablesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesRequest) SetClusterId(v string) *ListDoctorHiveTablesRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorHiveTablesRequest) SetDateTime(v string) *ListDoctorHiveTablesRequest {
	s.DateTime = &v
	return s
}

func (s *ListDoctorHiveTablesRequest) SetMaxResults(v int32) *ListDoctorHiveTablesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHiveTablesRequest) SetNextToken(v string) *ListDoctorHiveTablesRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHiveTablesRequest) SetOrderBy(v string) *ListDoctorHiveTablesRequest {
	s.OrderBy = &v
	return s
}

func (s *ListDoctorHiveTablesRequest) SetOrderType(v string) *ListDoctorHiveTablesRequest {
	s.OrderType = &v
	return s
}

func (s *ListDoctorHiveTablesRequest) SetRegionId(v string) *ListDoctorHiveTablesRequest {
	s.RegionId = &v
	return s
}

func (s *ListDoctorHiveTablesRequest) SetTableNames(v []*string) *ListDoctorHiveTablesRequest {
	s.TableNames = v
	return s
}

type ListDoctorHiveTablesResponseBody struct {
	// The analysis results of Hive tables.
	Data []*ListDoctorHiveTablesResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The maximum number of entries that are returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorHiveTablesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBody) SetData(v []*ListDoctorHiveTablesResponseBodyData) *ListDoctorHiveTablesResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorHiveTablesResponseBody) SetMaxResults(v int32) *ListDoctorHiveTablesResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBody) SetNextToken(v string) *ListDoctorHiveTablesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBody) SetRequestId(v string) *ListDoctorHiveTablesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBody) SetTotalCount(v int32) *ListDoctorHiveTablesResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorHiveTablesResponseBodyData struct {
	// The analysis results.
	Analysis *ListDoctorHiveTablesResponseBodyDataAnalysis `json:"Analysis,omitempty" xml:"Analysis,omitempty" type:"Struct"`
	// The table format information.
	Formats []*ListDoctorHiveTablesResponseBodyDataFormats `json:"Formats,omitempty" xml:"Formats,omitempty" type:"Repeated"`
	// The metric information.
	Metrics *ListDoctorHiveTablesResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// The owner.
	//
	// example:
	//
	// DW
	Owner *string `json:"Owner,omitempty" xml:"Owner,omitempty"`
	// The table name. The table name must follow the naming rule in Hive. A name in the {Database name.Table name} format uniquely identifies a table.
	//
	// example:
	//
	// dw.dwd_creta_service_order_long_renew_long_da
	TableName *string `json:"TableName,omitempty" xml:"TableName,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyData) SetAnalysis(v *ListDoctorHiveTablesResponseBodyDataAnalysis) *ListDoctorHiveTablesResponseBodyData {
	s.Analysis = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyData) SetFormats(v []*ListDoctorHiveTablesResponseBodyDataFormats) *ListDoctorHiveTablesResponseBodyData {
	s.Formats = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyData) SetMetrics(v *ListDoctorHiveTablesResponseBodyDataMetrics) *ListDoctorHiveTablesResponseBodyData {
	s.Metrics = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyData) SetOwner(v string) *ListDoctorHiveTablesResponseBodyData {
	s.Owner = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyData) SetTableName(v string) *ListDoctorHiveTablesResponseBodyData {
	s.TableName = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataAnalysis struct {
	// The score for the file sizes of the Hive table.
	//
	// example:
	//
	// 80
	HiveDistributionScore *int32 `json:"HiveDistributionScore,omitempty" xml:"HiveDistributionScore,omitempty"`
	// The score for the data formats of the Hive table.
	//
	// example:
	//
	// 60
	HiveFormatScore *int32 `json:"HiveFormatScore,omitempty" xml:"HiveFormatScore,omitempty"`
	// The score for the access frequency of the Hive table.
	//
	// example:
	//
	// 70
	HiveFrequencyScore *int32 `json:"HiveFrequencyScore,omitempty" xml:"HiveFrequencyScore,omitempty"`
	// The overall score of the Hive table.
	//
	// example:
	//
	// 80
	HiveScore *int32 `json:"HiveScore,omitempty" xml:"HiveScore,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataAnalysis) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataAnalysis) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataAnalysis) SetHiveDistributionScore(v int32) *ListDoctorHiveTablesResponseBodyDataAnalysis {
	s.HiveDistributionScore = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataAnalysis) SetHiveFormatScore(v int32) *ListDoctorHiveTablesResponseBodyDataAnalysis {
	s.HiveFormatScore = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataAnalysis) SetHiveFrequencyScore(v int32) *ListDoctorHiveTablesResponseBodyDataAnalysis {
	s.HiveFrequencyScore = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataAnalysis) SetHiveScore(v int32) *ListDoctorHiveTablesResponseBodyDataAnalysis {
	s.HiveScore = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataFormats struct {
	// The daily increment of data in the format.
	//
	// example:
	//
	// 1232124
	FormatDayGrowthSize *int64 `json:"FormatDayGrowthSize,omitempty" xml:"FormatDayGrowthSize,omitempty"`
	// The name of the storage format.
	//
	// example:
	//
	// TextInputFormat
	FormatName *string `json:"FormatName,omitempty" xml:"FormatName,omitempty"`
	// The proportion of the data in the format.
	//
	// example:
	//
	// 0.23
	FormatRatio *float32 `json:"FormatRatio,omitempty" xml:"FormatRatio,omitempty"`
	// The amount of data in the format.
	//
	// example:
	//
	// 506930200
	FormatSize *int64 `json:"FormatSize,omitempty" xml:"FormatSize,omitempty"`
	// The day-to-day growth rate of data in the format.
	//
	// example:
	//
	// 0.04
	FormatSizeDayGrowthRatio *float32 `json:"FormatSizeDayGrowthRatio,omitempty" xml:"FormatSizeDayGrowthRatio,omitempty"`
	// The unit of the amount of data in the format.
	//
	// example:
	//
	// MB
	FormatSizeUnit *string `json:"FormatSizeUnit,omitempty" xml:"FormatSizeUnit,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataFormats) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataFormats) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataFormats) SetFormatDayGrowthSize(v int64) *ListDoctorHiveTablesResponseBodyDataFormats {
	s.FormatDayGrowthSize = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataFormats) SetFormatName(v string) *ListDoctorHiveTablesResponseBodyDataFormats {
	s.FormatName = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataFormats) SetFormatRatio(v float32) *ListDoctorHiveTablesResponseBodyDataFormats {
	s.FormatRatio = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataFormats) SetFormatSize(v int64) *ListDoctorHiveTablesResponseBodyDataFormats {
	s.FormatSize = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataFormats) SetFormatSizeDayGrowthRatio(v float32) *ListDoctorHiveTablesResponseBodyDataFormats {
	s.FormatSizeDayGrowthRatio = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataFormats) SetFormatSizeUnit(v string) *ListDoctorHiveTablesResponseBodyDataFormats {
	s.FormatSizeUnit = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetrics struct {
	// The daily increment of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataDayGrowthSize *ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize `json:"ColdDataDayGrowthSize,omitempty" xml:"ColdDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataRatio *ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio `json:"ColdDataRatio,omitempty" xml:"ColdDataRatio,omitempty" type:"Struct"`
	// The amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataSize *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize `json:"ColdDataSize,omitempty" xml:"ColdDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of cold data. Cold data refers to data that is not accessed for more than 30 days but is accessed in previous 90 days.
	ColdDataSizeDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio `json:"ColdDataSizeDayGrowthRatio,omitempty" xml:"ColdDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCount *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount `json:"EmptyFileCount,omitempty" xml:"EmptyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileCountDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio `json:"EmptyFileCountDayGrowthRatio,omitempty" xml:"EmptyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of empty files. Empty files are those with a size of 0 MB.
	EmptyFileDayGrowthCount *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount `json:"EmptyFileDayGrowthCount,omitempty" xml:"EmptyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of empty files. Empty files are those with a size of 0 MB.
	EmptyFileRatio *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio `json:"EmptyFileRatio,omitempty" xml:"EmptyFileRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataDayGrowthSize *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize `json:"FreezeDataDayGrowthSize,omitempty" xml:"FreezeDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataRatio *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio `json:"FreezeDataRatio,omitempty" xml:"FreezeDataRatio,omitempty" type:"Struct"`
	// The amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSize *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize `json:"FreezeDataSize,omitempty" xml:"FreezeDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of very cold data. Very cold data refers to data that is not accessed for more than 90 days.
	FreezeDataSizeDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio `json:"FreezeDataSizeDayGrowthRatio,omitempty" xml:"FreezeDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataDayGrowthSize *ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize `json:"HotDataDayGrowthSize,omitempty" xml:"HotDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataRatio *ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio `json:"HotDataRatio,omitempty" xml:"HotDataRatio,omitempty" type:"Struct"`
	// The amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataSize *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize `json:"HotDataSize,omitempty" xml:"HotDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of hot data. Hot data refers to data that is accessed in previous seven days.
	HotDataSizeDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio `json:"HotDataSizeDayGrowthRatio,omitempty" xml:"HotDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCount *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount `json:"LargeFileCount,omitempty" xml:"LargeFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileCountDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio `json:"LargeFileCountDayGrowthRatio,omitempty" xml:"LargeFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of large files. Large files are those with a size greater than 1 GB.
	LargeFileDayGrowthCount *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount `json:"LargeFileDayGrowthCount,omitempty" xml:"LargeFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of large files. Large files are those with a size greater than 1 GB.
	LargeFileRatio *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio `json:"LargeFileRatio,omitempty" xml:"LargeFileRatio,omitempty" type:"Struct"`
	// The number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCount *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount `json:"MediumFileCount,omitempty" xml:"MediumFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileCountDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio `json:"MediumFileCountDayGrowthRatio,omitempty" xml:"MediumFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileDayGrowthCount *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount `json:"MediumFileDayGrowthCount,omitempty" xml:"MediumFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of medium files. Medium files are those with a size greater than or equal to 128 MB and less than or equal to 1 GB.
	MediumFileRatio *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio `json:"MediumFileRatio,omitempty" xml:"MediumFileRatio,omitempty" type:"Struct"`
	// The number of partitions.
	PartitionNum *ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum `json:"PartitionNum,omitempty" xml:"PartitionNum,omitempty" type:"Struct"`
	// The number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCount *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount `json:"SmallFileCount,omitempty" xml:"SmallFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileCountDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio `json:"SmallFileCountDayGrowthRatio,omitempty" xml:"SmallFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileDayGrowthCount *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount `json:"SmallFileDayGrowthCount,omitempty" xml:"SmallFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of small files. Small files are those with a size greater than or equal to 10 MB and less than 128 MB.
	SmallFileRatio *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio `json:"SmallFileRatio,omitempty" xml:"SmallFileRatio,omitempty" type:"Struct"`
	// The number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCount *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount `json:"TinyFileCount,omitempty" xml:"TinyFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileCountDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio `json:"TinyFileCountDayGrowthRatio,omitempty" xml:"TinyFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the number of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileDayGrowthCount *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount `json:"TinyFileDayGrowthCount,omitempty" xml:"TinyFileDayGrowthCount,omitempty" type:"Struct"`
	// The proportion of very small files. Very small files are those with a size greater than 0 MB and less than 10 MB.
	TinyFileRatio *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio `json:"TinyFileRatio,omitempty" xml:"TinyFileRatio,omitempty" type:"Struct"`
	// The daily increment of the total amount of data.
	TotalDataDayGrowthSize *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize `json:"TotalDataDayGrowthSize,omitempty" xml:"TotalDataDayGrowthSize,omitempty" type:"Struct"`
	// The total amount of data.
	TotalDataSize *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize `json:"TotalDataSize,omitempty" xml:"TotalDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total amount of data.
	TotalDataSizeDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio `json:"TotalDataSizeDayGrowthRatio,omitempty" xml:"TotalDataSizeDayGrowthRatio,omitempty" type:"Struct"`
	// The total number of files.
	TotalFileCount *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount `json:"TotalFileCount,omitempty" xml:"TotalFileCount,omitempty" type:"Struct"`
	// The day-to-day growth rate of the total number of files.
	TotalFileCountDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio `json:"TotalFileCountDayGrowthRatio,omitempty" xml:"TotalFileCountDayGrowthRatio,omitempty" type:"Struct"`
	// The daily increment of the total number of files.
	TotalFileDayGrowthCount *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount `json:"TotalFileDayGrowthCount,omitempty" xml:"TotalFileDayGrowthCount,omitempty" type:"Struct"`
	// The daily increment of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataDayGrowthSize *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize `json:"WarmDataDayGrowthSize,omitempty" xml:"WarmDataDayGrowthSize,omitempty" type:"Struct"`
	// The proportion of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataRatio *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio `json:"WarmDataRatio,omitempty" xml:"WarmDataRatio,omitempty" type:"Struct"`
	// The amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataSize *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize `json:"WarmDataSize,omitempty" xml:"WarmDataSize,omitempty" type:"Struct"`
	// The day-to-day growth rate of the amount of warm data. Warm data refers to data that is not accessed for more than 7 days but is accessed in previous 30 days.
	WarmDataSizeDayGrowthRatio *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio `json:"WarmDataSizeDayGrowthRatio,omitempty" xml:"WarmDataSizeDayGrowthRatio,omitempty" type:"Struct"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetColdDataDayGrowthSize(v *ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.ColdDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetColdDataRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.ColdDataRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetColdDataSize(v *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.ColdDataSize = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetColdDataSizeDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.ColdDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetEmptyFileCount(v *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.EmptyFileCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetEmptyFileCountDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.EmptyFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetEmptyFileDayGrowthCount(v *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.EmptyFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetEmptyFileRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.EmptyFileRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetFreezeDataDayGrowthSize(v *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.FreezeDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetFreezeDataRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.FreezeDataRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetFreezeDataSize(v *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.FreezeDataSize = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetFreezeDataSizeDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.FreezeDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetHotDataDayGrowthSize(v *ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.HotDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetHotDataRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.HotDataRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetHotDataSize(v *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.HotDataSize = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetHotDataSizeDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.HotDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetLargeFileCount(v *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.LargeFileCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetLargeFileCountDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.LargeFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetLargeFileDayGrowthCount(v *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.LargeFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetLargeFileRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.LargeFileRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetMediumFileCount(v *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.MediumFileCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetMediumFileCountDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.MediumFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetMediumFileDayGrowthCount(v *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.MediumFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetMediumFileRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.MediumFileRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetPartitionNum(v *ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.PartitionNum = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetSmallFileCount(v *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.SmallFileCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetSmallFileCountDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.SmallFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetSmallFileDayGrowthCount(v *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.SmallFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetSmallFileRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.SmallFileRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetTinyFileCount(v *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.TinyFileCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetTinyFileCountDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.TinyFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetTinyFileDayGrowthCount(v *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.TinyFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetTinyFileRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.TinyFileRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetTotalDataDayGrowthSize(v *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.TotalDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetTotalDataSize(v *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.TotalDataSize = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetTotalDataSizeDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.TotalDataSizeDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetTotalFileCount(v *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.TotalFileCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetTotalFileCountDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.TotalFileCountDayGrowthRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetTotalFileDayGrowthCount(v *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.TotalFileDayGrowthCount = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetWarmDataDayGrowthSize(v *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.WarmDataDayGrowthSize = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetWarmDataRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.WarmDataRatio = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetWarmDataSize(v *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.WarmDataSize = v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetrics) SetWarmDataSizeDayGrowthRatio(v *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) *ListDoctorHiveTablesResponseBodyDataMetrics {
	s.WarmDataSizeDayGrowthRatio = v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of cold data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 217715
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Cold data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 217715
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSize {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of cold data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// coldDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsColdDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 3123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// -20
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of empty files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// emptyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsEmptyFileRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 33229309
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of freeze data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.98
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 33229309
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSize {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of freeze data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// freezeDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsFreezeDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of hot data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 203431
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Hot data ratio
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 203431
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSize {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of hot data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// hotDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsHotDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 132
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 40
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of large files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// largeFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.02
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsLargeFileRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 5
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 20
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of medium files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// mediumFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.8
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsMediumFileRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum struct {
	// The description of the metric.
	//
	// example:
	//
	// number of partitions
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// partitionNum
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// “”
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 331
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsPartitionNum {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// "“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 18
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 18
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of small files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// smallFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.04
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsSmallFileRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 451
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.04
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 482
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of tiny files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// tinyFileRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.96
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsTinyFileRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of total data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 33800296
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Total data size in megabytes (MB)
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 33800296
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSize {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsTotalDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Number of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileCountDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileCountDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth count of total files
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// totalFileDayGrowthCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 100
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsTotalFileDayGrowthCount {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth size of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataDayGrowthSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 149841
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataDayGrowthSize {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Ratio of warm data
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.1
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize struct {
	// The description of the metric.
	//
	// example:
	//
	// Size of the warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSize
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 14981
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize) SetValue(v int64) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSize {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio struct {
	// The description of the metric.
	//
	// example:
	//
	// Day growth ratio of warm data size
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// warmDataSizeDayGrowthRatio
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ”“
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 0.01
	Value *float32 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetDescription(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Description = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetName(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Name = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetUnit(v string) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Unit = &v
	return s
}

func (s *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio) SetValue(v float32) *ListDoctorHiveTablesResponseBodyDataMetricsWarmDataSizeDayGrowthRatio {
	s.Value = &v
	return s
}

type ListDoctorHiveTablesResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorHiveTablesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorHiveTablesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorHiveTablesResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorHiveTablesResponse) SetHeaders(v map[string]*string) *ListDoctorHiveTablesResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorHiveTablesResponse) SetStatusCode(v int32) *ListDoctorHiveTablesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorHiveTablesResponse) SetBody(v *ListDoctorHiveTablesResponseBody) *ListDoctorHiveTablesResponse {
	s.Body = v
	return s
}

type ListDoctorJobsRequest struct {
	// The IDs of the jobs that are submitted to YARN.
	//
	// example:
	//
	// null
	AppIds []*string `json:"AppIds,omitempty" xml:"AppIds,omitempty" type:"Repeated"`
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The range of end time. You can filter jobs whose end time falls within the specified time range.
	EndRange *ListDoctorJobsRequestEndRange `json:"EndRange,omitempty" xml:"EndRange,omitempty" type:"Struct"`
	// The maximum number of entries to return on each page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the request to retrieve a new page of results.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The field that you use to sort the query results. Valid values:
	//
	// 	- vcoreSeconds: the aggregated number of vCPUs that are allocated to the job multiplied by the number of seconds the job has been running
	//
	// 	- memSeconds: the aggregated amount of memory that is allocated to the job multiplied by the number of seconds the job has been running
	//
	// example:
	//
	// vcoreSeconds
	OrderBy *string `json:"OrderBy,omitempty" xml:"OrderBy,omitempty"`
	// The order in which you want to sort the query results. Valid values:
	//
	// 	- ASC: the ascending order
	//
	// 	- DESC: the descending order
	//
	// example:
	//
	// ASC
	OrderType *string `json:"OrderType,omitempty" xml:"OrderType,omitempty"`
	// The YARN queues to which the jobs are submitted.
	//
	// example:
	//
	// null
	Queues []*string `json:"Queues,omitempty" xml:"Queues,omitempty" type:"Repeated"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The range of start time. You can filter jobs whose start time falls within the specified time range.
	StartRange *ListDoctorJobsRequestStartRange `json:"StartRange,omitempty" xml:"StartRange,omitempty" type:"Struct"`
	// The YARN engines to which the jobs are submitted.
	//
	// example:
	//
	// null
	Types []*string `json:"Types,omitempty" xml:"Types,omitempty" type:"Repeated"`
	// The users who submit the jobs.
	//
	// example:
	//
	// null
	Users []*string `json:"Users,omitempty" xml:"Users,omitempty" type:"Repeated"`
}

func (s ListDoctorJobsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsRequest) SetAppIds(v []*string) *ListDoctorJobsRequest {
	s.AppIds = v
	return s
}

func (s *ListDoctorJobsRequest) SetClusterId(v string) *ListDoctorJobsRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorJobsRequest) SetEndRange(v *ListDoctorJobsRequestEndRange) *ListDoctorJobsRequest {
	s.EndRange = v
	return s
}

func (s *ListDoctorJobsRequest) SetMaxResults(v int32) *ListDoctorJobsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorJobsRequest) SetNextToken(v string) *ListDoctorJobsRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorJobsRequest) SetOrderBy(v string) *ListDoctorJobsRequest {
	s.OrderBy = &v
	return s
}

func (s *ListDoctorJobsRequest) SetOrderType(v string) *ListDoctorJobsRequest {
	s.OrderType = &v
	return s
}

func (s *ListDoctorJobsRequest) SetQueues(v []*string) *ListDoctorJobsRequest {
	s.Queues = v
	return s
}

func (s *ListDoctorJobsRequest) SetRegionId(v string) *ListDoctorJobsRequest {
	s.RegionId = &v
	return s
}

func (s *ListDoctorJobsRequest) SetStartRange(v *ListDoctorJobsRequestStartRange) *ListDoctorJobsRequest {
	s.StartRange = v
	return s
}

func (s *ListDoctorJobsRequest) SetTypes(v []*string) *ListDoctorJobsRequest {
	s.Types = v
	return s
}

func (s *ListDoctorJobsRequest) SetUsers(v []*string) *ListDoctorJobsRequest {
	s.Users = v
	return s
}

type ListDoctorJobsRequestEndRange struct {
	// The end of the time range during which jobs ended. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1666865137099
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The beginning of the time range during which jobs ended. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1679135111960
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s ListDoctorJobsRequestEndRange) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsRequestEndRange) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsRequestEndRange) SetEndTime(v int64) *ListDoctorJobsRequestEndRange {
	s.EndTime = &v
	return s
}

func (s *ListDoctorJobsRequestEndRange) SetStartTime(v int64) *ListDoctorJobsRequestEndRange {
	s.StartTime = &v
	return s
}

type ListDoctorJobsRequestStartRange struct {
	// The end of the time range during which jobs were submitted. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1683340662020
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The beginning of the time range during which jobs were submitted. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1683340662016
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s ListDoctorJobsRequestStartRange) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsRequestStartRange) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsRequestStartRange) SetEndTime(v int64) *ListDoctorJobsRequestStartRange {
	s.EndTime = &v
	return s
}

func (s *ListDoctorJobsRequestStartRange) SetStartTime(v int64) *ListDoctorJobsRequestStartRange {
	s.StartTime = &v
	return s
}

type ListDoctorJobsResponseBody struct {
	// The information about the jobs.
	Data []*ListDoctorJobsResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The maximum number of entries returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorJobsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsResponseBody) SetData(v []*ListDoctorJobsResponseBodyData) *ListDoctorJobsResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorJobsResponseBody) SetMaxResults(v int32) *ListDoctorJobsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorJobsResponseBody) SetNextToken(v string) *ListDoctorJobsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorJobsResponseBody) SetRequestId(v string) *ListDoctorJobsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorJobsResponseBody) SetTotalCount(v int32) *ListDoctorJobsResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorJobsResponseBodyData struct {
	// The ID of the job that was submitted to YARN.
	//
	// example:
	//
	// application_1607584549220_*****
	AppId *string `json:"AppId,omitempty" xml:"AppId,omitempty"`
	// The name of the job.
	//
	// example:
	//
	// tpcds
	AppName *string `json:"AppName,omitempty" xml:"AppName,omitempty"`
	// The total running time of the job. Unit: milliseconds.
	//
	// example:
	//
	// 242
	ElapsedTime *int64 `json:"ElapsedTime,omitempty" xml:"ElapsedTime,omitempty"`
	// The final state of the job. Valid values:
	//
	// 	- SUCCEEDED
	//
	// 	- FAILED
	//
	// 	- KILLED
	//
	// 	- ENDED
	//
	// 	- UNDEFINED
	//
	// example:
	//
	// KILLED
	FinalStatus *string `json:"FinalStatus,omitempty" xml:"FinalStatus,omitempty"`
	// The end time of the job. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1683690929000
	FinishTime *int64 `json:"FinishTime,omitempty" xml:"FinishTime,omitempty"`
	// The time when the job was started. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1672148400000
	LaunchTime *int64 `json:"LaunchTime,omitempty" xml:"LaunchTime,omitempty"`
	// The data about the metrics.
	Metrics *ListDoctorJobsResponseBodyDataMetrics `json:"Metrics,omitempty" xml:"Metrics,omitempty" type:"Struct"`
	// The YARN queue to which the job was submitted.
	//
	// example:
	//
	// DW
	Queue *string `json:"Queue,omitempty" xml:"Queue,omitempty"`
	// The time when the job was submitted. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1675180800000
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
	// The running state of the job. Valid values:
	//
	// 	- FINISHED
	//
	// 	- FAILED
	//
	// 	- KILLED
	//
	// example:
	//
	// FINISHED
	State *string `json:"State,omitempty" xml:"State,omitempty"`
	// The type of the compute engine.
	//
	// example:
	//
	// SPARK
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
	// The username that was used to submit the job.
	//
	// example:
	//
	// DW
	User *string `json:"User,omitempty" xml:"User,omitempty"`
}

func (s ListDoctorJobsResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsResponseBodyData) SetAppId(v string) *ListDoctorJobsResponseBodyData {
	s.AppId = &v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetAppName(v string) *ListDoctorJobsResponseBodyData {
	s.AppName = &v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetElapsedTime(v int64) *ListDoctorJobsResponseBodyData {
	s.ElapsedTime = &v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetFinalStatus(v string) *ListDoctorJobsResponseBodyData {
	s.FinalStatus = &v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetFinishTime(v int64) *ListDoctorJobsResponseBodyData {
	s.FinishTime = &v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetLaunchTime(v int64) *ListDoctorJobsResponseBodyData {
	s.LaunchTime = &v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetMetrics(v *ListDoctorJobsResponseBodyDataMetrics) *ListDoctorJobsResponseBodyData {
	s.Metrics = v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetQueue(v string) *ListDoctorJobsResponseBodyData {
	s.Queue = &v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetStartTime(v int64) *ListDoctorJobsResponseBodyData {
	s.StartTime = &v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetState(v string) *ListDoctorJobsResponseBodyData {
	s.State = &v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetType(v string) *ListDoctorJobsResponseBodyData {
	s.Type = &v
	return s
}

func (s *ListDoctorJobsResponseBodyData) SetUser(v string) *ListDoctorJobsResponseBodyData {
	s.User = &v
	return s
}

type ListDoctorJobsResponseBodyDataMetrics struct {
	// The amount of memory consumed.
	MemSeconds *ListDoctorJobsResponseBodyDataMetricsMemSeconds `json:"MemSeconds,omitempty" xml:"MemSeconds,omitempty" type:"Struct"`
	// The CPU usage.
	VcoreSeconds *ListDoctorJobsResponseBodyDataMetricsVcoreSeconds `json:"VcoreSeconds,omitempty" xml:"VcoreSeconds,omitempty" type:"Struct"`
}

func (s ListDoctorJobsResponseBodyDataMetrics) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsResponseBodyDataMetrics) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsResponseBodyDataMetrics) SetMemSeconds(v *ListDoctorJobsResponseBodyDataMetricsMemSeconds) *ListDoctorJobsResponseBodyDataMetrics {
	s.MemSeconds = v
	return s
}

func (s *ListDoctorJobsResponseBodyDataMetrics) SetVcoreSeconds(v *ListDoctorJobsResponseBodyDataMetricsVcoreSeconds) *ListDoctorJobsResponseBodyDataMetrics {
	s.VcoreSeconds = v
	return s
}

type ListDoctorJobsResponseBodyDataMetricsMemSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total memory usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12312312
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorJobsResponseBodyDataMetricsMemSeconds) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsResponseBodyDataMetricsMemSeconds) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsResponseBodyDataMetricsMemSeconds) SetDescription(v string) *ListDoctorJobsResponseBodyDataMetricsMemSeconds {
	s.Description = &v
	return s
}

func (s *ListDoctorJobsResponseBodyDataMetricsMemSeconds) SetName(v string) *ListDoctorJobsResponseBodyDataMetricsMemSeconds {
	s.Name = &v
	return s
}

func (s *ListDoctorJobsResponseBodyDataMetricsMemSeconds) SetUnit(v string) *ListDoctorJobsResponseBodyDataMetricsMemSeconds {
	s.Unit = &v
	return s
}

func (s *ListDoctorJobsResponseBodyDataMetricsMemSeconds) SetValue(v int64) *ListDoctorJobsResponseBodyDataMetricsMemSeconds {
	s.Value = &v
	return s
}

type ListDoctorJobsResponseBodyDataMetricsVcoreSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total vcore usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// VCores 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 11123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorJobsResponseBodyDataMetricsVcoreSeconds) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsResponseBodyDataMetricsVcoreSeconds) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsResponseBodyDataMetricsVcoreSeconds) SetDescription(v string) *ListDoctorJobsResponseBodyDataMetricsVcoreSeconds {
	s.Description = &v
	return s
}

func (s *ListDoctorJobsResponseBodyDataMetricsVcoreSeconds) SetName(v string) *ListDoctorJobsResponseBodyDataMetricsVcoreSeconds {
	s.Name = &v
	return s
}

func (s *ListDoctorJobsResponseBodyDataMetricsVcoreSeconds) SetUnit(v string) *ListDoctorJobsResponseBodyDataMetricsVcoreSeconds {
	s.Unit = &v
	return s
}

func (s *ListDoctorJobsResponseBodyDataMetricsVcoreSeconds) SetValue(v int64) *ListDoctorJobsResponseBodyDataMetricsVcoreSeconds {
	s.Value = &v
	return s
}

type ListDoctorJobsResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorJobsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorJobsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsResponse) SetHeaders(v map[string]*string) *ListDoctorJobsResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorJobsResponse) SetStatusCode(v int32) *ListDoctorJobsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorJobsResponse) SetBody(v *ListDoctorJobsResponseBody) *ListDoctorJobsResponse {
	s.Body = v
	return s
}

type ListDoctorJobsStatsRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The range of end time. You can filter jobs whose end time falls within the specified time range.
	EndRange *ListDoctorJobsStatsRequestEndRange `json:"EndRange,omitempty" xml:"EndRange,omitempty" type:"Struct"`
	// The fields that are used for grouping data.
	//
	// Currently, only the first value is used for grouping data. Combinations of multiple values will be supported in the future.
	//
	// example:
	//
	// null
	GroupBy []*string `json:"GroupBy,omitempty" xml:"GroupBy,omitempty" type:"Repeated"`
	// The maximum number of entries to return on each page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the request to retrieve a new page of results.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The field that you use to sort the query results. Valid values:
	//
	// 	- vcoreSeconds: the aggregated number of vCPUs that are allocated to the job multiplied by the number of seconds the job has been running
	//
	// 	- memSeconds: the aggregated amount of memory that is allocated to the job multiplied by the number of seconds the job has been running
	//
	// example:
	//
	// vcoreSeconds
	OrderBy *string `json:"OrderBy,omitempty" xml:"OrderBy,omitempty"`
	// The order in which you want to sort the query results. Valid values:
	//
	// 	- ASC: in ascending order
	//
	// 	- DESC: in descending order
	//
	// example:
	//
	// ASC
	OrderType *string `json:"OrderType,omitempty" xml:"OrderType,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The range of start time. You can filter jobs whose start time falls within the specified time range.
	StartRange *ListDoctorJobsStatsRequestStartRange `json:"StartRange,omitempty" xml:"StartRange,omitempty" type:"Struct"`
}

func (s ListDoctorJobsStatsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsStatsRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsStatsRequest) SetClusterId(v string) *ListDoctorJobsStatsRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorJobsStatsRequest) SetEndRange(v *ListDoctorJobsStatsRequestEndRange) *ListDoctorJobsStatsRequest {
	s.EndRange = v
	return s
}

func (s *ListDoctorJobsStatsRequest) SetGroupBy(v []*string) *ListDoctorJobsStatsRequest {
	s.GroupBy = v
	return s
}

func (s *ListDoctorJobsStatsRequest) SetMaxResults(v int32) *ListDoctorJobsStatsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorJobsStatsRequest) SetNextToken(v string) *ListDoctorJobsStatsRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorJobsStatsRequest) SetOrderBy(v string) *ListDoctorJobsStatsRequest {
	s.OrderBy = &v
	return s
}

func (s *ListDoctorJobsStatsRequest) SetOrderType(v string) *ListDoctorJobsStatsRequest {
	s.OrderType = &v
	return s
}

func (s *ListDoctorJobsStatsRequest) SetRegionId(v string) *ListDoctorJobsStatsRequest {
	s.RegionId = &v
	return s
}

func (s *ListDoctorJobsStatsRequest) SetStartRange(v *ListDoctorJobsStatsRequestStartRange) *ListDoctorJobsStatsRequest {
	s.StartRange = v
	return s
}

type ListDoctorJobsStatsRequestEndRange struct {
	// The end of the time range during which jobs ended. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC.
	//
	// example:
	//
	// 1680019200000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The beginning of the time range during which jobs ended. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC.
	//
	// example:
	//
	// 1675180800000
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s ListDoctorJobsStatsRequestEndRange) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsStatsRequestEndRange) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsStatsRequestEndRange) SetEndTime(v int64) *ListDoctorJobsStatsRequestEndRange {
	s.EndTime = &v
	return s
}

func (s *ListDoctorJobsStatsRequestEndRange) SetStartTime(v int64) *ListDoctorJobsStatsRequestEndRange {
	s.StartTime = &v
	return s
}

type ListDoctorJobsStatsRequestStartRange struct {
	// The end of the time range during which jobs were submitted. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1666406820000
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// The beginning of the time range during which jobs were submitted. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC. Unit: milliseconds.
	//
	// example:
	//
	// 1679036826987
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s ListDoctorJobsStatsRequestStartRange) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsStatsRequestStartRange) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsStatsRequestStartRange) SetEndTime(v int64) *ListDoctorJobsStatsRequestStartRange {
	s.EndTime = &v
	return s
}

func (s *ListDoctorJobsStatsRequestStartRange) SetStartTime(v int64) *ListDoctorJobsStatsRequestStartRange {
	s.StartTime = &v
	return s
}

type ListDoctorJobsStatsResponseBody struct {
	// The summary of job information.
	Data []*ListDoctorJobsStatsResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The maximum number of entries returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorJobsStatsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsStatsResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsStatsResponseBody) SetData(v []*ListDoctorJobsStatsResponseBodyData) *ListDoctorJobsStatsResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorJobsStatsResponseBody) SetMaxResults(v int32) *ListDoctorJobsStatsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBody) SetNextToken(v string) *ListDoctorJobsStatsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBody) SetRequestId(v string) *ListDoctorJobsStatsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBody) SetTotalCount(v int32) *ListDoctorJobsStatsResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorJobsStatsResponseBodyData struct {
	// The total number of jobs.
	AppsCount *ListDoctorJobsStatsResponseBodyDataAppsCount `json:"AppsCount,omitempty" xml:"AppsCount,omitempty" type:"Struct"`
	// The aggregated amount of memory that is allocated to the job multiplied by the number of seconds the job has been running.
	MemSeconds *ListDoctorJobsStatsResponseBodyDataMemSeconds `json:"MemSeconds,omitempty" xml:"MemSeconds,omitempty" type:"Struct"`
	// The YARN queue to which the job was submitted.
	//
	// example:
	//
	// DW
	Queue *string `json:"Queue,omitempty" xml:"Queue,omitempty"`
	// The type of the compute engine.
	//
	// example:
	//
	// SPARK
	Type *string `json:"Type,omitempty" xml:"Type,omitempty"`
	// The username that is used to submit the job.
	//
	// example:
	//
	// DW
	User *string `json:"User,omitempty" xml:"User,omitempty"`
	// The aggregated number of vCPUs that are allocated to the job multiplied by the number of seconds the job has been running.
	VcoreSeconds *ListDoctorJobsStatsResponseBodyDataVcoreSeconds `json:"VcoreSeconds,omitempty" xml:"VcoreSeconds,omitempty" type:"Struct"`
}

func (s ListDoctorJobsStatsResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsStatsResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsStatsResponseBodyData) SetAppsCount(v *ListDoctorJobsStatsResponseBodyDataAppsCount) *ListDoctorJobsStatsResponseBodyData {
	s.AppsCount = v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyData) SetMemSeconds(v *ListDoctorJobsStatsResponseBodyDataMemSeconds) *ListDoctorJobsStatsResponseBodyData {
	s.MemSeconds = v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyData) SetQueue(v string) *ListDoctorJobsStatsResponseBodyData {
	s.Queue = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyData) SetType(v string) *ListDoctorJobsStatsResponseBodyData {
	s.Type = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyData) SetUser(v string) *ListDoctorJobsStatsResponseBodyData {
	s.User = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyData) SetVcoreSeconds(v *ListDoctorJobsStatsResponseBodyDataVcoreSeconds) *ListDoctorJobsStatsResponseBodyData {
	s.VcoreSeconds = v
	return s
}

type ListDoctorJobsStatsResponseBodyDataAppsCount struct {
	// The description of the metric.
	//
	// example:
	//
	// Total apps count
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// appsCount
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// ""
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorJobsStatsResponseBodyDataAppsCount) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsStatsResponseBodyDataAppsCount) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsStatsResponseBodyDataAppsCount) SetDescription(v string) *ListDoctorJobsStatsResponseBodyDataAppsCount {
	s.Description = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyDataAppsCount) SetName(v string) *ListDoctorJobsStatsResponseBodyDataAppsCount {
	s.Name = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyDataAppsCount) SetUnit(v string) *ListDoctorJobsStatsResponseBodyDataAppsCount {
	s.Unit = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyDataAppsCount) SetValue(v int64) *ListDoctorJobsStatsResponseBodyDataAppsCount {
	s.Value = &v
	return s
}

type ListDoctorJobsStatsResponseBodyDataMemSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total memory usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// memSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// MB 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 12312312
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorJobsStatsResponseBodyDataMemSeconds) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsStatsResponseBodyDataMemSeconds) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsStatsResponseBodyDataMemSeconds) SetDescription(v string) *ListDoctorJobsStatsResponseBodyDataMemSeconds {
	s.Description = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyDataMemSeconds) SetName(v string) *ListDoctorJobsStatsResponseBodyDataMemSeconds {
	s.Name = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyDataMemSeconds) SetUnit(v string) *ListDoctorJobsStatsResponseBodyDataMemSeconds {
	s.Unit = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyDataMemSeconds) SetValue(v int64) *ListDoctorJobsStatsResponseBodyDataMemSeconds {
	s.Value = &v
	return s
}

type ListDoctorJobsStatsResponseBodyDataVcoreSeconds struct {
	// The description of the metric.
	//
	// example:
	//
	// Total vcore usage over time in seconds
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The name of the metric.
	//
	// example:
	//
	// vcoreSeconds
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The unit of the metric.
	//
	// example:
	//
	// VCores 	- Sec
	Unit *string `json:"Unit,omitempty" xml:"Unit,omitempty"`
	// The value of the metric.
	//
	// example:
	//
	// 11123
	Value *int64 `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListDoctorJobsStatsResponseBodyDataVcoreSeconds) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsStatsResponseBodyDataVcoreSeconds) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsStatsResponseBodyDataVcoreSeconds) SetDescription(v string) *ListDoctorJobsStatsResponseBodyDataVcoreSeconds {
	s.Description = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyDataVcoreSeconds) SetName(v string) *ListDoctorJobsStatsResponseBodyDataVcoreSeconds {
	s.Name = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyDataVcoreSeconds) SetUnit(v string) *ListDoctorJobsStatsResponseBodyDataVcoreSeconds {
	s.Unit = &v
	return s
}

func (s *ListDoctorJobsStatsResponseBodyDataVcoreSeconds) SetValue(v int64) *ListDoctorJobsStatsResponseBodyDataVcoreSeconds {
	s.Value = &v
	return s
}

type ListDoctorJobsStatsResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorJobsStatsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorJobsStatsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorJobsStatsResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorJobsStatsResponse) SetHeaders(v map[string]*string) *ListDoctorJobsStatsResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorJobsStatsResponse) SetStatusCode(v int32) *ListDoctorJobsStatsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorJobsStatsResponse) SetBody(v *ListDoctorJobsStatsResponseBody) *ListDoctorJobsStatsResponse {
	s.Body = v
	return s
}

type ListDoctorReportsRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The number of entries to return on each page.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the request to retrieve a new page of results.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s ListDoctorReportsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorReportsRequest) GoString() string {
	return s.String()
}

func (s *ListDoctorReportsRequest) SetClusterId(v string) *ListDoctorReportsRequest {
	s.ClusterId = &v
	return s
}

func (s *ListDoctorReportsRequest) SetMaxResults(v int32) *ListDoctorReportsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorReportsRequest) SetNextToken(v string) *ListDoctorReportsRequest {
	s.NextToken = &v
	return s
}

func (s *ListDoctorReportsRequest) SetRegionId(v string) *ListDoctorReportsRequest {
	s.RegionId = &v
	return s
}

type ListDoctorReportsResponseBody struct {
	// The reports.
	Data []*ListDoctorReportsResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Repeated"`
	// The maximum number of entries returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListDoctorReportsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorReportsResponseBody) GoString() string {
	return s.String()
}

func (s *ListDoctorReportsResponseBody) SetData(v []*ListDoctorReportsResponseBodyData) *ListDoctorReportsResponseBody {
	s.Data = v
	return s
}

func (s *ListDoctorReportsResponseBody) SetMaxResults(v int32) *ListDoctorReportsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListDoctorReportsResponseBody) SetNextToken(v string) *ListDoctorReportsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListDoctorReportsResponseBody) SetRequestId(v string) *ListDoctorReportsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListDoctorReportsResponseBody) SetTotalCount(v int32) *ListDoctorReportsResponseBody {
	s.TotalCount = &v
	return s
}

type ListDoctorReportsResponseBodyData struct {
	// The component types.
	//
	// Valid values:
	//
	// 	- compute
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// 	- hive
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// 	- hdfs
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// 	- yarn
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// 	- oss
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// 	- hbase
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	//     <!-- -->
	//
	// example:
	//
	// null
	ComponentTypes []*string `json:"ComponentTypes,omitempty" xml:"ComponentTypes,omitempty" type:"Repeated"`
	// The date on which the report was generated.
	//
	// example:
	//
	// 2023-06-29
	DateTime *string `json:"DateTime,omitempty" xml:"DateTime,omitempty"`
	// The summary of the report.
	SummaryReport *ListDoctorReportsResponseBodyDataSummaryReport `json:"SummaryReport,omitempty" xml:"SummaryReport,omitempty" type:"Struct"`
}

func (s ListDoctorReportsResponseBodyData) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorReportsResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListDoctorReportsResponseBodyData) SetComponentTypes(v []*string) *ListDoctorReportsResponseBodyData {
	s.ComponentTypes = v
	return s
}

func (s *ListDoctorReportsResponseBodyData) SetDateTime(v string) *ListDoctorReportsResponseBodyData {
	s.DateTime = &v
	return s
}

func (s *ListDoctorReportsResponseBodyData) SetSummaryReport(v *ListDoctorReportsResponseBodyDataSummaryReport) *ListDoctorReportsResponseBodyData {
	s.SummaryReport = v
	return s
}

type ListDoctorReportsResponseBodyDataSummaryReport struct {
	// The score.
	//
	// example:
	//
	// 88
	Score *int32 `json:"Score,omitempty" xml:"Score,omitempty"`
	// The optimization suggestion.
	//
	// example:
	//
	// block
	Suggestion *string `json:"Suggestion,omitempty" xml:"Suggestion,omitempty"`
	// The summary of the report.
	//
	// example:
	//
	// eastbuy-mse-plugin-auth
	Summary *string `json:"Summary,omitempty" xml:"Summary,omitempty"`
}

func (s ListDoctorReportsResponseBodyDataSummaryReport) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorReportsResponseBodyDataSummaryReport) GoString() string {
	return s.String()
}

func (s *ListDoctorReportsResponseBodyDataSummaryReport) SetScore(v int32) *ListDoctorReportsResponseBodyDataSummaryReport {
	s.Score = &v
	return s
}

func (s *ListDoctorReportsResponseBodyDataSummaryReport) SetSuggestion(v string) *ListDoctorReportsResponseBodyDataSummaryReport {
	s.Suggestion = &v
	return s
}

func (s *ListDoctorReportsResponseBodyDataSummaryReport) SetSummary(v string) *ListDoctorReportsResponseBodyDataSummaryReport {
	s.Summary = &v
	return s
}

type ListDoctorReportsResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListDoctorReportsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListDoctorReportsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListDoctorReportsResponse) GoString() string {
	return s.String()
}

func (s *ListDoctorReportsResponse) SetHeaders(v map[string]*string) *ListDoctorReportsResponse {
	s.Headers = v
	return s
}

func (s *ListDoctorReportsResponse) SetStatusCode(v int32) *ListDoctorReportsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListDoctorReportsResponse) SetBody(v *ListDoctorReportsResponseBody) *ListDoctorReportsResponse {
	s.Body = v
	return s
}

type ListInstanceTypesRequest struct {
	// 集群ID，仅升配场景使用。
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// 创建的EMR集群类型。取值范围：
	//
	// - DATALAKE：新版数据湖。
	//
	// - OLAP：数据分析。
	//
	// - DATAFLOW：实时数据流。
	//
	// - DATASERVING：数据服务。
	//
	// - CUSTOM：自定义集群。
	//
	// - HADOOP：旧版数据湖（不推荐使用，建议使用新版数据湖）。
	//
	// This parameter is required.
	//
	// example:
	//
	// DATALAKE
	ClusterType *string `json:"ClusterType,omitempty" xml:"ClusterType,omitempty"`
	// 集群中的应用部署模式。取值范围：
	//
	// - NORMAL：非高可用部署。集群1个MASTER节点。
	//
	// - HA：高可用部署。高可用部署要求至少3个MASTER节点。
	//
	// 默认值：NORMAL。
	//
	// example:
	//
	// HA
	DeployMode *string `json:"DeployMode,omitempty" xml:"DeployMode,omitempty"`
	// 机型
	//
	// example:
	//
	// ecs.g6.xlarge
	InstanceType *string `json:"InstanceType,omitempty" xml:"InstanceType,omitempty"`
	// 是否变配。
	//
	// example:
	//
	// false
	IsModification *bool `json:"IsModification,omitempty" xml:"IsModification,omitempty"`
	// 节点组ID。
	//
	// example:
	//
	// G-F06C4B47966A****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// 节点组类型。取值范围：
	//
	// - MASTER：管理类型节点组。
	//
	// - CORE：存储类型节点组。
	//
	// - TASK：计算类型节点组。
	//
	// This parameter is required.
	//
	// example:
	//
	// CORE
	NodeGroupType *string `json:"NodeGroupType,omitempty" xml:"NodeGroupType,omitempty"`
	// 集群的付费类型。取值范围：
	//
	// - PayAsYouGo：后付费。
	//
	// - Subscription：预付费。
	//
	// 默认值：PayAsYouGo。
	//
	// This parameter is required.
	//
	// example:
	//
	// PayAsYouGo
	PaymentType *string `json:"PaymentType,omitempty" xml:"PaymentType,omitempty"`
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// EMR发行版。
	//
	// example:
	//
	// EMR-5.3.0
	ReleaseVersion *string `json:"ReleaseVersion,omitempty" xml:"ReleaseVersion,omitempty"`
	// 可用区ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-beijing-h
	ZoneId *string `json:"ZoneId,omitempty" xml:"ZoneId,omitempty"`
}

func (s ListInstanceTypesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListInstanceTypesRequest) GoString() string {
	return s.String()
}

func (s *ListInstanceTypesRequest) SetClusterId(v string) *ListInstanceTypesRequest {
	s.ClusterId = &v
	return s
}

func (s *ListInstanceTypesRequest) SetClusterType(v string) *ListInstanceTypesRequest {
	s.ClusterType = &v
	return s
}

func (s *ListInstanceTypesRequest) SetDeployMode(v string) *ListInstanceTypesRequest {
	s.DeployMode = &v
	return s
}

func (s *ListInstanceTypesRequest) SetInstanceType(v string) *ListInstanceTypesRequest {
	s.InstanceType = &v
	return s
}

func (s *ListInstanceTypesRequest) SetIsModification(v bool) *ListInstanceTypesRequest {
	s.IsModification = &v
	return s
}

func (s *ListInstanceTypesRequest) SetNodeGroupId(v string) *ListInstanceTypesRequest {
	s.NodeGroupId = &v
	return s
}

func (s *ListInstanceTypesRequest) SetNodeGroupType(v string) *ListInstanceTypesRequest {
	s.NodeGroupType = &v
	return s
}

func (s *ListInstanceTypesRequest) SetPaymentType(v string) *ListInstanceTypesRequest {
	s.PaymentType = &v
	return s
}

func (s *ListInstanceTypesRequest) SetRegionId(v string) *ListInstanceTypesRequest {
	s.RegionId = &v
	return s
}

func (s *ListInstanceTypesRequest) SetReleaseVersion(v string) *ListInstanceTypesRequest {
	s.ReleaseVersion = &v
	return s
}

func (s *ListInstanceTypesRequest) SetZoneId(v string) *ListInstanceTypesRequest {
	s.ZoneId = &v
	return s
}

type ListInstanceTypesResponseBody struct {
	InstanceTypes []*InstanceType `json:"InstanceTypes,omitempty" xml:"InstanceTypes,omitempty" type:"Repeated"`
	// 本次请求所返回的最大记录条数。
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 返回读取到的数据位置，空代表数据已经读取完毕。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// 本次请求条件下的数据总量。
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListInstanceTypesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListInstanceTypesResponseBody) GoString() string {
	return s.String()
}

func (s *ListInstanceTypesResponseBody) SetInstanceTypes(v []*InstanceType) *ListInstanceTypesResponseBody {
	s.InstanceTypes = v
	return s
}

func (s *ListInstanceTypesResponseBody) SetMaxResults(v int32) *ListInstanceTypesResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListInstanceTypesResponseBody) SetNextToken(v string) *ListInstanceTypesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListInstanceTypesResponseBody) SetRequestId(v string) *ListInstanceTypesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListInstanceTypesResponseBody) SetTotalCount(v int32) *ListInstanceTypesResponseBody {
	s.TotalCount = &v
	return s
}

type ListInstanceTypesResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListInstanceTypesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListInstanceTypesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListInstanceTypesResponse) GoString() string {
	return s.String()
}

func (s *ListInstanceTypesResponse) SetHeaders(v map[string]*string) *ListInstanceTypesResponse {
	s.Headers = v
	return s
}

func (s *ListInstanceTypesResponse) SetStatusCode(v int32) *ListInstanceTypesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListInstanceTypesResponse) SetBody(v *ListInstanceTypesResponseBody) *ListInstanceTypesResponse {
	s.Body = v
	return s
}

type ListNodeGroupsRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The number of maximum number of records to obtain at a time. Valid values: 1 to 100.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// Marks the current position where reading starts. If you set this value to null, you can start from the beginning.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The IDs of node groups. Valid values of the number of array elements N: 1 to 100.
	//
	// example:
	//
	// c-b933c5aac8fe****
	NodeGroupIds []*string `json:"NodeGroupIds,omitempty" xml:"NodeGroupIds,omitempty" type:"Repeated"`
	// The list of node group names. Valid values of the number of array elements N: 1 to 100.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NodeGroupNames []*string `json:"NodeGroupNames,omitempty" xml:"NodeGroupNames,omitempty" type:"Repeated"`
	// The status of the node group. Valid values of the number of array elements N: 1 to 100.
	//
	// example:
	//
	// ["CORE"]
	NodeGroupStates []*string `json:"NodeGroupStates,omitempty" xml:"NodeGroupStates,omitempty" type:"Repeated"`
	// The list of node group types. Valid values of the number of array elements N: 1 to 100.
	//
	// example:
	//
	// 20
	NodeGroupTypes []*string `json:"NodeGroupTypes,omitempty" xml:"NodeGroupTypes,omitempty" type:"Repeated"`
	// The ID of the region in which you want to create the instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s ListNodeGroupsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListNodeGroupsRequest) GoString() string {
	return s.String()
}

func (s *ListNodeGroupsRequest) SetClusterId(v string) *ListNodeGroupsRequest {
	s.ClusterId = &v
	return s
}

func (s *ListNodeGroupsRequest) SetMaxResults(v int32) *ListNodeGroupsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListNodeGroupsRequest) SetNextToken(v string) *ListNodeGroupsRequest {
	s.NextToken = &v
	return s
}

func (s *ListNodeGroupsRequest) SetNodeGroupIds(v []*string) *ListNodeGroupsRequest {
	s.NodeGroupIds = v
	return s
}

func (s *ListNodeGroupsRequest) SetNodeGroupNames(v []*string) *ListNodeGroupsRequest {
	s.NodeGroupNames = v
	return s
}

func (s *ListNodeGroupsRequest) SetNodeGroupStates(v []*string) *ListNodeGroupsRequest {
	s.NodeGroupStates = v
	return s
}

func (s *ListNodeGroupsRequest) SetNodeGroupTypes(v []*string) *ListNodeGroupsRequest {
	s.NodeGroupTypes = v
	return s
}

func (s *ListNodeGroupsRequest) SetRegionId(v string) *ListNodeGroupsRequest {
	s.RegionId = &v
	return s
}

type ListNodeGroupsResponseBody struct {
	// The maximum number of entries returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// Returns the location of the data that was read. Empty indicates that the data has been read.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The array of node groups.
	NodeGroups []*NodeGroup `json:"NodeGroups,omitempty" xml:"NodeGroups,omitempty" type:"Repeated"`
	// The ID of the request.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListNodeGroupsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListNodeGroupsResponseBody) GoString() string {
	return s.String()
}

func (s *ListNodeGroupsResponseBody) SetMaxResults(v int32) *ListNodeGroupsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListNodeGroupsResponseBody) SetNextToken(v string) *ListNodeGroupsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListNodeGroupsResponseBody) SetNodeGroups(v []*NodeGroup) *ListNodeGroupsResponseBody {
	s.NodeGroups = v
	return s
}

func (s *ListNodeGroupsResponseBody) SetRequestId(v string) *ListNodeGroupsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListNodeGroupsResponseBody) SetTotalCount(v int32) *ListNodeGroupsResponseBody {
	s.TotalCount = &v
	return s
}

type ListNodeGroupsResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListNodeGroupsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListNodeGroupsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListNodeGroupsResponse) GoString() string {
	return s.String()
}

func (s *ListNodeGroupsResponse) SetHeaders(v map[string]*string) *ListNodeGroupsResponse {
	s.Headers = v
	return s
}

func (s *ListNodeGroupsResponse) SetStatusCode(v int32) *ListNodeGroupsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListNodeGroupsResponse) SetBody(v *ListNodeGroupsResponseBody) *ListNodeGroupsResponse {
	s.Body = v
	return s
}

type ListNodesRequest struct {
	// The ID of the cluster.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The number of maximum number of records to obtain at a time. Valid values: 1 to 100.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// Marks the current position where reading starts. If you set this value to null, you can start from the beginning.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The IDs of node groups.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NodeGroupIds []*string `json:"NodeGroupIds,omitempty" xml:"NodeGroupIds,omitempty" type:"Repeated"`
	// An array that consists of information about the ID of the node.
	//
	// example:
	//
	// c-b933c5aac8fe****
	NodeIds []*string `json:"NodeIds,omitempty" xml:"NodeIds,omitempty" type:"Repeated"`
	// The names of the nodes.
	//
	// example:
	//
	// 20
	NodeNames []*string `json:"NodeNames,omitempty" xml:"NodeNames,omitempty" type:"Repeated"`
	// The status of the node.
	//
	// example:
	//
	// ["CREATED"]
	NodeStates []*string `json:"NodeStates,omitempty" xml:"NodeStates,omitempty" type:"Repeated"`
	// The private IP address.
	//
	// example:
	//
	// ["172.12.0.91"]
	PrivateIps []*string `json:"PrivateIps,omitempty" xml:"PrivateIps,omitempty" type:"Repeated"`
	// The public IP address.
	//
	// example:
	//
	// ["120.13.14.38"]
	PublicIps []*string `json:"PublicIps,omitempty" xml:"PublicIps,omitempty" type:"Repeated"`
	// The ID of the region in which you want to create the instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The list of tags to be bound.
	Tags []*Tag `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s ListNodesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListNodesRequest) GoString() string {
	return s.String()
}

func (s *ListNodesRequest) SetClusterId(v string) *ListNodesRequest {
	s.ClusterId = &v
	return s
}

func (s *ListNodesRequest) SetMaxResults(v int32) *ListNodesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListNodesRequest) SetNextToken(v string) *ListNodesRequest {
	s.NextToken = &v
	return s
}

func (s *ListNodesRequest) SetNodeGroupIds(v []*string) *ListNodesRequest {
	s.NodeGroupIds = v
	return s
}

func (s *ListNodesRequest) SetNodeIds(v []*string) *ListNodesRequest {
	s.NodeIds = v
	return s
}

func (s *ListNodesRequest) SetNodeNames(v []*string) *ListNodesRequest {
	s.NodeNames = v
	return s
}

func (s *ListNodesRequest) SetNodeStates(v []*string) *ListNodesRequest {
	s.NodeStates = v
	return s
}

func (s *ListNodesRequest) SetPrivateIps(v []*string) *ListNodesRequest {
	s.PrivateIps = v
	return s
}

func (s *ListNodesRequest) SetPublicIps(v []*string) *ListNodesRequest {
	s.PublicIps = v
	return s
}

func (s *ListNodesRequest) SetRegionId(v string) *ListNodesRequest {
	s.RegionId = &v
	return s
}

func (s *ListNodesRequest) SetTags(v []*Tag) *ListNodesRequest {
	s.Tags = v
	return s
}

type ListNodesResponseBody struct {
	// The maximum number of entries returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The position at which the next read starts. If null is returned, the data has been read.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// Details about nodes.
	Nodes []*Node `json:"Nodes,omitempty" xml:"Nodes,omitempty" type:"Repeated"`
	// The ID of the request.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of records in this request.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListNodesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListNodesResponseBody) GoString() string {
	return s.String()
}

func (s *ListNodesResponseBody) SetMaxResults(v int32) *ListNodesResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListNodesResponseBody) SetNextToken(v string) *ListNodesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListNodesResponseBody) SetNodes(v []*Node) *ListNodesResponseBody {
	s.Nodes = v
	return s
}

func (s *ListNodesResponseBody) SetRequestId(v string) *ListNodesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListNodesResponseBody) SetTotalCount(v int32) *ListNodesResponseBody {
	s.TotalCount = &v
	return s
}

type ListNodesResponse struct {
	Headers    map[string]*string     `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                 `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListNodesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListNodesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListNodesResponse) GoString() string {
	return s.String()
}

func (s *ListNodesResponse) SetHeaders(v map[string]*string) *ListNodesResponse {
	s.Headers = v
	return s
}

func (s *ListNodesResponse) SetStatusCode(v int32) *ListNodesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListNodesResponse) SetBody(v *ListNodesResponseBody) *ListNodesResponse {
	s.Body = v
	return s
}

type ListReleaseVersionsRequest struct {
	// The type of the cluster.
	//
	// This parameter is required.
	//
	// example:
	//
	// DATALAKE
	ClusterType *string `json:"ClusterType,omitempty" xml:"ClusterType,omitempty"`
	// The type of the IaaS resource.
	//
	// example:
	//
	// ECS
	IaasType *string `json:"IaasType,omitempty" xml:"IaasType,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s ListReleaseVersionsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListReleaseVersionsRequest) GoString() string {
	return s.String()
}

func (s *ListReleaseVersionsRequest) SetClusterType(v string) *ListReleaseVersionsRequest {
	s.ClusterType = &v
	return s
}

func (s *ListReleaseVersionsRequest) SetIaasType(v string) *ListReleaseVersionsRequest {
	s.IaasType = &v
	return s
}

func (s *ListReleaseVersionsRequest) SetRegionId(v string) *ListReleaseVersionsRequest {
	s.RegionId = &v
	return s
}

type ListReleaseVersionsResponseBody struct {
	// The maximum number of entries returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// Returns the location of the data that was read.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The major EMR versions.
	ReleaseVersions []*ListReleaseVersionsResponseBodyReleaseVersions `json:"ReleaseVersions,omitempty" xml:"ReleaseVersions,omitempty" type:"Repeated"`
	// The ID of the request.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListReleaseVersionsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListReleaseVersionsResponseBody) GoString() string {
	return s.String()
}

func (s *ListReleaseVersionsResponseBody) SetMaxResults(v int32) *ListReleaseVersionsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListReleaseVersionsResponseBody) SetNextToken(v string) *ListReleaseVersionsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListReleaseVersionsResponseBody) SetReleaseVersions(v []*ListReleaseVersionsResponseBodyReleaseVersions) *ListReleaseVersionsResponseBody {
	s.ReleaseVersions = v
	return s
}

func (s *ListReleaseVersionsResponseBody) SetRequestId(v string) *ListReleaseVersionsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListReleaseVersionsResponseBody) SetTotalCount(v int32) *ListReleaseVersionsResponseBody {
	s.TotalCount = &v
	return s
}

type ListReleaseVersionsResponseBodyReleaseVersions struct {
	// The IaaS type.
	//
	// example:
	//
	// ECS
	IaasType *string `json:"IaasType,omitempty" xml:"IaasType,omitempty"`
	// The EMR version.
	//
	// example:
	//
	// EMR-5.3.0
	ReleaseVersion *string `json:"ReleaseVersion,omitempty" xml:"ReleaseVersion,omitempty"`
	// The version series.
	//
	// example:
	//
	// EMR-6.X
	Series *string `json:"Series,omitempty" xml:"Series,omitempty"`
}

func (s ListReleaseVersionsResponseBodyReleaseVersions) String() string {
	return tea.Prettify(s)
}

func (s ListReleaseVersionsResponseBodyReleaseVersions) GoString() string {
	return s.String()
}

func (s *ListReleaseVersionsResponseBodyReleaseVersions) SetIaasType(v string) *ListReleaseVersionsResponseBodyReleaseVersions {
	s.IaasType = &v
	return s
}

func (s *ListReleaseVersionsResponseBodyReleaseVersions) SetReleaseVersion(v string) *ListReleaseVersionsResponseBodyReleaseVersions {
	s.ReleaseVersion = &v
	return s
}

func (s *ListReleaseVersionsResponseBodyReleaseVersions) SetSeries(v string) *ListReleaseVersionsResponseBodyReleaseVersions {
	s.Series = &v
	return s
}

type ListReleaseVersionsResponse struct {
	Headers    map[string]*string               `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                           `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListReleaseVersionsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListReleaseVersionsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListReleaseVersionsResponse) GoString() string {
	return s.String()
}

func (s *ListReleaseVersionsResponse) SetHeaders(v map[string]*string) *ListReleaseVersionsResponse {
	s.Headers = v
	return s
}

func (s *ListReleaseVersionsResponse) SetStatusCode(v int32) *ListReleaseVersionsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListReleaseVersionsResponse) SetBody(v *ListReleaseVersionsResponseBody) *ListReleaseVersionsResponse {
	s.Body = v
	return s
}

type ListScriptsRequest struct {
	// 集群ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// 一次获取的最大记录数。取值范围：1~100。
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 标记当前开始读取的位置，置空表示从头开始。
	//
	// example:
	//
	// dd6b1b2a-5837-5237-abe4-ff0c89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// 集群脚本类型。
	//
	// This parameter is required.
	//
	// example:
	//
	// BOOTSTRAP
	ScriptType *string `json:"ScriptType,omitempty" xml:"ScriptType,omitempty"`
}

func (s ListScriptsRequest) String() string {
	return tea.Prettify(s)
}

func (s ListScriptsRequest) GoString() string {
	return s.String()
}

func (s *ListScriptsRequest) SetClusterId(v string) *ListScriptsRequest {
	s.ClusterId = &v
	return s
}

func (s *ListScriptsRequest) SetMaxResults(v int32) *ListScriptsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListScriptsRequest) SetNextToken(v string) *ListScriptsRequest {
	s.NextToken = &v
	return s
}

func (s *ListScriptsRequest) SetRegionId(v string) *ListScriptsRequest {
	s.RegionId = &v
	return s
}

func (s *ListScriptsRequest) SetScriptType(v string) *ListScriptsRequest {
	s.ScriptType = &v
	return s
}

type ListScriptsResponseBody struct {
	// 本次请求所返回的最大记录条数。
	//
	// example:
	//
	// 10
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// 返回读取到的数据位置，空代表数据已经读取完毕。
	//
	// example:
	//
	// dd6b1b2a-5837-5237-abe4-ff0c89568982
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string                           `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	Scripts   []*ListScriptsResponseBodyScripts `json:"Scripts,omitempty" xml:"Scripts,omitempty" type:"Repeated"`
	// 本次请求条件下的数据总量。
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListScriptsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListScriptsResponseBody) GoString() string {
	return s.String()
}

func (s *ListScriptsResponseBody) SetMaxResults(v int32) *ListScriptsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListScriptsResponseBody) SetNextToken(v string) *ListScriptsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListScriptsResponseBody) SetRequestId(v string) *ListScriptsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListScriptsResponseBody) SetScripts(v []*ListScriptsResponseBodyScripts) *ListScriptsResponseBody {
	s.Scripts = v
	return s
}

func (s *ListScriptsResponseBody) SetTotalCount(v int32) *ListScriptsResponseBody {
	s.TotalCount = &v
	return s
}

type ListScriptsResponseBodyScripts struct {
	// API名称。
	//
	// example:
	//
	// ListScripts
	Action *string `json:"Action,omitempty" xml:"Action,omitempty"`
	// 结束执行时间。
	//
	// example:
	//
	// 1639715635819
	EndTime *int64 `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// 执行失败策略。
	//
	// example:
	//
	// FAILED_CONTINUE
	ExecutionFailStrategy *string `json:"ExecutionFailStrategy,omitempty" xml:"ExecutionFailStrategy,omitempty"`
	// 执行时机。
	//
	// example:
	//
	// BEFORE_INSTALL
	ExecutionMoment *string `json:"ExecutionMoment,omitempty" xml:"ExecutionMoment,omitempty"`
	ExecutionState  *string `json:"ExecutionState,omitempty" xml:"ExecutionState,omitempty"`
	// 最近一次编辑时间。
	//
	// example:
	//
	// 1639714634819
	LastUpdateTime *int64 `json:"LastUpdateTime,omitempty" xml:"LastUpdateTime,omitempty"`
	// 节点选择器。
	NodeSelector *NodeSelector `json:"NodeSelector,omitempty" xml:"NodeSelector,omitempty"`
	// 区域ID。
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// 集群脚本执行参数。
	//
	// example:
	//
	// --mode=client -h -p
	ScriptArgs *string `json:"ScriptArgs,omitempty" xml:"ScriptArgs,omitempty"`
	// 脚本ID。
	//
	// example:
	//
	// cs-bf25219d103043a0820613e32781****
	ScriptId *string `json:"ScriptId,omitempty" xml:"ScriptId,omitempty"`
	// 集群脚本名称。
	//
	// example:
	//
	// check_env
	ScriptName *string `json:"ScriptName,omitempty" xml:"ScriptName,omitempty"`
	// 集群脚本路径。
	//
	// example:
	//
	// oss://bucket1/check_evn.sh
	ScriptPath *string `json:"ScriptPath,omitempty" xml:"ScriptPath,omitempty"`
	// 开始执行时间。
	//
	// example:
	//
	// 1639714634000
	StartTime *int64 `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
}

func (s ListScriptsResponseBodyScripts) String() string {
	return tea.Prettify(s)
}

func (s ListScriptsResponseBodyScripts) GoString() string {
	return s.String()
}

func (s *ListScriptsResponseBodyScripts) SetAction(v string) *ListScriptsResponseBodyScripts {
	s.Action = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetEndTime(v int64) *ListScriptsResponseBodyScripts {
	s.EndTime = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetExecutionFailStrategy(v string) *ListScriptsResponseBodyScripts {
	s.ExecutionFailStrategy = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetExecutionMoment(v string) *ListScriptsResponseBodyScripts {
	s.ExecutionMoment = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetExecutionState(v string) *ListScriptsResponseBodyScripts {
	s.ExecutionState = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetLastUpdateTime(v int64) *ListScriptsResponseBodyScripts {
	s.LastUpdateTime = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetNodeSelector(v *NodeSelector) *ListScriptsResponseBodyScripts {
	s.NodeSelector = v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetRegionId(v string) *ListScriptsResponseBodyScripts {
	s.RegionId = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetScriptArgs(v string) *ListScriptsResponseBodyScripts {
	s.ScriptArgs = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetScriptId(v string) *ListScriptsResponseBodyScripts {
	s.ScriptId = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetScriptName(v string) *ListScriptsResponseBodyScripts {
	s.ScriptName = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetScriptPath(v string) *ListScriptsResponseBodyScripts {
	s.ScriptPath = &v
	return s
}

func (s *ListScriptsResponseBodyScripts) SetStartTime(v int64) *ListScriptsResponseBodyScripts {
	s.StartTime = &v
	return s
}

type ListScriptsResponse struct {
	Headers    map[string]*string       `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                   `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListScriptsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListScriptsResponse) String() string {
	return tea.Prettify(s)
}

func (s ListScriptsResponse) GoString() string {
	return s.String()
}

func (s *ListScriptsResponse) SetHeaders(v map[string]*string) *ListScriptsResponse {
	s.Headers = v
	return s
}

func (s *ListScriptsResponse) SetStatusCode(v int32) *ListScriptsResponse {
	s.StatusCode = &v
	return s
}

func (s *ListScriptsResponse) SetBody(v *ListScriptsResponseBody) *ListScriptsResponse {
	s.Body = v
	return s
}

type ListTagResourcesRequest struct {
	// The number of maximum number of records to obtain at a time.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// Marks the current position to start reading. If this field is empty, the data is read from the beginning.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the region in which you want to create the instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The list of resource IDs. Number of array elements N Valid values: 1 to 1
	//
	// This parameter is required.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	ResourceIds []*string `json:"ResourceIds,omitempty" xml:"ResourceIds,omitempty" type:"Repeated"`
	// The type of the resource. Set the value to cluster.
	//
	// This parameter is required.
	//
	// example:
	//
	// cluster
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The array of tags. The number of array elements N. Valid values: 1 to 20.
	//
	// example:
	//
	// 20
	Tags []*Tag `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s ListTagResourcesRequest) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesRequest) GoString() string {
	return s.String()
}

func (s *ListTagResourcesRequest) SetMaxResults(v int32) *ListTagResourcesRequest {
	s.MaxResults = &v
	return s
}

func (s *ListTagResourcesRequest) SetNextToken(v string) *ListTagResourcesRequest {
	s.NextToken = &v
	return s
}

func (s *ListTagResourcesRequest) SetRegionId(v string) *ListTagResourcesRequest {
	s.RegionId = &v
	return s
}

func (s *ListTagResourcesRequest) SetResourceIds(v []*string) *ListTagResourcesRequest {
	s.ResourceIds = v
	return s
}

func (s *ListTagResourcesRequest) SetResourceType(v string) *ListTagResourcesRequest {
	s.ResourceType = &v
	return s
}

func (s *ListTagResourcesRequest) SetTags(v []*Tag) *ListTagResourcesRequest {
	s.Tags = v
	return s
}

type ListTagResourcesResponseBody struct {
	// The maximum number of entries returned.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// Returns the location of the data that was read. Empty indicates that the data has been read.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C89568980
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// 372D4E9B-2509-5EFA-846B-B34FBF143F56
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The details about the tag. Contains the resource ID, resource type, and tag key-value information.
	TagResources []*ListTagResourcesResponseBodyTagResources `json:"TagResources,omitempty" xml:"TagResources,omitempty" type:"Repeated"`
	// The total number of entries returned.
	//
	// example:
	//
	// 200
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListTagResourcesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesResponseBody) GoString() string {
	return s.String()
}

func (s *ListTagResourcesResponseBody) SetMaxResults(v int32) *ListTagResourcesResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListTagResourcesResponseBody) SetNextToken(v string) *ListTagResourcesResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListTagResourcesResponseBody) SetRequestId(v string) *ListTagResourcesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListTagResourcesResponseBody) SetTagResources(v []*ListTagResourcesResponseBodyTagResources) *ListTagResourcesResponseBody {
	s.TagResources = v
	return s
}

func (s *ListTagResourcesResponseBody) SetTotalCount(v int32) *ListTagResourcesResponseBody {
	s.TotalCount = &v
	return s
}

type ListTagResourcesResponseBodyTagResources struct {
	// Indicates the ID of a resource.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource type.
	//
	// example:
	//
	// cluster
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The tag key of the ENI.
	//
	// example:
	//
	// Department
	TagKey *string `json:"TagKey,omitempty" xml:"TagKey,omitempty"`
	// The tag value of the ENI.
	//
	// example:
	//
	// Dev
	TagValue *string `json:"TagValue,omitempty" xml:"TagValue,omitempty"`
}

func (s ListTagResourcesResponseBodyTagResources) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesResponseBodyTagResources) GoString() string {
	return s.String()
}

func (s *ListTagResourcesResponseBodyTagResources) SetResourceId(v string) *ListTagResourcesResponseBodyTagResources {
	s.ResourceId = &v
	return s
}

func (s *ListTagResourcesResponseBodyTagResources) SetResourceType(v string) *ListTagResourcesResponseBodyTagResources {
	s.ResourceType = &v
	return s
}

func (s *ListTagResourcesResponseBodyTagResources) SetTagKey(v string) *ListTagResourcesResponseBodyTagResources {
	s.TagKey = &v
	return s
}

func (s *ListTagResourcesResponseBodyTagResources) SetTagValue(v string) *ListTagResourcesResponseBodyTagResources {
	s.TagValue = &v
	return s
}

type ListTagResourcesResponse struct {
	Headers    map[string]*string            `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                        `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *ListTagResourcesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s ListTagResourcesResponse) String() string {
	return tea.Prettify(s)
}

func (s ListTagResourcesResponse) GoString() string {
	return s.String()
}

func (s *ListTagResourcesResponse) SetHeaders(v map[string]*string) *ListTagResourcesResponse {
	s.Headers = v
	return s
}

func (s *ListTagResourcesResponse) SetStatusCode(v int32) *ListTagResourcesResponse {
	s.StatusCode = &v
	return s
}

func (s *ListTagResourcesResponse) SetBody(v *ListTagResourcesResponseBody) *ListTagResourcesResponse {
	s.Body = v
	return s
}

type PutAutoScalingPolicyRequest struct {
	// 集群ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// 最大最小值约束。
	Constraints *ScalingConstraints `json:"Constraints,omitempty" xml:"Constraints,omitempty"`
	// 节点组ID。节点组 Id-针对 ACK 集群，此字段为空。
	//
	// This parameter is required.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// 弹性伸缩规则描述列表。
	//
	// <p>
	ScalingRules []*ScalingRule `json:"ScalingRules,omitempty" xml:"ScalingRules,omitempty" type:"Repeated"`
}

func (s PutAutoScalingPolicyRequest) String() string {
	return tea.Prettify(s)
}

func (s PutAutoScalingPolicyRequest) GoString() string {
	return s.String()
}

func (s *PutAutoScalingPolicyRequest) SetClusterId(v string) *PutAutoScalingPolicyRequest {
	s.ClusterId = &v
	return s
}

func (s *PutAutoScalingPolicyRequest) SetConstraints(v *ScalingConstraints) *PutAutoScalingPolicyRequest {
	s.Constraints = v
	return s
}

func (s *PutAutoScalingPolicyRequest) SetNodeGroupId(v string) *PutAutoScalingPolicyRequest {
	s.NodeGroupId = &v
	return s
}

func (s *PutAutoScalingPolicyRequest) SetRegionId(v string) *PutAutoScalingPolicyRequest {
	s.RegionId = &v
	return s
}

func (s *PutAutoScalingPolicyRequest) SetScalingRules(v []*ScalingRule) *PutAutoScalingPolicyRequest {
	s.ScalingRules = v
	return s
}

type PutAutoScalingPolicyResponseBody struct {
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s PutAutoScalingPolicyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s PutAutoScalingPolicyResponseBody) GoString() string {
	return s.String()
}

func (s *PutAutoScalingPolicyResponseBody) SetRequestId(v string) *PutAutoScalingPolicyResponseBody {
	s.RequestId = &v
	return s
}

type PutAutoScalingPolicyResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *PutAutoScalingPolicyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s PutAutoScalingPolicyResponse) String() string {
	return tea.Prettify(s)
}

func (s PutAutoScalingPolicyResponse) GoString() string {
	return s.String()
}

func (s *PutAutoScalingPolicyResponse) SetHeaders(v map[string]*string) *PutAutoScalingPolicyResponse {
	s.Headers = v
	return s
}

func (s *PutAutoScalingPolicyResponse) SetStatusCode(v int32) *PutAutoScalingPolicyResponse {
	s.StatusCode = &v
	return s
}

func (s *PutAutoScalingPolicyResponse) SetBody(v *PutAutoScalingPolicyResponseBody) *PutAutoScalingPolicyResponse {
	s.Body = v
	return s
}

type RemoveAutoScalingPolicyRequest struct {
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-b933c5aac8fe****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The ID of the node group.
	//
	// This parameter is required.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s RemoveAutoScalingPolicyRequest) String() string {
	return tea.Prettify(s)
}

func (s RemoveAutoScalingPolicyRequest) GoString() string {
	return s.String()
}

func (s *RemoveAutoScalingPolicyRequest) SetClusterId(v string) *RemoveAutoScalingPolicyRequest {
	s.ClusterId = &v
	return s
}

func (s *RemoveAutoScalingPolicyRequest) SetNodeGroupId(v string) *RemoveAutoScalingPolicyRequest {
	s.NodeGroupId = &v
	return s
}

func (s *RemoveAutoScalingPolicyRequest) SetRegionId(v string) *RemoveAutoScalingPolicyRequest {
	s.RegionId = &v
	return s
}

type RemoveAutoScalingPolicyResponseBody struct {
	// The request ID.
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s RemoveAutoScalingPolicyResponseBody) String() string {
	return tea.Prettify(s)
}

func (s RemoveAutoScalingPolicyResponseBody) GoString() string {
	return s.String()
}

func (s *RemoveAutoScalingPolicyResponseBody) SetRequestId(v string) *RemoveAutoScalingPolicyResponseBody {
	s.RequestId = &v
	return s
}

type RemoveAutoScalingPolicyResponse struct {
	Headers    map[string]*string                   `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                               `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *RemoveAutoScalingPolicyResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s RemoveAutoScalingPolicyResponse) String() string {
	return tea.Prettify(s)
}

func (s RemoveAutoScalingPolicyResponse) GoString() string {
	return s.String()
}

func (s *RemoveAutoScalingPolicyResponse) SetHeaders(v map[string]*string) *RemoveAutoScalingPolicyResponse {
	s.Headers = v
	return s
}

func (s *RemoveAutoScalingPolicyResponse) SetStatusCode(v int32) *RemoveAutoScalingPolicyResponse {
	s.StatusCode = &v
	return s
}

func (s *RemoveAutoScalingPolicyResponse) SetBody(v *RemoveAutoScalingPolicyResponseBody) *RemoveAutoScalingPolicyResponse {
	s.Body = v
	return s
}

type RunApiTemplateRequest struct {
	// 接口名。
	//
	// This parameter is required.
	//
	// example:
	//
	// CreateCluster
	ApiName *string `json:"ApiName,omitempty" xml:"ApiName,omitempty"`
	// 幂等客户端TOKEN。
	//
	// example:
	//
	// A7D960FA-6DBA-5E07-8746-A63E3E4D****
	ClientToken *string `json:"ClientToken,omitempty" xml:"ClientToken,omitempty"`
	// 地域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// 集群模板id。
	//
	// This parameter is required.
	//
	// example:
	//
	// AT-****
	TemplateId *string `json:"TemplateId,omitempty" xml:"TemplateId,omitempty"`
}

func (s RunApiTemplateRequest) String() string {
	return tea.Prettify(s)
}

func (s RunApiTemplateRequest) GoString() string {
	return s.String()
}

func (s *RunApiTemplateRequest) SetApiName(v string) *RunApiTemplateRequest {
	s.ApiName = &v
	return s
}

func (s *RunApiTemplateRequest) SetClientToken(v string) *RunApiTemplateRequest {
	s.ClientToken = &v
	return s
}

func (s *RunApiTemplateRequest) SetRegionId(v string) *RunApiTemplateRequest {
	s.RegionId = &v
	return s
}

func (s *RunApiTemplateRequest) SetTemplateId(v string) *RunApiTemplateRequest {
	s.TemplateId = &v
	return s
}

type RunApiTemplateResponseBody struct {
	// example:
	//
	// {\\"clusterId\\":\\"c-b7be171f1928****\\",\\"operationId\\":\\"op-61126efe629d****\\"}
	Data *string `json:"Data,omitempty" xml:"Data,omitempty"`
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s RunApiTemplateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s RunApiTemplateResponseBody) GoString() string {
	return s.String()
}

func (s *RunApiTemplateResponseBody) SetData(v string) *RunApiTemplateResponseBody {
	s.Data = &v
	return s
}

func (s *RunApiTemplateResponseBody) SetRequestId(v string) *RunApiTemplateResponseBody {
	s.RequestId = &v
	return s
}

type RunApiTemplateResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *RunApiTemplateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s RunApiTemplateResponse) String() string {
	return tea.Prettify(s)
}

func (s RunApiTemplateResponse) GoString() string {
	return s.String()
}

func (s *RunApiTemplateResponse) SetHeaders(v map[string]*string) *RunApiTemplateResponse {
	s.Headers = v
	return s
}

func (s *RunApiTemplateResponse) SetStatusCode(v int32) *RunApiTemplateResponse {
	s.StatusCode = &v
	return s
}

func (s *RunApiTemplateResponse) SetBody(v *RunApiTemplateResponseBody) *RunApiTemplateResponse {
	s.Body = v
	return s
}

type RunApplicationActionRequest struct {
	// The name of the action. Valid values:
	//
	// 	- start
	//
	// 	- stop
	//
	// 	- config
	//
	// 	- restart
	//
	// 	- refresh_queues
	//
	// 	- refresh_labels
	//
	// This parameter is required.
	//
	// example:
	//
	// start
	ActionName *string `json:"ActionName,omitempty" xml:"ActionName,omitempty"`
	// The number of applications in each batch.
	//
	// example:
	//
	// 1
	BatchSize *int32 `json:"BatchSize,omitempty" xml:"BatchSize,omitempty"`
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// C-C95F0A39D8FF****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The operation object.
	//
	// This parameter is required.
	ComponentInstanceSelector *ComponentInstanceSelector `json:"ComponentInstanceSelector,omitempty" xml:"ComponentInstanceSelector,omitempty"`
	// The description of the execution.
	//
	// example:
	//
	// 运行描述
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The execution policy. Valid values:
	//
	// 	- FAILED_BLOCK: The system stops the execution if the execution fails.
	//
	// 	- FAILED_CONTINUE: The system continues the execution if the execution fails.
	//
	// example:
	//
	// FAILED_CONTINUE
	ExecuteStrategy *string `json:"ExecuteStrategy,omitempty" xml:"ExecuteStrategy,omitempty"`
	// The interval for rolling execution. Unit: seconds.
	//
	// example:
	//
	// 10
	Interval *int64 `json:"Interval,omitempty" xml:"Interval,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// Specifies whether to enable rolling execution.
	//
	// example:
	//
	// true
	RollingExecute *bool `json:"RollingExecute,omitempty" xml:"RollingExecute,omitempty"`
}

func (s RunApplicationActionRequest) String() string {
	return tea.Prettify(s)
}

func (s RunApplicationActionRequest) GoString() string {
	return s.String()
}

func (s *RunApplicationActionRequest) SetActionName(v string) *RunApplicationActionRequest {
	s.ActionName = &v
	return s
}

func (s *RunApplicationActionRequest) SetBatchSize(v int32) *RunApplicationActionRequest {
	s.BatchSize = &v
	return s
}

func (s *RunApplicationActionRequest) SetClusterId(v string) *RunApplicationActionRequest {
	s.ClusterId = &v
	return s
}

func (s *RunApplicationActionRequest) SetComponentInstanceSelector(v *ComponentInstanceSelector) *RunApplicationActionRequest {
	s.ComponentInstanceSelector = v
	return s
}

func (s *RunApplicationActionRequest) SetDescription(v string) *RunApplicationActionRequest {
	s.Description = &v
	return s
}

func (s *RunApplicationActionRequest) SetExecuteStrategy(v string) *RunApplicationActionRequest {
	s.ExecuteStrategy = &v
	return s
}

func (s *RunApplicationActionRequest) SetInterval(v int64) *RunApplicationActionRequest {
	s.Interval = &v
	return s
}

func (s *RunApplicationActionRequest) SetRegionId(v string) *RunApplicationActionRequest {
	s.RegionId = &v
	return s
}

func (s *RunApplicationActionRequest) SetRollingExecute(v bool) *RunApplicationActionRequest {
	s.RollingExecute = &v
	return s
}

type RunApplicationActionResponseBody struct {
	// The abnormal nodes.
	AbnInstances []*RunApplicationActionResponseBodyAbnInstances `json:"AbnInstances,omitempty" xml:"AbnInstances,omitempty" type:"Repeated"`
	// The operation ID.
	//
	// example:
	//
	// op-13c37a77c505****
	OperationId *string `json:"OperationId,omitempty" xml:"OperationId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 9E3A7161-EB7B-172B-8D18-FFB06BA3****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s RunApplicationActionResponseBody) String() string {
	return tea.Prettify(s)
}

func (s RunApplicationActionResponseBody) GoString() string {
	return s.String()
}

func (s *RunApplicationActionResponseBody) SetAbnInstances(v []*RunApplicationActionResponseBodyAbnInstances) *RunApplicationActionResponseBody {
	s.AbnInstances = v
	return s
}

func (s *RunApplicationActionResponseBody) SetOperationId(v string) *RunApplicationActionResponseBody {
	s.OperationId = &v
	return s
}

func (s *RunApplicationActionResponseBody) SetRequestId(v string) *RunApplicationActionResponseBody {
	s.RequestId = &v
	return s
}

type RunApplicationActionResponseBodyAbnInstances struct {
	// example:
	//
	// i-bp1cudc25w2bfwl5****
	NodeId *string `json:"NodeId,omitempty" xml:"NodeId,omitempty"`
	// example:
	//
	// core1-1
	NodeName *string `json:"NodeName,omitempty" xml:"NodeName,omitempty"`
}

func (s RunApplicationActionResponseBodyAbnInstances) String() string {
	return tea.Prettify(s)
}

func (s RunApplicationActionResponseBodyAbnInstances) GoString() string {
	return s.String()
}

func (s *RunApplicationActionResponseBodyAbnInstances) SetNodeId(v string) *RunApplicationActionResponseBodyAbnInstances {
	s.NodeId = &v
	return s
}

func (s *RunApplicationActionResponseBodyAbnInstances) SetNodeName(v string) *RunApplicationActionResponseBodyAbnInstances {
	s.NodeName = &v
	return s
}

type RunApplicationActionResponse struct {
	Headers    map[string]*string                `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                            `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *RunApplicationActionResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s RunApplicationActionResponse) String() string {
	return tea.Prettify(s)
}

func (s RunApplicationActionResponse) GoString() string {
	return s.String()
}

func (s *RunApplicationActionResponse) SetHeaders(v map[string]*string) *RunApplicationActionResponse {
	s.Headers = v
	return s
}

func (s *RunApplicationActionResponse) SetStatusCode(v int32) *RunApplicationActionResponse {
	s.StatusCode = &v
	return s
}

func (s *RunApplicationActionResponse) SetBody(v *RunApplicationActionResponseBody) *RunApplicationActionResponse {
	s.Body = v
	return s
}

type TagResourcesRequest struct {
	// The ID of the region in which you want to create the instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The list of resource IDs. Valid values of N: 1 to 1.
	//
	// This parameter is required.
	//
	// example:
	//
	// cluster
	ResourceIds []*string `json:"ResourceIds,omitempty" xml:"ResourceIds,omitempty" type:"Repeated"`
	// The type of the resource to which the tag belongs. Valid values:
	//
	// 	- cluster: cluster
	//
	// This parameter is required.
	//
	// example:
	//
	// cluster
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The list of tags to be bound.
	//
	// This parameter is required.
	//
	// example:
	//
	// [null]
	Tags []*Tag `json:"Tags,omitempty" xml:"Tags,omitempty" type:"Repeated"`
}

func (s TagResourcesRequest) String() string {
	return tea.Prettify(s)
}

func (s TagResourcesRequest) GoString() string {
	return s.String()
}

func (s *TagResourcesRequest) SetRegionId(v string) *TagResourcesRequest {
	s.RegionId = &v
	return s
}

func (s *TagResourcesRequest) SetResourceIds(v []*string) *TagResourcesRequest {
	s.ResourceIds = v
	return s
}

func (s *TagResourcesRequest) SetResourceType(v string) *TagResourcesRequest {
	s.ResourceType = &v
	return s
}

func (s *TagResourcesRequest) SetTags(v []*Tag) *TagResourcesRequest {
	s.Tags = v
	return s
}

type TagResourcesResponseBody struct {
	// The ID of the request.
	//
	// example:
	//
	// A964BDB2-0FDA-1037-AF3F-2633D5C3F20F
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s TagResourcesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s TagResourcesResponseBody) GoString() string {
	return s.String()
}

func (s *TagResourcesResponseBody) SetRequestId(v string) *TagResourcesResponseBody {
	s.RequestId = &v
	return s
}

type TagResourcesResponse struct {
	Headers    map[string]*string        `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                    `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *TagResourcesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s TagResourcesResponse) String() string {
	return tea.Prettify(s)
}

func (s TagResourcesResponse) GoString() string {
	return s.String()
}

func (s *TagResourcesResponse) SetHeaders(v map[string]*string) *TagResourcesResponse {
	s.Headers = v
	return s
}

func (s *TagResourcesResponse) SetStatusCode(v int32) *TagResourcesResponse {
	s.StatusCode = &v
	return s
}

func (s *TagResourcesResponse) SetBody(v *TagResourcesResponseBody) *TagResourcesResponse {
	s.Body = v
	return s
}

type UntagResourcesRequest struct {
	// Specifies whether to remove all tags. This parameter is valid only when the **Tagkeys*	- is empty. Valid values:
	//
	// 	- true: All the data is deleted.
	//
	// 	- false: Not all of them are deleted.
	//
	// Default value: false
	//
	// example:
	//
	// false
	All *bool `json:"All,omitempty" xml:"All,omitempty"`
	// The ID of the region in which you want to create the instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The list of resource IDs.
	//
	// This parameter is required.
	//
	// example:
	//
	// cluster
	ResourceIds []*string `json:"ResourceIds,omitempty" xml:"ResourceIds,omitempty" type:"Repeated"`
	// The type of the resource. Set the value to cluster.
	//
	// This parameter is required.
	//
	// example:
	//
	// cluster
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The key of the label. Valid values of N: 1 to 20.
	//
	// example:
	//
	// ["c-b933c5aac8fe****"]
	TagKeys []*string `json:"TagKeys,omitempty" xml:"TagKeys,omitempty" type:"Repeated"`
}

func (s UntagResourcesRequest) String() string {
	return tea.Prettify(s)
}

func (s UntagResourcesRequest) GoString() string {
	return s.String()
}

func (s *UntagResourcesRequest) SetAll(v bool) *UntagResourcesRequest {
	s.All = &v
	return s
}

func (s *UntagResourcesRequest) SetRegionId(v string) *UntagResourcesRequest {
	s.RegionId = &v
	return s
}

func (s *UntagResourcesRequest) SetResourceIds(v []*string) *UntagResourcesRequest {
	s.ResourceIds = v
	return s
}

func (s *UntagResourcesRequest) SetResourceType(v string) *UntagResourcesRequest {
	s.ResourceType = &v
	return s
}

func (s *UntagResourcesRequest) SetTagKeys(v []*string) *UntagResourcesRequest {
	s.TagKeys = v
	return s
}

type UntagResourcesResponseBody struct {
	// The ID of the request.
	//
	// example:
	//
	// 17A6A3D5-4B13-1DAD-9A23-66EA5FC83B50
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UntagResourcesResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UntagResourcesResponseBody) GoString() string {
	return s.String()
}

func (s *UntagResourcesResponseBody) SetRequestId(v string) *UntagResourcesResponseBody {
	s.RequestId = &v
	return s
}

type UntagResourcesResponse struct {
	Headers    map[string]*string          `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                      `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UntagResourcesResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UntagResourcesResponse) String() string {
	return tea.Prettify(s)
}

func (s UntagResourcesResponse) GoString() string {
	return s.String()
}

func (s *UntagResourcesResponse) SetHeaders(v map[string]*string) *UntagResourcesResponse {
	s.Headers = v
	return s
}

func (s *UntagResourcesResponse) SetStatusCode(v int32) *UntagResourcesResponse {
	s.StatusCode = &v
	return s
}

func (s *UntagResourcesResponse) SetBody(v *UntagResourcesResponseBody) *UntagResourcesResponse {
	s.Body = v
	return s
}

type UpdateApiTemplateRequest struct {
	// 接口名。
	//
	// This parameter is required.
	//
	// example:
	//
	// CreateCluster
	ApiName *string `json:"ApiName,omitempty" xml:"ApiName,omitempty"`
	// 接口request内容。
	//
	// This parameter is required.
	//
	// example:
	//
	// CreateCluster
	Content *string `json:"Content,omitempty" xml:"Content,omitempty"`
	// 区域ID。
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// 资源组ID。
	//
	// example:
	//
	// rg-acfmzabjyop****
	ResourceGroupId *string `json:"ResourceGroupId,omitempty" xml:"ResourceGroupId,omitempty"`
	// 集群模板id。
	//
	// This parameter is required.
	//
	// example:
	//
	// AT-****
	TemplateId *string `json:"TemplateId,omitempty" xml:"TemplateId,omitempty"`
	// 集群模板名字。
	//
	// This parameter is required.
	//
	// example:
	//
	// DATALAKE模板
	TemplateName *string `json:"TemplateName,omitempty" xml:"TemplateName,omitempty"`
}

func (s UpdateApiTemplateRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateApiTemplateRequest) GoString() string {
	return s.String()
}

func (s *UpdateApiTemplateRequest) SetApiName(v string) *UpdateApiTemplateRequest {
	s.ApiName = &v
	return s
}

func (s *UpdateApiTemplateRequest) SetContent(v string) *UpdateApiTemplateRequest {
	s.Content = &v
	return s
}

func (s *UpdateApiTemplateRequest) SetRegionId(v string) *UpdateApiTemplateRequest {
	s.RegionId = &v
	return s
}

func (s *UpdateApiTemplateRequest) SetResourceGroupId(v string) *UpdateApiTemplateRequest {
	s.ResourceGroupId = &v
	return s
}

func (s *UpdateApiTemplateRequest) SetTemplateId(v string) *UpdateApiTemplateRequest {
	s.TemplateId = &v
	return s
}

func (s *UpdateApiTemplateRequest) SetTemplateName(v string) *UpdateApiTemplateRequest {
	s.TemplateName = &v
	return s
}

type UpdateApiTemplateResponseBody struct {
	// 请求ID。
	//
	// example:
	//
	// DD6B1B2A-5837-5237-ABE4-FF0C8944****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Deprecated
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s UpdateApiTemplateResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateApiTemplateResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateApiTemplateResponseBody) SetRequestId(v string) *UpdateApiTemplateResponseBody {
	s.RequestId = &v
	return s
}

func (s *UpdateApiTemplateResponseBody) SetSuccess(v bool) *UpdateApiTemplateResponseBody {
	s.Success = &v
	return s
}

type UpdateApiTemplateResponse struct {
	Headers    map[string]*string             `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                         `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateApiTemplateResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateApiTemplateResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateApiTemplateResponse) GoString() string {
	return s.String()
}

func (s *UpdateApiTemplateResponse) SetHeaders(v map[string]*string) *UpdateApiTemplateResponse {
	s.Headers = v
	return s
}

func (s *UpdateApiTemplateResponse) SetStatusCode(v int32) *UpdateApiTemplateResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateApiTemplateResponse) SetBody(v *UpdateApiTemplateResponseBody) *UpdateApiTemplateResponse {
	s.Body = v
	return s
}

type UpdateApplicationConfigsRequest struct {
	// The application configurations.
	//
	// This parameter is required.
	//
	// example:
	//
	// CLUSTER
	ApplicationConfigs []*UpdateApplicationConfig `json:"ApplicationConfigs,omitempty" xml:"ApplicationConfigs,omitempty" type:"Repeated"`
	// The application name.
	//
	// This parameter is required.
	//
	// example:
	//
	// HDFS
	ApplicationName *string `json:"ApplicationName,omitempty" xml:"ApplicationName,omitempty"`
	// The cluster ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// c-e6a9d46e9267****
	ClusterId *string `json:"ClusterId,omitempty" xml:"ClusterId,omitempty"`
	// The operation performed on configuration items. Valid values:
	//
	// 	- ADD
	//
	// 	- UPDATE
	//
	// 	- DELETE
	//
	// example:
	//
	// ADD
	ConfigAction *string `json:"ConfigAction,omitempty" xml:"ConfigAction,omitempty"`
	// The operation scope. Valid values:
	//
	// 	- CLUSTER
	//
	// 	- NODE_GROUP
	//
	// example:
	//
	// CLUSTER
	ConfigScope *string `json:"ConfigScope,omitempty" xml:"ConfigScope,omitempty"`
	// The description.
	//
	// example:
	//
	// 更新YARN内存配置。
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The node group ID.
	//
	// example:
	//
	// ng-869471354ecd****
	NodeGroupId *string `json:"NodeGroupId,omitempty" xml:"NodeGroupId,omitempty"`
	// The node ID.
	//
	// example:
	//
	// i-bp1cudc25w2bfwl5****
	NodeId *string `json:"NodeId,omitempty" xml:"NodeId,omitempty"`
	// The region ID.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
}

func (s UpdateApplicationConfigsRequest) String() string {
	return tea.Prettify(s)
}

func (s UpdateApplicationConfigsRequest) GoString() string {
	return s.String()
}

func (s *UpdateApplicationConfigsRequest) SetApplicationConfigs(v []*UpdateApplicationConfig) *UpdateApplicationConfigsRequest {
	s.ApplicationConfigs = v
	return s
}

func (s *UpdateApplicationConfigsRequest) SetApplicationName(v string) *UpdateApplicationConfigsRequest {
	s.ApplicationName = &v
	return s
}

func (s *UpdateApplicationConfigsRequest) SetClusterId(v string) *UpdateApplicationConfigsRequest {
	s.ClusterId = &v
	return s
}

func (s *UpdateApplicationConfigsRequest) SetConfigAction(v string) *UpdateApplicationConfigsRequest {
	s.ConfigAction = &v
	return s
}

func (s *UpdateApplicationConfigsRequest) SetConfigScope(v string) *UpdateApplicationConfigsRequest {
	s.ConfigScope = &v
	return s
}

func (s *UpdateApplicationConfigsRequest) SetDescription(v string) *UpdateApplicationConfigsRequest {
	s.Description = &v
	return s
}

func (s *UpdateApplicationConfigsRequest) SetNodeGroupId(v string) *UpdateApplicationConfigsRequest {
	s.NodeGroupId = &v
	return s
}

func (s *UpdateApplicationConfigsRequest) SetNodeId(v string) *UpdateApplicationConfigsRequest {
	s.NodeId = &v
	return s
}

func (s *UpdateApplicationConfigsRequest) SetRegionId(v string) *UpdateApplicationConfigsRequest {
	s.RegionId = &v
	return s
}

type UpdateApplicationConfigsResponseBody struct {
	// The operation ID.
	//
	// example:
	//
	// op-13c37a77c505****
	OperationId *string `json:"OperationId,omitempty" xml:"OperationId,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 9E3A7161-EB7B-172B-8D18-FFB06BA3****
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
}

func (s UpdateApplicationConfigsResponseBody) String() string {
	return tea.Prettify(s)
}

func (s UpdateApplicationConfigsResponseBody) GoString() string {
	return s.String()
}

func (s *UpdateApplicationConfigsResponseBody) SetOperationId(v string) *UpdateApplicationConfigsResponseBody {
	s.OperationId = &v
	return s
}

func (s *UpdateApplicationConfigsResponseBody) SetRequestId(v string) *UpdateApplicationConfigsResponseBody {
	s.RequestId = &v
	return s
}

type UpdateApplicationConfigsResponse struct {
	Headers    map[string]*string                    `json:"headers,omitempty" xml:"headers,omitempty"`
	StatusCode *int32                                `json:"statusCode,omitempty" xml:"statusCode,omitempty"`
	Body       *UpdateApplicationConfigsResponseBody `json:"body,omitempty" xml:"body,omitempty"`
}

func (s UpdateApplicationConfigsResponse) String() string {
	return tea.Prettify(s)
}

func (s UpdateApplicationConfigsResponse) GoString() string {
	return s.String()
}

func (s *UpdateApplicationConfigsResponse) SetHeaders(v map[string]*string) *UpdateApplicationConfigsResponse {
	s.Headers = v
	return s
}

func (s *UpdateApplicationConfigsResponse) SetStatusCode(v int32) *UpdateApplicationConfigsResponse {
	s.StatusCode = &v
	return s
}

func (s *UpdateApplicationConfigsResponse) SetBody(v *UpdateApplicationConfigsResponseBody) *UpdateApplicationConfigsResponse {
	s.Body = v
	return s
}

type Client struct {
	openapi.Client
}

func NewClient(config *openapi.Config) (*Client, error) {
	client := new(Client)
	err := client.Init(config)
	return client, err
}

func (client *Client) Init(config *openapi.Config) (_err error) {
	_err = client.Client.Init(config)
	if _err != nil {
		return _err
	}
	client.EndpointRule = tea.String("regional")
	client.EndpointMap = map[string]*string{
		"cn-beijing":                  tea.String("emr.aliyuncs.com"),
		"cn-hangzhou":                 tea.String("emr.aliyuncs.com"),
		"cn-shanghai":                 tea.String("emr.aliyuncs.com"),
		"cn-shenzhen":                 tea.String("emr.aliyuncs.com"),
		"ap-southeast-1":              tea.String("emr.aliyuncs.com"),
		"us-west-1":                   tea.String("emr.aliyuncs.com"),
		"cn-shanghai-finance-1":       tea.String("emr.aliyuncs.com"),
		"cn-shenzhen-finance-1":       tea.String("emr.aliyuncs.com"),
		"cn-north-2-gov-1":            tea.String("emr.aliyuncs.com"),
		"ap-northeast-2-pop":          tea.String("emr.aliyuncs.com"),
		"cn-beijing-finance-1":        tea.String("emr.aliyuncs.com"),
		"cn-beijing-finance-pop":      tea.String("emr.aliyuncs.com"),
		"cn-beijing-gov-1":            tea.String("emr.aliyuncs.com"),
		"cn-beijing-nu16-b01":         tea.String("emr.aliyuncs.com"),
		"cn-edge-1":                   tea.String("emr.aliyuncs.com"),
		"cn-fujian":                   tea.String("emr.aliyuncs.com"),
		"cn-haidian-cm12-c01":         tea.String("emr.aliyuncs.com"),
		"cn-hangzhou-bj-b01":          tea.String("emr.aliyuncs.com"),
		"cn-hangzhou-finance":         tea.String("emr.aliyuncs.com"),
		"cn-hangzhou-internal-prod-1": tea.String("emr.aliyuncs.com"),
		"cn-hangzhou-internal-test-1": tea.String("emr.aliyuncs.com"),
		"cn-hangzhou-internal-test-2": tea.String("emr.aliyuncs.com"),
		"cn-hangzhou-internal-test-3": tea.String("emr.aliyuncs.com"),
		"cn-hangzhou-test-306":        tea.String("emr.aliyuncs.com"),
		"cn-hongkong-finance-pop":     tea.String("emr.aliyuncs.com"),
		"cn-huhehaote-nebula-1":       tea.String("emr.aliyuncs.com"),
		"cn-qingdao-nebula":           tea.String("emr.aliyuncs.com"),
		"cn-shanghai-et15-b01":        tea.String("emr.aliyuncs.com"),
		"cn-shanghai-et2-b01":         tea.String("emr.aliyuncs.com"),
		"cn-shanghai-inner":           tea.String("emr.aliyuncs.com"),
		"cn-shanghai-internal-test-1": tea.String("emr.aliyuncs.com"),
		"cn-shenzhen-inner":           tea.String("emr.aliyuncs.com"),
		"cn-shenzhen-st4-d01":         tea.String("emr.aliyuncs.com"),
		"cn-shenzhen-su18-b01":        tea.String("emr.aliyuncs.com"),
		"cn-wuhan":                    tea.String("emr.aliyuncs.com"),
		"cn-yushanfang":               tea.String("emr.aliyuncs.com"),
		"cn-zhangbei":                 tea.String("emr.aliyuncs.com"),
		"cn-zhangbei-na61-b01":        tea.String("emr.aliyuncs.com"),
		"cn-zhangjiakou-na62-a01":     tea.String("emr.aliyuncs.com"),
		"cn-zhengzhou-nebula-1":       tea.String("emr.aliyuncs.com"),
		"eu-west-1-oxs":               tea.String("emr.aliyuncs.com"),
		"rus-west-1-pop":              tea.String("emr.aliyuncs.com"),
	}
	_err = client.CheckConfig(config)
	if _err != nil {
		return _err
	}
	client.Endpoint, _err = client.GetEndpoint(tea.String("emr"), client.RegionId, client.EndpointRule, client.Network, client.Suffix, client.EndpointMap, client.Endpoint)
	if _err != nil {
		return _err
	}

	return nil
}

func (client *Client) GetEndpoint(productId *string, regionId *string, endpointRule *string, network *string, suffix *string, endpointMap map[string]*string, endpoint *string) (_result *string, _err error) {
	if !tea.BoolValue(util.Empty(endpoint)) {
		_result = endpoint
		return _result, _err
	}

	if !tea.BoolValue(util.IsUnset(endpointMap)) && !tea.BoolValue(util.Empty(endpointMap[tea.StringValue(regionId)])) {
		_result = endpointMap[tea.StringValue(regionId)]
		return _result, _err
	}

	_body, _err := endpointutil.GetEndpointRules(productId, regionId, endpointRule, network, suffix)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// @param request - CreateApiTemplateRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateApiTemplateResponse
func (client *Client) CreateApiTemplateWithOptions(request *CreateApiTemplateRequest, runtime *util.RuntimeOptions) (_result *CreateApiTemplateResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApiName)) {
		query["ApiName"] = request.ApiName
	}

	if !tea.BoolValue(util.IsUnset(request.Content)) {
		query["Content"] = request.Content
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupId)) {
		query["ResourceGroupId"] = request.ResourceGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateName)) {
		query["TemplateName"] = request.TemplateName
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateApiTemplate"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &CreateApiTemplateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// @param request - CreateApiTemplateRequest
//
// @return CreateApiTemplateResponse
func (client *Client) CreateApiTemplate(request *CreateApiTemplateRequest) (_result *CreateApiTemplateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateApiTemplateResponse{}
	_body, _err := client.CreateApiTemplateWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a pay-as-you-go or subscription cluster.
//
// @param request - CreateClusterRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateClusterResponse
func (client *Client) CreateClusterWithOptions(request *CreateClusterRequest, runtime *util.RuntimeOptions) (_result *CreateClusterResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplicationConfigs)) {
		query["ApplicationConfigs"] = request.ApplicationConfigs
	}

	if !tea.BoolValue(util.IsUnset(request.Applications)) {
		query["Applications"] = request.Applications
	}

	if !tea.BoolValue(util.IsUnset(request.BootstrapScripts)) {
		query["BootstrapScripts"] = request.BootstrapScripts
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		query["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterName)) {
		query["ClusterName"] = request.ClusterName
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterType)) {
		query["ClusterType"] = request.ClusterType
	}

	if !tea.BoolValue(util.IsUnset(request.DeployMode)) {
		query["DeployMode"] = request.DeployMode
	}

	if !tea.BoolValue(util.IsUnset(request.NodeAttributes)) {
		query["NodeAttributes"] = request.NodeAttributes
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroups)) {
		query["NodeGroups"] = request.NodeGroups
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentType)) {
		query["PaymentType"] = request.PaymentType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ReleaseVersion)) {
		query["ReleaseVersion"] = request.ReleaseVersion
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupId)) {
		query["ResourceGroupId"] = request.ResourceGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.SecurityMode)) {
		query["SecurityMode"] = request.SecurityMode
	}

	if !tea.BoolValue(util.IsUnset(request.SubscriptionConfig)) {
		query["SubscriptionConfig"] = request.SubscriptionConfig
	}

	if !tea.BoolValue(util.IsUnset(request.Tags)) {
		query["Tags"] = request.Tags
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateCluster"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &CreateClusterResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Creates a pay-as-you-go or subscription cluster.
//
// @param request - CreateClusterRequest
//
// @return CreateClusterResponse
func (client *Client) CreateCluster(request *CreateClusterRequest) (_result *CreateClusterResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateClusterResponse{}
	_body, _err := client.CreateClusterWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Creates a node group.
//
// Description:
//
// 创建节点组。
//
// @param request - CreateNodeGroupRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return CreateNodeGroupResponse
func (client *Client) CreateNodeGroupWithOptions(request *CreateNodeGroupRequest, runtime *util.RuntimeOptions) (_result *CreateNodeGroupResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroup)) {
		query["NodeGroup"] = request.NodeGroup
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("CreateNodeGroup"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &CreateNodeGroupResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Creates a node group.
//
// Description:
//
// 创建节点组。
//
// @param request - CreateNodeGroupRequest
//
// @return CreateNodeGroupResponse
func (client *Client) CreateNodeGroup(request *CreateNodeGroupRequest) (_result *CreateNodeGroupResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &CreateNodeGroupResponse{}
	_body, _err := client.CreateNodeGroupWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Perform a scale-out operation on the target node group.
//
// Description:
//
// 缩容节点。
//
// @param request - DecreaseNodesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DecreaseNodesResponse
func (client *Client) DecreaseNodesWithOptions(request *DecreaseNodesRequest, runtime *util.RuntimeOptions) (_result *DecreaseNodesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DecreaseNodeCount)) {
		query["DecreaseNodeCount"] = request.DecreaseNodeCount
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupId)) {
		query["NodeGroupId"] = request.NodeGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.NodeIds)) {
		query["NodeIds"] = request.NodeIds
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DecreaseNodes"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &DecreaseNodesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Perform a scale-out operation on the target node group.
//
// Description:
//
// 缩容节点。
//
// @param request - DecreaseNodesRequest
//
// @return DecreaseNodesResponse
func (client *Client) DecreaseNodes(request *DecreaseNodesRequest) (_result *DecreaseNodesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DecreaseNodesResponse{}
	_body, _err := client.DecreaseNodesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 创建集群模板
//
// @param request - DeleteApiTemplateRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteApiTemplateResponse
func (client *Client) DeleteApiTemplateWithOptions(request *DeleteApiTemplateRequest, runtime *util.RuntimeOptions) (_result *DeleteApiTemplateResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApiName)) {
		query["ApiName"] = request.ApiName
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupId)) {
		query["ResourceGroupId"] = request.ResourceGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateId)) {
		query["TemplateId"] = request.TemplateId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteApiTemplate"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &DeleteApiTemplateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 创建集群模板
//
// @param request - DeleteApiTemplateRequest
//
// @return DeleteApiTemplateResponse
func (client *Client) DeleteApiTemplate(request *DeleteApiTemplateRequest) (_result *DeleteApiTemplateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteApiTemplateResponse{}
	_body, _err := client.DeleteApiTemplateWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// @param request - DeleteClusterRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return DeleteClusterResponse
func (client *Client) DeleteClusterWithOptions(request *DeleteClusterRequest, runtime *util.RuntimeOptions) (_result *DeleteClusterResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("DeleteCluster"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &DeleteClusterResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// @param request - DeleteClusterRequest
//
// @return DeleteClusterResponse
func (client *Client) DeleteCluster(request *DeleteClusterRequest) (_result *DeleteClusterResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &DeleteClusterResponse{}
	_body, _err := client.DeleteClusterWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 获取API模板详情
//
// @param request - GetApiTemplateRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetApiTemplateResponse
func (client *Client) GetApiTemplateWithOptions(request *GetApiTemplateRequest, runtime *util.RuntimeOptions) (_result *GetApiTemplateResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateId)) {
		query["TemplateId"] = request.TemplateId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetApiTemplate"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetApiTemplateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 获取API模板详情
//
// @param request - GetApiTemplateRequest
//
// @return GetApiTemplateResponse
func (client *Client) GetApiTemplate(request *GetApiTemplateRequest) (_result *GetApiTemplateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetApiTemplateResponse{}
	_body, _err := client.GetApiTemplateWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 查询应用详情。
//
// @param request - GetApplicationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetApplicationResponse
func (client *Client) GetApplicationWithOptions(request *GetApplicationRequest, runtime *util.RuntimeOptions) (_result *GetApplicationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplicationName)) {
		query["ApplicationName"] = request.ApplicationName
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetApplication"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetApplicationResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 查询应用详情。
//
// @param request - GetApplicationRequest
//
// @return GetApplicationResponse
func (client *Client) GetApplication(request *GetApplicationRequest) (_result *GetApplicationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetApplicationResponse{}
	_body, _err := client.GetApplicationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 获取弹性伸缩活动详情。
//
// @param request - GetAutoScalingActivityRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAutoScalingActivityResponse
func (client *Client) GetAutoScalingActivityWithOptions(request *GetAutoScalingActivityRequest, runtime *util.RuntimeOptions) (_result *GetAutoScalingActivityResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ScalingActivityId)) {
		query["ScalingActivityId"] = request.ScalingActivityId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAutoScalingActivity"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetAutoScalingActivityResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 获取弹性伸缩活动详情。
//
// @param request - GetAutoScalingActivityRequest
//
// @return GetAutoScalingActivityResponse
func (client *Client) GetAutoScalingActivity(request *GetAutoScalingActivityRequest) (_result *GetAutoScalingActivityResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAutoScalingActivityResponse{}
	_body, _err := client.GetAutoScalingActivityWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// @param request - GetAutoScalingPolicyRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetAutoScalingPolicyResponse
func (client *Client) GetAutoScalingPolicyWithOptions(request *GetAutoScalingPolicyRequest, runtime *util.RuntimeOptions) (_result *GetAutoScalingPolicyResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupId)) {
		query["NodeGroupId"] = request.NodeGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetAutoScalingPolicy"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetAutoScalingPolicyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// @param request - GetAutoScalingPolicyRequest
//
// @return GetAutoScalingPolicyResponse
func (client *Client) GetAutoScalingPolicy(request *GetAutoScalingPolicyRequest) (_result *GetAutoScalingPolicyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetAutoScalingPolicyResponse{}
	_body, _err := client.GetAutoScalingPolicyWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the details of a cluster.
//
// @param request - GetClusterRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetClusterResponse
func (client *Client) GetClusterWithOptions(request *GetClusterRequest, runtime *util.RuntimeOptions) (_result *GetClusterResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetCluster"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetClusterResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the details of a cluster.
//
// @param request - GetClusterRequest
//
// @return GetClusterResponse
func (client *Client) GetCluster(request *GetClusterRequest) (_result *GetClusterResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetClusterResponse{}
	_body, _err := client.GetClusterWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains job analysis information on E-MapReduce (EMR) Doctor.
//
// Description:
//
// get one doctor analysis app
//
// @param request - GetDoctorApplicationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorApplicationResponse
func (client *Client) GetDoctorApplicationWithOptions(request *GetDoctorApplicationRequest, runtime *util.RuntimeOptions) (_result *GetDoctorApplicationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AppId)) {
		query["AppId"] = request.AppId
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorApplication"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorApplicationResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains job analysis information on E-MapReduce (EMR) Doctor.
//
// Description:
//
// get one doctor analysis app
//
// @param request - GetDoctorApplicationRequest
//
// @return GetDoctorApplicationResponse
func (client *Client) GetDoctorApplication(request *GetDoctorApplicationRequest) (_result *GetDoctorApplicationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorApplicationResponse{}
	_body, _err := client.GetDoctorApplicationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the information about resource usage in a cluster on E-MapReduce (EMR) Doctor.
//
// Description:
//
// get one specific luster engine queue by <type, name>
//
// @param request - GetDoctorComputeSummaryRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorComputeSummaryResponse
func (client *Client) GetDoctorComputeSummaryWithOptions(request *GetDoctorComputeSummaryRequest, runtime *util.RuntimeOptions) (_result *GetDoctorComputeSummaryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.ComponentInfo)) {
		query["ComponentInfo"] = request.ComponentInfo
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorComputeSummary"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorComputeSummaryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the information about resource usage in a cluster on E-MapReduce (EMR) Doctor.
//
// Description:
//
// get one specific luster engine queue by <type, name>
//
// @param request - GetDoctorComputeSummaryRequest
//
// @return GetDoctorComputeSummaryResponse
func (client *Client) GetDoctorComputeSummary(request *GetDoctorComputeSummaryRequest) (_result *GetDoctorComputeSummaryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorComputeSummaryResponse{}
	_body, _err := client.GetDoctorComputeSummaryWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the metrics of an HBase cluster.
//
// Description:
//
// get Doctor HBaseCluster
//
// @param request - GetDoctorHBaseClusterRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorHBaseClusterResponse
func (client *Client) GetDoctorHBaseClusterWithOptions(request *GetDoctorHBaseClusterRequest, runtime *util.RuntimeOptions) (_result *GetDoctorHBaseClusterResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorHBaseCluster"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorHBaseClusterResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the metrics of an HBase cluster.
//
// Description:
//
// get Doctor HBaseCluster
//
// @param request - GetDoctorHBaseClusterRequest
//
// @return GetDoctorHBaseClusterResponse
func (client *Client) GetDoctorHBaseCluster(request *GetDoctorHBaseClusterRequest) (_result *GetDoctorHBaseClusterResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorHBaseClusterResponse{}
	_body, _err := client.GetDoctorHBaseClusterWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// list Doctor HBaseRegions
//
// @param request - GetDoctorHBaseRegionRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorHBaseRegionResponse
func (client *Client) GetDoctorHBaseRegionWithOptions(request *GetDoctorHBaseRegionRequest, runtime *util.RuntimeOptions) (_result *GetDoctorHBaseRegionResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.HbaseRegionId)) {
		query["HbaseRegionId"] = request.HbaseRegionId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorHBaseRegion"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorHBaseRegionResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// list Doctor HBaseRegions
//
// @param request - GetDoctorHBaseRegionRequest
//
// @return GetDoctorHBaseRegionResponse
func (client *Client) GetDoctorHBaseRegion(request *GetDoctorHBaseRegionRequest) (_result *GetDoctorHBaseRegionResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorHBaseRegionResponse{}
	_body, _err := client.GetDoctorHBaseRegionWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the information about an HBase region server.
//
// Description:
//
// get Doctor HBaseRegionServer
//
// @param request - GetDoctorHBaseRegionServerRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorHBaseRegionServerResponse
func (client *Client) GetDoctorHBaseRegionServerWithOptions(request *GetDoctorHBaseRegionServerRequest, runtime *util.RuntimeOptions) (_result *GetDoctorHBaseRegionServerResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionServerHost)) {
		query["RegionServerHost"] = request.RegionServerHost
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorHBaseRegionServer"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorHBaseRegionServerResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the information about an HBase region server.
//
// Description:
//
// get Doctor HBaseRegionServer
//
// @param request - GetDoctorHBaseRegionServerRequest
//
// @return GetDoctorHBaseRegionServerResponse
func (client *Client) GetDoctorHBaseRegionServer(request *GetDoctorHBaseRegionServerRequest) (_result *GetDoctorHBaseRegionServerResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorHBaseRegionServerResponse{}
	_body, _err := client.GetDoctorHBaseRegionServerWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// get Doctor HBaseTable
//
// @param request - GetDoctorHBaseTableRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorHBaseTableResponse
func (client *Client) GetDoctorHBaseTableWithOptions(request *GetDoctorHBaseTableRequest, runtime *util.RuntimeOptions) (_result *GetDoctorHBaseTableResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.TableName)) {
		query["TableName"] = request.TableName
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorHBaseTable"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorHBaseTableResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// get Doctor HBaseTable
//
// @param request - GetDoctorHBaseTableRequest
//
// @return GetDoctorHBaseTableResponse
func (client *Client) GetDoctorHBaseTable(request *GetDoctorHBaseTableRequest) (_result *GetDoctorHBaseTableResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorHBaseTableResponse{}
	_body, _err := client.GetDoctorHBaseTableWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of the Hadoop Distributed File System (HDFS) storage resources of a cluster on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list Doctor HBaseTableRegions
//
// @param request - GetDoctorHDFSClusterRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorHDFSClusterResponse
func (client *Client) GetDoctorHDFSClusterWithOptions(request *GetDoctorHDFSClusterRequest, runtime *util.RuntimeOptions) (_result *GetDoctorHDFSClusterResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorHDFSCluster"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorHDFSClusterResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of the Hadoop Distributed File System (HDFS) storage resources of a cluster on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list Doctor HBaseTableRegions
//
// @param request - GetDoctorHDFSClusterRequest
//
// @return GetDoctorHDFSClusterResponse
func (client *Client) GetDoctorHDFSCluster(request *GetDoctorHDFSClusterRequest) (_result *GetDoctorHDFSClusterResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorHDFSClusterResponse{}
	_body, _err := client.GetDoctorHDFSClusterWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of a specific Hadoop Distributed File System (HDFS) directory of a cluster. The depth of the directory is not greater than five.
//
// Description:
//
// get Doctor HDFSNode
//
// @param request - GetDoctorHDFSDirectoryRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorHDFSDirectoryResponse
func (client *Client) GetDoctorHDFSDirectoryWithOptions(request *GetDoctorHDFSDirectoryRequest, runtime *util.RuntimeOptions) (_result *GetDoctorHDFSDirectoryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.DirPath)) {
		query["DirPath"] = request.DirPath
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorHDFSDirectory"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorHDFSDirectoryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of a specific Hadoop Distributed File System (HDFS) directory of a cluster. The depth of the directory is not greater than five.
//
// Description:
//
// get Doctor HDFSNode
//
// @param request - GetDoctorHDFSDirectoryRequest
//
// @return GetDoctorHDFSDirectoryResponse
func (client *Client) GetDoctorHDFSDirectory(request *GetDoctorHDFSDirectoryRequest) (_result *GetDoctorHDFSDirectoryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorHDFSDirectoryResponse{}
	_body, _err := client.GetDoctorHDFSDirectoryWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of Hadoop Distributed File System (HDFS) storage resources for a specific owner or group on E-MapReduce (EMR) Doctor.
//
// Description:
//
// get Doctor HDFS UGI
//
// @param request - GetDoctorHDFSUGIRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorHDFSUGIResponse
func (client *Client) GetDoctorHDFSUGIWithOptions(request *GetDoctorHDFSUGIRequest, runtime *util.RuntimeOptions) (_result *GetDoctorHDFSUGIResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.Name)) {
		query["Name"] = request.Name
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.Type)) {
		query["Type"] = request.Type
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorHDFSUGI"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorHDFSUGIResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of Hadoop Distributed File System (HDFS) storage resources for a specific owner or group on E-MapReduce (EMR) Doctor.
//
// Description:
//
// get Doctor HDFS UGI
//
// @param request - GetDoctorHDFSUGIRequest
//
// @return GetDoctorHDFSUGIResponse
func (client *Client) GetDoctorHDFSUGI(request *GetDoctorHDFSUGIRequest) (_result *GetDoctorHDFSUGIResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorHDFSUGIResponse{}
	_body, _err := client.GetDoctorHDFSUGIWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of a Hive cluster.
//
// Description:
//
// list Doctor Hive Cluster
//
// @param request - GetDoctorHiveClusterRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorHiveClusterResponse
func (client *Client) GetDoctorHiveClusterWithOptions(request *GetDoctorHiveClusterRequest, runtime *util.RuntimeOptions) (_result *GetDoctorHiveClusterResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorHiveCluster"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorHiveClusterResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of a Hive cluster.
//
// Description:
//
// list Doctor Hive Cluster
//
// @param request - GetDoctorHiveClusterRequest
//
// @return GetDoctorHiveClusterResponse
func (client *Client) GetDoctorHiveCluster(request *GetDoctorHiveClusterRequest) (_result *GetDoctorHiveClusterResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorHiveClusterResponse{}
	_body, _err := client.GetDoctorHiveClusterWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of a Hive database.
//
// Description:
//
// get Doctor Hive Database
//
// @param request - GetDoctorHiveDatabaseRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorHiveDatabaseResponse
func (client *Client) GetDoctorHiveDatabaseWithOptions(request *GetDoctorHiveDatabaseRequest, runtime *util.RuntimeOptions) (_result *GetDoctorHiveDatabaseResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DatabaseName)) {
		query["DatabaseName"] = request.DatabaseName
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorHiveDatabase"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorHiveDatabaseResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of a Hive database.
//
// Description:
//
// get Doctor Hive Database
//
// @param request - GetDoctorHiveDatabaseRequest
//
// @return GetDoctorHiveDatabaseResponse
func (client *Client) GetDoctorHiveDatabase(request *GetDoctorHiveDatabaseRequest) (_result *GetDoctorHiveDatabaseResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorHiveDatabaseResponse{}
	_body, _err := client.GetDoctorHiveDatabaseWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of a specific Hive table in a cluster on E-MapReduce (EMR) Doctor.
//
// Description:
//
// get Doctor Hive Table
//
// @param request - GetDoctorHiveTableRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorHiveTableResponse
func (client *Client) GetDoctorHiveTableWithOptions(request *GetDoctorHiveTableRequest, runtime *util.RuntimeOptions) (_result *GetDoctorHiveTableResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.TableName)) {
		query["TableName"] = request.TableName
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorHiveTable"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorHiveTableResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of a specific Hive table in a cluster on E-MapReduce (EMR) Doctor.
//
// Description:
//
// get Doctor Hive Table
//
// @param request - GetDoctorHiveTableRequest
//
// @return GetDoctorHiveTableResponse
func (client *Client) GetDoctorHiveTable(request *GetDoctorHiveTableRequest) (_result *GetDoctorHiveTableResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorHiveTableResponse{}
	_body, _err := client.GetDoctorHiveTableWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the basic running information about a job on E-MapReduce (EMR) Doctor.
//
// Description:
//
// Get realtime job by yarn
//
// @param request - GetDoctorJobRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorJobResponse
func (client *Client) GetDoctorJobWithOptions(request *GetDoctorJobRequest, runtime *util.RuntimeOptions) (_result *GetDoctorJobResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AppId)) {
		query["AppId"] = request.AppId
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorJob"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorJobResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the basic running information about a job on E-MapReduce (EMR) Doctor.
//
// Description:
//
// Get realtime job by yarn
//
// @param request - GetDoctorJobRequest
//
// @return GetDoctorJobResponse
func (client *Client) GetDoctorJob(request *GetDoctorJobRequest) (_result *GetDoctorJobResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorJobResponse{}
	_body, _err := client.GetDoctorJobWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// get specify component's report analysis by emr doctor
//
// @param request - GetDoctorReportComponentSummaryRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetDoctorReportComponentSummaryResponse
func (client *Client) GetDoctorReportComponentSummaryWithOptions(request *GetDoctorReportComponentSummaryRequest, runtime *util.RuntimeOptions) (_result *GetDoctorReportComponentSummaryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.ComponentType)) {
		query["ComponentType"] = request.ComponentType
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetDoctorReportComponentSummary"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetDoctorReportComponentSummaryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// get specify component's report analysis by emr doctor
//
// @param request - GetDoctorReportComponentSummaryRequest
//
// @return GetDoctorReportComponentSummaryResponse
func (client *Client) GetDoctorReportComponentSummary(request *GetDoctorReportComponentSummaryRequest) (_result *GetDoctorReportComponentSummaryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetDoctorReportComponentSummaryResponse{}
	_body, _err := client.GetDoctorReportComponentSummaryWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// You can call this operation to obtain the details of a node group.
//
// Description:
//
// 获取节点组详情。
//
// @param request - GetNodeGroupRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetNodeGroupResponse
func (client *Client) GetNodeGroupWithOptions(request *GetNodeGroupRequest, runtime *util.RuntimeOptions) (_result *GetNodeGroupResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupId)) {
		query["NodeGroupId"] = request.NodeGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetNodeGroup"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetNodeGroupResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// You can call this operation to obtain the details of a node group.
//
// Description:
//
// 获取节点组详情。
//
// @param request - GetNodeGroupRequest
//
// @return GetNodeGroupResponse
func (client *Client) GetNodeGroup(request *GetNodeGroupRequest) (_result *GetNodeGroupResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetNodeGroupResponse{}
	_body, _err := client.GetNodeGroupWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Gets the details of an asynchronous operation.
//
// Description:
//
// 获取操作详情。
//
// @param request - GetOperationRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return GetOperationResponse
func (client *Client) GetOperationWithOptions(request *GetOperationRequest, runtime *util.RuntimeOptions) (_result *GetOperationResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.OperationId)) {
		query["OperationId"] = request.OperationId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("GetOperation"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &GetOperationResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Gets the details of an asynchronous operation.
//
// Description:
//
// 获取操作详情。
//
// @param request - GetOperationRequest
//
// @return GetOperationResponse
func (client *Client) GetOperation(request *GetOperationRequest) (_result *GetOperationResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &GetOperationResponse{}
	_body, _err := client.GetOperationWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Scale out the node group.
//
// @param request - IncreaseNodesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return IncreaseNodesResponse
func (client *Client) IncreaseNodesWithOptions(request *IncreaseNodesRequest, runtime *util.RuntimeOptions) (_result *IncreaseNodesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplicationConfigs)) {
		query["ApplicationConfigs"] = request.ApplicationConfigs
	}

	if !tea.BoolValue(util.IsUnset(request.AutoPayOrder)) {
		query["AutoPayOrder"] = request.AutoPayOrder
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.IncreaseNodeCount)) {
		query["IncreaseNodeCount"] = request.IncreaseNodeCount
	}

	if !tea.BoolValue(util.IsUnset(request.MinIncreaseNodeCount)) {
		query["MinIncreaseNodeCount"] = request.MinIncreaseNodeCount
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupId)) {
		query["NodeGroupId"] = request.NodeGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentDuration)) {
		query["PaymentDuration"] = request.PaymentDuration
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentDurationUnit)) {
		query["PaymentDurationUnit"] = request.PaymentDurationUnit
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("IncreaseNodes"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &IncreaseNodesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Scale out the node group.
//
// @param request - IncreaseNodesRequest
//
// @return IncreaseNodesResponse
func (client *Client) IncreaseNodes(request *IncreaseNodesRequest) (_result *IncreaseNodesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &IncreaseNodesResponse{}
	_body, _err := client.IncreaseNodesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Add an EMR resource to the target resource group. A resource can belong to only one resource group.
//
// @param request - JoinResourceGroupRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return JoinResourceGroupResponse
func (client *Client) JoinResourceGroupWithOptions(request *JoinResourceGroupRequest, runtime *util.RuntimeOptions) (_result *JoinResourceGroupResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupId)) {
		query["ResourceGroupId"] = request.ResourceGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceId)) {
		query["ResourceId"] = request.ResourceId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("JoinResourceGroup"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &JoinResourceGroupResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Add an EMR resource to the target resource group. A resource can belong to only one resource group.
//
// @param request - JoinResourceGroupRequest
//
// @return JoinResourceGroupResponse
func (client *Client) JoinResourceGroup(request *JoinResourceGroupRequest) (_result *JoinResourceGroupResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &JoinResourceGroupResponse{}
	_body, _err := client.JoinResourceGroupWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// 查询API模板
//
// @param request - ListApiTemplatesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListApiTemplatesResponse
func (client *Client) ListApiTemplatesWithOptions(request *ListApiTemplatesRequest, runtime *util.RuntimeOptions) (_result *ListApiTemplatesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApiName)) {
		query["ApiName"] = request.ApiName
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupId)) {
		query["ResourceGroupId"] = request.ResourceGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateId)) {
		query["TemplateId"] = request.TemplateId
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateIds)) {
		query["TemplateIds"] = request.TemplateIds
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateName)) {
		query["TemplateName"] = request.TemplateName
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListApiTemplates"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListApiTemplatesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// 查询API模板
//
// @param request - ListApiTemplatesRequest
//
// @return ListApiTemplatesResponse
func (client *Client) ListApiTemplates(request *ListApiTemplatesRequest) (_result *ListApiTemplatesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListApiTemplatesResponse{}
	_body, _err := client.ListApiTemplatesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 查询应用配置。
//
// @param request - ListApplicationConfigsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListApplicationConfigsResponse
func (client *Client) ListApplicationConfigsWithOptions(request *ListApplicationConfigsRequest, runtime *util.RuntimeOptions) (_result *ListApplicationConfigsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplicationName)) {
		query["ApplicationName"] = request.ApplicationName
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigFileName)) {
		query["ConfigFileName"] = request.ConfigFileName
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigItemKey)) {
		query["ConfigItemKey"] = request.ConfigItemKey
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigItemValue)) {
		query["ConfigItemValue"] = request.ConfigItemValue
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupId)) {
		query["NodeGroupId"] = request.NodeGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.NodeId)) {
		query["NodeId"] = request.NodeId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListApplicationConfigs"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListApplicationConfigsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 查询应用配置。
//
// @param request - ListApplicationConfigsRequest
//
// @return ListApplicationConfigsResponse
func (client *Client) ListApplicationConfigs(request *ListApplicationConfigsRequest) (_result *ListApplicationConfigsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListApplicationConfigsResponse{}
	_body, _err := client.ListApplicationConfigsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 查询应用列表。
//
// @param request - ListApplicationsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListApplicationsResponse
func (client *Client) ListApplicationsWithOptions(request *ListApplicationsRequest, runtime *util.RuntimeOptions) (_result *ListApplicationsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplicationNames)) {
		query["ApplicationNames"] = request.ApplicationNames
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListApplications"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListApplicationsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 查询应用列表。
//
// @param request - ListApplicationsRequest
//
// @return ListApplicationsResponse
func (client *Client) ListApplications(request *ListApplicationsRequest) (_result *ListApplicationsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListApplicationsResponse{}
	_body, _err := client.ListApplicationsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 查询弹性伸缩活动列表。
//
// @param request - ListAutoScalingActivitiesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListAutoScalingActivitiesResponse
func (client *Client) ListAutoScalingActivitiesWithOptions(request *ListAutoScalingActivitiesRequest, runtime *util.RuntimeOptions) (_result *ListAutoScalingActivitiesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.EndTime)) {
		query["EndTime"] = request.EndTime
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupId)) {
		query["NodeGroupId"] = request.NodeGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ScalingActivityStates)) {
		query["ScalingActivityStates"] = request.ScalingActivityStates
	}

	if !tea.BoolValue(util.IsUnset(request.ScalingActivityType)) {
		query["ScalingActivityType"] = request.ScalingActivityType
	}

	if !tea.BoolValue(util.IsUnset(request.ScalingRuleName)) {
		query["ScalingRuleName"] = request.ScalingRuleName
	}

	if !tea.BoolValue(util.IsUnset(request.StartTime)) {
		query["StartTime"] = request.StartTime
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListAutoScalingActivities"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListAutoScalingActivitiesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 查询弹性伸缩活动列表。
//
// @param request - ListAutoScalingActivitiesRequest
//
// @return ListAutoScalingActivitiesResponse
func (client *Client) ListAutoScalingActivities(request *ListAutoScalingActivitiesRequest) (_result *ListAutoScalingActivitiesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListAutoScalingActivitiesResponse{}
	_body, _err := client.ListAutoScalingActivitiesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries E-MapReduce (EMR) clusters.
//
// @param request - ListClustersRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListClustersResponse
func (client *Client) ListClustersWithOptions(request *ListClustersRequest, runtime *util.RuntimeOptions) (_result *ListClustersResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterIds)) {
		query["ClusterIds"] = request.ClusterIds
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterName)) {
		query["ClusterName"] = request.ClusterName
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterStates)) {
		query["ClusterStates"] = request.ClusterStates
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterTypes)) {
		query["ClusterTypes"] = request.ClusterTypes
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentTypes)) {
		query["PaymentTypes"] = request.PaymentTypes
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupId)) {
		query["ResourceGroupId"] = request.ResourceGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.Tags)) {
		query["Tags"] = request.Tags
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListClusters"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListClustersResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Queries E-MapReduce (EMR) clusters.
//
// @param request - ListClustersRequest
//
// @return ListClustersResponse
func (client *Client) ListClusters(request *ListClustersRequest) (_result *ListClustersResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListClustersResponse{}
	_body, _err := client.ListClustersWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 查询组件实例列表。
//
// @param request - ListComponentInstancesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListComponentInstancesResponse
func (client *Client) ListComponentInstancesWithOptions(request *ListComponentInstancesRequest, runtime *util.RuntimeOptions) (_result *ListComponentInstancesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplicationNames)) {
		query["ApplicationNames"] = request.ApplicationNames
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.ComponentNames)) {
		query["ComponentNames"] = request.ComponentNames
	}

	if !tea.BoolValue(util.IsUnset(request.ComponentStates)) {
		query["ComponentStates"] = request.ComponentStates
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.NodeIds)) {
		query["NodeIds"] = request.NodeIds
	}

	if !tea.BoolValue(util.IsUnset(request.NodeNames)) {
		query["NodeNames"] = request.NodeNames
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListComponentInstances"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListComponentInstancesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 查询组件实例列表。
//
// @param request - ListComponentInstancesRequest
//
// @return ListComponentInstancesResponse
func (client *Client) ListComponentInstances(request *ListComponentInstancesRequest) (_result *ListComponentInstancesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListComponentInstancesResponse{}
	_body, _err := client.ListComponentInstancesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 查询组件列表。
//
// @param request - ListComponentsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListComponentsResponse
func (client *Client) ListComponentsWithOptions(request *ListComponentsRequest, runtime *util.RuntimeOptions) (_result *ListComponentsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplicationNames)) {
		query["ApplicationNames"] = request.ApplicationNames
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.ComponentNames)) {
		query["ComponentNames"] = request.ComponentNames
	}

	if !tea.BoolValue(util.IsUnset(request.ComponentStates)) {
		query["ComponentStates"] = request.ComponentStates
	}

	if !tea.BoolValue(util.IsUnset(request.IncludeExpiredConfig)) {
		query["IncludeExpiredConfig"] = request.IncludeExpiredConfig
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListComponents"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListComponentsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 查询组件列表。
//
// @param request - ListComponentsRequest
//
// @return ListComponentsResponse
func (client *Client) ListComponents(request *ListComponentsRequest) (_result *ListComponentsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListComponentsResponse{}
	_body, _err := client.ListComponentsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of multiple jobs on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list all doctor analysis apps
//
// @param request - ListDoctorApplicationsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorApplicationsResponse
func (client *Client) ListDoctorApplicationsWithOptions(request *ListDoctorApplicationsRequest, runtime *util.RuntimeOptions) (_result *ListDoctorApplicationsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AppIds)) {
		query["AppIds"] = request.AppIds
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.OrderBy)) {
		query["OrderBy"] = request.OrderBy
	}

	if !tea.BoolValue(util.IsUnset(request.OrderType)) {
		query["OrderType"] = request.OrderType
	}

	if !tea.BoolValue(util.IsUnset(request.Queues)) {
		query["Queues"] = request.Queues
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.Types)) {
		query["Types"] = request.Types
	}

	if !tea.BoolValue(util.IsUnset(request.Users)) {
		query["Users"] = request.Users
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorApplications"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorApplicationsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of multiple jobs on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list all doctor analysis apps
//
// @param request - ListDoctorApplicationsRequest
//
// @return ListDoctorApplicationsResponse
func (client *Client) ListDoctorApplications(request *ListDoctorApplicationsRequest) (_result *ListDoctorApplicationsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorApplicationsResponse{}
	_body, _err := client.ListDoctorApplicationsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the information about resource usage by resource type in a cluster on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list Doctor analysis result of cluster engine queue view
//
// @param request - ListDoctorComputeSummaryRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorComputeSummaryResponse
func (client *Client) ListDoctorComputeSummaryWithOptions(request *ListDoctorComputeSummaryRequest, runtime *util.RuntimeOptions) (_result *ListDoctorComputeSummaryResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.ComponentTypes)) {
		query["ComponentTypes"] = request.ComponentTypes
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.OrderBy)) {
		query["OrderBy"] = request.OrderBy
	}

	if !tea.BoolValue(util.IsUnset(request.OrderType)) {
		query["OrderType"] = request.OrderType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorComputeSummary"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorComputeSummaryResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the information about resource usage by resource type in a cluster on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list Doctor analysis result of cluster engine queue view
//
// @param request - ListDoctorComputeSummaryRequest
//
// @return ListDoctorComputeSummaryResponse
func (client *Client) ListDoctorComputeSummary(request *ListDoctorComputeSummaryRequest) (_result *ListDoctorComputeSummaryResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorComputeSummaryResponse{}
	_body, _err := client.ListDoctorComputeSummaryWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the information about multiple HBase RegionServers at a time.
//
// Description:
//
// list Doctor HBaseRegionServers
//
// @param request - ListDoctorHBaseRegionServersRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorHBaseRegionServersResponse
func (client *Client) ListDoctorHBaseRegionServersWithOptions(request *ListDoctorHBaseRegionServersRequest, runtime *util.RuntimeOptions) (_result *ListDoctorHBaseRegionServersResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.OrderBy)) {
		query["OrderBy"] = request.OrderBy
	}

	if !tea.BoolValue(util.IsUnset(request.OrderType)) {
		query["OrderType"] = request.OrderType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionServerHosts)) {
		query["RegionServerHosts"] = request.RegionServerHosts
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorHBaseRegionServers"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorHBaseRegionServersResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the information about multiple HBase RegionServers at a time.
//
// Description:
//
// list Doctor HBaseRegionServers
//
// @param request - ListDoctorHBaseRegionServersRequest
//
// @return ListDoctorHBaseRegionServersResponse
func (client *Client) ListDoctorHBaseRegionServers(request *ListDoctorHBaseRegionServersRequest) (_result *ListDoctorHBaseRegionServersResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorHBaseRegionServersResponse{}
	_body, _err := client.ListDoctorHBaseRegionServersWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the information about multiple HBase tables at a time.
//
// Description:
//
// list Doctor HBaseTables
//
// @param request - ListDoctorHBaseTablesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorHBaseTablesResponse
func (client *Client) ListDoctorHBaseTablesWithOptions(request *ListDoctorHBaseTablesRequest, runtime *util.RuntimeOptions) (_result *ListDoctorHBaseTablesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.OrderBy)) {
		query["OrderBy"] = request.OrderBy
	}

	if !tea.BoolValue(util.IsUnset(request.OrderType)) {
		query["OrderType"] = request.OrderType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.TableNames)) {
		query["TableNames"] = request.TableNames
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorHBaseTables"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorHBaseTablesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the information about multiple HBase tables at a time.
//
// Description:
//
// list Doctor HBaseTables
//
// @param request - ListDoctorHBaseTablesRequest
//
// @return ListDoctorHBaseTablesResponse
func (client *Client) ListDoctorHBaseTables(request *ListDoctorHBaseTablesRequest) (_result *ListDoctorHBaseTablesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorHBaseTablesResponse{}
	_body, _err := client.ListDoctorHBaseTablesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// list Doctor HDFSNodes
//
// @param request - ListDoctorHDFSDirectoriesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorHDFSDirectoriesResponse
func (client *Client) ListDoctorHDFSDirectoriesWithOptions(request *ListDoctorHDFSDirectoriesRequest, runtime *util.RuntimeOptions) (_result *ListDoctorHDFSDirectoriesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.DirPath)) {
		query["DirPath"] = request.DirPath
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.OrderBy)) {
		query["OrderBy"] = request.OrderBy
	}

	if !tea.BoolValue(util.IsUnset(request.OrderType)) {
		query["OrderType"] = request.OrderType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorHDFSDirectories"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorHDFSDirectoriesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// list Doctor HDFSNodes
//
// @param request - ListDoctorHDFSDirectoriesRequest
//
// @return ListDoctorHDFSDirectoriesResponse
func (client *Client) ListDoctorHDFSDirectories(request *ListDoctorHDFSDirectoriesRequest) (_result *ListDoctorHDFSDirectoriesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorHDFSDirectoriesResponse{}
	_body, _err := client.ListDoctorHDFSDirectoriesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of Hadoop Distributed File System (HDFS) storage resources for multiple owners or groups at a time on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list Doctor HDFS UGIs
//
// @param request - ListDoctorHDFSUGIRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorHDFSUGIResponse
func (client *Client) ListDoctorHDFSUGIWithOptions(request *ListDoctorHDFSUGIRequest, runtime *util.RuntimeOptions) (_result *ListDoctorHDFSUGIResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.OrderBy)) {
		query["OrderBy"] = request.OrderBy
	}

	if !tea.BoolValue(util.IsUnset(request.OrderType)) {
		query["OrderType"] = request.OrderType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.Type)) {
		query["Type"] = request.Type
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorHDFSUGI"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorHDFSUGIResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of Hadoop Distributed File System (HDFS) storage resources for multiple owners or groups at a time on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list Doctor HDFS UGIs
//
// @param request - ListDoctorHDFSUGIRequest
//
// @return ListDoctorHDFSUGIResponse
func (client *Client) ListDoctorHDFSUGI(request *ListDoctorHDFSUGIRequest) (_result *ListDoctorHDFSUGIResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorHDFSUGIResponse{}
	_body, _err := client.ListDoctorHDFSUGIWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of multiple Hive databases at a time.
//
// Description:
//
// list Doctor Hive Databases
//
// @param request - ListDoctorHiveDatabasesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorHiveDatabasesResponse
func (client *Client) ListDoctorHiveDatabasesWithOptions(request *ListDoctorHiveDatabasesRequest, runtime *util.RuntimeOptions) (_result *ListDoctorHiveDatabasesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DatabaseNames)) {
		query["DatabaseNames"] = request.DatabaseNames
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.OrderBy)) {
		query["OrderBy"] = request.OrderBy
	}

	if !tea.BoolValue(util.IsUnset(request.OrderType)) {
		query["OrderType"] = request.OrderType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorHiveDatabases"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorHiveDatabasesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of multiple Hive databases at a time.
//
// Description:
//
// list Doctor Hive Databases
//
// @param request - ListDoctorHiveDatabasesRequest
//
// @return ListDoctorHiveDatabasesResponse
func (client *Client) ListDoctorHiveDatabases(request *ListDoctorHiveDatabasesRequest) (_result *ListDoctorHiveDatabasesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorHiveDatabasesResponse{}
	_body, _err := client.ListDoctorHiveDatabasesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of multiple Hive tables at a time on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list Doctor Hive Tables
//
// @param request - ListDoctorHiveTablesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorHiveTablesResponse
func (client *Client) ListDoctorHiveTablesWithOptions(request *ListDoctorHiveTablesRequest, runtime *util.RuntimeOptions) (_result *ListDoctorHiveTablesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.DateTime)) {
		query["DateTime"] = request.DateTime
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.OrderBy)) {
		query["OrderBy"] = request.OrderBy
	}

	if !tea.BoolValue(util.IsUnset(request.OrderType)) {
		query["OrderType"] = request.OrderType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.TableNames)) {
		query["TableNames"] = request.TableNames
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorHiveTables"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorHiveTablesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the analysis results of multiple Hive tables at a time on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list Doctor Hive Tables
//
// @param request - ListDoctorHiveTablesRequest
//
// @return ListDoctorHiveTablesResponse
func (client *Client) ListDoctorHiveTables(request *ListDoctorHiveTablesRequest) (_result *ListDoctorHiveTablesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorHiveTablesResponse{}
	_body, _err := client.ListDoctorHiveTablesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the basic running information about multiple jobs at a time on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list realtime jobs by yarn
//
// @param request - ListDoctorJobsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorJobsResponse
func (client *Client) ListDoctorJobsWithOptions(request *ListDoctorJobsRequest, runtime *util.RuntimeOptions) (_result *ListDoctorJobsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.AppIds)) {
		query["AppIds"] = request.AppIds
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.EndRange)) {
		query["EndRange"] = request.EndRange
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.OrderBy)) {
		query["OrderBy"] = request.OrderBy
	}

	if !tea.BoolValue(util.IsUnset(request.OrderType)) {
		query["OrderType"] = request.OrderType
	}

	if !tea.BoolValue(util.IsUnset(request.Queues)) {
		query["Queues"] = request.Queues
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.StartRange)) {
		query["StartRange"] = request.StartRange
	}

	if !tea.BoolValue(util.IsUnset(request.Types)) {
		query["Types"] = request.Types
	}

	if !tea.BoolValue(util.IsUnset(request.Users)) {
		query["Users"] = request.Users
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorJobs"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorJobsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the basic running information about multiple jobs at a time on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list realtime jobs by yarn
//
// @param request - ListDoctorJobsRequest
//
// @return ListDoctorJobsResponse
func (client *Client) ListDoctorJobs(request *ListDoctorJobsRequest) (_result *ListDoctorJobsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorJobsResponse{}
	_body, _err := client.ListDoctorJobsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the summary of basic running information about multiple jobs at a time on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list stats groupBy jobs by yarn
//
// @param request - ListDoctorJobsStatsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorJobsStatsResponse
func (client *Client) ListDoctorJobsStatsWithOptions(request *ListDoctorJobsStatsRequest, runtime *util.RuntimeOptions) (_result *ListDoctorJobsStatsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.EndRange)) {
		query["EndRange"] = request.EndRange
	}

	if !tea.BoolValue(util.IsUnset(request.GroupBy)) {
		query["GroupBy"] = request.GroupBy
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.OrderBy)) {
		query["OrderBy"] = request.OrderBy
	}

	if !tea.BoolValue(util.IsUnset(request.OrderType)) {
		query["OrderType"] = request.OrderType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.StartRange)) {
		query["StartRange"] = request.StartRange
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorJobsStats"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorJobsStatsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the summary of basic running information about multiple jobs at a time on E-MapReduce (EMR) Doctor.
//
// Description:
//
// list stats groupBy jobs by yarn
//
// @param request - ListDoctorJobsStatsRequest
//
// @return ListDoctorJobsStatsResponse
func (client *Client) ListDoctorJobsStats(request *ListDoctorJobsStatsRequest) (_result *ListDoctorJobsStatsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorJobsStatsResponse{}
	_body, _err := client.ListDoctorJobsStatsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Obtains the overall analysis result reports of E-MapReduce (EMR) Doctor at a time.
//
// Description:
//
// list all reports analysis by emr doctor
//
// @param request - ListDoctorReportsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListDoctorReportsResponse
func (client *Client) ListDoctorReportsWithOptions(request *ListDoctorReportsRequest, runtime *util.RuntimeOptions) (_result *ListDoctorReportsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListDoctorReports"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListDoctorReportsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Obtains the overall analysis result reports of E-MapReduce (EMR) Doctor at a time.
//
// Description:
//
// list all reports analysis by emr doctor
//
// @param request - ListDoctorReportsRequest
//
// @return ListDoctorReportsResponse
func (client *Client) ListDoctorReports(request *ListDoctorReportsRequest) (_result *ListDoctorReportsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListDoctorReportsResponse{}
	_body, _err := client.ListDoctorReportsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// @param request - ListInstanceTypesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListInstanceTypesResponse
func (client *Client) ListInstanceTypesWithOptions(request *ListInstanceTypesRequest, runtime *util.RuntimeOptions) (_result *ListInstanceTypesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterType)) {
		query["ClusterType"] = request.ClusterType
	}

	if !tea.BoolValue(util.IsUnset(request.DeployMode)) {
		query["DeployMode"] = request.DeployMode
	}

	if !tea.BoolValue(util.IsUnset(request.InstanceType)) {
		query["InstanceType"] = request.InstanceType
	}

	if !tea.BoolValue(util.IsUnset(request.IsModification)) {
		query["IsModification"] = request.IsModification
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupId)) {
		query["NodeGroupId"] = request.NodeGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupType)) {
		query["NodeGroupType"] = request.NodeGroupType
	}

	if !tea.BoolValue(util.IsUnset(request.PaymentType)) {
		query["PaymentType"] = request.PaymentType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ReleaseVersion)) {
		query["ReleaseVersion"] = request.ReleaseVersion
	}

	if !tea.BoolValue(util.IsUnset(request.ZoneId)) {
		query["ZoneId"] = request.ZoneId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListInstanceTypes"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListInstanceTypesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// @param request - ListInstanceTypesRequest
//
// @return ListInstanceTypesResponse
func (client *Client) ListInstanceTypes(request *ListInstanceTypesRequest) (_result *ListInstanceTypesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListInstanceTypesResponse{}
	_body, _err := client.ListInstanceTypesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the list of node groups in an EMR cluster.
//
// @param request - ListNodeGroupsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListNodeGroupsResponse
func (client *Client) ListNodeGroupsWithOptions(request *ListNodeGroupsRequest, runtime *util.RuntimeOptions) (_result *ListNodeGroupsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupIds)) {
		query["NodeGroupIds"] = request.NodeGroupIds
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupNames)) {
		query["NodeGroupNames"] = request.NodeGroupNames
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupStates)) {
		query["NodeGroupStates"] = request.NodeGroupStates
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupTypes)) {
		query["NodeGroupTypes"] = request.NodeGroupTypes
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListNodeGroups"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListNodeGroupsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Queries the list of node groups in an EMR cluster.
//
// @param request - ListNodeGroupsRequest
//
// @return ListNodeGroupsResponse
func (client *Client) ListNodeGroups(request *ListNodeGroupsRequest) (_result *ListNodeGroupsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListNodeGroupsResponse{}
	_body, _err := client.ListNodeGroupsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the node list of an EMR cluster.
//
// @param request - ListNodesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListNodesResponse
func (client *Client) ListNodesWithOptions(request *ListNodesRequest, runtime *util.RuntimeOptions) (_result *ListNodesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupIds)) {
		query["NodeGroupIds"] = request.NodeGroupIds
	}

	if !tea.BoolValue(util.IsUnset(request.NodeIds)) {
		query["NodeIds"] = request.NodeIds
	}

	if !tea.BoolValue(util.IsUnset(request.NodeNames)) {
		query["NodeNames"] = request.NodeNames
	}

	if !tea.BoolValue(util.IsUnset(request.NodeStates)) {
		query["NodeStates"] = request.NodeStates
	}

	if !tea.BoolValue(util.IsUnset(request.PrivateIps)) {
		query["PrivateIps"] = request.PrivateIps
	}

	if !tea.BoolValue(util.IsUnset(request.PublicIps)) {
		query["PublicIps"] = request.PublicIps
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.Tags)) {
		query["Tags"] = request.Tags
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListNodes"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListNodesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Queries the node list of an EMR cluster.
//
// @param request - ListNodesRequest
//
// @return ListNodesResponse
func (client *Client) ListNodes(request *ListNodesRequest) (_result *ListNodesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListNodesResponse{}
	_body, _err := client.ListNodesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the major E-MapReduce (EMR) versions.
//
// Description:
//
// 查询主版本。
//
// @param request - ListReleaseVersionsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListReleaseVersionsResponse
func (client *Client) ListReleaseVersionsWithOptions(request *ListReleaseVersionsRequest, runtime *util.RuntimeOptions) (_result *ListReleaseVersionsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterType)) {
		query["ClusterType"] = request.ClusterType
	}

	if !tea.BoolValue(util.IsUnset(request.IaasType)) {
		query["IaasType"] = request.IaasType
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListReleaseVersions"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListReleaseVersionsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Queries the major E-MapReduce (EMR) versions.
//
// Description:
//
// 查询主版本。
//
// @param request - ListReleaseVersionsRequest
//
// @return ListReleaseVersionsResponse
func (client *Client) ListReleaseVersions(request *ListReleaseVersionsRequest) (_result *ListReleaseVersionsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListReleaseVersionsResponse{}
	_body, _err := client.ListReleaseVersionsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 查询集群脚本。
//
// @param request - ListScriptsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListScriptsResponse
func (client *Client) ListScriptsWithOptions(request *ListScriptsRequest, runtime *util.RuntimeOptions) (_result *ListScriptsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ScriptType)) {
		query["ScriptType"] = request.ScriptType
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListScripts"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListScriptsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 查询集群脚本。
//
// @param request - ListScriptsRequest
//
// @return ListScriptsResponse
func (client *Client) ListScripts(request *ListScriptsRequest) (_result *ListScriptsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListScriptsResponse{}
	_body, _err := client.ListScriptsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Queries the tags that are bound to an EMR cluster.
//
// @param request - ListTagResourcesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return ListTagResourcesResponse
func (client *Client) ListTagResourcesWithOptions(request *ListTagResourcesRequest, runtime *util.RuntimeOptions) (_result *ListTagResourcesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.MaxResults)) {
		query["MaxResults"] = request.MaxResults
	}

	if !tea.BoolValue(util.IsUnset(request.NextToken)) {
		query["NextToken"] = request.NextToken
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIds)) {
		query["ResourceIds"] = request.ResourceIds
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	if !tea.BoolValue(util.IsUnset(request.Tags)) {
		query["Tags"] = request.Tags
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("ListTagResources"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &ListTagResourcesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Queries the tags that are bound to an EMR cluster.
//
// @param request - ListTagResourcesRequest
//
// @return ListTagResourcesResponse
func (client *Client) ListTagResources(request *ListTagResourcesRequest) (_result *ListTagResourcesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &ListTagResourcesResponse{}
	_body, _err := client.ListTagResourcesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Configures auto scaling rules.
//
// Description:
//
// You can call this operation to configure auto scaling policies.
//
// @param request - PutAutoScalingPolicyRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return PutAutoScalingPolicyResponse
func (client *Client) PutAutoScalingPolicyWithOptions(request *PutAutoScalingPolicyRequest, runtime *util.RuntimeOptions) (_result *PutAutoScalingPolicyResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.Constraints)) {
		query["Constraints"] = request.Constraints
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupId)) {
		query["NodeGroupId"] = request.NodeGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ScalingRules)) {
		query["ScalingRules"] = request.ScalingRules
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("PutAutoScalingPolicy"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &PutAutoScalingPolicyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Configures auto scaling rules.
//
// Description:
//
// You can call this operation to configure auto scaling policies.
//
// @param request - PutAutoScalingPolicyRequest
//
// @return PutAutoScalingPolicyResponse
func (client *Client) PutAutoScalingPolicy(request *PutAutoScalingPolicyRequest) (_result *PutAutoScalingPolicyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &PutAutoScalingPolicyResponse{}
	_body, _err := client.PutAutoScalingPolicyWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// @param request - RemoveAutoScalingPolicyRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return RemoveAutoScalingPolicyResponse
func (client *Client) RemoveAutoScalingPolicyWithOptions(request *RemoveAutoScalingPolicyRequest, runtime *util.RuntimeOptions) (_result *RemoveAutoScalingPolicyResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupId)) {
		query["NodeGroupId"] = request.NodeGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("RemoveAutoScalingPolicy"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &RemoveAutoScalingPolicyResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// @param request - RemoveAutoScalingPolicyRequest
//
// @return RemoveAutoScalingPolicyResponse
func (client *Client) RemoveAutoScalingPolicy(request *RemoveAutoScalingPolicyRequest) (_result *RemoveAutoScalingPolicyResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &RemoveAutoScalingPolicyResponse{}
	_body, _err := client.RemoveAutoScalingPolicyWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 执行集群模板
//
// @param request - RunApiTemplateRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return RunApiTemplateResponse
func (client *Client) RunApiTemplateWithOptions(request *RunApiTemplateRequest, runtime *util.RuntimeOptions) (_result *RunApiTemplateResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApiName)) {
		query["ApiName"] = request.ApiName
	}

	if !tea.BoolValue(util.IsUnset(request.ClientToken)) {
		query["ClientToken"] = request.ClientToken
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateId)) {
		query["TemplateId"] = request.TemplateId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("RunApiTemplate"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &RunApiTemplateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 执行集群模板
//
// @param request - RunApiTemplateRequest
//
// @return RunApiTemplateResponse
func (client *Client) RunApiTemplate(request *RunApiTemplateRequest) (_result *RunApiTemplateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &RunApiTemplateResponse{}
	_body, _err := client.RunApiTemplateWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// @param request - RunApplicationActionRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return RunApplicationActionResponse
func (client *Client) RunApplicationActionWithOptions(request *RunApplicationActionRequest, runtime *util.RuntimeOptions) (_result *RunApplicationActionResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ActionName)) {
		query["ActionName"] = request.ActionName
	}

	if !tea.BoolValue(util.IsUnset(request.BatchSize)) {
		query["BatchSize"] = request.BatchSize
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.ComponentInstanceSelector)) {
		query["ComponentInstanceSelector"] = request.ComponentInstanceSelector
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		query["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.ExecuteStrategy)) {
		query["ExecuteStrategy"] = request.ExecuteStrategy
	}

	if !tea.BoolValue(util.IsUnset(request.Interval)) {
		query["Interval"] = request.Interval
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.RollingExecute)) {
		query["RollingExecute"] = request.RollingExecute
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("RunApplicationAction"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &RunApplicationActionResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// @param request - RunApplicationActionRequest
//
// @return RunApplicationActionResponse
func (client *Client) RunApplicationAction(request *RunApplicationActionRequest) (_result *RunApplicationActionResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &RunApplicationActionResponse{}
	_body, _err := client.RunApplicationActionWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Bind tags to a specified EMR cluster.
//
// @param request - TagResourcesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return TagResourcesResponse
func (client *Client) TagResourcesWithOptions(request *TagResourcesRequest, runtime *util.RuntimeOptions) (_result *TagResourcesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIds)) {
		query["ResourceIds"] = request.ResourceIds
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	if !tea.BoolValue(util.IsUnset(request.Tags)) {
		query["Tags"] = request.Tags
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("TagResources"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &TagResourcesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Bind tags to a specified EMR cluster.
//
// @param request - TagResourcesRequest
//
// @return TagResourcesResponse
func (client *Client) TagResources(request *TagResourcesRequest) (_result *TagResourcesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &TagResourcesResponse{}
	_body, _err := client.TagResourcesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Summary:
//
// Unbinds tags from a specified column in an EMR cluster. If the tag is not bound to other resources, the tag is automatically deleted.
//
// Description:
//
// 删除指定资源标签。
//
// @param request - UntagResourcesRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UntagResourcesResponse
func (client *Client) UntagResourcesWithOptions(request *UntagResourcesRequest, runtime *util.RuntimeOptions) (_result *UntagResourcesResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.All)) {
		query["All"] = request.All
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceIds)) {
		query["ResourceIds"] = request.ResourceIds
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceType)) {
		query["ResourceType"] = request.ResourceType
	}

	if !tea.BoolValue(util.IsUnset(request.TagKeys)) {
		query["TagKeys"] = request.TagKeys
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("UntagResources"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &UntagResourcesResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Summary:
//
// Unbinds tags from a specified column in an EMR cluster. If the tag is not bound to other resources, the tag is automatically deleted.
//
// Description:
//
// 删除指定资源标签。
//
// @param request - UntagResourcesRequest
//
// @return UntagResourcesResponse
func (client *Client) UntagResources(request *UntagResourcesRequest) (_result *UntagResourcesResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UntagResourcesResponse{}
	_body, _err := client.UntagResourcesWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// Description:
//
// 修改集群模板
//
// @param request - UpdateApiTemplateRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateApiTemplateResponse
func (client *Client) UpdateApiTemplateWithOptions(request *UpdateApiTemplateRequest, runtime *util.RuntimeOptions) (_result *UpdateApiTemplateResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApiName)) {
		query["ApiName"] = request.ApiName
	}

	if !tea.BoolValue(util.IsUnset(request.Content)) {
		query["Content"] = request.Content
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	if !tea.BoolValue(util.IsUnset(request.ResourceGroupId)) {
		query["ResourceGroupId"] = request.ResourceGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateId)) {
		query["TemplateId"] = request.TemplateId
	}

	if !tea.BoolValue(util.IsUnset(request.TemplateName)) {
		query["TemplateName"] = request.TemplateName
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateApiTemplate"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &UpdateApiTemplateResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// Description:
//
// 修改集群模板
//
// @param request - UpdateApiTemplateRequest
//
// @return UpdateApiTemplateResponse
func (client *Client) UpdateApiTemplate(request *UpdateApiTemplateRequest) (_result *UpdateApiTemplateResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateApiTemplateResponse{}
	_body, _err := client.UpdateApiTemplateWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}

// @param request - UpdateApplicationConfigsRequest
//
// @param runtime - runtime options for this request RuntimeOptions
//
// @return UpdateApplicationConfigsResponse
func (client *Client) UpdateApplicationConfigsWithOptions(request *UpdateApplicationConfigsRequest, runtime *util.RuntimeOptions) (_result *UpdateApplicationConfigsResponse, _err error) {
	_err = util.ValidateModel(request)
	if _err != nil {
		return _result, _err
	}
	query := map[string]interface{}{}
	if !tea.BoolValue(util.IsUnset(request.ApplicationConfigs)) {
		query["ApplicationConfigs"] = request.ApplicationConfigs
	}

	if !tea.BoolValue(util.IsUnset(request.ApplicationName)) {
		query["ApplicationName"] = request.ApplicationName
	}

	if !tea.BoolValue(util.IsUnset(request.ClusterId)) {
		query["ClusterId"] = request.ClusterId
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigAction)) {
		query["ConfigAction"] = request.ConfigAction
	}

	if !tea.BoolValue(util.IsUnset(request.ConfigScope)) {
		query["ConfigScope"] = request.ConfigScope
	}

	if !tea.BoolValue(util.IsUnset(request.Description)) {
		query["Description"] = request.Description
	}

	if !tea.BoolValue(util.IsUnset(request.NodeGroupId)) {
		query["NodeGroupId"] = request.NodeGroupId
	}

	if !tea.BoolValue(util.IsUnset(request.NodeId)) {
		query["NodeId"] = request.NodeId
	}

	if !tea.BoolValue(util.IsUnset(request.RegionId)) {
		query["RegionId"] = request.RegionId
	}

	req := &openapi.OpenApiRequest{
		Query: openapiutil.Query(query),
	}
	params := &openapi.Params{
		Action:      tea.String("UpdateApplicationConfigs"),
		Version:     tea.String("2021-03-20"),
		Protocol:    tea.String("HTTPS"),
		Pathname:    tea.String("/"),
		Method:      tea.String("POST"),
		AuthType:    tea.String("AK"),
		Style:       tea.String("RPC"),
		ReqBodyType: tea.String("formData"),
		BodyType:    tea.String("json"),
	}
	_result = &UpdateApplicationConfigsResponse{}
	_body, _err := client.CallApi(params, req, runtime)
	if _err != nil {
		return _result, _err
	}
	_err = tea.Convert(_body, &_result)
	return _result, _err
}

// @param request - UpdateApplicationConfigsRequest
//
// @return UpdateApplicationConfigsResponse
func (client *Client) UpdateApplicationConfigs(request *UpdateApplicationConfigsRequest) (_result *UpdateApplicationConfigsResponse, _err error) {
	runtime := &util.RuntimeOptions{}
	_result = &UpdateApplicationConfigsResponse{}
	_body, _err := client.UpdateApplicationConfigsWithOptions(request, runtime)
	if _err != nil {
		return _result, _err
	}
	_result = _body
	return _result, _err
}
