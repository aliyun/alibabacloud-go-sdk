// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iDeleteGatewayResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetCode(v int32) *DeleteGatewayResponseBody
	GetCode() *int32
	SetData(v *DeleteGatewayResponseBodyData) *DeleteGatewayResponseBody
	GetData() *DeleteGatewayResponseBodyData
	SetHttpStatusCode(v int32) *DeleteGatewayResponseBody
	GetHttpStatusCode() *int32
	SetMessage(v string) *DeleteGatewayResponseBody
	GetMessage() *string
	SetRequestId(v string) *DeleteGatewayResponseBody
	GetRequestId() *string
	SetSuccess(v bool) *DeleteGatewayResponseBody
	GetSuccess() *bool
}

type DeleteGatewayResponseBody struct {
	// The HTTP status code returned. The value 200 indicates that the request was successful. Other values indicate that the request failed.
	//
	// example:
	//
	// 200
	Code *int32 `json:"Code,omitempty" xml:"Code,omitempty"`
	// The details of the data.
	Data *DeleteGatewayResponseBodyData `json:"Data,omitempty" xml:"Data,omitempty" type:"Struct"`
	// The HTTP status code returned.
	//
	// example:
	//
	// 200
	HttpStatusCode *int32 `json:"HttpStatusCode,omitempty" xml:"HttpStatusCode,omitempty"`
	// The returned message.
	//
	// 	- If the request is successful, a success message is returned.
	//
	// 	- If the request fails, an error message is returned, such as the "TaskId not found" message.
	//
	// example:
	//
	// The request is successfully processed.
	Message *string `json:"Message,omitempty" xml:"Message,omitempty"`
	// The ID of the request.
	//
	// example:
	//
	// 2FFEA345-BE30-5FE0-8885-42E2DEFD5FE6
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Indicates whether the request was successful. Valid values:
	//
	// 	- `true`: The request was successful.
	//
	// 	- `false`: The request failed.
	//
	// example:
	//
	// true
	Success *bool `json:"Success,omitempty" xml:"Success,omitempty"`
}

func (s DeleteGatewayResponseBody) String() string {
	return dara.Prettify(s)
}

func (s DeleteGatewayResponseBody) GoString() string {
	return s.String()
}

func (s *DeleteGatewayResponseBody) GetCode() *int32 {
	return s.Code
}

func (s *DeleteGatewayResponseBody) GetData() *DeleteGatewayResponseBodyData {
	return s.Data
}

func (s *DeleteGatewayResponseBody) GetHttpStatusCode() *int32 {
	return s.HttpStatusCode
}

func (s *DeleteGatewayResponseBody) GetMessage() *string {
	return s.Message
}

func (s *DeleteGatewayResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *DeleteGatewayResponseBody) GetSuccess() *bool {
	return s.Success
}

func (s *DeleteGatewayResponseBody) SetCode(v int32) *DeleteGatewayResponseBody {
	s.Code = &v
	return s
}

func (s *DeleteGatewayResponseBody) SetData(v *DeleteGatewayResponseBodyData) *DeleteGatewayResponseBody {
	s.Data = v
	return s
}

func (s *DeleteGatewayResponseBody) SetHttpStatusCode(v int32) *DeleteGatewayResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *DeleteGatewayResponseBody) SetMessage(v string) *DeleteGatewayResponseBody {
	s.Message = &v
	return s
}

func (s *DeleteGatewayResponseBody) SetRequestId(v string) *DeleteGatewayResponseBody {
	s.RequestId = &v
	return s
}

func (s *DeleteGatewayResponseBody) SetSuccess(v bool) *DeleteGatewayResponseBody {
	s.Success = &v
	return s
}

func (s *DeleteGatewayResponseBody) Validate() error {
	return dara.Validate(s)
}

type DeleteGatewayResponseBodyData struct {
	// The unique ID of the gateway. The ID is automatically generated by the system.
	//
	// example:
	//
	// gw-7ea3da97b96543e19f6c597c****
	GatewayUniqueId *string `json:"GatewayUniqueId,omitempty" xml:"GatewayUniqueId,omitempty"`
	// The creation time.
	//
	// example:
	//
	// 2022-01-07T10:07:57.000+0000
	GmtCreate *string `json:"GmtCreate,omitempty" xml:"GmtCreate,omitempty"`
	// The time when the gateway was last updated.
	//
	// example:
	//
	// 2022-01-07T10:07:57.000+0000
	GmtModified *string `json:"GmtModified,omitempty" xml:"GmtModified,omitempty"`
	// The ID of the primary key.
	//
	// example:
	//
	// 12
	Id *int64 `json:"Id,omitempty" xml:"Id,omitempty"`
	// The name of the gateway.
	//
	// example:
	//
	// mse-bc1a29b0-reg-center-0-1
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The information about the user.
	//
	// example:
	//
	// 1231254
	PrimaryUser *string `json:"PrimaryUser,omitempty" xml:"PrimaryUser,omitempty"`
	// The ID of the region.
	//
	// example:
	//
	// cn-hangzhou
	Region *string `json:"Region,omitempty" xml:"Region,omitempty"`
	// The number of gateway replicas.
	//
	// example:
	//
	// 2
	Replica *int32 `json:"Replica,omitempty" xml:"Replica,omitempty"`
	// The ID of the security group.
	//
	// example:
	//
	// sg-bp11ufzqn6mmb8dtzz82
	SecurityGroup *string `json:"SecurityGroup,omitempty" xml:"SecurityGroup,omitempty"`
	// The specifications of the gateway.
	//
	// example:
	//
	// MSE_GTW_16_32_200_c
	Spec *string `json:"Spec,omitempty" xml:"Spec,omitempty"`
	// The status of the gateway. Valid values: 0: The gateway is being created. 1: The gateway fails to be created. 2: The gateway is running. 3: The gateway is changing. 4: The gateway is scaling down. 6: The gateway is scaling up. 8: The gateway is being deleted. 10: The gateway is restarting. 11: The gateway is being rebuilt. 12: The gateway is updating. 13: The gateway fails to be updated.
	//
	// example:
	//
	// 1
	Status *int32 `json:"Status,omitempty" xml:"Status,omitempty"`
	// The ID of the virtual private cloud (VPC) where the gateway resides.
	//
	// example:
	//
	// vpc-bp1328cm01m6uel42b5zb
	Vpc *string `json:"Vpc,omitempty" xml:"Vpc,omitempty"`
	// The ID of the vSwitch.
	//
	// example:
	//
	// vsw-bp18zeqxx6mpuq843z4n5
	Vswitch *string `json:"Vswitch,omitempty" xml:"Vswitch,omitempty"`
}

func (s DeleteGatewayResponseBodyData) String() string {
	return dara.Prettify(s)
}

func (s DeleteGatewayResponseBodyData) GoString() string {
	return s.String()
}

func (s *DeleteGatewayResponseBodyData) GetGatewayUniqueId() *string {
	return s.GatewayUniqueId
}

func (s *DeleteGatewayResponseBodyData) GetGmtCreate() *string {
	return s.GmtCreate
}

func (s *DeleteGatewayResponseBodyData) GetGmtModified() *string {
	return s.GmtModified
}

func (s *DeleteGatewayResponseBodyData) GetId() *int64 {
	return s.Id
}

func (s *DeleteGatewayResponseBodyData) GetName() *string {
	return s.Name
}

func (s *DeleteGatewayResponseBodyData) GetPrimaryUser() *string {
	return s.PrimaryUser
}

func (s *DeleteGatewayResponseBodyData) GetRegion() *string {
	return s.Region
}

func (s *DeleteGatewayResponseBodyData) GetReplica() *int32 {
	return s.Replica
}

func (s *DeleteGatewayResponseBodyData) GetSecurityGroup() *string {
	return s.SecurityGroup
}

func (s *DeleteGatewayResponseBodyData) GetSpec() *string {
	return s.Spec
}

func (s *DeleteGatewayResponseBodyData) GetStatus() *int32 {
	return s.Status
}

func (s *DeleteGatewayResponseBodyData) GetVpc() *string {
	return s.Vpc
}

func (s *DeleteGatewayResponseBodyData) GetVswitch() *string {
	return s.Vswitch
}

func (s *DeleteGatewayResponseBodyData) SetGatewayUniqueId(v string) *DeleteGatewayResponseBodyData {
	s.GatewayUniqueId = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetGmtCreate(v string) *DeleteGatewayResponseBodyData {
	s.GmtCreate = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetGmtModified(v string) *DeleteGatewayResponseBodyData {
	s.GmtModified = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetId(v int64) *DeleteGatewayResponseBodyData {
	s.Id = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetName(v string) *DeleteGatewayResponseBodyData {
	s.Name = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetPrimaryUser(v string) *DeleteGatewayResponseBodyData {
	s.PrimaryUser = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetRegion(v string) *DeleteGatewayResponseBodyData {
	s.Region = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetReplica(v int32) *DeleteGatewayResponseBodyData {
	s.Replica = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetSecurityGroup(v string) *DeleteGatewayResponseBodyData {
	s.SecurityGroup = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetSpec(v string) *DeleteGatewayResponseBodyData {
	s.Spec = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetStatus(v int32) *DeleteGatewayResponseBodyData {
	s.Status = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetVpc(v string) *DeleteGatewayResponseBodyData {
	s.Vpc = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) SetVswitch(v string) *DeleteGatewayResponseBodyData {
	s.Vswitch = &v
	return s
}

func (s *DeleteGatewayResponseBodyData) Validate() error {
	return dara.Validate(s)
}
