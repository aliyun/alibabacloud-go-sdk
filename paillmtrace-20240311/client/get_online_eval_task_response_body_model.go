// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iGetOnlineEvalTaskResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetCode(v string) *GetOnlineEvalTaskResponseBody
	GetCode() *string
	SetMessage(v string) *GetOnlineEvalTaskResponseBody
	GetMessage() *string
	SetRequestId(v string) *GetOnlineEvalTaskResponseBody
	GetRequestId() *string
	SetTask(v *GetOnlineEvalTaskResponseBodyTask) *GetOnlineEvalTaskResponseBody
	GetTask() *GetOnlineEvalTaskResponseBodyTask
}

type GetOnlineEvalTaskResponseBody struct {
	// Internal error code. Set only when the response is in error.
	//
	// example:
	//
	// InvalidInputParams
	Code *string `json:"Code,omitempty" xml:"Code,omitempty"`
	// Response error message. Set only when the response is in error.
	//
	// example:
	//
	// task id is empty
	Message *string `json:"Message,omitempty" xml:"Message,omitempty"`
	// POP request ID
	//
	// example:
	//
	// 6F352A02-9C0D-54A7-B57C-663CF71D5714
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// Task information
	Task *GetOnlineEvalTaskResponseBodyTask `json:"Task,omitempty" xml:"Task,omitempty" type:"Struct"`
}

func (s GetOnlineEvalTaskResponseBody) String() string {
	return dara.Prettify(s)
}

func (s GetOnlineEvalTaskResponseBody) GoString() string {
	return s.String()
}

func (s *GetOnlineEvalTaskResponseBody) GetCode() *string {
	return s.Code
}

func (s *GetOnlineEvalTaskResponseBody) GetMessage() *string {
	return s.Message
}

func (s *GetOnlineEvalTaskResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *GetOnlineEvalTaskResponseBody) GetTask() *GetOnlineEvalTaskResponseBodyTask {
	return s.Task
}

func (s *GetOnlineEvalTaskResponseBody) SetCode(v string) *GetOnlineEvalTaskResponseBody {
	s.Code = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBody) SetMessage(v string) *GetOnlineEvalTaskResponseBody {
	s.Message = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBody) SetRequestId(v string) *GetOnlineEvalTaskResponseBody {
	s.RequestId = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBody) SetTask(v *GetOnlineEvalTaskResponseBodyTask) *GetOnlineEvalTaskResponseBody {
	s.Task = v
	return s
}

func (s *GetOnlineEvalTaskResponseBody) Validate() error {
	return dara.Validate(s)
}

type GetOnlineEvalTaskResponseBodyTask struct {
	// The Alibaba Cloud account (primary account) of the task creator.
	//
	// example:
	//
	// 1195531608511111
	AliyunUid *string `json:"AliyunUid,omitempty" xml:"AliyunUid,omitempty"`
	// The name of the user application targeted by this task.
	//
	// example:
	//
	// my-llm-app
	AppName *string `json:"AppName,omitempty" xml:"AppName,omitempty"`
	// Task description information
	//
	// example:
	//
	// 这个任务做了这些事。
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// Deprecated. Will be removed.
	//
	// example:
	//
	// Deprecated. Will be removed.
	EvalResults *string `json:"EvalResults,omitempty" xml:"EvalResults,omitempty"`
	// Extract specific path values from JSON-formatted trace data as input for the evaluation operation. These JSON paths are defined within this EvaluationConfig structure.
	EvaluationConfig *EvaluationConfig `json:"EvaluationConfig,omitempty" xml:"EvaluationConfig,omitempty"`
	// The evaluation task needs to search for a certain amount of trace data generated by the user application as input data for the evaluation operation. This is a list that defines the search filter conditions.
	Filters []*GetOnlineEvalTaskResponseBodyTaskFilters `json:"Filters,omitempty" xml:"Filters,omitempty" type:"Repeated"`
	// UTC creation time of the task.
	//
	// example:
	//
	// 2024-07-31 08:30:00
	GmtCreateTime *string `json:"GmtCreateTime,omitempty" xml:"GmtCreateTime,omitempty"`
	// UTC end time of the trace data.
	//
	// example:
	//
	// 2024-08-10 13:20:00
	GmtEndTime *string `json:"GmtEndTime,omitempty" xml:"GmtEndTime,omitempty"`
	// UTC upper bound of the last sampling window
	//
	// example:
	//
	// 2024-08-10 13:14:00
	GmtLastSamplingWindowEndTime *string `json:"GmtLastSamplingWindowEndTime,omitempty" xml:"GmtLastSamplingWindowEndTime,omitempty"`
	// UTC lower bound of the last sampling window.
	//
	// example:
	//
	// 2024-08-10 13:11:00
	GmtLastSamplingWindowStartTime *string `json:"GmtLastSamplingWindowStartTime,omitempty" xml:"GmtLastSamplingWindowStartTime,omitempty"`
	// UTC start time of the trace data.
	//
	// example:
	//
	// 2024-08-02
	GmtStartTime *string `json:"GmtStartTime,omitempty" xml:"GmtStartTime,omitempty"`
	// Task ID
	//
	// example:
	//
	// 0839a02d-aa24-4174-90bb-7a773885934d
	Id *string `json:"Id,omitempty" xml:"Id,omitempty"`
	// Access configuration structure for the large model used internally by the evaluation task.
	ModelConfig *ModelConfig `json:"ModelConfig,omitempty" xml:"ModelConfig,omitempty"`
	// Task name.
	//
	// example:
	//
	// my-eval-task-1
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// Number of evaluation records
	//
	// example:
	//
	// 999
	RecordCount *int32 `json:"RecordCount,omitempty" xml:"RecordCount,omitempty"`
	// The evaluation task needs to search for a certain amount of trace data generated by the user application as input data for the evaluation operation. This defines the width of the time window for each search of input data.
	//
	// example:
	//
	// 3
	SamplingFrequencyMinutes *int32 `json:"SamplingFrequencyMinutes,omitempty" xml:"SamplingFrequencyMinutes,omitempty"`
	// The percentage of the data found within a time window that is actually used as input for the evaluation task. For example, 100 means all the found data is used as input, 20 means 20% of the found data is randomly selected as input.
	//
	// example:
	//
	// 70
	SamplingRatio *int32 `json:"SamplingRatio,omitempty" xml:"SamplingRatio,omitempty"`
	// Task status
	//
	// example:
	//
	// CREATED
	//
	// RUNNING
	//
	// FINISHED
	//
	// USER_CANCELED
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The Alibaba Cloud sub-account of the task creator.
	//
	// example:
	//
	// 222222222222222222
	UserId *string `json:"UserId,omitempty" xml:"UserId,omitempty"`
}

func (s GetOnlineEvalTaskResponseBodyTask) String() string {
	return dara.Prettify(s)
}

func (s GetOnlineEvalTaskResponseBodyTask) GoString() string {
	return s.String()
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetAliyunUid() *string {
	return s.AliyunUid
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetAppName() *string {
	return s.AppName
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetDescription() *string {
	return s.Description
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetEvalResults() *string {
	return s.EvalResults
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetEvaluationConfig() *EvaluationConfig {
	return s.EvaluationConfig
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetFilters() []*GetOnlineEvalTaskResponseBodyTaskFilters {
	return s.Filters
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetGmtCreateTime() *string {
	return s.GmtCreateTime
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetGmtEndTime() *string {
	return s.GmtEndTime
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetGmtLastSamplingWindowEndTime() *string {
	return s.GmtLastSamplingWindowEndTime
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetGmtLastSamplingWindowStartTime() *string {
	return s.GmtLastSamplingWindowStartTime
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetGmtStartTime() *string {
	return s.GmtStartTime
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetId() *string {
	return s.Id
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetModelConfig() *ModelConfig {
	return s.ModelConfig
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetName() *string {
	return s.Name
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetRecordCount() *int32 {
	return s.RecordCount
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetSamplingFrequencyMinutes() *int32 {
	return s.SamplingFrequencyMinutes
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetSamplingRatio() *int32 {
	return s.SamplingRatio
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetStatus() *string {
	return s.Status
}

func (s *GetOnlineEvalTaskResponseBodyTask) GetUserId() *string {
	return s.UserId
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetAliyunUid(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.AliyunUid = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetAppName(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.AppName = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetDescription(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.Description = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetEvalResults(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.EvalResults = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetEvaluationConfig(v *EvaluationConfig) *GetOnlineEvalTaskResponseBodyTask {
	s.EvaluationConfig = v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetFilters(v []*GetOnlineEvalTaskResponseBodyTaskFilters) *GetOnlineEvalTaskResponseBodyTask {
	s.Filters = v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetGmtCreateTime(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.GmtCreateTime = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetGmtEndTime(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.GmtEndTime = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetGmtLastSamplingWindowEndTime(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.GmtLastSamplingWindowEndTime = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetGmtLastSamplingWindowStartTime(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.GmtLastSamplingWindowStartTime = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetGmtStartTime(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.GmtStartTime = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetId(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.Id = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetModelConfig(v *ModelConfig) *GetOnlineEvalTaskResponseBodyTask {
	s.ModelConfig = v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetName(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.Name = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetRecordCount(v int32) *GetOnlineEvalTaskResponseBodyTask {
	s.RecordCount = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetSamplingFrequencyMinutes(v int32) *GetOnlineEvalTaskResponseBodyTask {
	s.SamplingFrequencyMinutes = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetSamplingRatio(v int32) *GetOnlineEvalTaskResponseBodyTask {
	s.SamplingRatio = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetStatus(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.Status = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) SetUserId(v string) *GetOnlineEvalTaskResponseBodyTask {
	s.UserId = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTask) Validate() error {
	return dara.Validate(s)
}

type GetOnlineEvalTaskResponseBodyTaskFilters struct {
	// Key of the filter condition.
	//
	// example:
	//
	// ServiceId
	//
	// ServiceName
	//
	// Input
	//
	// Output
	//
	// Status
	//
	// TraceType
	//
	// SpanType
	//
	// TraceName
	//
	// SpanName
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// Filter condition match operator.
	//
	// example:
	//
	// =
	//
	// StartsWith
	//
	// Contains
	Operator *string `json:"Operator,omitempty" xml:"Operator,omitempty"`
	// Value of the filter condition.
	//
	// example:
	//
	// foo
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s GetOnlineEvalTaskResponseBodyTaskFilters) String() string {
	return dara.Prettify(s)
}

func (s GetOnlineEvalTaskResponseBodyTaskFilters) GoString() string {
	return s.String()
}

func (s *GetOnlineEvalTaskResponseBodyTaskFilters) GetKey() *string {
	return s.Key
}

func (s *GetOnlineEvalTaskResponseBodyTaskFilters) GetOperator() *string {
	return s.Operator
}

func (s *GetOnlineEvalTaskResponseBodyTaskFilters) GetValue() *string {
	return s.Value
}

func (s *GetOnlineEvalTaskResponseBodyTaskFilters) SetKey(v string) *GetOnlineEvalTaskResponseBodyTaskFilters {
	s.Key = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTaskFilters) SetOperator(v string) *GetOnlineEvalTaskResponseBodyTaskFilters {
	s.Operator = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTaskFilters) SetValue(v string) *GetOnlineEvalTaskResponseBodyTaskFilters {
	s.Value = &v
	return s
}

func (s *GetOnlineEvalTaskResponseBodyTaskFilters) Validate() error {
	return dara.Validate(s)
}
