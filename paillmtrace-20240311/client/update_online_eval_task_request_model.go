// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iUpdateOnlineEvalTaskRequest interface {
	dara.Model
	String() string
	GoString() string
	SetAppName(v string) *UpdateOnlineEvalTaskRequest
	GetAppName() *string
	SetDescription(v string) *UpdateOnlineEvalTaskRequest
	GetDescription() *string
	SetEndTime(v string) *UpdateOnlineEvalTaskRequest
	GetEndTime() *string
	SetEvaluationConfig(v *EvaluationConfig) *UpdateOnlineEvalTaskRequest
	GetEvaluationConfig() *EvaluationConfig
	SetFilters(v []*UpdateOnlineEvalTaskRequestFilters) *UpdateOnlineEvalTaskRequest
	GetFilters() []*UpdateOnlineEvalTaskRequestFilters
	SetModelConfig(v *ModelConfig) *UpdateOnlineEvalTaskRequest
	GetModelConfig() *ModelConfig
	SetSamplingFrequencyMinutes(v int32) *UpdateOnlineEvalTaskRequest
	GetSamplingFrequencyMinutes() *int32
	SetSamplingRatio(v int32) *UpdateOnlineEvalTaskRequest
	GetSamplingRatio() *int32
	SetStartTime(v string) *UpdateOnlineEvalTaskRequest
	GetStartTime() *string
	SetTaskName(v string) *UpdateOnlineEvalTaskRequest
	GetTaskName() *string
}

type UpdateOnlineEvalTaskRequest struct {
	// The user-defined name of the LLM application.
	//
	// example:
	//
	// my-llm-one
	AppName *string `json:"AppName,omitempty" xml:"AppName,omitempty"`
	// The description of the task.
	//
	// example:
	//
	// The purpose of the task is xxx.
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	// The end time of the trace data, in UTC format.
	//
	// example:
	//
	// 2024-09-02 22:24:00
	EndTime *string `json:"EndTime,omitempty" xml:"EndTime,omitempty"`
	// This configuration structure defines the JSON paths needed to extract specific values from trace data in JSON format. EvaluationConfig defines these JSON paths.
	EvaluationConfig *EvaluationConfig `json:"EvaluationConfig,omitempty" xml:"EvaluationConfig,omitempty"`
	// The evaluation task must search for a certain amount of trace data generated by the user application as input data for the evaluation. This list defines the search filter conditions.
	Filters []*UpdateOnlineEvalTaskRequestFilters `json:"Filters,omitempty" xml:"Filters,omitempty" type:"Repeated"`
	// The access configuration structure of the model used in the evaluation.
	ModelConfig *ModelConfig `json:"ModelConfig,omitempty" xml:"ModelConfig,omitempty"`
	// The evaluation task must search for a certain amount of trace data generated by the user application as input data for the evaluation. This is the width of the time window for each search of input data.
	//
	// example:
	//
	// 10
	SamplingFrequencyMinutes *int32 `json:"SamplingFrequencyMinutes,omitempty" xml:"SamplingFrequencyMinutes,omitempty"`
	// The percentage of data found in a time window that truly serves as evaluation input data. For example, 100 indicates that all data searched is used as evaluation input. 20 indicates that 20% of the found data is randomly selected as evaluation input.
	//
	// example:
	//
	// 50
	SamplingRatio *int32 `json:"SamplingRatio,omitempty" xml:"SamplingRatio,omitempty"`
	// The start time of the trace data, in UTC format.
	//
	// example:
	//
	// 2024-07-31 08:30:00
	StartTime *string `json:"StartTime,omitempty" xml:"StartTime,omitempty"`
	// The task name.
	//
	// example:
	//
	// foo model application performance evaluation
	TaskName *string `json:"TaskName,omitempty" xml:"TaskName,omitempty"`
}

func (s UpdateOnlineEvalTaskRequest) String() string {
	return dara.Prettify(s)
}

func (s UpdateOnlineEvalTaskRequest) GoString() string {
	return s.String()
}

func (s *UpdateOnlineEvalTaskRequest) GetAppName() *string {
	return s.AppName
}

func (s *UpdateOnlineEvalTaskRequest) GetDescription() *string {
	return s.Description
}

func (s *UpdateOnlineEvalTaskRequest) GetEndTime() *string {
	return s.EndTime
}

func (s *UpdateOnlineEvalTaskRequest) GetEvaluationConfig() *EvaluationConfig {
	return s.EvaluationConfig
}

func (s *UpdateOnlineEvalTaskRequest) GetFilters() []*UpdateOnlineEvalTaskRequestFilters {
	return s.Filters
}

func (s *UpdateOnlineEvalTaskRequest) GetModelConfig() *ModelConfig {
	return s.ModelConfig
}

func (s *UpdateOnlineEvalTaskRequest) GetSamplingFrequencyMinutes() *int32 {
	return s.SamplingFrequencyMinutes
}

func (s *UpdateOnlineEvalTaskRequest) GetSamplingRatio() *int32 {
	return s.SamplingRatio
}

func (s *UpdateOnlineEvalTaskRequest) GetStartTime() *string {
	return s.StartTime
}

func (s *UpdateOnlineEvalTaskRequest) GetTaskName() *string {
	return s.TaskName
}

func (s *UpdateOnlineEvalTaskRequest) SetAppName(v string) *UpdateOnlineEvalTaskRequest {
	s.AppName = &v
	return s
}

func (s *UpdateOnlineEvalTaskRequest) SetDescription(v string) *UpdateOnlineEvalTaskRequest {
	s.Description = &v
	return s
}

func (s *UpdateOnlineEvalTaskRequest) SetEndTime(v string) *UpdateOnlineEvalTaskRequest {
	s.EndTime = &v
	return s
}

func (s *UpdateOnlineEvalTaskRequest) SetEvaluationConfig(v *EvaluationConfig) *UpdateOnlineEvalTaskRequest {
	s.EvaluationConfig = v
	return s
}

func (s *UpdateOnlineEvalTaskRequest) SetFilters(v []*UpdateOnlineEvalTaskRequestFilters) *UpdateOnlineEvalTaskRequest {
	s.Filters = v
	return s
}

func (s *UpdateOnlineEvalTaskRequest) SetModelConfig(v *ModelConfig) *UpdateOnlineEvalTaskRequest {
	s.ModelConfig = v
	return s
}

func (s *UpdateOnlineEvalTaskRequest) SetSamplingFrequencyMinutes(v int32) *UpdateOnlineEvalTaskRequest {
	s.SamplingFrequencyMinutes = &v
	return s
}

func (s *UpdateOnlineEvalTaskRequest) SetSamplingRatio(v int32) *UpdateOnlineEvalTaskRequest {
	s.SamplingRatio = &v
	return s
}

func (s *UpdateOnlineEvalTaskRequest) SetStartTime(v string) *UpdateOnlineEvalTaskRequest {
	s.StartTime = &v
	return s
}

func (s *UpdateOnlineEvalTaskRequest) SetTaskName(v string) *UpdateOnlineEvalTaskRequest {
	s.TaskName = &v
	return s
}

func (s *UpdateOnlineEvalTaskRequest) Validate() error {
	return dara.Validate(s)
}

type UpdateOnlineEvalTaskRequestFilters struct {
	// The key of the filter condition.
	//
	// Valid values:
	//
	// 	- Status
	//
	// 	- SpanName
	//
	// 	- Input
	//
	// 	- TraceType
	//
	// 	- SpanType
	//
	// 	- ServiceName
	//
	// 	- Output
	//
	// 	- TraceName
	//
	// 	- ServiceId
	//
	// example:
	//
	// ServiceId
	//
	// ServiceName
	//
	// Input
	//
	// Output
	//
	// Status
	//
	// TraceType
	//
	// SpanType
	//
	// TraceName
	//
	// SpanName
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The matching operator of the filter condition.
	//
	// Valid values:
	//
	// 	- Contains
	//
	// 	- \\=
	//
	// 	- StartsWith
	//
	// example:
	//
	// =
	//
	// StartsWith
	//
	// Contains
	Operator *string `json:"Operator,omitempty" xml:"Operator,omitempty"`
	// The value of the filter condition.
	//
	// example:
	//
	// foo
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s UpdateOnlineEvalTaskRequestFilters) String() string {
	return dara.Prettify(s)
}

func (s UpdateOnlineEvalTaskRequestFilters) GoString() string {
	return s.String()
}

func (s *UpdateOnlineEvalTaskRequestFilters) GetKey() *string {
	return s.Key
}

func (s *UpdateOnlineEvalTaskRequestFilters) GetOperator() *string {
	return s.Operator
}

func (s *UpdateOnlineEvalTaskRequestFilters) GetValue() *string {
	return s.Value
}

func (s *UpdateOnlineEvalTaskRequestFilters) SetKey(v string) *UpdateOnlineEvalTaskRequestFilters {
	s.Key = &v
	return s
}

func (s *UpdateOnlineEvalTaskRequestFilters) SetOperator(v string) *UpdateOnlineEvalTaskRequestFilters {
	s.Operator = &v
	return s
}

func (s *UpdateOnlineEvalTaskRequestFilters) SetValue(v string) *UpdateOnlineEvalTaskRequestFilters {
	s.Value = &v
	return s
}

func (s *UpdateOnlineEvalTaskRequestFilters) Validate() error {
	return dara.Validate(s)
}
