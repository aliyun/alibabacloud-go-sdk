// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iListOnlineEvalTasksResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetCode(v string) *ListOnlineEvalTasksResponseBody
	GetCode() *string
	SetMessage(v string) *ListOnlineEvalTasksResponseBody
	GetMessage() *string
	SetRequestId(v string) *ListOnlineEvalTasksResponseBody
	GetRequestId() *string
	SetTasks(v []*ListOnlineEvalTasksResponseBodyTasks) *ListOnlineEvalTasksResponseBody
	GetTasks() []*ListOnlineEvalTasksResponseBodyTasks
	SetTotalCount(v int32) *ListOnlineEvalTasksResponseBody
	GetTotalCount() *int32
}

type ListOnlineEvalTasksResponseBody struct {
	// Internal error code. Set only when the response has an error.
	//
	// example:
	//
	// InvalidInputParams
	Code *string `json:"Code,omitempty" xml:"Code,omitempty"`
	// Response error message. Set only when the response has an error.
	//
	// example:
	//
	// page number should be greater than 0
	Message *string `json:"Message,omitempty" xml:"Message,omitempty"`
	// ID of the request
	//
	// example:
	//
	// 6F352A02-9C0D-54A7-B57C-663CF71D5714
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// List of tasks.
	Tasks []*ListOnlineEvalTasksResponseBodyTasks `json:"Tasks,omitempty" xml:"Tasks,omitempty" type:"Repeated"`
	// Total number of tasks that meet the criteria.
	//
	// example:
	//
	// 22
	TotalCount *int32 `json:"TotalCount,omitempty" xml:"TotalCount,omitempty"`
}

func (s ListOnlineEvalTasksResponseBody) String() string {
	return dara.Prettify(s)
}

func (s ListOnlineEvalTasksResponseBody) GoString() string {
	return s.String()
}

func (s *ListOnlineEvalTasksResponseBody) GetCode() *string {
	return s.Code
}

func (s *ListOnlineEvalTasksResponseBody) GetMessage() *string {
	return s.Message
}

func (s *ListOnlineEvalTasksResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *ListOnlineEvalTasksResponseBody) GetTasks() []*ListOnlineEvalTasksResponseBodyTasks {
	return s.Tasks
}

func (s *ListOnlineEvalTasksResponseBody) GetTotalCount() *int32 {
	return s.TotalCount
}

func (s *ListOnlineEvalTasksResponseBody) SetCode(v string) *ListOnlineEvalTasksResponseBody {
	s.Code = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBody) SetMessage(v string) *ListOnlineEvalTasksResponseBody {
	s.Message = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBody) SetRequestId(v string) *ListOnlineEvalTasksResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBody) SetTasks(v []*ListOnlineEvalTasksResponseBodyTasks) *ListOnlineEvalTasksResponseBody {
	s.Tasks = v
	return s
}

func (s *ListOnlineEvalTasksResponseBody) SetTotalCount(v int32) *ListOnlineEvalTasksResponseBody {
	s.TotalCount = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBody) Validate() error {
	return dara.Validate(s)
}

type ListOnlineEvalTasksResponseBodyTasks struct {
	// The Alibaba Cloud account (primary account) of the task creator.
	//
	// example:
	//
	// 1512522691911111
	AliyunUid *string `json:"AliyunUid,omitempty" xml:"AliyunUid,omitempty"`
	// The name of the user application targeted by this task.
	//
	// example:
	//
	// my-llm-app
	AppName *string `json:"AppName,omitempty" xml:"AppName,omitempty"`
	// Task description information
	//
	// example:
	//
	// this task is for application evaluation
	Description *string `json:"Description,omitempty" xml:"Description,omitempty"`
	EvalResults *string `json:"EvalResults,omitempty" xml:"EvalResults,omitempty"`
	// Extract specific path values from JSON-formatted trace data as input for the evaluation operation. These JSON paths are defined in this EvaluationConfig structure.
	EvaluationConfig *EvaluationConfig `json:"EvaluationConfig,omitempty" xml:"EvaluationConfig,omitempty"`
	// The list define the search filter conditions for the evaluation task to search a certain amount of trace data generated by the user application, which serves as input data for the evaluation operation.
	Filters []*ListOnlineEvalTasksResponseBodyTasksFilters `json:"Filters,omitempty" xml:"Filters,omitempty" type:"Repeated"`
	// The UTC creation time of the task.
	//
	// example:
	//
	// 2025-04-07 13:24:35
	GmtCreateTime *string `json:"GmtCreateTime,omitempty" xml:"GmtCreateTime,omitempty"`
	// Task UTC end time.
	//
	// example:
	//
	// 2025-04-09 13:24:35
	GmtEndTime *string `json:"GmtEndTime,omitempty" xml:"GmtEndTime,omitempty"`
	// The UTC start time of the task.
	//
	// example:
	//
	// 2025-04-08 13:24:35
	GmtStartTime *string `json:"GmtStartTime,omitempty" xml:"GmtStartTime,omitempty"`
	// Task ID.
	//
	// example:
	//
	// 9f50cd72efcf36535152ee811a911115
	Id *string `json:"Id,omitempty" xml:"Id,omitempty"`
	// Access configuration structure for the large model used internally by the evaluation task.
	ModelConfig *ModelConfig `json:"ModelConfig,omitempty" xml:"ModelConfig,omitempty"`
	// Task name.
	//
	// example:
	//
	// my-foo-evaluation-task
	Name        *string `json:"Name,omitempty" xml:"Name,omitempty"`
	RecordCount *int32  `json:"RecordCount,omitempty" xml:"RecordCount,omitempty"`
	// The evaluation task needs to search for a certain amount of trace data generated by the user\\"s application as input data for the evaluation operation. This defines the time window for each data search.
	//
	// example:
	//
	// 12
	SamplingFrequencyMinutes *int32 `json:"SamplingFrequencyMinutes,omitempty" xml:"SamplingFrequencyMinutes,omitempty"`
	// The percentage of the data searched within a time window that is used as input data for the evaluation. For example, 100 means all the searched data is used as input, 20 means 20% of the searched data is randomly selected as input.
	//
	// example:
	//
	// 50
	SamplingRatio *int32 `json:"SamplingRatio,omitempty" xml:"SamplingRatio,omitempty"`
	// Task status
	//
	// example:
	//
	// CREATED
	//
	// RUNNING
	//
	// FINISHED
	//
	// USER_CANCELED
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The Alibaba Cloud sub-account of the task creator.
	//
	// example:
	//
	// 2222222222
	UserId *string `json:"UserId,omitempty" xml:"UserId,omitempty"`
}

func (s ListOnlineEvalTasksResponseBodyTasks) String() string {
	return dara.Prettify(s)
}

func (s ListOnlineEvalTasksResponseBodyTasks) GoString() string {
	return s.String()
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetAliyunUid() *string {
	return s.AliyunUid
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetAppName() *string {
	return s.AppName
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetDescription() *string {
	return s.Description
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetEvalResults() *string {
	return s.EvalResults
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetEvaluationConfig() *EvaluationConfig {
	return s.EvaluationConfig
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetFilters() []*ListOnlineEvalTasksResponseBodyTasksFilters {
	return s.Filters
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetGmtCreateTime() *string {
	return s.GmtCreateTime
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetGmtEndTime() *string {
	return s.GmtEndTime
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetGmtStartTime() *string {
	return s.GmtStartTime
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetId() *string {
	return s.Id
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetModelConfig() *ModelConfig {
	return s.ModelConfig
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetName() *string {
	return s.Name
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetRecordCount() *int32 {
	return s.RecordCount
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetSamplingFrequencyMinutes() *int32 {
	return s.SamplingFrequencyMinutes
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetSamplingRatio() *int32 {
	return s.SamplingRatio
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetStatus() *string {
	return s.Status
}

func (s *ListOnlineEvalTasksResponseBodyTasks) GetUserId() *string {
	return s.UserId
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetAliyunUid(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.AliyunUid = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetAppName(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.AppName = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetDescription(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.Description = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetEvalResults(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.EvalResults = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetEvaluationConfig(v *EvaluationConfig) *ListOnlineEvalTasksResponseBodyTasks {
	s.EvaluationConfig = v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetFilters(v []*ListOnlineEvalTasksResponseBodyTasksFilters) *ListOnlineEvalTasksResponseBodyTasks {
	s.Filters = v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetGmtCreateTime(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.GmtCreateTime = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetGmtEndTime(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.GmtEndTime = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetGmtStartTime(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.GmtStartTime = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetId(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.Id = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetModelConfig(v *ModelConfig) *ListOnlineEvalTasksResponseBodyTasks {
	s.ModelConfig = v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetName(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.Name = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetRecordCount(v int32) *ListOnlineEvalTasksResponseBodyTasks {
	s.RecordCount = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetSamplingFrequencyMinutes(v int32) *ListOnlineEvalTasksResponseBodyTasks {
	s.SamplingFrequencyMinutes = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetSamplingRatio(v int32) *ListOnlineEvalTasksResponseBodyTasks {
	s.SamplingRatio = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetStatus(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.Status = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) SetUserId(v string) *ListOnlineEvalTasksResponseBodyTasks {
	s.UserId = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasks) Validate() error {
	return dara.Validate(s)
}

type ListOnlineEvalTasksResponseBodyTasksFilters struct {
	// The key of the filter condition.
	//
	// example:
	//
	// ServiceId
	//
	// ServiceName
	//
	// Input
	//
	// Output
	//
	// Status
	//
	// TraceType
	//
	// SpanType
	//
	// TraceName
	//
	// SpanName
	Key *string `json:"Key,omitempty" xml:"Key,omitempty"`
	// The matching operator of the filter condition.
	//
	// example:
	//
	// =
	//
	// StartsWith
	//
	// Contains
	Operator *string `json:"Operator,omitempty" xml:"Operator,omitempty"`
	// The value of the filter condition.
	//
	// example:
	//
	// foo
	Value *string `json:"Value,omitempty" xml:"Value,omitempty"`
}

func (s ListOnlineEvalTasksResponseBodyTasksFilters) String() string {
	return dara.Prettify(s)
}

func (s ListOnlineEvalTasksResponseBodyTasksFilters) GoString() string {
	return s.String()
}

func (s *ListOnlineEvalTasksResponseBodyTasksFilters) GetKey() *string {
	return s.Key
}

func (s *ListOnlineEvalTasksResponseBodyTasksFilters) GetOperator() *string {
	return s.Operator
}

func (s *ListOnlineEvalTasksResponseBodyTasksFilters) GetValue() *string {
	return s.Value
}

func (s *ListOnlineEvalTasksResponseBodyTasksFilters) SetKey(v string) *ListOnlineEvalTasksResponseBodyTasksFilters {
	s.Key = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasksFilters) SetOperator(v string) *ListOnlineEvalTasksResponseBodyTasksFilters {
	s.Operator = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasksFilters) SetValue(v string) *ListOnlineEvalTasksResponseBodyTasksFilters {
	s.Value = &v
	return s
}

func (s *ListOnlineEvalTasksResponseBodyTasksFilters) Validate() error {
	return dara.Validate(s)
}
