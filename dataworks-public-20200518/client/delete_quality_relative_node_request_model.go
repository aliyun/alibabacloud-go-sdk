// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iDeleteQualityRelativeNodeRequest interface {
	dara.Model
	String() string
	GoString() string
	SetEnvType(v string) *DeleteQualityRelativeNodeRequest
	GetEnvType() *string
	SetMatchExpression(v string) *DeleteQualityRelativeNodeRequest
	GetMatchExpression() *string
	SetNodeId(v int64) *DeleteQualityRelativeNodeRequest
	GetNodeId() *int64
	SetProjectId(v int64) *DeleteQualityRelativeNodeRequest
	GetProjectId() *int64
	SetProjectName(v string) *DeleteQualityRelativeNodeRequest
	GetProjectName() *string
	SetTableName(v string) *DeleteQualityRelativeNodeRequest
	GetTableName() *string
	SetTargetNodeProjectId(v int64) *DeleteQualityRelativeNodeRequest
	GetTargetNodeProjectId() *int64
	SetTargetNodeProjectName(v string) *DeleteQualityRelativeNodeRequest
	GetTargetNodeProjectName() *string
}

type DeleteQualityRelativeNodeRequest struct {
	// The type of the compute engine or data source. Valid values:
	//
	// 	- cdh
	//
	// 	- analyticdb_for_mysql
	//
	// 	- odps
	//
	// 	- emr
	//
	// 	- hadoop
	//
	// 	- holodb
	//
	// 	- hybriddb_for_postgresql
	//
	// This parameter is required.
	//
	// example:
	//
	// ODPS
	EnvType *string `json:"EnvType,omitempty" xml:"EnvType,omitempty"`
	// The partition filter expression.
	//
	// This parameter is required.
	//
	// example:
	//
	// dt=$[yyyymmdd]
	MatchExpression *string `json:"MatchExpression,omitempty" xml:"MatchExpression,omitempty"`
	// The ID of the node.
	//
	// This parameter is required.
	//
	// example:
	//
	// 156234
	NodeId *int64 `json:"NodeId,omitempty" xml:"NodeId,omitempty"`
	// The ID of the workspace.
	//
	// This parameter is required.
	//
	// example:
	//
	// 12345
	ProjectId *int64 `json:"ProjectId,omitempty" xml:"ProjectId,omitempty"`
	// The name of the compute engine instance or data source.
	//
	// This parameter is required.
	//
	// example:
	//
	// autotest
	ProjectName *string `json:"ProjectName,omitempty" xml:"ProjectName,omitempty"`
	// The name of the table that is generated by the node.
	//
	// This parameter is required.
	//
	// example:
	//
	// dual
	TableName *string `json:"TableName,omitempty" xml:"TableName,omitempty"`
	// The ID of the workspace to which the node associated with the partition filter expression belongs.
	//
	// This parameter is required.
	//
	// example:
	//
	// 12345
	TargetNodeProjectId *int64 `json:"TargetNodeProjectId,omitempty" xml:"TargetNodeProjectId,omitempty"`
	// The name of the workspace to which the node associated with the partition filter expression belongs.
	//
	// This parameter is required.
	//
	// example:
	//
	// autotest
	TargetNodeProjectName *string `json:"TargetNodeProjectName,omitempty" xml:"TargetNodeProjectName,omitempty"`
}

func (s DeleteQualityRelativeNodeRequest) String() string {
	return dara.Prettify(s)
}

func (s DeleteQualityRelativeNodeRequest) GoString() string {
	return s.String()
}

func (s *DeleteQualityRelativeNodeRequest) GetEnvType() *string {
	return s.EnvType
}

func (s *DeleteQualityRelativeNodeRequest) GetMatchExpression() *string {
	return s.MatchExpression
}

func (s *DeleteQualityRelativeNodeRequest) GetNodeId() *int64 {
	return s.NodeId
}

func (s *DeleteQualityRelativeNodeRequest) GetProjectId() *int64 {
	return s.ProjectId
}

func (s *DeleteQualityRelativeNodeRequest) GetProjectName() *string {
	return s.ProjectName
}

func (s *DeleteQualityRelativeNodeRequest) GetTableName() *string {
	return s.TableName
}

func (s *DeleteQualityRelativeNodeRequest) GetTargetNodeProjectId() *int64 {
	return s.TargetNodeProjectId
}

func (s *DeleteQualityRelativeNodeRequest) GetTargetNodeProjectName() *string {
	return s.TargetNodeProjectName
}

func (s *DeleteQualityRelativeNodeRequest) SetEnvType(v string) *DeleteQualityRelativeNodeRequest {
	s.EnvType = &v
	return s
}

func (s *DeleteQualityRelativeNodeRequest) SetMatchExpression(v string) *DeleteQualityRelativeNodeRequest {
	s.MatchExpression = &v
	return s
}

func (s *DeleteQualityRelativeNodeRequest) SetNodeId(v int64) *DeleteQualityRelativeNodeRequest {
	s.NodeId = &v
	return s
}

func (s *DeleteQualityRelativeNodeRequest) SetProjectId(v int64) *DeleteQualityRelativeNodeRequest {
	s.ProjectId = &v
	return s
}

func (s *DeleteQualityRelativeNodeRequest) SetProjectName(v string) *DeleteQualityRelativeNodeRequest {
	s.ProjectName = &v
	return s
}

func (s *DeleteQualityRelativeNodeRequest) SetTableName(v string) *DeleteQualityRelativeNodeRequest {
	s.TableName = &v
	return s
}

func (s *DeleteQualityRelativeNodeRequest) SetTargetNodeProjectId(v int64) *DeleteQualityRelativeNodeRequest {
	s.TargetNodeProjectId = &v
	return s
}

func (s *DeleteQualityRelativeNodeRequest) SetTargetNodeProjectName(v string) *DeleteQualityRelativeNodeRequest {
	s.TargetNodeProjectName = &v
	return s
}

func (s *DeleteQualityRelativeNodeRequest) Validate() error {
	return dara.Validate(s)
}
