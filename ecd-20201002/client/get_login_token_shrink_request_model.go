// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iGetLoginTokenShrinkRequest interface {
	dara.Model
	String() string
	GoString() string
	SetAuthenticationCode(v string) *GetLoginTokenShrinkRequest
	GetAuthenticationCode() *string
	SetAvailableFeaturesShrink(v string) *GetLoginTokenShrinkRequest
	GetAvailableFeaturesShrink() *string
	SetClientId(v string) *GetLoginTokenShrinkRequest
	GetClientId() *string
	SetClientName(v string) *GetLoginTokenShrinkRequest
	GetClientName() *string
	SetClientOS(v string) *GetLoginTokenShrinkRequest
	GetClientOS() *string
	SetClientType(v string) *GetLoginTokenShrinkRequest
	GetClientType() *string
	SetClientVersion(v string) *GetLoginTokenShrinkRequest
	GetClientVersion() *string
	SetCurrentStage(v string) *GetLoginTokenShrinkRequest
	GetCurrentStage() *string
	SetDirectoryId(v string) *GetLoginTokenShrinkRequest
	GetDirectoryId() *string
	SetEndUserId(v string) *GetLoginTokenShrinkRequest
	GetEndUserId() *string
	SetKeepAlive(v bool) *GetLoginTokenShrinkRequest
	GetKeepAlive() *bool
	SetKeepAliveToken(v string) *GetLoginTokenShrinkRequest
	GetKeepAliveToken() *string
	SetNewPassword(v string) *GetLoginTokenShrinkRequest
	GetNewPassword() *string
	SetOfficeSiteId(v string) *GetLoginTokenShrinkRequest
	GetOfficeSiteId() *string
	SetOldPassword(v string) *GetLoginTokenShrinkRequest
	GetOldPassword() *string
	SetPassword(v string) *GetLoginTokenShrinkRequest
	GetPassword() *string
	SetRegionId(v string) *GetLoginTokenShrinkRequest
	GetRegionId() *string
	SetSessionId(v string) *GetLoginTokenShrinkRequest
	GetSessionId() *string
	SetTokenCode(v string) *GetLoginTokenShrinkRequest
	GetTokenCode() *string
	SetUuid(v string) *GetLoginTokenShrinkRequest
	GetUuid() *string
}

type GetLoginTokenShrinkRequest struct {
	// The verification code that is generated by the virtual MFA device. This parameter is required if you set `CurrentStage` to `MFAVerify`.
	//
	// example:
	//
	// 47****
	AuthenticationCode      *string `json:"AuthenticationCode,omitempty" xml:"AuthenticationCode,omitempty"`
	AvailableFeaturesShrink *string `json:"AvailableFeatures,omitempty" xml:"AvailableFeatures,omitempty"`
	// The ID of the Alibaba Cloud Workspace client. The system generates a unique ID for each client.
	//
	// This parameter is required.
	//
	// example:
	//
	// f4a0dc8e-1702-4728-9a60-95b27a35****
	ClientId   *string `json:"ClientId,omitempty" xml:"ClientId,omitempty"`
	ClientName *string `json:"ClientName,omitempty" xml:"ClientName,omitempty"`
	// The operating system (OS) of the device that runs an Alibaba Cloud Workspace client.
	//
	// example:
	//
	// Windows_NT 10.0.1***	- x64
	ClientOS *string `json:"ClientOS,omitempty" xml:"ClientOS,omitempty"`
	// The type of Alibaba Cloud Workspace clients.
	//
	// Valid values:
	//
	// 	- HTML5: web client.
	//
	// 	- WINDOWS: Windows client.
	//
	// 	- MACOS: macOS client.
	//
	// 	- IOS: iOS client.
	//
	// 	- ANDROID: Android client.
	//
	// example:
	//
	// Windows
	ClientType *string `json:"ClientType,omitempty" xml:"ClientType,omitempty"`
	// The version of the client. When you use an Alibaba Cloud Workspace client, you can view the client version in the **About*	- dialog box on the client logon page.
	//
	// example:
	//
	// 2.1.0-R-20210731.1****
	ClientVersion *string `json:"ClientVersion,omitempty" xml:"ClientVersion,omitempty"`
	// The logon authentication stage. Valid values:
	//
	// 	- `ADPassword`: the stage to verify the identity of the Active Directory (AD) user. You must specify the value when the system verifies the identity of a convenience account or an AD account.
	//
	// 	- `MFABind: the stage to bind a virtual multi-factor authentication (MFA) device.`
	//
	// 	- `MFAVerify: the stage to verify the verification code that is generated by the virtual MFA device.`
	//
	// 	- `TokenVerify`: the stage to perform two-factor authentication on an Alibaba Cloud Workspace client (hereinafter referred to as the client).
	//
	// 	- `ChangePassword`: the stage to change the password of the user.
	//
	// 	- `KeepAliveVerify`: the stage to obtain LoginToken if KeepAliveToken is valid.
	//
	// example:
	//
	// ADPassword
	CurrentStage *string `json:"CurrentStage,omitempty" xml:"CurrentStage,omitempty"`
	// The office network ID. This parameter has the same meaning as `OfficeSiteId`. We recommend that you replace `DirectoryId` with `OfficeSiteId`. You can specify a value for `DirectoryId` or `OfficeSiteId`.
	//
	// example:
	//
	// cn-hangzhou+dir-885351****
	DirectoryId *string `json:"DirectoryId,omitempty" xml:"DirectoryId,omitempty"`
	// The name of the convenience user or the AD user. This parameter is required if you set `CurrentStage` to `ADPassword`.
	//
	// example:
	//
	// alice
	EndUserId *string `json:"EndUserId,omitempty" xml:"EndUserId,omitempty"`
	// Specifies whether to keep the user logged on to the client.
	//
	// Valid values:
	//
	// 	- null: Default value. Do not keep the user logged on to the client.
	//
	// 	- true: Keep the user logged on to the client.
	//
	// 	- false:  Do not keep the user logged on to the client.
	//
	// example:
	//
	// false
	KeepAlive *bool `json:"KeepAlive,omitempty" xml:"KeepAlive,omitempty"`
	// The token to keep logging on to an Alibaba Cloud Workspace client. When an end user logs on to the Alibaba Cloud Workspace client and select Auto Sign-in, `KeepAliveToken` is returned after you call this operation. Within the valid period of the returned token``, you can call the `GetLoginToken` operation and set `CurrentStage` to `KeepAliveVerify`. Then, you can obtain LoginToken. If you set `CurrentStage` to `KeepAliveVerify`, `KeepAliveToken` is required.
	//
	// example:
	//
	// hide
	KeepAliveToken *string `json:"KeepAliveToken,omitempty" xml:"KeepAliveToken,omitempty"`
	// The new password. This parameter is required if you set `CurrentStage` to `ChangePassword`.
	//
	// example:
	//
	// NewPassword
	NewPassword *string `json:"NewPassword,omitempty" xml:"NewPassword,omitempty"`
	// The office network ID.
	//
	// example:
	//
	// cn-hangzhou+dir-885351****
	OfficeSiteId *string `json:"OfficeSiteId,omitempty" xml:"OfficeSiteId,omitempty"`
	// The current password. This parameter is required if you set `CurrentStage` to `ChangePassword`.
	//
	// example:
	//
	// OldPassword
	OldPassword *string `json:"OldPassword,omitempty" xml:"OldPassword,omitempty"`
	// The password of the convenience user or the AD user. This parameter is required if you set `CurrentStage` to `ADPassword`.
	//
	// example:
	//
	// Password1234
	Password *string `json:"Password,omitempty" xml:"Password,omitempty"`
	// The region ID. You can call the [DescribeRegions](https://help.aliyun.com/document_detail/196646.html) operation to query the regions supported by EDS.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The ID of the session.
	//
	// 	- If the virtual multi-factor authentication (MFA) device is not bound or two-factor authentication is not enabled for the client, you do not need to specify a value for `SessionId`.
	//
	// 	- If the virtual MFA device is not bound or two-factor authentication is enabled for the client, you must specify a value for `SessionId` to verify the user identity after you specify a value for `ADPassword`. The value of the `SessionId` parameter is returned only if the CurrentStage parameter is set to `ADPassword` when you call the `GetLoginToken` operation.
	//
	// example:
	//
	// cd45e873-650d-4d70-acb9-f996187a****
	SessionId *string `json:"SessionId,omitempty" xml:"SessionId,omitempty"`
	// If two-factor authentication is enabled for Alibaba Cloud Workspace terminals in the EDS console and the system detects that the current logon user is exposed to risks, the system sends a verification code to the email address of the user. This parameter is required if you set `CurrentStage` to `TokenVerify`.
	//
	// example:
	//
	// 63****
	TokenCode *string `json:"TokenCode,omitempty" xml:"TokenCode,omitempty"`
	// The unique identifier of the client. When you use an Alibaba Cloud Workspace client, you can view the client version in the **About*	- dialog box on the client logon page.
	//
	// example:
	//
	// C78CA9E99315687575DD2844C1F3****
	Uuid *string `json:"Uuid,omitempty" xml:"Uuid,omitempty"`
}

func (s GetLoginTokenShrinkRequest) String() string {
	return dara.Prettify(s)
}

func (s GetLoginTokenShrinkRequest) GoString() string {
	return s.String()
}

func (s *GetLoginTokenShrinkRequest) GetAuthenticationCode() *string {
	return s.AuthenticationCode
}

func (s *GetLoginTokenShrinkRequest) GetAvailableFeaturesShrink() *string {
	return s.AvailableFeaturesShrink
}

func (s *GetLoginTokenShrinkRequest) GetClientId() *string {
	return s.ClientId
}

func (s *GetLoginTokenShrinkRequest) GetClientName() *string {
	return s.ClientName
}

func (s *GetLoginTokenShrinkRequest) GetClientOS() *string {
	return s.ClientOS
}

func (s *GetLoginTokenShrinkRequest) GetClientType() *string {
	return s.ClientType
}

func (s *GetLoginTokenShrinkRequest) GetClientVersion() *string {
	return s.ClientVersion
}

func (s *GetLoginTokenShrinkRequest) GetCurrentStage() *string {
	return s.CurrentStage
}

func (s *GetLoginTokenShrinkRequest) GetDirectoryId() *string {
	return s.DirectoryId
}

func (s *GetLoginTokenShrinkRequest) GetEndUserId() *string {
	return s.EndUserId
}

func (s *GetLoginTokenShrinkRequest) GetKeepAlive() *bool {
	return s.KeepAlive
}

func (s *GetLoginTokenShrinkRequest) GetKeepAliveToken() *string {
	return s.KeepAliveToken
}

func (s *GetLoginTokenShrinkRequest) GetNewPassword() *string {
	return s.NewPassword
}

func (s *GetLoginTokenShrinkRequest) GetOfficeSiteId() *string {
	return s.OfficeSiteId
}

func (s *GetLoginTokenShrinkRequest) GetOldPassword() *string {
	return s.OldPassword
}

func (s *GetLoginTokenShrinkRequest) GetPassword() *string {
	return s.Password
}

func (s *GetLoginTokenShrinkRequest) GetRegionId() *string {
	return s.RegionId
}

func (s *GetLoginTokenShrinkRequest) GetSessionId() *string {
	return s.SessionId
}

func (s *GetLoginTokenShrinkRequest) GetTokenCode() *string {
	return s.TokenCode
}

func (s *GetLoginTokenShrinkRequest) GetUuid() *string {
	return s.Uuid
}

func (s *GetLoginTokenShrinkRequest) SetAuthenticationCode(v string) *GetLoginTokenShrinkRequest {
	s.AuthenticationCode = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetAvailableFeaturesShrink(v string) *GetLoginTokenShrinkRequest {
	s.AvailableFeaturesShrink = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetClientId(v string) *GetLoginTokenShrinkRequest {
	s.ClientId = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetClientName(v string) *GetLoginTokenShrinkRequest {
	s.ClientName = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetClientOS(v string) *GetLoginTokenShrinkRequest {
	s.ClientOS = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetClientType(v string) *GetLoginTokenShrinkRequest {
	s.ClientType = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetClientVersion(v string) *GetLoginTokenShrinkRequest {
	s.ClientVersion = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetCurrentStage(v string) *GetLoginTokenShrinkRequest {
	s.CurrentStage = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetDirectoryId(v string) *GetLoginTokenShrinkRequest {
	s.DirectoryId = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetEndUserId(v string) *GetLoginTokenShrinkRequest {
	s.EndUserId = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetKeepAlive(v bool) *GetLoginTokenShrinkRequest {
	s.KeepAlive = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetKeepAliveToken(v string) *GetLoginTokenShrinkRequest {
	s.KeepAliveToken = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetNewPassword(v string) *GetLoginTokenShrinkRequest {
	s.NewPassword = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetOfficeSiteId(v string) *GetLoginTokenShrinkRequest {
	s.OfficeSiteId = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetOldPassword(v string) *GetLoginTokenShrinkRequest {
	s.OldPassword = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetPassword(v string) *GetLoginTokenShrinkRequest {
	s.Password = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetRegionId(v string) *GetLoginTokenShrinkRequest {
	s.RegionId = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetSessionId(v string) *GetLoginTokenShrinkRequest {
	s.SessionId = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetTokenCode(v string) *GetLoginTokenShrinkRequest {
	s.TokenCode = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) SetUuid(v string) *GetLoginTokenShrinkRequest {
	s.Uuid = &v
	return s
}

func (s *GetLoginTokenShrinkRequest) Validate() error {
	return dara.Validate(s)
}
