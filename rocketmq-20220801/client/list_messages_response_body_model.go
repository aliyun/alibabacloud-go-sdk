// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iListMessagesResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetCode(v string) *ListMessagesResponseBody
	GetCode() *string
	SetData(v *ListMessagesResponseBodyData) *ListMessagesResponseBody
	GetData() *ListMessagesResponseBodyData
	SetDynamicCode(v string) *ListMessagesResponseBody
	GetDynamicCode() *string
	SetDynamicMessage(v string) *ListMessagesResponseBody
	GetDynamicMessage() *string
	SetHttpStatusCode(v int32) *ListMessagesResponseBody
	GetHttpStatusCode() *int32
	SetMessage(v string) *ListMessagesResponseBody
	GetMessage() *string
	SetRequestId(v string) *ListMessagesResponseBody
	GetRequestId() *string
	SetSuccess(v bool) *ListMessagesResponseBody
	GetSuccess() *bool
}

type ListMessagesResponseBody struct {
	// The error code.
	//
	// example:
	//
	// MissingInstanceId
	Code *string `json:"code,omitempty" xml:"code,omitempty"`
	// The data returned.
	Data *ListMessagesResponseBodyData `json:"data,omitempty" xml:"data,omitempty" type:"Struct"`
	// The dynamic error code.
	//
	// example:
	//
	// InstanceId
	DynamicCode *string `json:"dynamicCode,omitempty" xml:"dynamicCode,omitempty"`
	// The dynamic error message.
	//
	// example:
	//
	// instanceId
	DynamicMessage *string `json:"dynamicMessage,omitempty" xml:"dynamicMessage,omitempty"`
	// The HTTP status code.
	//
	// example:
	//
	// 200
	HttpStatusCode *int32 `json:"httpStatusCode,omitempty" xml:"httpStatusCode,omitempty"`
	// The error message.
	//
	// example:
	//
	// Parameter instanceId is mandatory for this action .
	Message *string `json:"message,omitempty" xml:"message,omitempty"`
	// The ID of the request. Each request has a unique ID. You can use this ID to troubleshoot issues.
	//
	// example:
	//
	// A3531B6A-5A88-52BD-B3C4-A024C3D0AA2E
	RequestId *string `json:"requestId,omitempty" xml:"requestId,omitempty"`
	// Indicates whether the request was successful.
	//
	// example:
	//
	// true
	Success *bool `json:"success,omitempty" xml:"success,omitempty"`
}

func (s ListMessagesResponseBody) String() string {
	return dara.Prettify(s)
}

func (s ListMessagesResponseBody) GoString() string {
	return s.String()
}

func (s *ListMessagesResponseBody) GetCode() *string {
	return s.Code
}

func (s *ListMessagesResponseBody) GetData() *ListMessagesResponseBodyData {
	return s.Data
}

func (s *ListMessagesResponseBody) GetDynamicCode() *string {
	return s.DynamicCode
}

func (s *ListMessagesResponseBody) GetDynamicMessage() *string {
	return s.DynamicMessage
}

func (s *ListMessagesResponseBody) GetHttpStatusCode() *int32 {
	return s.HttpStatusCode
}

func (s *ListMessagesResponseBody) GetMessage() *string {
	return s.Message
}

func (s *ListMessagesResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *ListMessagesResponseBody) GetSuccess() *bool {
	return s.Success
}

func (s *ListMessagesResponseBody) SetCode(v string) *ListMessagesResponseBody {
	s.Code = &v
	return s
}

func (s *ListMessagesResponseBody) SetData(v *ListMessagesResponseBodyData) *ListMessagesResponseBody {
	s.Data = v
	return s
}

func (s *ListMessagesResponseBody) SetDynamicCode(v string) *ListMessagesResponseBody {
	s.DynamicCode = &v
	return s
}

func (s *ListMessagesResponseBody) SetDynamicMessage(v string) *ListMessagesResponseBody {
	s.DynamicMessage = &v
	return s
}

func (s *ListMessagesResponseBody) SetHttpStatusCode(v int32) *ListMessagesResponseBody {
	s.HttpStatusCode = &v
	return s
}

func (s *ListMessagesResponseBody) SetMessage(v string) *ListMessagesResponseBody {
	s.Message = &v
	return s
}

func (s *ListMessagesResponseBody) SetRequestId(v string) *ListMessagesResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListMessagesResponseBody) SetSuccess(v bool) *ListMessagesResponseBody {
	s.Success = &v
	return s
}

func (s *ListMessagesResponseBody) Validate() error {
	return dara.Validate(s)
}

type ListMessagesResponseBodyData struct {
	// The pagination information.
	List []*ListMessagesResponseBodyDataList `json:"list,omitempty" xml:"list,omitempty" type:"Repeated"`
	// The page number.
	//
	// example:
	//
	// 1
	PageNumber *int64 `json:"pageNumber,omitempty" xml:"pageNumber,omitempty"`
	// The number of entries per page.
	//
	// example:
	//
	// 50
	PageSize *int64 `json:"pageSize,omitempty" xml:"pageSize,omitempty"`
	// The scroll ID of the request.
	//
	// The ID is automatically generated by the system. The result can be paginated only if this parameter is included in the pagination request.
	//
	// example:
	//
	// B13D0B07-F24B-4790-88D8-D47A38063D00
	ScrollId *string `json:"scrollId,omitempty" xml:"scrollId,omitempty"`
	// The total number of returned entries.
	//
	// example:
	//
	// 0
	TotalCount *int64 `json:"totalCount,omitempty" xml:"totalCount,omitempty"`
}

func (s ListMessagesResponseBodyData) String() string {
	return dara.Prettify(s)
}

func (s ListMessagesResponseBodyData) GoString() string {
	return s.String()
}

func (s *ListMessagesResponseBodyData) GetList() []*ListMessagesResponseBodyDataList {
	return s.List
}

func (s *ListMessagesResponseBodyData) GetPageNumber() *int64 {
	return s.PageNumber
}

func (s *ListMessagesResponseBodyData) GetPageSize() *int64 {
	return s.PageSize
}

func (s *ListMessagesResponseBodyData) GetScrollId() *string {
	return s.ScrollId
}

func (s *ListMessagesResponseBodyData) GetTotalCount() *int64 {
	return s.TotalCount
}

func (s *ListMessagesResponseBodyData) SetList(v []*ListMessagesResponseBodyDataList) *ListMessagesResponseBodyData {
	s.List = v
	return s
}

func (s *ListMessagesResponseBodyData) SetPageNumber(v int64) *ListMessagesResponseBodyData {
	s.PageNumber = &v
	return s
}

func (s *ListMessagesResponseBodyData) SetPageSize(v int64) *ListMessagesResponseBodyData {
	s.PageSize = &v
	return s
}

func (s *ListMessagesResponseBodyData) SetScrollId(v string) *ListMessagesResponseBodyData {
	s.ScrollId = &v
	return s
}

func (s *ListMessagesResponseBodyData) SetTotalCount(v int64) *ListMessagesResponseBodyData {
	s.TotalCount = &v
	return s
}

func (s *ListMessagesResponseBodyData) Validate() error {
	return dara.Validate(s)
}

type ListMessagesResponseBodyDataList struct {
	// Message body.
	//
	// example:
	//
	// {}
	Body *string `json:"body,omitempty" xml:"body,omitempty"`
	// Message body size.
	//
	// example:
	//
	// 100
	BodySize *int32 `json:"bodySize,omitempty" xml:"bodySize,omitempty"`
	// The client on which messages are produced.
	//
	// example:
	//
	// xx.xx.xx.xx
	BornHost *string `json:"bornHost,omitempty" xml:"bornHost,omitempty"`
	// Message born time.
	//
	// example:
	//
	// 2023-03-22 12:17:08
	BornTime *string `json:"bornTime,omitempty" xml:"bornTime,omitempty"`
	// The instance ID.
	//
	// example:
	//
	// rmq-cn-7e22ody****
	InstanceId *string `json:"instanceId,omitempty" xml:"instanceId,omitempty"`
	// The message group. This parameter is returned only for ordered messages.
	//
	// example:
	//
	// xx
	MessageGroup *string `json:"messageGroup,omitempty" xml:"messageGroup,omitempty"`
	// Message Id.
	//
	// example:
	//
	// 7F000001000114B4340C5ABF94500079
	MessageId *string `json:"messageId,omitempty" xml:"messageId,omitempty"`
	// Message keys.
	MessageKeys []*string `json:"messageKeys,omitempty" xml:"messageKeys,omitempty" type:"Repeated"`
	// The message tag.
	//
	// example:
	//
	// xx
	MessageTag *string `json:"messageTag,omitempty" xml:"messageTag,omitempty"`
	// Message type.
	//
	// example:
	//
	// NORMAL
	MessageType *string `json:"messageType,omitempty" xml:"messageType,omitempty"`
	// The region ID.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"regionId,omitempty" xml:"regionId,omitempty"`
	// The broker on which messages are stored.
	//
	// example:
	//
	// xx.xx.xx.xx
	StoreHost *string `json:"storeHost,omitempty" xml:"storeHost,omitempty"`
	// Message store time.
	//
	// example:
	//
	// 2023-03-22 12:17:08
	StoreTime *string `json:"storeTime,omitempty" xml:"storeTime,omitempty"`
	// The name of the topic.
	//
	// example:
	//
	// topic_test
	TopicName *string `json:"topicName,omitempty" xml:"topicName,omitempty"`
	// Message user properties.
	UserProperties map[string]*string `json:"userProperties,omitempty" xml:"userProperties,omitempty"`
}

func (s ListMessagesResponseBodyDataList) String() string {
	return dara.Prettify(s)
}

func (s ListMessagesResponseBodyDataList) GoString() string {
	return s.String()
}

func (s *ListMessagesResponseBodyDataList) GetBody() *string {
	return s.Body
}

func (s *ListMessagesResponseBodyDataList) GetBodySize() *int32 {
	return s.BodySize
}

func (s *ListMessagesResponseBodyDataList) GetBornHost() *string {
	return s.BornHost
}

func (s *ListMessagesResponseBodyDataList) GetBornTime() *string {
	return s.BornTime
}

func (s *ListMessagesResponseBodyDataList) GetInstanceId() *string {
	return s.InstanceId
}

func (s *ListMessagesResponseBodyDataList) GetMessageGroup() *string {
	return s.MessageGroup
}

func (s *ListMessagesResponseBodyDataList) GetMessageId() *string {
	return s.MessageId
}

func (s *ListMessagesResponseBodyDataList) GetMessageKeys() []*string {
	return s.MessageKeys
}

func (s *ListMessagesResponseBodyDataList) GetMessageTag() *string {
	return s.MessageTag
}

func (s *ListMessagesResponseBodyDataList) GetMessageType() *string {
	return s.MessageType
}

func (s *ListMessagesResponseBodyDataList) GetRegionId() *string {
	return s.RegionId
}

func (s *ListMessagesResponseBodyDataList) GetStoreHost() *string {
	return s.StoreHost
}

func (s *ListMessagesResponseBodyDataList) GetStoreTime() *string {
	return s.StoreTime
}

func (s *ListMessagesResponseBodyDataList) GetTopicName() *string {
	return s.TopicName
}

func (s *ListMessagesResponseBodyDataList) GetUserProperties() map[string]*string {
	return s.UserProperties
}

func (s *ListMessagesResponseBodyDataList) SetBody(v string) *ListMessagesResponseBodyDataList {
	s.Body = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetBodySize(v int32) *ListMessagesResponseBodyDataList {
	s.BodySize = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetBornHost(v string) *ListMessagesResponseBodyDataList {
	s.BornHost = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetBornTime(v string) *ListMessagesResponseBodyDataList {
	s.BornTime = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetInstanceId(v string) *ListMessagesResponseBodyDataList {
	s.InstanceId = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetMessageGroup(v string) *ListMessagesResponseBodyDataList {
	s.MessageGroup = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetMessageId(v string) *ListMessagesResponseBodyDataList {
	s.MessageId = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetMessageKeys(v []*string) *ListMessagesResponseBodyDataList {
	s.MessageKeys = v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetMessageTag(v string) *ListMessagesResponseBodyDataList {
	s.MessageTag = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetMessageType(v string) *ListMessagesResponseBodyDataList {
	s.MessageType = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetRegionId(v string) *ListMessagesResponseBodyDataList {
	s.RegionId = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetStoreHost(v string) *ListMessagesResponseBodyDataList {
	s.StoreHost = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetStoreTime(v string) *ListMessagesResponseBodyDataList {
	s.StoreTime = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetTopicName(v string) *ListMessagesResponseBodyDataList {
	s.TopicName = &v
	return s
}

func (s *ListMessagesResponseBodyDataList) SetUserProperties(v map[string]*string) *ListMessagesResponseBodyDataList {
	s.UserProperties = v
	return s
}

func (s *ListMessagesResponseBodyDataList) Validate() error {
	return dara.Validate(s)
}
