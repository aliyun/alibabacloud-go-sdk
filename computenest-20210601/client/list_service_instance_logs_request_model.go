// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iListServiceInstanceLogsRequest interface {
	dara.Model
	String() string
	GoString() string
	SetFilter(v []*ListServiceInstanceLogsRequestFilter) *ListServiceInstanceLogsRequest
	GetFilter() []*ListServiceInstanceLogsRequestFilter
	SetLogSource(v string) *ListServiceInstanceLogsRequest
	GetLogSource() *string
	SetLogstore(v string) *ListServiceInstanceLogsRequest
	GetLogstore() *string
	SetMaxResults(v int32) *ListServiceInstanceLogsRequest
	GetMaxResults() *int32
	SetNextToken(v string) *ListServiceInstanceLogsRequest
	GetNextToken() *string
	SetRegionId(v string) *ListServiceInstanceLogsRequest
	GetRegionId() *string
	SetServiceInstanceId(v string) *ListServiceInstanceLogsRequest
	GetServiceInstanceId() *string
	SetSortOrder(v string) *ListServiceInstanceLogsRequest
	GetSortOrder() *string
}

type ListServiceInstanceLogsRequest struct {
	// The filters.
	Filter []*ListServiceInstanceLogsRequestFilter `json:"Filter,omitempty" xml:"Filter,omitempty" type:"Repeated"`
	// The log source. When this field is empty, query logs with the source set to computeNest and ros. Valid values:
	//
	// computeNest : logs of the deployment and upgrade of the service instance.
	//
	// application: logs generated by the application.
	//
	// actionTrail: logs generated by ActionTrail.
	//
	// compliancePack: Logs originating from the compliance package.
	//
	// ros: Logs originating from ROS.
	//
	// meteringDataï¼šLogs originating from the pay-as-you-go model.
	//
	// example:
	//
	// computeNest
	LogSource *string `json:"LogSource,omitempty" xml:"LogSource,omitempty"`
	// The Logstore. You must specify this parameter if you set LogSource to application.
	//
	// example:
	//
	// logabc
	Logstore *string `json:"Logstore,omitempty" xml:"Logstore,omitempty"`
	// The number of entries per page. Valid values: 1 to 100. Default value: 20.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// A pagination token. It can be used in the next request to retrieve a new page of results. If NextToken is empty, no next page exists.
	//
	// example:
	//
	// BBBAAfu+XtuBE55iRLHEYYuojI4=
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The region ID. Valid values:
	//
	// 	- cn-hangzhou: China (Hangzhou).
	//
	// 	- ap-southeast-1: Singapore.
	//
	// This parameter is required.
	//
	// example:
	//
	// cn-hangzhou
	RegionId *string `json:"RegionId,omitempty" xml:"RegionId,omitempty"`
	// The ID of the service instance.
	//
	// This parameter is required.
	//
	// example:
	//
	// si-70a3b15bb626435b****
	ServiceInstanceId *string `json:"ServiceInstanceId,omitempty" xml:"ServiceInstanceId,omitempty"`
	// The order in which you want to sort the results. Valid values:
	//
	// 	- Ascending
	//
	// 	- (Default) Descending
	//
	// example:
	//
	// Ascending: Ascending order
	//
	// Descending (default value): Descending order
	SortOrder *string `json:"SortOrder,omitempty" xml:"SortOrder,omitempty"`
}

func (s ListServiceInstanceLogsRequest) String() string {
	return dara.Prettify(s)
}

func (s ListServiceInstanceLogsRequest) GoString() string {
	return s.String()
}

func (s *ListServiceInstanceLogsRequest) GetFilter() []*ListServiceInstanceLogsRequestFilter {
	return s.Filter
}

func (s *ListServiceInstanceLogsRequest) GetLogSource() *string {
	return s.LogSource
}

func (s *ListServiceInstanceLogsRequest) GetLogstore() *string {
	return s.Logstore
}

func (s *ListServiceInstanceLogsRequest) GetMaxResults() *int32 {
	return s.MaxResults
}

func (s *ListServiceInstanceLogsRequest) GetNextToken() *string {
	return s.NextToken
}

func (s *ListServiceInstanceLogsRequest) GetRegionId() *string {
	return s.RegionId
}

func (s *ListServiceInstanceLogsRequest) GetServiceInstanceId() *string {
	return s.ServiceInstanceId
}

func (s *ListServiceInstanceLogsRequest) GetSortOrder() *string {
	return s.SortOrder
}

func (s *ListServiceInstanceLogsRequest) SetFilter(v []*ListServiceInstanceLogsRequestFilter) *ListServiceInstanceLogsRequest {
	s.Filter = v
	return s
}

func (s *ListServiceInstanceLogsRequest) SetLogSource(v string) *ListServiceInstanceLogsRequest {
	s.LogSource = &v
	return s
}

func (s *ListServiceInstanceLogsRequest) SetLogstore(v string) *ListServiceInstanceLogsRequest {
	s.Logstore = &v
	return s
}

func (s *ListServiceInstanceLogsRequest) SetMaxResults(v int32) *ListServiceInstanceLogsRequest {
	s.MaxResults = &v
	return s
}

func (s *ListServiceInstanceLogsRequest) SetNextToken(v string) *ListServiceInstanceLogsRequest {
	s.NextToken = &v
	return s
}

func (s *ListServiceInstanceLogsRequest) SetRegionId(v string) *ListServiceInstanceLogsRequest {
	s.RegionId = &v
	return s
}

func (s *ListServiceInstanceLogsRequest) SetServiceInstanceId(v string) *ListServiceInstanceLogsRequest {
	s.ServiceInstanceId = &v
	return s
}

func (s *ListServiceInstanceLogsRequest) SetSortOrder(v string) *ListServiceInstanceLogsRequest {
	s.SortOrder = &v
	return s
}

func (s *ListServiceInstanceLogsRequest) Validate() error {
	return dara.Validate(s)
}

type ListServiceInstanceLogsRequestFilter struct {
	// The parameter name of the filter. You can specify one or more filters. Valid values:
	//
	// 	- StartTime: the start time of the log event.
	//
	// 	- EndTime: the end time of the ActionTrail event.
	//
	// 	- EventName: the name of the ActionTrail event.
	//
	// 	- ResourceName: the name of the ActionTrail resource.
	//
	// 	- ApplicationGroupName: the name of the application group.
	//
	// example:
	//
	// - StartTime
	//
	// - EndTime
	//
	// - EventName
	//
	// - ResourceName
	//
	// - ApplicationGroupName
	Name *string `json:"Name,omitempty" xml:"Name,omitempty"`
	// The parameter value N of the filter. Valid values of N: 1 to 10.
	Value []*string `json:"Value,omitempty" xml:"Value,omitempty" type:"Repeated"`
}

func (s ListServiceInstanceLogsRequestFilter) String() string {
	return dara.Prettify(s)
}

func (s ListServiceInstanceLogsRequestFilter) GoString() string {
	return s.String()
}

func (s *ListServiceInstanceLogsRequestFilter) GetName() *string {
	return s.Name
}

func (s *ListServiceInstanceLogsRequestFilter) GetValue() []*string {
	return s.Value
}

func (s *ListServiceInstanceLogsRequestFilter) SetName(v string) *ListServiceInstanceLogsRequestFilter {
	s.Name = &v
	return s
}

func (s *ListServiceInstanceLogsRequestFilter) SetValue(v []*string) *ListServiceInstanceLogsRequestFilter {
	s.Value = v
	return s
}

func (s *ListServiceInstanceLogsRequestFilter) Validate() error {
	return dara.Validate(s)
}
