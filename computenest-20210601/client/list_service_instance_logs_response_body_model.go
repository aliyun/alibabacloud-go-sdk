// This file is auto-generated, don't edit it. Thanks.
package client

import (
	"github.com/alibabacloud-go/tea/dara"
)

type iListServiceInstanceLogsResponseBody interface {
	dara.Model
	String() string
	GoString() string
	SetMaxResults(v int32) *ListServiceInstanceLogsResponseBody
	GetMaxResults() *int32
	SetNextToken(v string) *ListServiceInstanceLogsResponseBody
	GetNextToken() *string
	SetRequestId(v string) *ListServiceInstanceLogsResponseBody
	GetRequestId() *string
	SetServiceInstancesLogs(v []*ListServiceInstanceLogsResponseBodyServiceInstancesLogs) *ListServiceInstanceLogsResponseBody
	GetServiceInstancesLogs() []*ListServiceInstanceLogsResponseBodyServiceInstancesLogs
}

type ListServiceInstanceLogsResponseBody struct {
	// The number of entries per page. Valid values: 1 to 100. Default value: 20.
	//
	// example:
	//
	// 20
	MaxResults *int32 `json:"MaxResults,omitempty" xml:"MaxResults,omitempty"`
	// The pagination token that is used in the next request to retrieve a new page of results.
	//
	// example:
	//
	// AAAAAfu+XtuBE55iRLHEYYuojI4=
	NextToken *string `json:"NextToken,omitempty" xml:"NextToken,omitempty"`
	// The request ID.
	//
	// example:
	//
	// 51945B04-6AA6-410D-93BA-236E0248B104
	RequestId *string `json:"RequestId,omitempty" xml:"RequestId,omitempty"`
	// The logs of the service instance.
	ServiceInstancesLogs []*ListServiceInstanceLogsResponseBodyServiceInstancesLogs `json:"ServiceInstancesLogs,omitempty" xml:"ServiceInstancesLogs,omitempty" type:"Repeated"`
}

func (s ListServiceInstanceLogsResponseBody) String() string {
	return dara.Prettify(s)
}

func (s ListServiceInstanceLogsResponseBody) GoString() string {
	return s.String()
}

func (s *ListServiceInstanceLogsResponseBody) GetMaxResults() *int32 {
	return s.MaxResults
}

func (s *ListServiceInstanceLogsResponseBody) GetNextToken() *string {
	return s.NextToken
}

func (s *ListServiceInstanceLogsResponseBody) GetRequestId() *string {
	return s.RequestId
}

func (s *ListServiceInstanceLogsResponseBody) GetServiceInstancesLogs() []*ListServiceInstanceLogsResponseBodyServiceInstancesLogs {
	return s.ServiceInstancesLogs
}

func (s *ListServiceInstanceLogsResponseBody) SetMaxResults(v int32) *ListServiceInstanceLogsResponseBody {
	s.MaxResults = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBody) SetNextToken(v string) *ListServiceInstanceLogsResponseBody {
	s.NextToken = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBody) SetRequestId(v string) *ListServiceInstanceLogsResponseBody {
	s.RequestId = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBody) SetServiceInstancesLogs(v []*ListServiceInstanceLogsResponseBodyServiceInstancesLogs) *ListServiceInstanceLogsResponseBody {
	s.ServiceInstancesLogs = v
	return s
}

func (s *ListServiceInstanceLogsResponseBody) Validate() error {
	return dara.Validate(s)
}

type ListServiceInstanceLogsResponseBodyServiceInstancesLogs struct {
	// Compliance package risk types. For example, data security checks within a VPC, such as VpcDataRisk
	//
	// example:
	//
	// VpcDataRisk
	CompliancePackType *string `json:"CompliancePackType,omitempty" xml:"CompliancePackType,omitempty"`
	// Specific risk rule names for the compliance package. For example, ECS instance migration out of VPC - ecs-move-out-vpc.
	//
	// example:
	//
	// ecs-move-out-vpc
	ComplianceRuleName *string `json:"ComplianceRuleName,omitempty" xml:"ComplianceRuleName,omitempty"`
	// The log content.
	//
	// example:
	//
	// Start creating service instance
	Content *string `json:"Content,omitempty" xml:"Content,omitempty"`
	// The log type. Valid values:
	//
	// 	- serviceInstance: log generated by the service instance.
	//
	// 	- resource: log generated by ROS resources.
	//
	// example:
	//
	// serviceInstance
	LogType *string `json:"LogType,omitempty" xml:"LogType,omitempty"`
	// The resource ID.
	//
	// example:
	//
	// si-5c6525c0589545c3****
	ResourceId *string `json:"ResourceId,omitempty" xml:"ResourceId,omitempty"`
	// The resource type.
	//
	// example:
	//
	// ROS.Stack
	ResourceType *string `json:"ResourceType,omitempty" xml:"ResourceType,omitempty"`
	// The log source. Valid values:
	//
	// computeNest : logs of the deployment and upgrade of the service instance.
	//
	// application: logs generated by the application.
	//
	// actionTrail: logs generated by ActionTrail.
	//
	// compliancePack: Logs originating from the compliance package.
	//
	// ros: Logs originating from ROS.
	//
	// meteringDataï¼šLogs originating from the pay-as-you-go model.
	//
	// example:
	//
	// computeNest
	Source *string `json:"Source,omitempty" xml:"Source,omitempty"`
	// The state of the service instance. Valid values:
	//
	// 	- Creating: The service instance is being created.
	//
	// 	- Created: The service instance is created.
	//
	// 	- Deploying: The service instance is being deployed.
	//
	// 	- Deployed: The service instance is deployed.
	//
	// 	- DeployedFailed: The service instance failed to be deployed.
	//
	// 	- Expired: The service instance expired.
	//
	// 	- ExtendSuccess: The service instance is renewed.
	//
	// 	- Upgrading: The service instance is being updated.
	//
	// 	- UpgradeSuccess: The service instance is updated.
	//
	// example:
	//
	// Creating
	Status *string `json:"Status,omitempty" xml:"Status,omitempty"`
	// The timestamp of the service instance log.
	//
	// example:
	//
	// 2021-05-21T00:00:00Z
	Timestamp *string `json:"Timestamp,omitempty" xml:"Timestamp,omitempty"`
}

func (s ListServiceInstanceLogsResponseBodyServiceInstancesLogs) String() string {
	return dara.Prettify(s)
}

func (s ListServiceInstanceLogsResponseBodyServiceInstancesLogs) GoString() string {
	return s.String()
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) GetCompliancePackType() *string {
	return s.CompliancePackType
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) GetComplianceRuleName() *string {
	return s.ComplianceRuleName
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) GetContent() *string {
	return s.Content
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) GetLogType() *string {
	return s.LogType
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) GetResourceId() *string {
	return s.ResourceId
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) GetResourceType() *string {
	return s.ResourceType
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) GetSource() *string {
	return s.Source
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) GetStatus() *string {
	return s.Status
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) GetTimestamp() *string {
	return s.Timestamp
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) SetCompliancePackType(v string) *ListServiceInstanceLogsResponseBodyServiceInstancesLogs {
	s.CompliancePackType = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) SetComplianceRuleName(v string) *ListServiceInstanceLogsResponseBodyServiceInstancesLogs {
	s.ComplianceRuleName = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) SetContent(v string) *ListServiceInstanceLogsResponseBodyServiceInstancesLogs {
	s.Content = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) SetLogType(v string) *ListServiceInstanceLogsResponseBodyServiceInstancesLogs {
	s.LogType = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) SetResourceId(v string) *ListServiceInstanceLogsResponseBodyServiceInstancesLogs {
	s.ResourceId = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) SetResourceType(v string) *ListServiceInstanceLogsResponseBodyServiceInstancesLogs {
	s.ResourceType = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) SetSource(v string) *ListServiceInstanceLogsResponseBodyServiceInstancesLogs {
	s.Source = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) SetStatus(v string) *ListServiceInstanceLogsResponseBodyServiceInstancesLogs {
	s.Status = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) SetTimestamp(v string) *ListServiceInstanceLogsResponseBodyServiceInstancesLogs {
	s.Timestamp = &v
	return s
}

func (s *ListServiceInstanceLogsResponseBodyServiceInstancesLogs) Validate() error {
	return dara.Validate(s)
}
